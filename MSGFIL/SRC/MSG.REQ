!---
!
!	Require file for all modules in the message compiler
!
! IDENT V03-001
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:  MESSAGE compiler
!
! ABSTRACT:
!
!	This is the common require file for all modules in the
!	message compiler.
!
! ENVIRONMENT:
!
!	VAX/VMS operating system, unprivileged user mode utility,
!	operates at non-AST level.
!
! AUTHOR:  Tim Halvorsen,  Nov 1979
!
! MODIFIED BY:
!
!	V03-001	BLS0168		Benn Schreiber		 2-Apr-1982
!		Do not require MSGDEF as it is now in STARLET and LIB
!
!----


!
!	Define message structure definitions
!

REQUIRE 'LIB$:MSGINT.B32';		! Message compiler internal definitions


!
!	Define VMS block structures
!

STRUCTURE
	bblock [o, p, s, e; n] =
		[n]
		(bblock+o)<p,s,e>;


!
! $SHR_MESSAGES - a macro which defines facility-specific message codes
!	which are based on the system-wide shared message codes.
!
!	$SHR_MESSAGES( name, code, (msg,severity), ... )
!
!	where:
!	    "name" is the name of the facility (e.g., COPY)
!	    "code" is the corresponding facility code (e.g., 103)
!	    "msg" is the name of the shared message (e.g., BEGIN)
!	    "severity" is the desired message severity (e.g., 1, 0, 2)
!

MACRO
    $SHR_MESSAGES( FACILITY_NAME, FACILITY_CODE ) =
	LITERAL
	SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE, %REMAINING ); %,

    SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE) [ VALUE ] =
	SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, %REMOVE(VALUE) ) %,

    SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, MSG_ID, SEVERITY ) =
	%NAME(FACILITY_NAME,'$_',MSG_ID) = %NAME('SHR$_',MSG_ID) + FACILITY_CODE*65536 +
	    %IF %DECLARED(%NAME('STS$K_',SEVERITY))
		%THEN %NAME('STS$K_',SEVERITY)
		%ELSE SEVERITY %FI %;

!
!	Equated symbols
!

LITERAL
    true	= 1,			! Boolean true
    false	= 0,			! Boolean false
    ok		= 1;			! Success return code

!
!	Define CLI qualifier flags (see cli_flags)
!

LITERAL
    $EQULST (QUAL_,,0,1,
	(listing,),			! /LISTING qualifier present
	(object,),			! /OBJECT qualifier present
	(file,),			! /FILE qualifier present
	(mdl,),				! /MDL qualifier present
	(sdl,),				! /SDL qualifier present
	(input,),			! Input parameter present
	(symbols,),			! /SYMBOLS qualifier present
	(text,));			! /TEXT qualifier present


!
!	Define message codes.
!

$shr_messages(msg,151,
	(syntax,severe),	! Syntax error
	(openin,error),		! Unable to access input file
	(openout,severe),	! Unable to access output file
	(readerr,severe),	! Error reading input file
	(closedel,error),	! Unable to close input file
	(searchfail,error),	! Error searching for file
	(writeerr,error),	! Error writing file
	);

MACRO
    emsg(ident) =
	BEGIN
	%IF NOT %DECLARED(%NAME('msg$_',ident))
		%THEN EXTERNAL LITERAL %NAME('msg$_',ident); %FI
	%NAME('msg$_',ident)
	END%;
