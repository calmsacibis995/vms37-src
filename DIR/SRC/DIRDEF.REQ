!
! REQUIRE FILE FOR THE DIRECTORY COMMAND
!
!	Version 'V03-000'

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:  DELETE
!
! ABSTRACT:
!
!	This utility program deletes one or more user-specified files.
!
! ENVIRONMENT:
!
!	VAX/VMS operating system, unprivileged user mode utility,
!	operates at non-AST level.
!
! AUTHOR:  TIM HALVORSEN, DEC 1978
!
! MODIFIED BY:
!
!	V004	KFH0002		Ken Henderson	17-Mar-1982
!		Added DSP$W_GBC to show the global buffer count.
!
!	V003	KFH0001		Ken Henderson	 8-Jan-1982
!		Added DSP$W_PVN and DSP$B_NOAREAS fields to the DSP block
!		to let /FULL give Prologue and number of areas
!		for Indexed files.
!
!	V002	KRM0031		Karl Malik	29-Dec-1981
!		Added DSP$B_NODE, DSP$B_DEV and DSP$B_DIR
!		fields to the DSP block.
!
!	V001	TMH0001		Tim Halvorsen	14-Aug-1981
!		Add field in DSP block for backup date.
!		Add value to show_options for backup date.
!----


!
!	DEFINE VMS BLOCK STRUCTURES
!

STRUCTURE
	BBLOCK [O, P, S, E; N] =
		[N]
		(BBLOCK+O)<P,S,E>;


!
!	Macro to generate a string and descriptor
!

MACRO
    descriptor(string) =
	UPLIT(%CHARCOUNT(string), UPLIT BYTE (string)) %,

!
!	Macro to signal a condition to the handler
!

    write_message(msg) =
	SIGNAL(msg			! Pass the message code
	%IF %LENGTH GTR 1		! and if more than 1 arg
	    %THEN ,%REMAINING %FI) %,	! then the rest too

    write_warning(msg) =
!	SIGNAL(msg AND NOT sts$m_severity OR sts$k_warning	! Make warning
!	%IF %LENGTH GTR 1		! If more than one argument
!	%THEN ,%REMAINING %FI) %,	! then the rest too
	%,				! Null macro

!
!	$FAB_DEV - macro to access FAB$L_DEV bits of FAB block.
!

    $fab_dev(dev_bit) =
	$BYTEOFFSET(fab$l_dev),
	$BITPOSITION(%NAME('dev$v_',dev_bit)),1,0%,

!
! $SHR_MESSAGES - a macro which defines facility-specific message codes
!	which are based on the system-wide shared message codes.
!
!	$SHR_MESSAGES( name, code, (msg,severity), ... )
!
!	where:
!	    "name" is the name of the facility (e.g., COPY)
!	    "code" is the corresponding facility code (e.g., 103)
!	    "msg" is the name of the shared message (e.g., BEGIN)
!	    "severity" is the desired message severity (e.g., 1, 0, 2)
!

    $SHR_MESSAGES( FACILITY_NAME, FACILITY_CODE ) =
	LITERAL
	SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE, %REMAINING ); %,

    SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE) [ VALUE ] =
	SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, %REMOVE(VALUE) ) %,

    SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, MSG_ID, SEVERITY ) =
	%NAME(FACILITY_NAME,'$_',MSG_ID) = %NAME('SHR$_',MSG_ID) + FACILITY_CODE*65536 +
	    %IF %DECLARED(%NAME('STS$K_',SEVERITY))
		%THEN %NAME('STS$K_',SEVERITY)
		%ELSE SEVERITY %FI %;

!
!	EQUATED SYMBOLS
!

LITERAL
    TRUE	= 1,			! BOOLEAN TRUE
    FALSE	= 0,			! BOOLEAN FALSE
    OK		= 1,			! SUCCESS RETURN CODE
    ERROR	= 2;			! ERROR RETURN CODE

!
!	DEFINE VALUES FOR /DATE AND /SIZE QUALIFIFERS
!

LITERAL
    SHOW_ALL		= 1,		! /DATE:ALL, /SIZE:ALL
    SHOW_CREATED	= 2,		! /DATE:CREATED
    SHOW_MODIFIED	= 3,		! /DATE:MODIFIED
    SHOW_EXPIRED	= 4,		! /DATE:EXPIRED
    SHOW_BACKUP		= 5,		! /DATE:BACKUP

    SHOW_USED		= 2,		! /SIZE:USED
    SHOW_ALLOC		= 3;		! /SIZE:ALLOCATION


!
!	Define CLI qualifier flags (see dir$flags)
!

LITERAL
    $EQULST (QUAL_,,0,1,
	(all,),			! /ALL
	(before,),		! /BEFORE
	(brief,),		! /BRIEF
	(columns,),		! /COLUMNS
	(creation,),		! /CREATION
	(date,),		! /DATE
	(exclude,),		! /EXCLUDE
	(expiration,),		! /EXPIRATION
	(full,),		! /FULL
	(heading,),		! /HEADING
	(modified,),		! /MODIFIED
	(owner,),		! /OWNER
	(printer,),		! /PRINTER
	(protection,),		! /PROTECTION
	(since,),		! /SINCE
	(size,),		! /SIZE
	(total,),		! /TOTAL
	(trailing,),		! /TRAILING
	(versions,),		! /VERSIONS
	(fullspec,));		! If full file specs should be displayed


!
!	Define message codes.
!

$shr_messages(msg,121,
!	Note: CLI$_CONFQUAL used for conflicting qualifiers
	(syntax,severe),	! Syntax error
	(openin,error),		! Unable to access input file
	(openout,severe),	! Unable to access output file
	(closedel,error),	! Unable to close input file
	);


!
!	Define file display block which holds enough information
!	on a file for DIRECTORY to generate a file display.
!

MACRO
    dsp$l_flags 	= 0,0,32,0%,	! Flags describing file
    dsp$v_wild_dir	= 0,0,1,0%,	! True if wildcarded directories
    dsp$v_contig	= 0,1,1,0%,	! True if contiguous
    dsp$v_locked	= 0,2,1,0%,	! True if file deaccess locked
    dsp$v_nopriv	= 0,3,1,0%,	! No privilege to read info
    dsp$v_sqd		= 0,4,1,0%,	! True if seq. device (magtapes)
    dsp$v_contigb	= 0,5,1,0%,	! True if contiguous best try
    dsp$v_qio_out	= 0,6,1,0%,	! True if QIO outstanding for data
    dsp$l_blocks	= 4,0,32,0%,	! Blocks used in file
    dsp$l_alloc		= 8,0,32,0%,	! Blocks allocated
    dsp$w_extend	= 12,0,16,0%,	! Default extension quantity
    dsp$b_fns		= 14,0,8,0%,	! File name size
    dsp$q_credate	= 16,0,0,0%,	! Creation date
    dsp$l_cdt0		= 16,0,32,0%,
    dsp$l_cdt4		= 20,0,32,0%,
    dsp$q_revdate	= 24,0,0,0%,	! Revision date
    dsp$l_rdt0		= 24,0,32,0%,
    dsp$l_rdt4		= 28,0,32,0%,
    dsp$q_expdate	= 32,0,0,0%,	! Expiration date
    dsp$l_edt0		= 32,0,32,0%,
    dsp$l_edt4		= 36,0,32,0%,
    dsp$l_uic		= 40,0,32,0%,	! Owner UIC
    dsp$w_mem		= 40,0,16,0%,	! UIC member
    dsp$w_grp		= 42,0,16,0%,	! UIC group
    dsp$w_prot		= 44,0,16,0%,	! File protection
    dsp$w_fid_num	= 46,0,16,0%,	! File ID number
    dsp$w_fid_seq	= 48,0,16,0%,	! File ID sequence number
    dsp$w_fid_rvn	= 50,0,16,0%,	! File ID relative volume
    dsp$b_rfm		= 52,0,8,0%,	! Record format
    dsp$b_org		= 53,0,8,0%,	! File organization
    dsp$b_vfcsize	= 54,0,8,0%,	! VFC fixed area size
    dsp$b_rat		= 55,0,8,0%,	! Record attributes
    dsp$l_status	= 56,0,32,0%,	! File OPEN/QIO status
    dsp$b_bkt		= 60,0,8,0%,	! Bucket size (in blocks)
    dsp$b_nokeys	= 61,0,8,0%,	! Number of keys (ISAM only)
    dsp$w_recsize	= 62,0,16,0%,	! Maximum record size
    dsp$l_mrn		= 64,0,32,0%,	! Maximum record number
    dsp$t_dvi		= 68,0,0,0%,	! Device ident. (16 bytes)
    dsp$a_filename	= 84,0,0,0%,	! File name buffer (128 bytes)
    dsp$w_rvn		= 212,0,16,0%,	! Revision count
    dsp$q_bakdate	= 214,0,0,0%,	! Backup date quadword (8 bytes)
    dsp$l_bdt0		= 214,0,32,0%,
    dsp$l_bdt4		= 218,0,32,0%,
    dsp$b_node		= 222,0,8,0%,	! Filespec nodename length (1 byte)
    dsp$b_dev		= 223,0,8,0%,	! Filespec device length (1 byte)
    dsp$b_dir		= 224,0,8,0%,	! Filespec directory length (1 byte)
    dsp$w_pvn		= 225,0,16,0%,	! Prologue Version Number (2 bytes)
    dsp$b_noareas	= 227,0,8,0%,	! Number of areas in IDX files (1 byte)
    dsp$w_gbc		= 228,0,16,0%;	! Global Buffer Count

LITERAL
    dsp$c_length	= 230;		! Length of file data area (in bytes)


!
!	Define the format of the exclude filespec block
!

MACRO
    exc$l_link		= 0,0,32,0%,	! Link to next block
    exc$w_fns		= 4,0,16,0%,	! Length of file specification
    exc$l_fna		= 8,0,32,0%,	! Address of file specification
    exc$a_filename	= 12,0,0,0%;	! File spec buffer (128 bytes)

LITERAL
    exc$c_length	= 140;		! Length of block
