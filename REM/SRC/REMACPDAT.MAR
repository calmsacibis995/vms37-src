	.TITLE	REMACPDAT - GLOBAL DATA STORAGE FOR REMACP
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:	REMOTE I/O ACP
;
; ABSTRACT:
;	THIS MODULE CONTAINS ALL DATA USED GLOBALLY BY REMACP.
;
; ENVIRONMENT:
;	MODE = KERNEL
;--


; AUTHOR:	SCOTT G. DAVIS, CREATION DATE: 06-JUL-79
;
; MODIFIED BY:
;
;	V02-003	DJD2001 Darrell Duffy	5-Mar-1981
;		Allow configuration of maxlinks at initialization time.
;		RTTDRIVER calls NETDRIVER directly for IO
;
;	V02-002	SGD2001	Scott G. Davis	23-Sep-1980
;		Remove multiple devices, ignore unknown messages



;
; INCLUDE FILES
;
	$REMDEF

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;

	.PSECT	REM_IMPURE	NOSHR,NOEXE,RD,WRT

REM$GL_Q_HEAD::		.BLKL		; ACP QUEUE HEAD (IN AQB)
REM$GL_TEMPLATE::	.BLKL		; UCB template address
  
REM$GL_UCBVEC:: 	.BLKL		; POINTER TO UCB VECTOR
REM$GL_RBUFVEC:: 	.BLKL		; POINTER TO RBUF VECTOR
REM$GL_RIOSBVEC:: 	.BLKL		; POINTER TO RIOSB VECTOR
REM$GL_MBX_UNITS::	.BLKL		; Pointer to mailbox unit vector
REM$GL_CHANVEC:: 	.BLKL		; POINTER TO CHAN VECTOR
REM$GL_REJ_CHAN::	.BLKL		; I/O channel for connect rejects
					; The address is here.  The channel
					; is at the end of the channel vector

;*****
; The channel vector and the reject channel MUST be contiguous,
; since the search algorithms will want to find the reject channel.
;*****

REM$GW_MBX_CHAN::	.BLKW		; Mailbox channel
					; Max links to remote terminals
REM$GB_MAXLINKS::	.LONG		; Long to provide for result storage
					; of a conversion routine

	.PSECT	REM_PURE, NOWRT, NOEXE

;
; This vector controls building the various control vectors and
; setting their addresses in the above storage locations.
; The vector table is a string of pairs:  The address of the start
; of a vector area and the length of each element of the vector.
;

REM$GT_VECTBL::
	.LONG	REM$GL_UCBVEC,		4	; UCB addresses
	.LONG	REM$GL_RBUFVEC,		4	; Vector of receive buffers
	.LONG	REM$GL_RIOSBVEC, 	8	; Vector of iosbs
	.LONG	REM$GL_MBX_UNITS,	2	; Vector of mailbox units
;	*** The next item must be last since we use its end to place the
;	*** address of the REM$GL_REJ_CHAN
	.LONG	REM$GL_CHANVEC, 	2	; Vector of channels
	.LONG	0

REM$GL_VECSIZE::
	.LONG	4+4+8+2+2			; Sum of items required
						; Used to compute space
						; to obtain for all


	.END
