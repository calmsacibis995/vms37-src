MODULE READ( %TITLE 'DISPLAY THE CURRENT MESSAGE'
		IDENT = 'V03-000' ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	VAX/VMS MAIL UTILITY
!
! ABSTRACT:	DISPLAY THE TEXT IN THE CURRENT MAIL MESSAGE.
!
! ENVIRONMENT:	NATIVE/USER MODE
!
! AUTHOR: LEN KAWELL, CREATION DATE: 21-APR-1978
!
! MODIFIED BY:
!
!	V03-001	PCA001		Paul Anagnostopoulos	14-Jan-1982
!		Add some general mode addressing.
!
!	V02-004	LMK0003		Len Kawell		05-Sep-1981
!		Make descriptor a real descriptor.
!
!	V02-003	LMK0002		Len Kawell		28-Feb-1981
!		Add check for terminal device and missing BEGIN/END.
!
!	V02-002	LMK0001		Len Kawell		17-Jun-1980
!		Fix display of file names that are greater than 9 chars and
!		display of RUNOFF type output.
!--

!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
	LIBRARY 'SYS$LIBRARY:STARLET.L32';
	REQUIRE 'SRC$:MAILREQ.REQ';
!
! MACROS:
!

!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!
BIND
	MORE_MESSAGE = DESCRIPTOR(%CHAR(CR,LF),'Press RETURN for more...');
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
	MAIL$DECNEW_USER : NOVALUE,		! Decrement user's new mail cout
	MAIL$GET_MSG,				! Get next message record
	MAIL$NEW_MSG,				! Test if message is "new"
	MAIL$PUT_OUTPUT,			! Put to SYS$OUTPUT
	SCR$ERASE: ADDRESSING_MODE(GENERAL);	! Screen package erase screen
EXTERNAL
	MAIL$G_INPCHAR : BLOCK[,BYTE],		! Input device characteristics
	MAIL$Q_MSG_FILE: BLOCK[,BYTE],		! Current message file name
	MAIL$L_MSG_NUM:	 LONG,			! Current message number
	MAIL$W_MSG_RSIZ: WORD,			! Current message record size
	MAIL$L_MSG_RADR: LONG,			! Current message record addr
	MAIL$Q_USERNAME: BLOCK[,BYTE];		! User's usernname

GLOBAL ROUTINE MAIL$READ : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
! 	Displays the current record and all the records in the message
!	that will fit on the screen/page.
!
! INPUTS:
!
!	MAIL$W_MSG_RSIZ = Size of current message record.
!	MAIL$L_MSG_RADR = Address of current message record.
!	MAIL$Q_USERNAME = Current user's username.
!
! OUTPUTS:
!
!	Current message text displayed on SYS$OUTPUT.
!--
BEGIN
LOCAL
	DESC: BLOCK[8,BYTE],			! Record descriptor
	NUMLINES;				! Number of lines left on page
!
! If this is a "new" (previously unread) message, decrement user's new
! mail count.
!
IF MAIL$NEW_MSG()
THEN
	MAIL$DECNEW_USER(MAIL$Q_USERNAME);
!
! Erase the screen and get the number of lines per page/screen
!
SCR$ERASE(1,1);
MAIL$PUT_OUTPUT(DESCRIPTOR('!#* !AS #!UL'),	! Display file name and 
		72-.MAIL$Q_MSG_FILE[DSC$W_LENGTH],
		MAIL$Q_MSG_FILE,		! message number
		.MAIL$L_MSG_NUM);
NUMLINES = MAX(.(MAIL$G_INPCHAR[DIB$L_DEVDEPEND])
	    <$BITPOSITION(TT$V_PAGE),$FIELDWIDTH(TT$V_PAGE)> - 5,1);
!
! Loop, displaying each record and getting the next one, until the
! screen is filled or there aren't any more records
!
DO
	BEGIN
	DESC[DSC$B_DTYPE] = DESC[DSC$B_CLASS] = 0;
	DESC[DSC$W_LENGTH] = .MAIL$W_MSG_RSIZ;
	DESC[DSC$A_POINTER] = .MAIL$L_MSG_RADR;
	IF .MAIL$W_MSG_RSIZ GEQU 2
	AND .(.MAIL$L_MSG_RADR + .MAIL$W_MSG_RSIZ - 2)<0,16> EQLU (CR OR LF^8)
	THEN DESC[DSC$W_LENGTH] = .DESC[DSC$W_LENGTH] - 2;
	MAIL$PUT_OUTPUT(DESC);
	IF NOT MAIL$GET_MSG()
	THEN
		RETURN;
	!
	! Check if input device is a scope terminal
	!
	IF .MAIL$G_INPCHAR[DIB$B_DEVCLASS] EQL DC$_TERM
	AND .(MAIL$G_INPCHAR[DIB$L_DEVDEPEND])<$BITPOSITION(TT$V_SCOPE),1>
	THEN
		BEGIN
		!
		! Check if first character of record is a form-feed
		!
		IF (.MAIL$W_MSG_RSIZ NEQ 0) AND
		   (CH$RCHAR(.MAIL$L_MSG_RADR) EQLU FF)
		THEN
			!
			! Skip over the form-feed.  If there is nothing left
			! in the record, get another one.  If there is data
			! left, tell user there is more and exit.
			!
			BEGIN
			MAIL$W_MSG_RSIZ = .MAIL$W_MSG_RSIZ - 1;
			MAIL$L_MSG_RADR = .MAIL$L_MSG_RADR + 1;
			IF .MAIL$W_MSG_RSIZ EQL 0
			THEN	BEGIN
				IF MAIL$GET_MSG()
				THEN
					MAIL$PUT_OUTPUT(MORE_MESSAGE);
				END
			ELSE
				MAIL$PUT_OUTPUT(MORE_MESSAGE);
			RETURN;
			END;
		NUMLINES = .NUMLINES - 1;	! Decrement number lines page
		END
	END
UNTIL .NUMLINES LEQ 0;
MAIL$PUT_OUTPUT(MORE_MESSAGE)			! Tell user there is more
END;

END
ELUDOM
