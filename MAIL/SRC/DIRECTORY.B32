MODULE DIRECTORY( %TITLE 'DISPLAY SUMMARY OF EACH MESSAGE'
		IDENT = 'V03-000' ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	VAX/VMS MAIL UTILITY
!
! ABSTRACT:	DISPLAY A SUMMARY OF EACH MESSAGE IN THE CURRENT FILE.
!
! ENVIRONMENT:	NATIVE/USER MODE
!
! AUTHOR: LEN KAWELL, CREATION DATE: 20-JUN-1979
!
! MODIFIED BY:
!
!	V03-001	PCA001		Paul Anagnostopoulos	14-Jan-1982
!		Add some general mode addressing.
!
!	V02-002	LMK0002		Len Kawell		28-Feb-1981
!		Fix page length check to check if device is a terminal.
!
!	V02-001	LMK0001		Len Kawell		17-Jun-1980
!		Fix display of file names that are longer than 9 chars.
!--

!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
	LIBRARY 'SYS$LIBRARY:STARLET.L32';
	REQUIRE 'SRC$:MAILREQ.REQ';
!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!
OWN
	SENDER: BLOCK[8,BYTE]			! Sender descriptor
		PRESET(	[DSC$B_DTYPE] = DSC$K_DTYPE_T,
			[DSC$B_CLASS] = DSC$K_CLASS_D),
	SUBJ:   BLOCK[8,BYTE]			! Subject descriptor
		PRESET(	[DSC$B_DTYPE] = DSC$K_DTYPE_T,
			[DSC$B_CLASS] = DSC$K_CLASS_D),
	DATE:   BLOCK[8,BYTE]			! Date descriptor
		PRESET(	[DSC$B_DTYPE] = DSC$K_DTYPE_T,
			[DSC$B_CLASS] = DSC$K_CLASS_D);
BIND
	MORE_MESSAGE = DESCRIPTOR(%CHAR(CR,LF),'Press RETURN for more...');
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
	MAIL$FIND_MSG,				! Find next message
	MAIL$INFO_MSG,				! Get current message info
	MAIL$PUT_OUTPUT,			! Put to SYS$OUTPUT
	SCR$ERASE: ADDRESSING_MODE(GENERAL);	! Screen package erase screen
EXTERNAL
	MAIL$G_INPCHAR : BLOCK[,BYTE],		! Input device characteristics
	MAIL$Q_MSG_FILE: BLOCK[,BYTE],		! Current message file name
	MAIL$L_MSG_NUM:	 LONG;			! Current message number

GLOBAL ROUTINE MAIL$DIRECTORY : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Displays a summary of each of the messages in the current
!	message file.
!
! INPUTS:
!
!	MAIL$W_MSG_RSIZ = Size of current message record.
!	MAIL$L_MSG_RADR = Address of current message record.
!
! OUTPUTS:
!
!	NONE
!
!--
BEGIN
LOCAL
	PTR,					! Pointer
	SENDER_SIZ,				! Sender size
	SENDER_PTR,				! Sender pointer
	LAST_SIZ,				! Last size found
	LAST_PTR,				! Last pointer
	NUMLINES;				! Number of lines left on page

!
! Erase the screen and get the number of lines per page/screen
!
SCR$ERASE(1,1);
MAIL$PUT_OUTPUT(DESCRIPTOR('!#* !AS'),		! Display file name
		80-.MAIL$Q_MSG_FILE[DSC$W_LENGTH],
		MAIL$Q_MSG_FILE);
MAIL$PUT_OUTPUT(DESCRIPTOR('    # From                 Date         Subject'));
MAIL$PUT_OUTPUT(DESCRIPTOR(' '));
NUMLINES = MAX(.(MAIL$G_INPCHAR[DIB$L_DEVDEPEND])
	       <$BITPOSITION(TT$V_PAGE),$FIELDWIDTH(TT$V_PAGE)> - 7,1);
!
! Loop, displaying a summary of each message and getting the next one, 
! until the screen is filled or there aren't any more messages.
!
DO
	BEGIN
	IF NOT MAIL$INFO_MSG(SENDER,SUBJ,DATE)
	THEN
		RETURN;
	!
	! Strip all but the last node name from the sender's name
	!
	LAST_SIZ = SENDER_SIZ = .SENDER[DSC$W_LENGTH];
	LAST_PTR = SENDER_PTR = .SENDER[DSC$A_POINTER];
	WHILE NOT CH$FAIL(
		PTR = CH$FIND_SUB(.LAST_SIZ,.LAST_PTR,
	  			  %CHARCOUNT('::'),UPLIT('::')))
	DO	BEGIN
		SENDER_SIZ = .LAST_SIZ;
		SENDER_PTR = .LAST_PTR;
		LAST_SIZ = .LAST_SIZ - (.PTR + %CHARCOUNT('::') - .LAST_PTR);
		LAST_PTR = .PTR + %CHARCOUNT('::');
		END;
	!
	! Display the summary for this message
	!
	MAIL$PUT_OUTPUT(DESCRIPTOR('!5UL !20AD !12AS !AD'),
			.MAIL$L_MSG_NUM,
			.SENDER_SIZ,
			.SENDER_PTR,
			DATE,
			MIN(.SUBJ[DSC$W_LENGTH],40),
			.SUBJ[DSC$A_POINTER]);
	IF NOT MAIL$FIND_MSG(0,0,0)
	THEN
		RETURN;
	!
	! Check if output device is a scope terminal
	!
	IF .MAIL$G_INPCHAR[DIB$B_DEVCLASS] EQL DC$_TERM
	AND .(MAIL$G_INPCHAR[DIB$L_DEVDEPEND])<$BITPOSITION(TT$V_SCOPE),1>
	THEN
		NUMLINES = .NUMLINES - 1;	! Decrement number lines page
	END
UNTIL .NUMLINES LEQ 0; 
MAIL$PUT_OUTPUT(MORE_MESSAGE)			! Tell user there is more
END;

END
ELUDOM
