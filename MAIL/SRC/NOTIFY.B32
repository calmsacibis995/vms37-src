MODULE NOTIFY( %TITLE 'NOTIFY LOGGED ON USER OF NEW MAIL'
		IDENT = 'V03-000' ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	VAX/VMS MAIL UTILITY
!
! ABSTRACT:	Notify logged on user that new mail exists
!
! ENVIRONMENT:	NATIVE/USER MODE
!
! AUTHOR: Len Kawell, CREATION DATE: 21-APR-1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
	LIBRARY 'SYS$LIBRARY:STARLET.L32';
	REQUIRE 'SRC$:MAILREQ.REQ';
!
! MACROS:
!

!
! EQUATED SYMBOLS:
!
LITERAL
	BELL	= 7;				! ASCII bell

!
! OWN STORAGE:
!
OWN
	PID,					! Process id
	USERNAME_LEN,				! Username descriptor
	USERNAME_BUFF:	BLOCK[12,BYTE],		! Username buffer
	TERMINAL_BUFF:	BLOCK[8,BYTE],		! Terminal name buffer
	TERMINAL_DESC:	BLOCK[8,BYTE];		! Terminal name descriptor
BIND
	GETJPIITMLST =				! $GETJPI item list
		 UPLIT(	WORD(12),		! Length of buffer
			WORD(JPI$_USERNAME),	! Username item code
			LONG(USERNAME_BUFF),	! Address of buffer
			LONG(USERNAME_LEN),	! Address of length buff
			WORD(8),		! Length of buffer
			WORD(JPI$_TERMINAL),	! Terminal item code
			LONG(TERMINAL_BUFF),	! Address of buffer
			LONG(TERMINAL_DESC),	! Address of length buff
			LONG(0)			! End of list
			);
!
! EXTERNAL REFERENCES:
!
EXTERNAL
	MAIL$Q_USERNAME;			! Current user's name


GLOBAL ROUTINE MAIL$NOTIFY(USERNAME) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!	Loops through all the processes on the system, and if a process's
!	user name matches the specified username, and the process is an
!	interactive process, a new mail message is broadcast to the terminal.
!
! INPUTS:
!
!	USERNAME = Address of username descriptor.
!
!	MAIL$Q_USERNAME = Sender's username descriptor.
!
! OUTPUTS:
!
!	New mail message broadcast to user's terminal, if logged on.
!--
BEGIN
MAP
	USERNAME : REF BLOCK[8,BYTE];		!
LOCAL
	MSG_BUFF:	VECTOR[MAIL$K_INBUFFSZ],! Message buffer
	MSG_BUFF_DESC:	BLOCK[8,BYTE],		! Message buffer descriptor
	STATUS;					! Routine status

MSG_BUFF_DESC[DSC$W_LENGTH] = MAIL$K_INBUFFSZ;	! Create message buffer desc
MSG_BUFF_DESC[DSC$A_POINTER] = MSG_BUFF;	!
$FAO(	DESCRIPTOR(%CHAR(BELL),'New mail from !AS'), ! Format New mail message
	MSG_BUFF_DESC,
	MSG_BUFF_DESC,
	MAIL$Q_USERNAME);

PID = -1;					! Initialize wildcard PID
TERMINAL_DESC[DSC$A_POINTER] = TERMINAL_BUFF;	! Initialize terminal 
DO
	BEGIN
	STATUS = $GETJPI(EFN=1,			! Get next process's info
			 PIDADR=PID,		!
			 ITMLST=GETJPIITMLST);	!
	IF .STATUS				! If success,
	THEN	BEGIN
		$WAITFR(EFN=1);			! Wait for the info
		IF (.TERMINAL_DESC[DSC$W_LENGTH] NEQ 0) ! If interactive job
		AND (CH$EQL(.USERNAME[DSC$W_LENGTH], ! and username matches
			   .USERNAME[DSC$A_POINTER],
			   .USERNAME_LEN,
			   USERNAME_BUFF,' '))
		THEN	$BRDCST(MSGBUF=MSG_BUFF_DESC, ! Broadcast message
				DEVNAM=TERMINAL_DESC);
		END
	END
UNTIL .STATUS EQL SS$_NOMOREPROC;		! Continue until all processes
						! are checked
END;

END
ELUDOM
