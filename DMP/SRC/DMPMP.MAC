	IDENT 0002,DMPMP,<DUMP MAP AREA>
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; PAUL J KOBAR	10-AUG-78
;
; MODIFIED BY:
;
;	0002	ACG0153		Andrew C. Goldstein,	29-Feb-1980  20:07
;		Fix handling of extension headers
;
;+
; DMPMP
;
; FORMAT AND PRINT THE INFORMATION IN THE MAP AREA 
;
; INPUT
;	R5 = HEADER BLOCK BUFFER ADDRESS
;
; OUTPUT
;	R0 = EXTENSION SEGMENT FILE NUMBER
;	R1 = EXTENSION SEGMENT FILE SEQUENCE
;
;-

;
;	DEFINE TEXT FORMATS FOR $EDMSG (IN EDPUT)
;
	.NLIST	BEX
	PURE.D


;
;	DEFINE MAP AREA LABEL TEXT
;
MAP0:	.ASCII /MAP AREA%N/
MAP1:	.ASCII /	M.ESQN		%B%N/
MAP2:	.ASCII /	M.ERVN		%B%N/
MAP3:	.ASCII /	M.EFNU,%N/
MAP32:	.ASCII /	M.EFSQ		(%O,%O)%N/
MAP4:	.ASCII /	M.CTSZ		%B%N/
MAP5:	.ASCII /	M.LBSZ		%B%N/
	.ASCIZ //
MAP6:	.ASCII /	M.USE		%B = %D.%N/
MAP7:	.ASCII /	M.MAX		%B = %D.%N/
MAP8:	.ASCII /	M.RTRV%N/
MAP81:	.ASCII /	SIZE	LBN%N/
	.ASCIZ //
MAP82:	.ASCII /	%D.	H:%B L:%P = %T.%N/
	.ASCIZ //


CHK0:	.ASCII /CHECKSUM%N/
CHK1:	.ASCII /	H.CKSM		%P%N/
	.ASCIZ //
CHK2:	.ASCIZ /** INVALID CHECKSUM - SHOULD BE %P%N/

	.EVEN

;
	PURE.I

DMPMP::

;
;MAP AREA
;	R4=ADDRESS OF MAP AREA IN BLOCK BUFFER
;
;FORMAT NEXT RECORD
;	M.ESQN,M.ERVN,M.EFNU,M.EFSQ,M.CTSZ,M.LBSZ
;

	MOV	#MAP0,R1
	CLR	R4
	BISB	H.MPOF(R5),R4	;ADJUST TO MAP AREA
	ASL	R4
	ADD	R5,R4
	MOV	#6.,R3		;LOOP TO INIT BYTE ADDRS
	MOV	ARGBLK,R2
LMAP:	MOV	R4,(R2)+
	SOB	R3,LMAP
	MOV	ARGBLK,R2
	ADD	#M.ESQN,(R2)+
	ADD	#M.ERVN,(R2)+
	MOV	M.EFNU(R4),(R2)+
	MOV	M.EFSQ(R4),(R2)+
	ADD	#M.CTSZ,(R2)+
	ADD	#M.LBSZ,(R2)+
	MOV	ARGBLK,R2
	CALL	EDPUT

;
;FORMAT NEXT RECORD
;	M.USE,M.MAX,RETRIEVAL POINTER HEADINGS
;
	MOV	#MAP6,R1
	MOV	R4,(R2)
	ADD	#M.USE,(R2)
	CLR	2(R2)
	MOVB	M.USE(R4),2(R2)
	MOV	R4,4(R2)
	ADD	#M.MAX,4(R2)
	CLR	6(R2)
	MOVB	M.MAX(R4),6(R2)
	CALL	EDPUT
;
;FORMAT NEXT RECORD
;	RETRIEVAL POINTERS
;
	CLR	R3
	BISB	M.USE(R4),R3	;USED WORDS
	BEQ	CHKSUM		;IF 0 GO TO CHECK SUM RECORD
	BIC	#177400,R3		;CLEAR HI BYTE
	ASR	R3		;LINES OF OUTPUT (WORDS /2)
	ADD	#M.RTRV,R4	;POINT TO RETRIEVAL PTRS

	MOV	R2,6(R2)	;ADJUST 4TH ENTRY IN ARGBLK (R2+6),
	ADD	#12,6(R2)	;TO POINT TO 6TH ENTRY (R2+12)
RTRV0:	MOV	ARGBLK,R2
	MOV	#MAP82,R1

	CLR	(R2)		;FIRST RETRIEVAL PTR
	MOVB	1(R4),(R2)	;COUNT FIELD
	INC	(R2)
	MOV	R4,2(R2)	;BYTE ADDR HI LBN IN ARGBLK
	MOV	2(R4),4(R2)	;LO LBN IN ARGBLK
	CLR	12(R2)		;FOR HI LBN
	MOVB	(R4),12(R2)	;HI LBN
	MOV	2(R4),14(R2)	;LO LBN FOR DBL PREC OUTPUT


	CALL	EDPUT
	ADD	#4.,R4
	SOB	R3,RTRV0

;
;FORMAT NEXT RECORD
;	H.CKSM
;
CHKSUM:	MOV	#CHK0,R1
	MOV	H.CKSM(R5),(R2)
	CALL	EDPUT

; CALCULATE AND COMPARE CHECKSUM
	MOV	#255.,R3
	CLR	R1
	MOV	R5,R0
CHKTST:	ADD	(R0)+,R1
	SOB	R3,CHKTST
	CMP	R1,H.CKSM(R5)
	BEQ	CHKEND
	MOV	R1,(R2)
	MOV	#CHK2,R1
	CALL	EDPUT
CHKEND:

; RETURN FILE NUMBER AND SEQUENCE NUMBER
;
	CLR	R2
	BISB	H.MPOF(R5),R2
	ASL	R2
	ADD	R5,R2
	MOV	M.EFNU(R2),R0
	MOV	M.EFSQ(R2),R1
	MOVB	M.ERVN(R2),R2
	BIC	#^C377,R2
	RETURN
	.END
