	IDENT	0003.2,DUMDUM,<DMP DUMP ROUTINE>
;
; ALTERED WEDNESDAY 30-JAN-74 21:10
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN 30-MARCH-73
; FOR RSX11M R.HEINEN 20-JUL-74 
; ALTERED 4/1/76 R.HEINEN ADD HEX DMP MODE /HX/LW/WD
; ALTERED 4/10/76 R.HEINEN ADD RECORD DMP MODE /RC
;	15-JUL-77  G.RITTENBURG
;
;	GR001  EXIT WITH STATUS ADDED
;                                                                               ;**NEW**
;
;	PAUL KOBAR	10-AUG-78
;		PK001 -- ADDED CODE FOR /HD VALUES AND /HF SWITCH
;
;

	.SBTTL	INITIALIZE THE DUMP HEADER

	PURE.I

;
; INITIALIZE FOR DUMPING THE FILE
DUMP::	BIT	#LBBIT,DMPCTL	; IF /LB THEN SKIP
	BNE	50$
	MOV	#FDBIN,R0
	ADD	FBLOCK,BLKNUM+2	; INSERT FIRST BLOCK NUMBER INTO DOUBLE WORD
	ADC	BLKNUM
	MOV	BLKNUM,F.BKVB(R0)
	MOV	BLKNUM+2,F.BKVB+2(R0)
	MOV	#MOPRM,R5	;R5=PARAM BLOCK POINTER
	MOV	#FDBIN+F.DVNM,(R5)+ ;ADDRESS OF DEVICE NAME
	MOV	FDBIN+F.UNIT,(R5)+ ;UNIT NUMBER
	MOV	#FM01MG,R1	;PREPARE TO USE BLOCK MODE HEADER
	BIT	#LBNBIT,DMPCTL
	BNE	20$		;BRANCH IF LOGICAL BLOCK MODE
;
; SET UP FOR REST OF FILE DUMP HEADER
;
	MOV	#IFNPT+N.DIRD,R4	; POINT TO DIRECTORY STRING
	CALL	.GDRNM
	MOV	#FDBIN+F.FNAM,R3 ;R3=ADDRESS OF FILE NAME
	MOV	#S.FNTY+1,R2	;WORD CNT OF FILE NAME, TYPE, VER
10$:	MOV	(R3)+,(R5)+	;PUT FILE NAME, TYPE, AND VERSION
	SOB	R2,10$
	MOV	#FDBIN+F.FNB,R3	;R3=ADDRESS OF FILE ID
	MOV	(R3)+,(R5)+	;MOVE FILE ID TO PARAM BLOCK
	MOV	(R3)+,(R5)+
	MOV	(R3)+,(R5)+
	MOV	#FM02MG,R1
20$:	MOV	#HEAD1,R0
	MOV	#MOPRM,R2
	CALL	$EDMSG		;GENERATE THE HEADER MESSAGE
	CMP	#MAXHED,R1
	BGE	25$
	ERROUT	FA01		;HEADER MESSAGE OVERFLOW
	MOV	#4,.EXSTS	;SEVERE ERROR
	JMP	EXIT
25$:	ADD	#HEAD1-HEADER,R1
	MOV	R1,HEADSZ	;SAVE HEADER SIZE
;
	.SBTTL	DUMP THE FILE HEADER IF REQUESTED
;
; SEE IF USER ASKED TO HAVE THE FILE HEADER DUMPED TOO
	BIT	#HDBIT,DMPCTL
	BEQ	70$		;BRANCH IF NO
	PUT$	#FDBOUT,#HEADER,HEADSZ
	BCC	30$
	ERROUT	ER10,0,0
	MOV	#2,.EXSTS	;FATAL ERROR
	JMP	RSTART
30$:	MOV	#MOPRM,R2	;R2=PARAM BLOCK ADDRESS
	MOV	#FM03SZ,@R2	;FORM "FILE HEADER" MESSAGE
	MOV	#FM03MG,2(R2)
	MOV	#FLHDMG,R1
	CALL	EDPUT
;
; READ THE HEADER
50$:	MOV	#FDBIN,R0
	MOV	#IO.RAT,R1
	MOV	#3,R2
	MOV	#RHDR,R3
	CALL	.XQIO
	BCC	60$
55$:
	ERROUT	ER11,0,0	;FAILED TO READ ATTRIBUTES
70$:	JMP	RNXTB
60$:	BIT	#LBBIT,DMPCTL	; IF /LB THEN SKIP
	BNE	90$
	CMPB	#'F,HDRTYP	;FORMAT				
	BEQ	80$						
	CMPB	#'U,HDRTYP	;UNFORMAT			
	BEQ	85$						
	ERROUT	ER18						
	MOV	#0,.EXSTS					
80$:
	MOV	#INBUF,R0					
	MOV	#MOPRM,R1					
	CMP	#000401,H.FLEV(R0)	; IS THIS FILES-11 ODS1?
	BNE	82$			; NO IF NE
	JMP	RDMPHD		;FORMAT HEADER			
82$:
	CMP	#001001,H.FLEV(R0)	; IS THIS FILES-11 ODS2?
	BNE	85$			; NO IF NE
	JMP	RDMPH2			; DUMP ODS2 HEADER
85$:	MOVB	#'F,HDRTYP	;RESET DEFAULT TYPE		
	MOV	#FDBIN,R0
	MOV	#IO.RAT,R1
	MOV	#3,R2
	MOV	#RATTBK,R3
	CALL	.XQIO
	BCS	55$
	MOV	FDBIN+F.FNB+N.FID+00,INBUF+AB.FNU+00
	MOV	FDBIN+F.FNB+N.FID+02,INBUF+AB.FNU+02
	MOV	FDBIN+F.FNB+N.FID+04,INBUF+AB.FNU+04
	MOV	FDBOUT+F.NRBD+2,R0
	MOV	#INBUF,R1
	MOV	#STBLK,R2
	MOV	#3,R3
	CALL	$FILMG
	MOVB	#CR,(R0)+
	MOVB	#LF,(R0)+
	MOVB	#LF,(R0)+
	ADD	#3,R1
	PUT$	#FDBOUT,,R1
	BCC	61$
	ERROUT	ER10,0,0
	MOV	#2,.EXSTS	; FATAL ERROR
	JMP	RSTART
61$:
	MOV	#FDBIN,R0
	MOV	#IO.RAT,R1	; READ REAL FILE HEADER
	MOV	#3,R2
	MOV	#RHDR,R3
	CALL	.XQIO
	BCS	55$
	MOV	BYTNUM,-(SP)
	CLR	BYTNUM
	MOV	DMPCTL,-(SP)
	CLR	DMPCTL
	MOV	#512.,IOSTBK+2	; SET BYTE COUNT FOR 1 BLOCK
	JMP	ROHEAD		; DUMP THE FILE HEADER
;
90$:
	MOV	#MOPRM,R2
	MOV	STBLK+2,R1	; GET LOW LBN
	MOV	R1,(R2)		; INTO PARAMETER BLOCK
	MOV	STBLK,R0	; AND HIGH LBN
	MOV	R0,2(R2)
	CLR	4(R2)
	BIS	R0,R1		; CHECK IF CONTIGUOUS
	BEQ	91$		; IF YES MENTION IT
	ADD	#3,4(R2)
91$:	MOV	#CONTIG,6(R2)
	MOV	#FLBLMG,R1
	MOV	FDBOUT+F.NRBD+2,R0
	CALL	$EDMSG
	PUT$	#FDBOUT,,R1
	JMP	RSTART

	.END

