	IDENT	0002,DMPHR2,<FORMAT ODS2 HEADER BLOCK>
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; PAUL J KOBAR	10-AUG-78
;
; MODIFIED BY:
;
;	0002	ACG0153		Andrew C. Goldstein,	29-Feb-1980  20:03
;		Fix handling of extension headers
;
;+
;	DMPHR2
;
;	FORMATTED HEADER OUTPUT ROUTINE
;
;	THIS ROUTINE FORMATS AND PRINTS OUT THE
;	FILE HEADER LABELED WITH FILE-HEADER OFFSETS.
;
; INPUTS
;	R0 = ADDRESS OF BLOCK BUFFER OF HEADER
;	R1 = ADDRESS OF BUFFER FOR $EDMSG (IN EDPUT)
;
; OUTPUTS
;	NONE
;
; NOTE: REGISTERS R3-R5 ARE SAVED
;-

;
;
	.NLIST	BEX
;
; DEFINE ODS2 HEADER OFFSETS
;
	.MCALL	FHDL2$
;
	FHDL2$
;


;+
;	CONVERSION CODE
;
; CONVERT THE FIELDS WITHIN THE BLOCK TO THE FORMATTED OUTPUT
; LINES IN GROUPS.  EACH GROUP GENERATES A RECORD BY:
;	1) MOVING FORMAT ADDRESS TO R1
;	2) PLACING VALUES IN ARGBLK
;	3) MOVING ARGBLK ADDRESS TO R2
;	4) CALLING EDPUT (IN DMP) TO FORMAT AND WRITE RECORD
;-
	PURE.I
	
DMPHR2::
	JSR	R5,$SAVRG	;SAVE THE REGS R3-R5
;
; SET UP REGISTERS
;
	MOV	R0,R5
	MOV	R1,ARGBLK
;
;HEADER AREA
;
DMPNXT:	CALL	DMPH21
	CALL	DMPH22

;
;IDENTIFICATION AREA
;

	CALL	DMPID2

;
;MAP AREA
;
	CALL	DMPMP2

;
; TEST FOR MULTIPLE HEADER
;
	MOV	R0,EXFID	;FID OF EXTENSION HEADER
	MOV	R1,EXFID+2
	MOV	R2,EXFID+4
	BIS	R2,R0
	BEQ	DMPEND
	MOV	#FDBIN,R0
	MOV	#FDBIN+F.FNB,R1
	MOV	#7,FDBIN+F.LUN
	CALL	.ASLUN		;USE ANOTHER LUN FOR EX HEADERS
	MOV	#FDBIN,R0
	MOV	#IO.RAT,R1
	MOV	#3,R2
	MOV	#RATTEX,R3
	CALL	.XQIO		;READ ATTRIBURES (WHOLE HEADER)
	BCC	DMPNXT
	ERROUT	ER11,0,0

DMPEND:
	MOV	#FDBIN,R0
	MOV	#FDBIN+F.FNB,R1
	MOV	#3,FDBIN+F.LUN
	CALL	.ASLUN		;RESTORE PREVIOUS LUN
	RETURN
.PAGE
	.SBTTL	BITDES
;
; SUBROUTINE TO DESCRIBE BIT SETTINGS OF A FLAG WORD
;
; INPUTS:
;
;	R0 = ADDRESS TO PUT OUTPUT STRING
;	R1 = ADDRESS OF BITS DESCRIPTOR TABLE
;	R3 = FLAG WORD
;
; OUTPUTS:
;
;	R0 = ADDRESS OF BYTE FOLLOWING OUTPUT STRING
;	R1 = SIZE OF OUTPUT STRING
;
;
BITDES::
	JSR	R5,$SAVRG	; SAVE R3 - R5
	MOV	#1,R5		; INITIALISE OUTPUT STRING COUNT
	MOVB	#' ,(R0)+	; AND STRING
10$:
	TST	(R1)		; END OF BIT DESCRIPTOR TABLE?
	BEQ	40$		; YES IF EQ
	BIT	(R1)+,R3	; IS THIS BIT SET IN FLAG WORD?
	BEQ	30$		; NO IF EQ
	CMP	R5,#1		; IS THIS FIRST DESCRIPTION?
	BEQ	20$		; YES IF EQ
	MOVB	#'!,(R0)+	; SEPARATE PREVIOUS DESCRIPTION WITH '!'
	INC	R5		; AND INCREMENT OUTPUT STRING SIZE
20$:
	MOV	(R1)+,R4	; GET SIZE OF DESCRIPTION STRING
25$:
	MOVB	(R1)+,(R0)+	; COPY DESCRIPTION TO OUTPUT STRING
	INC	R5		; INCREMENT OUTPUT STRING SIZE
	SOB	R4,25$		; ALL DONE IF EQ
	BR	35$		; BACK FOR NEXT BIT
30$:
	ADD	(R1)+,R1	; ADVANCE POINTER OVER DESCRIPTION
35$:
	INC	R1		; ADJUST POINTER TO NEXT
	BIC	#1,R1		; WORD (EVEN ADDRESS) BOUNDARY
	BR	10$		; BACK FOR NEXT BIT
40$:
	MOV	R5,R1		; RETURN OUTPUT STRING LENGTH
	RETURN
;
	.END
