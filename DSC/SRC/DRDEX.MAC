	$BEGIN	DRDEX,0006,<READ EXTENSION HEADER FROM DISK>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  16-AUG-76  2:47

;+
;
; *** - $DRDEX	READ EXTENSION HEADER FROM DISK
;
; THIS ROUTINE READS THE NEXT EXTENSION HEADER OF THE CURRENT INPUT
; FILE, IF IT EXISTS.
;
; INPUTS:
;
;	CURRENT FILE HEADER IN $IHBF
;
; OUTPUTS:
;
;	CC - C	CLEAR IF EXTENSION HEADER READ
;		SET IF ERROR OR NONE
;	NEW FILE HEADER IN $IHBF AND $BUF2
;
;-

$DRDEX::
	$CALL $FILSZ <,,,,,#$IHBF>	; COMPUTE SIZE OF PRESENT HEADER
	LET H.VBN(R5) := H.VBN(R5) + R1	; ADD TO STARTING VBN
	LET H.VBN+2(R5) := H.VBN+2(R5) + CARRY + R0
	LET R4 := #$IHHD		; GET HEADER BCB
	LET B.STAT(R4) := #0		; RELEASE OLD HEADER
	$CALL $RDNXH <,,,,R4,R5>	; TRY TO READ HEADER
	ON.ERROR
	  ERRP ER.RXD			; PRINT MESSAGE
	  RETURN
	END

	$CALL $FILSZ <,,,,,R5>		; COMPUTE SIZE OF NEW HEADER
	LET $IHVBN := $IHVBN + R1	; AND ACCUMULATE IT
	LET $IHVBN+2 := $IHVBN+2 + CARRY + R0
	$CALL $BUFCK <,,,,#$B2HD>	; GET I/O BUFFER  
	LET B.STAT(R4) := #1		; MARK BUFFER BUSY
	LET R0 := #$BUF2		; POINT TO BUFFER DATA 
	LET (R0)+ := #512.		; BYTE COUNT
	LET (R0)+ := #PF.HDR		; FLAG AS FILE HEADER
	LET (R0)+ := #0			; VBN
	LET (R0)+ := #0
	LET (R0)+ := $FID		; USE FILE ID OF
	LET (R0)+ := $FID+2		; PRIMARY HEADER
	LET (R0)+ := $FID+4
	LET (R0)+ := #0
	THRU R1 := #256.
	  LET (R0)+ := (R5)+		; COPY HEADER FROM $IHBF
	END LOOP
	RETURN



	.END
