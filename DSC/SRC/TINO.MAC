	$BEGIN TINO,0015,<INIT. O.P. TAPE>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  27-AUG-76  20:05
;ALTERED DEC.22,1976 BY G.RITTENBURG
;
; GR001---G.RITTENBURG AUG.14,1978
; CORRECTION FOR REWIND IN TPRDY MODULE
;


	.MCALL  QIOW$C




;
; MAGTAPE CHARACTERISTICS BITS
;
CH.160 = 4000			; 1600 BPI DENSITY

;
; PROTOTYPE HDR1 TAPE FILE HEADER LABEL
;

HDR1:	.ASCII	"HDR1                       0001000100010"
	.ASCII	"0 00000 00000 000000DECFILE11A          "

HDR2:	.ASCII	"HDR2U0206402064"	; BEGINNING OF HDR2

DECID:	.ASCII	"D%B1111001001"		; VOLUME ID FOR DEC MAGTAPES

	.EVEN

;+
;
; *** - $TINO	INITIALIZE OUTPUT TAPE
;
; THIS ROUTINE DOES THE NECESSARY INITIALIZATION OF THE OUTPUT TAPE
; AND WRITES OUT HEADER LABELS AS NECESSARY.
;
; INPUTS:
;
;	OUTLUN ASSIGNED TO DESIRED TAPE UNIT
;	VOLUME SUMMARY BLOCK IN $BUF2
;
; OUTPUTS:
;
;	LABELS WRITTEN TO TAPE
;	TAPE DENSITY SET CORRECTLY
;
;-

$TINO::	LET $FLAG1 := $FLAG1 SET.BY #KY.NIP
	LET $RELNO := #1		; INIT O.P. REEL NUMBER TO 1
	$CALL $OTRDY			; VERIFY THAT TAPE IS READY FOR OUTPUT
	PUSH R0				; SAVE BOT INDICATION
	LET R2 := #0			; RETRY COUNTER
	REPEAT				; RETRY UNTIL TAPE IS SET UP
	  $CALL $BUFCK <,,,,#$OVHD>	; GET VOLUME HEADER BUFFER
	    IF (SP) NE #0 THEN LET $OFLAG := $OFLAG SET.BY #KY.APD
	  				; IF NO APPEND, TAPE IS AT BOT AND READY
	  IF #KY.APD OFF.IN $OFLAG
		LET $OFLAG := $OFLAG SET.BY #KY.RWD
		LEAVE LOOP
	  END
	  BEGIN SPACE			; NOW ATTEMPT TO SPACE TO EOV
	    LET $FLAG1 := $FLAG1 SET.BY #KY.BSP
	    IF (SP) EQ #0		; IF AT BOT (AND APPEND)
	      IF R2 EQ #0		; ON FIRST TRY
		$CALL $STO08		; SET 800 BPI
	      ELSE
		$CALL $STO16		; SET DENSITY TO 1600 BPI
	      END
	      $CALL $RDWLN <#OUTLUN,,,,#$OVHD> ; READ THE VOLUME HEADER LABEL
	      ON.ERROR
		LET R2 := R2 + #1	; BUMP RETRY COUNT
		LEAVE SPACE		; RETRY FROM THE TOP
	      END
	      IF R1 NE #80. OR (R5) NE #"VO OR 2(R5) NE #"L1
		ERROR ER.TFM		; NOT ANSI TAPE
	      END
					; VOL LABEL MUST BE LIKE "XXXX01"
	      IF 8.(R5) NE #"01 THEN ERROR ER.NDS
	      LET R4 := #$OF1HD		; USE NEXT STATUS BLOCK
		$CALL $SPACB  <,#OUTLUN,,,#$OF1HD,#1>
	      $CALL $OUTCK <,,,,R4>
	      IFB (R4) LT #0 THEN ERROR ER.IOR
	      IFB 10.(R5) EQ #'A	; IF ALTERNATE DENSITY
		$CALL $STO16		; SET IT
	      END
	    END
;
; NOW SPACE TO THE END OF THE TAPE
;
	    LET R4 := #$OF1HD		; USE NEXT STATUS BLOCK
	    $CALL  $SPACF  <,#OUTLUN,,,#$OF1HD,#32767>
	    ON.ERROR THEN ERROR ER.DIR
	    LET (SP) := #1		; TAPE IS NO LONGER AT BOT
	    IFB (R4) EQ #IE.EOV LEAVE LOOP ; THIS IS DESIRED RESULT
	    IFB (R4) EQ #IE.BBE LEAVE SPACE ; IF DENSITY IS WRONG
	    IFB (R4) EQ #IE.EOT THEN ERROR ER.TFU ; TAPE FULL IF EOT
	    ERROR ER.IOR		; ANYTHING ELSE IS AN ERROR
	  END SPACE
	  IF R2 HI #1 THEN ERROR ER.IOR	; TWO TRIES IS ALL YOU GET
	  LET $OFLAG := $OFLAG SET.BY #KY.RWD ; FORCE REWIND
	  LET $OVHD+B.STAT := #0	; INVALIDATE VOL HEADER BUFFER
	END LOOP			; TAPE IS NOW SUITABLY POSITIONED
;
; SET INTERNAL DENSITY FLAG ACCORDING TO PRESENT TAPE CHARACTERISTICS.
;
	LET R4 := #$OF1HD		; USE NEXT STATUS BLOCK
	IF (SP) NE #0			; IF NOT AT BOT
	  QIOW$C IO.SEC,OUTLUN,EFN,,$OF1HD ; GET TAPE CHARACTERISTICS
	  $CALL $OUTCK <,,,,R4>
	  IF #CH.160 SET.IN 2(R4)	; NOTE TAPE DENSITY
	    LET $OFLAG := $OFLAG SET.BY #KY.160	; AND SAVE
	  ELSE				; FOR FUTURE USE
	    LET $OFLAG := $OFLAG OFF.BY #KY.160
	  END
;
; READ THE FILE TRAILER LABEL OF THE PRECEDING FILE IF THERE IS ONE.
;
	  $CALL  $SPACF  <,#OUTLUN,,,#$OF1HD,#-1>  ; SPACE BACK OVER EOF
	  $CALL $OUTCK <,,,,R4>
	   $CALL $SPACB  <,#OUTLUN,,,#$OF1HD,#-2>  ; SPACE BACK OVER LABELS
	  $CALL $OUTCK <,,,,R4>
	  $CALL $RDWLN <#OUTLUN,,,,R4>	; READ EOF1
	  ON.ERROR THEN ERROR  ER.IOR	;CORRECTED 12,20,76
	  IF R1 NE #80. OR (R5) NE #"EO OR 2(R5) NE #"F1
	    				; IF WE READ "EOV1" THIS IS NOT
	    				; THE LAST REEL IN THE SET
	    IF 2(R5) EQ #"V1 THEN ERROR ER.NLV
	    ERROR ER.TFM		; ELSE BAD TAPE FORMAT
	  END
	  LET R0 := R5 + #27.		; POINT TO FILE SECTION NUMBER
	  IFB (R0)+ NE #'0 ORB (R0)+ NE #'0 ORB (R0)+ NE #'0 ORB (R0)+ NE #'1
	    ERROR ER.NFV		; CAN APPEND ONLY TO FIRST REEL
	  END
	  $CALL $RDWLN <#OUTLUN,,,,#$OF2HD> ; READ HDR2
	  ON.ERROR THEN ERROR ER.IOR
	  IF R1 NE #80. OR (R5) NE #"EO OR 2(R5) NE #"F2
	    ERROR ER.TFM		; NON-ANSI FORMAT
	  END
	  LET R5 := R5 + #4		; POINT TO REST OF LABEL
	  LET R0 := #HDR2+4		; POINT TO EXPECTED DATA
	  THRU R1 := #11.		; COMPARE FOR CORRECT RECORD
	    IFB (R0)+ NE (R5)+ THEN ERROR ER.NDS ; FORMAT, SIZE, AND
	  END LOOP			; BLOCK SIZE
	  $CALL $WEOF <,,,,R4>		; WRITE NEW EOF TO AVOID "CRAP IN THE GAP"
	END
;
; IF WE HAVEN'T READ A VOLUME HEADER LABEL, CONSTRUCT ONE.
; IF WE ARE AT BOT, THEN THIS LABEL WILL BE WRITTEN TO THE TAPE.
; IF WE ARE NOT AT BOT, THEN WE NEVER READ THE VOLUME'S REAL LABEL
; AND ARE CONSTRUCTING A (HOPEFULLY) LIFELIKE FACSIMILE FOR USE
; IF THE FILE OVERFLOWS ONTO OTHER TAPES.
;
	LET R4 := #$OVHD		; POINT TO VOL HEADER BUFFER
	IF B.STAT(R4) EQ #0
	  LET R0 := #$OVBF
	  LET (R0)+ := #"VO		; PUT IN "VOL1"
	  LET (R0)+ := #"L1
	  IF (SP) NE #0			; IF NOT AT BOT
	    LET R1 := #$OF1BF+21.	; POINT TO FILE SET ID
	    THRU R2 := #6		; FOR USE AS VOLUME LABEL
	      LET (R0)+ :B= (R1)+
	    END LOOP
	  ELSE
	    LET R1 := #$B2DAT+S.NAME	; VOL LABEL = FIRST 4 CHARACTERS
	    THRU R2 := #4		; OF FILE NAME, WITH BLANKS
	      LET (R0) :B= (R1)+	; REPLACED WITH "X"
	      IFB (R0) EQ #40 THEN LET (R0) :B= #'X
	      LET R0 := R0 + #1
	    END LOOP
	    LET (R0)+ := #"01		; FOLLOWED BY 01 REEL NUMBER
	  END
	  IF #KY.160 SET.IN $OFLAG AND #KY.16B OFF.IN $OFLAG
	    LET (R0)+ :B= #'A		; SET ALTERNATE DENSITY INDICATOR
	  ELSE
	    LET (R0)+ :B= #40		; OR NORMAL INDICATION
	  END
	  THRU R1 := #26.
	    LET (R0)+ :B= #40		; FILL WITH BLANKS
	  END LOOP
	  LET R1 := #DECID		; POINT TO STANDARD DEC IDENTIFIER
	  THRU R2 := #13.		; AND COPY IT IN. INDICATES
	    LET (R0)+ :B= (R1)+		; READ ONLY FOR ALL AND OWNED
	  END LOOP			; BY [1,1]
	  THRU R1 := #29.
	    LET (R0)+ :B= #40		; FILL WITH BLANKS
	  END LOOP
	  LET (R0)+ :B= #'1		; ANSI LEVEL 1 INDICATOR
	  LET B.STAT(R4) := #1		; MARK BUFFER BUSY
	END
;
; WRITE THE VOLUME HEADER LABEL IF WE ARE AT BOT
;
	IF (SP) EQ #0
	  IF #KY.16B SET.IN $OFLAG
	    $CALL $STO16		; SET 1600 BPI
	  ELSE
	    $CALL $STO08		; SET 800 BPI
	  END
	  $CALL $WRITE <,#80.,,,R4>	; WRITE THE VOLUME HEADER LABEL
;
; WRITE OUT THE TAPE'S BOOTSTRAP BLOCK.
;
	  $CALL $WBOOT
	  IF #KY.160 SET.IN $OFLAG
	    $CALL $STO16		; SET DENSITY TO DATA DENSITY
	  END
	END
;
; NOW FORMAT HDR1 AND HDR2 OF THE FILE AND WRITE THEM
;
	LET R4 := #$OF1HD		; BUFFER CONTROL BLOCK
	LET R0 := #$OF1BF		; AND BUFFER ADDRESS
	IF (SP)+ NE #0			; IF NOT AT BOT, CONSTRUCT HEADER
	  LET (R0)+ := #"HD		; FROM EOF1 THAT WE READ
	  LET (R0)+ := #"R1
	  LET R0 := #$OF1BF+35.		; FILE SEQUENCE NUMBER IS ONE
	  THRU R1 := #4			; PLUS THAT OF PREVIOUS
	    INCB -(R0)			; DO DECIMAL INCREMENT
	    IFB (R0) LOS #'9 LEAVE LOOP
	    LET (R0) :B= #'0		; DO THE CARRY
	  END LOOP
	  LET R0 := #$OF1BF+54.		; POINT TO BLOCK COUNT FIELD
	  THRU R1 := #6
	    LET (R0)+ :B= #'0		; INIT TO 0
	  END LOOP
	ELSE				; WE ARE AT BOT
	  LET R1 := #HDR1		; PROTOTYPE HDR1
	  THRU R2 := #80.
	    LET (R0)+ :B= (R1)+		; COPY IN PROTOTYPE LABEL
	  END LOOP
	  LET R0 := #$OF1BF+21.		; POINT TO FILE SET IDENTIFIER
	  LET R1 := #$OVBF+4
	  THRU R2 := #6
	    LET (R0)+ :B= (R1)+		; COPY FROM VOLUME HEADER LABEL
	  END LOOP
	  LET B.STAT(R4) := #1		; MARK BUFFER BUSY
	END
	LET R0 := #$OF1BF+4		; POINT TO FILE NAME
	LET R1 := #$B2DAT+S.NAME
	THRU R2 := #12.
	  LET (R0)+ :B= (R1)+		; COPY FILE NAME FROM SUMMARY BLOCK
	END LOOP
	$CALL $WRITE <,#80.,,,R4>	; WRITE THE LABEL

	LET R4 := #$OF2HD		; CONTROL BLOCK FOR HDR2
	LET R0 := #$OF2BF		; AND BUFFER ADDRESS
	LET R1 := #HDR2			; POINT TO HDR2 PROTOTYPE
	THRU R2 := #15.			; COPY INTO BUFFER
	  LET (R0)+ :B= (R1)+
	END LOOP
	THRU R1 := #80.-15.
	  LET (R0)+ :B= #40		; FILL REST WITH SPACES
	END LOOP
	LET $OF2BF+36. :B= #'M		; INTERNAL CARRIAGE CONTROL FLAG
	LET $OF2BF+50. := #"00		; BUFFER OFFSET
	$CALL $WRITE <,#80.,,,R4>	; WRITE HDR2

	$CALL $WEOF <,,,,#$OF3HD>	; AND WRITE THE EOF MARK
	LET $BLCNT := #0		; INIT FILE BLOCK COUNT
	LET $FLAG1 := $FLAG1 OFF.BY #KY.NIP
	RETURN



	.END

