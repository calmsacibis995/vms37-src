	$BEGIN TPRDY,0007,<VFY TAPE READY>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  15-AUG-78  11:03
; GEORGE RITTENBURG  6-APR-77  ;MODIFIED FOR VFY/CMP DISK TO/FROM TAPE
;
; GR001---G.RITTENBURG AUG.14,1978
; CORRECTIONS FOR REWIND
;


	.MCALL	QIOW$S

;
; BIT DEFINITIONS IN MAGTAPE STATUS WORD
;
CH.OFL = 400			; UNIT OFF-LINE
CH.BOT = 20000			; UNIT IS AT BOT
CH.WLK = 2000			; TAPE IS WRITE LOCKED

IO.ACK = 2460			; PACK ACKNOWLEDGE I/O FUNCTION

;+
;
; *** - $INRDY	VERIFY TAPE READY FOR INPUT
;
; *** - $OTRDY	VERIFY TAPE READY FOR OUTPUT
;
; THIS ROUTINE VERIFIES THAT THE CURRENT TAPE UNIT IS ON LINE
; AND READY FOR INPUT OR OUTPUT, AS SPECIFIED. IF THE UNIT IS
; NOT READY, A MESSAGE IS ISSUED AND THE ROUTINE WAITS FOR THE
; OPERATOR RESPONSE.
;
; INPUTS:
;
;	INPUT OR OUTPUT LUN ASSIGNED TO DEVICE
;	$INDEV OR $OUDEV POINTING TO TABLE ENTRY
;
; OUTPUTS:
;
;	R0 = 0 IF TAPE IF AT BOT
;	     1 IF TAPE IS NOT AT BOT
;
;-

$INRDY::
	IF #KY.NIP SET.IN $FLAG1
		LET R3 := $OUDEV
		LET R5 := #1
		LET R2 := #INLUN
		GOTO RDYCOM
	ELSE
		LET R3 := $INDEV		; GET DEVICE TABLE ENTRY
	END	
	LET R2 := #INLUN		; AND LUN
	LET R5 := #0			; FLAG FOR READ ACCESS
	GOTO RDYCOM

$OTRDY::
	LET R3 := $OUDEV		; GET DEVICE TABLE ENTRY
	LET R2 := #OUTLUN		; AND LUN
	LET R5 := #1			; FLAG FOR WRITE ACCESS

RDYCOM:	
	CMP -(SP),-(SP)			; ALLOCATE I/O STATUS ON STACK
	LET R4 := SP
	REPEAT				; UNTIL HE GETS IT RIGHT
	  QIOW$S #IO.ACK,R2,#EFN,,R4	; DO PACKACK ON TAPE DRIVE
	  QIOW$S #IO.SEC,R2,#EFN,,R4	; GET CHARACTERISTICS WORD
	  ROL -(SP)
	  IF R2 EQ #INLUN
	    ROR (SP)+
	    $CALL $INCK <,,,,R4>	; CHECK FOR ERRORS
	  ELSE
	    ROR (SP)+
	    $CALL $OUTCK <,,,,R4>	; CHECK FOR ERRORS
	  END
	  TST (SP)+			; DISCARD 1ST STATUS WORD
	  IF #CH.OFL OFF.IN (SP)	; IF TAPE IS ON-LINE
	    LET R0 := #0		; ASSUME BOT
	    IF #CH.BOT OFF.IN (SP) THEN LET R0 := #1
	    				; CHECK FOR WRITE LOCK IF WRITING
	    IF R5 EQ #0 OR #CH.WLK OFF.IN (SP)
	      TST (SP)+			; CLEAN STACK
	    GOTO TESTRW		; TEST FOR REQUIRED REWIND
	    ELSE
	      IF #KY.CMP SET.IN $OFLAG  ; IF COMPARE ONLY **5-10-77
		TST (SP)+		; ** 5-10-77
	    GOTO TESTRW		; TEST FOR REQUIRED REWIND
	      END			; **5-10-77
	      ERRP ER.WLK		; ISSUE WRITE LOCK MESSAGE
	    END
	  ELSE
	    ERRP ER.RDY			; ISSUE READY MESSAGE
	  END
	  CMP -(SP),-(SP)		; STATUS & BUFFER ON STACK
	  LET R1 := SP
	  				; WAIT FOR CR ON TERMINAL
	  REPEAT
	    QIOW$S #IO.RVB,#TTYLUN,#EFN,,R4,,<R1,#2>
	    ON.ERROR THEN ERROR ER.DIR
	    IF (R4) EQ #IS.CR LEAVE LOOP
	  END LOOP			; WAIT FOR A REAL CR, DAMMIT!
	  TST (SP)+			; CLEAN BUFFER OFF STACK
	END LOOP			; VERIFY THAT TAPE IS REALLY READY

TESTRW:
	IF R5 EQ #0		; IF I.P. TAPE
	    IF #KY.RWD SET.IN $IFLAG OR $RELNI NE #1

; IF REWIND INPUT REQUESTED OR NOT 1ST I.P. REEL

		LET R4 := #$IVHD
		GOTO REWIND
	    END
	ELSE
	    IF #KY.RWD SET.IN $OFLAG OR $RELNO NE #1
		LET R4 := #$OVHD
		GOTO REWIND
	    END
	END
	RETURN
REWIND:
	$CALL $RWND  <,R2,,R4>		; ISSUE REWIND
	$CALL $INCK	; WAIT FOR COMPLETION AND CHECK
	LET R0 := #0			; INDICATE BOT
	RETURN
;

	.END

