	$BEGIN	CKSUM,0001,<COMPUTE BLOCK CHECKSUM>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  12 JUN 76  23:04

;+
;
; *** - $CKSUM	COMPUTE BLOCK CHECKSUM
;
; THIS ROUTINE COMPUTES AND CHECKS THE ADDITIVE CHECKSUM ON
; THE INDICATED BLOCK. THE CHECKSUM IS STORED IN THE BLOCK AND
; AN ERROR INDICATION IS RETURNED IF THE PREVIOUSLY EXISTING
; CHECKSUM WAS INCORRECT.
;
; INPUTS:
;
;	R5 = BLOCK ADDRESS
;
; OUTPUTS:
;
;	CC - C	CLEAR IS CHECKSUM WAS CORRECT
;		SET IF NOT
;	CHECKSUM STORED IN LAST WORD OF BLOCK
;	ALL REGISTERS PRESERVED
;
; *** - $CKSM1	COMPUTE SPECIAL LENGTH BLOCK CHECKSUM
;
; THIS ROUTINE IS IDENTICAL TO THE ABOVE EXCEPT THAT THE WORD COUNT
; OF THE AREA TO BE CHECKED IS SUPPLIED. INPUTS AND OUTPUTS
; ARE THE SAME AS ABOVE PLUS:
;
; INPUTS:
;
;	R1 = WORD COUNT
;
;-

$CKSUM::
	PUSH R1
	LET R1 := #255.			; SET WORD COUNT
	GOTO CKCOM

$CKSM1::
	PUSH R1
CKCOM:	PUSH R0,R5

	LET R0 := #0
	THRU R1
	  LET R0 := R0 + (R5)+		; COMPUTE SUM
	END LOOP
	IF R0 EQ (R5)			; IF CHECKSUM MATCHES
	  CLC				; RETURN CARRY CLEAR
	ELSE
	  SEC
	END
	LET (R5) := R0			; STORE CHECKSUM IN LAST WORD
	POP R5,R0,R1			; RESTORE REGISTERS
	RETURN



	.END

