	$BEGIN	TINI,0016,<INITIALIZE TAPE FOR INPUT>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  27-AUG-76  21:30
; GEORGE RITTENBURG 6-APR-77  MODIFIED FOR VFY/CMP FOR DISK TO/FROM TAPE

; GR001--- G.RITTENBURG JAN.3,1978
; CORRECTION TO ALLOW DEFAULT TO NEXT FILE FOUND FROM CURRENT POSITION 
; OF OUTPUT TAPE WHEN /CMP AND NO FILESPEC SPECIFIED.
;

	.MCALL QIOW$S



;
; MAGTAPE CHARACTERISTICS BITS
;
CH.160 = 4000			; 1600 BPI DENSITY
;
; DEC SYSTEM ID IN VOL HEADER LABEL
;
DECID:	.ASCII	"D%B1111001001"		; VOLUME ID FOR DEC MAGTAPES

	.EVEN

;+
;
; *** - $TINI	INITIALIZE INPUT TAPE
;
; THIS ROUTINE DOES THE NECESSARY INITIALIZATION OF THE INPUT TAPE.
; IT REWINDS THE TAPE IF CALLED FOR AND POSITIONS PAST THE HEADER
; LABEL SET OF THE DESIRED FILE.
;
; INPUTS:
;
;	INLUN ASSIGNED TO DESIRED TAPE UNIT
;
; OUTPUTS:
;
;	TAPE POSITIONED TO FILE
;	TAPE DENSITY SET CORRECTLY
;
;-

$TINI::	
	IF #KY.NIP SET.IN $FLAG1	; IF TAPE O.P. CURRENT
	   LET $RELNO := #1		; INIT. O.P. REEL NO. TO 1
	ELSE
	   LET $RELNI := #1		; INIT. I.P. REEL NO. TO 1
	END
	$CALL $INRDY			; VERIFY THAT TAPE IS READY FOR INPUT
	PUSH R0				; SAVE BOT INDICATION
	LET R2 := #0			; MARK FIRST TRY
	BEGIN SEARCH
RETRY:	  				; RETRY UNTIL TAPE IS SET UP
	IF #KY.VFY SET.IN $FLAG1	;YES = VFY IN PROGRESS
		IF #KY.NIP SET.IN $FLAG1	; YES=INIT O.P.
			LET R0 := #$OFLAG
		ELSE		;INIT I.P.
			LET R0 := #$IFLAG
		END
		IF #KY.BSP OFF.IN $FLAG1	;YES=FILE AT BOT
			LET (R0) := (R0) SET.BY #KY.RWD  ;SIGNAL REWIND
		ELSE
			LET R4 := #$IF6HD
			$CALL $SPACF  <,#INLUN,,,R4,#-3>  ;BACKSPACE IN
			; FRONT OF HDR1
			$CALL  $INCK  <,,,,R4>
			LET (R0) := (R0) OFF.BY #KY.RWD
			LET $FLAG1 := $FLAG1 OFF.BY #KY.BSP
		END
	END
	IF #KY.NIP SET.IN $FLAG1
		LET R4 := #$OVHD
		LET R0 := #$OFLAG
	ELSE
		LET R4 := #$IVHD
		LET R0 := #$IFLAG
	END
	LET B.STAT(R4) := #0		;RELEASE THE VOL. HDR. BUFFR
	  IF #KY.RWD SET.IN (R0)	; SEE IF REWIND REQUESTED
		$CALL $RWND  <,#INLUN,,,R4>  ;REWIND THE TAPE
	    $CALL $INCK <,,,,R4>	; CHECK FOR ERRORS
	    LET (SP) := #0		; SET BOT FLAG
	  END
	  BEGIN SPACE			; NOW ATTEMPT TO SPACE TO LABELS
	    IF (SP) EQ #0		; IF AT BOT
	      IF R2 EQ #0		; ON FIRST TRY
		$CALL $STI08		; SET DENSITY TO 800 BPI
	      ELSE
		$CALL $STI16		; SET 1600 BPI
	      END
	      $CALL $RDWAT <,#80.,,,R4> ; READ THE VOLUME HEADER LABEL
	      ON.ERROR
		LET R2 := R2 + #1	; BUMP RETRY COUNT
		JUMPTO ESPACE		; RETRY FROM THE TOP
	      END
	      IF R1 NE #80. OR (R5) NE #"VO OR 2(R5) NE #"L1
		ERROR ER.IFM		; NOT ANSI FORMAT
	      END
		IF #KY.NIP SET.IN $FLAG1
			LET R4 := #$OF1HD
		ELSE
		      LET R4 := #$IF1HD		; USE NEXT STATUS BLOCK
		END
		$CALL $SPACB  <,#INLUN,,,R4,#1>  ;SKIP 1ST BOOT BLOCK
	      $CALL $INCK <,,,,R4>
	      IFB (R4) LT #0 THEN ERROR ER.IIR
	      IFB 10.(R5) EQ #'A	; IF ALTERNATE DENSITY
		$CALL $STI16		; SET IT
	      END
;
; NOW SEARCH FOR A "HDR1"
;
		LET B.STAT(R4) := #0
	      REPEAT			; LOOP TO SKIP OVER BOOTSTRAP
		$CALL $RDWAT <,#80.,,,R4> ; TRY TO READ A LABEL
		ON.ERROR
		  IFB (R4) EQ #IE.BBE THEN JUMPTO ESPACE ; IF DENSITY IS WRONG
		  IFB (R4) EQ #IE.EOF THEN ERROR ER.IFM	; MUST BE A LABEL BEFORE EOF
		  			; BOOT RECORDS ARE TOO LONG
		  IFB (R4) NE #IE.DAO THEN ERROR ER.IIR	; ANYTHING ELSE IS AN ERROR
		ELSE
		  IF R1 EQ #80. AND (R5) EQ #"HD AND 2(R5) EQ #"R1 LEAVE LOOP
		END
		LET B.STAT(R4) := #0	; INVALIDATE BUFFER FOR RETRY
	      END LOOP
	      GOTO CKHD1		; SEE IF THIS HDR1 IS RIGHT
	    END
;
; WE GET HERE WHILE IN THE MIDDLE OF THE TAPE.
; SKIP TO THE NEXT EOF AND LOOK FOR A HDR1. IF ONE IS NOT FOUND
; AFTER 3 EOF'S, THE TAPE IS NOT ANSI.
;
	REPEAT
		LET $FLAG1 := $FLAG1 SET.BY #KY.BSP
		IF #KY.NIP SET.IN $FLAG1	;IF TAPE O.P. AND /VFY OR /CMP
			LET R4 := #$OF1HD
		ELSE
			LET $IFLAG := $IFLAG OFF.BY #KY.RWD
			LET R4 := #$IF1HD		; USE NEXT STATUS BLOCK
		END
	      BEGIN SCAN
		THRU R3 := #3		; SEARCH FOR 3 EOF'S
		  $CALL $SPACF  <,#INLUN,,,R4,#1>
		  $CALL $INCK <,,,,R4>
		  ON.ERROR
		    IFB (R4) EQ #IE.BBE LEAVE SPACE ; RETRY ON DENSITY
		    IFB (R4) EQ #IE.EOV	; END OF TAPE
			$CALL $RWND  <,#INLUN,,,R4>	; REWIND IT
		      ERROR ER.FNF	; AND PRINT MESSAGE
		    END
		    ERROR ER.IIR	; ELSE REPORT INPUT ERROR
		  END
		  LET B.STAT(R4) := #0
		  $CALL $RDWAT <,#80.,,,R4> ; TRY TO READ HDR1
		  ON.ERROR
		    IFB (R4) EQ #IE.EOF	; HIT FILE MARK
			$CALL $RWND  <,#INLUN,,,R4>	;REWIND IT
		      ERROR ER.FNF	; AND PRINT MESSAGE
		    END
		    IFB (R4) NE #IE.DAO THEN ERROR ER.IIR
		  ELSE
		    IF R1 EQ #80. AND (R5) EQ #"HD AND 2(R5) EQ #"R1
		      LEAVE SCAN	; FOUND A HDR1
		    END
		  END
		  LET B.STAT(R4) := #0	; INVALIDATE BUFFER FOR RETRY
		END LOOP
		ERROR ER.IFM		; NO HEADER AFTER 3 EOF'S
	      END SCAN
;
; WE HAVE READ A HDR1 - SEE IF IT IS THE ONE DESIRED.
;
CKHD1:	      
	      BEGIN CHECK
		CMP (R5)+,(R5)+		; POINT TO FILE LABEL
		IF #KY.NIP SET.IN $FLAG1
			LET R0 := #$OLAB
			IF (R0) EQ #0
			  THRU R1 := #12.
				LET (R0)+ :B= (R5)+
			  END LOOP
			  LEAVE SEARCH
			END
		ELSE
			LET R0 := #$ILAB	; GET USER LABEL STRING
		END
		IFB (R0) EQ #0		; NULL MEANS MATCH ANY
		  THRU R1 := #12.
		    LET (R0)+ :B= (R5)+	; COPY LABEL FROM THIS FILE
		  END LOOP
		  LEAVE SEARCH
		END
		THRU R1 := #12.
		  IFB (R0)+ NE (R5)+ LEAVE CHECK ; COMPARE LABELS
		END LOOP
		LEAVE SEARCH
	      END CHECK
	      LET B.STAT(R4) := #0	; INVALIDATE HDR1 FOR RETRY
	    END LOOP
	  END SPACE
ESPACE:	  IF R2 HI #1 THEN ERROR ER.IIR	; TWO TRIES IS ALL YOU GET
	  IF #KY.NIP SET.IN $FLAG1

		LET $OFLAG := $OFLAG SET.BY #KY.RWD
		LET $OVHD+B.STAT := #0
	  ELSE
		  LET $IFLAG := $IFLAG SET.BY #KY.RWD ; FORCE REWIND
		  LET $IVHD+B.STAT := #0	; INVALIDATE VOL HEADER BUFFER
	   END
	  JUMPTO RETRY			; LOOP UNTIL TAPE DENSITY IS CORRECT
	END SEARCH
;
; SET INTERNAL DENSITY FLAG ACCORDING TO PRESENT TAPE CHARACTERISTICS.
;
; CHECK THE FILE SECTION NUMBER TO MAKE SURE THIS IS THE FIRST REEL.
;
	LET R5 := R5 + #11.		; POINT TO SECTION NUMBER
	IFB (R5)+ NE #'0 ORB (R5)+ NE #'0 ORB (R5)+ NE #'0 ORB (R5)+ NE #'1
	  ERROR ER.NFI
	END
;
	TST (SP)+			; CLEAN THE STACK
	IF #KY.NIP SET.IN $FLAG1
		LET R4 := #$OF2HD
		LET R0 := #$OFLAG
	ELSE
		LET R4 := #$IF2HD		; USE NEXT STATUS BLOCK
		LET R0 := #$IFLAG
	END
	LET B.STAT(R4) := #0	;RELEASE THE BUFFER
	QIOW$S #IO.SEC,#INLUN,#EFN,,R4	; GET TAPE CHARACTERISTICS
	$CALL $INCK <,,,,R4>
	IF #CH.160 SET.IN 2(R4)		; NOTE TAPE DENSITY
	  LET (R0) := (R0) SET.BY #KY.160 ; AND SAVE
	ELSE				; FOR FUTURE USE
	  LET (R0) := (R0) OFF.BY #KY.160
	END
;
; READ AND CHECK HDR2
;
	$CALL $RDWAT <,#80.,,,R4>
	ON.ERROR THEN ERROR ER.IIR
	IF R1 NE #80. OR (R5) NE #"HD OR 2(R5) NE #"R2
	  ERROR ER.IFM			; NOT ANSI FORMAT
	END
;
; IF WE HAVEN'T READ A VOLUME HEADER LABEL, CONSTRUCT ONE.
; THIS LABEL IS (HOPEFULLY) A REASONABLE FACSIMILE OF THE REAL
; VOLUME HEADER LABEL, AND IS USED FOR LABEL VERIFICATION WHEN
; WE SWITCH REELS.
;
	IF #KY.NIP SET.IN $FLAG1
		LET R4 := #$OVHD
	ELSE
		LET R4 := #$IVHD		; POINT TO VOL HEADER BUFFER
	END
	IF B.STAT(R4) EQ #0
	  LET R0 := R4 + #B.SIZ
	  LET (R0)+ := #"VO		; PUT IN "VOL1"
	  LET (R0)+ := #"L1
		IF #KY.NIP SET.IN $FLAG1
			LET R1 := #$OF1BF + #21.
		ELSE
		  LET R1 := #$IF1BF + #21.		; POINT TO FILE SET ID
		END
	  THRU R2 := #6			; FOR USE AS VOLUME LABEL
	    LET (R0)+ :B= (R1)+
	  END LOOP
	  THRU R1 := #27.
	    LET (R0)+ :B= #40		; FILL WITH BLANKS
	  END LOOP
	  LET R1 := #DECID		; POINT TO STANDARD DEC IDENTIFIER
	  THRU R2 := #13.		; AND COPY IT IN. INDICATES
	    LET (R0)+ :B= (R1)+		; READ ONLY FOR ALL AND OWNED
	  END LOOP			; BY [1,1]
	  THRU R1 := #29.
	    LET (R0)+ :B= #40		; FILL WITH BLANKS
	  END LOOP
	  LET (R0)+ :B= #'1		; ANSI LEVEL 1 INDICATOR
	  LET B.STAT(R4) := #1		; MARK BUFFER BUSY
	END
;
; FINALLY SKIP THE EOF PRECEDING THE FILE DATA
;
	LET R4 := #$B1HD1		; USE SPARE STATUS BLOCK
	$CALL $SPACF  <,#INLUN,,,#$B1HD,#1>
	$CALL $INCK
	RETURN



	.END

