	.TITLE	GTCML - GET COMMAND LINE WITH CONTINUATIONS

	.IDENT	/V03000/

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  14-SEP-76  15:25
; MODIFIED 8-24-77 G.RITTENBURG EXIT WITH STATUS ADDED
	;ON-LINE VERSION ONLY   ***GR1
;

;
; THIS ROUTINE ACCEPTS A COMMAND LINE WITH CONTINUATIONS FOR THE FILES
; MCR FUNCTIONS. IT FIRST GETS THE MCR COMMAND LINE. IF THERE IS NONE,
; OR IF CONTINUATIONS ARE CALLED FOR, IT PROMPTS AND READS INPUT FROM
; THE TASK'S LUN #1, WHICH IS HOPEFULLY ASSIGNED TO TI. ALL ERROR
; HANDLING IS DONE INTERNALLY.
;

	R$$11M = 1

LUN = 1				; LUN FOR CONSOLE I/O
EFN = 1				; LIKEWISE EFN

CR  = 15			; CARRIAGE RETURN CHAR

	.MCALL	QIOW$,QIOW$S,GMCR$,DIR$,CALL,RETURN,EXIT$S

	.IF	DF,R$$11M
.MACRO	SOB	RX,ADDR
	DEC	RX
	BNE	ADDR
.ENDM	SOB
	.ENDC
;
; BUFFER TO BUILD COMMAND LINE
;
BUFSIZ = 512.

	.IF	NDF,R$$11S
BUFFER:	GMCR$
	.BLKB	BUFSIZ+BUFFER+G.MCRB-.
	.IFF
BUFFER:	.BLKB	BUFSIZ
	.ENDC
;
; QIO TO OUTPUT PROMPT TO TERMINAL
;
PROMPT:	QIOW$	IO.WVB,LUN,EFN,,IOSTAT,,<,,<'$>>

IOSTAT:	.BLKW	2		; I/O STATUS BLOCK
;
; ERROR MESSAGES FOR VARIOUS FORMS OF LOSSAGE
;
IOERRM:	.ASCII	<CR>"XXX -- COMMAND I/O ERROR"
IOERRL = .-IOERRM

OVERM:	.ASCII	<CR>"XXX -- COMMAND TOO LONG"
OVERL = .-OVERM

	.EVEN

;+
;
; *** - .GTCML - GET COMMAND LINE WITH CONTINUATION
;
; THIS ROUTINE OBTAINS A COMMAND LINE FROM THE MCR COMMAND LINE
; BUFFER OR FROM THE CONSOLE TERMINAL. A TRAILING HYPHEN (-)
; CAUSES CONTINUATION: THE ROUTINE PROMPTS AND ACCEPTS ANOTHER
; LINE FROM THE CONSOLE TERMINAL.
;
; INPUTS:
;
;	R3 = LENGTH OF PROMPT STRING
;	R4 = ADDRESS OF PROMPT STRING
;
; OUTPUTS:
;
;	R3 = LENGTH OF COMMAND STRING
;	R4 = ADDRESS OF COMMAND STRING
;	R0-R2 ARE GARBAGED
;
;-

	.ENABL	LSB

.GTCML::
	MOV	R4,PROMPT+Q.IOPL ; SET UP PROMPT STRING
	MOV	R3,PROMPT+Q.IOPL+2 ; IN QIO DPB
	.IF	NDF,R$$11S
	MOV	#BUFSIZ,R1	; AND MAXIMUM BYTE COUNT
	DIR$	#BUFFER		; TRY FOR MCR COMMAND BUFFER
	BCS	30$		; BRANCH IF NONE
	MOV	@#$DSW,R3	; PICK UP THE BYTE COUNT
	BEQ	30$		; BRANCH IF NULL
	SUB	R3,R1		; COMPUTE SPACE LEFT
	MOV	#BUFFER+G.MCRB,R4 ; POINT TO START OF ACTUAL COMMAND LINE
10$:	CALL	SPTEST		; SEARCH FOR THE FIRST SPACE
	BCC	20$
	INC	R4		; TRY NEXT CHARACTER
	SOB	R3,10$
	BR	30$		; NO SPACES - THROW COMMAND LINE AWAY

20$:	CALL	SPTEST		; NOW LOOK FOR FIRST REAL COMMAND CHAR
	BCS	40$
	INC	R4		; TRY THE NEXT
	SOB	R3,20$
	.ENDC
;
; THERE IS NO MCR COMMAND LINE, EITHER BECAUSE THE DIRECTIVE FAILED
; OR THERE WAS NO USEFUL INFORMATION IN IT. SET UP TO GET COMMAND
; FROM THE TERMINAL.
;
30$:	MOV	#BUFFER+G.MCRB,R4 ; RE-INIT POINTER
	CLR	R3
	MOV	#BUFSIZ,R1	; R1 = SPACE AVAILABLE
	MOV	R4,R0		; R0 = ADDRESS FOR INPUT
	TST	GCLFLG		; SEE IF THERE WAS AN MCR COMMAND LINE
	BNE	90$		; YES - EXIT IN ONE SHOT MODE
	BR	60$
	.IF	NDF,R$$11S
;
; WE HAVE A GOOD MCR COMMAND LINE. UPDATE VARIOUS REGISTERS.
;
40$:	INC	GCLFLG		; SET MCR FLAG
	MOV	R4,R0		; POINT TO END OF DATA
	ADD	R3,R0
	.ENDC
;
; WE HAVE A COMMAND LINE FROM SOMEWHERE. LOOK FOR CONTINUATION.
;
50$:	CMPB	-1(R0),#'-	; CONTINUATION CHARACTER IS A "-"
	BNE	EOL1		; NO - ALL DONE
	DEC	R0		; YES - THROW IT AWAY
	INC	R1
	DEC	R3		; ADJUST THE CHARACTER COUNT
;
; READ AN INPUT LINE FROM THE TERMINAL.
;
60$:	DIR$	#PROMPT		; OUTPUT THE PROMPT STRING
	BCS	IOERR		; CHECK FOR DIRECTIVE ERROR
	TSTB	IOSTAT		; AND FOR I/O ERROR
	BLT	IOERR
	QIOW$S	#IO.RVB,#LUN,#EFN,,#IOSTAT,,<R0,R1,<#' >>
	BCS	IOERR		; DIRECTIVE ERROR
	TSTB	IOSTAT
	BLT	IOERR		; I/O ERROR
	TSTB	IOSTAT+1	; CHECK FOR A TERMINATED LINE
	BEQ	OVER		; NO - BUFFER HAS OVERFLOWED
	MOV	IOSTAT+2,R2	; GET THE BYTE COUNT
	BEQ	EOL		; RETURN ON NULL LINE
	SUB	R2,R1		; ADJUST THE REMAINING SPACE COUNT
	ADD	R2,R3		; ACCUMULATE BYTE COUNT
	ADD	R2,R0		; POINT TO NEW END OF DATA
	BR	50$		; AND LOOK FOR CONTINUATION AGAIN
;
; END OF LINE
;
EOL1:	PUSH	R0	; CONVERT L.C. TO UPPER CASE
	PUSH	R3	; IF NECESSARY
EOL1A:	IFB 	-(R0) LT #141 THEN GOTO EOL2  ; NO CONV. NECESSARY
	IFB	(R0)  GT #172 THEN GOTO EOL2  ; NO CONV. NECESSARY
	BICB	#40,(R0)
EOL2:	SOB	R3,EOL1A		;CONTINUE IF R3 GT #0
	POP	R3
	POP	R0
EOL:	CLRB	(R0)		; THROW IN A TERMINATING NULL
	RETURN
;
; TO HERE ON I/O ERROR
;
IOERR:	CMPB	IOSTAT,#IE.EOF	; LOOK FOR CONTROL Z
	BEQ	90$		; YES - JUST GET OUT QUIETLY
	MOV	#IOERRM,R0	; SET UP MESSAGE POINTER
	MOV	#IOERRL,R1	; AND BYTE COUNT
	BR	70$
;
; TO HERE IF THE INPUT BUFFER OVERFLOWS
;
OVER:	MOV	#OVERM,R0
	MOV	#OVERL,R1
70$:	MOV	R0,R2
	INC	R2
	MOV	#3,R3		; COUNT 3 BYTES OF THE PROMPT STRING
	MOV	PROMPT+Q.IOPL,R4 ; POINT TO PROMPT STRING
80$:	MOVB	(R4)+,(R2)+	; COPY PROMPT INTO ERROR MESSAGE
	SOB	R3,80$
	QIOW$S	#IO.WVB,#LUN,#EFN,,,,<R0,R1,<#' >>
	LET $ESTAT := #4	; SET SEVERE ERROR
90$:
; THE NEXT 10 LINES MODIFIED 8-24-77		***GR1
	.IF	NDF,R$$11S
	IF $ESTAT  LT #0	; IF NO ERRORS
	  LET R0  := #EX$SUC	;INDICATE SUCCESS
	ELSE
		LET R0 := $ESTAT
	END			
	JUMPTO $EXST		; AND EXIT
	.IFF
	BR	30$
	.ENDC		;ADDED 8-24-77 ***GR1


;
; SUBROUTINE TO CHECK FOR BLANKS OR TABS. R4 POINTS TO CHARACTER
; BEING TESTED. CARRY CLEAR MEANS BLANK OR TAB.
;
SPTEST:	CMPB	(R4),#40	; BLANK?
	BEQ	100$		; YES
	CMPB	(R4),#11	; TAB?
	BEQ	100$		; YES
	SEC			; NEITHER
	RETURN
100$:	CLC
	RETURN

	.DSABL	LSB



	.END

