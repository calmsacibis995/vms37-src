	$BEGIN TRDEX,0007,<READ FILE EXT.HDR. FROM TAPE>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  17-AUG-76  23:14
; GEORGE RITTENBURG	7-APR-77  MODIFIED FOR VFY/CMP DISK TO/FROM TAPE
; **GR01---G.RITTENBURG AUG.16,1978
; SAVE FILE SIZE ETC.FOR MULTI-REEL O.P. TAPE VERIFY
;
	.IF	NDF,R$$NVX
	.MCALL	FHDL2$
	FHDL2$			; DEFINE FILE HEADER OFFSETS
	.ENDC

;+
;
; *** - $TRDEX	READ EXTENSION HEADER FROM TAPE
;
; THIS ROUTINE READS THE NEXT FILE EXTENSION HEADER FROM THE INPUT
; TAPE AND CHECKS IT FOR CONSISTENCY. IF THE BLOCK READ IS NOT THE
; EXTENSION HEADER, IT SEARCHES UNTIL IT IS FOUND OR THINGS ARE
; CLEARLY HOPELESS.
;
; INPUTS:
;
;	INLUN ASSIGNED TO TAPE
;	$INDEV POINTING AT DEVICE TABLE ENTRY
;
; OUTPUTS:
;
;	CC - C	CLEAR IF ALL OK
;		SET IF ERROR
;	$BUF2 CONTAINS FILE HEADER
;	R5 = ADDRESS OF HEADER READ
;	IF ERROR, R4 POINTS AT BCB OF OFFENDING BUFFER
;
;-

$TRDEX::
	IF #KY.NIP SET.IN $FLAG1
		LET R0 := #$OHHD
		LET H.VBN(R0) := $IHHD+H.VBN  ;SAVE INIT. I.P. VBN
		LET H.VBN+2(R0) := $IHHD+H.VBN+2
	ELSE
			LET R0 := #$IHHD
	END
	LET B.STAT(R0) := #0		;DISCARD OLD FILE HEADER
	  $CALL $RDWAT <,#512.+P.SIZ,,,#$B2HD>
	  ON.ERROR
		IF #KY.VFY SET.IN $FLAG1 OR #KY.CMP SET.IN $OFLAG
			ERROR  ER.RXD
		END
	    ERRP ER.RHT			; PRINT I/O ERROR MESSAGE
	    IFB (R4) EQ #IE.EOF GOTO NOHDR ; END OF FILE - NO MORE
	  ELSE
	    IF P.FLAG(R5) EQ #PF.ATR GOTO NOHDR
	    IF P.FLAG(R5) EQ #PF.HDR	; CHECK IF HEADER BLOCK
	      IF $FID EQ P.FID(R5)	; CHECK FILE ID OF FILE
		IF $FID+2 EQ P.FID+2(R5)
		  IF $FID+4 EQ P.FID+4(R5)
		    LET R5 := R5 + #P.SIZ ; POINT TO HEADER DATA
		    LET $FNU := H.FNUM(R5) ; SET FILE NUMBER
		    $CALL $VFYHD <,,,,,R5> ; SEE IF REAL FILE HEADER
		    ON.NOERROR
		      LET $TESQN := $TESQN + #1	; BUMP SEG NUMBER
		      IFB H.FSEG(R5) EQ $TESQN ; CHECK IT
		$CALL $FILSZ <,,,,,#$B2DAT>   ;COMPUTE FILE HDR. SIZE
		LET $TFSIZ := R1		;SAVE IT
		LET $TFSIZ+2 := R0
			IF #KY.NIP OFF.IN $FLAG1
			LET $IHVBN := $IHVBN + $TFSIZ ;UPDATE $IHVBN
			LET $IHVBN+2 := $IHVBN+2 + CARRY + $TFSIZ+2
				LET $IFLAG := $IFLAG OFF.BY #KY.LOS
				$CALL $BUFCK <,,,,#$IHHD> ; GET INDEX FILE HEADER BUFFER
				LET B.STAT(R4) := #1 ; MARK IT BUSY
				LET R0 := #$IHBF ; COPY HEADER INTO IHBF
			ELSE
			LET $OHVBN := $OHVBN + $TFSIZ  ;UPDATE $OHVBN
			LET $OHVBN+2 := $OHVBN+2 + CARRY + $TFSIZ+2
				LET R0 := #$OHBF
		END
		THRU R1 := #256.	;COPY HDR TO $IHBF/$OHBF
		LET (R0)+ := (R5)+
		END LOOP
		LET $TFSIZ := $FISIZ	;RESTORE TOTAL FILE SIZE
		LET $TFSIZ+2 := $FISIZ+2
			RETURN NOERROR
		      END
		    END
		  END
		END
	      END
	      GOTO NOHDR		; WRONG HEADER - OUT
	    END
	  END
	  IF #KY.LOS OFF.IN $IFLAG	; IF WE ARE NOT LOST
	    ERRP ER.NXT			; PRINT MESSAGE
	  END
	  LET $IFLAG := $IFLAG SET.BY #KY.LOS ; WE ARE NOW
	  LET B.STAT(R4) := #0		; INVALIDATE BUFFER FOR RETRY
	JUMPTO $TRDEX
NOHDR:
	IF #KY.VFY SET.IN $FLAG1 OR #KY.CMP SET.IN $OFLAG
		ERROR ER.RXD
	END
	ERRP ER.NNX			; FAILED TO FIND HEADER
	RETURN ERROR



	.END
