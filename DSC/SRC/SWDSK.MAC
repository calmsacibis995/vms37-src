	$BEGIN	SWDSK,0006,<SWITCH DISK UNIT>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  1-NOV-76  23:17


	.MCALL	ALUN$S

;+
;
; *** - $SWID	SWITCH INPUT DISK UNIT
;
; THIS ROUTINE SWITCHES THE INPUT LUN TO THE DISK UNIT IN
; THE UNIT TABLE THAT HAS THE CORRECT RVN.
;
; INPUTS:
;
;	R1 = RVN
;
; OUTPUTS:
;
;	CC - C	CLEAR IF NO ERRORS
;		SET IF RVN NOT FOUND
;	INLUN ASSIGNED TO INPUT UNIT
;	$INDEV POINTS TO NEW INPUT DEVICE TABLE ENTRY
;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
;
; *** - $SWOD	SWITCH OUTPUT DISK UNIT
;
; THIS ROUTINE SWITCHES THE OUTPUT LUN TO THE DISK UNIT IN
; THE UNIT TABLE THAT HAS THE CORRECT RVN.
;
; INPUTS:
;
;	R1 = RVN
;
; OUTPUTS:
;
;	CC - C	CLEAR IF NO ERRORS
;		SET IF RVN NOT FOUND
;	OUTLUN ASSIGNED TO OUTPUT UNIT
;	$OUDEV POINTS TO NEW OUTPUT DEVICE TABLE ENTRY
;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
;
; *** - $SWID1	SWITCH INPUT DISK UNIT
;
; THIS ROUTINE SWITCHES THE INPUT LUN TO THE DISK UNIT IN
; THE INDICATED UNIT TABLE ENTRY.
;
; INPUTS:
;
;	R0 = UNIT TABLE ADDRESS
;
; OUTPUTS:
;
;	INLUN ASSIGNED TO INPUT UNIT
;	$INDEV POINTS TO NEW INPUT DEVICE TABLE ENTRY
;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
;
; *** - $SWOD1	SWITCH OUTPUT DISK UNIT
;
; THIS ROUTINE SWITCHES THE OUTPUT LUN TO THE DISK UNIT IN
; THE INDICATED UNIT TABLE ENTRY.
;
; INPUTS:
;
;	R0 = UNIT TABLE ADDRESS
;
; OUTPUTS:
;
;	OUTLUN ASSIGNED TO OUTPUT UNIT
;	$OUDEV POINTS TO NEW OUTPUT DEVICE TABLE ENTRY
;	R0,R1 CLOBBERED, OTHER REGISTERS PRESERVED
;
;-

$SWID1::
	LET R1 := #$ALUNI		; SET UP FOR INPUT
	GOTO SWIDC1

$SWOD1::
	LET R1 := #$ALUNO		; SET UP FOR OUTPUT
	GOTO SWIDC1

$SWID::	
	LET R0 := #$IVTAB		; POINT TO INPUT DEVICE TABLE
	PUSH #$ALUNI
	GOTO SWIDC

$SWOD::	
	LET R0 := #$OVTAB		; POINT TO OUTPUT DEVICE TABLE
	PUSH #$ALUNO
;
; SEARCH THE APPROPRIATE TABLE FOR THE RVN
;
SWIDC:	IF R1 EQ #0			; 0 RVN MEANS SAME UNIT
	  TST (SP)+			; CLEAN STACK
	  RETURN
	END
	BEGIN SEARCH
	  PUSH R2
	  THRU R2 := #V.LENG
	    IF V.RVN(R0) EQ R1 LEAVE SEARCH
	    LET R0 := R0 + #V.SIZ	; TRY NEXT ENTRY
	  END LOOP
	  LET R0 := R1			; RVN FOR ERROR MESSAGE
	  ERROR ER.RVN			; RVN NOT FOUND
	END SEARCH
	POP R2,R1
;
; FOUND THE RIGHT RVN - ASSIGN IT
;
SWIDC1:	$CALL $SAVAL
	$CALL (R1)			; ASSIGN THE APPROPRIATE LUN
	ON.ERROR			; IF WE SWITCHED DEVICES
	  LET R3 := V.IBLB(R0) + V.IBSZ(R0) ; COMPUTE INDEX FILE
	  LET R2 := V.IBLB+2(R0) + CARRY ; HEADER LBN
	  LET R0 := R1			; GET LUN IN R0
	  LET B.STAT(R4) := #0		; DISCARD OLD INDEX FILE HEADER
	  $CALL $RDWLN <R0,#512.,R2,R3,R4> ; READ INDEX FILE HEADER
	  ON.ERROR
	    IF R4 EQ #$IXHD		; IF IT WAS INPUT DISK
	      ERROR ER.IXH		; USE INPUT MESSAGE
	    ELSE
	      LET $FLAG1 := $FLAG1 SET.BY #KY.NIP
	      ERROR ER.IXO		; ELSE OUTPUT MESSAGE
	    END
	  END
	END
	RETURN

;+
;
; *** - $ALUNI	ASSIGN INPUT LUN
;
; *** - $ALUNO	ASSIGN OUTPUT LUN
;
; THESE ROUTINES ASSIGN THEIR RESPECTIVE LUNS TO THE DEVICE INDICATED
; BY THE SUPPLIED DEVICE TABLE ENTRY.
;
; INPUTS:
;
;	R0 = ADDRESS OF DEVICE TABLE ENTRY
;
; OUTPUTS:
;
;	R1 = LUN NUMBER
;	R4 = CORRESPONDING INDEX FILE HEADER BUFFER ADDRESS
;	LUN ASSIGNED TO DEVICE
;	OTHER REGISTERS PRESERVED
;
;-

$ALUNI::
	PUSH $INDEV			; SAVE OLD TABLE POINTER
	LET $INDEV := R0		; SET NEW ONE
	LET R1 := #INLUN		; GET LUN
	LET R4 := #$IXHD		; AND BUFFER
	GOTO ALUNC

$ALUNO::
	PUSH $OUDEV			; SAVE OLD TABLE POINTER
	LET $OUDEV := R0		; SET NEW ONE
	LET R1 := #OUTLUN		; GET LUN
	LET R4 := #$OXHD		; AND BUFFER
ALUNC:	ALUN$S R1,(R0), 2(R0)		; ASSIGN THE LUN
	IF R0 NE (SP)+			; IF WE CHANGED DEVICES
	  RETURN ERROR
	ELSE
	  RETURN NOERROR
	END



	.END
