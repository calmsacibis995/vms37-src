	$BEGIN	TRDDA,0006,<READ FILE FROM TAPE>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  15-AUG-76  20:32
; GEORGE RITTENBURG 7-APR-77  MODIFIED FOR VFY/CMP FOR DISK TO/FROM TAPE
; GR001--- G.RITTENBURG JAN.3,1978--REMOVE PROBLEM ALUN CALL
;

	.MCALL ALUN$S

;+
;
; *** - $TRDDA	READ FILE DATA FROM TAPE
;
; THIS ROUTINE INITIATES A READ OPERATION FROM THE OUTPUT
; TAPE.
;
; INPUTS:
;
;	R1 = BLOCK COUNT
;	R4 = BUFFER DESCRIPTOR ADDRESS
;
; OUTPUTS:
;
;	READ OPERATION INITIATED
;	R4 PRESERVED, OTHER REGISTERS CLOBBERED
;
;-

$TRDDO::
	$CALL  $BUFCK  <,,,,R4>   ;CHECK BUFFER
	LET $FLAG1 := $FLAG1 SET.BY #KY.NIP  ; FLAG OP READ
	LET R0 := $OUDEV		; ASSIGN INLUN TO O.P. DEV
	ALUN$S  #INLUN,(R0),2(R0)
	LET R1 := $OHVBN - $WVBN  ; SEE HOW FAR TO GO THIS OP HDR
	LET R0 := $OHVBN+2 - CARRY - $WVBN+2
	IF RESULT IS MI THEN GOTO NXTEXT  ; END OF O.P. HDR
	LET R1 := #BLKF
	SWAB R1			;CONVERT TO BYTES
	ASL R1
	LET R1 := R1 + #P.SIZ  ;ADD PREAMBLE SIZE
	$CALL  $READ   <,R1,,,R4>  ;INITIATE READ
	$CALL @$WATO  <,,,,R4>		; WAIT FOR COMPLETION
	LET $FLAG1 := $FLAG1 OFF.BY #KY.NIP
	LET R2 := $BUF2+P.CNT		; R2 IS NO. BYTES READ
	LET R1 := #$BUF1+P.CNT		; R1 PTS. TO NO. BYTES I.P.
	IF R2 LT (R1)			; IF WE DIDN'T READ ENOUGH OP DATA
	   LET (R1) := R2		; SET NO. BYTES FOR COMPARE
	END
	LET $WVBN := $VBN	; SET O.P. VBN FOR NEXT READ
	LET $WVBN+2 := $VBN+2
	LET R0 := $INDEV	; RE-ASSIGN INLUN TO I.P.
	ALUN$S  #INLUN,(R0),2(R0)
	RETURN
NXTEXT:
	$CALL  $TRDEX			; READ EXT. HDR
	LET $B2HD+B.STAT := #0		; RELEASE $BUF2
	GOTO $TRDDO			;GET DATA FROM NEXT EXTENT


$TRDDA::
	$CALL $BUFCK <,,,,R4>		; WAIT FOR BUFFER
	DCOMP $VBN+2,$VBN, $IHVBN+2,$IHVBN
	IF RESULT IS HI GOTO EXIT	; OFF END OF SECTION
	LET $VBN := $VBN + R1		; BUMP VBN BY BLOCKS
	LET $VBN+2 := $VBN+2 + CARRY
	SWAB R1				; CONVERT TO BYTE COUNT
	ASL R1
	LET R1 := R1 + #P.SIZ		; TOTAL BYTE COUNT
	$CALL $READ <,R1,,,R4>		; START THE READ
	RETURN
;
; TO HERE TO SET UP A DUMMY READ FOR A ZERO BYTE COUNT
;
EXIT:	LET B.SIZ+P.CNT(R4) := #0	; ZERO COUNT
	LET 2(R4) := #0
	LET (R4) := #1			; SUCCESSFUL COMPLETION
	LET B.STAT(R4) := #3		; READ IN PROGRESS
	$CALL $LINKI <,,,,R4>		; LINK ONTO WAIT LIST
	RETURN



	.END

