	.TITLE	NML$SERSTA	LOAD/TRIGGER/DUMP/LINE LOOP STATE TABLES
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:  DECnet-VAX Network Management Listener
; 
; ABSTRACT: 
; 
; 
; ENVIRONMENT:	VAX/VMS Operating System 
; 
; AUTHOR:  Distributed Systems Software Engineering
;
; CREATION DATE: 8-MAY-1980
; 
; MODIFIED BY: 
; 
;	V03-003	MKP0002		Kathy Perko	1-Jan-1982
;		Add DMF to device types.
;
;	V03-002	LMK0001		Len Kawell	18-Sep-1981
;		Add new device types.
;
;	V03-001	MKP0001		Kathy Perko	19-July-1981
;		Add multidrop and X25 parsing.
;-- 

;
; INCLUDE FILES:
;
 
$NMADEF				; Network Management Layer definitions
$NMLDEF				; NML definitions
 
;
; OWN STORAGE:
;

	.SBTTL	NML$NPA_LOAD Downline load state table
 
;
;    load
;
IMSG$	NML$NPA_LOAD
;
;
; 
FIELD$
$BYTE	NMA$C_ENT_CIR,NML_LOAD_CIRCUIT,,-	; LOAD VIA
	NML$M_PRS_LSV,NML$GL_PRS_FLGS
$MATCH	1,NML_LOAD_NODE				; LOAD NODE
;
; Node id
; 
FIELD$	NML_LOAD_NODE
$SBEXP	NML_NODEID,NML_LOAD_LOOP
;
; Circuit id
; 
FIELD$	NML_LOAD_CIRCUIT
$SBEXP	NML_CIRCUIT_ID,NML_LOAD_LOOP
;
; Paramter loop
;
FIELD$	NML_LOAD_LOOP
$EOM	,NPA$_EXIT
$SBEXP	NML_NODE_ADD,NML_LOAD_LOOP	; Address
$NEXT
 
FIELD$
$SBEXP	NML_NODE_CPU,NML_LOAD_LOOP	; CPU type
$NEXT
 
FIELD$
$SBEXP	NML_NODE_IHO,NML_LOAD_LOOP	; Host
$NEXT
 
FIELD$
$SBEXP	NML_NODE_LOA,NML_LOAD_LOOP	; Load file
$NEXT
 
FIELD$
$SBEXP	NML_NODE_NNA,NML_LOAD_LOOP	; Name
$NEXT
 
FIELD$
$SBEXP	NML_NODE_SLO,NML_LOAD_LOOP	; Secondary loader
$NEXT

FIELD$
$SBEXP	NML_NODE_SDV,NML_LOAD_LOOP	; Service device
$NEXT
 
FIELD$
$SBEXP	NML_NODE_SPA,NML_LOAD_LOOP	; Service password
$NEXT
 
FIELD$
$SBEXP	NML_NODE_SID,NML_LOAD_LOOP	; Software ID
$NEXT
 
FIELD$
$SBEXP	NML_NODE_STY,NML_LOAD_LOOP	; Software type
$NEXT
 
FIELD$
$SBEXP	NML_NODE_TLO,NML_LOAD_LOOP	; Tertiary loader
$NEXT
 
FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error
 
FIELD$					; End of LOAD state table

 
	.SBTTL	NML$NPA_DUMP Upline dump parameter state table
 
;
; Upline dumping
;
IMSG$	NML$NPA_DUMP
;
;
; 
FIELD$
$BYTE	NMA$C_ENT_CIR,NML_DUMP_CIRCUIT,,-	; DUMP VIA
	NML$M_PRS_LSV,NML$GL_PRS_FLGS
$MATCH	1,NML_DUMP_NODE				; DUMP NODE
;
; Node id
; 
FIELD$	NML_DUMP_NODE
$SBEXP	NML_NODEID,NML_DUMP_LOOP
;
; Circuit id
; 
FIELD$	NML_DUMP_CIRCUIT
$SBEXP	NML_CIRCUIT_ID,NML_DUMP_LOOP
;
; DUMP parameter loop
;
FIELD$	NML_DUMP_LOOP
$EOM	,NPA$_EXIT
$SBEXP	NML_NODE_DAD,NML_DUMP_LOOP	; Dump address
$NEXT
 
FIELD$	
$SBEXP	NML_NODE_DCT,NML_DUMP_LOOP	; Dump count
$NEXT
 
FIELD$	
$SBEXP	NML_NODE_DUM,NML_DUMP_LOOP	; Dump file
$NEXT
 
FIELD$	
$SBEXP	NML_NODE_SDU,NML_DUMP_LOOP	; Secondary dumper
$NEXT
 
FIELD$	
$SBEXP	NML_NODE_SDV,NML_DUMP_LOOP	; Service device
$NEXT
 
FIELD$	
$SBEXP	NML_NODE_SPA,NML_DUMP_LOOP	; Service password
$NEXT
 
FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error
 
FIELD$					; End of DUMP state table

	.SBTTL	NML$NPA_TRIGGER Trigger parameter state table
 
;
; Trigger
;
IMSG$	NML$NPA_TRIGGER
;
;
; 
FIELD$
$BYTE	NMA$C_ENT_CIR,NML_TRIG_CIRCUIT,,-	; TRIGGER VIA
	NML$M_PRS_LSV,NML$GL_PRS_FLGS
$MATCH	1,NML_TRIG_NODE				; TRIGGER NODE
;
; Node id
; 
FIELD$	NML_TRIG_NODE
$SBEXP	NML_NODEID,NML_TRIG_LOOP
;
; Circuit id
; 
FIELD$	NML_TRIG_CIRCUIT
$SBEXP	NML_CIRCUIT_ID,NML_TRIG_LOOP
;
; TRIGGER parameter loop
;
FIELD$	NML_TRIG_LOOP
$EOM	,NPA$_EXIT
$SBEXP	NML_NODE_SLI,NML_TRIG_LOOP	; Service circuit
$NEXT
 
FIELD$
$SBEXP	NML_NODE_SPA,NML_TRIG_LOOP	; Service password
$NEXT
 
FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error
 
FIELD$					; End of TRIGGER state table

	.SBTTL	NML$NPA_CIRLOOP	Circuit loop state table

;
; Circuit loop
;
IMSG$	NML$NPA_CIRLOOP
;
; Circuit id
; 
FIELD$
$SBEXP	NML_CIRCUIT_ID,NML_LOOP_LOOP

;
; Loop Parameter loop
;
FIELD$	NML_LOOP_LOOP
$EOM	,NPA$_EXIT
$SBEXP	NML_NODE_LPC,NML_LOOP_LOOP		; Loop count
$NEXT

FIELD$
$SBEXP	NML_NODE_LPL,NML_LOOP_LOOP		; Loop length
$NEXT

FIELD$
$SBEXP	NML_NODE_LPD,NML_LOOP_LOOP		; Loop data type
$NEXT

FIELD$
$EOM	,NPA$_EXIT
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR				; Format error

FIELD$



	.SBTTL	NML$NPA_NODE	Node parameter state table
;+
; Node parameters state table
;-
 
IMSG$	NML$NPA_NODE
 
FIELD$ 	NML_NODE_ADD			; Address
$WORD	NMA$C_PCNO_ADD,NML_WORD_SUB,,CPT$GK_PCNO_ADD,NML$GL_PRMCODE
 
FIELD$	NML_NODE_CPU			; CPU type
$WORD	NMA$C_PCNO_CPU,,,CPT$GK_PCNO_CPU,NML$GL_PRMCODE
FIELD$					; Verify legimate type
;$LOOK	NMA$C_CPU_8,NML_BYTE_SUB
$LOOK	NMA$C_CPU_11,NML_BYTE_SUB
;$LOOK	NMA$C_CPU_1020,NML_BYTE_SUB
$LOOK	NMA$C_CPU_VAX,NML_BYTE_SUB
$NULL	,NML_PVA_ERR			; Parameter value error
 
FIELD$	NML_NODE_DAD			; Dump address parameter
$WORD	NMA$C_PCNO_DAD,NML_LONG_SUB,,CPT$GK_PCNO_DAD,NML$GL_PRMCODE
 
FIELD$	NML_NODE_DCT			; Dump count parameter
$WORD	NMA$C_PCNO_DCT,NML_LONG_SUB,,CPT$GK_PCNO_DCT,NML$GL_PRMCODE
 
FIELD$	NML_NODE_DUM			; Dump file parameter
$WORD	NMA$C_PCNO_DUM,NML_IMG_SUB,,CPT$GK_PCNO_DUM,NML$GL_PRMCODE
 
FIELD$	NML_NODE_IHO			; Host parameter
$WORD	NMA$C_PCNO_IHO,NML_HOSTID_SUB,,CPT$GK_PCNO_IHO,NML$GL_PRMCODE
 
FIELD$	NML_NODE_LOA			; Load file parameter
$WORD	NMA$C_PCNO_LOA,NML_IMG_SUB,,CPT$GK_PCNO_LOA,NML$GL_PRMCODE
 
FIELD$	NML_NODE_LPC			; Loop count
$WORD	NMA$C_PCNO_LPC,NML_WORD_SUB,,CPT$GK_PCNO_LPC,NML$GL_PRMCODE

FIELD$	NML_NODE_LPL			; Loop length
$WORD	NMA$C_PCNO_LPL,NML_WORD_SUB,,CPT$GK_PCNO_LPL,NML$GL_PRMCODE

FIELD$	NML_NODE_LPD			; Loop data type
$WORD	NMA$C_PCNO_LPD,NML_BYTE_SUB,,CPT$GK_PCNO_LPD,NML$GL_PRMCODE

FIELD$	NML_NODE_NNA			; Name
$WORD	NMA$C_PCNO_NNA,,,CPT$GK_PCNO_NNA,NML$GL_PRMCODE
FIELD$
$IMAGE	6,NPA$_EXIT,NML$PRM_STRCHK
$NULL	,NML_FOR_ERR
 
FIELD$	NML_NODE_SLO			; Secondary loader
$WORD	NMA$C_PCNO_SLO,NML_IMG_SUB,,CPT$GK_PCNO_SLO,NML$GL_PRMCODE
 
FIELD$	NML_NODE_SDU			; Secondary dumper
$WORD	NMA$C_PCNO_SDU,NML_IMG_SUB,,CPT$GK_PCNO_SDU,NML$GL_PRMCODE
 
FIELD$	NML_NODE_SDV			; Service device parameter
$WORD	NMA$C_PCNO_SDV,,,CPT$GK_PCNO_SDV,NML$GL_PRMCODE
FIELD$
$LOOK	NMA$C_SOFD_DP,NML_BYTE_SUB	; DP11
$LOOK	NMA$C_SOFD_DU,NML_BYTE_SUB	; DU11/DUV11
$LOOK	NMA$C_SOFD_DL,NML_BYTE_SUB	; DL11
$LOOK	NMA$C_SOFD_DQ,NML_BYTE_SUB	; DQ11
$LOOK	NMA$C_SOFD_DA,NML_BYTE_SUB	; DA11
$LOOK	NMA$C_SOFD_DUP,NML_BYTE_SUB	; DUP11
$LOOK	NMA$C_SOFD_DMC,NML_BYTE_SUB	; DMC11
$LOOK	NMA$C_SOFD_DTE,NML_BYTE_SUB	; DTE
$LOOK	NMA$C_SOFD_KL8,NML_BYTE_SUB	; KL8
$LOOK	NMA$C_SOFD_DMV,NML_BYTE_SUB	; DMV
$LOOK	NMA$C_SOFD_DMP,NML_BYTE_SUB	; DMP
$LOOK	NMA$C_SOFD_DPV,NML_BYTE_SUB	; DPV
$LOOK	NMA$C_SOFD_DMF,NML_BYTE_SUB	; DMF
$NULL	,NML_PVA_ERR			; Parameter value error
 
FIELD$	NML_NODE_SLI			; Service circuit parameter
$WORD	NMA$C_PCNO_SLI,NML_IMG_SUB,NML$PRM_VFYNOD,CPT$GK_PCNO_SLI, -
						NML$GL_PRMCODE
 
FIELD$	NML_NODE_SPA			; Service password parameter
$WORD	NMA$C_PCNO_SPA,NML_IMG_SUB,,CPT$GK_PCNO_SPA,NML$GL_PRMCODE
 
FIELD$	NML_NODE_SID			; Software id parameter
$WORD	NMA$C_PCNO_SID,NML_IMG_SUB,,CPT$GK_PCNO_SID,NML$GL_PRMCODE
 
FIELD$	NML_NODE_STY			; Software type parameter
$WORD	NMA$C_PCNO_STY,,,CPT$GK_PCNO_STY,NML$GL_PRMCODE
FIELD$					; Check legimate values
$LOOK	NMA$C_SOFT_SECL,NML_BYTE_SUB	; Secondary loader
$LOOK	NMA$C_SOFT_TERL,NML_BYTE_SUB	; Tertiary loader
$LOOK	NMA$C_SOFT_OSYS,NML_BYTE_SUB	; Operating system
$NULL	,NML_PVA_ERR			; Parameter value error
 
FIELD$	NML_NODE_TLO			; Tertiary loader parameter
$WORD	NMA$C_PCNO_TLO,NML_IMG_SUB,,CPT$GK_PCNO_TLO,NML$GL_PRMCODE

FIELD$					; End of node parameter states

	.SBTTL	NML$NPA_SERSUB	Common service parameter subexpressions
 
;
; Common subexpressions
;
IMSG$	NML$NPA_SERSUB
;
; Node id 
; 
FIELD$	NML_NODEID
$EOM	,NML_FOR_ERR
$BYTE	0, NML_NODNUM
$IMAGE	6,NPA$_EXIT,NML$PRSSRVID,,,NML$C_NODEBYNAME
$ERROR	NML$_STS_IDE,,NML$PRM_ERR,,,NMA$C_STS_IDE ; Invalid id error
 
FIELD$	NML_NODNUM
$MATCH	2,NPA$_EXIT,NML$PRSSRVID,,,NML$C_NODE
$NULL	,NML_FOR_ERR
;
; Circuit id
;
FIELD$	NML_CIRCUIT_ID
$EOM	,NML_FOR_ERR
$IMAGE	16,NPA$_EXIT,NML$PRSSRVID,,,NML$C_CIRCUIT
$ERROR	NML$_STS_IDE,,NML$PRM_ERR,,,NMA$C_STS_IDE ; Invalid id error
;
; Host node address or name parameter
;
FIELD$	NML_HOSTID_SUB
$LOOK	0,NML_NODENUMBER
$IMAGE	6,NPA$_EXIT,NML$PRM_CHKHOST
 
FIELD$	NML_NODENUMBER
$MATCH	3,NPA$_EXIT,NML$PRM_CHKHOST
$NULL	,NML_FOR_ERR		; Format error
;
; Byte parameter
; 
FIELD$	NML_BYTE_SUB
$MATCH	1,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR		; Format error
;
; Word parameter
; 
FIELD$	NML_WORD_SUB
$MATCH	2,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR		; Format error
;
; Longword parameter
;
FIELD$	NML_LONG_SUB
$MATCH	4,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR		; Format error
;
; Image (string) parameter
;
FIELD$	NML_IMG_SUB
$IMAGE	255,NPA$_EXIT,NML$PRM_STRCHK
$NULL	,NML_FOR_ERR		; Format error
;
; Unrecognized parameter type error
; 
FIELD$	NML_PTY_ERR
$ERROR	NML$_STS_PTY,,NML$PRM_ERR,,,NMA$C_STS_PTY
;
; Parameter value error
;
FIELD$	NML_PVA_ERR
$ERROR	NML$_STS_PVA,,NML$PRM_ERR,,,NMA$C_STS_PVA
;
; Message format error
;
FIELD$	NML_FOR_ERR
$ERROR	NML$_STS_INV,,NML$PRM_ERR,,,NMA$C_STS_INV
;
; End of common parsing states
; 
FIELD$

	.END
 
