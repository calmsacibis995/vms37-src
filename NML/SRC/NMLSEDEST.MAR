	.TITLE	NML$SETDEFSTATE	SET/DEFINE PARAMETER STATE TABLES
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
 
;++ 
; FACILITY:	DECnet-VAX Network Management Listener
; 
; ABSTRACT: 
; 
;    This module contains the NPARSE state tables for processing the
;    NCP SET and DEFINE command message parameters.
; 
; ENVIRONMENT:	VAX/VMS Operating System 
; 
; AUTHOR:  Distributed Systems Software Engineering
;
; CREATION DATE: 6-November-1979 
; 
; MODIFIED BY: 
; 
;	V03-010	MKP0009		Kathy Perko		15-Feb-1982
;		Reinstate pipeline quota as an executor node parameter
;
;	V03-009	MKP0008		Kathy Perko		19-Jan_1982
;		Add circuit parameter, transport protocol (NMA$C_PCCI_XPT).
;
;	V03-008	MKP0007		Kathy Perko		7-Jan-1982
;		One more time, now -- move the RTT parameter from circuits
;		back to lines.
;
;	V03-007	MKP0006		Kathy Perko		20-Dec-1981
;		Add proxy login access parameters for nodes and objects.
;		Add DEC system 10/20 as an allowable CPU type for nodes.
;		Add DMF to device list for nodes.
;
;	V03-006	MKP0005		Kathy Perko		05-Dec-1981
;		Complete node service device list.  Add ACCESS parameter
;		to allowable executor node parameters
;		
;	V03-005	MKP0004		Kathy Perko		19-Nov-1981
;		Fix X25 protocol module parsing to check for grouping
;		errors.
;
;	V03-004	MKP0003		Kathy Perko		13-Nov-1981
;		Add line clock parameter.
;
;	V03-003	MKP0002		Kathy Perko		6-Sept-1981
;		Add VMS specific parameters: CIRCUIT VERIFICATION,
;		NODE ACCESS, EXECUTOR DEFAULT ACCESS and PIPELINE QUOTA.
;
;	V03-002	MKP0001		Kathy Perko		13-July-1981
;		Add multipoint and X25 parameters
;
;	V03-002	LMK0002		Len Kawell		15-Feb-1981
;		Enabled multi-point.
;
;	01.01	LMK0001		14-JAN-1981
;		Fix Software Type entry.
;-- 

	.SBTTL	Declarations
;
; INCLUDE FILES:
;

$NMADEF				; Network Management Layer definitions
$NMLDEF				; NML definitions

;
; OWN STORAGE:
;

	.SBTTL	NML$NPA_SEDECIR	Set/Define circuit parameter state table

;+++++++++++++++++++++++++++++++++++++++++++++++++++++++
;    Circuits
;-------------------------------------------------------

IMSG$	NML$NPA_SEDECIR

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_CIRCUIT_START
$EOM	,NPA$_EXIT
$SBEXP	NML_CIRCUIT_STA,NML_CIRCUIT_START	; State
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_SER,NML_CIRCUIT_START	; Service
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_LCT,NML_CIRCUIT_START	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_COS,NML_CIRCUIT_START	; Cost
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_HET,NML_CIRCUIT_START	; Hello timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_LIT,NML_CIRCUIT_START	; Listen timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_BLK,NML_CIRCUIT_START	; Blocking
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MRC,NML_CIRCUIT_START	; Maximum recalls
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_RCT,NML_CIRCUIT_START	; Recall timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_NUM,NML_CIRCUIT_START	; Number
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_POL,NML_CIRCUIT_START	; Polling state
$NEXT

;FIELD$
;$SBEXP	NML_CIRCUIT_OWN,NML_CIRCUIT_START	; Owner entity
;$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_USE,NML_CIRCUIT_START	; Usage
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_TYP,NML_CIRCUIT_START	; Type
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DTE,NML_CIRCUIT_START	; DTE
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_CHN,NML_CIRCUIT_START	; Channel
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MBL,NML_CIRCUIT_START	; Maximum block
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MWI,NML_CIRCUIT_START	; Maximum window
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_TRI,NML_CIRCUIT_START	; Tributary
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_BBT,NML_CIRCUIT_START	; Babble timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_TRT,NML_CIRCUIT_START	; Transmit timer
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MRB,NML_CIRCUIT_START	; Maximum receive buffers
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_MTR,NML_CIRCUIT_START	; Maximum transmits
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_ACB,NML_CIRCUIT_START	; Active base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_ACI,NML_CIRCUIT_START	; Active increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAB,NML_CIRCUIT_START	; Inactive base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAI,NML_CIRCUIT_START	; Inactive increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_IAT,NML_CIRCUIT_START	; Inactive threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYB,NML_CIRCUIT_START	; Dying base
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYI,NML_CIRCUIT_START	; Dying increment
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DYT,NML_CIRCUIT_START	; Dying threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_DTH,NML_CIRCUIT_START	; Dead threshold
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_VER,NML_CIRCUIT_START	; Verification
$NEXT

FIELD$
$SBEXP	NML_CIRCUIT_XPT,NML_CIRCUIT_START	; Transport protocol
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR				; Format error

FIELD$	NML_CIRCUIT_STA				; State parameter
$WORD	NMA$C_PCCI_STA,,,CPT$GK_PCCI_STA,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_STATE_ON,NML_BYTE_SUB	; On
$LOOK	NMA$C_STATE_OFF,NML_BYTE_SUB	; Off
$LOOK	NMA$C_STATE_SER,NML_BYTE_SUB	; Service
$LOOK	NMA$C_STATE_CLE,NML_BYTE_SUB	; Cleared
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_SER			; Service parameter
$WORD	NMA$C_PCCI_SER,,,CPT$GK_PCCI_SER,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_LINSV_ENA,NML_BYTE_SUB	; Enabled
$LOOK	NMA$C_LINSV_DIS,NML_BYTE_SUB	; Disabled
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_LCT			; Counter timer
$WORD	NMA$C_PCCI_LCT,NML_WORD_SUB,,CPT$GK_PCCI_LCT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_COS			; Cost
$WORD	NMA$C_PCCI_COS,NML_BYTE_SUB,,CPT$GK_PCCI_COS,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_HET			; Hello timer
$WORD	NMA$C_PCCI_HET,NML_WORD_SUB,,CPT$GK_PCCI_HET,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_LIT			; Listen timer
$WORD	NMA$C_PCCI_LIT,NML_WORD_SUB,,CPT$GK_PCCI_LIT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_BLK			; Blocking
$WORD	NMA$C_PCCI_BLK,,,CPT$GK_PCCI_BLK,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRBLK_ENA,NML_BYTE_SUB	; Enabled
$LOOK	NMA$C_CIRBLK_DIS,NML_BYTE_SUB	; Disabled
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_MRC			; Maximum recalls
$WORD	NMA$C_PCCI_MRC,NML_BYTE_SUB,,CPT$GK_PCCI_MRC,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_RCT			; Recall timer
$WORD	NMA$C_PCCI_RCT,NML_WORD_SUB,,CPT$GK_PCCI_RCT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_NUM			; Number
$WORD	NMA$C_PCCI_NUM,NML_IMG_SUB,,CPT$GK_PCCI_NUM,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_POL			; Polling state
$WORD	NMA$C_PCCI_POL,,,CPT$GK_PCCI_POL,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRPST_AUT,NML_BYTE_SUB	; Automatic
$LOOK	NMA$C_CIRPST_ACT,NML_BYTE_SUB	; Active
$LOOK	NMA$C_CIRPST_INA,NML_BYTE_SUB	; Inactive
$LOOK	NMA$C_CIRPST_DIE,NML_BYTE_SUB	; Dying
$LOOK	NMA$C_CIRPST_DED,NML_BYTE_SUB	; Dead
$NULL	,NML_PVA_ERR			; Parameter value error

;FIELD$	NML_CIRCUIT_OWN			; Owner entity identification
;$WORD	NMA$C_PCCI_OWN,NML_IMG_SUB,,CPT$GK_PCCI_OWN,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_USE			; Usage
$WORD	NMA$C_PCCI_USE,,,CPT$GK_PCCI_USE,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRUS_PER,NML_BYTE_SUB	; Permanent
$LOOK	NMA$C_CIRUS_INC,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_CIRUS_OUT,NML_BYTE_SUB	; Outgoing
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_TYP			; Type
$WORD	NMA$C_PCCI_TYP,,,CPT$GK_PCCI_TYP,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRTY_POI,NML_BYTE_SUB	; DDCMP Point
$LOOK	NMA$C_CIRTY_CON,NML_BYTE_SUB	; DDCMP Controller
$LOOK	NMA$C_CIRTY_TRI,NML_BYTE_SUB	; DDCMP Tributary
$LOOK	NMA$C_CIRTY_X25,NML_BYTE_SUB	; X25
$LOOK	NMA$C_CIRTY_DMC,NML_BYTE_SUB	; DDCMP DMC compatibility mode (DMP)
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_DTE			; DTE
$WORD	NMA$C_PCCI_DTE,NML_IMG_SUB,,CPT$GK_PCCI_DTE,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_CHN			; Channel
$WORD	NMA$C_PCCI_CHN,NML_WORD_SUB,,CPT$GK_PCCI_CHN,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_MBL			; Maximum block
$WORD	NMA$C_PCCI_MBL,NML_WORD_SUB,,CPT$GK_PCCI_MBL,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_MWI			; Maximum window
$WORD	NMA$C_PCCI_MWI,NML_BYTE_SUB,,CPT$GK_PCCI_MWI,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_TRI			; Tributary
$WORD	NMA$C_PCCI_TRI,NML_BYTE_SUB,,CPT$GK_PCCI_TRI,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_BBT			; Babble timer
$WORD	NMA$C_PCCI_BBT,NML_WORD_SUB,,CPT$GK_PCCI_BBT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_TRT			; Transmit timer
$WORD	NMA$C_PCCI_TRT,NML_WORD_SUB,,CPT$GK_PCCI_TRT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_MRB			; Maximum receive buffers
$WORD	NMA$C_PCCI_MRB,NML_BYTE_SUB,,CPT$GK_PCCI_MRB,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_MTR			; Maximum transmits
$WORD	NMA$C_PCCI_MTR,NML_BYTE_SUB,,CPT$GK_PCCI_MTR,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_ACB			; Active base
$WORD	NMA$C_PCCI_ACB,NML_BYTE_SUB,,CPT$GK_PCCI_ACB,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_ACI			; Active increment
$WORD	NMA$C_PCCI_ACI,NML_BYTE_SUB,,CPT$GK_PCCI_ACI,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_IAB			; Inactive base
$WORD	NMA$C_PCCI_IAB,NML_BYTE_SUB,,CPT$GK_PCCI_IAB,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_IAI			; Inactive increment
$WORD	NMA$C_PCCI_IAI,NML_BYTE_SUB,,CPT$GK_PCCI_IAI,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_IAT			; Inactive threshold
$WORD	NMA$C_PCCI_IAT,NML_BYTE_SUB,,CPT$GK_PCCI_IAT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_DYB			; Dying base
$WORD	NMA$C_PCCI_DYB,NML_BYTE_SUB,,CPT$GK_PCCI_DYB,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_DYI			; Dying increment
$WORD	NMA$C_PCCI_DYI,NML_BYTE_SUB,,CPT$GK_PCCI_DYI,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_DYT			; Dying threshold
$WORD	NMA$C_PCCI_DYT,NML_BYTE_SUB,,CPT$GK_PCCI_DYT,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_DTH			; Dead threshold
$WORD	NMA$C_PCCI_DTH,NML_BYTE_SUB,,CPT$GK_PCCI_DTH,NML$GL_PRMCODE

FIELD$	NML_CIRCUIT_VER			; Verification
$WORD	NMA$C_PCCI_VER,,,CPT$GK_PCCI_VER,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRVE_ENA,NML_BYTE_SUB	; Enabled
$LOOK	NMA$C_CIRVE_DIS,NML_BYTE_SUB	; Disabled
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_CIRCUIT_XPT			; Transport protocol
$WORD	NMA$C_PCCI_XPT,,,CPT$GK_PCCI_XPT,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_CIRXPT_ZND,NML_BYTE_SUB	; Z-node
$LOOK	NMA$C_CIRXPT_PH2,NML_BYTE_SUB	; Force Phase II on this circuit.
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$					; End of circuit parameter states

	.SBTTL	NML$NPA_SEDELIN	Set/Define line parameter state table

;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;    line
;------------------------------------------------------------------

IMSG$	NML$NPA_SEDELIN

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_LIN_START
$EOM	,NPA$_EXIT
$SBEXP	NML_LIN_STA,NML_LIN_START	; State
$NEXT

FIELD$
$SBEXP	NML_LIN_SER,NML_LIN_START	; Service
$NEXT

FIELD$
$SBEXP	NML_LIN_LCT,NML_LIN_START	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_LIN_PRO,NML_LIN_START	; Protocol
$NEXT

FIELD$
$SBEXP	NML_LIN_DUP,NML_LIN_START	; Duplex
$NEXT

FIELD$
$SBEXP	NML_LIN_CON,NML_LIN_START	; Controller
$NEXT

FIELD$
$SBEXP	NML_LIN_CLO,NML_LIN_START	; Clock
$NEXT

FIELD$
$SBEXP	NML_LIN_STI,NML_LIN_START	; Service timer
$NEXT

FIELD$
$SBEXP	NML_LIN_RTT,NML_LIN_START	; Retransmit timer
$NEXT

FIELD$
$SBEXP	NML_LIN_HTI,NML_LIN_START	; Holdback timer
$NEXT

FIELD$
$SBEXP	NML_LIN_MBL,NML_LIN_START	; Maximum block
$NEXT

FIELD$
$SBEXP	NML_LIN_MRT,NML_LIN_START	; Maximum retransmits
$NEXT

FIELD$
$SBEXP	NML_LIN_MWI,NML_LIN_START	; Maximum window
$NEXT

FIELD$
$SBEXP	NML_LIN_SLT,NML_LIN_START	; Scheduling timer
$NEXT

FIELD$
$SBEXP	NML_LIN_DDT,NML_LIN_START	; Dead timer
$NEXT

FIELD$
$SBEXP	NML_LIN_DLT,NML_LIN_START	; Delay timer
$NEXT

FIELD$
$SBEXP	NML_LIN_SRT,NML_LIN_START	; Stream timer
$NEXT

FIELD$
$SBEXP	NML_LIN_BFN,NML_LIN_START	; Receive buffer size
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error

FIELD$	NML_LIN_STA			; State parameter
$WORD	NMA$C_PCLI_STA,,,CPT$GK_PCLI_STA,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_STATE_ON,NML_BYTE_SUB	; On
$LOOK	NMA$C_STATE_OFF,NML_BYTE_SUB	; Off
$LOOK	NMA$C_STATE_SER,NML_BYTE_SUB	; Service
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LIN_SER			; Service parameter
$WORD	NMA$C_PCLI_SER,,,CPT$GK_PCLI_SER,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_LINSV_ENA,NML_BYTE_SUB	; Enabled
$LOOK	NMA$C_LINSV_DIS,NML_BYTE_SUB	; Disabled
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LIN_LCT			; Counter timer
$WORD	NMA$C_PCLI_LCT,NML_WORD_SUB,,CPT$GK_PCLI_LCT,NML$GL_PRMCODE

FIELD$	NML_LIN_PRO			; Protocol parameter
$WORD	NMA$C_PCLI_PRO,		   ,,CPT$GK_PCLI_PRO,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_LINPR_POI,NML_BYTE_SUB	; DDCMP Point
$LOOK	NMA$C_LINPR_CON,NML_BYTE_SUB	; DDCMP Controller
$LOOK	NMA$C_LINPR_TRI,NML_BYTE_SUB	; DDCMP Tributary
$LOOK	NMA$C_LINPR_LAP,NML_BYTE_SUB	; LAPB
$LOOK	NMA$C_LINPR_DMC,NML_BYTE_SUB	; DDCMP DMC compatibility mode (DMP)
$NULL	,NML_PVA_ERR			; Parameter error

FIELD$	NML_LIN_DUP			; Duplex parameter
$WORD	NMA$C_PCLI_DUP,,,CPT$GK_PCLI_DUP,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_DPX_FUL,NML_BYTE_SUB	; Full duplex
$LOOK	NMA$C_DPX_HAL,NML_BYTE_SUB	; Half duplex
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LIN_CON			; Controller mode parameter
$WORD	NMA$C_PCLI_CON,,,CPT$GK_PCLI_CON,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_LINCN_NOR,NML_BYTE_SUB	; Normal
$LOOK	NMA$C_LINCN_LOO,NML_BYTE_SUB	; Loopback
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LIN_CLO			; Clockparameter
$WORD	NMA$C_PCLI_CLO,,,CPT$GK_PCLI_CLO,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_LINCL_EXT,NML_BYTE_SUB	; External
$LOOK	NMA$C_LINCL_INT,NML_BYTE_SUB	; Internal
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LIN_STI			; Service timer parameter
$WORD	NMA$C_PCLI_STI,NML_WORD_SUB,,CPT$GK_PCLI_STI,NML$GL_PRMCODE

FIELD$	NML_LIN_RTT			; Retransmit timer
$WORD	NMA$C_PCLI_RTT,NML_WORD_SUB,,CPT$GK_PCLI_RTT,NML$GL_PRMCODE

FIELD$	NML_LIN_HTI			; Holdback timer parameter
$WORD	NMA$C_PCLI_HTI,NML_WORD_SUB,,CPT$GK_PCLI_HTI,NML$GL_PRMCODE

FIELD$	NML_LIN_MBL			; Maximum block parameter
$WORD	NMA$C_PCLI_MBL,NML_WORD_SUB,,CPT$GK_PCLI_MBL,NML$GL_PRMCODE

FIELD$	NML_LIN_MRT			; Maximum retransmits parameter
$WORD	NMA$C_PCLI_MRT,NML_BYTE_SUB,,CPT$GK_PCLI_MRT,NML$GL_PRMCODE

FIELD$	NML_LIN_MWI			; Maximum window parameter
$WORD	NMA$C_PCLI_MWI,NML_BYTE_SUB,,CPT$GK_PCLI_MWI,NML$GL_PRMCODE

FIELD$	NML_LIN_SLT			; Scheduling timer parameter
$WORD	NMA$C_PCLI_SLT,NML_WORD_SUB,,CPT$GK_PCLI_SLT,NML$GL_PRMCODE

FIELD$	NML_LIN_DDT			; Dead timer parameter
$WORD	NMA$C_PCLI_DDT,NML_WORD_SUB,,CPT$GK_PCLI_DDT,NML$GL_PRMCODE

FIELD$	NML_LIN_DLT			; Maximum retransmits parameter
$WORD	NMA$C_PCLI_DLT,NML_WORD_SUB,,CPT$GK_PCLI_DLT,NML$GL_PRMCODE

FIELD$	NML_LIN_SRT			; Maximum retransmits parameter
$WORD	NMA$C_PCLI_SRT,NML_WORD_SUB,,CPT$GK_PCLI_SRT,NML$GL_PRMCODE

FIELD$	NML_LIN_BFN			; Buffer size
$WORD	NMA$C_PCLI_BFN,NML_WORD_SUB,,CPT$GK_PCLI_BFN,NML$GL_PRMCODE

FIELD$					; End of line parameter states

	.SBTTL	NML$NPA_SEDELOG	Set/Define logging parameter state table

;+
;    logging
;-

IMSG$	NML$NPA_SEDELOG

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_LOG_START
$SBEXP	NML_LOG_STA,NML_LOG_START,NML$PRM_CHKESI ; State
$NEXT

FIELD$
$SBEXP	NML_LOG_LNA,NML_LOG_START,NML$PRM_CHKESI ; Name
$NEXT

FIELD$
$SBEXP	NML_LOG_SIN,NML_LOG_START,NML$PRM_CHKEFI,- ; Sink node
	NML$M_PRS_SNKNOD,NML$GL_PRS_FLGS
$NEXT

FIELD$
$SBEXP	NML_LOG_EVE,NML_LOG_START,NML$PRM_CHKEFI ; Events
$NEXT

FIELD$
$EOM	,NML_LOG_LAST,NML$PRSEXESNK	; End of message
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter type
$NULL	,NML_FOR_ERR			; Format error

FIELD$	NML_LOG_LAST
$NULL	,NPA$_EXIT,NML$PRM_CHKEVE	; Event parameter may be required
;
; Event logging parameters
;
FIELD$	NML_LOG_STA			; State parameter
$WORD	NMA$C_PCLO_STA,,,CPT$GK_PCLO_STA,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_STATE_ON, NML_BYTE_SUB	; On
$LOOK	NMA$C_STATE_OFF,NML_BYTE_SUB	; Off
$LOOK	NMA$C_STATE_HOL,NML_BYTE_SUB	; Hold
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_LOG_LNA			; Name parameter
$WORD	NMA$C_PCLO_LNA,NML_IMG_SUB,,CPT$GK_PCLO_LNA,NML$GL_PRMCODE


FIELD$	NML_LOG_EVE			; Event parameter
$WORD	NMA$C_PCLO_EVE,,,CPT$GK_PCLO_EVE,NML$GL_PRMCODE
FIELD$	NML_EVE_SUB
$BYTE	NMA$C_ENT_KNO,NML_EVE_CLASS,NML$PRM_EVTSRCTYP  ; No entity specified
$BYTE	NMA$C_ENT_NOD,NML_EVE_NODEID,NML$PRM_EVTSRCTYP ; Node entity
$BYTE	NMA$C_ENT_CIR,NML_EVE_CIRCUITID,NML$PRM_EVTSRCTYP ; Circuit entity
$BYTE	NMA$C_ENT_LIN,NML_EVE_LINEID,NML$PRM_EVTSRCTYP ; Line entity
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_EVE_NODEID			; Source node id
$LOOK	0,NML_EVE_NODNUM
$IMAGE	6,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_NODNUM
$MATCH	3,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_CIRCUITID		; Source circuit id
$IMAGE	16,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_LINEID			; Source line id
$IMAGE	16,NML_EVE_CLASS,NML$PRM_EVTSOURCE

FIELD$	NML_EVE_CLASS
$EOM	,NML_FOR_ERR			  ; Message format error
$MATCH	1,NML_EVE_CLASS2,NML$PRM_EVTCLASS ; Match class byte

FIELD$	NML_EVE_CLASS2
$EXTZV	<0,6,2,NPA$_ADVANCE>,NML_EVE_LIST,NML$PRM_EVTMSKTYP ; Single class
$EXTZV	<2,6,2,NPA$_ADVANCE>,NPA$_EXIT,NML$PRM_EVTMSKTYP ; Entire class
$EXTZV	<3,6,2,NPA$_ADVANCE>,NPA$_EXIT,NML$PRM_EVTMSKTYP ; Known events

FIELD$	NML_EVE_LIST
$IMAGE	8,NPA$_EXIT,NML$PRM_EVTMASK
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_LOG_SIN			; Sink node parameter
$WORD	NMA$C_PCLO_SIN,,,CPT$GK_PCLO_SIN,NML$GL_PRMCODE
FIELD$
$LOOK	0,NML_LOG_SINADR
$IMAGE	6,NPA$_EXIT,NML$PRSSNKNNA	; Sink node name
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_LOG_SINADR
$MATCH	3,NPA$_EXIT,NML$PRSSNKNAD	; Sink node address
$NULL	,NML_FOR_ERR
	
FIELD$					; End of logging parameter states

	.SBTTL	NML$NPA_SEDEEXE	Set/Define executor parameter state table

;+
;	executor
;-

IMSG$	NML$NPA_SEDEEXE

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_EXE_START
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_EXE_STA,NML_EXE_START,NML$PRM_CHKEXE	; State
$NEXT

FIELD$
$SBEXP	NML_EXE_IDE,NML_EXE_START,NML$PRM_CHKEXE	; Identification
$NEXT

;FIELD$
;$SBEXP	NML_NOD_IHO,NML_EXE_START,NML$PRM_CHKNOD	; Host
;$NEXT

FIELD$
$SBEXP	NML_NOD_CTI,NML_EXE_START,NML$PRM_CHKNOD	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_NOD_NNA,NML_EXE_START,NML$PRM_CHKNOD	; Name
$NEXT

FIELD$
$SBEXP	NML_EXE_ADD,NML_EXE_START,NML$PRM_CHKEXE	; Address
$NEXT

FIELD$
$SBEXP	NML_EXE_ITI,NML_EXE_START,NML$PRM_CHKEXE	; Incoming timer
$NEXT

FIELD$
$SBEXP	NML_EXE_OTI,NML_EXE_START,NML$PRM_CHKEXE	; Outgoing timer
$NEXT

FIELD$
$SBEXP	NML_EXE_MLK,NML_EXE_START,NML$PRM_CHKEXE	; Maximum links
$NEXT

FIELD$
$SBEXP	NML_EXE_DFA,NML_EXE_START,NML$PRM_CHKEXE	; Delay factor
$NEXT

FIELD$
$SBEXP	NML_EXE_DWE,NML_EXE_START,NML$PRM_CHKEXE	; Delay weight
$NEXT

FIELD$
$SBEXP	NML_EXE_IAT,NML_EXE_START,NML$PRM_CHKEXE	; Inactivity timer
$NEXT

FIELD$
$SBEXP	NML_EXE_RFA,NML_EXE_START,NML$PRM_CHKEXE	; Retransmit factor
$NEXT

FIELD$
$SBEXP	NML_EXE_RTI,NML_EXE_START,NML$PRM_CHKEXE	; Routing timer
$NEXT

FIELD$
$SBEXP	NML_EXE_SAD,NML_EXE_START,NML$PRM_CHKEXE	; Subaddresses
$NEXT

FIELD$
$SBEXP	NML_EXE_MAD,NML_EXE_START,NML$PRM_CHKEXE	; Maximum address
$NEXT

FIELD$
$SBEXP	NML_EXE_MLN,NML_EXE_START,NML$PRM_CHKEXE	; Maximum lines
$NEXT

FIELD$
$SBEXP	NML_EXE_MCO,NML_EXE_START,NML$PRM_CHKEXE	; Maximum cost
$NEXT

FIELD$
$SBEXP	NML_EXE_MHO,NML_EXE_START,NML$PRM_CHKEXE	; Maximum hops
$NEXT

FIELD$
$SBEXP	NML_EXE_MVI,NML_EXE_START,NML$PRM_CHKEXE	; Maximum visits
$NEXT

FIELD$
$SBEXP	NML_EXE_MBU,NML_EXE_START,NML$PRM_CHKEXE	; Maximum buffers
$NEXT

FIELD$
$SBEXP	NML_EXE_BUS,NML_EXE_START,NML$PRM_CHKEXE	; Buffer size
$NEXT

FIELD$
$SBEXP	NML_NOD_RPA,NML_EXE_START,NML$PRM_CHKNOD	; Receive password
$NEXT

FIELD$
$SBEXP	NML_NOD_TPA,NML_EXE_START,NML$PRM_CHKNOD	; Transmit password
$NEXT

FIELD$
$SBEXP	NML_NOD_PUS,NML_EXE_START,NML$PRM_CHKNOD	; Privileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_PAC,NML_EXE_START,NML$PRM_CHKNOD	; Privileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_PPW,NML_EXE_START,NML$PRM_CHKNOD	; Privileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_NUS,NML_EXE_START,NML$PRM_CHKNOD	; Nonprivileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_NAC,NML_EXE_START,NML$PRM_CHKNOD	; Nonprivileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_NPW,NML_EXE_START,NML$PRM_CHKNOD	; Nonprivileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_ACC,NML_EXE_START,NML$PRM_CHKNOD	; Access
$NEXT

FIELD$
$SBEXP	NML_EXE_DAC,NML_EXE_START,NML$PRM_CHKEXE	; Default access
$NEXT

FIELD$
$SBEXP	NML_EXE_PIQ,NML_EXE_START,NML$PRM_CHKEXE	; Pipeline quota
$NEXT

FIELD$
$SBEXP	NML_NOD_PRX,NML_EXE_START,NML$PRM_CHKNOD	; Proxy login access
$NEXT

FIELD$
$SBEXP	NML_EXE_DPX,NML_EXE_START,NML$PRM_CHKEXE	; Default proxy login
							;	access
$NEXT

FIELD$
$WORD	NMA$C_PCNO_SLI,NML_PNA_ERR	; Service line
$WORD	NMA$C_PCNO_SPA,NML_PNA_ERR	; Service password
$WORD	NMA$C_PCNO_SDV,NML_PNA_ERR	; Service device
$WORD	NMA$C_PCNO_CPU,NML_PNA_ERR	; CPU type
$WORD	NMA$C_PCNO_STY,NML_PNA_ERR	; Software type
$WORD	NMA$C_PCNO_SID,NML_PNA_ERR	; Software identification
$WORD	NMA$C_PCNO_LOA,NML_PNA_ERR	; Load file
$WORD	NMA$C_PCNO_SLO,NML_PNA_ERR	; Secondary loader
$WORD	NMA$C_PCNO_TLO,NML_PNA_ERR	; Tertiary loader
$WORD	NMA$C_PCNO_DUM,NML_PNA_ERR	; Dump file
$WORD	NMA$C_PCNO_SDU,NML_PNA_ERR	; Secondary dumper
$WORD	NMA$C_PCNO_DAD,NML_PNA_ERR	; Dump address
$WORD	NMA$C_PCNO_DCT,NML_PNA_ERR	; Dump count
$WORD	NMA$C_PCNO_IHO,NML_PNA_ERR	; Host
$WORD	NMA$C_PCNO_NLI,NML_PNA_ERR	; Line
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter
$NULL	,NML_FOR_ERR			; Format error
;
; Parameter matching subexpressions.
;
FIELD$	NML_EXE_STA			; State
$WORD	NMA$C_PCNO_STA,,,CPT$GK_PCNO_STA,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_STATE_ON,NML_BYTE_SUB	; On
$LOOK	NMA$C_STATE_OFF,NML_BYTE_SUB	; Off
$LOOK	NMA$C_STATE_SHU,NML_BYTE_SUB	; Shut
$LOOK	NMA$C_STATE_RES,NML_BYTE_SUB	; Restricted
$NULL	,NML_PVA_ERR

FIELD$	NML_EXE_IDE			; Identification
$WORD	NMA$C_PCNO_IDE,NML_IMG_SUB,,CPT$GK_PCNO_IDE,NML$GL_PRMCODE

FIELD$	NML_EXE_ADD			; Address
$WORD	NMA$C_PCNO_ADD,NML_WORD_SUB,,CPT$GK_PCNO_ADD,NML$GL_PRMCODE

FIELD$	NML_EXE_ITI			; Incoming timer
$WORD	NMA$C_PCNO_ITI,NML_WORD_SUB,,CPT$GK_PCNO_ITI,NML$GL_PRMCODE

FIELD$	NML_EXE_OTI			; Outgoing timer
$WORD	NMA$C_PCNO_OTI,NML_WORD_SUB,,CPT$GK_PCNO_OTI,NML$GL_PRMCODE

FIELD$	NML_EXE_MLK			; Maximum links
$WORD	NMA$C_PCNO_MLK,NML_WORD_SUB,,CPT$GK_PCNO_MLK,NML$GL_PRMCODE

FIELD$	NML_EXE_DFA			; Delay factor
$WORD	NMA$C_PCNO_DFA,NML_BYTE_SUB,,CPT$GK_PCNO_DFA,NML$GL_PRMCODE

FIELD$	NML_EXE_DWE			; Delay weight
$WORD	NMA$C_PCNO_DWE,NML_BYTE_SUB,,CPT$GK_PCNO_DWE,NML$GL_PRMCODE

FIELD$	NML_EXE_IAT			; Inactivity timer
$WORD	NMA$C_PCNO_IAT,NML_WORD_SUB,,CPT$GK_PCNO_IAT,NML$GL_PRMCODE

FIELD$	NML_EXE_RFA			; Retransmit factor
$WORD	NMA$C_PCNO_RFA,NML_WORD_SUB,,CPT$GK_PCNO_RFA,NML$GL_PRMCODE

FIELD$	NML_EXE_RTI			; Routing timer
$WORD	NMA$C_PCNO_RTI,NML_WORD_SUB,,CPT$GK_PCNO_RTI,NML$GL_PRMCODE

FIELD$	NML_EXE_SAD			; Subaddresses
$WORD	NMA$C_PCNO_SAD,NML_LONG_SUB,,CPT$GK_PCNO_RTI,NML$GL_PRMCODE

FIELD$	NML_EXE_MAD			; Maximum address
$WORD	NMA$C_PCNO_MAD,NML_WORD_SUB,,CPT$GK_PCNO_MAD,NML$GL_PRMCODE

FIELD$	NML_EXE_MLN			; Maximum lines
$WORD	NMA$C_PCNO_MLN,NML_WORD_SUB,,CPT$GK_PCNO_MLN,NML$GL_PRMCODE

FIELD$	NML_EXE_MCO			; Maximum cost
$WORD	NMA$C_PCNO_MCO,NML_WORD_SUB,,CPT$GK_PCNO_MCO,NML$GL_PRMCODE

FIELD$	NML_EXE_MHO			; Maximum hops
$WORD	NMA$C_PCNO_MHO,NML_BYTE_SUB,,CPT$GK_PCNO_MHO,NML$GL_PRMCODE

FIELD$	NML_EXE_MVI			; Maximum visits
$WORD	NMA$C_PCNO_MVI,NML_BYTE_SUB,,CPT$GK_PCNO_MVI,NML$GL_PRMCODE

FIELD$	NML_EXE_MBU			; Maximum buffers
$WORD	NMA$C_PCNO_MBU,NML_WORD_SUB,,CPT$GK_PCNO_MBU,NML$GL_PRMCODE

FIELD$	NML_EXE_BUS			; Buffer size
$WORD	NMA$C_PCNO_BUS,NML_WORD_SUB,,CPT$GK_PCNO_BUS,NML$GL_PRMCODE

FIELD$	NML_EXE_DAC			; Default access
$WORD	NMA$C_PCNO_DAC,,,CPT$GK_PCNO_DAC,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_ACES_NONE,NML_BYTE_SUB	; None
$LOOK	NMA$C_ACES_INCO,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_ACES_OUTG,NML_BYTE_SUB	; Outgoing
$LOOK	NMA$C_ACES_BOTH,NML_BYTE_SUB	; Both
$NULL	,NML_PVA_ERR

FIELD$	NML_EXE_PIQ			; Pipeline quota
$WORD	NMA$C_PCNO_PIQ,NML_WORD_SUB,,CPT$GK_PCNO_PIQ,NML$GL_PRMCODE

FIELD$	NML_EXE_DPX			; Default proxy login access
$WORD	NMA$C_PCNO_DPX,,,CPT$GK_PCNO_DPX,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_ACES_NONE,NML_BYTE_SUB	; None
$LOOK	NMA$C_ACES_INCO,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_ACES_OUTG,NML_BYTE_SUB	; Outgoing
$LOOK	NMA$C_ACES_BOTH,NML_BYTE_SUB	; Both
$NULL	,NML_PVA_ERR

FIELD$					; End of executor parameter states

	.SBTTL	NML$NPA_SEDENOD	Set/Define node parameter state table

;+
;	node
;-

IMSG$	NML$NPA_SEDENOD

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_NOD_START
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_NOD_SLI,NML_NOD_START,NML$PRM_CHKREM	; Service circuit
$NEXT

FIELD$
$SBEXP	NML_NOD_SPA,NML_NOD_START,NML$PRM_CHKREM	; Service password
$NEXT

FIELD$
$SBEXP	NML_NOD_SDV,NML_NOD_START,NML$PRM_CHKREM	; Service device
$NEXT

FIELD$
$SBEXP	NML_NOD_CPU,NML_NOD_START,NML$PRM_CHKREM	; CPU type
$NEXT

FIELD$
$SBEXP	NML_NOD_STY,NML_NOD_START,NML$PRM_CHKREM	; Software type
$NEXT

FIELD$
$SBEXP	NML_NOD_SID,NML_NOD_START,NML$PRM_CHKREM	; Software id
$NEXT

FIELD$
$SBEXP	NML_NOD_LOA,NML_NOD_START,NML$PRM_CHKREM	; Load file
$NEXT

FIELD$
$SBEXP	NML_NOD_SLO,NML_NOD_START,NML$PRM_CHKREM	; Secondary loader
$NEXT

FIELD$
$SBEXP	NML_NOD_TLO,NML_NOD_START,NML$PRM_CHKREM	; Tertiary loader
$NEXT

FIELD$
$SBEXP	NML_NOD_DUM,NML_NOD_START,NML$PRM_CHKREM	; Dump file
$NEXT

FIELD$
$SBEXP	NML_NOD_SDU,NML_NOD_START,NML$PRM_CHKREM	; Secondary dumper
$NEXT

FIELD$
$SBEXP	NML_NOD_DAD,NML_NOD_START,NML$PRM_CHKREM	; Dump address
$NEXT

FIELD$
$SBEXP	NML_NOD_DCT,NML_NOD_START,NML$PRM_CHKREM	; Dump count
$NEXT

FIELD$
$SBEXP	NML_NOD_IHO,NML_NOD_START,NML$PRM_CHKREM	; Host
$NEXT

FIELD$
$SBEXP	NML_NOD_CTI,NML_NOD_START,NML$PRM_CHKREM	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_NOD_NNA,NML_NOD_START,NML$PRM_CHKREM	; Name
$NEXT

FIELD$
$SBEXP	NML_NOD_NLI,NML_NOD_LOOPNA,NML$PRM_CHKLOO	; Circuit
$NEXT

FIELD$
$SBEXP	NML_NOD_ADD,NML_NOD_START,NML$PRM_CHKREM	; Address
$NEXT

FIELD$
$SBEXP	NML_NOD_PUS,NML_NOD_START,NML$PRM_CHKREM	; Privileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_PAC,NML_NOD_START,NML$PRM_CHKREM	; Privileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_PPW,NML_NOD_START,NML$PRM_CHKREM	; Privileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_NUS,NML_NOD_START,NML$PRM_CHKREM	; Nonprivileged user id
$NEXT

FIELD$
$SBEXP	NML_NOD_NAC,NML_NOD_START,NML$PRM_CHKREM	; Nonprivileged account
$NEXT

FIELD$
$SBEXP	NML_NOD_NPW,NML_NOD_START,NML$PRM_CHKREM	; Nonprivileged password
$NEXT

FIELD$
$SBEXP	NML_NOD_RPA,NML_NOD_START,NML$PRM_CHKREM	; Receive password
$NEXT

FIELD$
$SBEXP	NML_NOD_TPA,NML_NOD_START,NML$PRM_CHKREM	; Transmit password
$NEXT

FIELD$
$SBEXP	NML_NOD_ACC,NML_NOD_START,NML$PRM_CHKREM	; Access
$NEXT

FIELD$
$SBEXP	NML_NOD_PRX,NML_NOD_START,NML$PRM_CHKREM	; Proxy access
$NEXT

FIELD$
$NULL	,NML_NOD_REMPNA
;
; Parameters that are not applicable to loop nodes.
;
FIELD$	NML_NOD_LOOPNA
$WORD	NMA$C_PCNO_SLI,NML_PNA_ERR	; Service line
$WORD	NMA$C_PCNO_SPA,NML_PNA_ERR	; Service password
$WORD	NMA$C_PCNO_SDV,NML_PNA_ERR	; Service device
$WORD	NMA$C_PCNO_CPU,NML_PNA_ERR	; CPU type
$WORD	NMA$C_PCNO_STY,NML_PNA_ERR	; Software type
$WORD	NMA$C_PCNO_SID,NML_PNA_ERR	; Software identification
$WORD	NMA$C_PCNO_LOA,NML_PNA_ERR	; Load file
$WORD	NMA$C_PCNO_SLO,NML_PNA_ERR	; Secondary loader
$WORD	NMA$C_PCNO_TLO,NML_PNA_ERR	; Tertiary loader
$WORD	NMA$C_PCNO_DUM,NML_PNA_ERR	; Dump file
$WORD	NMA$C_PCNO_SDU,NML_PNA_ERR	; Secondary dumper
$WORD	NMA$C_PCNO_DAD,NML_PNA_ERR	; Dump address
$WORD	NMA$C_PCNO_DCT,NML_PNA_ERR	; Dump count
$WORD	NMA$C_PCNO_IHO,NML_PNA_ERR	; Host
$WORD	NMA$C_PCNO_CTI,NML_PNA_ERR	; Counter timer
$WORD	NMA$C_PCNO_NNA,NML_PNA_ERR	; Name
$WORD	NMA$C_PCNO_ADD,NML_PNA_ERR	; Address
$WORD	NMA$C_PCNO_PUS,NML_PNA_ERR	; Privileged user id
$WORD	NMA$C_PCNO_PAC,NML_PNA_ERR	; Privileged account
$WORD	NMA$C_PCNO_PPW,NML_PNA_ERR	; Privileged password
$WORD	NMA$C_PCNO_NUS,NML_PNA_ERR	; Nonprivileged user id
$WORD	NMA$C_PCNO_NAC,NML_PNA_ERR	; Nonprivileged account
$WORD	NMA$C_PCNO_NPW,NML_PNA_ERR	; Nonprivileged password
$WORD	NMA$C_PCNO_RPA,NML_PNA_ERR	; Receive password
$WORD	NMA$C_PCNO_TPA,NML_PNA_ERR	; Transmit password
$WORD	NMA$C_PCNO_ACC,NML_PNA_ERR	; Access
$WORD	NMA$C_PCNO_DAC,NML_PNA_ERR	; Default access
$WORD	NMA$C_PCNO_PRX,NML_PNA_ERR	; Proxy login access
$WORD	NMA$C_PCNO_DPX,NML_PNA_ERR	; Default proxy login access
$NEXT
;
; Parameters that are not applicable to remote nodes.
;
FIELD$	NML_NOD_REMPNA
$WORD	NMA$C_PCNO_STA,NML_PNA_ERR	; State
$WORD	NMA$C_PCNO_IDE,NML_PNA_ERR	; Identification
$WORD	NMA$C_PCNO_ITI,NML_PNA_ERR	; Incoming timer
$WORD	NMA$C_PCNO_OTI,NML_PNA_ERR	; Outgoing timer
$WORD	NMA$C_PCNO_MLK,NML_PNA_ERR	; Maximum links
$WORD	NMA$C_PCNO_DFA,NML_PNA_ERR	; Delay factor
$WORD	NMA$C_PCNO_DWE,NML_PNA_ERR	; Delay weight
$WORD	NMA$C_PCNO_IAT,NML_PNA_ERR	; Inactivity timer
$WORD	NMA$C_PCNO_RFA,NML_PNA_ERR	; Retransmit factor
$WORD	NMA$C_PCNO_RTI,NML_PNA_ERR	; Routing timer
$WORD	NMA$C_PCNO_MAD,NML_PNA_ERR	; Maximum address
$WORD	NMA$C_PCNO_MLN,NML_PNA_ERR	; Maximum lines
$WORD	NMA$C_PCNO_MCO,NML_PNA_ERR	; Maximum cost
$WORD	NMA$C_PCNO_MHO,NML_PNA_ERR	; Maximum hops
$WORD	NMA$C_PCNO_MVI,NML_PNA_ERR	; Maximum visits
$WORD	NMA$C_PCNO_MBU,NML_PNA_ERR	; Maximum buffers
$WORD	NMA$C_PCNO_BUS,NML_PNA_ERR	; Buffer size
$WORD	NMA$C_PCNO_DAC,NML_PNA_ERR	; Default access
$WORD	NMA$C_PCNO_DPX,NML_PNA_ERR	; Default proxy login access
$NEXT

FIELD$	NML_NOD_EOM
$EOM	,NPA$_EXIT			; End of message
$MATCH	2,NML_PTY_ERR			; Unrecognized parameter
$NULL	,NML_FOR_ERR			; Format error
;
; Parameter matching subexpressions.
;
FIELD$	NML_NOD_PUS			; Priv userid
$WORD	NMA$C_PCNO_PUS,NML_IMG_SUB,,CPT$GK_PCNO_PUS,NML$GL_PRMCODE

FIELD$	NML_NOD_PAC			; Priv account
$WORD	NMA$C_PCNO_PAC,NML_IMG_SUB,,CPT$GK_PCNO_PAC,NML$GL_PRMCODE

FIELD$	NML_NOD_PPW			; Priv password
$WORD	NMA$C_PCNO_PPW,NML_IMG_SUB,,CPT$GK_PCNO_PPW,NML$GL_PRMCODE

FIELD$	NML_NOD_NUS			; Nopriv userid
$WORD	NMA$C_PCNO_NUS,NML_IMG_SUB,,CPT$GK_PCNO_NUS,NML$GL_PRMCODE

FIELD$	NML_NOD_NAC			; Nopriv account
$WORD	NMA$C_PCNO_NAC,NML_IMG_SUB,,CPT$GK_PCNO_NAC,NML$GL_PRMCODE

FIELD$	NML_NOD_NPW			; Nopriv password
$WORD	NMA$C_PCNO_NPW,NML_IMG_SUB,,CPT$GK_PCNO_NPW,NML$GL_PRMCODE

FIELD$	NML_NOD_IHO			; Host
$WORD	NMA$C_PCNO_IHO,NML_HOSTID_SUB,,CPT$GK_PCNO_IHO,NML$GL_PRMCODE

FIELD$	NML_NOD_NNA			; Name
$WORD	NMA$C_PCNO_NNA,,NML$PRM_CHKKNO,CPT$GK_PCNO_NNA,NML$GL_PRMCODE
FIELD$
$IMAGE	6,NPA$_EXIT,NML$PRM_STRCHK
$NULL	,NML_FOR_ERR

FIELD$	NML_NOD_NLI			; Circuit
$WORD	NMA$C_PCNO_NLI,NML_IMG_SUB,NML$PRM_CHKKNO,CPT$GK_PCNO_NLI,NML$GL_PRMCODE

FIELD$	NML_NOD_ADD			; Address
$WORD	NMA$C_PCNO_ADD,NML_WORD_SUB,NML$PRM_CHKKNO,CPT$GK_PCNO_AD$,NML$GL_PRMCODE

FIELD$	NML_NOD_CTI			; Counter timer
$WORD	NMA$C_PCNO_CTI,NML_WORD_SUB,,CPT$GK_PCNO_CTI,NML$GL_PRMCODE

FIELD$	NML_NOD_SLI			; Service circuit
$WORD	NMA$C_PCNO_SLI,NML_IMG_SUB,,CPT$GK_PCNO_SLI,NML$GL_PRMCODE

FIELD$	NML_NOD_SPA			; Service password
$WORD	NMA$C_PCNO_SPA,NML_IMG_SUB,,CPT$GK_PCNO_SPA,NML$GL_PRMCODE

FIELD$	NML_NOD_CPU			; Cpu type
$WORD	NMA$C_PCNO_CPU,,,CPT$GK_PCNO_CPU,NML$GL_PRMCODE
FIELD$
$LOOK	NMA$C_CPU_8,NML_BYTE_SUB	; PDP8
$LOOK	NMA$C_CPU_11,NML_BYTE_SUB	; PDP11
$LOOK	NMA$C_CPU_1020,NML_BYTE_SUB	; 10/20
$LOOK	NMA$C_CPU_VAX,NML_BYTE_SUB	; VAX
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_NOD_SDV			; Service device
$WORD	NMA$C_PCNO_SDV,,,CPT$GK_PCNO_SDV,NML$GL_PRMCODE
FIELD$
$LOOK	NMA$C_SOFD_DP,NML_BYTE_SUB	; DP11
$LOOK	NMA$C_SOFD_DU,NML_BYTE_SUB	; DU11/DUV11
$LOOK	NMA$C_SOFD_DL,NML_BYTE_SUB	; DL11
$LOOK	NMA$C_SOFD_DQ,NML_BYTE_SUB	; DQ11
$LOOK	NMA$C_SOFD_DA,NML_BYTE_SUB	; DA11
$LOOK	NMA$C_SOFD_DUP,NML_BYTE_SUB	; DUP11
$LOOK	NMA$C_SOFD_DMC,NML_BYTE_SUB	; DMC11
$LOOK	NMA$C_SOFD_DMP,NML_BYTE_SUB	; DMP11
$LOOK	NMA$C_SOFD_DTE,NML_BYTE_SUB	; DTE
$LOOK	NMA$C_SOFD_KL8,NML_BYTE_SUB	; KL8
$LOOK	NMA$C_SOFD_DMV,NML_BYTE_SUB	; DMV
$LOOK	NMA$C_SOFD_DPV,NML_BYTE_SUB	; DPV
$LOOK	NMA$C_SOFD_DMF,NML_BYTE_SUB	; DMF
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_NOD_LOA			; Load file
$WORD	NMA$C_PCNO_LOA,NML_IMG_SUB,,CPT$GK_PCNO_LOA,NML$GL_PRMCODE

FIELD$	NML_NOD_SLO			; Secondary loader
$WORD	NMA$C_PCNO_SLO,NML_IMG_SUB,,CPT$GK_PCNO_SLO,NML$GL_PRMCODE

FIELD$	NML_NOD_TLO			; Tertiary loader
$WORD	NMA$C_PCNO_TLO,NML_IMG_SUB,,CPT$GK_PCNO_TLO,NML$GL_PRMCODE

FIELD$	NML_NOD_STY			; Software type
$WORD	NMA$C_PCNO_STY,,,CPT$GK_PCNO_STY,NML$GL_PRMCODE
FIELD$
$LOOK	NMA$C_SOFT_SECL,NML_BYTE_SUB	; Secondary loader
$LOOK	NMA$C_SOFT_TERL,NML_BYTE_SUB	; Tertiary loader
$LOOK	NMA$C_SOFT_OSYS,NML_BYTE_SUB	; Operating system
$NULL	,NML_PVA_ERR			; Parameter value error

FIELD$	NML_NOD_SID			; System id
$WORD	NMA$C_PCNO_SID,NML_IMG_SUB,,CPT$GK_PCNO_SID,NML$GL_PRMCODE

FIELD$	NML_NOD_DUM			; Dump file
$WORD	NMA$C_PCNO_DUM,NML_IMG_SUB,,CPT$GK_PCNO_DUM,NML$GL_PRMCODE

FIELD$	NML_NOD_SDU			; Secondary dumper
$WORD	NMA$C_PCNO_SDU,NML_IMG_SUB,,CPT$GK_PCNO_SDU,NML$GL_PRMCODE

FIELD$	NML_NOD_DAD			; Dump address
$WORD	NMA$C_PCNO_DAD,NML_LONG_SUB,,CPT$GK_PCNO_DAD,NML$GL_PRMCODE

FIELD$	NML_NOD_DCT			; Dump count
$WORD	NMA$C_PCNO_DCT,NML_LONG_SUB,,CPT$GK_PCNO_DCT,NML$GL_PRMCODE

FIELD$	NML_NOD_RPA			; Receive password
$WORD	NMA$C_PCNO_RPA,NML_IMG_SUB,,CPT$GK_PCNO_RPA,NML$GL_PRMCODE

FIELD$	NML_NOD_TPA			; Transmit password
$WORD	NMA$C_PCNO_TPA,NML_IMG_SUB,,CPT$GK_PCNO_TPA,NML$GL_PRMCODE

FIELD$	NML_NOD_ACC			; Access
$WORD	NMA$C_PCNO_ACC,,,CPT$GK_PCNO_ACC,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_ACES_NONE,NML_BYTE_SUB	; None
$LOOK	NMA$C_ACES_INCO,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_ACES_OUTG,NML_BYTE_SUB	; Outgoing
$LOOK	NMA$C_ACES_BOTH,NML_BYTE_SUB	; Both
$NULL	,NML_PVA_ERR

FIELD$	NML_NOD_PRX			; Proxy login access
$WORD	NMA$C_PCNO_PRX,,,CPT$GK_PCNO_PRX,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_ACES_NONE,NML_BYTE_SUB	; None
$LOOK	NMA$C_ACES_INCO,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_ACES_OUTG,NML_BYTE_SUB	; Outgoing
$LOOK	NMA$C_ACES_BOTH,NML_BYTE_SUB	; Both
$NULL	,NML_PVA_ERR

FIELD$					; End of node parameter states

	.SBTTL	NML$NPA_SEDEMOD_PROTOCOL	Set/Define Protocol Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Protocol Module State Table
;	The NICE parameters must all be in one of three groups: DTEs, Groups,
;	or Protocol module parameters.
;------------------------------------------------------------

IMSG$	NML$NPA_SEDEMOD_PROTOCOL

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$	NML_PROTOCOL_START
$EOM	,NPA$_EXIT
$NEXT

FIELD$						; DTE
$SBEXP	NML_PROT_DTE,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_DTE_GROUP
$NEXT

FIELD$						; Group
$SBEXP	NML_PROT_GRP,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_GROUP_GROUP
$NEXT

;
;	Protocol DTE State Table
;
FIELD$						; State
$SBEXP	NML_DTE_STA,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_DTE_GROUP
$NEXT

FIELD$						; Counter timer
$SBEXP	NML_DTE_CTM,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_DTE_GROUP
$NEXT

FIELD$						; Line
$SBEXP	NML_DTE_LIN,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_DTE_GROUP
$NEXT

FIELD$						; Channels
$SBEXP	NML_DTE_CHN,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_DTE_GROUP
$NEXT

;
; Group parameters
;
FIELD$						; Group DTE
$SBEXP	NML_GROUP_GDT,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL, -
						,,NML$M_GROUP_GROUP
$NEXT

FIELD$						; Group Number
$SBEXP	NML_GROUP_GNM,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_GROUP_GROUP
$NEXT

FIELD$						; Group type
$SBEXP	NML_GROUP_GTY,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_GROUP_GROUP
$NEXT

;
; X-25 Protocol Network parameters
;
FIELD$						; Network
$SBEXP	NML_PROT_NET,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Default block
$SBEXP	NML_PROT_DBL,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Default window
$SBEXP	NML_PROT_DWI,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Maximum block
$SBEXP	NML_PROT_MBL,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Maximum window
$SBEXP	NML_PROT_MWI,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Maximum clears
$SBEXP	NML_PROT_MCL,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Maximum resets
$SBEXP	NML_PROT_MRS,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Maximum restarts
$SBEXP	NML_PROT_MST,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Call timer
$SBEXP	NML_PROT_CAT,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Clear timer
$SBEXP	NML_PROT_CLT,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Reset timer
$SBEXP	NML_PROT_RST,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$						; Restart timer
$SBEXP	NML_PROT_STT,NML_PROTOCOL_START,NML$PRM_CHK_PROTOCOL,,,NML$M_NET_GROUP
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR

;
; X-25 Protocol module DTE group parameters
;
FIELD$	NML_PROT_DTE
$WORD	NMA$C_PCXP_DTE,NML_PROT_ENT,,NML$C_PROTOCOL_DTE,NML$GL_PROTOCOL_ENTITY

FIELD$	NML_DTE_STA			; X-25 DTE State
$WORD	NMA$C_PCXP_STA,,,CPT$GK_PCXP_STA,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_XPRST_ON,NML_BYTE_SUB	; On
$LOOK	NMA$C_XPRST_OFF,NML_BYTE_SUB	; Off
$LOOK	NMA$C_XPRST_SHU,NML_BYTE_SUB	; Shut
$NULL	,NML_PVA_ERR

FIELD$	NML_DTE_CTM			; X-25 DTE Counter timer
$WORD	NMA$C_PCXP_CTM,NML_WORD_SUB,,CPT$GK_PCXP_CTM,NML$GL_PRMCODE

FIELD$	NML_DTE_LIN			; X-25 DTE Line
$WORD	NMA$C_PCXP_LIN,NML_IMG_SUB,,CPT$GK_PCXP_LIN,NML$GL_PRMCODE

FIELD$	NML_DTE_CHN			; X-25 DTE Channels
$WORD	NMA$C_PCXP_CHN,NML_LONG_SUB,,CPT$GK_PCXP_STA,NML$GL_PRMCODE

FIELD$


;
;	X-25 Protocol Group group parameters
;
FIELD$	NML_PROT_GRP				; Group
$WORD	NMA$C_PCXP_GRP,NML_PROT_ENT,,NML$C_PROTOCOL_GROUP, -
						NML$GL_PROTOCOL_ENTITY

FIELD$	NML_GROUP_GDT			; X-25 Group DTE
$WORD	NMA$C_PCXP_GDT,NPA$_EXIT,NML$PRSIDN

FIELD$	NML_GROUP_GNM			; X-25 Group number
$WORD	NMA$C_PCXP_GNM,NML_WORD_SUB,,CPT$GK_PCXP_GNM,NML$GL_PRMCODE

FIELD$	NML_GROUP_GTY			; X-25 Group type
$WORD	NMA$C_PCXP_GTY,,,CPT$GK_PCXP_GTY,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_XPRTY_BIL,NML_BYTE_SUB	; Bilateral
$NULL	,NML_PVA_ERR			; Parameter value error

;
;	X.25 Protocol Module network parameters.
;
FIELD$	NML_PROT_NET			; X-25 Protocol network
$WORD	NMA$C_PCXP_NET,NML_IMG_SUB,,CPT$GK_PCXP_NET,NML$GL_PRMCODE

FIELD$	NML_PROT_DBL			; X-25 Protocol default block
$WORD	NMA$C_PCXP_DBL,NML_WORD_SUB,,CPT$GK_PCXP_DBL,NML$GL_PRMCODE

FIELD$	NML_PROT_DWI			; X-25 Protocol default window
$WORD	NMA$C_PCXP_DWI,NML_BYTE_SUB,,CPT$GK_PCXP_DWI,NML$GL_PRMCODE

FIELD$	NML_PROT_MBL			; X-25 Protocol Maximum block
$WORD	NMA$C_PCXP_MBL,NML_WORD_SUB,,CPT$GK_PCXP_MBL,NML$GL_PRMCODE

FIELD$	NML_PROT_MWI			; X-25 Protocol Maximum window
$WORD	NMA$C_PCXP_MWI,NML_BYTE_SUB,,CPT$GK_PCXP_MWI,NML$GL_PRMCODE

FIELD$	NML_PROT_MCL			; X-25 Protocol Maximum Clears
$WORD	NMA$C_PCXP_MCL,NML_BYTE_SUB,,CPT$GK_PCXP_MCL,NML$GL_PRMCODE

FIELD$	NML_PROT_MRS			; X-25 Protocol Maximum resets
$WORD	NMA$C_PCXP_MRS,NML_BYTE_SUB,,CPT$GK_PCXP_MRS,NML$GL_PRMCODE

FIELD$	NML_PROT_MST			; X-25 Protocol Maximum Restarts
$WORD	NMA$C_PCXP_MST,NML_BYTE_SUB,,CPT$GK_PCXP_MST,NML$GL_PRMCODE

FIELD$	NML_PROT_CAT			; X-25 Protocol call timer
$WORD	NMA$C_PCXP_CAT,NML_BYTE_SUB,,CPT$GK_PCXP_CAT,NML$GL_PRMCODE

FIELD$	NML_PROT_CLT			; X-25 Protocol clear timer
$WORD	NMA$C_PCXP_CLT,NML_BYTE_SUB,,CPT$GK_PCXP_CLT,NML$GL_PRMCODE

FIELD$	NML_PROT_RST			; X-25 Protocol reset timer
$WORD	NMA$C_PCXP_RST,NML_BYTE_SUB,,CPT$GK_PCXP_RST,NML$GL_PRMCODE

FIELD$	NML_PROT_STT			; X-25 Protocol restart timer
$WORD	NMA$C_PCXP_STT,NML_BYTE_SUB,,CPT$GK_PCXP_STT,NML$GL_PRMCODE

;
; Parse X.25 protocol entity for DTE or GROUP
;
FIELD$	NML_PROT_ENT
$EOM	,NML_FOR_ERR				; No DTE ID, message format error
$MATCH	1,NML_PENT_ALL,NML$PRSIDLEQ		; 1 byte if zero or negative.
$IMAGE	16,,NML$PRSIDN				; 16 bytes of DTE number
$NEXT						; Go to check for ALL option

FIELD$	NML_PENT_ALL	; If there are no parameters, do CHANGE ALL
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS
$NULL	,NPA$_EXIT

FIELD$

.IF EQ 1
	.SBTTL	NML$MPA_SEDEMOD_SERVER	Set/Define Server Module
;++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
;	X-25 Server Module State Table
;	The NICE parameters must all be in one of two groups: 
;		Server module parameters
;		Destination parameters
;------------------------------------------------------------

IMSG$	NML$NPA_SEDEMOD_SERVER

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		;No parameters
$NEXT

FIELD$
$WORD	NMA$C_PCXS_DST,NML_SERVER_DST		; Destination

$NULL	,NML_SERVER_PARAMS			; Server module parameters



;
;	X-25 Server Module Parameters
;
FIELD$	NML_SERVER_PARAMS
$EOM	,NPA$_EXIT
$NEXT

FIELD$	
$SBEXP	NML_SERVER_CTM,NML_SERVER_PARAMS	; Counter timer
$NEXT

FIELD$
$SBEXP	NML_SERVER_MCI,NML_SERVER_PARAMS	; Maximum circuits
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter
$NULL	,NML_FOR_ERR


;
;	Subexpressions for Server Module parameters
;
FIELD$	NML_SERVER_CTM				; X-25 Server counter timer
$WORD	NMA$C_PCXS_CTM,NML_WORD_SUB,,CPT$GK_PCXS_CTM,NML$GL_PRMCODE

FIELD$	NML_SERVER_MCI				; X-25 Server maximum circuits
$WORD	NMA$C_PCXS_MCI,NML_WORD_SUB,,CPT$GK_PCXS_MCI,NML$GL_PRMCODE

FIELD$						; End of Server Module parameters



;
;	X-25 Server Destination State Table
;
FIELD$	NML_SERVER_DST
$EOM	,NML_FOR_ERR				; No DST ID, message format error
$MATCH	1,NPA$_EXIT,NML$PRSIDLEQ		; 1 byte if zero or negative.
$IMAGE	16,NPA$_EXIT,NML$PRSIDN			; 16 bytes of DST ID.

FIELD$	
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS		; No parameters, do change ALL
$NEXT

FIELD$	NML_DESTINATION_LOOP
$EOM	,NPA$_EXIT
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_NOD,NML_DESTINATION_LOOP; Destination Node
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_USR,NML_DESTINATION_LOOP; Destination Username
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_SPW,NML_DESTINATION_LOOP; Destination Password to Set
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_ACC,NML_DESTINATION_LOOP; Destination Account
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_OBJ,NML_DESTINATION_LOOP; Destination Object
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_PRI,NML_DESTINATION_LOOP; Destination Priority
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_CMK,NML_DESTINATION_LOOP; Destination Call Mask
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_CVL,NML_DESTINATION_LOOP; Destination Call Value
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_GRP,NML_DESTINATION_LOOP; Destination Group
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_NUM,NML_DESTINATION_LOOP; Destination Number
$NEXT

FIELD$
$SBEXP	NML_DESTINATION_SAD,NML_DESTINATION_LOOP; Destination Subaddresses
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR				; Unrecognized parameter type
$NULL	,NML_FOR_ERR



FIELD$	NML_DESTINATION_NOD			; X-25 Destination Node
$WORD	NMA$C_PCXS_NOD,NML_HOSTID_SUB,,CPT$GK_PCXS_CTM,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_USR			; X-25 Username
$WORD	NMA$C_PCXS_USR,NML_IMG_SUB,,CPT$GK_PCXS_USR,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_SPW			; X-25 Password to set
$WORD	NMA$C_PCXS_SPW,NML_IMG_SUB,,CPT$GK_PCXS_SPW,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_ACC			; X-25 Account
$WORD	NMA$C_PCXS_ACC,NML_IMG_SUB,,CPT$GK_PCXS_ACC,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_OBJ			; X-25 Object
$WORD	NMA$C_PCXS_OBJ,,,CPT$GK_PCXS_OBJ,NML$GL_PRMCODE
FIELD$
$LOOK	0,NML_DEST_OBJ_NUM
$NULL	,NML_IMG_SUB

FIELD$	NML_DEST_OBJ_NUM
$MATCH	1,NML_BYTE_SUB

FIELD$	NML_DESTINATION_PRI			; X-25 Server Priority
$WORD	NMA$C_PCXS_PRI,NML_BYTE_SUB,,CPT$GK_PCXS_PRI,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_CMK			; X-25 Server Call mask
$WORD	NMA$C_PCXS_CMK,NML_IMG_SUB,,CPT$GK_PCXS_CMK,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_CVL			; X-25 Server Call value
$WORD	NMA$C_PCXS_CVL,NML_IMG_SUB,,CPT$GK_PCXS_CVL,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_GRP			; X-25 Server Group
$WORD	NMA$C_PCXS_GRP,NML_IMG_SUB,,CPT$GK_PCXS_GRP,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_NUM			; X-25 Server Number
$WORD	NMA$C_PCXS_NUM,NML_IMG_SUB,,CPT$GK_PCXS_NUM,NML$GL_PRMCODE

FIELD$	NML_DESTINATION_SAD			; X-25 Server Subaddresses
$WORD	NMA$C_PCXS_SAD,NML_LONG_SUB,,CPT$GK_PCXS_SAD,NML$GL_PRMCODE

FIELD$
.ENDC

	.SBTTL	NML$NPA_SEDEOBJ	Set/Define object parameter state table

;+
;    object
;-

IMSG$	NML$NPA_SEDEOBJ

FIELD$
$EOM	,NPA$_EXIT,,NML$M_PRS_ALL,NML$GL_PRS_FLGS	; No parameters
$NEXT

FIELD$	NML_OBJ_START
$EOM	,NPA$_EXIT
$SBEXP	NML_OBJ_NUM,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_FID,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_PRV,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_USR,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_ACC,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_PSW,NML_OBJ_START
$NEXT

FIELD$
$SBEXP	NML_OBJ_PRX,NML_OBJ_START	; Proxy login access
$NEXT

FIELD$
$MATCH	2,NML_PTY_ERR			; Parameter type error
$NULL	,NML_FOR_ERR			; Format error

FIELD$	NML_OBJ_FID			; File id
$WORD	NMA$C_PCOB_FID,NML_IMG_SUB,,CPT$GK_PCOB_FID,NML$GL_PRMCODE

FIELD$	NML_OBJ_NUM			; Number
$WORD	NMA$C_PCOB_NUM,NML_BYTE_SUB,NML$PRM_CHKKNO,CPT$GK_PCOB_NUM,NML$GL_PRMCODE

FIELD$	NML_OBJ_PRV			; Privilege list
$WORD	NMA$C_PCOB_PRV,,,CPT$GK_PCOB_PRV,NML$GL_PRMCODE
FIELD$
$IMAGE	8,NPA$_EXIT,NML$PRM_OBJPRV
$NULL	,NML_FOR_ERR			; Message format error

FIELD$	NML_OBJ_USR			; User id
$WORD	NMA$C_PCOB_USR,NML_IMG_SUB,,CPT$GK_PCOB_USR,NML$GL_PRMCODE

FIELD$	NML_OBJ_ACC			; Account
$WORD	NMA$C_PCOB_ACC,NML_IMG_SUB,,CPT$GK_PCOB_ACC,NML$GL_PRMCODE

FIELD$	NML_OBJ_PSW			; Password
$WORD	NMA$C_PCOB_PSW,NML_IMG_SUB,,CPT$GK_PCOB_PSW,NML$GL_PRMCODE

FIELD$	NML_OBJ_PRX			; Proxy login access
$WORD	NMA$C_PCOB_PRX,,,CPT$GK_PCOB_PRX,NML$GL_PRMCODE
FIELD$
$EOM	,NML_FOR_ERR			; Format error
$LOOK	NMA$C_ACES_NONE,NML_BYTE_SUB	; None
$LOOK	NMA$C_ACES_INCO,NML_BYTE_SUB	; Incoming
$LOOK	NMA$C_ACES_OUTG,NML_BYTE_SUB	; Outgoing
$LOOK	NMA$C_ACES_BOTH,NML_BYTE_SUB	; Both
$NULL	,NML_PVA_ERR

FIELD$					; End of object parameter states

	.SBTTL	NML$NPA_SEDESUB	Common set/define parameter parsing subexpressions

;+
; Common subexpressions
;-

IMSG$	NML$NPA_SEDESUB

FIELD$	NML_HOSTID_SUB	; Host node name or address
$LOOK	0,NML_NODNUM
$IMAGE	6,NPA$_EXIT,NML$PRM_CHKHOST

FIELD$	NML_NODNUM
$MATCH	3,NPA$_EXIT,NML$PRM_CHKHOST
$NULL	,NML_FOR_ERR

FIELD$	NML_LINE_SUB	; Line id
$IMAGE	15,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR	; Format error

FIELD$	NML_BYTE_SUB	; Single byte parameter
$MATCH	1,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR	; Format error

FIELD$	NML_WORD_SUB	; Word parameter
$MATCH	2,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR	; Format error

FIELD$	NML_LONG_SUB	; Longword parameter
$MATCH	4,NPA$_EXIT,NML$PRM_CHECK
$NULL	,NML_FOR_ERR	; Format error

FIELD$	NML_IMG_SUB	; Image parameter
$IMAGE	255,NPA$_EXIT,NML$PRM_STRCHK
$NULL	,NML_FOR_ERR	; Format error
;
; Error subexpressions.
;
FIELD$	NML_PTY_ERR	; Parameter type error
$ERROR	NML$_STS_PTY,,NML$PRM_ERR,,,NMA$C_STS_PTY

FIELD$	NML_PNA_ERR	; Parameter not applicable error
$ERROR	NML$_STS_PNA,,NML$PRM_ERR,,,NMA$C_STS_PNA

FIELD$	NML_PVA_ERR	; Parameter value error
$ERROR	NML$_STS_PVA,,NML$PRM_ERR,,,NMA$C_STS_PVA

FIELD$	NML_FOR_ERR	; Message format error
$ERROR	NML$_STS_INV,,NML$PRM_ERR,,,NMA$C_STS_INV

FIELD$			; End of common parsing states


	.END
