MODULE BAS$ONECHR (				!
		IDENT = '1-002'			! File: BASONECHR.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  BASIC-PLUS-2 Miscellaneous I/O
!
! ABSTRACT:
!
!	This module contains the BASIC ONECHR function,
!	Which causes the next sequential GET to get only one character.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 17-APR-1979
!
! MODIFIED BY:
!
! 1-001	- Original.
! 1-002	- Set up ISB$A_USER_FP.  JBS 25-JUL-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

REQUIRE 'RTLIN:OTSLNK';				! Define linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$ONECHR;					! Next GET gets only one character

!
! INCLUDE FILES:
!

REQUIRE 'RTLML:OTSLUB';				! Get LUB definitions

REQUIRE 'RTLML:OTSISB';				! Get ISB definitions

REQUIRE 'RTLIN:RTLPSECT';			! Macros for defining psects

LIBRARY 'RTLSTARLE';				! System symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! Declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$OPEN_ZERO : NOVALUE,			! Open channel zero
    BAS$$CB_PUSH : JSB_CB_PUSH NOVALUE,		! Load register CCB
    BAS$$CB_POP : JSB_CB_POP NOVALUE,		! Done with register CCB
    BAS$$STOP_IO : NOVALUE;			! Signal fatal I/O error

!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    BAS$K_IO_CHANOT : UNSIGNED (8);		! Channel not open.


GLOBAL ROUTINE BAS$ONECHR (			! Limit next GET to one character
	CHAN					! Channel to do this on
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Limit the next sequential GET on this channel to a single
!	character.  This only applies to terminals, and its purpose
!	is to permit single-character interaction.  It can be used
!	in combination with the NOECHO function to allow the BASIC
!	program to provide its own line editor.
!
! FORMAL PARAMETERS:
!
!	CHAN.rl.v	The channel to do this to.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	LUB$V_ONECHR  which, when set, limits the next sequential
!			GET to a single character.
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	SS$_NORMAL
!
! SIDE EFFECTS:
!
!	Signals if an error is encountered.
!	BAS$$CB_PUSH will signal if the channel number is invalid.
!	We signal BAS$K_IO_CHANOT if the channel is not open.
!
!--

    BEGIN

    BUILTIN
	FP;

    GLOBAL REGISTER
	CCB = K_CCB_REG : REF BLOCK [, BYTE];

    LOCAL
	FMP : REF BLOCK [, BYTE];

    FMP = .FP;
!+
! Get the CCB for the channel.
!-

    IF (.CHAN EQL 0)
    THEN
	BEGIN
!+
! The user is referencing his controlling terminal.
!-
	BAS$$CB_PUSH (LUB$K_LUN_INPU, LUB$K_ILUN_MIN);
	CCB [ISB$A_USER_FP] = .FMP [SF$L_SAVE_FP];
!+
! If the controlling terminal is not yet open, open it.
!-

	IF ( NOT .CCB [LUB$V_OPENED]) THEN BAS$$OPEN_ZERO (.FMP [SF$L_SAVE_FP]);

	END
    ELSE
	BEGIN
!+
! This is an ordinary channel.
!-
	BAS$$CB_PUSH (.CHAN, LUB$K_LUN_MIN);
	CCB [ISB$A_USER_FP] = .FMP [SF$L_SAVE_FP];
	END;

!+
! If the channel is not now open, either there is a problem with
! the OPEN code, or the non-zero channel was not first opened.
!-

    IF ( NOT .CCB [LUB$V_OPENED]) THEN BAS$$STOP_IO (BAS$K_IO_CHANOT);

!+
! Now set the ONECHR bit, which will cause the record level code
! to tell RMS to stop after a single character.
!-
    CCB [LUB$V_ONECHR] = 1;
!+
! We are done with register CCB.
!-
    BAS$$CB_POP ();
    RETURN (SS$_NORMAL);
    END;					! end of BAS$ONECHR

END						! end of module BAS$ONECHR

ELUDOM
