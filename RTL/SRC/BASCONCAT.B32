MODULE BAS$CONCAT (				! Concatenate several strings
		IDENT = '1-001'			! File: BASCONCAT.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: VAX-11 BASIC
!
! ABSTRACT:
!
!	This module takes up to 254 input strings and concatenates
!	them into a result string.  The strings can be of any class
!	and data type, provided that the length field of the descriptor
!	indicates the length of the string in bytes.
!
! ENVIRONMENT: VAX-11 User mode
!
! AUTHOR: John Sauter, CREATION DATE: 18-OCT-1979
!
! MODIFIED BY:
!
! 1-001	- Original.
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$CONCAT : NOVALUE;			! Concatenate two or more strings

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Declare PSECTS code

LIBRARY 'RTLSTARLE';				! System symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECT DECLARATIONS
!
DECLARE_PSECTS (BAS);
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    STR$CONCAT,					! Concatenate strings
    BAS$$STOP : NOVALUE;			! Signal fatal BASIC error

!+
! The following are the error messages used in this module:
!-

EXTERNAL LITERAL
    BAS$K_STRTOOLON : UNSIGNED (8);		! String too long


GLOBAL ROUTINE BAS$CONCAT (			! Concatenate strings
	DEST_DESC				! pointer to destination descriptor
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION
!
!	This routine takes up to 254 source strings of any DTYPE and
!	CLASS, concatenates them, and assigns that value to the
!	destination string.
!
! FORMAL PARAMETERS:
!
!	DEST_DESC.wt.dx		Pointer to destination descriptor
!	[INPUT].rt.dx		Pointer to input string.  There can
!				be up to 254 of these.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Signals the same as STR$CONCAT, and also signals String too long
!	if the result descriptor is dynamic and STR$CONCAT had to truncate.
!
!--

    BEGIN

    MAP
	DEST_DESC : REF BLOCK [8, BYTE];

    BUILTIN
	AP,
	CALLG;

    LOCAL
	CONCAT_STATUS;

!+
! Call the string concatenate routine, giving it our parameters.
!-
    CONCAT_STATUS = CALLG (.AP, STR$CONCAT);

    IF ( NOT .CONCAT_STATUS)
    THEN
	BEGIN

	IF (.DEST_DESC [DSC$B_CLASS] EQL DSC$K_CLASS_D) THEN BAS$$STOP (BAS$K_STRTOOLON);

	END;

    END;					! End of BAS$CONCAT

END						!End of module BAS$CONCAT

ELUDOM
