!+
! This file, BPAFQBDEF.REQ, defines the structure of the FIRQB.
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
! Edit History:
!
! 1-001	- Original, from FQBDEF.R32, from ESE.  JBS 02-OCT-1979
! 1-002	- Remove defense against requireing this file redundently.
!	   JBS 02-OCT-1979
! 1-003	- Track E.S.E.'s changes to 22-NOV-1979.  JBS 02-DEC-1979
! 1-004 - Add copyright notice.  SBL 11-Mar-1980

FIELD
    fqb$fields =
	SET
	fqb$b_iosts = [0, B_],			! i/o status return
	fqb$b_jobnum = [2, B_],			! job number * 2		! A 336
	fqb$b_function = [3, SB_],		! function code			! M 206
	fqb$b_nfrep = [3, B_],			! NFREP flag byte
	fqb$b_channel = [4, SB_],		! Channel number * 2		! M 051
	fqb$v_channel = [4, SV_ (1, 7)],	! Channel number		! A 210
	fqb$b_subfun = [4, SB_],		! Subfunction code		! A 201
	fqb$b_errnum = [4, B_],			! Error number			! A 222
	fqb$t_errmsg = [4, A_],			! Error message string		! A 222
	fqb$b_lock = [4, B_],			! Lock (0) or Unlock (255)	! A 306
	fqb$b_jobno = [4, B_],			! Jobnumber or 255 for caller	! A 306
	fqb$b_pri_ind = [5, B_],		! Indicates change of priority	! A 306
	fqb$b_blkhi = [5, B_],			! MSB of filesize
	fqb$b_rmod = [5, B_],			! receive modifier		! A 201
	fqb$b_jobnr = [5, B_],			! job number * 2		! A 201
	fqb$b_kb_no = [5, B_],			! KB number			! A 300
	fqb$b_width = [6, B_],			! page width			! A 300
	fqb$w_ppn = [6, W_],			! project-programmer number
	fqb$b_prog = [6, B_],			! programmer number
	fqb$t_rcvnam = [6, A_],			! receiver name			! A 201
	fqb$v_priority = [6, SV_ (3, 5)],	! priority			! A 306
	fqb$b_proj = [7, B_],			! project number
	fqb$b_tab = [7, B_],			! TAB/NO TAB			! A 300
	fqb$b_form = [8, B_],			! NO FORM/FORM			! A 300
	fqb$w_fns_ptr = [8, W_],		! filespec string pointer
	fqb$l_filename = [8, L_],		! filename (2 words of RAD-50)	! A 200
	fqb$w_fqnam1 = [8, W_],			! 1st word of filename (RAD-50)	! A 200
	fqb$b_lc_out = [9, B_],			! LC OUTPUT/NO LC OUTPUT	! A 300
	fqb$b_xon = [10, B_],			! NO XON/XON			! A 300
	fqb$w_fqnam2 = [10, W_],		! 2nd	"	"	"	! A 200
	fqb$w_fns_siz = [10, W_],		! filespec string size
	fqb$w_not_tran = [10, W_],		! # bytes not transferred	! A 201
	fqb$b_duplex = [11, B_],		! FULL DPLX/LOCAL ECHO		! A 300
	fqb$b_scope = [12, B_],			! NO SCOPE/SCOPE		! A 300
	fqb$w_fnm_ptr = [12, W_],		! filename string pointer
	fqb$t_newname = [12, A_],		! new filename (ASCII, rename only)
	fqb$w_fqext = [12, W_],			! file extension (RAD-50)	! A 200
	fqb$t_par_str = [12, A_],		! parameterstring		! A 201
	fqb$b_access = [13, B_],		! access type			! A 201
	fqb$b_lc_in = [13, B_],			! NO LC INPUT/LC INPUT		! A 300
	fqb$b_fill = [14, B_],			! NO FILL/FILL			! A 300
	fqb$w_blklo = [14, W_],			! LSB of filesize
	fqb$w_bmax = [14, SW_],			! buffer maximum		! A 275
	fqb$b_xmt_speed = [15, B_],		! transmit speed		! A 300
	fqb$b_parity = [16, B_],		! NO PARITY/EVEN/ODD		! A 300
	fqb$w_basbuflen = [16, W_],		! length of BASIC buffer
	fqb$b_rcv_speed = [17, B_],		! Receive speed			! A 300
	fqb$b_stall = [18, B_],			! NO STALL/STALL		! A 300
	fqb$w_mode = [18, W_],			! mode value
	fqb$w_sleep = [18, W_],			! sleeptime			! A 201
	fqb$b_up_arr = [19, B_],		! UP ARROW/NO UP ARROW		! A 300
	fqb$b_intfac = [20, B_],		! interface			! A 300
	fqb$w_status = [20, W_],		! STATUS value
	fqb$v_writelock = [20, V_ (10)],	! writelock flag in STATUS	! A 103
	fqb$b_data_stop = [21, B_],		! DATA BITS/STOP BITS/PARITY	! A 300
	fqb$b_ring = [22, B_],			! ring list entry		! A 300
	fqb$b_prot_real = [22, B_],		! prot. code real flag
	fqb$b_prot_code = [23, B_],		! protection code
	fqb$b_esc_seq = [23, B_],		! NO ESC SEQ/ESC SEQ		! A 300
	fqb$b_delim = [24, B_],			! private delimiter		! A 300
	fqb$w_devnam = [24, W_],		! device name (2 ASCII chars)
	fqb$b_esc = [25, B_],			! NO ESC/ESC			! A 300
	fqb$b_rt_flag = [26, B_],		! ^R, ^T flag			! A 300
	fqb$w_devnam2 = [26, W_],		! ... (2nd half - rad50)	! A 200
	fqb$b_devunit = [26, B_],		! device unit number
	fqb$b_res_flag = [27, B_],		! resume any/^C			! A 300
	fqb$b_unit_real = [27, B_],		! unit number real flag
	fqb$w_cluster = [28, W_],		! clustersize (magtape only)
	fqb$w_sys_date = [28, W_],		! current date in int. format	! A 336
	fqb$w_position = [30, W_]		! disk location (not implemented)
	TES;

LITERAL
    fqb$m_writelock = M_ (10),			! writelock flag in STATUS	! A 103
    fqb$k_errmsglen = 28,			! Length of errmsg string	! A 222
    fqb$k_nfrep = %O'200',			! NFREP flag value
    fqb$k_length = 32;				! length of firqb

MACRO
    $fqb_def =
 BLOCK [fqb$k_length, BYTE] FIELD (fqb$fields) %;

!
! End of file BPAFQBDEF.REQ
