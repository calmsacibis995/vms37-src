	.TITLE	MTH$CDSQRT
	.IDENT	/1-003/		; File: MTHCDSQRT.MAR Edit: SBL1003

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routine MTH$CDSQRT - compute 
;	D COMPLEX*16 square root.
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 24-July-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History
;
; 1-001 - Adapted from MTH$CSQRT version 1-003.  SBL 24-July-1979
; 1-002 - Change shared external reference to G^ RNH 25-Sep-81
; 1-003 - Use general mode addressing.  SBL 30-Nov-1981

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
	.DSABL	GBL
	.EXTRN	MTH$CDABS
	.EXTRN	MTH$DSQRT_R5

;
; MACROS:
;	NONE

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:

;
; OWN STORAGE:
;	NONE

	.SBTTL	MTH$CDSQRT - compute D COMPLEX*16 square root

;++
; FUNCTIONAL DESCRIPTION:
;
;	The square root of a complex number (r, i) is computed
;	as follows:
;
;	ROOT = SQRT((ABS(r) + CABS((r, i))) / 2)
;	Q = i / (2*ROOT)
;
;
;	r	i	CSQRT((r, i))
;	-	-	-------------
;
;	>=0	any	(ROOT, Q)
;	<0	>=0	(Q, ROOT)
;	<0	<0	(-Q, -ROOT)
;
; CALLING SEQUENCE:
;
;	CALL MTH$CDSQRT (result.wdc.r, arg.rdc.r)
;
; INPUT PARAMETERS:
;
	arg	= 8		; The D COMPLEX*16 argument, passed
				; by reference.
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;
	result	= 4		; The D COMPLEX*16 result, passed by
				; reference.
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;
;	SS$_ROPRAND	If either part of argument is reserved operand.
;
;--


	.ENTRY	MTH$CDSQRT,	^M<R2, R3, R4, R5, R6>
	MTH$FLAG_JACKET			; flag as math routine

	MOVD	@arg(AP), R2		; R2-R3 = r
	BICW	#^X8000, R2		; R2-R3 = ABS(r)
	PUSHL	arg(AP)			; Put address of arg on stack
	CALLS	#1, G^MTH$CDABS		; R0-R1 = CABS((r, i))
	ADDD2	R2, R0			; R0-R1 = ABS(r) + CABS((r, i))
	MULD2	#0.5, R0		; R0-R1 = (ABS(r) + CABS((r, i))) / 2
	JSB	G^MTH$DSQRT_R5		; R0-R1 = ROOT = SQRT(above)
	MOVL	arg(AP), R2		; R2 -> (r, i)
	TSTD	R0			; is ROOT zero?
	BNEQ	1$			; no, go ahead
	CLRD	R5			; make zero quotient
	BRB	2$			; skip divide
1$:	DIVD3	R0, 8(R2), R5		; R5 = i / ROOT
	MULD2	#0.5, R5		; R5 = Q = i / (2 * ROOT)
2$:	TSTD	(R2)+			; if r positive,
	BGEQ	RETRN			; then return (ROOT, Q)
	MOVQ	R0, R3			; else switch ROOT and Q
	TSTD	(R2)			; if i positive
	BGEQ	RETRN1			; then return (Q, ROOT)
	MNEGD	R5, R0			; else negate ROOT and Q
	MNEGD	R3, R5			; and return (-Q, -ROOT)
	BRB	RETRN

RETRN1:
	MOVQ	R5, R0			; continue to swap ROOT and Q
	MOVQ	R3, R5			; and return (Q, ROOT)
RETRN:
	MOVL	result(AP), R2		; result address
	MOVQ	R0, (R2)+		; real part
	MOVQ	R5, (R2)		; imaginary part
	RET


	.END
