MODULE COB$FIND_NAME (
		IDENT = '1-013'		! file: COBFINDNA.B32 EDIT:LB1013
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!++
! FACILITY:	COBOL SUPPORT
!
! ABSTRACT:	This procedure will search lists of program names for
!		a routine name match to the name found in the input
!		parameter "DESC".
!
!
!
! ENVIRONMENT:	Vax-11 User Mode
!		NOTE this module cannot be in sharable library.
!
! AUTHOR: M.L.Jack , CREATION DATE: 29-JUL-1979
!
! MODIFIED BY:
!
! 1-001 - Original. MLJ 29-JUL-1979
! 1-002 - Added boilerplate and comments. RKR 18-JULY-1979
! 1-003 - Make LIBRARY and REQUIRE file compatible with rest of system.
!	  RKR 19-SEPT-79
! 1-004 - Rewrite name string analyis to catch leading space case.
!	  Current logic will return status of zero if any of the
!	  following occur:
!		.   Leading spaces or tabs are present in the string
!		.   Resulting string with trailing spaces or tabs
!		    exceed 30 chars.
!		.   Resulting string cannot be found in table
!	  Imbedded spaces or tabs stop the scan the same way trailing
!	  spaces and tabs do, and will probably yield look-up failure
!	  RKR 2-OCT-79
! 1-005 - Revise algorithm to simply throw away leading spaces and tabs
!	  and continue scanning.  RKR 3-OCT-79
! 1-006 - Also allow %C'0' TO %C'9' as legal chars in name. (Oversight)
!	  RKR 04-OCT-79
! 1-007 - Accomodate new structure for module name data table.
!	  RKR 19-OCT-79
! 1-008 - Change name extraction logic to behave like GENEXTERN.B32
!	  RKR 19-OCT-79
! 1-009 - Add error for syntactically invalid name.  RKR 21-OCT-79
! 1-010 - Remove all signalling.  RKR 29-OCT-79
! 1-011 - Remove definition of OBJ$C_SYMSIZ.  SBL 5-Dec-1979
! 1-012 - Introduce a new symbol LOCAL_SYMSIZ to replace role of
!	  former symbol OBJ$C_SYMSIZ.  At sometime when the libraries
!	  are universally straightened out we can switch back to
!	  OBJ$C_SYMSIZ and allow it to be defined via library.
!	  (By the way, its value should be 31)
!	  RKR 06-DEC-79
! 1-013 - Added abstract, functional description, comments and made
!	  cosmetic changes.  Changed hardcoded codes for tabs and
!	  blanks into literals to enhance readability.  Also added
!	  code that checks to make sure that if a second input
!	  parameter exists, that it is non-zero.  Changed code that
!	  converted lowercase characters to uppercase characters.
!	  LB  3-MAR-81
!
!--


!+
! SWITCHES
!-

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!+
! LINKAGES
!	NONE
!-

!+
! TABLE OF CONTENTS:
!-

FORWARD ROUTINE

	COB$$FIND_NAME ;

!+
! INCLUDE FILES
!-

LIBRARY 'RTLSTARLE';					! Contains all RTL routines
REQUIRE 'RTLIN:COBDEF';					! COBOL specific RTL macros and literals

!+
! MACROS
!	NONE
!-

!+
! EQUATED SYMBOLS
!-

LITERAL
    TRUE = 1,
    FALSE = 0,
    TAB = %O'11',		! TAB character
    BLANK = %O'40',		! BLANK character
    LOCAL_SYMSIZ = 31 ;		! When libraries get consistent on
				! various development machines, this
				! definition should be removed and
				! the corresonding references in the
				! code should be to the library-defined
				! symbol  OBJ$C_SYMSIZ

!+
! PSECT DECLARATIONS:
!-

PSECT
	GLOBAL=	COB$NAMES_____1(PIC,SHARE,NOWRITE,ADDRESSING_MODE(LONG_RELATIVE));
GLOBAL
	COB$GZ_NAMES_1:	VECTOR[0];
PSECT
	GLOBAL=	COB$NAMES_____3(PIC,SHARE,NOWRITE,ADDRESSING_MODE(LONG_RELATIVE));
GLOBAL
	COB$GZ_NAMES_2:	VECTOR[0];


PSECT
	CODE=	_COB$CODE(PIC,SHARE),
	PLIT=	_COB$CODE;

GLOBAL ROUTINE COB$$FIND_NAME (DESC,LLIST)=

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine will search through the list of local program names
!	to find a match to the name that is passed in the "DESC"
!	input parameter.  If no match is found, it searches through
!	the list of global program names (designated by the COB$GZ_NAMES_2
!	structure).  If a match is found, then it returns a pointer to
!	the COB$NAMES entry; otherwise, it returns a value of zero.
!
! CALLING SEQUENCE:
!
!	COB$$FIND_NAME (desc.rt.ds, llist.rr.r)
!
! FORMAL PARAMETERS:
!
!	DESC.rt.ds	Address of descriptor of name string
!
!	LLIST.rr.r	Pointer to counted list of accessible names
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	Pointer to COB$NAMES entry, or 0 if not found
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

      MAP
	DESC:	REF BLOCK[,BYTE],		! Pointer to descriptor for name string
	LLIST:	REF VECTOR;			! Pointer to counted list of local programs

      BUILTIN
	ACTUALCOUNT,				!\Returns # of actual parameters
						!/passed to this routine
	ACTUALPARAMETER;			!\Returns the value of the i'th
						!/actual parameter that was passed

      LOCAL
	BUFFER:	VECTOR[LOCAL_SYMSIZ,BYTE],	! Buffer for input name
	NAMELENGTH,				! Length of input name
	NAMEPOINTER:	REF VECTOR[,BYTE],	! Pointer to input name
	A,					! Offset of first nonblank
	P: REF BLOCK [,BYTE],			! Pointer for seaching
	L,					! Length of finished literal
	Q:	REF VECTOR[,BYTE];		! Pointer to ASCIC name string

    NAMELENGTH = .DESC[DSC$W_LENGTH];		! Length of input name
    NAMEPOINTER = .DESC[DSC$A_POINTER];		! Pointer to input name




    L = 0;					! Init length of finished literal


    !+
    ! Strip trailing blanks and tabs.
    !-

    DECR I FROM .NAMELENGTH-1 TO 0 DO
	BEGIN
	IF .NAMEPOINTER[.I] NEQ BLANK AND .NAMEPOINTER[.I] NEQ TAB
	THEN
	    BEGIN
	    L = .I + 1;				!\Length of name without
						!/trailing blanks and spaces
	    EXITLOOP;				! Found a valid char - exit the loop
	    END;
	END;


    IF .L EQL 0
      THEN
	RETURN 0				! Invalid parameter - no input name 
      ELSE
	BEGIN

	!+
	! Strip leading spaces and tabs.
	!-

	A = 0;
	WHILE .NAMEPOINTER[.A] EQL BLANK OR .NAMEPOINTER[.A] EQL TAB DO
	    BEGIN
	    L = .L - 1;				!\Decr name length for every
						!/occurrence of blanks or tabs
	    A = .A + 1;				! Advance the index
	    END;


	!+
	! Ensure that the result, with leading and trailing spaces
	! removed, is not too long.
	!-

	IF .L GTR LOCAL_SYMSIZ
	  THEN
	    RETURN 0 ;				! Invalid symbol name


	!+
	! Now convert and check the characters for legality in the
	! object language.  The valid characters for COBOL string names
	! include all uppercase characters, 0-9, dollar sign ($) and
	! underscore (_).  Note that all lowercase characters are converted
	! to uppercase and that hyphens are converted to the underscore
	! character.
	!-

	INCR I FROM 0 TO .L-1 DO
	  BEGIN

	    LOCAL
	      C;

	    C = .NAMEPOINTER[.I+.A];
	    SELECTONE .C OF
		SET
		[%C'-']:				! Convert hyphen to underscore
		  C = %C'_';
		[%C'a' TO %C'z']:			! Convert lowercase to uppercase
		  C = .C - BLANK;			! Just substract %O'40' to get uppercase
		[%C'A' TO %C'Z',
		 %C'0' TO %C'9',
		 %C'$', %C'_']:
		  0;					! Characters are valid - do nothing
		[OTHERWISE]:				! Error - invalid characters
		  RETURN 0 ;
		TES;

	!++
	! Complete name is copied into "BUFFER"
	! one character at a time.
	!--

	    BUFFER[.I] = .C
	    END;
	END;

!+
! If resultant string exists, try looking it up.
!
! If there is more than 1 input parameter and the second parameter
! is non-zero, then search through the list of local programs.
! Otherwise, try the list of global programs.  Note that when
! searching through the list of local programs and a match is not
! found, the default is to search through the list of global
! programs.
!-

	IF (ACTUALCOUNT() GTR 1) AND (ACTUALPARAMETER (ACTUALCOUNT()) NEQ 0)
	  THEN
	    INCR I FROM 1 TO .LLIST[0] DO
	      BEGIN
	      P = .LLIST[.I];				! Fetch addr of name entry block
	      Q = .P[COB$A_NAM_NAME];			! Fetch 1st byte of counted name string
	      IF .Q[0] EQL .L				! If length matches
		THEN
		  BEGIN
		  IF CH$EQL (.L,Q[1], .L, BUFFER)	! If string matches
		    THEN
		      RETURN .P				! Return addr of this name entry block
		    ELSE
		      0					! No match occurred
		  END;
	      END;

	!+
	! Now look for global programs.  Note that
	! COB$GZ_NAMES_1 points to the beginning of the
	! COB$GZ_NAMES_2 structure while COB$GZ_NAMES_2
	! points to the end of the structure.
	!-

	P = COB$GZ_NAMES_1 ;				! 1st (if any) entry
	WHILE .P LSSA COB$GZ_NAMES_2 DO
	    BEGIN
		Q = .P[COB$A_NAM_NAME] ;		! Ptr to 1st byte of counted name string
		IF .Q[0] EQL .L				! If length matches
		  THEN
		    BEGIN
			IF CH$EQL (.L, Q[1], .L, BUFFER ) ! If string matches
			  THEN
			    RETURN .P			! Retn addr of this name entry block
			  ELSE
			    0				! No match found 
		    END ;
		P = .P + .P[COB$L_NAM_LENT] ;		! Advance to next entry
	    END ;
	RETURN 0;

    END ;						! End of routine COB$$FIND_NAME
END
ELUDOM
