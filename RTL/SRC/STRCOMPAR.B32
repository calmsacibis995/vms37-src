MODULE STR$COMPARE (	! Compare 2 strings with blank fill

		IDENT = '1-006'	! File: STRCOMPAR.B32  Edit: RKR1006

		   ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: String support library
!
! ABSTRACT: This module takes 2 input strings of any supported class 
!	and dtype and returns a +1 if string1 > string2, 
!	a 0 if string1 = string2, or a -1 if string1 < string2.
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR: R. Will, CREATION DATE: 26-Mar-79
!
! MODIFIED BY:
!
! R. Will, 26-Mar-79 : VERSION 01
! 1-001	- Original
! 1-002 - String cleanup, change name to STR$, remove = length.  
!	  RW  5-Nov-79
! 1-003 - Use CH$COMPARE instead of CH$EQL.  CH$EQL returns 1 if 
!	  strings match, 0 otherwise which is not what this routine is 
!	  supposed to do! SBL 1-Oct-1980
! 1-004 - Extend routine to recognize additional classes of descriptors
!	  by using $STR$GET_LEN_ADDR to extract length and address
!	  of first byte of data from descriptors.  Remove string
!	  interlocking code.  RKR 13-APR-81
! 1-005 - Speed up code.  RKR 7-OCT-1981.
! 1-006 - Use SWITCHES ZIP to avoid some cross-jumping that would
!	  normally occur in this module.  RKR 18-NOV-1981.
!--
!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
		(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

SWITCHES ZIP;
!
! LINKAGES
!
REQUIRE 'RTLIN:STRLNK';		! Linkage to LIB$ANALYZE_DESC_R3

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    STR$COMPARE;   ! compare 2 strings, same contents with blank fill

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';	! Declare PSECTS code
REQUIRE 'RTLIN:STRMACROS';	! use string macros to write code
LIBRARY 'RTLSTARLE';		! STARLET library for macros and symbols

!
! MACROS: NONE
!

!
! EQUATED SYMBOLS: NONE
!

!
! PSECT DECLARATIONS
!

DECLARE_PSECTS (STR);

!
! OWN STORAGE: NONE
!

!
! EXTERNAL REFERENCES
!
!	NONE

GLOBAL ROUTINE STR$COMPARE (	! compare with blank fill

			    STRING1, ! pointer to 1st string descriptor
			    STRING2  ! pointer to 2nd string descriptor

			   ) : =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine takes two source strings of any supported
!	dtype and class, compares their contents with blank fill
!	for the shorter string and returns
!	a -1 if string1 < string2, 0 if both are the same with 
!	blank fill or a 1 if string1 > string2.
!
! FORMAL PARAMETERS:
!
!	STRING1.rt.dx		pointer to 1st string descriptor
!	STRING2.rt.dx		pointer to 2nd string descriptor
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	MATCH.wl.v		-1 if string1 < string2
!				0 if both are the same with blank fill
!				1 if string1 > string2
!
! SIDE EFFECTS:
!
!	May signal STR$_ILLSTRCLA on bad string class
!
!--

    BEGIN

    MAP STRING1 : REF $STR$DESCRIPTOR;
    MAP STRING2 : REF $STR$DESCRIPTOR;

    IF (.STRING1 [DSC$B_CLASS] LEQU DSC$K_CLASS_D  AND
	.STRING2 [DSC$B_CLASS] LEQU DSC$K_CLASS_D )
    THEN
	BEGIN
	RETURN ( CH$COMPARE ( .STRING1 [DSC$W_LENGTH],
			      .STRING1 [DSC$A_POINTER],
			      .STRING2 [DSC$W_LENGTH],
			      .STRING2 [DSC$A_POINTER],
			      STR$K_FILL_CHAR ) ) ;
	END

    ELSE	! do it the hard way

	BEGIN
	LOCAL 
	    S1_LENGTH,	! Length of first string
	    S1_ADDR,	! Address of 1st data byte of first string
	    S2_LENGTH,	! Length of second string
	    S2_ADDR;	! Address of 1st data byte of second string

!+
! Compute the lengths and address of first bytes involved
!-

	$STR$GET_LEN_ADDR (STRING1, S1_LENGTH, S1_ADDR) ;

	$STR$GET_LEN_ADDR (STRING2, S2_LENGTH, S2_ADDR) ;

!+
! Return the value from CH$COMPARE
!-

	RETURN (CH$COMPARE (.S1_LENGTH, .S1_ADDR,	! contents = ?
			    .S2_LENGTH, .S2_ADDR,
			    STR$K_FILL_CHAR ));

	END ;
    END;					! End of STR$COMPARE

END				!End of module
ELUDOM
