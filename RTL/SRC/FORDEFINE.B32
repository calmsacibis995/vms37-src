MODULE FOR$DEFINE_FILE (			! FORTRAN DEFINE FILE Statement
		IDENT = '1-004'			! File: FORDEFINE.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: FORTRAN Support Library, user callable
!
! ABSTRACT:
!
!	Contains routines FOR$DEF_FILE_W and FOR$DEF_FILE,
!	implementing the FORTRAN DEFINE FILE statement with
!	word-length and longword-length associate variable arguments.
!
! ENVIRONMENT: Mixture of AST level or not.
!
! AUTHOR: Jonathan M. Taylor, CREATION DATE: 4-OCT-77
!
! MODIFIED BY:
!
! 	Jonathan M. Taylor, 4-OCT-77 : VERSION 0
! 0-1	- original
! 0-2	- Fix MAXREC and RECORDSIZE bugs JMT 19-OCT-77
! 0-3	- Call FOR$$CB_POP not _RET! JMT 19-OCT-77
! 0-4	- Use FOR$K_abcmno4yz as E4TERNAL LITERALs.  TNH 27-Oct-77
! 0-5	- remove MAXREC checking here.  JMT 22-Feb-78
! 0-9	- RECORDSIZE max is 64K.  JMT 22-Feb-78
! 0-10	- Global register CCB.  JMT 8-Apr-78
! 0-11	- Change REQUIRE files for VAX system build.  DGP 28-Apr-78
! 0-12	- Use JSB linkages.  TNH 22-May-78
! 0-13	- Pass OPEN$K_LUN_MIN to FOR$$CB_PUSH.  TNH 22-May-78
! 0-14	- Change file name to FORDEFINE.B32, and change the names of
!	   the REQUIRE files similarly.  JBS 14-NOV-78
! 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
! 1-002	- Change REQUIRE file names from FOR... to OTS...  JBS 06-DEC-78
! 1-003	- Change OPEN prefix to LUB.  JBS 13-DEC-78
! 1-004	- Change FOR$K_RECSPEERR to FOR$K_INCRECTYP.  JBS 24-SEP-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

REQUIRE 'RTLIN:OTSLNK';				! Define all linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    FOR$DEF_FILE_W : NOVALUE,			! DEFINE FILE with one-word assvar
    FOR$DEF_FILE : NOVALUE,			! DEFINE FILE with long-word assvar
    COMMON_DEF_FILE : NOVALUE;			! DEFINE FILE common code

!
! INCLUDE FILES:
!

REQUIRE 'RTLML:FORERR';				! FORTRAN error number definitions

REQUIRE 'RTLML:OTSLUB';				! Logical Unit Block definitions

REQUIRE 'RTLML:FORPAR';				! Intermodule definitions

REQUIRE 'RTLIN:OTSMAC';				! Macros

REQUIRE 'RTLIN:RTLPSECT';			! Define DECLARE_PSECTS macro

!
! MACROS:
!	NONE
!
! EQUATED SYMBOLS:
!

LITERAL
    K__UNIT = 4,				! offset from AP to find parameters
    K__MAX_REC = 8,
    K__REC_SIZ = 12,
    K__ASS_VAR = 16;

!
! OWN STORAGE:
!
!	NONE
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    FOR$$ERR_ENDHND,				! error condition handler for ERR=, END=
    FOR$$SIGNAL_STO : NOVALUE,			! convert error number and signal
    FOR$$CB_PUSH : JSB_CB_PUSH NOVALUE,		! create LUB/ISB/RAB, if needed
    FOR$$CB_POP : JSB_CB_POP NOVALUE;		! return I/O system to previous state

!
! PSECT DECLARATIONS:
!
DECLARE_PSECTS (FOR);				! declare PSECTS for FOR$ facility


GLOBAL ROUTINE FOR$DEF_FILE_W (UNIT, MAX_REC, REC_SIZ, ASS_VAR) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Call Common routine to perform DEFINE FILE for one-word
!	associated variable.  The argument list is passed in toto.
!
! FORMAL PARAMETERS:
!
!	UNIT.rl.v		Logical unit number
!	MAX_REC.rl.v		Maximum record number
!	REC_SIZ.rl.v		Record buffer size
!	ASS_VAR			Address of associated variable
!
! IMPLICIT INPUTS:
!
!	See description of COMMON_DEF_FILE
!
! IMPLICIT OUTPUTS:
!
!	See description of COMMON_DEF_FILE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	See description of COMMON_DEF_FILE
!
!--

    BEGIN

    BUILTIN
	AP;

    COMMON_DEF_FILE (.AP, 0);
    END;


GLOBAL ROUTINE FOR$DEF_FILE (UNIT, MAX_REC, REC_SIZ, ASS_VAR) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Call Common routine to perform DEFINE FILE for longword
!	associated variable.  The argument list is passed in toto.
!
! FORMAL PARAMETERS:
!
!	UNIT.rl.v		Logical unit number
!	MAX_REC.rl.v		Maximum record number
!	REC_SIZ.rl.v		Record buffer size
!	ASS_VAR			Address of associated variable
!
! IMPLICIT INPUTS:
!
!	See description of COMMON_DEF_FILE
!
! IMPLICIT OUTPUTS:
!
!	See description of COMMON_DEF_FILE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	See description of COMMON_DEF_FILE
!
!--

    BEGIN

    BUILTIN
	AP;

    COMMON_DEF_FILE (.AP, 1);
    END;


ROUTINE COMMON_DEF_FILE (OLD_AP, FLAG) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Get a LUB for this unit and set some LUB entries according
!	to values passed to our caller.
!
! FORMAL PARAMETERS:
!
!	OLD_AP			Address of the arg list that was passed
!				to our caller
!	FLAG			Length of users associated variable:
!					0 - word
!					1 - longword
!
! IMPLICIT INPUTS:
!
!	LUB$V_DIRECT		This unit as previously been specified
!				for direct access by an OPEN statement or
!				DEFINE FILE.
!	LUB$V_OPENED		This unit has already been opened by
!				OPEN statement or default open.
!
! IMPLICIT OUTPUTS:
!
!	LUB$V_DIRECT		1
!	LUB$V_UNFORMAT		1
!	LUB$V_ASS_VAR_L		set to the value of FLAG
!	LUB$A_ASSOC_VAR		address of associated variable
!	LUB$L_REC_MAX		set according to MAX_REC parameter passed
!	LUB$W_RBUF_SIZE		set from REC_SIZ parameter passed
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	SIGNAL_STOPs:
!		FOR$_UNIALLOPE	if the unit is already open
!		FOR$_DUPFILSPE if a define file has already been done on this unit
!		FOR$_INCRECTYP if the REC_SIZE parameter is out of range
!		FOR$_RECNUMOUT if the MAX_REC parameter is invalid.
!
!--

    BEGIN

    GLOBAL REGISTER
	CCB = K_CCB_REG : REF BLOCK [, BYTE];

    LOCAL
	L_UNWIND_ACTION : VOLATILE,		! Unwind action code (FOR$K_UNWIND{POP or NOP})
	L_UNWIND_DEPTH : VOLATILE,		! Number of additional frames to unwind if error
	A_ERR_ADR : VOLATILE,			! Indicates to error handler that
	A_END_ADR : VOLATILE;			! there are no ERR and END= addresses

    ENABLE
	FOR$$ERR_ENDHND (L_UNWIND_ACTION, A_ERR_ADR, A_END_ADR, L_UNWIND_DEPTH);

						! pass info to error handler
!+
! Set up error handler conditions in case CB_PUSH bombs
!-
    L_UNWIND_ACTION = FOR$K_UNWINDNOP;
    L_UNWIND_DEPTH = 1;
    A_ERR_ADR = A_END_ADR = 0;
!+
! Get a LUB for this logical unit.
! On return, CCB points to current control block.
!-
    FOR$$CB_PUSH (.(.OLD_AP + K__UNIT), LUB$K_LUN_MIN);
!+
! Unwind action (if an error occurs) is now to pop a LUB.
!-
    L_UNWIND_ACTION = FOR$K_UNWINDPOP;
!+
! Check the LUB for errors...
!-

    IF .CCB [LUB$V_OPENED] THEN FOR$$SIGNAL_STO (FOR$K_UNIALROPE);

    IF .CCB [LUB$V_DIRECT] THEN FOR$$SIGNAL_STO (FOR$K_DUPFILSPE);	! DEFINE FILE after DEFINE FILE

!+
! Place appropriate information in the LUB from users parameters.
!-
    CCB [LUB$V_DIRECT] = 1;
    CCB [LUB$V_UNFORMAT] = 1;
    CCB [LUB$V_ASS_VAR_L] = .FLAG;		! FLAG says longword assvar or not
    CCB [LUB$A_ASSOC_VAR] = .(.OLD_AP + K__ASS_VAR);
    CCB [LUB$L_REC_MAX] = .(.OLD_AP + K__MAX_REC);

    IF (.(.OLD_AP + K__REC_SIZ)*2 GTRU 65535) THEN FOR$$SIGNAL_STO (FOR$K_INCRECTYP);

    CCB [LUB$W_RBUF_SIZE] = .(.OLD_AP + K__REC_SIZ)*2;
!+
! Return the I/O system to its previous state.
!-
    FOR$$CB_POP ();
    RETURN;
    END;					! of routine COMMON_DEF_FILE
END						!End of module FOR$DEFINE_FILE

ELUDOM
