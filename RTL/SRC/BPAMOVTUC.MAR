	.TITLE	BPA$$MOVTUC	; MOVTUC routine
	.IDENT	/1-001/		; File: BPAMOVTUC.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: VAX-11 BASIC Miscellaneous
;++
; ABSTRACT:
;
;	This module contains a MOVTUC instruction, and enough parameters
;	to allow it to be used effectively from BLISS.
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	John Sauter, 03-DEC-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of BPA$$MOVTUC
;
; 1-001	- Original.  JBS 03-DEC-1979

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
;	NONE
;
; EXTERNAL SYMBOLS:
;
;	NONE
	.DSABL	GBL
;
; MACROS:
;
;	NONE
;
; PSECT DECLARATIONS:
	.PSECT	_BPA$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;
;	NONE
;
;
; OWN STORAGE:
;
;	NONE

	.SBTTL	BPA$$MOVTUC

;++
; FUNCTIONAL DESCRIPTION:
;
;	Allows a BLISS program access to all of the facilities of
;	the MOVTUC instruction.
;
; CALLING SEQUENCE: (assuming the translate is of ASCII text)
;
;	CALL BPA$$MOVTUC (SRCLEN.rw.r, SRCADDR.rt.r, ESC_CHR.rt.r, TBLADR.wt.r, DSTLEN.rw.r,
;		DSTADDR.wt.r, ESC_FLAG.wl.r, SRC_LEFT.ww.r, SRC_NEXT.wa.r, DEST_LEFT.ww.r, DEST_NEXT.wa.r)
;
; INPUT PARAMETERS:
;	
	SRCLEN = 4;	Length of the source string
	SRCADDR = 8;	Base of the source string
	ESC_CHR = 12;	The escape character
	TBLADR = 16;	Translation table
	DSTLEN = 20;	Length of the destination string
	DSTADDR = 24;	Base of the destination string
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
	ESC_FLAG = 28;	1 if the translation was terminated by escape, 0 if not.
	SRC_LEFT = 32;	0 if the string was translated without escape, otherwise the
;			number of untranslated bytes in the source string, including the
;			byte which caused the escape
	SRC_NEXT = 36;	Address of the byte in the source string which caused the escape
;			or destination string exhaustion, or, if no exhaustion or escape,
;			the address one byte beyond the source string
	DEST_LEFT = 40;	Number of bytes remaining in the destination string
	DEST_NEXT = 44;	Address of the byte in the destination string which would have
;			received the translated byte that caused the escape, or would
;			have received a translated byte if the source string were not
;			exhausted; or, if no exhaustion or escape, the address of one
;			byte beyond the destination string.
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;	
;--
	.ENTRY	BPA$$MOVTUC, ^M <R2, R3, R4, R5>	; Save registers through R5
	MOVTUC	@SRCLEN(AP), @SRCADDR(AP), @ESC_CHR(AP), @TBLADR(AP), @DSTLEN(AP), @DSTADDR(AP)
	BVS	10$
	CLRL	@ESC_FLAG(AP)				; Not terminated by escape
	BRB	20$
10$:	MOVL	#1, @ESC_FLAG(AP)			; Terminated by escape
20$:	MOVL	R0, @SRC_LEFT(AP)
	MOVL	R1, @SRC_NEXT(AP)
	MOVL	R4, @DEST_LEFT(AP)
	MOVL	R5, @DEST_NEXT(AP)
	RET						; Return to caller
;
	.END
