MODULE BAS$END_GSB (				!
		IDENT = '1-002'			! File: BASENDGSB.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!

!++
! FACILITY:  BASIC-PLUS-2 Frame Support
!
! ABSTRACT:
!
!	These routines set up and tear down frames for BASIC-PLUS-2.
!	Frames are used for main routines, external functions,
!	external subroutines, internal functions (both DEFs and DEF*s)
!	internal subroutines (GOSUBs) and condition handlers.
!
! ENVIRONMENT:  VAX-11 user mode
!
! AUTHOR: John Sauter, CREATION DATE: 10-Oct-78
!
! MODIFIED BY:
!
! 1-001	- Original.
! 1-002	- Change BAS$ to BSF$ prefix for BASIC stack frame.  JBS 08-FEB-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

LINKAGE
    BAS$INIT_LINK = JSB (REGISTER = 0, REGISTER = 1, REGISTER = 2) : 	!
    GLOBAL (BSF$A_MAJOR_STG = 11, BSF$A_MINOR_STG = 10, BSF$A_TEMP_STG = 9)	!
    NOPRESERVE (8, 7, 6, 5, 4, 3, 2, 1, 0);

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$END_GSB_R8 : NOVALUE BAS$INIT_LINK;	! end GOSUB

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! macros for defing psects

REQUIRE 'RTLIN:BASFRAME.REQ';		! Define frame structure

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! Declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$STOP : NOVALUE;			! signals error

!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    BAS$K_RETWITGOS : UNSIGNED (8);		! RETURN without GOSUB


GLOBAL ROUTINE BAS$END_GSB_R8 			! end of GOSUB frame
    : NOVALUE BAS$INIT_LINK =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Check a BASIC-PLUS-2 RETURN statement to be sure that
!	the return is being made from a GOSUB.  This is needed
!	since GOSUB has no lexical scope.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	The frame, as set up by BAS$INIT_GSB_R8.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	May signal an error
!
!--

    BEGIN

    BUILTIN
	FP,
	SP;

    REGISTER
	FMP : REF BLOCK [0, BYTE] FIELD (BSF$FCD);

!+
! Give an error message if this RETURN does not correspond to
! a GOSUB.
!-
    FMP = .FP;

    IF (.FMP [BSF$B_PROC_CODE] NEQ BSF$K_PROC_GOSB) THEN BAS$$STOP (BAS$K_RETWITGOS);

!+
! All is ok, return to the compiled code, which will issue a
! RET instruction to return to the caller of BAS$INIT_GOSUB.
!+
    END;					!of BAS$END_GSB_R8

END

ELUDOM
