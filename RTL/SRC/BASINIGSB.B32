MODULE BAS$INIT_GOSUB (				!
		IDENT = '1-003'			! File: BASINIGSB.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!

!++
! FACILITY:  BASIC-PLUS-2 Frame Support
!
! ABSTRACT:
!
!	These routines set up and tear down frames for BASIC-PLUS-2.
!	Frames are used for main routines, external functions,
!	external subroutines, internal functions (both DEFs and DEF*s)
!	internal subroutines (GOSUBs) and condition handlers.
!
! ENVIRONMENT:  VAX-11 user mode
!
! AUTHOR: John Sauter, CREATION DATE: 10-Oct-78
!
! MODIFIED BY:
!
! 1-001	- Original.
! 1-002	- Change BAS$ prefix to BAS$ for stack frame names.  JBS 08-FEB-1979
! 1-003	- Set the IV bit in the PSW if called for.  JBS 11-SEP-1979
!--

!
!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

LINKAGE
    BAS$GOSUB_LINK = CALL (STANDARD) : 		!
    GLOBAL (BSF$A_MAJOR_STG = 11, BSF$A_MINOR_STG = 10, BSF$A_TEMP_STG = 9),
!
    BAS$GOSUB_JSB = JSB : 			!
    GLOBAL (BSF$A_MAJOR_STG = 11, BSF$A_MINOR_STG = 10, BSF$A_TEMP_STG = 9)	!
    NOTUSED (8, 7, 6, 5, 4, 3, 2)
    NOPRESERVE (1, 0);

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$INIT_GOSUB : BAS$GOSUB_LINK NOVALUE;	! start GOSUB

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! macros for defing psects

REQUIRE 'RTLIN:BASFRAME';			! Define frame structure

LIBRARY 'RTLSTARLE';				! System symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$SIGNAL : NOVALUE,			! signals error
    BAS$HANDLER;				! handles signals


GLOBAL ROUTINE BAS$INIT_GOSUB (			! start GOSUB
	NEW_PC					! place to start
    ) : BAS$GOSUB_LINK NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Set up a frame for a BASIC-PLUS-2 GOSUB.  The frame is allocated
!	on the stack.  R11, R10 and R9 are not touched.
!
! FORMAL PARAMETERS:
!
!	NEW_PC.ra.v	PC of the GOSUB target line.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Leaves lots of things on the stack for use by the compiled
!	BASIC-PLUS-2 code.  These things will be removed by
!	BAS$END_GSB_R8.
!
!--

    BEGIN
!+
! The following external registers are mearly passed through to
! the compiled code.
!-

    EXTERNAL REGISTER
	BSF$A_MAJOR_STG,
	BSF$A_MINOR_STG,
	BSF$A_TEMP_STG;

    BUILTIN
	FP,
	SP,
	BISPSW;

!+
! Define local variables as registers.  We connot have any stack
! locals since we manipulate the stack pointer in this routine.
!-

    REGISTER
	FMP : REF BLOCK [0, BYTE] FIELD (BSF$FCD),	! pointer to FCD
	PREV_FMP : REF BLOCK [0, BYTE] FIELD (BSF$FCD);	! points to previous frame

!+
! Allocate frame control data.
!-
    FMP = .FP;
    SP = .FMP - BSF$K_LENFCDGSB;
!+
! Initialize the parts of the fcd relavent to a gosub.
!-
    FMP [BSF$A_MARK] = 0;
    FMP [BSF$A_BASE_SP] = .SP;
    FMP [BSF$A_BASE_R11] = .BSF$A_MAJOR_STG;
    FMP [BSF$A_BASE_R10] = .BSF$A_MINOR_STG;
    FMP [BSF$A_BASE_R9] = .BSF$A_TEMP_STG;
!+
! The "PROCEDURE ID" is the address of the start of the GOSUB.
!-
    FMP [BSF$A_PROC_ID] = .NEW_PC;
!+
! Copy the frame flags from the previous frame.  The previous
! frame had better be a basic frame.
!-
    PREV_FMP = .FMP [BSF$A_SAVED_FP];
    FMP [BSF$W_FCD_FLAGS] = .PREV_FMP [BSF$W_FCD_FLAGS];
!+
! Mark this as a "GOSUB" frame.  Such frames are removed very easily
!  when, for example, returning from a condition handler.  This is
!  because GOSUB has no lexical scope, and so we cannot enforce
!  well-structured programming practives which involve it.
!-
    FMP [BSF$B_PROC_CODE] = BSF$K_PROC_GOSB;
!+
! Set the frame length field.
!-
    FMP [BSF$B_LEN_FCD] = BSF$K_LENFCDGSB;
!+
! Set the integer overflow interrupt enable bit in the PSW if the parent
! frame has it set.
!-

    IF ((.FMP [BSF$W_FCD_FLAGS] AND BSF$M_FCD_IV) NEQ 0) THEN BISPSW (%REF (PSW$M_IV));

!+
! Set up the handler address to mark this as a BASIC frame and for
! VAX/VMS CHF.
!-
!
    FMP [BSF$A_HANDLER] = BAS$HANDLER;
!+
! Branch to the compiled code.  This code will call BAS$END_GSB_R8
! rather than returning.
!-
    BAS$GOSUB_JSB (.NEW_PC);
    END;					! of BAS$INIT_GOSUB

END

ELUDOM
