MODULE OTS$$CCB_DATA (				! Data base for LUB/ISB/RAB
		IDENT = '1-002'			! File: OTSCCBDAT.B32 Edit: JBS1002
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY: language support library
!
! ABSTRACT:
!
!	This module holds the OWN storage for manipulating
!	the CCB (the LUB/ISB/RAB).  The data in this module
!	is referenced by OTS$$CCB and FOR$$CB.
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR:  John Sauter, 16-AUG-1979
!
! MODIFIED BY:
!
! 1-001	- Original, from OTS$$CCB version 1-047.  JBS 16-AUG-1979
! 1-002	- Initialize OTS$$L_CUR_LUN and OTS$$L_LVL_CTR at link time,
!	   since FORTRAN doesn't call any initialization code.
!	   JBS 14-JAN-1980
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!
!	NONE
!
! INCLUDE FILES:
!

REQUIRE 'RTLML:OTSISB';				! get length of ISB

REQUIRE 'RTLML:OTSLUB';				! get length of LUB

REQUIRE 'RTLIN:RTLPSECT';			! Define DECLARE_PSECTs macro

REQUIRE 'RTLIN:OTSCCBREQ';			! Define interface to  OTS$PUSH_CCB

LIBRARY 'RTLSTARLE';				! STARLET library for macros and symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECT DECLARATIONS:
!
DECLARE_PSECTS (OTS);				! declare PSECTs for OTS$ facility
!
! GLOBAL STORAGE:
!

GLOBAL
    OTS$$A_CUR_LUB : INITIAL (0),		! Contains the address of the current I/O
!+
! Bit 0 of the following longword is zero if the queue headers have not
! yet been set up.
!-
    OTS$$V_CCB_INIT : VOLATILE INITIAL (0),
!+
! The following quadwords constitute queue headers, one for each LUN.
! Each queue will normally either be empty (meaning that no LUB is
! allocated) or contain one item, the LUB.  The field LUB$Q_QUEUE is
! used for the queue linkage.  Under certain circumstances a second
! LUB may be placed in the queue and then quickly removed.
!-
    OTS$$AA_LUB_TAB : VOLATILE OTS$$LUB_TAB_ST 	!
	[-LUB$K_ILUN_MIN + LUB$K_LUN_MAX + 1, LUB$K_ILUN_MIN],
!+
! Each bit of the following BITVECTOR corresponds to a LUN.  The bit is
! set if there is any I/O activity outstanding for the LUN.  The bit
! must be kept here rather than in the LUB because there can be I/O
! activity outstanding even before the LUB is allocated.
!-
    OTS$$V_IOINPROG : VOLATILE BITVECTOR 	!
	[((-LUB$K_ILUN_MIN + LUB$K_LUN_MAX + %BPVAL)/%BPVAL)*%BPVAL],
!+
! The following cell contains the logical unit number of the current
! unit.  It is used in place of OTS$$AA_CUR_LUB when pushing to avoid
! a problem with removing the LUB from the LUB table prior to
! deallocating it.  When it contains a value one greater than the max
! permitted value then there is no current LUB.
!-
    OTS$$L_CUR_LUN : INITIAL (LUB$K_LUN_MAX + 1),
!+
! The following cell acts as a level counter.  For efficiency the
! LUN pushing and popping routines are not called at the top level
! because, first, they would have nothing useful to do and, second,
! the top level is used much more frequently than the lower levels.
!-
    OTS$$L_LVL_CTR : INITIAL (-1),
!+
! The following vector of bits is used to record ownership of each LUN.
! If the bit corresponding to a particular language is set, the language
! owns the LUN.
!-
    OTS$$V_LUN_OWNR : BLOCKVECTOR [-LUB$K_ILUN_MIN + LUB$K_LUN_MAX + 1, 	!
	    ((LUB$K_LANG_MAX + %BPUNIT)/%BPUNIT), BYTE];

!
! EXTERNAL REFERENCES:
!
!	NONE
!
END						! End of module OTS$$CCB_DATA

ELUDOM
