MODULE STR$TRIM (		! Delete trailing blanks and spaces

		IDENT = '1-007'	! File: STRTRIM.B32	Edit: RKR1007

		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: String support library
!
! ABSTRACT:
!
!	This module takes strings of any supported class or dtype and 
!	deletes trailing spaces and tabs.
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR: R. Will, CREATION DATE: 19-Feb-79
!
! MODIFIED BY:
!
!  R. Will, 19-Feb-79: VERSION 01
! 1-001	- Separate from BAS$EDIT, and write in B32 instead of MAR.  
!	  RW  5-Nov-79
! 1-002 - Make optional argument word.  RW  8-Nov-79
! 1-003 - String speedup, status from macros.  RW  11-Jan-1980
! 1-004 - Compute optional output length argument after the copy to the
!	  result so that the correct output string length is used.
!	  SBL 26-June-1981
! 1-005 - Enhance to recognize additional classes of descriptors by
!	  using $STR$GET_LEN_ADDR to extract the length and address
!	  of the first byte of data from a descriptor.  Remove string
!	  interlocking code.  RKR 24-AUG-1981
! 1-006 - Speed up code.  RKR 7-OCT-1981.
! 1-007 - Use STR$COPY_R_R8 for copying operation.  Use
!	  $STR$SIGNAL_FATAL instead of $STR$CHECK_STATUS.
!	  RKR 18-NOV-1981.
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
		(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

REQUIRE 'RTLIN:STRLNK';		! Use require file with string linkage

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    STR$TRIM;			! delete trailing spaces and tabs

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';	! Declare PSECTS code

REQUIRE 'RTLIN:STRMACROS';	! use string macros to code

LIBRARY 'RTLSTARLE';		! STARLET library for macros and symbol

!
! MACROS: NONE
!

!
! EQUATED SYMBOLS:
!

LITERAL
    SPACE = ' ',				! space
    TAB = '	';				! tab

!
! PSECT DECLARATIONS
!

DECLARE_PSECTS (STR);

!
! OWN STORAGE: NONE
!

!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$STOP,					! signal errors
    STR$COPY_R_R8 : STR$JSB_COPY_R ;		! Routine to do the copy

EXTERNAL LITERAL
    STR$_NORMAL;				! successful completion

GLOBAL ROUTINE STR$TRIM (	! delete trailing spaces and tabs

	DEST_DESC, 		! Pointer to destination descriptor
	SRC_DESC,		! Pointer to source descriptor
	DEST_LEN		! length of destination

			) : =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine copies the input string to the output string 
!	without copying the trailing spaces and tabs.  If the optional 
!	third argument is present, the length of the copy is returned.
!
! FORMAL PARAMETERS:
!
!	DEST_DESC.wt.dx		pointer to destination string descriptor
!	SRC_DESC.rt.dx		pointer to source string descriptor
!	DEST_LEN.wwu.r		length of trimmed source string
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	SS$_NORMAL	Success
!	STR$_TRU	Truncation occurred.  Warning.
!
! SIDE EFFECTS:
!
!	May signal:
!	    STR$_FATINTERR	Fatal internal error
!	    STR$_ILLSTRCLA	Illegal (or unsupported) string class
!	    STR$_INSVIRMEM	Insufficient virtual memory for
!				reallocation of dynamic string
!
!--

    BEGIN

    BUILTIN
	NULLPARAMETER;			! check for optional arg

    LOCAL
	IN_LEN,					! length of input string
	IN_ADDR,				! addr of 1st byte of
						! input string
	OUT_LEN,				! length of output
						! string
	OUT_ADDR,				! addr of 1st data byte
						! of output string
	RETURN_STATUS, 				! status from 
						! STR$COPY_R_R8
	COPY_LENGTH;				! length to be copied

    MAP
	SRC_DESC  : REF $STR$DESCRIPTOR,
	DEST_DESC : REF $STR$DESCRIPTOR,
	DEST_LEN : REF VECTOR [1, WORD, UNSIGNED]; ! make parameter a 
						   ! word

!+
! compute length and address of 1st data byte for input string and
! signal fatal errors encountered.
!-
    $STR$GET_LEN_ADDR ( SRC_DESC, IN_LEN, IN_ADDR ) ;

!+
! Start at the end of the string and search backwards to find the first
! character which is not a tab or a space.
!-

    COPY_LENGTH = .IN_LEN;			! initialize the length

    WHILE .COPY_LENGTH NEQU 0
    DO
	BEGIN
	IF
	    ((CH$RCHAR (CH$PLUS (.IN_ADDR, .COPY_LENGTH - 1))
		EQL SPACE)
	    OR
	    (CH$RCHAR (CH$PLUS (.IN_ADDR, .COPY_LENGTH - 1))
		EQL TAB))
	THEN 
	    COPY_LENGTH = .COPY_LENGTH - 1
	ELSE 
	    EXITLOOP;
	END;

!+
! Copy the trimmed string
!-

    RETURN_STATUS = STR$COPY_R_R8 ( .DEST_DESC,
				    .COPY_LENGTH, 
				    .IN_ADDR ) ;

    $STR$SIGNAL_FATAL (RETURN_STATUS);		! signal fatal errors

!+
! If caller asked for length to be returned, return it.  In this case,
! we have to use $STR$GET_LEN_ADDR to extract its length.
!-

    IF NOT NULLPARAMETER (3)
    THEN 
	BEGIN
	$STR$GET_LEN_ADDR ( DEST_DESC, OUT_LEN, OUT_ADDR ) ;
	DEST_LEN [0] = MIN (.OUT_LEN, .COPY_LENGTH);
	END ;

    RETURN .RETURN_STATUS;
    END;					!End of STR$TRIM

END						!End of module

ELUDOM
