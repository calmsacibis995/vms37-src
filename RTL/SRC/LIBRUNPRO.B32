MODULE LIB$RUN_PROGRAM (		! RUN another program
	IDENT = '1-008'		! File: LIBRUNPRO.B32 Edit: SBL1008

		       ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General library
!
! ABSTRACT:
!
!	This module causes the current program to end and another
!	program to be run in its place.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 13-NOV-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  JBS 15-NOV-1979
! 1-002	- Correct entry point name.  JBS 27-NOV-1979
! 1-003	- Change STR$ codes to LIB$.  JBS 22-JAN-1980
! 1-004 - Restrict image name string to 132 bytes, since that's all that
!	  DCL can handle.  SBL 27-Jan-1981
! 1-005 - Remove use of process common, AST disabling, which are 
!	  unnecessary. SBL 27-Jan-1981
! 1-006 - Enhance to recognize additional classes of string descriptors
!	  by invoking LIB$ANALYZE_SDESC_R3 to extract length and
!	  address of 1st data byte from descriptor.  RKR 27-MAY-1981.
! 1-007 - Redirect jsb's from LIB$ANALYZE_SDESC_R3 to
!	  LIB$ANALYZE_SDESC_R2.  RKR 18-NOV-1981.
! 1-008 - Use CLI$K_SRVDESC.  Report LIB$_NOCLI and LIB$_UNECLIERR errors.
!	  Return an error if the file doesn't exist.  SBL 18-Dec-1981
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
	(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
    REQUIRE 'RTLIN:STRLNK';	! linkage for LIB$ANALYZE_SDESC_R2
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$RUN_PROGRAM;		! End this program and start another

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';	! Macros for defining PSECTs

LIBRARY 'RTLSTARLE';		! System symbols

REQUIRE 'RTLML:CLIMSG';		! CLI$_ messages

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (LIB);		! Declare psects for LIB$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2 : LIB$ANALYZE_SDESC_JSB_LINK, ! Extract length
						       ! and address of
						       ! 1st data byte
						       ! from descriptor
    SYS$CLI;			! Call the command language interpreter

!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    LIB$_NOCLI,				! No CLI to perform function
    LIB$_UNECLIERR,			! Unexpected CLI error
    LIB$_INVARG;			! Invalid argument


GLOBAL ROUTINE LIB$RUN_PROGRAM (	! RUN another program

	PGM_NAME		! Name of program to RUN

			       ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Stop running this program and start running another.
!
! CALLING SEQUENCE:
!
!	status.wlc.v =  LIB$RUN_PROGRAM (PGM_NAME.rt.dx)
!
! FORMAL PARAMETERS:
!
!	PGM_NAME.rt.dx	The name of the program to be run in place of 
!			this one.
!			It may not be longer than 132 characters.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	LIB$_NOCLI	No CLI present to perform function
!	LIB$_UNECLIERR	Unexpected CLI error
!	LIB$_INVARG	Invalid argument
!	RMS$_xxx	RMS error status
!
! SIDE EFFECTS:
!
!	Does not normally return to its caller.
!
!--

    BEGIN

    MAP
	PGM_NAME : REF BLOCK [8, BYTE];

    LOCAL
	RET_STATUS : BLOCK [4, BYTE],			! Status returned
	CLI_REQ_BLOCK : BLOCK [CLI$K_SRVDESC, BYTE],	! CLI service
							! block
	DESC_ADDR : REF BLOCK [8, BYTE],	! Pointer to descriptor
						! in req block
	PGM_NAME_LEN,				! Length of the 
						! program name provided.
	PGM_NAME_ADDR;				! Address of 1st data
						! byte

!+
! Extract length and address of 1st data byte of parameter.  If we
! fail, return status returned by LIB$ANALYZE_SDESC_R2.
!-
    RET_STATUS = LIB$ANALYZE_SDESC_R2 ( .PGM_NAME ;
					PGM_NAME_LEN, PGM_NAME_ADDR ) ;

    IF NOT .RET_STATUS THEN RETURN (.RET_STATUS) ;

!+
! Don't allow too long a name.
!-
    IF (.PGM_NAME_LEN GTRU 132) THEN RETURN (LIB$_INVARG);

!+
! Initialize CLI command request block.
!-
    CH$FILL (0, CLI$K_SRVDESC, CLI_REQ_BLOCK);
    CLI_REQ_BLOCK [CLI$B_RQTYPE] = CLI$K_CLISERV;  ! Request a service
    CLI_REQ_BLOCK [CLI$W_SERVCOD] = CLI$K_CHAIN;   ! Service is "CHAIN"
    DESC_ADDR = CLI_REQ_BLOCK [CLI$Q_RQDESC];

!+
! Fill in the descriptor
!-
    DESC_ADDR [DSC$W_LENGTH] = .PGM_NAME_LEN;
    DESC_ADDR [DSC$A_POINTER] = .PGM_NAME_ADDR;

    RET_STATUS = SYS$CLI (CLI_REQ_BLOCK);

    IF  NOT .RET_STATUS
    THEN
	BEGIN
	IF .RET_STATUS [STS$V_FAC_NO] EQL CLI$_FACILITY
	THEN
	    BEGIN
	    IF .RET_STATUS EQLU CLI$_INVREQTYP
	    THEN
		RETURN LIB$_NOCLI
	    ELSE
		RETURN LIB$_UNECLIERR;
	    END
	ELSE
	    RETURN .RET_STATUS;
	END;

!+
! Now, to get the chain to take effect, we must exit.  
!-
    $EXIT (CODE = SS$_NORMAL);
!+
! Its not likely that we'll get back from a call to $EXIT, but BLISS 
! doesn't know that, so it insists that we return a value.
!-


    RETURN (0);
    END;			! end of LIB$RUN_PROGRAM

END				! end of module LIB$RUN_PROGRAM

ELUDOM
