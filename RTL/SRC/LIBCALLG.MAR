	.TITLE	LIB$CALLG - Execute CALLG instruction
	.IDENT	/1-002/			; File: LIBCALLG.MAR Edit: SBL1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: General Utility Library
;
; ABSTRACT:
;
;	This module contains LIB$CALLG, which makes the VAX CALLG instruction
;	available as a callable procedure.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 28-October-1981
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 28-October-1981
; 1-002 - Inherit caller's FU, DV, IV PSW bits.  SBL 9-Nov-1981
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
	$PSLDEF			; Processor Status Longword definitions
	$SFDEF			; Stack Frame definitions
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
;	NONE
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _LIB$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	LIB$CALLG - Execute CALLG instruction
;++
; FUNCTIONAL DESCRIPTION:
;
;	LIB$CALLG makes the VAX CALLG instruction available as
;	a callable procedure.  It calls a procedure with an
;	argument list specified as an array.
;
;	For more information, see the VAX-11 Architecture Handbook.
;
; CALLING SEQUENCE:
;
;	status.wx.v = LIB$CALLG (arg_list.rl.ra, procedure.fzem.r)
;
; FORMAL PARAMETERS:
;
	arg_list = 4		; An array of longwords containing the argument
				; list for the called procedure.  Passed by
				; reference.  The first byte of the first
				; longword must contain the count of longwords
				; to follow; the remaining three bytes of the
				; first longword must be zero.

	procedure = 8		; The entry mask of the procedure to call.
				; Passed by reference.

;
; IMPLICIT INPUTS:
;
;	The caller's PSW bits FU, IV and DV are inherited for the call
;	to the specified procedure.
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	The contents of registers R0 and R1 returned by the called procedure
;	are returned unchanged to the caller of LIB$CALLG.  Therefore, the
;	function value of LIB$CALLG is the same as that of the called function.
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY LIB$CALLG, ^M<>		; Entry point

	BICW3	#^C<PSL$M_IV!PSL$M_DV!PSL$M_FU>, SF$W_SAVE_PSW(FP), -
		R0			; Put in R0 the caller's PSW
					; with only the IV, DV and FU
					; bits copied.
	BISPSW	R0			; Set those bits in our PSW
	CALLG	@arg_list(AP), @procedure(AP)	; Call procedure
	RET				; return to caller

	.END				; End of module LIB$CALLG
