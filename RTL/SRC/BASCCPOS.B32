MODULE BAS$CCPOS (				! BASIC Current Cursor Position
		IDENT = '1-009'			! File: BASCCPOS.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY: BASIC Support Library - user callable
!
! ABSTRACT:
!
!	This module supports the BASIC function CCPOS.  It returns the current
!	cursor position on the given channel number.  For the time being it
!	returns the value in LUB$B_PRINT_POS.  Eventually it is hoped that the
!	terminal driver can be interrogated directly for the cursor position.
!
! ENVIRONMENT: User access mode; mixture of AST level or not
!
! AUTHOR: Donald G. Petersen, CREATION DATE: 29-Nov-78
!
! MODIFIED BY:
!
! 1-01	- Original.  DGP 29-Nov-78
! 1-002 - Use OPEN$K_LUN_BPRI in call to CB_PUSH.  DGP 05-Dec-78
! 1-003	- Change REQUIRE file names from FOR... to OTS...  JBS 06-DEC-78
! 1-004	- Change OPEN prefix to LUB.  JBS 13-DEC-78
! 1-005 - Change FOR$$CB... to BAS$$CB... JBS 02-JAN-1979
! 1-006 - Change PRINT_POS to longword.  DGP 19-Mar-79
! 1-007	- Allow CB_PUSH to reach back to the PRINT LUB.  JBS 01-MAY-1979
! 1-008	- Call STOP_IO if the channel is not open.  JBS 01-MAY-1979
! 1-009	- Set up ISB$A_USER_FP.  JBS 25-JUL-1979
!--

!<BLF/PAGE>


SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
!	LINKAGES
!

REQUIRE 'RTLIN:OTSLNK';				! Initialize all linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$CCPOS;					! Current Cursor Position

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Psect definitions

REQUIRE 'RTLML:OTSLUB';				! needed for LUB$L_PRINT_POS

REQUIRE 'RTLML:OTSISB';				! needed for ISB$A_USER_FP

LIBRARY 'RTLSTARLE';				! STARLET library for macros and symbols

!
! MACROS:
!
!	NONE
!
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECT DECLARATIONS:
!
DECLARE_PSECTS (BAS);				! declare PSECTs for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
!
! EXTERNAL REFERENCES:
!
!

EXTERNAL ROUTINE
    BAS$$CB_PUSH : JSB_CB_PUSH,			! Push control block
    BAS$$CB_POP : JSB_CB_POP NOVALUE,		! Pop control block
    BAS$$STOP_IO : NOVALUE;			! Signal fatal I/O errors

EXTERNAL LITERAL
    BAS$K_IO_CHANOT : UNSIGNED (8);		! I/O Channel not open


GLOBAL ROUTINE BAS$CCPOS (			! Get cursor position
	UNIT					! Channel number for which cursor position is desired
    ) : =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Return the current cursor position of the indicated channel.
!	Channel 0 is split into 2 data bases, input and output.  If channel 0
!	is specified, then the cursor position for the output data base will be
!	returned.  This problem will go away if and when the terminal driver supplies
!	the cursor position for files opened on a terminal.
!
! FORMAL PARAMETERS:
!
!	UNIT.rl.v		cursor position of this unit is returned
!
! IMPLICIT INPUTS:
!
!	LUB$L_PRINT_POS		Current cursor position for a channel
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	CURSOR_POS.wl.v		Current cursor position of indicated channel
!
! SIDE EFFECTS:
!
!	Errors are signalled if a channel number less than K_DLUN_MIN or
!	greater than 99 by BAS$$CB_PUSH. If the channel is not 0 and
!	it has not been opened, this routine signals.
!
!--

    BEGIN

    BUILTIN
	FP;

    GLOBAL REGISTER
	CCB = K_CCB_REG : REF BLOCK [, BYTE];

    MAP
	UNIT : REF BLOCK;

    LOCAL
	FMP : REF BLOCK [, BYTE],
	CCPOS;					! holds cursor position

    FMP = .FP;
!+
! If unit 0 was requested then change the unit number to indicate the
! PRINT logical unit.  Call CB_PUSH to get a pointer to the data base.  If
! the unit number is not in the valid range of unit numbers, CB_PUSH will
! signal an error.  Check to see if the channel has been opened and if the
! logical unit is not 0 then signal.
!-
    BAS$$CB_PUSH ((IF .UNIT EQL 0 THEN LUB$K_LUN_BPRI ELSE .UNIT), LUB$K_ILUN_MIN);
    CCB [ISB$A_USER_FP] = .FMP [SF$L_SAVE_FP];

    IF (( NOT .CCB [LUB$V_OPENED]) AND (.UNIT GTR 0))
    THEN
!+
! The unit is not 0 and it is not opened.  Pop the control blocks back
! and signal the error.
!-
	BAS$$STOP_IO (BAS$K_IO_CHANOT)
    ELSE
!+
! Everything is valid.  Pick up the cursor position from the channel
! data base
!-
	CCPOS = .CCB [LUB$L_PRINT_POS];

!+
! Pop the control block back and return the cursor position.
!-
    BAS$$CB_POP ();
    RETURN .CCPOS
    END;					! End of routine BAS$CCPOS

END						!End of module BAS$CCPOS

ELUDOM
