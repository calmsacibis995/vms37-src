MODULE BAS$INSTR (				! Find the position of a substring
		IDENT = '1-005'			! File: BASINSTR.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: String support library
!
! ABSTRACT: This module takes 2 input strings of any class and dtype
!	and returns the position of the substring in the main string
!	starting at an input position
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR: R. Will, CREATION DATE: 10-Mar-79
!
! MODIFIED BY:
!
! R. Will, 10-Mar-79 : VERSION 01
! 01	- original
! 1-002 - String cleanup.  Call STR$POS.  RW  20-OCT-79
! 1-003	- Correct a typo in the linkage specifications.
!	   JBS 02-NOV-1979
! 1-004 - Use JSB entry point of STR_POSITION.  RW  2-Nov-79
! 1-005 - Use CALL entry point of STR_POSITION.  RW  15-NOV-79
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES: NONE
!

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$INSTR;					! find substring position

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Declare PSECTS code

!
! MACROS: NONE
!
!
! EQUATED SYMBOLS: NONE
!
!
! PSECT DECLARATIONS
!

DECLARE_PSECTS (BAS);

!
! OWN STORAGE: NONE
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    STR$POSITION;				! routine to do the actual search


GLOBAL ROUTINE BAS$INSTR (			! find position of substring in string
	START_POS, 				! value of position to start search
	SRC_DESC, 				! descriptor of string to search
	SUB_DESC				! descriptor of string to find
    ) : = 					!

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine takes two source strings of any
!	dtype and class and finds the position of the substring in the
!	source string starting at the input starting position.  The routine
!	returns the position of the substring in the source string. This
!	routine merely calls BAS$POS which does the exact same thing with
!	the parameters in a different order
!
! FORMAL PARAMETERS:
!
!	START_POS.rl.v		value of position in source to begin search
!	SRC_DESC.rt.dx		pointer to descriptor of string to be searched
!	SUB_DESC.rt.dx		pointer to descriptor of string to find
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	FIND_POS.wlu.v		value of start of substring in source string
!
! SIDE EFFECTS:
!
!	This routine calls STR$POSITION and therefore may signal any of
!	its errors or have any of its side effects, including locking
!	a string from being written for a short period.
!
!--

    BEGIN
    RETURN STR$POSITION (.SRC_DESC, .SUB_DESC, START_POS);
    END;					!End of BAS$INSTR

END						!End of module

ELUDOM
