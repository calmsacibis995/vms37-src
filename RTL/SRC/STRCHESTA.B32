%TITLE 'STR$$CHECK_STATUS -Check status and convert to STR$ status'
MODULE STR$$CHECK_STATUS ( ! Check status and convert to STR$ status

		IDENT = '1-003'	! File: STRCHESTA.B32 Edit: RKR1003

		         ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	String support library
!
! ABSTRACT:
!
!	This module contains a single routine which inspects the
!	incoming status ( usually a LIB$ or SS$ status) and converts 
!	it into the appropriate STR$ status.  If it is one of the 
!	fatal LIB$ statuses, the corresponding STR$ status gets
!	signalled.
!	Unrecognized statuses are left alone.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: R. Reichert, CREATION DATE: 3-MAY-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  RKR 3-MAY-1981
! 1-002 - Revise what error statuses get signaled. RKR 3-SEP-1981.
! 1-003 - Add explicit external declaration for LIB$STOP.
!	  RKR 4-NOV-1981.
!
!--


%SBTTL 'Declarations'
!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, 
			  NONEXTERNAL = WORD_RELATIVE);
!
! LINKAGES:
!
REQUIRE 'RTLIN:STRLNK';		! The linkage declarations
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    STR$$CHECK_STATUS_R2 : STR$$CHECK_STATUS_LINKAGE;

!
! INCLUDE FILES:
!

LIBRARY 'RTLSTARLE';		! System symbols, typically from 
				! SYS$LIBRARY:STARLET.L32
REQUIRE 'RTLIN:RTLPSECT';	! Define PSECT declarations macros
!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (STR);		! Declare psects for STR$ facility
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
	LIB$STOP;		! to signal errors

EXTERNAL LITERAL		! Condition value symbols
	LIB$_INSVIRMEM, 	! Insufficient virtual memory
	LIB$_INVSTRDES, 	! Invalid string descriptor
	LIB$_INVARG, 		! Invalid argument
	LIB$_STRTRU,		! String truncated
	LIB$_WRONUMARG,		! Wrong number of arguments
	STR$_NORMAL,		! Success
	STR$_INSVIRMEM, 	! Insufficient virtual memory
	STR$_ILLSTRCLA, 	! Illegal string class
	STR$_TRU,		! Truncation
	STR$_WRONUMARG;		! Wrong number of arguments


%SBTTL 'STR$$CHECK_STATUS_R2 - Check Status'
GLOBAL ROUTINE STR$$CHECK_STATUS_R2 (	! Check status

	IN_STATUS 

				    ) : STR$$CHECK_STATUS_LINKAGE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine inspects the incoming status.  If it is one of
!	a recognized set of fatal LIB$ statuses, the corresponding
!	STR$ status is signalled.  Some LIB$ statuses are converted
!	to the corresponding STR$ status.  If the status is unkown,
!	it is simply returned.
!
! CALLING SEQUENCE:
!
!	STR$$CHECK_STATUS_R2 ( IN_STATUS.rlc.v )
!
! FORMAL PARAMETERS:
!
!	IN_STATUS.rlc.v		The input status
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS: 
!
!	OUT_STATUS.wlc.v	The output status

!
! SIDE EFFECTS:
!
! 	If it finds IN_STATUS to be LIB$_INSVIRMEM, LIB$_INVSTRDES, 
! LIB$_WRONUMARG or LIB$_INVARG it signals the corresponding STR$ 
! condition code.
!
!--

    BEGIN

    LOCAL
	OUT_STATUS ;		! the status returned

    OUT_STATUS = (SELECTONE .IN_STATUS OF
	SET
	    [SS$_NORMAL,	
	     STR$_NORMAL]:	.IN_STATUS ; ! most common first

	    [LIB$_STRTRU]:	STR$_TRU ;   ! next most common

	    [LIB$_INSVIRMEM]:	LIB$STOP (STR$_INSVIRMEM) ; !least
	    [LIB$_INVSTRDES]:	LIB$STOP (STR$_ILLSTRCLA) ; ! common
	    [LIB$_INVARG]:	LIB$STOP (STR$_ILLSTRCLA) ;
	    [LIB$_WRONUMARG]:	LIB$STOP (STR$_WRONUMARG) ;

	    [OTHERWISE]:	.IN_STATUS ;		! unlikely
	TES );
    RETURN .OUT_STATUS;
    END;	! End of routine STR$$CHECK_STATUS_R2
END		! End of module STR$$CHECK_STATUS

ELUDOM
