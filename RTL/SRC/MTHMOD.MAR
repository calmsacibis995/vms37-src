	.TITLE	MTH$MOD		FORTRAN MOD ROUTINES
	.IDENT	/1-002/		; File: MTHMOD.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routines IMOD and JMOD:
;	Return remainder after divisor.
;
;
;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Jonathan M. Taylor, 11-JUL-77: Version 0
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 0 of MTHMOD
;
; 0-3	- Remove MTH$FLAG_JACKET.  TNH 5-July-78
; 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
; 1-002	- Add "_" to the PSECT directive.  JBS 22-DEC-78

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	oerr.mar
;

;
; EXTERNAL SYMBOLS:
;	NONE
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	MTH$MOD

;++
; FUNCTIONAL DESCRIPTION:
;	Return remainder after division.
;
;
; CALLING SEQUENCE:
;	Remainder.ww.v = MTH$IMOD (dividend.rw.r, divisor.rw.r)
;	
;
;
; INPUT PARAMETERS:
;	The two parameters are one-word values and are call-by-reference.
;	
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	Integer Overflow and Divide by Zero exceptions can occur.
;	
;
;--




	.ENTRY	MTH$IMOD,	^M<R2, IV> ; enable integer overflow
	CVTWL	@4(AP), R0	; R0 = divd
	EMUL	R0, #1, #0, R0	; R0/R1 = quadword divd
	CVTWL	@8(AP), R2	; R2 = divr
	EDIV	R2, R0, R0, R0	; R0 = longword remainder
	CVTLW	R0, R0		; R0 = word remainder
	RET

	.SBTTL	MTH$JMOD

;++
; FUNCTIONAL DESCRIPTION:
;	Return the remainder after division.
;
;
; CALLING SEQUENCE:
;	Remainder.wl.v = MTH$JMOD (dividend.rl.r, divisor.rl.r)
;	
;
;
; INPUT PARAMETERS:
;	The two parameters are longword values and are call-by-reference.
;	
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	NONE
;
;--


	.ENTRY	MTH$JMOD,	^M<R2, IV> ; enable integer overflow
	EMUL	@4(AP), #1, #0, R0 ; R0 = quadword divd
	EDIV	@8(AP), R0, R0, R0 ; R0 = longword remainder
	RET


	.END
