	.TITLE	BAS$$MULD_DIVD	BASIC Multiply and Divide D_floating
	.IDENT	/1-001/		; File: BASMULDDI.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: BASIC-PLUS-2 Miscellaneous
;++
; ABSTRACT:
;
;	This module contains routines to multiply and divide D_floating
;	values.  They are used by BASIC Scale and Descale routines.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	John Sauter, 08-MAY-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of BASMULDDI
;
; 1-001	- Original.  JBS 08-MAY-1979

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
;
	.DSABL	GBL			; No automatic globals
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_BAS$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;
;	NONE

	.SBTTL	BAS$$MULD	Multiply D_floating numbers

;++
; FUNCTIONAL DESCRIPTION:
;
;	Multiply two D_floating numbers, producing a D_floating product.
;	Underflow is made zero.
;
; CALLING SEQUENCE:
;
;	BAS$$MULD (VAL1.rd.r, VAL2.rd.r, PRODUCT.wd.r)
;
; INPUT PARAMETERS:
;	
;	VAL1.rd.r		Number to multiply
;	VAL2.rd.r		Number to multiply
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	PRODUCT.wd.r	VAL1 * VAL2
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	NONE
;
; SIDE EFFECTS:
;
;	May get Floating Reserved Operand hardware trap.
;	May get an arithmetic fault doing the multiply.
;	
;--


	.ENTRY	BAS$$MULD, ^M<IV>
;+
; Define symbols for the arguments
;-
VAL1=4
VAL2=8
PRODUCT=12

;+
; Do the multiply
;-

	MULD3	@VAL1(AP), @VAL2(AP), @PRODUCT(AP)
	RET				; Return to caller.

	.SBTTL	BAS$$DIVD	Divide D_floating numbers

;++
; FUNCTIONAL DESCRIPTION:
;
;	Divide two D_floating numbers, producing a D_floating quotient.
;	Underflow is made zero.
;
; CALLING SEQUENCE:
;
;	BAS$$DIVD (DIVISOR.rd.r, DIVIDEND.rd.r, QUOTIENT.wd.r)
;
; INPUT PARAMETERS:
;	
;	DIVISOR.rd.r		Divisor
;	DIVIDEND.rd.r		Dividend
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	QUOTIENT.wd.r	DIVIDEND / DIVISOR
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	NONE
;
; SIDE EFFECTS:
;
;	May get Floating Reserved Operand hardware trap.
;	May get an arithmetic fault doing the divide.
;	
;--


	.ENTRY	BAS$$DIVD, ^M<IV>
;+
; Define symbols for the arguments
;-
DIVISOR=4
DIVIDEND=8
QUOTIENT=12

;+
; Do the divide.
;-

	DIVD3	@VAL1(AP), @VAL2(AP), @PRODUCT(AP)
	RET				; Return to caller.
;
	.END
