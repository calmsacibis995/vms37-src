	.TITLE	MTH$SGN - BASIC SGN function
	.IDENT	/1-006/			; File: MTHSGN.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Math Library
;
; ABSTRACT:
;
;	This module returns a 1 is the input is positive, a -1 if the
;	input is negative, and a 0 if the input is 0.
;
; ENVIRONMENT: User Mode, AST Reentrant
;
;--
; AUTHOR: R. Will,	 CREATION DATE: 30-Nov-78
;
; MODIFIED BY:
;
; VERSION 01
; 1-01	- Original 
; 1-002	- Make edit number three digits in length.  JBS 07-DEC-78
; 1-003	- Add "_" to the PSECT directive.  JBS 22-DEC-78
; 1-004 - Clean up.  RW  11-Jul-79
; 1-005	- Add a JSB entry point.  JBS 16-AUG-1979
; 1-006	- Correct a typo in edit 005.  JBS 20-AUG-1979

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL				; Prevent undeclared
						; symbols from being
						; automatically global.

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;
	input_addr = 4
;
; OWN STORAGE:
;

;
; PSECT DECLARATIONS:
;
	.PSECT _MTH$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	MTH$SGN  - BASIC SGN function
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns a 1 if the input is positive, a -1 if the
;	input is negative, and a 0 if the input is 0.
;
; CALLING SEQUENCE:
;
;	CALL sign.wl.v = MTH$SGN (x.rf.r)
;	note: this works for f and d data types because for both f and d
;	the sign and exponent are in the same place, and all we are interested
;	in is the sign and the value 0.  The value zero is represented in both
;	f and d as a 0 sign and a 0 exponent.
;
; INPUT PARAMETERS:
;
	input_addr = 4
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	a 1, 0, or -1 depending on the input sign
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY MTH$SGN , ^M<IV>		; Entry point

	TSTF	@input_addr(AP)		; compare the input parameter to 0
	BGTR	1$			; positive
	BLSS	2$			; negative

	CLRL	R0			; input was 0
	RET

1$:	MOVL	#1,R0			; positive
	RET

2$:	MNEGL	#1,R0			; negative
	RET

	.SBTTL	MTH$SGN_R1 - JSB entry point
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns a 1 if the input is positive, a -1 if the
;	input is negative, and a 0 if the input is 0.
;
; CALLING SEQUENCE:
;
;	sign.wl.v = JSB MTH$SGN (x.rf.v)
;	note: this works for f and d data types because for both f and d
;	the sign and exponent are in the same place, and all we are interested
;	in is the sign and the value 0.  The value zero is represented in both
;	f and d as a 0 sign and a 0 exponent.
;
; INPUT PARAMETERS:
;
;	R0 contains the argument
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	a 1, 0, or -1 depending on the input sign
;
; SIDE EFFECTS:
;
;	NONE
;
;--
MTH$SGN_R1::				; R0 has argument
	TSTF	R0			; compare the input parameter to 0
	BGTR	1$			; positive
	BLSS	2$			; negative

	CLRL	R0			; input was 0
	RSB

1$:	MOVL	#1,R0			; positive
	RSB

2$:	MNEGL	#1,R0			; negative
	RSB

	.END
