	.TITLE	MTH$GFLOOR - Greatest integer routine for G_floating
	.IDENT	/1-001/			; File: MTHGFLOOR.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Math Library
;
; ABSTRACT:
;
;	This routine finds the largest integer less than the input
;	value, i.e. it truncates toward negative infinity
;	for data type G_floating.
;
; ENVIRONMENT: User Mode, AST Reentrant
;
;--
; Author: John Sauter, Creation date: 27-JUL-1979
;
; MODIFIED BY:
;
; VERSION 00
; 1-001	- Original, from MTH$DFLOOR.

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL				; Prevent undeclared
						; symbols from being
						; automatically global.
;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;

;
; PSECT DECLARATIONS:
;
	.PSECT _MTH$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	MTH$GFLOOR  - greatest integer G_floating routine
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine finds the floor by truncating, and then if the
;	input value is negative and not an integer subtracting 1.
;
; CALLING SEQUENCE:
;
;	CALL result_int.wg.v = MTH$GFLOOR (input.rg.r)
;
; INPUT PARAMETERS:
;
	input_addr = 4			; address of the G_floating number
					; to get the floor of
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	the G_floating value of the greatest integer
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	MTH$GFLOOR, ^M<R2, R3>		; entry point

	MOVG	@input_addr(AP), R0		; R0/R1 = input argument
	EMODG	R0, #0, #1, R2, R2		; R2/R3 = fraction_part (arg)
	SUBG2	R2, R0				; R0/R1 = integer_part (arg)

	BGTR	40$				; if > 0, have correct answer

	TSTG	R2				; look at fraction part
	BGEQ	40$				; if > 0 then 0 < input < 1 and
						;  we have the correct answer
						; if = 0 then input was integer
						;  and we have correct answer

	SUBG2	#1,R0				; subtract 1 from truncated
						; negative non-integer

40$:	RET

	.SBTTL	MTH$GFLOOR_R3  - greatest integer G_floating routine
;++
; FUNCTIONAL DESCRIPTION:
;
;	This is the JSB entry point to MTH$GFLOOR.
;
; CALLING SEQUENCE:
;
;	JSB result_int.wg.v = MTH$GFLOOR_R3 (input.rg.v)
;
; INPUT PARAMETERS:
;
;	R0 and R1 contain the input value
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	the G_floating value of the greatest integer
;
; SIDE EFFECTS:
;
;	NONE
;
;--

MTH$GFLOOR_R3::					; entry point

	EMODG	R0, #0, #1, R2, R2		; R2/R3 = fraction_part (arg)
	SUBG2	R2, R0				; R0/R1 = integer_part (arg)

	BGTR	40$				; if > 0, have correct answer

	TSTG	R2				; look at fraction part
	BGEQ	40$				; if > 0 then 0 < input < 1 and
						;  we have the correct answer
						; if = 0 then input was integer
						;  and we have correct answer

	SUBG2	#1,R0				; subtract 1 from truncated
						; negative non-integer

40$:	RSB

	.END
