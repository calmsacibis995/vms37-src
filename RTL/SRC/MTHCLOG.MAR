	.TITLE	MTH$CLOG	COMPLEX LOGARITHM
	.IDENT	/1-003/		; File: MTHCLOG.MAR  Edit: SBL1003

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;
;	This module contains routine MTH$CLOG - perform complex log
;
;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Jonathan M. Taylor, 19-JUL-77: Version 0
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 0 of MTH$CLOG
;
; 1-001	- Update version number and copyright notice.  The last edit
; 1-002	- Add "_" to the PSECT directive.  JBS 21-DEC-78
;	   number for version 0 was 2.  JBS 16-NOV-78
; 1-003 - Use general mode addressing.  SBL 30-Nov-1981

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	OERR.MAR

;
; EXTERNAL SYMBOLS:
	.GLOBL	MTH$ATAN2
	.GLOBL	MTH$CABS
	.GLOBL	MTH$ALOG_R5

;
; MACROS:
;	NONE

;
; PSECT DECLARATIONS:
;
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
	argadr	=	4		; offset from AP to find arg adr

;
; OWN STORAGE:
;	NONE

	.SBTTL	MTH$CLOG

;++
; FUNCTIONAL DESCRIPTION:
;
;	The Natural Logaritm of a complex number (r, i) is
;	computed as follows:
;
;		CLOG(r, i) = (ALOG(CABS(r, i)), ATAN2(i, r))
;
; CALLING SEQUENCE:
;	Natural_log.wfc.v = MTH$CLOG(arg.rfc.r)
;
;
; INPUT PARAMETERS:
;	The one parameter is the address of a complex number (r, i),
;	where r and i are both single-precision floating point values.
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	Signals	Reserved Operand if the input parameter is bad (-0.0)
;
;--


	.ENTRY	MTH$CLOG,	^M<R2,R3,R4,R5,R6>
	MTH$FLAG_JACKET			; set up error handler
	MOVL	argadr(AP), R0		; R0 -> (r, i)
	PUSHAF	(R0)+			; push addr(r)
	PUSHL	R0			; push addr(i)
	CALLS	#2, G^MTH$ATAN2		; R0 = ATAN2(i, r)
	MOVL	R0, R6			; R6 = ATAN2(i, r)
	CALLG	(AP), G^MTH$CABS		; R0 = CABS((r, i))
	JSB	G^MTH$ALOG_R5		; R0 = ALOG(CABS((r, i)))
	MOVL	R6, R1			; R1 = ATAN2(i, r)
	RET


	.END
