2 STR
 VAX-11 Common Run-Time Library STRING Error Messages

! STRING Runtime error message HELP file
!
! Revision History
! ----------------
! 1-001 Orignal. RW  3-Jan-1980
! 1-002 Editorial changes.  RW  21-Jan-1980
! 1-003 More editorial changes.  RW  21-Jan-1980
!
3 DIVBY_ZER
 Division by zero

 Explanation:   Message.   The  string  arithmetic  routines
 attempted  to take the reciprocal of a string whose numeric
 value was 0.

 User Action:   The user should insure  that any string used
 as a divisor is not a null string or any other string whose
 numeric value is 0.

3 FATINTERR
 Fatal internal error

 Explanation:   Message.  An internal consistency check  has
 failed.  This represents  an internal error in the Run-Time
 Library  and  should  be  reported  to  Digital   Equipment
 Corporation  by SPR.

 User Action:   The user should either  discuss  this  error
 with the local software support specialist or submit an SPR
 with supporting documentation including the system traceback
 listing.

3 ILLSTRCLA
 Illegal string class

 Explanation:   Message.  The class code  found in the class
 field of a  descriptor is not a string class code supported
 by the  VAX/VMS  Procedure Calling  and  Condition Handling
 Standard, Appendix C in the VAX-11 Architecture Handbook.

 User Action:   If the user  is programming in a  high level
 language and using the string data types and functions that
 are supplied by the language, then check  that there are no
 logic errors where data is written outside array bounds  or
 other error where data is written incorrectly.  If the user
 is creating descriptors, check that all  string descriptors
 are initialized before using them.

3 ILLSTRPOS
 Illegal string position

 Explanation:   Successfully completed  except  one  of  the
 character-position  parameters to a string routine  pointed
 to a character-position  before the beginning of the  input
 string (was less than 1 but 1 was used) or after the end of
 the input string  (was greater than the length of the input
 string but the length of the input string was used).

 User Action:   The user should make sure that any parameter
 which is a  character-position  is greater than 0  and less
 than or equal to the length of the input string.

3 ILLSTRSPE
 Illegal string specification

 Explanation:   Successfully completed except the character-
 position  parameters  specifying a  substring  of a  string
 parameter were inconsistent  because the ending  character-
 position was less than the starting  character-position.  A
 null string was used for the substring.

 User Action:   The user program should verify that starting
 character-positions  are  less  than  or  equal  to  ending
 character-position.

3 INSVIRMEM
 Insufficient virtual memory

 Explanation:   Message. An attempt to allocate heap storage
 for use as dynamic strings or string temporaries failed.

 User Action:   The user who is  allocating space by calling
 STR$GET1_DX or LIB$GET_VM should verify that  when finished
 using the storage it is released by calling STR$FREE1_DX or
 LIB$FREE_VM respectively.  The high level language user who
 has not  directly  allocated space  can cause this error by
 having a large number of  long strings.  In this case, make
 sure to reduce strings to 0 length when not in use.

3 NEGSTRLEN
 Negative string length

 Explanation:   Successfully completed  except that a length
 parameter to a string routine had a negative value; lengths
 of strings must always be positive or 0.  0 was used.

 User Action:   The user  should verify that all  parameters
 containing string lengths do not contain negative numbers.

3 STRIS_INT
 String is interlocked

 Explanation:   Message.  Code  being executed at  AST level
 attempted writing into a string that was being written into
 or  whose  length  was  being  used  for length computation
 immediately before the AST.

 User Action:   The user should not write to strings at  AST
 level that are used at non-AST level or in other  AST-level
 processing.  If it is necessary to use the same strings for
 interrupt routines, then the user should disable ASTs while
 string assignments are in progress.

3 STRTOOLON
 String is too long (greater than 65535)

 Explanation:   Message.   An attempt  was made  to create a
 string that was longer than allowed by the  String Facility
 or the descriptors  in the  VAX/VMS  Procedure  Calling and
 Condition  Handling  Standard,  Appendix C  in  the  VAX-11
 Architecture Handbook.  The maximum length string supported
 is 65,535.

 User Action:   The user should never specify string lengths
 greater  than  65,535.  The user  should also  check that a
 concatenation  operation  is not  going to try  to create a
 string longer than 65,535.

3 TRU
 Truncation

 Explanation:   Warning.  An attempt  was made to place more
 characters into a string  than it could contain.  The value
 was truncated on the right to fit.

 User Action:   The user should not put more characters into
 a string than its maximum length.  The error may be ignored
 if right truncation is acceptable.

3 WRONUMARG
 Wrong number of arguments

 Explanation:   Message.  A String facility entry was called
 without the correct number of arguments.

 User Action:   A user  who is directly  calling the  String
 facility should check the argument list in the  call.  High
 level language programmers who have not issued  a call to a
 String facility routine directly should either discuss this
 error with the  local software support specialist or submit
 an SPR  with supporting documentation including  the system
 traceback listing.
