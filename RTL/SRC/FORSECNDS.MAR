	.TITLE	FOR$SECNDS - GET DELTA TIME
	.IDENT	/1-002/		; File: FORSECNDS.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;
;
;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Jonathan Taylor, 29-Jun-77 : Version 0
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 0 of FOR$SECNDS
;

; 0-5	- Add 86400 if negative for midnight.  TNH 7-June-78
; 0-6	- Remove FOR$FLAG_JACKET.  TNH 11-July-78
; 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
; 1-002	- Add "_" to the PSECT directive.  JBS 22-DEC-78

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	NONE

;
; EXTERNAL SYMBOLS:
;	NONE

;
; MACROS:
;	NONE

;
; PSECT DECLARATIONS:
;
	.PSECT	_FOR$CODE	PIC, SHR, LONG, EXE, NOWRT
					; FOR$ code section

;
; EQUATED SYMBOLS:
;
	arg	= 4			; offset of addr of users' arg

;
; OWN STORAGE:
;


	.SBTTL	FOR$SECNDS - get delta system time

;++
; FUNCTIONAL DESCRIPTION:
;
;	Routine FOR$SECNDS returns the system time in seconds as
;	a single precision floating point value minus the value
;	of its single real argument.

; CALLING SEQUENCE:
;
;	Time_difference.wf.v = FOR$SECNDS( time_origin.rf.r)
;
; INPUT PARAMETERS:
;
;	The time_origin parameter is single precision floating point
;	and called by reference.
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;
;	Integer Overflow can occur (but it shouldn't)
;	Floating Underflow and Overflow can occur.
;
;--

	.ENTRY	FOR$SECNDS,	^M<IV>	
	SUBL	#2*8, SP		; make an 8 word work space
					; for $NUMTIM
	MOVL	SP, R0			; R0 -> work space
	$NUMTIM_S	(R0)		; get system time values
	ADDL	#2*3, SP			; SP -> "hour of day"
	MULW3	(SP)+, #60, R0		; R0 = hours * 60
	ADDW	(SP)+, R0		; add in "minutes of hour"
	MOVZWL	R0, R0			; get more precision
	MULL	#60, R0			; so this doesn't overflow
	MOVZWL	(SP)+, R1		; convert "seconds of minute"
	ADDL	R1, R0			; and add to total time
	CVTLF	R0, R0			; convert to floating
	CVTWF	(SP), R1		; R1 = "hundredths of seconds"
	DIVF	#100, R1		; make a fraction
	ADDF	R1, R0			; add in hundredths
	SUBF	@arg(AP), R0		; and get delta time from
					; users' argument
	BGEQ	10$			; branch if not negative
	ADDF	#86400., R0		; must have gone by midnight
					; so add # of seconds in 1 day.
10$:	RET				; R0 = delta time

	.END
