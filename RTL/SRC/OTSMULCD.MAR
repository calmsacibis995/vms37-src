	.TITLE	OTS$MULCD - D COMPLEX*16 Multiplication Routine
	.IDENT	/1-001/			; File: OTSMULCD.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Language-independent support library
;
; ABSTRACT:
;
;	A routine to provide compiled code support for D COMPLEX*16
;	multiplication.
;
; ENVIRONMENT: User Mode, AST Reentrant
;
;--
; AUTHOR: Steven B. Lionel, CREATION DATE: 13-July-1979
;

	.SBTTL	Edit History
; 1-001 - Original.  SBL 13-July-1979

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL				; Prevent undeclared
						; symbols from being
						; automatically global.

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;

;
; PSECT DECLARATIONS:
;
	.PSECT _OTS$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	OTS$MULCD_R3 - D COMPLEX*16 Multiplication
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine calculates the D COMPLEX*16 product of
;	two D COMPLEX*16 values.
;
; CALLING SEQUENCE:
;
;	product.wdc.v = OTS$MULCD_R3 (multiplier.rdc.v, multiplicand.rdc.v)
;
; INPUT PARAMETERS:
;
;	multiplier		- D COMPLEX*16 passed by VALUE!
;				  Comprised of:
	a = 4			; Offset of real part of multiplier
	b = 12			; Offset of imaginary part of multiplier
;	multiplicand		- D COMPLEX*16 passed by VALUE!
;				  Comprised of:
	c = 20			; Offset of real part of multiplicand
	d = 28			; Offset of imaginary part of multiplicand
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	The D COMPLEX*16 product is returned in registers R0 through R3!
;	This is a violation of the VAX calling standard, but is allowed
;	because this is a compiled code support routine.
;
; SIDE EFFECTS:
;
;	Modifies registers R0-R3!
;	Possible error signals are:
;	SS$_ROPRAND	- Reserved operand
;	MTH$_FLOOVEMAT	- Floating overflow
;
;--

	.ENTRY	OTS$MULCD_R3, ^M<R4, R5>
	MTH$FLAG_JACKET			; Establish math error handler
;+
;	Complex multiplication is defined as:
;
;	real part = ac-bd
;	imaginary part = ad+bc
;-
	MULD3	a(AP), c(AP), R0	; R0-R1 = ac
	MULD3	b(AP), d(AP), R4	; R4-R5 = bd
	SUBD2	R4, R0			; R0-R1 = ac-bd
	MULD3	a(AP), d(AP), R2	; R2-R3 = ad
	MULD3	b(AP), c(AP), R4	; R4-R5 = bc
	ADDD2	R4, R2			; R2-R3 = ad+bc
	RET				; Return with product in R0-R3

	.END
