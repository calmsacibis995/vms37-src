MODULE COB$ERROR(
		IDENT = '1-011'		! file: COBERROR.B32 EDIT:LB1011
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
!++
! FACILITY:	COBOL SUPPORT
!
! ABSTRACT
!
!	Signals a variety of compiler-detected errors.
!
!
! ENVIRONMENT:	Vax-11 User Mode
!
! AUTHOR: MLJ , CREATION DATE: 02-MAY-1979
!
! MODIFIED BY:
!
! 1-001 - Original. MLJ  02-MAY-1979
! 1-002 - Added boilerplate and comments. RKR 15-AUGUST-1979
! 1-003 - Make this routine signal rather than output. RKR 21-Aug-1979
! 1-004 - Added error COB$_ROUNOTLIN.  RKR 13-SEPT-1979
! 1-005 - Fetch COBDEF.REQ from RTLIN instead of LIB$ RKR 18-SEPT-79
! 1-006 - Use an FAO COUNT of zero in SORT-case LIB$STOP call
!	  RKR 19-SEPT-79
! 1-007 - Make OWN data fall into code PSECT since it is read-only
!	   RKR 26-SEPT-79
! 1-008 - Make CASE statement use symbols in REQUIRE file, change
!	  error message to COB$_INVARG, cosmetic changes.
!	  RKR 18-OCT-79
! 1-009 - Remove reference to OTS$_FATINTERR.  Change BADCL case to 
!	  reference new error condition COB$_CALFAI.
!	  RKR 29-OCT-79
! 1-010 - Added error type COB$K_ERR_DBARG.  Also caused an entry to be
!	  added to own storage of FAC_ERR_CODES for COB$_EXPDBOVER as well
!	  as defining it as an external literal.  LB  1-MAY-81
! 1-011 - Changed GOTNO_ALT to be GOTO_ALT.  This had been in error in this
!	  file as well as in COBMSG.  LB  1-APR-82
!--

!<BLF/PAGE>

!
! SWITCHES
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES
!
!	NONE
!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE

COB$ERROR : NOVALUE ;
!
! INCLUDE FILES
!
REQUIRE 'RTLIN:RTLPSECT' ; 	! Macros for defining psects
REQUIRE 'RTLIN:COBDEF' ;		! Definition of internal error msgs
!
! MACROS
!
!	NONE
!
! EQUATED SYMBOLS
!
LITERAL

	NUM_MSGS = COB$K_ERR_MAX - COB$K_ERR_MIN + 1 ; ! No. of msgs




!
! PSECT DECLARATIONS:
!
DISPATCH_PSECTS (COB) ; 	! Make OWN data fall into _CODE psect

!
! EXTERNAL REFERENCES
!
!
EXTERNAL LITERAL
	COB$_GOTO_ALT,		! GO TO with no preceding ALTER
	COB$_RECACTPER,		! Recursive activation of PERFORM
	COB$_NESERRPER,		! Nesting error for PERFORM
	COB$_TIMOVELON,		! TIMES value overflows longword
	COB$_OCCDEPOVE,		! OCCURS DEPENDING value overflows longword
	COB$_SUBOVELON,		! Subscript overflows longword
	COB$_ERRDURSOR,		! Error during SORT
	COB$_UNEINSCON,	 	! INSPECT CONVERTING lengths unequal
	COB$_CALFAI,		! Failure CALLing routine (!AS)
	COB$_EXPDBOVER,		! Expression value in data base argument list overflows longword
	COB$_INVARG,		! Invalid argument
	COB$_FATINTERR ;	! Fatal internal error -- not enough args
!
! The following non-standard positioning of the OWN declaration is
! necessary to avoid warnings from the BLISS compiler.  The OWN variable
! FAC_ERR_CODES is preset to values defined via EXTERNAL LITERALs, and
! causes compiler to generate warnings if they are not declared prior
! to usage as INITIAL constants.
!
OWN

FAC_ERR_CODES: VECTOR [NUM_MSGS]
	INITIAL (

	COB$_GOTO_ALT  ,	! GO TO with no preceding ALTER
	COB$_RECACTPER ,	! Recursive activation of PERFORM
	COB$_NESERRPER ,	! Nesting error for PERFORM
	COB$_TIMOVELON ,	! TIMES value overflows longword
	COB$_OCCDEPOVE ,	! OCCURS DEPENDING value overflows longword
	COB$_SUBOVELON , 	! Subscript overflows longword
	COB$_ERRDURSOR ,	! Error during SORT
	COB$_UNEINSCON ,	! INSPECT CONVERTING lengths unequal
	COB$_CALFAI,		! Failure in CALLing routine (!AS)
	COB$_EXPDBOVER		! Expression value in data base argument list overflows longword
	);
DECLARE_PSECTS (COB) ;		! Declare psects for COB$ facility

GLOBAL ROUTINE COB$ERROR(WHICH,AUX_INFO): NOVALUE=

!
!++	FUNCTIONAL DESCRIPTION
!
!	Signals a variety of compiler-detected errors.  Most are
!	simply signaled based on error code supplied.  Two errors
!	have additional information provided and this is signaled
!	as well.
!
! FORMAL PARAMETERS:
!
!	WHICH.rl.v	Basic error number
!
!	AUX_INFO.rl.v	(Optional parameter) 
!			if .WHICH = COB$K_ERR_SORT
!				then AUX_INFO.rl.v = SORT error number.
!			if .WHICH = COB$K_ERR_BADCL
!				then AUX_INFO.ra.v = addr. of name
!						     descriptor not
!						     found.
!
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--
!
    BEGIN

    BUILTIN
	ACTUALCOUNT;


!<BLF/PAGE>

IF ACTUALCOUNT() LSS 1 THEN SIGNAL_STOP (COB$_FATINTERR)
    ELSE
	BEGIN
	!
	! Case on the error type
	!
	CASE .WHICH FROM COB$K_ERR_MIN TO COB$K_ERR_MAX OF 
	    SET

	[COB$K_ERR_ALTER,
	 COB$K_ERR_PERFR,
	 COB$K_ERR_PERFN,
	 COB$K_ERR_PERFT,
	 COB$K_ERR_SUBSD,
	 COB$K_ERR_SUBSC,
	 COB$K_ERR_INSPE,
	 COB$K_ERR_DBARG]:
	    !
	    ! General case
	    !
	    BEGIN
		SIGNAL_STOP (.FAC_ERR_CODES[.WHICH]) ;
	    END;


	[COB$K_ERR_SORT]:
	    BEGIN
	    !
	    ! SORT error case
	    !
		SIGNAL_STOP (.FAC_ERR_CODES[.WHICH], 0, .AUX_INFO) ;
	    END;

	[COB$K_ERR_BADCL]:
	    BEGIN
	    !
	    ! Bad CALL case
	    !
		SIGNAL_STOP (.FAC_ERR_CODES[.WHICH], 1, .AUX_INFO) ;
	    END;



	[INRANGE, OUTRANGE]:
	    BEGIN
	    !
	    ! Invalid value for .WHICH (internal error)
	    !
		SIGNAL_STOP (COB$_INVARG) ;
	    END;

    TES;
  END;
END; ! of routine COB$ERROR
END ELUDOM
