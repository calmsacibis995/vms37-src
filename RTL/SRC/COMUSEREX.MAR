	.TITLE	COM$USEREX	; F4P COMPATIBILITY - USER EXIT PROCEDURE SPECIFICATION
	.IDENT	/1-004/		; File: COMUSEREX.MAR  Edit: SBL1004

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: FORTRAN COMPATIBILITY LIBRARY
;++
; ABSTRACT:
;
;	USEREX allows specification of a user procedure to be called at
;	image exit
;
; ENVIRONMENT:
;	User access mode, AST re-entrant
;
;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Peter Yuo, 7-Sep-77: Version 0
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 01 of USEREX
;

; 0-3	- Push address.  TNH 19-Dec-77
; 0-5	- Change name to COMUSEREX.MAR.  JMT 5-Jan-78
; 0-6	- Rewrote entire routine so it will work.  JMT 29-Jan-78
; 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
; 1-002	- Add "_" to the PSECT directive.  JBS 22-DEC-78
; 1-003 - Explicitly declare externals.  SBL 17-May-1979
; 1-004 - Use general mode addressing.  SBL 30-Nov-1981

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
;

	.DSABL	GBL
	.EXTRN	FOR$$GET_VM
	.EXTRN	FOR$$SIG_FATINT

;
; MACROS:
;

;
; PSECT DECLARATIONS:
;
	.PSECT	_F4PCOMPAT$CODE	PIC,USR,CON,REL,LCL,SHR,EXE,RD,NOWRT

;
; EQUATED SYMBOLS:
;
	proc_entry_pt	= 4		; procedure_entry_point.rla.r

;
; OWN STORAGE:
;

	.SBTTL	USEREX - Main Entry Point

;++
; FUNCTIONAL DESCRIPTION:
;
;	1) Call FOR$GET_VM to get the address of a termination control
;	   block of length 5 longwords (20 bytes) from virtual memory.
;	2) Insert the address of user specified termination procedure
;	   into second longword of the termination control block and the
;	   number of termination arguments (1) into low byte of its
;	   third longword.  Point the fourth word at the fifth word.
;	3) Call $DCLTRM to declare termination handler.
;
; CALLING SEQUENCE:
;
;	CALL USEREX (procedure_entry_point.rla.r)
;
; INPUT PARAMETERS:
;
;	procedure_entry_point.rla.r
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	SIGNAL_STOPs insufficient virtual memory,
;	and fatal internal error if can't establish exit handler.
;
;--



	.ENTRY	USEREX, ^M<>

;
; Call FOR$$GET_VM
;

	PUSHL	#20			; get 20 bytes
	CALLS	#1, G^FOR$$GET_VM	; from virtual memory
	MOVL	R0, R1			; R0=R1 -> allocated memory

;
; Insert address of user specified procedure and number of termination
; argument (=1) into TCB
;

	TSTL	(R1)+			; skip over first entry
	MOVL	proc_entry_pt(AP), (R1)+; insert address of users exit
					; handler
	MOVL	#1, (R1)+		; which will be called with one argument
	MOVAL	4(R1), (R1)		; namely, the address of a word con-
					; taining reason for termination
;
; Call DCLEXH to declare termination handler
;

	$DCLEXH_S	(R0)		; R0 = return code
	BLBS	R0, 10$			; branch if success
	CALLS	#0, G^FOR$$SIG_FATINT	; signal, never to return

10$:	RET				; R0 = completion status

	.END
