	.TITLE	FOR$LEX - Lexical comparison functions
	.IDENT	/1-001/			; File: FORLEX.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: FORTRAN language support library
;
; ABSTRACT:
;
;	This module contains routines to perform lexical comparison
;	of character strings passed by descriptor.  They are primarily
;	for conformance with FORTRAN-77, but are useable from any
;	language.  Note that most languages have these functions
;	built-in.
;
; ENVIRONMENT: User Mode, AST Reentrant
;
;--
; AUTHOR: Steven B. Lionel, CREATION DATE: 30-Jan-79
;
; MODIFIED BY:
;
; EDIT HISTORY:
; 1-001	- Original.  SBL 30-Jan-79

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL				; Prevent undeclared
						; symbols from being
						; automatically global.

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;
	string1 = 4		; First string argument
	string2 = 8		; Second string argument
;
; OWN STORAGE:
;

;
; PSECT DECLARATIONS:
;
	.PSECT _FOR$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	FOR$LEX - Lexical comparison functions
;++
; FUNCTIONAL DESCRIPTION:
;
;	The four functions in this module compare two character
;	strings according to the ASCII collating sequence.  
;
;	Most VAX-11 high level languages already implement these
;	functions in-line, but ANSI FORTRAN-77 requires the 
;	FORTRAN functions LLE, LGT, LGE and LLT to be available.
;
;	In normal cases, FORTRAN IV-PLUS will generate the necessary
;	instructions in-line, but since a programmer can force an
;	external reference to be generated, these routines are 
;	necessary.
;
;	Each routine takes two arguments, the addresses of string
;	descriptors.  The strings are compared, blank padding where
;	necessary, and a TRUE or FALSE value is returned according
;	to whether the appropriate condition is satisfied or not.
;
;	TRUE is a longword of all 1 bits, FALSE is a longword of zero.
;
; CALLING SEQUENCE:
;
;	condition.wlu.v = FOR$LLT (string1.rx.dx, string2.rx.dx)
;		TRUE if string1 < string2, FALSE otherwise
;
;	condition.wlu.v = FOR$LLE (string1.rx.dx, string2.rx.dx)
;		TRUE if string1 <= string2, FALSE otherwise
;
;	condition.wlu.v = FOR$LGE (string1.rx.dx, string2.rx.dx)
;		TRUE if string1 >= string2, FALSE otherwise
;
;	condition.wlu.v = FOR$LGT (string1.rx.dx, string2.rx.dx)
;		TRUE if string1 > string2, FALSE otherwise
;
; INPUT PARAMETERS:
;
;	string1 - Input string passed by descriptor.  Only fields
;		  in descriptor looked at are DSC$W_LENGTH and
;		  DSC$A_POINTER.
;
;	string2 - Same as string1.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	TRUE (-1) if condition is satisfied,
;	FALSE (0) if condition is not satisfied.
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	FOR$LLT, ^M<R2, R3>	; Lexical less than
	BSBB	COMPARE			; Compare the strings
	BLSSU	TRUE			; TRUE if less than
	BRB	FALSE			; Otherwise FALSE

	.ENTRY	FOR$LLE, ^M<R2, R3>	; Lexical less than or equal
	BSBB	COMPARE			; Compare the strings
	BLEQU	TRUE			; TRUE if less than or equal
	BRB	FALSE			; Otherwise FALSE

	.ENTRY	FOR$LGE, ^M<R2, R3>	; Lexical greater than or equal
	BSBB	COMPARE			; Compare the strings
	BGEQU	TRUE			; TRUE if greater than or equal
	BRB	FALSE			; Otherwise FALSE

	.ENTRY	FOR$LGT, ^M<R2, R3>	; Lexical greater than
	BSBB	COMPARE			; Compare the strings
	BGTRU	TRUE			; TRUE if greater than or equal
	BRB	FALSE			; Otherwise FALSE


	.SBTTL	Local functions for lexical comparisons

;++
;	COMPARE
;
;	COMPARE loads the two string descriptors into R0-R3,
;	does a compare on the strings and returns to the local
;	caller.  Since the condition codes are preserved, the
;	local caller may do a conditional branch for whatever
;	condition is appropriate.
;--

COMPARE:
	MOVQ	@string1(AP), R0	; Get first descriptor
	MOVQ	@string2(AP), R2	; Get second descriptor
	CMPC5	R0, (R1), #^A/ /, R2, (R3)	; Compare strings
	RSB				; Return to local caller


TRUE:
	MNEGL	#1, R0			; Return TRUE
	RET				; Return

FALSE:
	CLRL	R0			; Return FALSE
	RET				; Return



	.END
