MODULE BAS$STRING (				! Duplicate a character in a string
		IDENT = '1-002'			! File: BASSTRING.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: String support library
!
! ABSTRACT:
!
!	This routine fills a string with an input number (defaults to
!	the string's current length) of an input character (defaults to
!	space).
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR: R. Will,  CREATION DATE: 13-Mar-79
!
! MODIFIED BY:
!
! 	R. Will, 13-Mar-79: VERSION 01
! 01	- original
! 1-002	- Use STR$K_FILL_CHAR.  JBS 15-APR-1979
! 1-003 CALL STR$CUPL_CHAR  DELETE WHEN COMPILER CALLS STR$>  RW  7_nov-79
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$STRING : NOVALUE;			! Fill a string with a character

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Use to declare PSECTs


!
! MACROS: NONE
!
!
! EQUATED SYMBOLS: NONE
!
!
! PSECT DECLARATIONS
!
DECLARE_PSECTS (BAS);
!
! OWN STORAGE: NONE
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    STR$DUPL_CHAR;


GLOBAL ROUTINE BAS$STRING (DEST_DESC, 		! Pointer to dest str desc
	LENGTH, 				! Number of characters
	INPUT_CHAR)				! Character to duplicate
    : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!	This routine writes LENGTH characters of CHAR into the string pointer
!	to by DEST_DESC.  If the destination is a fixed length string, and
!	LENGTH is greater than the length of the string, only as many CHARs as
!	will fit are copied.  If destination is fixed length and LENGTH is
!	less than the destination string length then LENGTH CHARs are copied
!	and the destination is padded with blanks.  If the destination is
!	a dynamic string, after execution of this routine the destination will
!	have a length of LENGTH.
!
! FORMAL PARAMETERS:
!
!	DEST_DESC.wt.dx		pointer to destination string descriptor
!	LENGTH.rl.v		value of number of characters to duplicate
!	INPUT_CHAR.rb.v		value of ASCII character to duplicate
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	CHAR : BYTE;

    BUILTIN
	ACTUALCOUNT;

    MAP
	DEST_DESC : REF BLOCK [8,BYTE];

    IF ACTUALCOUNT () EQLU 3 THEN CHAR = .INPUT_CHAR ELSE CHAR = ' ';

    STR$DUPL_CHAR (DEST_DESC [0,0,0,0], LENGTH, CHAR);
    END;					!End of bas$STRING

END						!End of module

ELUDOM
