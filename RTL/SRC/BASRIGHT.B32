MODULE BAS$RIGHT (				! Extract the substring of the BASIC RIGHT
		IDENT = '1-006'			! File: BASRIGHT.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: String support library
!
! ABSTRACT:
!
!	This module extracts a substring according to the
!	BASIC-PLUS-2 syntax.  It finds the substring of a main string
!	starting at the character position specified by the input parameter
!	and continues through the last character of the string.  This
!	substring is copied to the destination string.
!
! ENVIRONMENT: User mode, AST level or not or mixed
!
! AUTHOR: R. Will, CREATION DATE: 19-Feb-79
!
! MODIFIED BY:
!
!  R. Will, 19-Feb-79: VERSION 01
! 01	- original
! 02	- change linkage and call to COPY routine. 15-mar-79
! 1-003	- Change string linkages to start with STR$.  JBS 04-JUN-1979
! 1-004	- Change call to STR$$COPY.  JBS 16-JUL-1979
! 1-005	- Define an aux variable to improve the code generated.
!	   JBS 11-OCT-1979
! 1-006 - CALL STRRIGHT, DELETE THIS MODULE WHEN COMPILER CALLS STR.  RW  1-Nov-79
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$RIGHT : NOVALUE;			! Find the RIGHT of a string

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Declare PSECTs code

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! PSECT DECLARATIONS
!
DECLARE_PSECTS (BAS);
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    STR$RIGHT;		! Routine to do the copy


GLOBAL ROUTINE BAS$RIGHT (			!
	DEST_DESC, 				! Pointer to destination descriptor
	SRC_DESC, 				! Pointer to source descriptor
	CHAR_POS				! First character to be included
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine extracts the characters starting at the
!	character position in the source string specified by the input
!	parameter and continuing through the last character of the source
!	string and copies that substring
!	to the destination string (by JSB to STR$$COPY_R_R8) according
!	to the syntax of the class of the destination string.
!	If the input character position is < 2 then the entire source
!	string is copied.  If the input character position is > the length
!	of the source string, then the destination string becomes a null
!	string.
!
! FORMAL PARAMETERS:
!
!	DEST_DESC.wt.dx		pointer to destination string descriptor
!	SRC_DESC.rt.dx		pointer to source string descriptor
!	CHAR_POS.rw.v		character position in src to start substring
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	DEST_DESC : REF BLOCK [8,BYTE];

    MAP
	SRC_DESC : REF BLOCK [8,BYTE];

    STR$RIGHT (DEST_DESC [0,0,0,0], SRC_DESC [0,0,0,0], CHAR_POS);
    RETURN;
    END;					!End of BAS$RIGHT

END						!End of module

ELUDOM
