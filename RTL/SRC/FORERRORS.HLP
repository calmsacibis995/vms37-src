2 FOR
! 2-003 SBL2003 Change text for RECIO_OPE, SEGRECFOR.  SBL 19-Aug-1981
! 2-002 SBL2002 Add errors for NAMELIST.  SBL 11-Nov-1980
! 2-001 SBL2001 Correct misspellings.  SBL 25-Sept-1980
VAX-11 FORTRAN error messages
3 ADJARRDIM
 adjustable array dimension error

 Explanation:  Upon entry to a subprogram, the evaluation of
 dimensioning information detected an array in which:
       o  an upper dimension bound was  less  than  a  lower
          dimension bound, or
       o  the dimensions implied an array which exceeds  the
          addressable memory.

 If execution continues, any attempt to  access  that  array
 will likely result in an access violation.

 User Action:  Check the values of the expressions  for  the
 bounds of the array where it is dimensioned.

3 ATTACCNON
 attempt to access non-existent record

 Explanation:  One of the following conditions occurred:
       o  An attempt was made to  READ,  FIND  or  DELETE  a
          non-existent  record  from a relative organization
          file using direct access.
       o  An attempt was made to access beyond  the  end  of
          the  file  with  a direct-access READ or FIND to a
          sequential organization file.
       o  An attempt was made to read a non-existent  record
          of  an  indexed  organization  file  with  a keyed
          access READ statement.

 User Action:   Verify  that  the  given  record  number  is
 correct.   Or,  correct  the  program to include an ERR= or
 IOSTAT=  specification  to  detect   and   respond   to   a
 non-existent record condition.

3 BACERR
 BACKSPACE error

 Explanation:  One of the following conditions occurred:
       o  The file was not a sequential organization file.
       o  The file was not opened for sequential access.  (A
          unit   opened   for   append  access  may  not  be
          backspaced until a REWIND  statement  is  executed
          for that unit.)
       o  RMS detected an error condition  during  execution
          of a BACKSPACE statement.

 User Action:  If a VAX-11 RMS error message accompanies the
 message,  use the VAX-11 RMS message to determine the cause
 of  the  error.   Insure  that  the   BACKSPACE   statement
 specifies a logical unit which is connected to a sequential
 organization file opened for sequential access.

3 CLOERR
 CLOSE error

 Explanation:  An error condition was detected by RMS during
 execution of a CLOSE statement.

 User  Action:   Take  corrective  action   based   on   the
 associated VAX-11 RMS message.

3 DELERR
 DELETE error

 Explanation:  One of the following conditions occurred:
       o  On a  direct  access  DELETE,  the  file  was  not
          relative organization.
       o  On a current  record  DELETE,  the  file  was  not
          relative  or indexed organization, or the file was
          opened for direct access.
       o  RMS detected an error condition  during  execution
          of a DELETE statement.

 User Action:  If  a  VAX-11  RMS  message  accompanies  the
 message,  use the VAX-11 RMS message to determine the cause
 of the error.  Otherwise, verify that the  file  opened  on
 the  logical  unit  specified  in  the  DELETE statement is
 relative or indexed organization and that it is not  opened
 for direct access.

3 DUPFILSPE
 duplicate file specifications

 Explanation:  Multiple attempts were made to  specify  file
 attributes without an intervening close operation by one of
 the following:
       o  A DEFINE FILE followed by DEFINE FILE.
       o  A DEFINE FILE followed by an OPEN statement.
       o  A CALL ASSIGN or CALL FDBSET followed by  an  OPEN
          statement.

 User Action:  Verify the logical unit numbers in the DEFINE
 FILE and/or OPEN statements.  If the same file is required,
 either delete the statement in  error  or  insert  a  CLOSE
 statement.

3 ENDDURREA
 end-of-file during read

 Explanation:  One of the following conditions occurred:
       o  An  RMS  end-of-file  condition  was   encountered
          during  execution of a READ statement that did not
          contain an END, ERR or IOSTAT specification.
       o  An  end-of-file  record  written  by  the  ENDFILE
          statement  was  encountered  during execution of a
          READ statement that did not contain an END, ERR or
          IOSTAT specification.
       o  An attempt was made to read past the  end  of  the
          internal  file  character  string  or array during
          execution of a READ statement that did not contain
          an END, ERR or IOSTAT specification.

 User Action:  Correct the program to include an END=,  ERR=
 or  IOSTAT=  specification  to  detect  and  respond  to an
 end-of-file condition.  Or, check the program that  created
 the  file  to  determine  that  all  expected  records were
 created.

3 ENDFILERR
 ENDFILE error

 Explanation:  One of the following conditions occurred:
       o  The file was not a  sequential  organization  file
          with variable length records.
       o  The file was not opened for sequential  or  append
          access.
       o  The unformatted file does  not  contain  segmented
          records.
       o  RMS detected  an  error  during  execution  of  an
          ENDFILE statement.

 User  Action:   Either  delete  the  ENDFILE  statement  or
 correct the OPEN statement for the file in question so that
 the organization is sequential and  that  the  records  are
 either variable formatted or segmented.

3 ERRDURREA
 error during read

 Explanation:   RMS  detected  an  error  condition   during
 execution of a READ statement.

 User  Action:   Take  corrective  action   based   on   the
 accompanying VAX-11 RMS error message.

3 ERRDURWRI
 error during write

 Explanation:   RMS  detected  an  error  condition   during
 execution of a WRITE statement.

 User  Action:   Take  corrective  action   based   on   the
 accompanying VAX-11 RMS error message.

3 FILNAMSPE
 file name specification error

 Explanation:  A file  name  specification  given  to  OPEN,
 INQUIRE or CALL ASSIGN was not acceptable to RMS.

 User Action:  Check the file name string displayed  in  the
 message  for  illegal  characters  and  correct  the source
 program.  If the file name string  was  referred  to  by  a
 variable  name,  check  that  the  variable  was  correctly
 initialized.  If the file name string is  a  logical  name,
 verify  that  the  logical  name translates to a valid file
 specification.

3 FILNOTFOU
 file not found

 Explanation:  A file with the specified name could  not  be
 found during an open operation.

 User Action:  Use the full file specification displayed  in
 the    message   to   determine   whether   the   resulting
 specification is as you intended it.  Verify  your  current
 default   disk   and  directory,  the  disk  and  directory
 containing the  required  file  and  current  logical  name
 assignments.

3 FINERR
 FIND error

 Explanation:   RMS  detected  an  error  condition   during
 execution of a FIND statement.

 User  Action:   Take  corrective  action   based   on   the
 accompanying VAX-11 RMS error message.

3 FORVARMIS
 format/variable-type mismatch

 Explanation:  An attempt was made either to read or write a
 real variable with an integer field descriptor (I or L), or
 to read or write an integer or logical variable with a real
 field  descriptor (D, E, F, or G).  If execution continued,
 the following actions occurred:

         Format         Action
         I,L            convert as if INTEGER*4
         D,E,F,G        convert as if REAL*4

 User Action:  Either change  the  variable  declaration  or
 modify the FORMAT statement to correct the specification.

3 INCFILORG
 inconsistent file organization

 Explanation:  One of the following conditions occurred:
       o  The  file  organization  specified  in   an   OPEN
          statement  did  not  match the organization of the
          existing file.
       o  The file organization of  the  existing  file  was
          inconsistent  with the specified access mode, that
          is, direct access was specified  with  an  indexed
          organization  file  or  keyed access was specified
          with a sequential or relative organization file.

 User Action:  Verify that the file referred to in the  OPEN
 statement   is   the   correct   organization,  change  the
 ORGANIZATION keyword specification in the OPEN statement to
 match  the  file  or  resolve the inconsistency between the
 file organization and the access type specified.

3 INCKEYCHG
 inconsistent key change or duplicate key

 Explanation:  A WRITE or REWRITE to an indexed organization
 file  caused  a key field to change or be duplicated.  This
 condition was not allowed by the attributes  of  the  file,
 established when the file was created.

 User Action:  Verify that the key being changed is the  one
 desired.   Or,  correct  the  program to include an ERR= or
 IOSTAT= specifier to detect and respond to a key change  or
 duplication condition.

3 INCOPECLO
 inconsistent OPEN/CLOSE parameters

 Explanation:  Specifications in an OPEN or CLOSE  statement
 were inconsistent.  Some of the invalid combinations are:
       o  READONLY with STATUS='NEW' or STATUS='SCRATCH'.
       o  ACCESS='APPEND'  with  READONLY,  STATUS='NEW'  or
          STATUS='SCRATCH'.
       o  DISPOSE='SAVE',         DISPOSE='PRINT'         or
          DISPOSE='SUBMIT' with STATUS='SCRATCH'.
       o  DISPOSE='DELETE' with READONLY.

 User Action:  Correct either the OPEN  or  CLOSE  statement
 for the file.

3 INCRECLEN
 inconsistent record length

 Explanation:  One of the following conditions occurred:
       o  An attempt was made  to  create  a  new  relative,
          indexed,  or direct access file without specifying
          a record length.
       o  An existing file was opened in  which  the  record
          length  did  not match the record size given in an
          OPEN or DEFINE FILE statement.

 User Action:  Locate the statement  in  your  program  that
 caused  the  error and check the record size specification.
 Remember that formatted records are specified in  units  of
 bytes  and  unformatted  records  are specified in units of
 longwords.

3 INCRECTYP
 inconsistent record type

 Explanation:  The RECORDTYPE value in an OPEN statement did
 not  match  the  record type attribute of the existing file
 which was opened.

 User Action:  Verify that the RECORDTYPE= specification  in
 the OPEN statement is correct.

3 INFFORLOO
 infinite format loop

 Explanation:  The format associated with an  I/O  statement
 that  included  an I/O list had no field descriptors to use
 in transferring those values.

 User Action:  Locate the statement  in  your  program  that
 caused  the  error and check the format associated with the
 I/O statement.  There must be  a  format  field  descriptor
 that transmits an element to or from the I/O list.

3 INPCONERR
 input conversion error

 Explanation:  During a formatted input operation an invalid
 character  was  detected  in  an  input field, or the input
 value overflowed  the  range  representable  in  the  input
 variable.  The value of the variable is set to zero.

 User Action:  Check that the format associated with the I/O
 statement  is  correct  and  verify the field width of each
 field specified against the data record being read.

3 INPRECTOO
 input record too long

 Explanation:  A record was read that exceeded the  explicit
 or  the  default RECORDSIZE specification specified at OPEN
 (or default OPEN).

 User Action:  Locate the READ or ACCEPT statement  in  your
 program that caused the error and check the associated OPEN
 statement.  Correct the record size  specification  in  the
 OPEN  statement,  if  necessary.   Remember that the record
 size specification is in units of bytes for formatted files
 and in units of longwords for unformatted files.

3 INPSTAREQ
 input statement requires too much data

 Explanation:  An unformatted READ  statement  attempted  to
 read more data than existed in the record being read.

 User Action:  Locate the READ  statement  in  your  program
 that  caused  the  error,  and check the number of elements
 specified.  Check that the data type  of  each  element  is
 properly  declared;  an omitted declaration results in four
 bytes of data input by default.

3 INSVIRMEM
 insufficient virtual memory

 Explanation:  The FORTRAN  Run-Time  Library  attempted  to
 exceed  its virtual page limit while dynamically allocating
 space.

 User Action:  Determine the current working  set  limit  by
 using  the  SHOW  WORKING_SET  command.  Then, increase the
 size of the working set limit and rerun your program.

3 INVARGFOR
 invalid argument to FORTRAN Run-Time Library

 Explanation:  One of the following conditions occurred:
       o  An invalid argument was given to a PDP-11  FORTRAN
          compatibility subroutine such as ERRSET.
       o  The  FORTRAN  compiler  passed  an  invalid  coded
          argument  to the Run-Time Library.  This can occur
          if the compiler is newer than the Run-Time Library
          in use.

 User Action:  Locate  the  call  to  the  library  in  your
 program.   If  the  procedure is a compatibility procedure,
 see the VAX-11 FORTRAN User's Guide.  Otherwise, verify the
 version of the compiler with the version of the library and
 recompile or relink your program, as necessary.

3 INVKEYSPE
 invalid key specification

 Explanation:  A key specification in an OPEN  statement  or
 in a keyed access READ statement was invalid.  For example,
 the key length may have been zero or greater than 255 bytes
 or  the  key  length  may  not  have  conformed  to the key
 specification of the existing file.

 User Action:  Verify that the key  specification  is  valid
 and that it matches the existing file, if any.

3 INVLOGUNI
 invalid logical unit number

 Explanation:  A logical unit number greater than 99 or less
 than  0  was  used  in  an I/O statement.  The logical unit
 number which was in error is displayed in the message.

 User Action:   Verify  that  the  variable  containing  the
 logical  unit  number  in  an  I/O  statement  has been set
 properly.

3 INVREFVAR
 invalid reference to variable "varname" in NAMELIST input

 Explanation:  An invalid variable was given as input  to  a
 NAMELIST READ statement.  The variable in error is shown as
 "varname" in  the  message  text.   One  of  the  following
 situations occurred:
       o  The variable is not a member of the NAMELIST group
          being processed.
       o  An  attempt  was  made  to  subscript  the  scalar
          variable.
       o  A   subscript   of   the   array   variable    was
          out-of-bounds.
       o  There were too many or too few subscripts for  the
          variable.
       o  An attempt was made to substring the non-character
          variable.
       o  A  substring  of   the   character   variable   is
          out-of-bounds.
       o  A subscript or substring of the variable contained
          a value which was not an integer constant.

 User Action:   Verify  that  you  are  giving  the  correct
 variable  name  and  that the variable has the correct data
 type  and  dimension;   then  give   a   correct   variable
 reference.

3 KEYVALERR
 keyword value error in OPEN statement

 Explanation:  An  OPEN  or  CLOSE  statement  keyword  that
 requires a value had an improper value.

 User Action:  Locate  the  OPEN  or  CLOSE  statement  that
 caused  the  error  and  change the value to one within the
 acceptable  limits.   See  the  VAX-11   FORTRAN   Language
 Reference Manual for the allowable values.

3 LISIO_SYN
 list-directed I/O syntax error

 Explanation:  The data in a list-directed input record  had
 an   invalid  format  or  the  type  of  the  constant  was
 incompatible with the corresponding variable.  The value of
 the variable was unchanged.

 User Action:  Locate the  READ  or  ACCEPT  statement  that
 caused  the  error.   Check  the  data in the record for an
 invalid format  by  printing  the  file  or  examining  the
 terminal  input.  Also, check the data type declarations of
 each variable in the I/O list.

3 MIXFILACC
 mixed file access modes

 Explanation:  One of the following conditions occurred:
       o  An attempt was made  to  use  both  formatted  and
          unformatted operations on the same unit.
       o  An attempt was made to use an invalid  combination
          of  access  modes  on  a  unit,  i.e.   direct and
          sequential.   The  only   valid   combination   is
          sequential   and  keyed  on  a  unit  opened  with
          ACCESS='KEYED'.
       o  An attempt was  made  to  execute  a  FORTRAN  I/O
          statement  on  a logical unit that was opened by a
          language other than FORTRAN.

 User Action:  Locate the I/O statement in your program that
 caused the error, and any explicit OPEN associated with the
 unit.  Verify that I/O to the unit is consistent  with  the
 attributes of previous I/O statements.

3 NO_CURREC
 no current record

 Explanation:   A  REWRITE  or  current  record  DELETE  was
 attempted when no current record was defined.

 User Action:  Correct the program so that a current  record
 is  defined when a REWRITE or DELETE is attempted.  See the
 VAX-11 FORTRAN User's Guide for information.

3 NO_SUCDEV
 no such device

 Explanation:  A file name specification included an invalid
 or   unknown   device  name  when  an  open  operation  was
 attempted.

 User Action:   Locate  the  explicit  OPEN  statement  that
 caused  the  error  or  the  I/O  statement that caused the
 implicit open.  The  message  displays  the  complete  file
 specification of the file.  If the specification contains a
 logical name, verify that the logical name was  assigned  a
 proper  equivalence  name.   Correct the OPEN statement, or
 assign a proper logical name, as required.

3 NOTFORSPE
 not a FORTRAN-specific error

 Explanation:  An error occurred in the user program  or  in
 the Run-Time Library that was not a FORTRAN-specific error.

 User  Action:   Take  corrective  action   based   on   the
 associated error.

3 OPEDEFREQ
 OPEN or DEFINE FILE required for keyed or direct access

 Explanation:  One of the following conditions occurred:
       o  A  direct  access  READ,  WRITE,  FIND  or  DELETE
          statement  was attempted for a file when no DEFINE
          FILE or OPEN statement  with  ACCESS='DIRECT'  was
          performed for that file.
       o  A keyed access READ statement was attempted for  a
          file  when  no  OPEN statement with ACCESS='KEYED'
          was performed for that file.

 User Action:  Locate the  I/O  statement  that  caused  the
 error and verify that the OPEN or DEFINE FILE statement for
 the specified logical unit specifies the correct access.

3 OPEFAI
 open failure

 Explanation:  An error was detected by RMS while attempting
 to  open a file in an OPEN, INQUIRE or other I/O statement.
 This message is used when the error condition is not one of
 the   more  common  conditions  for  which  specific  error
 messages are provided.

 User Action:  Use the  associated  VAX-11  RMS  message  to
 determine the reason for the error and correct it.

3 OUTCONERR
 output conversion error

 Explanation:  During a formatted output operation the value
 of a particular number could not be output in the specified
 field length without loss of significant digits.  The field
 is filled with asterisks.

 User Action:  Check the program  output  to  determine  the
 field  that  could not be properly converted for output and
 check the field widths in  the  associated  format  or  the
 value  of the I/O list expression to determine which was in
 error.

3 OUTSTAOVE
 output statement overflows record

 Explanation:  An output  statement  attempted  to  transfer
 more data than would fit in the maximum record size.

 User Action:  Either reduce the width of the fields in  the
 associated  format, break the record in two with the format
 specification, or change the record size  specification  in
 the OPEN statement or internal file variable declaration.

3 RECIO_OPE
 recursive I/O operation

 Explanation:  While  processing  an  I/O  statement  for  a
 logical  unit,  another  I/O  operation on the same logical
 unit was attempted.  One of the  following  conditions  may
 have occurred:
       o  A function subprogram that  performs  I/O  to  the
          same  logical  unit is referenced in an expression
          in an I/O list or variable format expression.
       o  An I/O statement was executed at AST level for the
          same logical unit.
       o  An exception handler (or a  procedure  it  called)
          executed  an I/O statement in response to a SIGNAL
          from an I/O statement for the same logical unit.

 User Action:  Locate the statement  in  your  program  that
 caused  the recursive I/O operation and correct the program
 logic or specify a different logical unit number for one of
 the operations.

3 RECNUMOUT
 record number outside range

 Explanation:   A  direct  access  READ,  WRITE,   or   FIND
 statement  specified  a  record  number  outside  the range
 specified when the file was created.

 User  Action:   Check  that  the  direct  access  operation
 specified  the  correct  record  number  and check that the
 logical unit number specified in the I/O  statement  agrees
 with the logical unit number in the OPEN statement.

3 REWERR
 REWIND error

 Explanation:  One of the following conditions occurred:
       o  The file was not a sequential organization file.
       o  The file was not opened for sequential  or  append
          access.
       o  RMS detected an error condition  during  execution
          of a REWIND statement.

 User Action:  Verify that the file specified is  sequential
 organization  and  that  it  is open for sequential access.
 Or, take corrective action based on the VAX-11 RMS message.

3 REWRITERR
 REWRITE error

 Explanation:   RMS  detected  an  error  condition   during
 execution of a REWRITE statement.

 User  Action:   Take  corrective  action   based   on   the
 associated VAX-11 RMS message.

3 SEGRECFOR
 segmented record format error

 Explanation:  An invalid segmented record control data word
 was  detected  in an unformatted sequential file.  The file
 was  probably created with RECORDTYPE='VARIABLE' in effect, 
 or was written by a language other than FORTRAN.

 User Action:  Locate the  I/O  statement  that  caused  the
 error  and  check  that the correct logical unit number was
 specified.   If  no  RECORDTYPE   is   specified   for   an
 unformatted  sequential  file with variable length records,
 segmented records are assumed.

3 SPERECLOC
 specified record locked

 Explanation:  A READ or direct access WRITE, FIND or DELETE
 was attempted on a record which was locked by another user.

 User  Action:   Correct  the  program  logic  so  that  I/O
 attempted on locked records can be retried.  This condition
 can be detected  by  using  the  ERR=  and/or  IOSTAT=  I/O
 statement  keywords.   See  the VAX-11 FORTRAN User's Guide
 for more information.

3 SYNERRFOR
 syntax error in format

 Explanation:  A syntax  error  was  encountered  while  the
 Run-Time Library was processing a format stored in an array
 or character variable.

 User Action:  Locate the I/O statement in your  program  in
 which   the   format   specification  was  an  variable  or
 expression instead  of  a  statement  number  or  character
 constant.   Check  that the resulting expression is a valid
 format specification, including left and right parentheses.

3 SYNERRNAM
 syntax error in NAMELIST input at or near "text"

 Explanation:  The  syntax  of  input  to  a  NAMELIST  READ
 statement  was  incorrect.   The  part  of the record being
 processed when the error was detected is shown as "text" in
 the message text.

 User Action:  Respecify the input data to  conform  to  the
 correct  syntax.  See the VAX-11 FORTRAN Language Reference
 Manual for a description of proper NAMELIST input syntax.

3 TOOMANREC
 too many records in I/O statement

 Explanation:  One of the following conditions occurred:
       o  An attempt was made to read or write more than one
          record with an ENCODE or DECODE statement.
       o  An attempt was made to  write  more  records  than
          existed  in an internal file character variable or
          array.

 User Action:  Correct the program logic or format  so  that
 the correct number of records are written.

3 TOOMANVAL
 too many values for NAMELIST variable "varname"

 Explanation:  An attempt was made to assign too many values
 to  a  variable during a NAMELIST READ statement.  The name
 of the variable being assigned to is shown as "varname"  in
 the message text.

 User Action:  Verify that you are  specifying  the  correct
 variable  and  that  the dimension of the array is correct.
 If the variable is a scalar, note that  consecutive  commas
 in NAMELIST input indicate a skipped value, therefore using
 commas before the value when assigning to a  scalar  is  an
 error.   Respecify  the  assignment  and  give  the correct
 number of values.

3 UNIALROPE
 unit already open

 Explanation:  A DEFINE FILE statement specified  a  logical
 unit that was already opened.

 User Action:  Verify that the logical unit  number  in  the
 DEFINE FILE statement is correct.  If it is correct, insert
 a CLOSE statement before the  DEFINE  FILE  or  remove  the
 DEFINE FILE.

3 UNLERR
 UNLOCK error

 Explanation:   RMS  detected  an  error   condition   during
 execution of an UNLOCK statement.

 User  Action:   Take  corrective  action   based   on   the
 associated VAX-11 RMS message.

3 VFEVALERR
 variable format expression value error

 Explanation:  The value of a variable format expression was
 not  within the range acceptable for its intended use;  for
 example, a field width was less than or equal to  zero.   A
 value  of 1 was assumed except for a P edit descriptor, for
 which a value of
 0 was assumed.

 User Action:  Check the value of the expression and correct
 the program.

3 WRIREAFIL
 write to READONLY file

 Explanation:  A write operation was  attempted  to  a  file
 that was declared READONLY by the currently active OPEN.

 User Action:  Locate the statement that  caused  the  error
 and verify the logical unit number.  If correct, verify the
 parameters on the OPEN statement.
