%TITLE 'LIB$ATTACH - Attach terminal to command subprocess'
MODULE LIB$ATTACH (				!
		IDENT = '1-001'			! File: LIBATTACH.B32 Edit: SBL1001
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	General Utility Library
!
! ABSTRACT:
!
!	This module contains LIB$ATTACH, a procedure to attach the
!	user's terminal to a command subprocess
!
! ENVIRONMENT:	User mode - AST reentrant
!
! AUTHOR: Steven B. Lionel, CREATION DATE: 15-Dec-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  SBL 15-Dec-1981
!--


%SBTTL 'Declarations'
!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$ATTACH;					! Sample routine

!
! INCLUDE FILES:
!

LIBRARY 'RTLSTARLE';				! System symbols, typically from SYS$LIBRARY:STARLET.L32

REQUIRE 'RTLIN:RTLPSECT';			! Define PSECT declarations macros

REQUIRE 'RTLML:CLIMSG';				! CLI$_ messages

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! PSECTS:
!

DECLARE_PSECTS (LIB);				! Declare PSECTs for LIB$ facility

!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    SYS$CLI;					! Request CLI callback

EXTERNAL LITERAL 				! Condition value symbols
    LIB$_INVARG,				! Invalid argument
    LIB$_NOCLI,					! No CLI present
    LIB$_ATTREQREF,				! Attach request refused
    LIB$_UNECLIERR;				! Unexpected CLI error


%SBTTL 'LIB$ATTACH - Attach terminal to command subprocess'
GLOBAL ROUTINE LIB$ATTACH (
    PROCESS_ID: REF VECTOR [, LONG]	! PID of process to attach to
    ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	LIB$ATTACH requests the calling process's Command Language Interpreter 
!	(CLI) to detach the terminal of the calling process and to reattach it 
!	to a different process.  The calling process is put into hibernation.  
!	It provides the same function as the DCL ATTACH command.
!
! CALLING SEQUENCE:
!
!	status.wlc.v = LIB$ATTACH (process_id.rlu.r)
!
! FORMAL PARAMETERS:
!
!	PROCESS_ID
!		The process identification of the process to be attached to, 
!		passed by reference. The specified process must be part of the 
!		caller's job.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS:
!
!	SS$_NORMAL	Normal successful completion
!	SS$_NONEXPR	Nonexistent process
!	LIB$_INVARG	Invalid argument
!	LIB$_NOCLI	No CLI to perform function
!	LIB$_ATTREQREF	Attach request refused
!	LIB$_UNECLIERR	Unexpected CLI error
!
! SIDE EFFECTS:
!
!	The caller's process is put into hibernation and the user's
!	terminal is attached to the designated subprocess.  When the
!	user reattaches to the calling process, this procedure will return.
!
!--

    BEGIN

    BUILTIN
	NULLPARAMETER;				

    LOCAL
	CLI_DESC: BLOCK [CLI$K_SRVDESC, BYTE],	! CLI service descriptor
	RETURN_STATUS: BLOCK [4, BYTE];

    !+
    ! Check for a valid argument.
    !-

    IF NULLPARAMETER (1)
    THEN
	RETURN LIB$_INVARG;			! Invalid argument

    !+
    ! Fill in request descriptor
    !-

    CH$FILL (0, CLI$K_SRVDESC, CLI_DESC);
    CLI_DESC [CLI$B_RQTYPE] = CLI$K_CLISERV;
    CLI_DESC [CLI$W_SERVCOD] = CLI$K_ATTACH;
    CLI_DESC [CLI$L_PID] = .PROCESS_ID [0];

    !+
    ! Call CLI with request.
    !-

    RETURN_STATUS = SYS$CLI (CLI_DESC);

    !+
    ! Adjust error return status, if any.
    !-

    IF NOT .RETURN_STATUS AND (.RETURN_STATUS [STS$V_FAC_NO] EQL CLI$_FACILITY)
    THEN
	RETURN_STATUS = (
	    SELECTONE .RETURN_STATUS OF
		SET
		[CLI$_INVREQTYP] :	LIB$_NOCLI;
		[CLI$_REFUSED] :	LIB$_ATTREQREF;
		[OTHERWISE] :		LIB$_UNECLIERR;
		TES);

    RETURN .RETURN_STATUS;

    END;					! End of routine LIB$ATTACH
!<BLF/PAGE>

END						! End of module LIB$ATTACH

ELUDOM
