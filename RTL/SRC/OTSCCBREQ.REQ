!+
! This file, OTSCCBREQ.REQ, defines the interface to OTS$PUSH_CCB  Edit: SBL1006
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
! Revision History:
!
! 1-001	- Original.  JBS 09-JAN-1979
! 1-002 - Change name to OTSCCBREQ.REQ so as not to conflict at system
!	  build time with OTSCCB.B32.  SBL 10-May-1979
! 1-003	- Add the definition of the structure for OTS$$AA_LUB_TAB.
!	   JBS 28-JUN-1979
! 1-004	- Add the definition of the field for OTS$$V_LUN_OWNR.
!	   JBS 16-AUG-1979
! 1-005	- Remove PRINT statement, for the new BLISS compiler.
!	   JBS 02-OCT-1979
! 1-006 - Add new structure OTS$$LUN_OWNR_ST used for OTS$$V_LUN_OWNR.  This
!	  helps BLISS generate smaller code for references to this structure.
!--

!+
! Define the return codes from OTS$PUSH_CCB.
!-

LITERAL
    OTS$K_PUSH_MIN = 1,				! Smallest valid value
    OTS$K_PUSH_OK = 1,				! CCB loaded, I/O not active
    OTS$K_PUSH_ACT = 2,				! CCB loaded, I/O active on this LUN
    OTS$K_PUSH_FAIL = 3,			! CCB not loaded, out of virtual storage
    OTS$K_PUSH_MAX = 3;				! Largest valid value

!+
! The following structure is used for addressing OTS$$AA_LUB_TAB.
! It is similar to VECTOR, but offsets the index so that certain
! negative logical unit numbers can be used, and each element is a
! quadword so as to act as a queue header.
!-

STRUCTURE
    OTS$$LUB_TAB_ST [I, SIDE; N, LB, UNIT = 4, EXT = 0] =
	[N*UNIT*2]
	(OTS$$LUB_TAB_ST + ((SIDE + ((I - LB)*2))*UNIT))<0, 8*UNIT, EXT>;

!+
! The following structure is similar to BLOCKVECTOR, but allows a low and high
! bound.
!-

STRUCTURE
    OTS$$LUN_OWNR_ST [I, O, P, S, E; L, H, BS, UNIT=1] =
	[((H - L) + 1) * BS * UNIT]
	(OTS$$LUN_OWNR_ST + (0 - L) + ((O + I) * BS * UNIT))<P, S, E>;

!+
! The following field is used to refer to OTS$$V_LUN_OWNR, which has a bit
! for each LUB, each block containing a bit for each language.
!-
FIELD
    OTS$$V_OWNR_FLD =
	SET
	OTS$$V_OWNR_BAS = [0, LUB$K_LANG_BAS, 1, 0],	! BASIC
	OTS$$V_OWNR_FOR = [0, LUB$K_LANG_FOR, 1, 0],	! FORTRAN
	OTS$$V_OWNR     = [0, LUB$K_LANG_MIN, (((LUB$K_LANG_MAX-LUB$K_LANG_MIN+%BPUNIT)/%BPUNIT)*%BPUNIT), 0]
	TES;
!+
! The following masks are used to test OTS$$V_OWNR to be sure that only
! one bit is set.
!-
LITERAL
    OTS$$M_OWNR_BAS = 1 ^ LUB$K_LANG_BAS,
    OTS$$M_OWNR_FOR = 1 ^ LUB$K_LANG_FOR;

!	End of file OTSCCBREQ.REQ
