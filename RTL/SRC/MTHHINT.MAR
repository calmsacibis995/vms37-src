	.TITLE	MTH$HINT - FLOATING TRUNCATION
	.IDENT	/1-005/		; File: MTHHINT.MAR	EDIT: JAW1005

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routine MTH$HINT: 
;	Return truncated H floating argument.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 18-Jan-79: Version 1
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of MTH$HINT
;
; 1-001 - Original.  SBL 18-Jan-79
; 1-002	- Add a JSB entry point.  JBS 16-AUG-1979
; 1-003 - Change JSB entry to _R8 to reflect code to disable IV.
;	  SBL 26-Sept-1979
; 1-004 - Changed RET in JSB routine to RSB.  11-FEB-81
; 1-005 - Mask all bits except IV when restoring PSW.  JAW 14-Jul-1981
;

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	NONE
;

;
; EXTERNAL SYMBOLS:
;	NONE
;

;
; MACROS:
;
	$PSLDEF				; PSL macros
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	MTH$HINT	H to H truncation

;++
; FUNCTIONAL DESCRIPTION:
;
;	Returns the argument with all zeroes to the right of the decimal
;	point.
;
;	Because the result can not be expressed in 64 bits, it is
;	returned as the first argument with the input parameter
;	displaced to the second argument, in accordance with
;	the system standard.
;
; CALLING SEQUENCE:
;
;	CALL MTH$HINT (truncation.wh.r, arg.rh.r)
;
; INPUT PARAMETERS:
;
;	The input argument is a H floating-point value
;	and is call-by-reference.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	The output argument is an H floating-point value 
;	and is returned by reference.
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	Reserved Operand exception can occur.
;
;--
	.ENTRY	MTH$HINT,	^M<>
	EMODH	@8(AP), #0, #1, @4(AP), @4(AP)
					; first arg gets fraction
	SUBH3	@4(AP), @8(AP), @4(AP)	; @4(AP) = integer_part(arg)
	RET

	.SBTTL	MTH$HINT_R8	JSB entry point

;++
; FUNCTIONAL DESCRIPTION:
;
;	Returns the argument with all zeroes to the right of the decimal
;	point.
;
; CALLING SEQUENCE:
;
;	truncation.wh.v = JSB MTH$HINT_R8 (arg.rh.v)
;
; INPUT PARAMETERS:
;
;	The input argument is a H floating-point value
;	and is call-by-value.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	The output argument is an H floating-point value 
;	and is returned by value in registers R0-R3.
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	Reserved Operand exception can occur.
;
;--
MTH$HINT_R8::				; Argument in R0-R3
	MOVPSL	R8			; Save PSL
	BICPSW	#PSL$M_IV		; Clear IV
	EMODH	R0, #0, #1, R4, R4	; R4-R7 gets fraction
	SUBH3	R4, R0, R0		; R0-R3 = integer_part(arg)
	BICW	#^C<PSL$M_IV>, R8	; Clear all but IV
	BISPSW	R8			; Restore IV to previous state
	RSB

	.END
