!+
! This file, BPAFUNDEF.REQ, contains all the symbolic names for RSTS monitor
! calls, for use by the Basic+ AME.
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
! Author:	John Harper, 22-Feb-79
!
! Modified by:
!	Jeremy Barker - add symbolic names for minimum values in ranges
! Edit	Author		Date		Reason
! ----	------		----		------
! 201	John Harper	03-May-79	Add codes for message send/receive
! 219	Jeremy Barker	25-May-79	Add codes for .SPEC monitor call
! 221	Jim Ibbett	31-May-79	Add codes for RN1FQ, RN2FQ & set def UUO
! 225	Jeremy Barker	05-Jun-79	correct codes for .SPEC
! 1-226	John Sauter	02-OCT-1979	Change name to BPAFUNDEF.REQ and remove
!					defense against redundent requires.
! 1-227 Steve Lionel	11-Mar-1980	Add copyright notice.
!--

!
! Top level EMT function code dispatch
!
LITERAL
    fun$k_minemt =	0,		! Minimum EMT code value	!JB001

    fun$k_calfip =	0,		! File Processor (extended)
    fun$k_read =	2,		! Read from channel
    fun$k_write =	4,		! Write to channel
    fun$k_core =	6,		! Change memory allocation
    fun$k_sleep =	8,		! Sleep job
    fun$k_peek =	10,		! Peek at monitor memory
    fun$k_spec =	12,		! Device-dependent special function
    fun$k_ttape =	14,		! Enter tape mode
    fun$k_ttech =	16,		! Enter echo mode
    fun$k_ttnch =	18,		! Disable echo mode
    fun$k_ttddt =	20,		! Enter DDT submode
    fun$k_ttrst =	22,		! Cancel CTRL/O
    fun$k_time =	24,		! Get time information
    fun$k_postn =	26,		! Get device horizontal position
    fun$k_date =	28,		! Get current date
    fun$k_set =		30,		! Get keyword bits
    fun$k_stat =	32,		! Get statistics for job
    fun$k_run =		34,		! Run new program
    fun$k_name =	36,		! Set new program name
    fun$k_exit =	38,		! Exit to default run-time system
    fun$k_rts =		40,		! Switch to new run-time system
    fun$k_erlog =	42,		! Log an error
    fun$k_logs =	44,		! Check for logical devices
    fun$k_clear =	46,		! Clear keyword bits
    fun$k_mesag =	48,		! Message send/receive
    fun$k_ccl =		50,		! Check for CCL command
    fun$k_fss =		52,		! Scan file-name string
    fun$k_uuo =		54,		! Execute SYS call
    fun$k_chain =	56,		! Chain to job under same RTS
    fun$k_plas =	58,		! Memory management directives

    fun$k_maxemt =	58;		! Maximum EMT code value

!
! File Processor calls
!
!	Placed in byte 3 of FIRQB for CALFIP directive
!

LITERAL
    fun$k_minfip =	0,		! Minimum FIP function code	!JB001

    fun$k_close =	0,		! Close channel
    fun$k_open =	2,		! Open channel (file already exists)
    fun$k_create =	4,		! Create new file on channel
    fun$k_delete =	6,		! Delete file by name
    fun$k_rename =	8,		! Rename existing file
    fun$k_dirfq =	10,		! Get directory information
    fun$k_fipuuo =	12,		! Alternative SYS call
    fun$k_errmsg =	14,		! Get error message
    fun$k_reset =	16,		! Reset (close) all channels
    fun$k_lookup =	18,		! Look up a file
    fun$k_assign =	20,		! Assign device/logical name
    fun$k_deassign =	22,		! Deassign a device/logical name
    fun$k_deass_all =	24,		! Deassign all devices
    fun$k_cre_tmp =	26,		! Create temporary file on disk
    fun$k_cre_bin =	28,		! Create binary file (compiled image)
    fun$k_rn1fq =	30,		! Name...as...  part 1		! A221
    fun$k_rn2fq =	32,		! Name...as...  part 2		! A221

    fun$k_maxfip =	32;		! Maximum FIP function code	! M221

!
! UUO calls
!
!	Extended monitor functions - EMT call fun$k_uuo.  Function code
!	in FIRQB byte 3.
!

LITERAL
    fun$k_minuuo =	-26,		! Minimum UUO function code

    fun$k_uufil =	-26,		! File placement control
    fun$k_uuatr =	-25,		! Read/write file attributes
    fun$k_uuccl =	-24,		! Add/delete CCL command
    fun$k_uufss1 =	-23,		! Terminating file-string scan
    fun$k_uuset =	-22,		! Set special run priority
    fun$k_uusc1 =	-21,		! Drop/regain temp privilege
    fun$k_uusc2 =	-20,		! Lock/unlock job in memory
    fun$k_uulog =	-19,		! Set no of logins
    fun$k_uurts =	-18,		! Run-time system control
    fun$k_uunam =	-17,		! Name run-time system
    fun$k_uudie =	-16,		!  System shutdown
    fun$k_uuact =	-15,		! Accounting dump
    fun$k_uudat =	-14,		! Change date/time
    fun$k_uupri =	-13,		! Change priority/etc
    fun$k_uutb2 =	-12,		! Get monitor tables (part 2)
    fun$k_uubck =	-11,		! Change file backup statistics
    fun$k_uufss2 =	-10,		! Filename string scan
    fun$k_uuhng =	-9,		! Hangup a modem
    fun$k_uufcb =	-8,		! Device information
    fun$k_uucct =	-7,		! Control-C trap enable
    fun$k_uupok =	-6,		! Poke monitor memory
    fun$k_uubro =	-5,		! Broadcast to terminals
    fun$k_uufrc =	-4,		! Force input to terminals
    fun$k_uutb1 =	-3,		! Get monitor tables (part 1)
    fun$k_uunlg =	-2,		! Disable logins
    fun$k_uuylg =	-1,		! Enable logins
    fun$k_uupas =	0,		! Create user account
    fun$k_uudlu =	1,		! Delete user account
    fun$k_uucln =	2,		! Clean disk-pack
    fun$k_uumnt =	3,		! Mount, set characteristics
    fun$k_uulin =	4,		! Login
    fun$k_uubye =	5,		! Logout
    fun$k_uuatt =	6,		! Attach/reattach
    fun$k_uudet =	7,		! Detach
    fun$k_uuchu =	8,		! Change password/quota, etc
    fun$k_uuerr =	9,		! Return error messages
    fun$k_uuass =	10,		! Assign device
    fun$k_uudea =	11,		! Deassign device
    fun$k_uudal =	12,		! Deassign all devices
    fun$k_uuzer =	13,		! Zero a device
    fun$k_uurad =	14,		! Read/reset accounting info
    fun$k_uudir =	15,		! Directory lookup
    fun$k_uutrm =	16,		! Set terminal characteristics
    fun$k_uulok =	17,		! Lookup on filename
    fun$k_uumes1 =	18,		! Message send/receive
    fun$k_uuche =	19,		! Disk caching control
    fun$k_uucnv =	20,		! Convert date/time to ascii
    fun$k_uusln =	21,		! System logical names
    fun$k_uumes2 =	22,		! Message send/receive
    fun$k_uuswp =	23,		! Add/remove system files
    fun$k_uujob =	24,		! Job creation
    fun$k_uuppn =	25,		! Wild card PPN lookup
    fun$k_uusdef =	28,		! Set default filespec		! A221

    fun$k_maxuuo =	28;		! Maximum UUO function code	! M211

!
! Codes for message send/receive (held in byte 4 of FIRQB)
!
LITERAL
    fun$k_minsr =	-9,		! Minimum send/receive function code

    fun$k_srabt =	-9,		! Remote link abort
    fun$k_srdis =	-8,		! Remote link disconnect
    fun$k_srser =	-7,		! Remote link service
    fun$k_srint =	-6,		! Remote received interrupt
    fun$k_srudm =	-5,		! Remote data message
    fun$k_srucr =	-4,		! Remote connect reject
    fun$k_srucc =	-3,		! Remote connect confirm
    fun$k_sruci =	-2,		! Remote connect initiate
    fun$k_srlcl =	-1,		! Send local data message
    fun$k_srrem =	0,		! Remove local receiver
    fun$k_srdcl =	1,		! Declare local receiver
    fun$k_srrcv =	2,		! Receive message

    fun$k_maxsr =	2;		! Maximum send/receive function code

!
! Codes for magtape .SPEC call functions
!
LITERAL									! A 219
    fun$k_mt_min =	0,		! Minimum magtape function code	! A 225

    fun$k_mt_rwo =	0,		! Magtape rewind offline	! A 225
    fun$k_mt_eof =	1,		! Magtape write EOF mark	! A 225
    fun$k_mt_rew =	2,		! Magtape rewind		! A 225
    fun$k_mt_skp =	3,		! Magtape skip records		! A 225
    fun$k_mt_bks =	4,		! Magtape backspace records	! A 225
    fun$k_mt_den =	5,		! Magtape set parity & density	! A 225
    fun$k_mt_sts =	6,		! Magtape return tape status	! A 225
    fun$k_mt_chr =	7,		! Magtape return file chars.	! A 225
    fun$k_mt_rwc =	8,		! Magtape set rewind on close	! A 225

    fun$k_mt_max =	8;		! Maximum magtape function code	! A 225

!
! Last command function codes for magtape .SPEC call
!
LITERAL									! A 219
    mtf$k_rewoff =	0,		! Rewind off-line		! A 219
    mtf$k_read =	1,		! Read				! A 219
    mtf$k_write =	2,		! Write				! A 219
    mtf$k_wrt_eof =	3,		! Write EOF mark		! A 219
    mtf$k_rewind =	4,		! Rewind			! A 219
    mtf$k_skip =	5,		! Skip records			! A 219
    mtf$k_bksp =	6;		! Backspace records		! A 219

!
! Codes for terminal .SPEC call functions.
!
LITERAL									! A 258
    fun$k_tt_min =	0,		! Minimum term. function code	! A 258

    fun$k_tt_ctrlo =	0,		! Cancel CTRL/O			! A 258
    fun$k_tt_tape =	1,		! Set tape mode			! A 258
    fun$k_tt_echo =	2,		! Enable echo & clear tape mode	! A 258
    fun$k_tt_noecho =	3,		! Disable echo			! A 258
    fun$k_tt_onechr =	4,		! Set single character input	! A 258
    fun$k_tt_force =	5,		! Force to term (NOT V1.0)	! A 258
    fun$k_tt_broad =	6,		! B'cast to term (NOT V1.0)	! A 258
    fun$k_tt_cantyp =	7,		! Cancel typeahead		! A 258

    fun$k_tt_max =	7;		! Maximum term. function code	! A 258

!
! End of file BPAFUNDEF.REQ
!
