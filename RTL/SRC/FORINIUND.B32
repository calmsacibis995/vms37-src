%TITLE 'FOR$INIUND - Initialize Fortran underflow handling'
MODULE FOR$INIUND (
		IDENT = '1-001'		! File: FORINIUND.B32  Edit: JAW1001
		) =
BEGIN
!++
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
! FACILITY:	Fortran Support Library
!
! ABSTRACT:
!
!	This module contains a condition handler for floating underflow
!	exceptions, an exit handler to report the number of underflows
!	at image exit, and an initialization procedure which establishes
!	the condition handler for Fortran main programs.
!
! ENVIRONMENT:	Runs at any access mode - AST reentrant
!
! AUTHOR: John A. Wheeler, CREATION DATE: 21-Aug-1981
!
! MODIFIED BY:
!
! 1-001	- Original.  JAW 21-Aug-1981
!--


%SBTTL 'Declarations'
!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    FOR$INIT_UNDER;

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! FIELDS:
!
!	NONE
!
! PSECTS:
!

PSECT
    PLIT = LIB$INITIALIZD_ ( READ, NOWRITE, NOEXECUTE, NOSHARE, NOPIC,
	CONCATENATE, GLOBAL, ALIGN (2), ADDRESSING_MODE (GENERAL) );

!+
! Make LIB$INITIALIZD_ psect contribution so LIB$INITIALIZE procedure
! will call FOR$INIT_UNDER, which will establish FOR$UNDERFLOW_HANDLER
! as default handler and make coroutine call back.  LIB$INITIALIZD_ is
! used so that FOR$INIT_UNDER will be called before COM_STARTUP, whose
! address is in LIB$INITIALIZE psect.
!-

BIND
    VECT = UPLIT (FOR$INIT_UNDER);

!+
! Now declare usual PSECTs
!-

DECLARE_PSECTS (FOR);			! Declare PSECTs for FOR$ facility

!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$INITIALIZE,
    FOR$UNDERFLOW_HANDLER;

!

%SBTTL 'FOR$INIT_UNDER - Initialize underflow handling'
GLOBAL ROUTINE FOR$INIT_UNDER (
	CO_ROUT_INIT,
	CLI_CO_ROUT
) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine is called by LIB$INITIALIZE during image startup.
!	It establishes FOR$UNDERFLOW_HANDLER as a default underflow
!	exception handler and makes a coroutine call back to LIB$INITIALIZE.
!
! CALLING SEQUENCE:
!
!	ret_status.wlc.v = FOR$INIT_UNDER (co_rout_init.ra.v,
!					    cli_co_rout.ra.v)
!
! FORMAL PARAMETERS:
!
!	co_rout_init			Address of coroutine within
!					LIB$INITIALIZE
!
!	cli_co_rout			Address of coroutine within CLI
!					(not used)
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION STATUS: (or ROUTINE VALUE:)
!
!	As returned by main program via LIB$INITIALIZE.
!
! SIDE EFFECTS:
!
!	Makes a coroutine call back to LIB$INITIALIZE, thereby leaving
!	the current frame on the stack.
!
!--

BEGIN

    ENABLE
	FOR$UNDERFLOW_HANDLER;

    !+
    ! Make coroutine call back to LIB$INITIALIZE.
    !-

    RETURN (.CO_ROUT_INIT) ();

END;					! End of routine FOR$INIT_UNDER

END					! End of module FOR$INIUND
ELUDOM
