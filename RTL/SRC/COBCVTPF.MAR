	.TITLE	COB$CVTPF_R9	COBOL Convert Packed to Floating
	.IDENT	/1-004/		; File: COBCVTPF.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; FACILITY: COBOL SUPPORT
;++
; ABSTRACT:
;	This module contains the routine that converts packed numbers
;	to floating.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Marty Jack, 14-Mar-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of COBCVTPF
;
; 1-001	- Original.  MLJ 14-Mar-1979
; 1-002 - Make external references explicit. RKR 17-JULY-1979
; 1-003 - Change all refernces to FOR$CNV_IN_DEFG to OTS$CVT_T_D
;	  RKR 27-SEPT-79
; 1-004 - Cosmetic changes.  RKR 18-OCT-79

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
	$DSCDEF

;
; EXTERNAL SYMBOLS:
	.DSABL	GBL		; Prevent undeclared symbols from being
				; automatically global

	.EXTRN	OTS$CVT_T_D	; D, E, F, G Conversion routine
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_COB$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	COB$CVTPF_R9

;++
; FUNCTIONAL DESCRIPTION:
;
;	Converts packed numbers to floating.
;
; CALLING SEQUENCE:
;
;	JSB COB$CVTPF_R9 (scale.rl.v, srclen.rl.v, src.rp.r, dst.wf.r)
;
;	Arguments are passed in R6, R7, R8 and R9.
;
; INPUT PARAMETERS:
;	
;	SCALE.rl.v		The power of ten by which the internal
;				representation of the source must be
;				multiplied to scale the same as the 
;				internal representation of the dest.
;	SRCLEN.rl.v		The number of digits in the source
;	SRC.rp.r		The number to be converted
;
; IMPLICIT INPUTS:
;
;	All of the trap bits in the PSL are assumed off.
;
; OUTPUT PARAMETERS:
;
;	DST.wf.r		The place to store the converted number
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
;
;	1 = SUCCESS, 0 = FAILURE
;
; SIDE EFFECTS:
;
;	Destroys registers R0 through R9.
;	
;--


COB$CVTPF_R9::
	SUBL2	#40,SP			; Space for temp string and result
	CVTPS	R7,(R8),#31,8(SP)	; Make a separate sign string
;
; Make a descriptor for the leading separate string.
;
	PUSHL	R3			; Address = temp string
	MOVB	#DSC$K_CLASS_S,-(SP)	; Class = static
	MOVB	#DSC$K_DTYPE_T,-(SP)	; Data type = ASCII text
	MOVW	#32,-(SP)		; Length = 32 bytes
;
; Now call the conversion routine.
;
	MNEGL	R6,-(SP)		; Scale factor
	PUSHL	#0			; Digits in fraction
	PUSHAB	16(SP)			; Address of result area
	PUSHAB	12(SP)			; Address of descriptor
	CALLS	#4,G^OTS$CVT_T_D	; Call the routine
	BLBC	R0,2$			; Failure, must be overflow
	CVTDF	8(SP),(R9)		; Store result
	BVS	2$			; Br if overflowed
	MOVL	#1,R0			; Indicate success
1$:	ADDL2	#48,SP			; Delete stack temps
	RSB				; Return
;
; Come here on overflow to store the reserved operand.
;
2$:	ASHL	#15,#1,(R9)		; Store reserved operand
	CLRL	R0			; Indicate failure
	BRB	1$			; Delete stack temps and return
;
	.END
