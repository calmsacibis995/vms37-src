MODULE LIB$MATCH_COND (	! Library Match Condition Value List 
	IDENT = '1-002', ! File: LIBMATCH.B32 (Conflicts with LIB$MATCHC.MAR)
	LINKAGE(FORTRAN)
	) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General Utility Library
!
! ABSTRACT:
!
! Check for a match between the condition value addressed by the
! first parameter and the condition value addressed by the subsequent
! parameters.  Each parameter is the address of a condition value.
! Only the pertinent fields are checked within the condition value.
!
! ENVIRONMENT:  User Mode - AST re-entrant
!
! AUTHOR:  Donald G. Petersen, CREATION DATE:  30-Nov-1977
!
! MODIFIED BY:
!
! 	Donald G. Petersen, 30-Nov-1977: VERSION 0
! 0-1	- original
! 0-2	- RETURN I - 1	DGP	05-DEC-77
! 0-3	- add . (dot) operator to COND_VAL	DGP	05-DEC-77
! 0-04	- Change to STARLET library.  DGP 20-Apr-78
! 0-05	- Change REQUIRE files for VAX system build.  DGP 28-Apr-78
! 0-06	- Change STARLET to RTLSTARLE to avoid conflicts.  DGP 1-May-78
! 0-07	- Add check for facility specific bit.  TNH 17-June-78
! 0-10	- Change file name to LIBMATCHC.B32, and change the name
!	   of the REQUIRE file similarly.  JBS 14-NOV-78
! 0-011	- Change the file name to LIBMATCH.B32 to avoid conflict with
!	   LIBMATCHC.MAR (match characters) when producing object
!	   files.  JBS 15-NOV-78
! 1-001	-  Change the version number to 1 and update
!	    the copyright notice.  JBS 16-NOV-78
! 1-002	- Declare ACTUALCOUNT, ACTUALPARAMETER and NULLPARAMETER
!	   for the new BLISS compiler.  JBS 22-NOV-78
!--

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
	LIB$MATCH_COND;		! The routine which performs the comparisons. 

!
! INCLUDE FILES:
!
	REQUIRE 'RTLIN:RTLPSECT';	! Define DECLARE PSECTS macro
	LIBRARY 'RTLSTARLE';	! STARLET library for macros and symbols
!
! MACROS:
!
!	NONE	
!
! EQUATED SYMBOLS:
!
!	NONE	
!
! PSECT DECLARATIONS:
!

	DECLARE_PSECTS (LIB);		! declare PSECTs for LIB$ facility

!
! OWN STORAGE:
!
!	NONE	
!
! EXTERNAL REFERENCES:
!
!	NONE	

GLOBAL ROUTINE LIB$MATCH_COND ( ! Routine which compares condition values 
    COND_VAL,			! Adr. of desired condition value
    COND_VAL_I)			! Adr. of condition value to compare
    =
!++
! FUNCTIONAL DESCRIPTION:
!
! This routine will take a portion (STS$V_COND_ID) of the condition value pointed
! to by the first parameter and compare it to the same portion of the condition
! value pointed to by the second through nth parameters.
! If the facility specific bit (STS$V_FAC_SP) is set, the facility
! number (STS$V_FAC_NO), the facility specific bit , and the message
! code (STS$V_CODE) are included in the compare (STS$V_COND_ID).

! Otherwise, only the facility specific bit and the code are included (STS$V_MSG_NO).
! The routine returns a 0 if
! a match is not found, a 1 if the second parameter matches, a 2 if the third
! parameter matches and so on.  A check is made for null parameter entries in the 
! parameter list although the index is still incremented.
!
! FORMAL PARAMETERS:
!
! 	cond_val.rlc.r			  Adr. of desired value
!	{cond_val_i.rlc.r}		  Adr. of value to compare
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	index.wlu.v
!	0, if no match found
!	i, for match between the 1st and (i+1)th parameter
!
! SIDE EFFECTS:
!
!	NONE
!
!--

!+
!   Check for a null parameter each iteration.
!   If not a null parameter then compare the 1st and (i+1)th parameters
!   If no match is found by the time all parameters are exhausted then return a 0.
!-


    BEGIN

    BUILTIN ACTUALCOUNT, ACTUALPARAMETER, NULLPARAMETER;

    IF .BLOCK[.COND_VAL, STS$V_FAC_SP; , BYTE]
    THEN			! Facility specific bit set
	BEGIN
	INCR I FROM 2 TO ACTUALCOUNT() DO
	    IF NOT NULLPARAMETER(.I)
	    THEN
		IF .BLOCK[.COND_VAL, STS$V_COND_ID; , BYTE] EQLU .BLOCK[ACTUALPARAMETER(.I), STS$V_COND_ID; , BYTE]
		THEN
		   RETURN .I - 1
	END

    ELSE			! Facility specific bit not set

	BEGIN

	INCR I FROM 2 TO ACTUALCOUNT() DO
	    IF NOT NULLPARAMETER(.I)
	    THEN
		IF .BLOCK[.COND_VAL, STS$V_MSG_NO; , BYTE] EQLU .BLOCK[ACTUALPARAMETER(.I), STS$V_MSG_NO; , BYTE]
		THEN
		   RETURN .I - 1
	END;

    RETURN 0
    END;
   END
   ELUDOM
