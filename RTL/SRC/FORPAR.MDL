; REQUIRE file for FORTRAN internal parameters passed between modules
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; Author:  T. Hastings
; Change History:
; 0-3	- Added FOR$ structure for signal arg list TNH 24-SEP-77
; 0-7	- Added FOR$K_UNWINDRET.  JMT 2-Dec-77
; 0-8	- interchanged FOR$L_SIG_LUN and FOR$A_SIG_RNS.  TNH 5-Jan-78
; 0-9	- Add FOR$$IOBEG symbols.  TNH 30-May-78
; 0-12	- Change name to FORPAR.MDL  JBS 14-NOV-78
; 1-001	- Updated version number and added copyright notice.  JBS 16-NOV-78
; 1-002 - Added statement types for ISAM.  SBL  06-DEC-78
; 1-003 - Deleted all statement types.  Moved to LUB.  DGP 06-Dec-78
; 1-004 - Added definitions for ISAM, internal files.  SBL 2-May-79
; 1-005	- Remove PRINT statement for new BLISS compiler.  JBS 09-OCT-1979
; 1-006 - Restructure macros for statement initialization.  SBL 5-Dec-1979
; 1-007 - Add FOR$K_CLASS_SB and FOR$K_CLASS_NL.  JAW 28-Jul-1981

; Define all symbols as if they were globals using the FOR$ prefix.
; Call definitions in MACRO-32 with:
;	$FORPAR



;+
; Signal argument list order
; Define symbols to be used in .SIG_ARGS_ADR[FOR$L_SIG_xxx].
;-

	$STRUCT	FOR,PAR			; Define $FORPAR
	M 1

	F SIG_ACNT	; Signal arg count = no. of folowing args = 9
	F SIG_NAME	; 32-bit signal code
	F SIG_FCNT	; count of number of following FAO arguments
			; in message associated with CODE.
			; Does not count RMS error status codes
			; since they are part of next FAO message
	F SIG_LUN	; FORTRAN logical unit number
	F SIG_RNS, A	; Address of a string descriptor
			; pointing to resultant file-name string or 0
	F SIG_UPC	; User PC - PC of user CALL.
	F SIG_STS	; RMS error status from FAB or RAB
	F SIG_STV	; STARLET error status from FAB or RAB
			; or additional RMS error info (bit in STS = 1)
	F SIG_PC	; CHF supplied PC of call to LIB$SIGNAL or LIB$STOP
	F SIG_PSL	; CHF supplied PSL of call to LIB$SIGNAL or LIB$STOP

;+
; Control Z record for use with reading ENDFILE produced on PDP-11s
;-

	K CONTROL_Z,26	; ASCII Control Z - ENDFILE record

;+
; Parameter values to be passed to Handlers set up
; on I/O calls from user (see FERROR.B32).
; The values indicate what cleanup action is to be done when
; and if an UNWIND should occur (ERR= transfer or SIGNAL or STOP 
; which does an UNWIND.
;-

	K UNWINDPOP,0	; UNWIND cleanup which pops current LUB/ISB/RAB
	K UNWINDNOP,1	; UNWIND cleanup which does nothing (ie NOP).
	K UNWINDRET,2	; UNWIND cleanup which does a $CLOSE and returns LUB/ISB/RAB


;+
; Constants used in parameter encoding between the I/O statement routines (see FORENTRY.MAR)
; and routine FOR$$IO_BEG.  The codes are
; both bit positions in the flag word and an index into
; a table used for sorting out the parameters.
; All are optional for some I/O statement.
;-

	P 1
	F STMT_TYPE,B		; FORTRAN statement type
	F STMT_FLAG,B		; FORTRAN statement flags
	P 1
	V <
	,8			; skip statement type
	OBJ_FMT			; run-time (object time) formatting
	,7			; remaining bits
	>


;+
; Private-use descriptor class codes defined for Fortran.  These codes
; identify descriptors passed by compiled code to FOR$IO_ELEM.
;-

	K CLASS_SB,191
	K CLASS_NL,190

	E		; End of FOR$ symbol definitions.

;	End of file FORPAR.MDL
