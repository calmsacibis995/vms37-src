MODULE BAS$NAME_AS (				! Change a file's name
		IDENT = '1-002'			! File: BASNAMEAS.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  BASIC-PLUS-2 Miscellaneous
!
! ABSTRACT:
!
!	This module implements the BASIC NAME ... AS statement,
!	which renames a file.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 28-FEB-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  JBS 28-FEB-1979
! 1-002	- Use BAS$$STOP_RMS for errors.  JBS 22-AUG-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$NAME_AS : NOVALUE;			! Change a file's name

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Macros for defining psects

LIBRARY 'RTLSTARLE';				! System definitions

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! Declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$STOP_RMS : NOVALUE;			! Signals BASIC RMS error


GLOBAL ROUTINE BAS$NAME_AS (			! Change a file name
	OLD_FILE, 				! Old name of file
	NEW_FILE				! New name of file
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Changes a file's name.  This is done by using the $RENAME
!	RMS macro.
!
! FORMAL PARAMETERS:
!
!	OLD_FILE.rt.dx	The old name of the file.
!	NEW_FILE.rt.dx	The new name of the file.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Changes the directory entry for the file, but does not alter the
!	file name stored in the file header block.
!
!--

    BEGIN

    MAP
	OLD_FILE : REF BLOCK [8, BYTE],
	NEW_FILE : REF BLOCK [8, BYTE];

    LOCAL
	OLD_FAB : $FAB_DECL,
	NEW_FAB : $FAB_DECL,
	OLD_NAM : $NAM_DECL,
	NEW_NAM : $NAM_DECL,
	RENAME_RESULT;

    $FAB_INIT (FAB = OLD_FAB, 			!
	FNA = .OLD_FILE [DSC$A_POINTER], 	!
	FNS = .OLD_FILE [DSC$W_LENGTH], 	!
	NAM = OLD_NAM);
    $FAB_INIT (FAB = NEW_FAB, 			!
	FNA = .NEW_FILE [DSC$A_POINTER], 	!
	FNS = .NEW_FILE [DSC$W_LENGTH], 	!
	NAM = NEW_NAM);
    $NAM_INIT (NAM = OLD_NAM);
    $NAM_INIT (NAM = NEW_NAM);
    RENAME_RESULT = $RENAME (OLDFAB = OLD_FAB, NEWFAB = NEW_FAB);

    IF ( NOT .RENAME_RESULT) THEN BAS$$STOP_RMS (.OLD_FILE, .OLD_FAB [FAB$L_STS], .OLD_FAB [FAB$L_STV]);

    RETURN;
    END;					! end of BAS$NAME_AS

END						! end of module BAS$NAME_AS

ELUDOM
