! BASERRORS.HLP - Help for BAS$ errors.  
! 1-002 SBL1002 Correct misspellings.  SBL 25-Sept-1980
! 1-001 - Original.  SBL 20-Feb-1980
!
2 BAS
VAX-11 BASIC error messages
3 ARGDONMAT
 Arguments don't match

 Explanation:  FATAL - The arguments in a  function  call  do  not
 match the arguments defined for the function, either in number or
 in type.

 User Action:  Change the arguments in the function call to  match
 those in the DEF, or change the arguments in the DEF.

3 ARGTOOLAR
 Argument too large in EXP

 Explanation:  FATAL - The program contains:

 o    An argument to the EXP function larger than 88, or

 o    An exponentiation operation that results in a number greater
      than 1E38.

 User Action:  Change the EXP argument to one in the valid  range,
 or reduce the size of the exponent.

3 ARRMUSSAM
 Arrays must be same dimension

 Explanation:  FATAL - The  program  attempts  to  perform  matrix
 addition   or  subtraction  on  input  arrays  with  a  different
 dimensions.

 User Action:  Redimension the arrays so  that  the  input  arrays
 have identical dimensions.

3 ARRMUSSQU
 Arrays must be square

 Explanation:  FATAL - The program attempts matrix inversion  (MAT
 INV) on an array that is not square.

 User  Action:   Redimension  the  array  to  be   square   before
 performing MAT INV.

3 BADDIRDEV
 Bad directory for device

 Explanation:  FATAL - The device directory does not exist  or  is
 unreadable.

 User Action:  Supply a valid directory.

3 BADRECIDE
 Bad record identifier

 Explanation:  FATAL - The program attempted a record access  that
 specified:

 o    A zero or negative record number on a RELATIVE file, or

 o    A null key value on an INDEXED file.

 User Action:  Change the record number or key specification to  a
 valid value.

3 BADRECVAL
 Bad RECORDSIZE value on OPEN

 Explanation:  FATAL - The value in the RECORDSIZE clause  in  the
 OPEN statement is zero or greater than 16384.

 User Action:  Change the value in the RECORDSIZE clause.

3 CANCHAARR
 Cannot change array dimensions

 Explanation:  FATAL -  The  program  attempts  to  redimension  a
 one-dimensional array to two dimensions or vice versa.

 User Action:  Change the arrays dimensions in the DIM statement.

3 CANFINFIL
 Can't find file or account

 Explanation:  FATAL - The specified file or directory is  not  on
 the device.

 User Action:  Supply a valid file specification.

3 CANINVMAT
 Can't invert matrix

 Explanation:  FATAL - The program attempts to invert  a  singular
 matrix.

 User Action:  Supply a matrix of the proper form for inversion.

3 CORFILSTR
 Corrupted file structure

 Explanation:  FATAL - RMS has detected an invalid file  structure
 on disk.

 User Action:  See your system manager.


3 DATFORERR
 Data format error

 Explanation:  WARNING - The program specifies a data type  in  an
 INPUT  or  READ  statement  that  does  not  agree with the value
 supplied.

 User Action:  Change the INPUT or READ statement, or supply  data
 of the correct type.

3 DATTYPERR
 Data type error

 Explanation:  FATAL - The program contains a value  of  incorrect
 data type.

 User Action:  Change the value to the correct data type.

3 DEVHUNWRI
 Device hung or write locked

 Explanation:  FATAL - The program attempted  an  operation  to  a
 hardware  device that is not functioning properly or is protected
 against writing.

 User  Action:   Check  the  device  on  which  the  operation  is
 performed.

3 DIFUSELON
 Differing use of LONG/WORD qualifiers

 Explanation:  FATAL - The main and subprograms were compiled with
 different LONG/WORD modes.

 User Action:   Recompile  one  of  the  programs  with  the  same
 qualifier as the other.

3 DIRERR
 Directive error

 Explanation:  FATAL - A  system  service  call  resulted   in  an
 error.

 User Action:  See the VAX/VMS I/O  User's  Guide  or  the  VAX-11
 Record Management Services Reference Manual.
3 DIVBY_ZER
 Division by 0

 Explanation:  FATAL - The program attempts to divide a  value  by
 zero.

 User Action:   Check  program  logic  and  change  the  attempted
 division, or trap the error in an error handler.

3 DUPKEYDET
 Duplicate key detected

 Explanation:  FATAL - In a PUT operation to an  indexed  file,  a
 duplicate  key  was  specified,  and DUPLICATES was not specified
 when the file was created.

 User Action:  Change the duplicate key,  or  re-create  the  file
 specifying DUPLICATES for that key.

3 ENDFILDEV
 End of file on device

 Explanation:  FATAL - The program attempted to read  data  beyond
 the end of the file.

 User Action:  None.  The program can trap this error in an  error
 handler.

3 ERRTRANEE
 ERROR trap needs RESUME

 Explanation:  FATAL - An error handler  attempts  to  execute  an
 END,   SUBEND,  FUNCTIONEND  or  FNEND  statement  without  first
 executing a RESUME statement.

 User Action:  Change the program logic so that the error  handler
 executes  a  RESUME  statement  before  executing an END, SUBEND,
 FUNCTIONEND or FNEND statement.

3 FATSYSIO_
 Fatal system I/O failure

 Explanation:  FATAL - An I/O error  has  occurred  in:   (1)  the
 system,  or  (2)  Record Management Services.  The last operation
 will not be completed.

 User Action:   See  the  VAX/VMS  System  Messages  and  Recovery
 Procedures Manual for RMS errors, or retry the operation.

3 FIEOVEBUF
 FIELD overflows buffer

 Explanation:  FATAL - A FIELD statement attempts to  access  more
 data than exists in the specified buffer.

 User Action:  Change the FIELD statement to  match  the  buffer's
 size, or increase the buffer's size.

3 FILACPFAI
 FILE ACP failure

 Explanation:   FATAL  -  The  operating  system's  file   handler
 reported an error to RMS.

 User Action:  See the VAX/VMS I/O  User's  Guide  or  the  VAX-11
 Record Management Services Reference Manual.

3 FILATTNOT
 File attributes not matched

 Explanation:  FATAL  -  The  following  attributes  in  the  OPEN
 statement do not match the corresponding attributes of the target
 file:

      ORGANIZATION

      BUCKETSIZE

      BLOCKSIZE

      RECORDSIZE

      Key  number,  size,   position   or   attributes   (CHANGES,
      DUPLICATES)

      Record format

 User Action:  Change the OPEN statement attributes to match those
 of the file or remove the clause.

3 FILEXPDAT
 File expiration date not yet reached

 Explanation:  FATAL - The program  attempted  to  delete  a  file
 before the file's expiration date was reached.

 User Action:  Change the file's expiration date.

3 FILIS_LOC
 File is locked

 Explanation:  FATAL - The program does not allow  shared  access,
 and  attempts  to  access  a file that has been locked by another
 user, or by the system.

 User Action:  Change the OPEN statement to allow shared access or
 wait until the file is released by other user(s).

3 FLOPOIERR
 Floating point error

 Explanation:   FATAL  -  A  program  operation  resulted   in   a
 floating-point  number  with  absolute  value  outside  the range
 10E-38 to 10E38.

 User Action:  Check program logic, or trap the error in an  error
 handler.

3 FNEWITFUN
 FNEND without function call

 Explanation:  FATAL - The  program  executes  a  FNEND  statement
 before executing a function call.

 User Action:   Check  program  logic  to  make  sure  that  FNEND
 statements  are  executed  only in multi-line DEFs, or remove the
 FNEND statement.

3 ILLALLCLA
 Illegal ALLOW clause

 Explanation:  FATAL - The value specified for  the  ALLOW  clause
 (sharing) is illegal for the type of file organization.

 User Action:  Change the ALLOW clause value.

3 ILLARGLOG
 Illegal argument in LOG

 Explanation:  FATAL - The program contains  a  negative  or  zero
 argument to the LOG or LOG10 function.

 User Action:  Supply an argument in the valid range.

3 ILLBYTCOU
 Illegal byte count for I/O
 Explanation:  FATAL - A PRINT or INPUT list  invoked  a  function
 that closed an I/O channel.

 User Action:  Change the function so that it does not  close  the
 I/O channel.

3 ILLEXIDEF
 Illegal exit from DEF*

 Explanation:  FATAL - A multi-line DEF* contains a branch  to  an
 END, SUBEND or FUNCTIONEND statement.

 User Action:  Change  the  program  logic  so  that  the  program
 executes  the  multi-line  DEF's FNEND statement before executing
 the END, SUBEND or FUNCTIONEND statement.

3 ILLFIEVAR
 Illegal FIELD variable

 Explanation:  FATAL - A FIELD statement contains a variable  that
 is  also  named  in  a  COMMON, MAP, SUB, FUNCTION, CALL, or MOVE
 statement.

 User Action:  Remove the variable from the  FIELD  statement,  or
 from the COMMON, MAP, SUB, FUNCTION, CALL, or MOVE statement.

3 ILLFILNAM
 Illegal file name
 Explanation:  FATAL - A file name  is:   (1)  too  long,  or  (2)
 incorrectly formatted, or (3) contains embedded blanks or invalid
 characters.

 User Action:  Supply a valid file specification.

3 ILLILLACC
 Illegal or illogical access

 Explanation:  FATAL - The requested access is impossible because:

 o    The attempted record operation and the ACCESS clause in  the
      OPEN statement are incompatible.

 o    The  ACCESS   clause   is   inconsistent   with   the   file
      organization.

 o    ACCESS READ or  APPEND  was  specified  when  the  file  was
      created.

 User Action:  Change the ACCESS clause.

3 ILLIO_CHA
 Illegal I/O channel

 Explanation:  FATAL  -  The  program  specified  an  I/O  channel
 outside the legal range.

 User Action:   Specify  I/O  channels  in  the  range  1  to  99,
 inclusive.

3 ILLKEYATT
 Illegal key attributes

 Explanation:    FATAL   -   An   invalid   combination   of   key
 characteristics is specified, either:

      NODUPLICATES and
      CHANGES, or

      CHANGES without
      DUPLICATES

 User Action:  Change the invalid key characteristics.

3 ILLNUM
 Illegal number

 Explanation:  FATAL - A value supplied to a numeric  variable  is
 incorrect, for example "ABC" and "1..2" are illegal numbers.

 User Action:  Supply numeric values of the correct form.

3 ILLOPE
 Illegal operation

 Explanation:  FATAL - The program attempts to:

 o    DELETE a record in a sequential file, or

 o    UPDATE a record on a magtape file, or

 o    Transpose a matrix, or perform a matrix multiplication, with
      the same array as source and destination, or

 o    Rewind a process-permanent file, or

 o    DELETE a record in a read-only file, or

 o    Assign a value to a virtual array  element  in  a  read-only
      file, or

 o    Perform a MARGIN operation on VIRTUAL file, or

 o    Perform an invalid operation on a VIRTUAL file, for example,
      using  GET  and  PUT  on  a VIRTUAL file, then attempting to
      reference a virtual array dimensioned on that file.

 User Action:  Change the illegal operation.

3 ILLRECACC
 Illogical record accessing

 Explanation:   FATAL  -  The  program  attempts  to  perform   an
 operation  that  is  invalid  for  the  specified  file type, for
 example, a random access on a sequential file.

 User Action:  Supply a valid operation  for  that  file  type  or
 change the file type.

3 ILLRECFIL
 Illegal record on file

 Explanation:  FATAL - A record contains  an  invalid  byte  count
 field.

 User Action:  Use the DCL DUMP command  to  check  the  file  for
 possible bad data.

3 ILLRESSUB
 Illegal RESUME to subroutine

 Explanation:  FATAL - While in an error handler activated  by  an
 ON  ERROR GO BACK, the error handler attempts to RESUME without a
 line number.

 User Action:  None;  you cannot RESUME to a line in  any  program
 module except the one containing the error handler.

3 ILLSWIUSA
 Illegal switch usage

 Explanation:  FATAL - The program attempts an illegal SYS call.

 User Action:  See the appropriate RSTS/E SYS call documentation.

3 ILLSYSUSA
 Illegal SYS(0) usage,

 Explanation:  FATAL - The program attempted an illegal SYS call.

 User Action:  See the appropriate RSTS/E SYS call documentation.

3 ILLUSADEV
 Illegal usage for device

 Explanation:  FATAL - The requested operation cannot be performed
 because:

 o    The device specification contains illegal syntax,

 o    The specified device does not exist on your system,

 o    The specified device  is  inappropriate  for  the  requested
      operation (for example, an indexed file access on magtape).

 User Action:  Supply the correct device type.

3 IMASQUROO
 Imaginary square roots

 Explanation:   FATAL  -  An  argument  to  the  SQR  function  is
 negative.

 User Action:  Supply arguments  to  the  SQR  function  that  are
 greater than or equal to zero.

3 INDNOTFUL
 Index not fully optimized

 Explanation:  WARNING - A record was successfully written  to  an
 INDEXED  file, however, the alternate key path was not optimized.
 This slows record access.

 User Action:  Delete the record and rewrite it.

3 INTERR
 Integer error

 Explanation:  FATAL -  The  program  contains  an  integer  whose
 absolute  value  is  greater  than 32767 in WORD mode, or greater
 than 2147483647 in LONG mode.

 User Action:  Use only integers in the valid range.

3 INVFILOPT
 Invalid file options

 Explanation:  FATAL - The  program  has  specified  invalid  file
 options in the OPEN statement.

 User Action:  Change the invalid file options.

3 INVKEYREF
 Invalid key of reference

 Explanation:  FATAL - The program  attempts  to  perform  a  GET,
 FIND,  or  RESTORE  on  an INDEXED file using an invalid KEY, for
 example, an alternate KEY that has not been defined.

 User Action:  Use a valid  KEY  in  the  GET,  FIND,  or  RESTORE
 statement.

3 INVRFAFIE
 Invalid RFA field

 Explanation:  FATAL - During a FIND or GET  by  RFA,  an  invalid
 record's file address was contained in the RAB.

 User Action:  Supply a correct RFA field.

3 IO_CHAALR
 I/O channel already open

 Explanation:  FATAL - The program attempted to OPEN channel  zero
 (the controlling terminal).

 User Action:  Remove the OPEN statement;  channel zero is  always
 open.

3 IO_CHANOT
 I/O channel not open

 Explanation:  FATAL - The program attempted  to  perform  an  I/O
 operation before OPENing the channel.

 User Action:  OPEN the channel before attempting an I/O operation
 to it.

3 KEYFIEBEY
 Key field beyond end of record

 Explanation:  FATAL -  The  position  given  for  the  key  field
 exceeds the maximum size of the record.

 User Action:  Specify a key field within the record.

3 KEYLARTHA
 Key larger than record

 Explanation:  FATAL - The key specification exceeds  the  maximum
 record size.

 User Action:  Reduce the size of the key specification.

3 KEYNOTCHA
 key not changeable

 Explanation:  FATAL - An UPDATE statement attempted to  change  a
 KEY  field  that  did  not  have  CHANGES  specified  in the OPEN
 statement.

 User  Action:   Remove  the  changed  key  field  in  the  UPDATE
 statement,  or  specify  CHANGES  for  that key field in the OPEN
 statement.  Note the primary key cannot be changed.

3 KEYSIZTOO
 Key size too large

 Explanation:  FATAL - The key length on a GET or FIND  is  either
 zero or larger than the key length defined for the target record.

 User Action:  Change the key specification in  the  GET  or  FIND
 statement.

3 KEYWAIEXH
 Keyboard wait exhausted

 Explanation:  FATAL - No input was received during the  execution
 of  a INPUT, LINPUT, or INPUT LINE statement that was preceded by
 a WAIT statement.

 User Action:  None;  you must supply input within  the  specified
 time.

3 MATDIMERR
 Matrix dimension error

 Explanation:  FATAL - The program:

 o    attempts to assign more than two dimensions to an array, or

 o    attempts to  reference  a  one-dimensional  array  with  two
      subscripts, or

 o    attempts to  reference  a  two-dimensional  array  with  one
      subscript.

 User Action:  Reduce the number of subscripts to one or  two,  or
 reference the array using the correct number of dimensions.

3 MAXMEMEXC
 Maximum memory exceeded

 Explanation:  FATAL - The program has insufficient string and I/O
 buffer  space  because:   (1)  its allowable memory size has been
 exceeded, or (2) the system's maximum memory  capacity  has  been
 reached.

 User Action:  Reduce the amount of string or I/O buffer space, or
 split the program into two or more modules.

3 MEMMANVIO
 Memory management violation

 Explanation:  FATAL - The program attempted to read or write to a
 memory location to which it was not allowed access.

 User Action:  If the program was compiled with /NOCHECK,  it  may
 be  exceeding an array bound;  recompile with /CHECK.  Otherwise,
 check program logic.

3 MISSPEFEA
 Missing special feature

 Explanation:  FATAL - The program attempts to use an  unavailable
 SYS call.

 User Action:  See the appropriate RSTS/E SYS call documentation.

3 MOVOVEBUF
 Move overflows buffer

 Explanation:  FATAL - In a MOVE statement, the combined length of
 elements in the I/O list exceeds size of the record just read.

 User Action:  Reduce the size of the I/O list,  or  increase  the
 file's RECORDSIZE.

3 NAMACCNOW
 Name or account now exists

 Explanation:  FATAL - The program attempted to RENAME a file  and
 a file with that name already exists.

 User Action:  Use the KILL statement to erase the old file before
 using RENAME to name the new file or use a different name.

3 NEGFILSTR
 Negative fill or string length

 Explanation:  FATAL - A MOVE statement I/O list contains  a  FILL
 item or string length with a negative value.

 User Action:  Change the FILL item or string length value  to  be
 greater than or equal to zero.

3 NODNAMERR
 Node name error

 Explanation:  FATAL - A file specification's node name contains a
 syntax error.

 User Action:  Supply a valid node name.

3 NOTENDFIL
 Not at end of file

 Explanation:  FATAL - The program attempted a PUT operation:  (1)
 on  a  sequential  file  before  the  last record, or (2) without
 opening the file for WRITE access.

 User Action:  OPEN a sequential file with ACCESS APPEND, or  OPEN
 the file with ACCESS WRITE.

3 NOTENODAT
 Not enough data in record

 Explanation:  FATAL - An INPUT statement did not find enough data
 in one line to satisfy all the specified variables.

 User Action:  Supply enough data in the  record,  or  reduce  the
 number of specified variables.

3 NOTIMP
 Not implemented

 Explanation:  FATAL - The program attempted to use a feature that
 does  not exist in this version of BASIC, for example, CHAIN with
 line number.

 User Action:  None.

3 NOTRANACC
 Not a random access device

 Explanation:  FATAL - The program attempts a random access  on  a
 device  that does not allow such access;  for example, a PUT with
 a record number to a magtape file.

 User Action:  Make the access sequential instead of random or use
 a suitable I/O device.

3 NO_CURREC
 No current record

 Explanation:  FATAL - The program attempts  a  DELETE  or  UPDATE
 when  the previous GET or FIND failed, or no previous GET or FIND
 was done.

 User Action:  Correct the cause of failure for the  previous  GET
 or  FIND,  or  make  sure  a GET or FIND was done, then retry the
 operation.

3 NO_PRIKEY
 No primary key specified

 Explanation:  FATAL - The program attempts to create  an  INDEXED
 file without specifying a PRIMARY KEY value.

 User Action:  Specify a PRIMARY KEY.

3 NO_ROOUSE
 No room for user on device

 Explanation:  FATAL  -  No  user  storage  space  exists  on  the
 specified device.

 User Action:  Delete files that are no longer needed.

3 ONEOR_TWO
 One or two dimensions only

 Explanation:  FATAL - The program contains a MAT  statement  that
 attempts to assign more than two dimensions to an array.

 User  Action:   Change  the  number  of  dimensions  in  the  MAT
 statement to one or two.

3 ON_STAOUT
 ON statement out of range

 Explanation:  FATAL - The index value in an ON GOTO or  ON  GOSUB
 statement  is  less  than  1  or  greater than the number of line
 numbers in the list.

 User Action:  Check program logic to make  sure  that  the  index
 value  is greater than or equal to one, and less than or equal to
 the number of line numbers in the ON GOTO or ON GOSUB statement.

3 OUTOF_DAT
 Out of data

 Explanation:  FATAL - A READ statement requested additional  data
 from an exhausted DATA list.

 User Action:  Remove the READ statement,  reduce  the  number  of
 variables in the READ statement, or supply more DATA items.

3 PRIKEYOUT
 Primary key out of sequence

 Explanation:  FATAL  -  A  sequential  PUT  to  an  INDEXED  file
 specifies  a  PRIMARY  KEY value lower than that of the preceding
 record.

 User Action:  Sort the records before using  PUT  on  an  indexed
 file.

3 PRIUSIFOR
 PRINT-USING format error

 Explanation:   FATAL  -  The  program  contains  a  PRINT   USING
 statement with an invalid format string.

 User Action:  Change the PRINT USING format string.

3 PROC__TRA
 Programmable ^C trap

 Explanation:  FATAL - A  CTRL/C  was  typed  at  the  controlling
 terminal.

 User Action:  None;  however, you can trap  this  error  with  an
 error handler.

3 PROLOSSOR
 Program lost-Sorry

 Explanation:  FATAL - A fatal system error caused your program to
 be lost.

 User Action:  This error should never occur.  Submit  a  Software
 Performance Report.

3 PROVIO
 Protection violation

 Explanation:  FATAL - The program attempted to read or write to a
 file whose protection code did not allow the operation.

 User  Action:   Use  a  different  file,  or  change  the  file's
 protection code or the attempted operation.

3 RECALREXI
 Record already exists

 Explanation:  FATAL  -  An  attempted  random  access  PUT  on  a
 relative file has encountered a pre-existing record.

 User Action:  Specify a different record number for  the  PUT  or
 delete the record.

3 RECBUCLOC
 Record/bucket locked

 Explanation:  FATAL - The program attempts to access a record  or
 bucket that has been locked by another program.

 User Action:  Retry the operation.

3 RECFILTOO
 Record on file too big

 Explanation:  FATAL - The specified record  is  longer  than  the
 input buffer.

 User Action:  Increase the input buffer's size.


3 RECHASBEE
 Record has been deleted

 Explanation:  FATAL - A record previously located by  its  Record
 File Address (RFA) has been deleted.

 User Action:  None.

3 RECNOTFOU
 Record not found

 Explanation:  FATAL - A random access GET or FIND  was  attempted
 on a deleted or nonexistent record.

 User Action:  None.

3 RECNUMEXC
 RECORD number exceeds maximum

 Explanation:  FATAL - The specified  record  number  exceeds  the
 maximum specified for this file.

 User Action:  Reduce the specified record  number.   The  maximum
 record  number  cannot  be  specified  in  BASIC;  it is either a
 default, or it was specified by a non-BASIC program when the file
 was created.

3 REDARR
 Redimensioned array

 Explanation:  FATAL - The  program  attempts  to  redimension  an
 array to have more elements than were originally dimensioned.

 User Action:  Change the statement that attempts the  redimension
 or increase the original number elements.

3 RESNO_ERR
 RESUME and no error

 Explanation:  FATAL - The program  executes  a  RESUME  statement
 outside of the error handling routine.

 User Action:  Check program logic to make sure  that  the  RESUME
 statement is executed only in the error handler.

3 RETWITGOS
 RETURN without GOSUB

 Explanation:  FATAL - The program  executes  a  RETURN  statement
 before a GOSUB.

 User Action:  Check  program  logic  to  make  sure  that  RETURN
 statements are executed only in subroutines, or remove the RETURN
 statement.

3 RRVNOTFUL
 RRV not fully updated,

 Explanation:  FATAL - RMS wrote a record  successfully,  but  did
 not  update one or more Record Retrieval Vectors.  Therefore, you
 cannot retrieve any records associated with those vectors.

 User Action:  Delete the record and rewrite it.

3 SCAFACINT
 SCALE factor interlock

 Explanation:  FATAL - A subprogram was compiled with a  different
 SCALE factor than the calling program.

 User Action:  Recompile one of the programs with a  scale  factor
 that matches the other.

3 SIZRECINV
 Size of record invalid

 Explanation:  FATAL - The program contains a COUNT  specification
 that is invalid because:

 o    COUNT equals zero, or

 o    COUNT exceeds the maximum size of the record, or

 o    COUNT conflicts with the actual size of the  current  record
      during a sequential file UPDATE on disk, or

 o    COUNT does not equal  the  maximum  record  size  for  fixed
      format records.

 User Action:  Supply a valid COUNT value.

3 STO
 Stop

 Explanation:   INFORMATION  -  The  program   executed   a   STOP
 statement.

 User Action:  Continue execution by typing CONTINUE or  terminate
 execution by typing EXIT.

3 STRTOOLON
 String too long

 Explanation:  FATAL - The program contains a string  longer  than
 65535 bytes.

 User Action:  Reduce the length of the string.

3 RECATTNOT
 Record attributes not matched

 Explanation:   FATAL  -  A  RECORDTYPE  clause   specifies   file
 attributes that do not match those of the file.

 User Action:  Change the RECORDTYPE attribute to  match  that  of
 the file.

3 SUBOUTRAN
 Subscript out of range

 Explanation:  FATAL - The program attempts to reference an  array
 element outside of the array's DIMENSIONed bounds.

 User Action:  Check program logic to make  sure  that  all  array
 references are to elements within the array boundaries.

3 SYNERR
 Syntax error

 Explanation:   FATAL  -  A  program  statement   is   incorrectly
 formatted.

 User Action:  This error  should  never  occur  in  the  run-time
 environment.  Submit a Software Performance Report.

3 TAPBOTDET
 Tape BOT detected

 Explanation:  FATAL - The program attempts a rewind or  backspace
 operation  on  a  magtape that is already at the beginning of the
 file.

 User Action:  Check program logic;  do not rewind or backspace if
 the magtape is at the beginning of the file.

3 TAPNOTANS
 Tape not ANSI labelled

 Explanation:   FATAL  -  The  program  attempts   to   access   a
 file-structured magtape that does not have an ANSI label.

 User Action:  Determine the magtape's format by mounting it  with
 the  /FOREIGN  qualifier and using the DCL DUMP command.  You can
 then access it as a non-file-structured magtape.

3 TAPRECNOT
 Tape records not ANSI

 Explanation:  FATAL - The records in the magtape you accessed are
 neither ANSI D nor ANSI F format.

 User Action:  Determine the magtape's format by mounting it  with
 the /FOREIGN qualifier and using the DUMP DCL command.

3 TERFORFIL
 Terminal format file required

 Explanation:  FATAL -  The  program  attempted  to  use  PRINT #,
 INPUT #, LINPUT #, MAT INPUT #, MAT PRINT #, or PRINT USING  # to
 access a RELATIVE, INDEXED, or VIRTUAL file.

 User Action:  Supply a terminal-format file.

3 TOOFEWARG
 Too few arguments

 Explanation:   FATAL  -  A  function  call  or  SUB  or  FUNCTION
 statement  passed fewer arguments than were defined in the DEF or
 subprogram.

 User Action:  Change the number of arguments to match the  number
 defined in the DEF or subprogram.

3 TOOMANARG
 Too many arguments

 Explanation:  FATAL - A  function  call  or  a  SUB  or  FUNCTION
 statement passed more arguments than were expected.

 User Action:  Reduce the number of arguments.  A SUB or  FUNCTION
 statement can pass a maximum of 32 arguments; a function call can
 pass a maximum of eight arguments.

3 VIRARRDIS
 Virtual array not on disk

 Explanation:  FATAL  -  The  program  attempted  to  reference  a
 virtual array on a non-disk device.

 User Action:  Virtual arrays must be on disk;   change  the  file
 specification in the OPEN statement for this array.

3 VIRARROPE
 Virtual array not yet open

 Explanation:  FATAL  -  The  program  attempted  to  reference  a
 virtual array before OPENing the associated disk file.

 User Action:  OPEN the disk file  containing  the  virtual  array
 before referencing the array.

3 VIRBUFTOO
 Virtual buffer too large

 Explanation:  FATAL - The program attempted to access  a  VIRTUAL
 file and the buffer size was not a multiple of 512 bytes.

 User Action:  Change the I/O buffer  to  be  a  multiple  of  512
 bytes.

3 WHA
 What?

 Explanation:  FATAL - A command or immediate mode statement could
 not be processed.

 User Action:  Check for illegal verbs or improper formats.
