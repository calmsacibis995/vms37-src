	.TITLE	FOR$JDATE	; Time and Date as long integers
	.IDENT	/1-002/		; File: FORJDATE.MAR

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: FORTRAN SYSTEM LIBRARY
;++
; ABSTRACT:
;
;	Return current month, day, and year as INTEGER*4 values.

;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Jonathan M. Taylor, 17-Aug-77: Version 0
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 0 of FOR$JDATE
;
; 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
; 1-002	- Add "_" to the PSECT directive.  JBS 22-DEC-78

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	oerr.mar

;
; EXTERNAL SYMBOLS:
;

;
; MACROS:
;

;
; PSECT DECLARATIONS:
	.PSECT	_FOR$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;	none

	.SBTTL	FOR$JDATE - return month, day, year as INTEGER*4

;++
; FUNCTIONAL DESCRIPTION:
;
;	FOR$JDATE uses system service $NUMTIM to get date information.
;	This information is converted to the appropriate type and stored
;	through the addresses passed as parameters.
;
; CALLING SEQUENCE:
;
;	CALL FOR$JDATE (month.wl.r, day.wl.r, year.wl.r)
;
; INPUT PARAMETERS:
;
;	month.wl.r	adr of longword to place month (1-12) integer
;	day.wl.r	adr of longword to place day (1-31) integer
;	year.wl.r	adr of longword to place year (0-99)integer
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	SIGNALs Integer Overflow (this should never happen)
;
;--



	.ENTRY	FOR$JDATE,	^M<IV>
	SUBL	#16, SP			; save 8 words for $NUMTIM
	MOVL	SP, R0			; R0 -> data area
	$NUMTIM_S	(R0)		; get system time values
	MOVZWL	(SP)+, R0		; R0 = "year since 0"
	CLRL	R1			; as a quadword value
	EDIV	#100, R0, R0, R0	; R0 = two digit year value
	MOVL	R0, @12(AP)		; return year
	CVTWL	(SP)+, @4(AP)		; return month
	CVTWL	(SP), @8(AP)		; return day
	RET				; return


	.END
