	.TITLE	LIB$INDEX	; Return position of substring 
	.IDENT	/1-005/		; File: LIBINDEX.MAR Edit:RKR1005

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: General Utility Library
;++
; ABSTRACT:
;
;	Return relative position of substring in string or 0
;--
;
; VERSION: 0
;
; HISTORY:
;
; AUTHOR:
;	Thomas N. Hastings, 6-Aug-77: Version 0
;
; MODIFIED BY:
;
;	04 - DGP, 03-Jan-78
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 0
;
;	04 -	Remove R4 and R5 from entry mask
; 1-001	- Update version number and copyright notice.  JBS 16-NOV-78
; 1-002	- Add "_" to PSECT directive.  JBS 21-DEC-78
; 1-003 - Enhance to recognize additional classes of descriptors by
;	  using LIB$ANALYZE_SDESC_R3 to extract length and address of
;	  first data byte.  RKR 22-MAY-1981
; 1-004 - Add special case code to process string descriptors that
;	  "read" like fixed string descriptors.  RKR 7-OCT-1981.
; 1-005 - Redirect jsb's from LIB$ANALYZE_SDES_R3 to
;	  LIB$ANALYZE_SDESC_R2.  Reorganize register usage so that
;	  R6 is no longer used.  RKR 18-NOV-1981

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES: NONE
;

;
; EXTERNAL SYMBOLS:
;
	.DSABL	GBL			; only explicit externals
	.EXTRN	LIB$ANALYZE_SDESC_R2	; Extract length and addr of
					; 1st data byte from descriptor

;
; MACROS:
;
	$DSCDEF			; fields within a descriptor

;
; PSECT DECLARATIONS:
;
	.PSECT	_LIB$CODE PIC,SHR,LONG,EXE,NOWRT
;
; EQUATED SYMBOLS: NONE
;

;
; OWN STORAGE: NONE
;


	.SBTTL	LIB$INDEX - return relative pos. of substring

;++
; FUNCTIONAL DESCRIPTION:
;
;	Return the relative position of the first character of 
;	sub_string in src_string or 0.
;	The value is an unsigned integer longword.
;	The relative character positions are numbered 1, 2, ...,
;	thus 0 is a unique number meaning sub_string was not found.
;	The value returned is the relative position of the first
;	character of sub_string in src_string (not the last+1).
;	If both strings have zero length or sub_string has zero length
;	a 1 is returned indicating a found string.  If src_string
;	has zero length and sub_string has non-zero length, a 0 is
;	returned indicating that sub_string was not found.
;
; CALLING SEQUENCE:
;
;	rel_position.wlu.v = LIB$INDEX (src_string.rt.dx, 
;					sub_string.rt.dx)


;
; INPUT PARAMETERS:

	SRC_STRING = 4		; Address of source string descriptor 
				; to be searched.
	SUB_STRING = 8		; Address of sub string descriptor to 
				; be searched for.
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; ROUTINE VALUE
;	REL_POSITION.wlu.v	The resulting position
;
; SIDE EFFECTS:
;	NONE
;--


	.ENTRY	LIB$INDEX, ^M<R2,R3,R4,R5> ; entry point / entry mask
					   ; integer enable is off for 
					   ; SUBW3 (unsigned)

	MOVL	SUB_STRING(AP), R0	; Address of sub_string descr.
	CMPB	DSC$B_CLASS(R0), #DSC$K_CLASS_D	; read like fixed ?
	BGTRU	1$			; no
	MOVQ	@SUB_STRING(AP), R3	; length->R3, address-> R4
	BRB	2$			; join common flow

1$:	JSB	G^LIB$ANALYZE_SDESC_R2	; Extract: length->R1, addr->R2
	MOVZWL	R1, R3			; save sub_string length
	MOVL	R2, R4			; save sub_string data address

2$:	MOVL	SRC_STRING(AP), R0	; Address of src_string descr.
	CMPB	DSC$B_CLASS(R0), #DSC$K_CLASS_D ; read like fixed ?
	BGTRU	3$			; no
	MOVQ	@SRC_STRING(AP), R1	; length->R1, address->R2
	BRB	4$			; join common flow

3$:	JSB	G^LIB$ANALYZE_SDESC_R2	; Extract: length->R1, addr->R2

4$:	SUBW3	R3, R1, R5		; R5 = unsigned difference in
					; length of src minus sub

	MATCHC	R3, (R4), R1, (R2)	; Find sub_string in src_string
				; State of regs after a MATCHC instr.
				; R0 = If match occurred, 0,
				;      else number of bytes in object
				;      string.
				; R1 = If match occurred, the address of
				;      one byte beyond the object
				;      string,
				;      else address of the object string
				; R2 = If match occurred, the number of
				;      bytes remaining at the source
				;      string after the match,
				;      else 0
				; R3 = If match occurred, the address of
				;      one byte beyond the last byte
				;      matched,
				;      else address of one byte beyond
				;      the source string.
				;
	BNEQ	10$		; branch if no match found
	MOVZWL	R5, R0		; R0 = len src - len sub
	SUBL	R2, R0		; R0 = len src - len sub - # char left
				; to scan = rel. pos. of 1st char of sub
	INCL	R0		; wants 1-origin, not 0-origin position.
	RET			; R0 = relative position


;+
; Here when sub_string not found
;-

10$:	CLRL	R0			; R0 = 0 to indicate not found
	RET				; return

	.END				; End of module LIB$INDEX
