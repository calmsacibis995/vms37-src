MODULE LIB$DO_COMMAND (			! Perform a command

	IDENT = '1-008'		! File: LIBDOCOM.B32 Edit: SBL1008

		      ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General library
!
! ABSTRACT:
!
!	This module causes the current program to end and a command
!	to be executed.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 13-NOV-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  JBS 26-NOV-1979
! 1-002	- Correct entry point name.  JBS 27-NOV-1979
! 1-003	- Change STR$ codes to LIB$ codes.  JBS 22-JAN-1980
! 1-004 - Restrict command string to 132 bytes, since that's all that
!	  DCL can handle.  SBL 27-Jan-1981
! 1-005 - Remove use of process common, unnecessary.  SBL 27-Jan-1981
! 1-006 - Enhance to recognize additional classes of string descriptors
!	  by invoking LIB$ANALYZE_SDESC_R3 to extract length and
!	  address of 1st data byte of descriptor.  RKR 27-MAY-1981.
! 1-007 - Redirect jsb's from LIB$ANALYZE_SDESC_R3 to
!	  LIB$ANALYZE_SDESC_R2.  RKR 18-NOV-1981
! 1-008 - Use CLI$C_SRVDESC.  Report LIB$_NOCLI and LIB$_UNECLIERR when
!	  necessary.  SBL 18-Dec-1981
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
		(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
    REQUIRE 'RTLIN:STRLNK';	! linkage for LIB$ANALYZE_SDESC_R2
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$DO_COMMAND;		! End this program and do a command

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';		! Macros for defining PSECTs

LIBRARY 'RTLSTARLE';				! System symbols

REQUIRE 'RTLML:CLIMSG';			! CLI$_ messages

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (LIB);		! Declare psects for LIB$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2 : LIB$ANALYZE_SDESC_JSB_LINK, ! Extract length
						       ! and address of
						       ! 1st data byte
						       ! from descrip.
    SYS$CLI;			! Call the command language interpreter


!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    LIB$_INVARG,			! Invalid argument
    LIB$_NOCLI,				! No CLI to perform function
    LIB$_UNECLIERR;			! Unexpected CLI error


GLOBAL ROUTINE LIB$DO_COMMAND (		! Do a command

	CMD_TEXT			! Text of command to execute

			      ) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Stop running this program and do a command.
!
! CALLING SEQUENCE:
!
!	status.wlc.v =  LIB$DO_COMMAND (CMD_TEXT.rt.dx)
!
! FORMAL PARAMETERS:
!
!	CMD_TEXT.rt.dx	The text of the command to be executed.
!			max of 132 bytes.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	LIB$_INVARG if string is longer than 132 bytes
!		    or error in CMD_TEXT descriptor.
!
! SIDE EFFECTS:
!
!	Does not normally return to its caller.
!
!--

    BEGIN

    MAP
	CMD_TEXT : REF BLOCK [8, BYTE];

    LOCAL
	RET_STATUS: BLOCK [4, BYTE],		! Status returned
	CLI_REQ_BLOCK : BLOCK [CLI$K_SRVDESC, BYTE], ! CLI service block
	DESC_ADDR : REF BLOCK [8, BYTE],	! Pointer to descriptor
						! in req block
	CMD_TEXT_LEN,				! Length of the command
						! line provided.
	CMD_TEXT_ADDR;				! Address of 1st data
						! byte in command line
						! provided.

!+
! Get length and address of 1st data byte in command line provided.
! If descriptor invalid, return the status returned by
! LIB$ANALYZE_SDESC_R2.
!-
    IF NOT (RET_STATUS = LIB$ANALYZE_SDESC_R2 ( .CMD_TEXT ;
						CMD_TEXT_LEN,
						CMD_TEXT_ADDR ) )
    THEN RETURN (.RET_STATUS) ;

!+
! Don't allow too long a string.
!-
    IF (.CMD_TEXT_LEN GTRU 132) THEN RETURN (LIB$_INVARG);

!+
! Initialize CLI command request block.
!-
    CH$FILL (0, CLI$K_SRVDESC, CLI_REQ_BLOCK);
    CLI_REQ_BLOCK [CLI$B_RQTYPE] = CLI$K_CLISERV;	! Request a 
							! service
    CLI_REQ_BLOCK [CLI$W_SERVCOD] = CLI$K_COMMAND;	! Service is 
							! "pass command
							! line"
    DESC_ADDR = CLI_REQ_BLOCK [CLI$Q_RQDESC];

!+
! Fill in the descriptor
!-
    DESC_ADDR [DSC$W_LENGTH] = .CMD_TEXT_LEN;
    DESC_ADDR [DSC$A_POINTER] = .CMD_TEXT_ADDR;

    RET_STATUS = SYS$CLI (CLI_REQ_BLOCK);

    IF  NOT .RET_STATUS
    THEN
	BEGIN
	IF .RET_STATUS [STS$V_FAC_NO] EQL CLI$_FACILITY
	THEN
	    BEGIN
	    IF .RET_STATUS EQLU CLI$_INVREQTYP
	    THEN
		RETURN LIB$_NOCLI
	    ELSE
		RETURN LIB$_UNECLIERR;
	    END
	ELSE
	    RETURN .RET_STATUS;
	END;

!+
! Now, to get the command to be executed, we must exit.
!-
    $EXIT (CODE = SS$_NORMAL);
!+
! Its not likely that we'll get back from a call to $EXIT, but BLISS 
! doesn't know that, so it insists that we return a value.
!-

    RETURN (0);
    END;				! end of LIB$DO_COMMAND

END					! end of module LIB$DO_COMMAND

ELUDOM
