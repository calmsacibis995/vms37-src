!
! VAX/VMS LIB facility errorrs.				EDIT: RKR1002
!
2 LIB
VAX-11 Common Run-Time Library error messages
3 ATTCONSTO
 attempt to continue from stop

 A handler attempted to continue from a call to
 LIB$STOP.
3 BADSTA
 bad stack

 When scanning the process stack, a stack frame was
 found to be invalid or inaccessible.  The user
 program probably had written on the stack frame.
3 DECOVF
 decimal overflow

 A decimal overflow was detected.
 Either the library routine or the hardware detected the
 error.
3 DESSTROVF
 destination string overflow

 The destination string was overflowed, and the operation
 did not justify return of a warning, but a fatal error.
 For example if source data to LIB$CVT_DX_DX is an atomic
 data type and the destination is a Numeric Byte Data 
 String, then if the destination string is not large
 enough to contain the converted number this error is
 returned.
3 FATERRLIB
 fatal error in library

 An internal consistency check failed in the
 general library. This usually indicates a
 programming error in the Run-Time Library and should
 be reported to DIGITAL.
3 FLTOVF
 floating overflow

 A floating underflow was detected.
 Either the library routine or the hardware detected the
 error.
3 FLTUND
 floating underflow

 A floating underflow was detected.
 Either the library routine or the hardware detected the
 error.
3 INSVIRMEM
 insufficient virtual memory

 A call to LIB$GET_VM failed because the user
 program exceeded the image quota for virtual
 memory. This quota can be increased by a suitably
 privileged command.
3 INTLOGERR
 internal logic error

 A general library procedure detected an internal
 logic error. Such a condition should be reported to
 DIGITAL.
3 INTOVF
 integer overflow

 An integer overflow was detected.
 Either the library routine or the hardware detected the
 error.
3 INVARG
 invalid argument(s)

 A calling program passed one or more invalid
 arguments to a general library procedure.
3 INVCLADSC
 invalid class in descriptor

 This class of descriptor is not supported by the
 routine. 
3 INVCLADTY
 invalid class and data type combination

 This combination of class and data type, passed in
 descriptor, is not supported by the routine.
3 INVCVT
 invalid conversion

 An invalid conversion was detected.  For example 
 LIB$CVT_DX_DX can return this error when the source
 data is negative and the destination data type is an
 unsigned data type.
3 INVDTYDSC
 invalid data type in descriptor

 This data type, passed in descriptor, is not
 supported by the routine.
3 INVNBDS
 invalid Numeric Byte Data String

 Numeric Byte Data Strings are defined in documentation
 of LIB$CVT_DX_DX routine.  This error indicates that 
 the string of bytes indicated to be NBDS, is not NBDS.
3 OUTSTRTRU
 output string truncated

 As a result of moving a string from source to destination
 truncation occurred.  This is a warning.  
3 ROPRAND
 reserved operand

 A reserved operand was detected.
 Either the library routine or the hardware detected the
 error.
3 SIGNO_ARG
 signal with no arguments

 LIB$SIGNAL or LIB$STOP was called with no
 arguments.
3 STRIS_INT
 String is interlocked

 Explanation:   Message.  Code  being executed at  AST level
 attempted writing into a string that was being written into
 or  whose  length  was  being  used  for length computation
 immediately before the AST.

 User Action:   The user should not write to strings at  AST
 level that are used at non-AST level or in other  AST-level
 processing.  If it is necessary to use the same strings for
 interrupt routines, then the user should disable ASTs while
 string assignments are in progress.
3 USEFLORES
 use of floating reserved operand

 The executing image has accessed a reserved floating
 operand which has been fixed up by the library
 procedure LIB$FIXUP_FLT to positive zero so that the
 program may continue.
3 WRONUMARG
 Wrong number of arguments

 One or more required parameters was not supplied on a
 procedure call.  Check documentation for the calling
 sequence and review call instruction in your program.
