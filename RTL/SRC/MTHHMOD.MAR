	.TITLE	MTH$HMOD - H floating modulus
	.IDENT	/1-003/		; File: MTHHMOD.MAR  Edit: SBL1003

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routine MTH$HMOD:
;	Returns the value:
;		arg1 - (int(arg1/arg2))*arg2
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 21-August-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of MTH$HMOD
;
; 1-001 - Original.  SBL 21-Aug-1979
; 1-002 - Add check for loss of significance.  SBL 18-Sept-1979
; 1-003 - Don't store reserved operand before signal.  SBL 7-Feb-1980

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	NONE
;

;
; EXTERNAL SYMBOLS:
	.DSABL	GBL
	.EXTRN	MTH$K_SIGLOSMAT		; Significance lost error
	.EXTRN	MTH$$SIGNAL		; Signal Math error
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;
	K_BIAS		= 16384		; Exponent bias for G_floating
	K_PRECISION	= 113		; Fraction precision in bits
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	MTH$HMOD - H REAL*16 remainder

;++
; FUNCTIONAL DESCRIPTION:
;	Return the remainder of arg1/arg2 in H REAL*16 format
;	Remainder = arg1 - (int(arg1/arg2))*arg2
;
;
; CALLING SEQUENCE:
;	CALL MTH$HMOD (remainder.wh.r, dividend.rh.r, divisor.rh.r)
;	
;
;
; INPUT PARAMETERS:
	dividend	= 8	; REAL*16 dividend
	divisor		= 12	; REAL*16 divisor
;	
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
	remainder	= 4	; REAL*16 remainder
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	MTH$_SIGLOSMAT - Significance loss in math library.  If the
;	  quotient of arg1/arg2 is greater in magnitude than the
;	  precision of the datatype. (2**112 for G_floating)
;	  If this occurs, the default result is the reserved operand.
;	  Before the error is signalled, the reserved operand is stored
;	  both in the result location and in R0-R3.  If a condition
;	  handler causes execution to continue, the value in R0-R3
;	  is then moved to the result.  This means that a condition
;	  handler can alter the function value by altering the saved
;	  R0-R3.
;	SS$_ROPRAND - Reserved operand fault
;	SS$_FLTOVF, SS$_FLTOVF_F - Floating overflow trap/fault
;	
;
;--



	.ENTRY	MTH$HMOD,	^M<R2,R3,R4,R5,R6,R7>
	DIVH3	@divisor(AP), @dividend(AP), R0	; R0-R3 = arg1/arg2
;
;   Check the quotient to see if we have lost any significant bits.
;   If we have, signal error MTH$_SIGLOSMAT.
;
	CMPZV	#0, #15, R0, #<K_BIAS+K_PRECISION>
	BGEQ	ERROR			; If so, its an error
	EMODH	#1, #0, R0, R4, R4	; R4-R7 = fract(arg1/arg2)
	SUBH2	R4, R0			; R0-R3 = int(arg1/arg2)
	MULH2	@divisor(AP), R0	; R0-R3 = int(arg1/arg2)*arg2
	SUBH3	R0, @dividend(AP), @remainder(AP)
					; result = arg1 - int(arg1/arg2)*arg2
	RET

;+
; Come here if significance has been lost.
;-
ERROR:
	ASHQ	#1, #15, R0		; R0-R3 = reserved operand
	CLRQ	R2
	MOVZBL	#MTH$K_SIGLOSMAT, -(SP)	; Error code
	CALLS	#1, G^MTH$$SIGNAL	; Signal the error
	MOVO	R0, @remainder(AP)	; Store possibly corrected result
	RET				; Return to caller

	.END
