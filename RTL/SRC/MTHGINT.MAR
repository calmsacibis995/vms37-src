	.TITLE	MTH$GINT - FLOATING TRUNCATION
	.IDENT	/1-004/		; File: MTHGINT.MAR  Edit: JAW1004

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routine MTH$GINT: 
;	Return truncated G floating argument.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 18-Jan-79: Version 1
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of MTH$GINT
;
; 1-001 - Original.  SBL 18-Jan-79
; 1-002	- Add a JSB entry point.  JBS 16-AUG-1979
; 1-003 - Change JSB entry to _R4 to reflect code that disables IV.
;	  SBL 26-Sept-1979
; 1-004 - Fix final operand of EMODG in MTH$GINT_R4 (should be R2).
;	  Also improve the next two instructions.  JAW 26-Nov-1980

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	NONE
;

;
; EXTERNAL SYMBOLS:
;	NONE
;

;
; MACROS:
	$PSLDEF				; PSL macros
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	MTH$GINT	G to G truncation

;++
; FUNCTIONAL DESCRIPTION:
;
;	Returns the argument with all zeroes to the right of the radix
;	point.
;
; CALLING SEQUENCE:
;
;	Truncation.wg.v = MTH$GINT (arg.rg.r)
;
; INPUT PARAMETERS:
;
;	The one argument is a G floating-point value
;	and is call-by-reference.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	Reserved Operand exception can occur.	
;
;--
	.ENTRY	MTH$GINT,	^M<>
	EMODG	@4(AP), #0, #1, R0, R0	; R0/R1 = fraction_part(arg)
	SUBG3	R0, @4(AP), R0		; R0/R1 = integer_part(arg)
	RET


	.SBTTL	MTH$GINT_R4	JSB entry point

;++
; FUNCTIONAL DESCRIPTION:
;
;	Returns the argument with all zeroes to the right of the radix
;	point.
;
; CALLING SEQUENCE:
;
;	Truncation.wg.v = MTH$GINT_R4 (arg.rg.v)
;
; INPUT PARAMETERS:
;
;	The one argument is a G floating-point value
;	and is call-by-value.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	Reserved Operand exception can occur.
;
;--
MTH$GINT_R4::				; Argument in R0/R1
	MOVPSL	R4			; Save PSL
	BICPSW	#PSL$M_IV		; Clear IV
	EMODG	R0, #0, #1, R2, R2	; R2/R3 = fraction_part(arg)
	SUBG2	R2, R0			; R0/R1 = integer_part(arg)
	BICW	#^C<PSL$M_IV>, R4	; Clear all but IV in saved PSW
	BISPSW	R4			; Restore IV to original state
	RSB				; Return to caller

	.END
