!+
! This file, BPAMSGDEF.REQ, defines the data structures for message
! send/receive.
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
! Edit history:
!
! 1-001	- Original, from MSGDEF.R32, from ESE.  JBS 02-OCT-1979
! 1-002	- Remove the REQUIRE and the protection against requiring this
!	   file several times.  JBS 02-OCT-1979
! 1-003 - Add copyright notice.  SBL 11-Mar-1980
!--

!
! definition of data structure for message send/receive
!

FIELD msg$fields =
    SET
    msg$l_messchan = [0, L_],		! Receiver channel to mailbox
    msg$t_namedesc = [4, A_],		! Char. string descr. of logical
					! name of receiver
    msg$t_rcvname  = [12, A_],		! Logical name of receiver
    msg$t_buffer   = [22, A_],		! Message buffer
    msg$l_bufptr   = [554, L_],		! Pointer for message buffer
    msg$l_remain   = [558, L_]		! Number of bytes that remains
					! to be transf. from buffer
    TES;

LITERAL
    msg$k_length  = 562;

MACRO
    $msg_def = BLOCK [msg$k_length, BYTE] FIELD (msg$fields)
	       INITIAL (REP msg$k_length OF BYTE (0)) % ;

! End of file BPAMSGDEF.REQ
