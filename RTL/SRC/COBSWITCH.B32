MODULE COB$SWITCH(
		IDENT = '1-005'			! file: COBSWITCH.B32
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	COBOL SUPPORT
!
! ABSTRACT
!
!	Reads switches
!
!
! ENVIRONMENT:	Vax-11 User Mode
!
! AUTHOR: MLJ , CREATION DATE: 16-JAN-79
!
! MODIFIED BY:
!
! 1-001 - Original. MLJ  16-JAN-79
! 1-002 - Added boilerplate and comments. RKR 23-AUG-1979
! 1-003 - Change symbolic name of LIBRARY file. RKR 1-OCT-79
! 1-004 - Cosemtic changes.  RKR 18-OCT-79
! 1-005 - Fix typo from 4.  RKR 20-OCT-79
!
!--

!<BLF/PAGE>

!
! SWITCHES
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES
!
LINKAGE
    L = JSB : GLOBAL(PTR=2, CNT=3, DIG=4);
!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE

	GET_DIGIT : L ;
!
! INCLUDE FILES
!
REQUIRE 'RTLIN:RTLPSECT' ;		! Macros to declare psects
LIBRARY 'RTLSTARLE';

!
! MACROS
!
!	NONE
!
! EQUATED SYMBOLS
!
!	NONE
!
! PSECT DECLARATIONS:
!

DECLARE_PSECTS (COB) ;			! Declare psects for COB$ facility


GLOBAL ROUTINE COB$SWITCH(NUMBER)=
!
!++	FUNCTIONAL DESCRIPTION
!
!
! See C79RTLREQ for specification
!
!
! FORMAL PARAMETERS:
!
!	NUMBER
!
! IMPLICIT INPUTS:
!
!	Logical name table
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!	1	Success
!	0	Failure
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--
!
    BEGIN
    LOCAL
	BUFFER:		VECTOR[64,BYTE],	! Returned equivalence string
	BUFDESC:	VECTOR[2],		! Descriptor for BUFFER
	NAMDESC:	VECTOR[2],		! Descriptor for logical name
	LENGTH:		WORD;			! Length of equivalence string
    GLOBAL REGISTER
	PTR=2, CNT=3, DIG=4;


    BUFDESC[0] = 64;				! Set up descriptors
    BUFDESC[1] = BUFFER;			!     ...
    NAMDESC[0] = 12;				!     ...
    NAMDESC[1] = UPLIT('COB$SWITCHES');		!     ...


    IF NOT $TRNLOG(				! Translate COB$SWITCHES
	LOGNAM=NAMDESC, RSLLEN=LENGTH, RSLBUF=BUFDESC)
    THEN
	RETURN 0;


    PTR = BUFFER;				! Set up global registers
    CNT = .LENGTH;				!     ...


    WHILE 1 DO
	BEGIN LOCAL VAL;
	!
	! Skip leading non-digits
	!
	WHILE (IF .CNT GTR 0 THEN NOT GET_DIGIT() ELSE RETURN 0) DO 0;
	!
	! Remember first digit
	!
	VAL = .DIG;
	!
	! Scan over digits to next non-digit, computing value in VAL
	!
	WHILE (IF .CNT GTR 0 THEN GET_DIGIT() ELSE 0) DO VAL = .VAL * 10 + .DIG;
	!
	! Check VAL against desired switch
	!
	IF .VAL EQL .NUMBER THEN RETURN 1;
	END;


    RETURN 0;
    END;

!<BLF/PAGE>

ROUTINE GET_DIGIT: L=
!
!++	FUNCTIONAL DESCRIPTION
!
!
! Get next character from string, returning:
!		PTR advanced to next character
!		CNT decremented
!		DIG containing the character less %C'0'
!		Value true if and only if the character was a digit
!
!
! FORMAL PARAMETERS:
!
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--
!
    BEGIN
    EXTERNAL REGISTER
	PTR, CNT, DIG;
    LOCAL
	VAL;

    VAL = 0;					! Assume false value
    DIG = .(.PTR)<0,8>;				! Fetch character
    PTR = .PTR + 1;				! Advance pointer
    CNT = .CNT - 1;				! Decrement count
    DIG = .DIG - %C'0';				! Bias character
    IF .DIG LEQU 9 THEN VAL = .VAL + 1;		! Set true value if need be
    .VAL					! Return the value
    END;
END ELUDOM
