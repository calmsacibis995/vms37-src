MODULE BAS$FREE (				! Basic FREE construct
		IDENT = '1-003'			! File: BASFREE.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:
!	Basic support library - user callable
!
! ABSTRACT:
!	This module is the UPI level of the Basic FREE construct.
!	This module will setup the I/O data base for the LUN and go directly to
!	the REC level.
!
!
! ENVIRONMENT:
!	User access mode - AST reentrant.
!
! AUTHOR: Donald G. Petersen, CREATION DATE: 28-Feb-79
!
! MODIFIED BY:
!
!	DGP, 28-Feb-79 : VERSION 01
! 1-001	- original.  DGP 28-Feb-79
! 1-002 - Change the name of the REC level to FEE due to conflict with
!	  FIND relative.  DGP 02-Mar-79
! 1-003	- Set up ISB$A_USER_FP.  JBS 25-JUL-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES
!

REQUIRE 'RTLIN:OTSLNK';				! Define all linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$FREE : NOVALUE;				! UPI level Sequential FREE

!
! INCLUDE FILES:
!

REQUIRE 'RTLML:OTSISB';				! ISB definitions

REQUIRE 'RTLML:OTSLUB';				! LUB definitions

REQUIRE 'RTLIN:RTLPSECT';			! Define DECLARE_PSECTS macro

LIBRARY 'RTLSTARLE';				! Starlet system macros

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
!
! PSECT DECLARATIONS:
!
DECLARE_PSECTS (BAS);
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$STOP_IO : NOVALUE,			! Signal fatal BASIC I/O error
    BAS$$REC_FEE : JSB_REC0 NOVALUE,		! REC level processing - RMS interface
    						! FREE
    BAS$$CB_PUSH : JSB_CB_PUSH NOVALUE,		! Load register CCB
    BAS$$CB_POP : JSB_CB_POP NOVALUE;		! Done with register CCB

!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    BAS$K_IO_CHANOT : UNSIGNED (8);		! I/O channel not open


GLOBAL ROUTINE BAS$FREE (			! FREE sequential
	UNIT					! logical unit number
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine will set up the I/O data base for this LUN if necessary
!	and then go directly to the REC level.  When control is returned to
!	this routine, it pops the CCB off of the I/O system.  The actual inter-
!	face to RMS is done at the REC level.  All locked records are unlocked.
!
! FORMAL PARAMETERS:
!
!	UNIT.rlu.v	logical unit number
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	ISB$B_STTM_TYPE		the statement type
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    BUILTIN
	FP;

    GLOBAL REGISTER
	CCB = K_CCB_REG : REF BLOCK [, BYTE];

    LOCAL
	FMP : REF BLOCK [, BYTE];

    FMP = .FP;
!+
! Allocate the LUB/ISB/RAB for this unit if necessary.  Store new CB (con-
! trol block) in OTS$$A_CUR_LUB.  Store signed unit number in LUB$W_LUN.
!-
    BAS$$CB_PUSH (.UNIT, LUB$K_ILUN_MIN);
    CCB [ISB$A_USER_FP] = .FMP [SF$L_SAVE_FP];
!+
! If the channel is not open, give an error message.
! FREE is not permitted on channel 0.
!-

    IF ( NOT .CCB [LUB$V_OPENED]) THEN BAS$$STOP_IO (BAS$K_IO_CHANOT);

!+
! Now that the data base is in place, store the statement type and  go
! directly to the REC level.
!-
    CCB [ISB$B_STTM_TYPE] = ISB$K_ST_TY_FEE;
    BAS$$REC_FEE ();
!+
! Now that the FREE has been done, pop the CCB off the I/O system.
!-
    BAS$$CB_POP ();
    END;					!End of BAS$FREE

END						! End of module BAS$FREE

ELUDOM
