MODULE BAS$INIT_IOL (				! Initiate immediate frame
		IDENT = '1-007'			! File: BASINIIOL.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!

!++
! FACILITY:  BASIC-PLUS-2 Frame Support
!
! ABSTRACT:
!
!	These routines set up and tear down frames for BASIC-PLUS-2.
!	Frames are used for main routines, external functions,
!	external subroutines, internal functions (both DEFs and DEF*s)
!	internal subroutines (GOSUBs), condition handlers and immediate
!	mode code.
!
! ENVIRONMENT:  VAX-11 user mode
!
! AUTHOR: John Sauter, CREATION DATE: 08-Feb-1979
!
! MODIFIED BY:
!
! 1-001	- Original from BAS$INIT_GOSUB.  JBS 08-Feb-1979
! 1-002	- Convert BAS$ to BSF$ prefixes for stack frame.  JBS 08-FEB-1979
! 1-003	- If the caller is not a BASIC frame, just CALL the print list.
!	   JBS 14-FEB-1979
! 1-004	- Change from I/O List to Immediate On-Line.  JBS 10-SEP-1979
! 1-005	- Set the IV bit in the PSW if reqested.  JBS 11-SEP-1979
! 1-006	- Give an error if the specified root frame is not a BASIC
!	   frame.  JBS 15-SEP-1979
! 1-007	- Correct a comment.  JBS 07-NOV-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

LINKAGE
    BAS$IOLIST_JSB = JSB : 			!
    GLOBAL (BSF$A_MAJOR_STG = 11, BSF$A_MINOR_STG = 10, BSF$A_TEMP_STG = 9)	!
    NOPRESERVE (8, 7, 6, 5, 4, 3, 2, 1, 0);

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$INIT_IOL : NOVALUE;			! start immediate mode code

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! macros for defining psects

REQUIRE 'RTLIN:BASFRAME';			! Define frame structure

LIBRARY 'RTLSTARLE';				! Define system symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$STOP : NOVALUE,			! Signal a fatal BASIC error
    BAS$HANDLER;				! handles signals

!+
! The following are the error codes used in this module:
!-

EXTERNAL LITERAL
    BAS$K_SYNERR : UNSIGNED (8);		! Syntax error


GLOBAL ROUTINE BAS$INIT_IOL (			! start immediate mode code
	NEW_PC, 				! place to start
	ROOT_FMP				! root frame
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Set up a frame for immediate mode code.  The frame is
!	allocated on the stack.  R11, R10 and R9 are set up from
!	the root's frame, which is the frame which contains the
!	symbols known to the keyboard monitor.
!
! FORMAL PARAMETERS:
!
!	NEW_PC.ra.v	PC of the immediate mode code.
!	ROOT_FMP.ra.v	Address of the frame which contains the variables
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Leaves lots of things on the stack for use by the compiled
!	BASIC-PLUS-2 code.  These things will be removed by
!	the compiled RET instruction.
!
!--

    BEGIN

    GLOBAL REGISTER
	BSF$A_MAJOR_STG = 11,
	BSF$A_MINOR_STG = 10,
	BSF$A_TEMP_STG = 9;

    BUILTIN
	FP,
	SP,
	BISPSW;

    MAP
	ROOT_FMP : REF BLOCK [0, BYTE] FIELD (BSF$FCD);	! pointer to FCD

!+
! Define local variables as registers.  We connot have any stack
! locals since we manipulate the stack pointer in this routine.
!-

    REGISTER
	FMP : REF BLOCK [0, BYTE] FIELD (BSF$FCD);	! points to our frame

!+
! If the root frame is not a BASIC frame, we have an error.
!-

    IF (.ROOT_FMP [BSF$A_HANDLER] NEQA BAS$HANDLER) THEN BAS$$STOP (BAS$K_SYNERR);

!+
! Load R9, R10 and R11 for the immediate mode code.
!-
    BSF$A_MAJOR_STG = .ROOT_FMP [BSF$A_BASE_R11];
    BSF$A_MINOR_STG = .ROOT_FMP [BSF$A_BASE_R10];
    BSF$A_TEMP_STG = .ROOT_FMP [BSF$A_BASE_R9];
!+
! Allocate frame control data.
!-
    FMP = .FP;
    SP = .FMP - BSF$K_LENFCDIOL;
!+
! Initialize the parts of the FCD relavent to immediate mode code.
!-
    FMP [BSF$A_MARK] = 0;
    FMP [BSF$A_BASE_SP] = .SP;
    FMP [BSF$A_BASE_R11] = .BSF$A_MAJOR_STG;
    FMP [BSF$A_BASE_R10] = .BSF$A_MINOR_STG;
    FMP [BSF$A_BASE_R9] = .BSF$A_TEMP_STG;
!+
! The "PROCEDURE ID" is the address of the start of the immediate mode code.
!-
    FMP [BSF$A_PROC_ID] = .NEW_PC;
!+
! Copy the frame flags from the root frame.
!-
    FMP [BSF$W_FCD_FLAGS] = .ROOT_FMP [BSF$W_FCD_FLAGS];
!+
! Mark this is an immediate mode frame.  The error handler will not let
! ON ERROR GO BACK propagate beyond this point.
!-
    FMP [BSF$B_PROC_CODE] = BSF$K_PROC_IOL;
!+
! Set the frame length field.
!-
    FMP [BSF$B_LEN_FCD] = BSF$K_LENFCDIOL;
!+
! Set the integer overflow enable bit in the PSW if the root program
! has integer overflow enabled.
!-

    IF ((.FMP [BSF$W_FCD_FLAGS] AND BSF$M_FCD_IV) NEQ 0) THEN BISPSW (%REF (PSW$M_IV));

!+
! Set up the handler address to mark this as a BASIC frame and for
! VAX/VMS CHF.
!-
    FMP [BSF$A_HANDLER] = BAS$HANDLER;
!+
! Branch to the compiled code.  This code will issue a RET instruction
! rather than returning.
!-
    BAS$IOLIST_JSB (.NEW_PC);
    END;					! of BAS$INIT_IOL

END

ELUDOM
