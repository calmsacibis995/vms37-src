	.TITLE	COB$MULQ_R8	COBOL Multiply Quadwords
	.IDENT	/1-006/		; File: COBMULQ.MAR

;
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;
; FACILITY: COBOL ARITHMETIC
;++
; ABSTRACT:
;	This module contains the routine which multiplies two
;	quadwords, producing a quadword result.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	John Sauter, 22-DEC-78
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of COBMULQ
;
; 1-001	- Original from Architecture Handbook, page 6-28.
; 1-002	- Correct some comments.  JBS 26-DEC-78
; 1-003	- Make the entry point symbol global.  JBS 03-JAN-1979
; 1-004 - Minor cleanups.  MLJ 10-Mar-1979
; 1-005 - Make overlapping input and output operands work correctly.
;	  RKR 24-SEPT-79
; 1-006 - Cosmetic changes.  RKR 21-OCT-79

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
;	NONE
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_COB$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	COB$MULQ_R8

;++
; FUNCTIONAL DESCRIPTION:
;
;	Multiplies two quadwords, producing a quadword result.
;	There is no check for overflow; the low-order 64 bits
;	are returned.
;
; CALLING SEQUENCE:
;
;	JSB COB$MULQ_R8 (multiplier.rq.r, multiplicand.rq.r, product.wq.r)
;
;	Arguments are passed in R6, R7 and R8.
;
; INPUT PARAMETERS:
;	
;	MULTIPLIER.rq.r		Value to the right of the *
;	MULTIPLICAND.rq.r	Value to the left of the *
;
; IMPLICIT INPUTS:
;
;	All of the trap bits in the PSL are assumed off.
;
; OUTPUT PARAMETERS:
;
;	PRODUCT.wq.r		The result of the multiply.
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	Destroys registers R0 through R8.
;	
;--

COB$MULQ_R8::
	EMUL	(R6),(R7),#0,R4	; Multiply low half - Result to R4,R5
	MULL3	4(R6),(R7),R0		; Form cross products
	MULL3	(R6),4(R7),R1		;
	ADDL2	R1,R0			; Sum cross products
	BBC	#31,(R6),10$		; Compensate for unsigned bias
	ADDL2	(R7),R0			;
10$:	BBC	#31,(R7),20$		; Compensate for unsigned bias
	ADDL2	(R6),R0			;
20$:	ADDL2	R0,R5			; Add in cross product
	MOVQ	R4,(R8)			; Return result
	RSB				; Return
;
	.END
