MODULE BAS$CLOSE (				! Close a BASIC file
		IDENT = '1-007'			! File: BASCLOSE.B32 EDIT:PL1007
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  BASIC-PLUS-2 I/O SUPPORT
!
! ABSTRACT:
!
!	This module contains the routine which closes a file for
!	a BASIC program.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 16-FEB-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  JBS 16-FEB-1979
! 1-002	- Use BASIOERR.REQ to define the I/O error codes.  JBS 20-FEB-1979
! 1-003	- Set up ISB$A_USER_FP.  JBS 25-JUL-1979
! 1-004	- Purge the I/O buffer explicitly, since OTS$$CLOSE_FILE doesn't
!	   any more.  JBS 27-AUG-1979
! 1-005	- If the file has had more than one stream connected to it, disconnect
!	   the other streams.  JBS 28-SEP-1979
! 1-006 - Call BAS$FIELD_CLOSE to remove fielded variables from
!	  the symbol table, in case the compiler doesn't. PLL 2-JUN-81
! 1-007 - Remove the call to BAS$FIELD_CLOSE, as it is unshared and BAS$CLOSE
!	  is shared.  PL 16-Jun-81
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!

REQUIRE 'RTLIN:OTSLNK';				! Define all the linkages

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$CLOSE : NOVALUE;			! Close a file from BASIC

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Macros for defining psects

REQUIRE 'RTLML:OTSLUB';				! Define symbols in the LUB

REQUIRE 'RTLML:OTSISB';				! Define symbols in the ISB

REQUIRE 'RTLIN:BASIOERR';			! Define the I/O error codes.

LIBRARY 'RTLSTARLE';				! Define system symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
!	NONE
!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! Declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    BAS$$CB_PUSH : JSB_CB_PUSH NOVALUE,		! Load register CCB
    BAS$$CB_POP : JSB_CB_RET NOVALUE,		! Done with register CCB
    BAS$$STOP_IO : NOVALUE,			! signals fatal I/O error
    BAS$$PUR_IO_CLO : CALL_CCB,			! Purge I/O buffer
    BAS$$CLOSE_ALL : NOVALUE,			! Close all files with a certain IFI
    OTS$$CLOSE_FILE;				! RMS Close a file

!+
! The following are the error codes used in this module.
!-

EXTERNAL LITERAL
    BAS$K_PROLOSSOR : UNSIGNED (8);		! Program lost, sorry



GLOBAL ROUTINE BAS$CLOSE (			! Close a file
	CHANNEL					! The BASIC channel number
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Close an I/O channel from a BASIC-PLUS-2 program.
!
! FORMAL PARAMETERS:
!
!	CHANNEL.rl.v	The number of an open channel, which is to
!			be closed.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	Closes the specified channel.
!
!--

    BEGIN

    BUILTIN
	FP;

    GLOBAL REGISTER
	CCB = K_CCB_REG : REF BLOCK [, BYTE];

    LOCAL
	FMP : REF BLOCK [, BYTE];

    FMP = .FP;
!+
! For compatability with the PDP-11 implementations, an attempt to
! CLOSE channel 0 is a no-operation.
!-

    IF (.CHANNEL NEQ 0)
    THEN
	BEGIN
	
!+
! Set up register CCB to point to the LUB/ISB/RAB for this channel.
!-
	BAS$$CB_PUSH (.CHANNEL, LUB$K_LUN_MIN);
	CCB [ISB$A_USER_FP] = .FMP [SF$L_SAVE_FP];
!+
! Purge the I/O buffer.  This will only happen on a non-forcible device
! on which the last PRINT statement ended with a comma or semicolon.
!-
	BAS$$PUR_IO_CLO ();
!+
! RMS CLOSE the file, if it is open.
!-

	IF (.CCB [LUB$V_OPENED])
	THEN
	    BEGIN
!+
! If the file might have other streams connected, disconnect them.
!-

	    IF (.CCB [LUB$V_M_STR_C]) THEN BAS$$CLOSE_ALL (.CCB [LUB$W_IFI]);

	    IF ( NOT OTS$$CLOSE_FILE ()) THEN BAS$$STOP_IO (BAS$K_IOERR_REC);

	    END;

!+
! We are done with register CCB.  If this is the only use of this channel
! (as is likely), then the LUB/ISB/RAB will be deallocated.
!-
	BAS$$CB_POP ();
	END;

    END;					! end of BAS$CLOSE

END						! end of module BAS$CLOSE

ELUDOM
