	.TITLE	MTH$HNINT  - Nearest Integer
	.IDENT	/1-002/		; File: MTHHNINT.MAR  EDIT: RH1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	This module contains routine MTH$HNINT:
;	Return the rounded H floating-point argument.
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 26-Jan-1979: Version 1
;
; MODIFIED BY:
;
;       R. Hanek, 9-DEC-1980
;
	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History for Version 1 of MTH$HNINT
;
; 1-001 - Adapted from MTH$DNINT version 1-001.  SBL 26-Jan-1979
; 1-002 - The original version computed the result as the argument minus
;	  the fractional part of (argument+sign(argument)*.5) which
;	  is not the correct algorithm.  The changes result in computing
;	  R0 as the argument + sign(argument)*.5 and the result as
;	  R0 minus the fractional part of R0.  Specificly, the entry mask
;	  was expanded to include R4-R7; the last two operands of the 
;	  EMODH instruction were chaneged from R0 to R4; and the first two
;         operands of SUBH3 were change from R0 and @8(AP) to R4 and R0
;         respectively.  RNH 9-DEC-1980
;

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;	NONE
;

;
; EXTERNAL SYMBOLS:
;	NONE
;

;
; MACROS:
;	NONE
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;	NONE
;

;
; OWN STORAGE:
;	NONE
;

	.SBTTL	MTH$HNINT - return nearest integer as REAL*16

;++
; FUNCTIONAL DESCRIPTION:
;	Returns the rounded (away from zero) argument.
;
;
; CALLING SEQUENCE:
;
;	CALL MTH$HNINT (nearest_integer.wh.r, arg.rh.r)
;
;
; INPUT PARAMETERS:
;	The input parameter is a H floating-point value
;	and is call-by-reference.
;	
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	The result is passed back as the first argument by reference.
;	This is in accordance with the system standard for function
;	values greater than 64 bits.
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	Reserved Operand and Floating Overflow exceptions can occur.
;	
;
;--



	.ENTRY	MTH$HNINT, 	^M<R2,R3,R4,R5,R6,R7>
	ADDH3	#0.5, @8(AP), R0	; R0-R3 = arg + 0.5
	BGTR	1$			; branch if positive
	SUBH2	#1.0, R0		; R0-R3 = arg - 0.5
1$:	EMODH	R0, #0, #1, R4, R4	; R4-R7 = fraction_part(R0-R3)
	SUBH3	R4, R0, @4(AP)		; Result = integer_part(R0-R3)
	RET


	.END
