!					File: FORFMT.REQ  Edit: JAW1004
!+
! This file, FORFMT.REQ, defines symbols for the VAX-11 FORTRAN
! formatting routines.
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
! Revision History:
!
! 0-12	- Change name to FORFMT.REQ  JBS 14-NOV-78
! 1-001	- Add copyright notice and change version number  JBS 16-NOV-78
! 1-002 - Add FORTRAN-77 format codes.  SBL 09-Feb-1979
! 1-003	- Remove PRINT statement, for new BLISS compiler.  JBS 02-OCT-1979
! 1-004 - Add V_RC_TYPE_BYTE and V_RC_TYPE_WORD.  JAW 10-Aug-1981
!--
!
!+
! Define format code byte
!-

MACRO
    V_FMT_CODE = 0,0,7,0 %,	! 7-bit format code
    V_FMT_REPRE = 0,7,1,0 %;	! Optional representation byte present?

MACRO
	!+
	! Optional format representation byte:
	! The following are bits in the optional format representation
	! byte. The byte is copied into local BLOCK
	! B_FMT_REPRESENT. These flags indicate less
	! frequently used sizes of the format code representations.
	!-

	V_RC_TYPE = 0,0,2,0 %,	! Repeat count type:
				! 0 = not present, 1 = byte, 2 = word
	    V_RC_TYPE_BYTE = 0,0,1,0 %,
	    V_RC_TYPE_WORD = 0,1,1,0 %,
	V_W_WORD = 0,2,1,0 %,	! 0=W field is byte, 1=W field is word.
				! Bit 3 is reserved to DEC
	V_E_VFE = 0,4,1,0 %,	! E field is VFE
	V_D_VFE = 0,5,1,0, %,	! D field is VFE
	V_W_VFE = 0,6,1,0 %,	! W field is a VFE (ignore V_W_WORD)
	V_RC_VFE = 0,7,1,0 %;	! Repeat count field is a VFE
				! ignore V_RC_BYTE and V_RC_WORD)



!+
! Define format code symbols which are  is 2 or 3 characters so it plus comma will fit
! in between logical tabs.  One character symbols are prefixed with _ so 
! that they are two character symbols instead (so won't conflict with LOCALs).
!-

	LITERAL
		ER	= 0,	! 00	! Format syntax error - only from object time format compiler
		LP	= 1,	! 01	! ( - Format reversion point
		NLP	= 2,	! 02	! n( - Left paren of repeat group
		RP	= 3,	! 03	! ) - Right paren of repeat group
		EOF	= 4,	! 04	! ) - End of format
		SLS	= 5,	! 05	! / - Record separator
		DLR	= 6,	! 06	! $ - Dollar sign: terminal I/O
				! do not return to left margin
		CLN	= 7,	! 07	! : - Colon: terminate if end of list
				! so no trailing Holerith printed

		_S	= 9,	! 09	! S - Restore + optional
		SP	= 10,	! 0A	! SP - Force + on
		SS	= 11,	! 0B	! SS - Force + off
		_P	= 12,	! 0C	! sP - signed scale factor (-128 =< s =< +127).
		_T	= 13,	! 0D	! Tn - Tab Set (0 < n =< 32767)
		_X	= 14,	! 0E	! nX - Skip n columns (0 < n =< 32767
		_H	= 15,	! 0F	! nHcccc - Hollerith: n chars follow (0 < n =< 32767)
		BN	= 16,	! 10	! BN - Blanks are nulls
		BZ	= 17,	! 11	! BZ - Blanks are zeroes
		TL	= 18,	! 12	! TLc - Tab left c columns
		TR	= 19,	! 13	! TRc - Tab right c columns

		_Q	= 20,	! 14	! Q - no. of input chars left in record
		_A	= 21,	! 15	! nAw - Alpha numeric
		    _MIN_DATA = _A,	! Minimum I/O list transmitting data code
		_L	= 22,	! 16	! nLw - Locial
		    _MIN_INT = _L,	! Min. integer
		_O	= 23,	! 17	! nOw - Octal
		_I	= 24,	! 18	! nIw - Integer
		_Z	= 25,	! 19	! nZw - Hexadecimal
		XO	= 26,	! 1A	! Ow.m - Extended O
		XI	= 27,	! 1B	! Iw.m - Extended I
		XZ	= 28,	! 1C	! Zw.m - Extended Z
		    _MAX_INT = XZ,	! Max. integer (not counting defaults)

		_F	= 30,	! 1E	! nFw.d - Fixed format
		    _MIN_FLT = _F,	! Min. floating 
		_E	= 31,	! 1F	! nEw.d - Scientific notation format
		_G	= 32,	! 20	! nGw.d - General format
		_D	= 33,	! 21	! nDw.d - Double Precision format
		XE	= 34,	! 22	! nEw.dEe - Extended E
		XG	= 35,	! 23	! nGw.dEe - Extended G
		    _MAX_FLT = XG,	! max. floating (not counting default)
		    _MAX_DATA = XG,	! Max. data (not counting default)

	    !+
	    ! Default format codes:
	    !-

		_DA	= 41,	! 29	! nA - default A
		_DL	= 42,	! 2A	! nL - default L
		_DO	= 43,	! 2B	! nO - default O
		_DI	= 44,	! 2C	! nI - default I
		_DZ	= 45,	! 2D	! nZ - default Z

		_DF	= 50,	! 32	! nF - default F
		_DE	= 51,	! 33	! nE - default E
		_DG	= 52,	! 34	! nG - default G
		_DD	= 53;	! 35	! nD - default D

!+
! Note:	0  < n =< 32767 (decimal)
!	0  < w =< 65535 (decimal)
!	0 =< d =< 255 (decimal)
!	0 =< e =< 255 (decimal)
!-



!	End of file FORFMT.REQ
