MODULE COB$CANCEL (
		IDENT = '1-014'		! FILE: COBCANCEL.B32 EDIT:LB1014
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	COBOL SUPPORT
!
! ABSTRACT:	This procedure closes all open files related to the program
!		that is being cancelled, and restores any existing local
!		storage to its initial values.
!
! ENVIRONMENT:	Vax-11 User Mode
!
! AUTHOR: MLJ , CREATION DATE: 10-APR-1979
!
! MODIFIED BY:
!
! 1-001 - Original. MLJ  10-APR-1979
! 1-002 - Added boilerplate and comments. RKR 18-JULY-1979
! 1-003 - Added allocation and deallocation of event flag (EF).
!	  RKR
! 1-004 - Declare psects via macros.  RKR 11-SEPT-79
! 1-005 - Get image file definitons from 'RTLLIB'
!	  and psects from 'RTLIN:RTLPSECT'  RKR 18-SEPT-79
! 1-006 - Make it call COB$$RESTVA instead of SYS$RESTVA. RKR 24-SEPT-79
! 1-007 - Signal COB$_NAMNOTLIN if COB$$FIND_NAME fails. RKR 2-OCT-79
! 1-008 - Status check and cosmetic changes.  RKR 18-OCT-79
! 1-009 - Add code to close files that the subject routine has open
!	  at this point.  RKR 19-OCT-79
! 1-010 - Add error message on path where COB$$FINDNA returns a 0.
!	  RKR 21-OCT-79
! 1-011 - Changed code for accessing FAB from RAB.  Changed signalling
!	  behavior to signal only COB$_CANFAIL.
!	  RKR 29-OCT-79
! 1-012	- Added abstract, functional description and comments and made
!	  some cosmetic changes.  LB 02-MAR-81
! 1-013 - Added EDIT field for checkin's audit trail.  LB 29-JUL-81
! 1-014 - Added LIB$STOP as external routine.  LB 30-NOV-81
!
!--

!<BLF/PAGE>

!+
! SWITCHES
!-

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!+
! LINKAGES
!	-NONE
!-

!+
! TABLE OF CONTENTS:
!-

FORWARD ROUTINE

	COB$CANCEL : NOVALUE ;			

!+
! INCLUDE FILES
!-

! NOTE this module cannot be in sharable library.

REQUIRE 'RTLIN:RTLPSECT';			! Macros for psects
LIBRARY 'RTLLIB';				! Image file definitions
REQUIRE 'RTLIN:COBDEF';				! COBOL specific RTL macros and literals

!+
! MACROS
!	-NONE
!-

!+
! EQUATED SYMBOLS
!	-NONE
!-

!+
! PSECT DECLARATIONS:
!-

DECLARE_PSECTS (COB) ;				! Declare psects for COB$ facility

!+
! EXTERNAL REFERENCES
!-

EXTERNAL ROUTINE
	LIB$STOP:NOVALUE,				! Signal fatal error
	COB$$FIND_NAME : ADDRESSING_MODE (GENERAL) ,	! Find match for routine name
	LIB$GET_EF: ADDRESSING_MODE (GENERAL) ,		! Obtain an event flag
	LIB$FREE_EF: ADDRESSING_MODE (GENERAL) ,	! Return an event flag
	COB$$RESTVA : ADDRESSING_MODE (GENERAL) ;	!\Restore virtual addrs
							!/from image file

EXTERNAL LITERAL

	COB$_CANFAIL,					! CANCEL failed
	COB$_FAIGET_EF,					! Failed to get an event flag
	COB$_FATINTERR ;				! Fatal internal error

OWN
	CHANNEL:	WORD;

GLOBAL ROUTINE COB$CANCEL(DESC,LLIST): NOVALUE=


!++	
! FUNCTIONAL DESCRIPTION:
!	This routine calls COB$$FIND_NAME to find the name of the program
!	that is to be cancelled.  If the entry is found, COB$CANCEL checks
!	for open files so that they will be closed.  It also checks if the
!	routine has local storage, so it can restore it to its initial
!	values.
!
! CALLING SEQUENCE:
!
!	COB$CANCEL (desc.rt.ds, llist.rr.r)
!
! FORMAL PARAMETERS:
!
!	DESC.rt.ds	Address of descriptor for name
!
!	LLIST.rr.r	Pointer to list of accessible local programs
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	-Close any files that the CANCELed routine has open.
!	-Restores any local storage
!
!--

    BEGIN

      LOCAL
	EF ,				! Event flag to use with COB$RESTVA
	STATUS,				! Status returned by COB$RESTVA
	Q:	REF VECTOR,		!\Address of counted block of
					!/RAB addresses
	RAB:	REF BLOCK [,BYTE],	! A particular RAB address
	FAB:	REF BLOCK [,BYTE],	! Its associated FAB address
	P:	REF BLOCK[,BYTE];	! Address of name table entry

    BUILTIN
    	CALLG,
    	AP;

    P = CALLG(.AP,COB$$FIND_NAME);	! Find routine name match

    IF .P NEQ 0				! If NEQ 0, then match has been found
      THEN
	BEGIN				! Entry found

	    !+
	    ! Find out if he has any files open and if so, close them
	    !-

	    Q = .P[COB$A_NAM_FILES] ;	! Address of counted list of 
					! RAB address (if any)

	    IF .Q NEQA 0		! If it points non-zero assume
					! there are some
	    THEN
		BEGIN			! files exist case
		    INCR I FROM 1 TO .Q[0] DO
			BEGIN		! of closing loop
			    RAB = .Q[.I] ;			! A RAB address
			    IF .RAB[RAB$W_ISI] NEQ 0
			    THEN
				BEGIN
				    FAB = .RAB[RAB$L_FAB] ; 	! Its FAB address
				    IF .FAB[FAB$W_IFI] NEQ 0  	! If open
				    THEN $CLOSE (FAB = .FAB) ;	! then close it
				END ;
			END ;					! End of closing loop
		END ;	

	IF .P[COB$L_NAM_LLEN] NEQ 0			! Length of local storage for module
	  THEN
	    BEGIN					! It has local storage
	      LOCAL
		INADR:	VECTOR[2];

	    !+
	    ! Restore is image space.  Load addresses of beginning of local
	    ! storage for the module and of end of local storage for module.
	    !-

	    INADR[0] = .P[COB$A_NAM_LOCAL];
	    INADR[1] = .P[COB$A_NAM_LOCAL] + .P[COB$L_NAM_LLEN] - 1;

	    !+
	    ! Get an event flag number to use.  If one was not obtained,
	    ! then invoke SIGNAL_STOP indicating this condition.
	    !-

	    IF ( NOT LIB$GET_EF (EF) ) THEN SIGNAL_STOP (COB$_FAIGET_EF) ;

	    !+
	    ! Restore virtual addresses.
	    !-

	    STATUS = COB$$RESTVA(INADR, .CHANNEL, .EF);
	    IF NOT .STATUS THEN LIB$STOP(COB$_CANFAIL, 1,
					    .DESC, .STATUS) ;
	    !+
	    ! Deallocate event flag number.
	    !-

	    IF ( NOT LIB$FREE_EF (EF) ) THEN SIGNAL_STOP (COB$_FATINTERR) ;
	    END;	
	END	
    ELSE
	BEGIN 						! Entry not found
	    SIGNAL_STOP (COB$_CANFAIL, 1, .DESC );
	END ;
    END;						! End of routine COB$CANCEL

ROUTINE COB$$CANC_INIT: NOVALUE=


!++	
! FUNCTIONAL DESCRIPTION:
!
! Called as LIB$INITIALIZE routine whenever the COB$CANCEL module is loaded,
! with the standard CLI activation argument list.  It saves the channel
! number on which the image file is open in the OWN variable CHANNEL.
! This will be needed by the COB$CANCEL routine.
!
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NONE
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--
!
!
    BEGIN
      BUILTIN
	AP;

    CHANNEL = .BLOCK[.BLOCK[.AP, CLI$A_IMGFILED; , BYTE], IFD$W_CHAN; , BYTE];
    END;


!+
! The following is a contribution to LIB$INITIALIZE
!-

PSECT
	OWN=		LIB$INITIALIZE
			    (ALIGN(2), NOPIC, CONCATENATE, GLOBAL,
			     NOSHARE, NOEXECUTE, READ, NOWRITE);


OWN
	A:		INITIAL(COB$$CANC_INIT);


EXTERNAL ROUTINE
	LIB$INITIALIZE;


END
ELUDOM
