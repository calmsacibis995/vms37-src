	.TITLE	MTH$CDSINCOS	D COMPLEX*16 Sine and Cosine
	.IDENT	/1-002/		; File: MTHCDSINC.MAR Edit: RNH1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;
; FACILITY: MATH LIBRARY
;++
; ABSTRACT:
;	Return the SINE of a D COMPLEX*16 number
;	Return the COSINE of a D COMPLEX*16 number
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;	Steven B. Lionel, 26-July-1979
;
; MODIFIED BY:
;
;
;

	.SBTTL	HISTORY		; Detailed Current Edit History


; Edit History
;
; 1-001 - Adapted from MTH$CSINCOS version 1-002.  SBL 26-July-1979
; 1-002 - Changed shared external references to G^ RNH 25-Sep-81

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
	.DSABL	GBL
	.EXTRN	MTH$DSIN_R7
	.EXTRN	MTH$DCOS_R7
	.EXTRN	MTH$DEXP_R7

;
; MACROS:
;

;
; PSECT DECLARATIONS:
	.PSECT	_MTH$CODE	PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:

;
; OWN STORAGE:
;	NONE

	.SBTTL	MTH$CDSIN - D COMPLEX*16 SINE

;++
; FUNCTIONAL DESCRIPTION:
;
;	MTH$CDSIN computes the SINE of a D COMPLEX*16 number (r, i) as
;
;	result = (SIN(r) * COSH(i), COS(r) * SINH(i))
;
; CALLING SEQUENCE:
;	CALL MTH$CDSIN (result.wdc.r, arg.rdc.r)
;
;
; INPUT PARAMETERS:
	arg	= 8		; D COMPLEX*16 argument by reference
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;
	result	= 4		; D COMPLEX*16 result by reference
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	Signals:	Reserved Operand if r or i are invalid (-0.0)
;			MTH$_SINSIGLOS if |r| > 2*PI*2**31.
;			Floating Overflow if i > 88.028.
;
;--


	.ENTRY	MTH$CDSIN,	^M<R2,R3,R4,R5,R6,R7>
	JSB	WORKER			; R0-R1 = SIN(r)
					; R2-R3 = COS(r)
					; R4-R5 = SINH(i)
					; R6-R7 = COSH(i)
	MULD2	R6, R0			; R0-R1 = SIN(r) * COSH(i)
	MULD2	R4, R2			; R2-R3 = COS(r) * SINH(i)
	MOVL	result(AP), R4		; get result address
	MOVQ	R0, (R4)+		; Store real part
	MOVQ	R2, (R4)		; Store imaginary part
	RET

	.SBTTL	MTH$CDCOS - D COMPLEX*16 Cosine

;++
; FUNCTIONAL DESCRIPTION:
;
;	MTH$CDCOS computes the COSINE of D COMPLEX*16 number (r, i) as follows:
;
;	result = (COS(r) * COSH(i), -SIN(r) * SINH(-i))
;
; CALLING SEQUENCE:
;	CALL MTH$CDCOS (result.wdc.r, arg.rdc.r)
;
;
; INPUT PARAMETERS:
	arg	= 8		; D COMPLEX*16 argument by reference
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;
	result	= 4		; D COMPLEX*16 result by reference
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	Signals:	Reserved Operand if r or i are invalid (-0.0)
;			MTH$_SINSIGLOS if |r| > 2*PI*2**31.
;			Floating Overflow if i > 88.028.
;
;--


	.ENTRY	MTH$CDCOS,	^M<R2,R3,R4,R5,R6,R7>
	JSB	WORKER			; R0-R1 = SIN(r)
					; R2-R3 = COS(r)
					; R4-R5 = SINH(i)
					; R6-R7 = COSH(i)
	MULD2	R2, R6			; R6-R7 = COS(r) * COSH(i)
	MNEGD	R0, R0			; R0-R1 = -SIN(r)
	MULD3	R0, R4, R2		; R2-R3 = -SIN(r) * SINH(i)
	MOVQ	R6, R0			; R0-R1 = COS(r) * COSH(i)
	MOVL	result(AP), R4		; get result address
	MOVQ	R0, (R4)+		; Store real part
	MOVQ	R2, (R4)		; Store imaginary part
	RET

	.SBTTL	WORKER - do all the work

;+
; Setup error handler
; Compute:
;	R0-R1 = SIN(r)
;	R2-R3 = COS(r)
;	R4-R5 = SINH(i)
;	R6-R7 = COSH(i)
;-

WORKER:
	MTH$FLAG_JACKET			; set up error handler
	MOVL	arg(AP), R0		; R0 -> (r, i)
	MOVD	8(R0), R0		; R0-R1 = i
	JSB	G^MTH$DEXP_R7		; R0-R1 = EXP(i)
	DIVD3	R0, #1, R2		; R2-R3 = EXP(-i)

	SUBD3	R2, R0, R4		; R4-R5 = EXP(i) - EXP(-i)
	MULD3	#0.5, R4, -(SP)		; (SP) = SINH(i)

	ADDD3	R2, R0, R4		; R4-R5 = EXP(i) + EXP(-i)
	MULD3	#0.5, R4, -(SP)		; (SP) = COSH(i)

	MOVD	@arg(AP), R0		; R0-R1 = r
	JSB	G^MTH$DCOS_R7		; R0-R1 = COS(r)
	MOVQ	R0, -(SP)		; (SP) = COS(r)

	MOVQ	@arg(AP), R0		; R0-R1 = r
	JSB	G^MTH$DSIN_R7		; R0-R1 = SIN(r)
	MOVQ	(SP)+, R2		; R2-R3 = COS(r)
	MOVQ	(SP)+, R6		; R6-R7 = COSH(i)
	MOVQ	(SP)+, R4		; R4-R5 = SINH(i)

	RSB



	.END
