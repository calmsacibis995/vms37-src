MODULE LIB$SYS_GETMSG (

	IDENT = '1-008'		! File: LIBGETMSG.B32 EDIT RKR1008

		      ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General Library Support
!
! ABSTRACT:
!
!	Calls $GETMSG with caller's input string, resultant string
! is returned using the semantics of the caller's string.
! Parameters MSGID and FLAGS are presented to this routine
! by-reference and are promoted to by-value for presentation to
! $GETMSG
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: R. Reichert, CREATION DATE: 20-SEPT-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  RKR 20-SEPT-1979
! 1-002 - Change name to LIB$SYS_GETMSG.  RKR 15-OCT-79
! 1-003 - Change logic for status returned. Improve comments.
!	  RKR 20-OCT-79
! 1-004 - Add logic to promote by-reference parameter to by-value.
!	  RKR 1-NOV-79
! 1-005 - Change STR$ codes to LIB$ codes. RKR 22-JAN-80
! 1-006 - Enhance to recognize additional classes of string descriptors
!	  on output by always getting data into internal buffer and
!	  using LIB$SCOPY_DXDX6 to deliver to caller's buffer.
!	  LIB$ANALYZE_SDESC_R3 is used to compute the number of bytes
!	  actually copied after the copy operation completes.
!	  Change to use LIB$SCOPY_DXDX6 instead of STR$COPY_DX.  This
!	  avoids having to change STR$ statuses to LIB$ statuses and
!	  eliminates need for a handler.
!	  RKR 29-MAY-1981.
! 1-007 - Add special-case code to process string descriptors that
!	  "read" like fixed string descriptors.  RKR 7-OCT-1981.
! 1-008 - Redirect jsb's to LIB$ANALYZE_SDESC_R3 to
!	  LIB$ANALYZE_SDESC_R2.  Use LIB$SCOPY_R_DX6 to do copying.
!	  RKR 18-NOV-1981.
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
		(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
REQUIRE 'RTLIN:STRLNK';
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$SYS_GETMSG;		! Convert date and time

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';	! Macros for defining psects

LIBRARY 'RTLSTARLE';		! System symbols and macros

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
LITERAL
	LOCAL_BUF_SIZE = 256 ;
!
! PSECTS:
!
DECLARE_PSECTS (LIB);		! Declare psects for LIB$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2 : LIB$ANALYZE_SDESC_JSB_LINK, ! Extract length
						       ! and address of
						       ! 1st data byte
						       ! from descriptor
    LIB$SCOPY_R_DX6 : STRING_JSB;	! Copy string

GLOBAL ROUTINE LIB$SYS_GETMSG (		! Get system message 


	MSGID,		! identification of message to be retrieved

	MSGLEN,		! address of a word to receive length of string
			! returned (optional)

	BUFADR,		! address of buffer descriptor of buffer to
			! receive string

	FLAGS,		! flag bits for message content

	OUTADR		! addr of a 4-byte array to receive msg string
    ) : =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Calls $GETMSG with caller's input string, resultant string
! is returned using the semantics of the caller's string.
! Parameters MSGID and FLAGS are presented to this routine
! by-reference and are promoted to by-value for presentation to
! $GETMSG
!
!
! FORMAL PARAMETERS:
!
!	MSGID.rl.r	Address of
!			identification of message to be retrieved
!
!	MSGLEN.ww.r	address of a word to receive length of string
!			returned
!
!	BUFADR.wt.dx	address of buffer descriptor of buffer to
!			receive string
!
!	FLAGS.rl.r	Address of
!			flag bits for message content
!			(Optional parameter)
!			(macro default = 15)
!
!			Bit	Value	Meaning
!			---	-----	-------
!
!			0	1	Include text
!				0	Do not include tesxt
!			1	1	Include identifier
!				0	Do not include identifier
!			2	1	Include severity
!				0	Do not include severity
!			3	1	Include component
!				0	Do not include component
!
!	OUTADR.wa.ra	address of a 4-byte array to receive the msg 
!			string
!			(Optional parameter)
!
!			Byte	Contents
!			----	--------
!
!			0	Reserved
!			1	Count of FAO arguments
!			2	User value
!			3	Reserved
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	SS$_NORMAL	Procedure successfully completed
! From LIB$SCOPY_R_DX6
!	LIB$_STRTRU	Success, but source string truncated
!	LIB$_INSVIRMEM	Insufficient virtual memory
!	LIB$_INVSTRDES	Invalid string descriptor
!	LIB$_INVARG	Invalid argument ( usually unsupported class of
!			descriptor)
! From $GETMSG
!	SS$_BUFFEROVF	Successfully completed but string returned
!			overflowed the buffer provided and has been
!			truncated
!	SS$_MSGNOTFND   Sucessfully completed, but message code does not
!			have an associated message in file.
!
!
! SIDE EFFECTS:
!
!
!--

    BEGIN
    BUILTIN
	ACTUALCOUNT,
	NULLPARAMETER,
	ACTUALPARAMETER ;

    LOCAL
	COPY_STATUS,		! status from copy operation
	STR_STATUS,		! status from $GETMSG call
	LOCAL_BUFF : VECTOR [LOCAL_BUF_SIZE,BYTE] , ! Local buffer
	BUFFER_DESC : BLOCK [8, BYTE];		! desc for local buffer

    MAP
	MSGLEN : REF VECTOR [,WORD] ,
	BUFADR : REF BLOCK[,BYTE] ;


!+
! Construct a static descriptor to receive the date and time from
! VAX/VMS
!-
    BUFFER_DESC [DSC$W_LENGTH] = LOCAL_BUF_SIZE;
    BUFFER_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    BUFFER_DESC [DSC$B_CLASS] = DSC$K_CLASS_S;
    BUFFER_DESC [DSC$A_POINTER] = LOCAL_BUFF;

!+
! Call $GETMSG with the appropriate combination of caller's
! parameters, default parameters and local variables.
!-

	    STR_STATUS = $GETMSG (
		    MSGID = .ACTUALPARAMETER(1),
		    MSGLEN = BUFFER_DESC,
		    BUFADR = BUFFER_DESC,
		    FLAGS = (IF NULLPARAMETER(4)
			THEN 15
			ELSE .ACTUALPARAMETER(4) ) ,
		    OUTADR = (IF NULLPARAMETER(5) 
			THEN 0 
			ELSE ACTUALPARAMETER(5))   ) ;


!+
! Copy internal buffer to caller's buffer, letting LIB$SCOPY_R_DX6
! worry about its semantics.
!-
    COPY_STATUS = LIB$SCOPY_R_DX6 (.BUFFER_DESC [DSC$W_LENGTH], 
				   .BUFFER_DESC [DSC$A_POINTER], 
				   .BUFADR ) ;

!+
! If caller supplied optional length parameter, update it.
! To do this accurately, we need to inspect the resulting descriptor
! as it appears after the copy.  Get LIB$ANALYZE_SDESC_R2 to do it.
! No need to check LIB$ANALYZE_SDESC_R2 status.  If RESULT_ADDR descr
! was bad, LIB$SCOPY_DXDX6 would have told us about it.
!-
    IF (NOT NULLPARAMETER(2)) 
    THEN 
	BEGIN
	LOCAL
	    RESULT_LEN,		! No. of bytes delivered to caller
	    RESULT_ADDRESS;	! Address of 1st data byte of callers
				! buffer
	IF .BUFADR [DSC$B_CLASS] GTRU DSC$K_CLASS_D
	THEN		! Use generalized length extract
	    BEGIN
	    LIB$ANALYZE_SDESC_R2 ( .BUFADR ; 
			           RESULT_LEN, RESULT_ADDRESS );
	    END

	ELSE		! Fetch length directly

	    RESULT_LEN = .BUFADR [DSC$W_LENGTH] ;

	MSGLEN [0] = MIN (.BUFFER_DESC [DSC$W_LENGTH], .RESULT_LEN) ;
	END;
!+
! At this point we have 2 statuses that we could return to caller.
! Determine which one is the "most meaningful".
!-
    !+
    ! If original $GETMSG call failed, tell him about that
    ! else give him the copy status.
    !-
    IF NOT .STR_STATUS THEN RETURN (.STR_STATUS)
		       ELSE RETURN (.COPY_STATUS) ;

    END;			! end of LIB$SYS_GETMSG

END				! end of module LIB$SYS_GETMSG

ELUDOM
