MODULE COB$CALL (
		IDENT = '1-010'		! file: COBCALL.B32 EDIT:LB1010
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:	COBOL SUPPORT
!
! ABSTRACT:	This procedure fetches the address of the routine entry
!		point that is associated with the name that is passed
!		to it via the "DESC" parameter.  If the corresponding
!		address of the routine is not found, then this procedure
!		returns a value of zero to the calling program.
!
! ENVIRONMENT:	Vax-11 User Mode
!		NOTE:  This module cannot be in a shareable library
!
! AUTHOR: MLJ , CREATION DATE: 10-APR-1979
!
! MODIFIED BY:
!
! 1-001 - Original. MLJ  10-APR-1979
! 1-002 - Added boilerplate and comments. RKR 18-JULY-1979
! 1-003 - Declare psects via library macro. RKR 23-AUG-1979
! 1-004 - Fetch COBDEF from RTLIN rather than LIB$. RKR 18-SEPT-79
! 1-005 - Signal error COB$_ROUNOTLIN if COB$$FIND_NAME fails.
!	  RKR 2-OCT-79
! 1-006 - Undo rev. 5, not desired action.  RKR 04-OCT-79
! 1-007 - Cosmetic changes.  RKR 18-OCT-79
! 1-008 - Signal if name not found. 21-OCT-79
! 1-009 - Remove all signalling actions, -- let compiled-code caller
!	  do the signalling.   RKR 29-OCT-79
! 1-010 - Added functional description, abstract, comments and cosmetic
!	  changes.  LB 02-MAR-81
!
!--

!+
! SWITCHES
!-

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!+
! LINKAGES
!
!	-NONE
!-

!+
! TABLE OF CONTENTS:
!-
FORWARD ROUTINE

	COB$CALL ;

!+
! INCLUDE FILES
!-

REQUIRE 'RTLIN:RTLPSECT' ;		! Macros for declaring psects
REQUIRE 'RTLIN:COBDEF';			! COBOL specific RTL macros and literals


!+
! MACROS
!	-NONE
!-

!+
! EQUATED SYMBOLS
!	-NONE
!-

!+
! PSECT DECLARATIONS:
!-

DECLARE_PSECTS (COB) ;			! Psects for COB$ facility

!+
! EXTERNAL REFERENCES
!-

EXTERNAL ROUTINE
					!\Find routine name match in list
					!/of local and global program names
	COB$$FIND_NAME : ADDRESSING_MODE (GENERAL) ;

GLOBAL ROUTINE COB$CALL(DESC,LLIST)=


!++	
! FUNCTIONAL DESCRIPTION:
!	This routine passes control to routine COB$$FIND_NAME which will
!	search through the list of local program names to find a match to
!	the parameter "DESC".  If no match is found, it searches through
!	the list of global program names (designated by the COB$GZ_NAMES_2
!	structure).  If a match is found, then COB$CALL will return the
!	address of the routine entry point; otherwise, it returns a value
!	of zero.
!
! CALLING SEQUENCE:
!
!	COB$CALL (desc.rt.ds, llist.rr.r)
!
! FORMAL PARAMETERS:
!
!	DESC.rt.ds	Address of descriptor for name
!
!	LLIST.rr.r	Pointer to a counted list of accessible local programs
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	Address of desired routine's entry point, else 0 if not found
!
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

      LOCAL
	P:	REF BLOCK [, BYTE];

      BUILTIN
	AP,
	CALLG;

    P = CALLG (.AP,COB$$FIND_NAME);	! Find a match for program name	
    IF .P NEQ 0				! If NEQ 0, then match found
      THEN
	P = .P[COB$A_NAM_ENTRY] ;	!\Fetch addr of routine entry
    RETURN .P				! point and return it to
					!/the calling program
    END; 				! End of routine COB$CALL
END					! End of module COB$CALL
ELUDOM
