	.TITLE	MTH$HFLOOR - Greatest integer routine for H_floating
	.IDENT	/1-002/			; File: MTHHFLOOR.MAR  EDIT: RH1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: Math Library
;
; ABSTRACT:
;
;	This routine finds the largest integer less than the input
;	value, i.e. it truncates toward negative infinity
;	for data type H_floating.
;
; ENVIRONMENT: User Mode, AST Reentrant
;
;--
; Author: John Sauter, Creation date: 27-JUL-1979
;
; MODIFIED BY:
;
; VERSION 00
; 1-001	- Original, from MTH$GFLOOR.
; 1-002 - CALL entry was modified to return the result in the address
;	  specified by the leftmost argument in order to conform to the
;	  calling standard for return values larger than 64 bits.  The
;	  original version returned the results in R0-R3.
;         JSB entry was modify to correct typos: The last two operands
;	  of the EMODH instruction and the operand of the TSTH instruction
;	  were changed from R2 to R4.
;	  Comments were changed to eliminate an erroneous calling sequence.
;	  RNH 9-DEC-1980

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL				; Prevent undeclared
						; symbols from being
						; automatically global.
;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;

;
; PSECT DECLARATIONS:
;
	.PSECT _MTH$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	MTH$HFLOOR  - greatest integer H_floating routine
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine finds the floor by truncating, and then if the
;	input value is negative and not an integer subtracting 1.
;
; CALLING SEQUENCE:
;
;	CALL MTH$HFLOOR (result_int.wh.r, input.rh.r)
;
; INPUT PARAMETERS:
;
	input_addr = 8			; address of the H_floating number
					; to get the floor of
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
	output_addr = 4
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	MTH$HFLOOR, ^M<R2, R3, R4, R5, R6, R7> ; entry point

	MOVH	@input_addr(AP), R0		; R0/R3 = input argument
	EMODH	R0, #0, #1, R4, R4		; R4/R7 = fraction_part (arg)
	SUBH2	R4, R0				; R0/R3 = integer_part (arg)

	BGTR	40$				; if > 0, have correct answer

	TSTH	R4				; look at fraction part
	BGEQ	40$				; if > 0 then 0 < input < 1 and
						;  we have the correct answer
						; if = 0 then input was integer
						;  and we have correct answer

	SUBH2	#1,R0				; subtract 1 from truncated
						; negative non-integer

40$:	MOVH	R0, @output_addr(AP)		; move result to output address
	RET

	.SBTTL	MTH$HFLOOR_R7  - greatest integer H_floating routine
;++
; FUNCTIONAL DESCRIPTION:
;
;	This is the JSB entry point to MTH$HFLOOR.
;
; CALLING SEQUENCE:
;
;	JSB  MTH$HFLOOR_R7 
;
; INPUT PARAMETERS:
;
;	R0 through R3 contain the input value
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	R0 through R3 contain the result value
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; FUNCTION VALUE:
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

MTH$HFLOOR_R7::					; entry point

	EMODH	R0, #0, #1, R4, R4		; R4/R7 = fraction_part (arg)
	SUBH2	R4, R0				; R0/R3 = integer_part (arg)

	BGTR	40$				; if > 0, have correct answer

	TSTH	R4				; look at fraction part
	BGEQ	40$				; if > 0 then 0 < input < 1 and
						;  we have the correct answer
						; if = 0 then input was integer
						;  and we have correct answer

	SUBH2	#1,R0				; subtract 1 from truncated
						; negative non-integer

40$:	RSB

	.END
