!+
! This file, BPAERRDEF.REQ, defines the error codes.
!-
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
! Edit History:
!
! 1-001	- original, from ERRMSG.R32, from ESE.  JBS 02-OCT-1979
! 1-002 - Add copyright notice.  SBL 11-Mar-1980
!--

! define the error code mnemonics
!

!
! FAC codes
!
LITERAL
    bpa$k_fac_ss  = 0,
    bpa$k_fac_rms = 1,
    bpa$k_fac_bas = 26,
    bpa$k_fac_bpa = 131;
!
! AME specific error mnemonics
!
LITERAL

    bpa$_basplus   = (0^3)+(bpa$k_fac_bpa^16)+(1^15)+3,
    bpa$_illaccmod = (1^3)+(bpa$k_fac_bpa^16)+(1^15),
    bpa$_rectoolon = (2^3)+(bpa$k_fac_bpa^16)+(1^15),
    bpa$_intconchk = (3^3)+(bpa$k_fac_bpa^16)+(1^15)+4,
    bpa$_illop     = (4^3)+(bpa$k_fac_bpa^16)+(1^15)+4,
    bpa$_cvterr    = (5^3)+(bpa$k_fac_bpa^16)+(1^15),
    bpa$_oddadr    = (6^3)+(bpa$k_fac_bpa^16)+(1^15),
    bpa$_illti_dev = (7^3)+(bpa$k_fac_bpa^16)+(1^15)+4,
    bpa$_endfilbat = (8^3)+(bpa$k_fac_bpa^16)+(1^15)+2;			! A262

!
! AME / BASIC+ / BASIC+2 common mnemonics
!
LITERAL

    baddir = (1^3)+(bpa$k_fac_bas^16)+(1^15),
    badnam = (2^3)+(bpa$k_fac_bas^16)+(1^15),
    inuse  = (3^3)+(bpa$k_fac_bas^16)+(1^15),
    noroom = (4^3)+(bpa$k_fac_bas^16)+(1^15),
    nosuch = (5^3)+(bpa$k_fac_bas^16)+(1^15),
    nodevc = (6^3)+(bpa$k_fac_bas^16)+(1^15),
    notcls = (7^3)+(bpa$k_fac_bas^16)+(1^15),
    notavl = (8^3)+(bpa$k_fac_bas^16)+(1^15),
    notopn = (9^3)+(bpa$k_fac_bas^16)+(1^15),
    prviol = (10^3)+(bpa$k_fac_bas^16)+(1^15),
    eof    = (11^3)+(bpa$k_fac_bas^16)+(1^15),
    abort  = (12^3)+(bpa$k_fac_bas^16)+(1^15),
    daterr = (13^3)+(bpa$k_fac_bas^16)+(1^15),
    hngdev = (14^3)+(bpa$k_fac_bas^16)+(1^15),
    hngtty = (15^3)+(bpa$k_fac_bas^16)+(1^15),
    fiexst = (16^3)+(bpa$k_fac_bas^16)+(1^15),
    dtooof = (17^3)+(bpa$k_fac_bas^16)+(1^15),
    badfuo = (18^3)+(bpa$k_fac_bas^16)+(1^15),
    intlck = (19^3)+(bpa$k_fac_bas^16)+(1^15),
    wrgpak = (20^3)+(bpa$k_fac_bas^16)+(1^15),
    notmnt = (21^3)+(bpa$k_fac_bas^16)+(1^15),
    paklck = (22^3)+(bpa$k_fac_bas^16)+(1^15),
    badclu = (23^3)+(bpa$k_fac_bas^16)+(1^15),
    privat = (24^3)+(bpa$k_fac_bas^16)+(1^15),
    intpak = (25^3)+(bpa$k_fac_bas^16)+(1^15),
    badpak = (26^3)+(bpa$k_fac_bas^16)+(1^15),
    detkey = (27^3)+(bpa$k_fac_bas^16)+(1^15),
    ctlrce = (28^3)+(bpa$k_fac_bas^16)+(1^15),
    sattbd = (29^3)+(bpa$k_fac_bas^16)+(1^15),
    devnfs = (30^3)+(bpa$k_fac_bas^16)+(1^15),
    badcnt = (31^3)+(bpa$k_fac_bas^16)+(1^15),
    nobufs = (32^3)+(bpa$k_fac_bas^16)+(1^15),
    b_4    = (33^3)+(bpa$k_fac_bas^16)+(1^15),
    b_10   = (34^3)+(bpa$k_fac_bas^16)+(1^15),
    b_250  = (35^3)+(bpa$k_fac_bas^16)+(1^15),
    b_stak = (36^3)+(bpa$k_fac_bas^16)+(1^15),
    b_swap = (37^3)+(bpa$k_fac_bas^16)+(1^15),
    b_prty = (38^3)+(bpa$k_fac_bas^16)+(1^15),
    magsel = (39^3)+(bpa$k_fac_bas^16)+(1^15),
    magrle = (40^3)+(bpa$k_fac_bas^16)+(1^15),
    nrrts  = (41^3)+(bpa$k_fac_bas^16)+(1^15),
    vcserr = (42^3)+(bpa$k_fac_bas^16)+(1^15),
    vcaerr = (43^3)+(bpa$k_fac_bas^16)+(1^15),
    sizerr = (44^3)+(bpa$k_fac_bas^16)+(1^15),
    vcoerr = (45^3)+(bpa$k_fac_bas^16)+(1^15),
    bserr  = (46^3)+(bpa$k_fac_bas^16)+(1^15),
    linerr = (47^3)+(bpa$k_fac_bas^16)+(1^15),
    flterr = (48^3)+(bpa$k_fac_bas^16)+(1^15),
    experr = (49^3)+(bpa$k_fac_bas^16)+(1^15),
    fmterr = (50^3)+(bpa$k_fac_bas^16)+(1^15),
    fixerr = (51^3)+(bpa$k_fac_bas^16)+(1^15),
    bdnerr = (52^3)+(bpa$k_fac_bas^16)+(1^15),
    logerr = (53^3)+(bpa$k_fac_bas^16)+(1^15),
    sqrerr = (54^3)+(bpa$k_fac_bas^16)+(1^15),
    suberr = (55^3)+(bpa$k_fac_bas^16)+(1^15),
    minver = (56^3)+(bpa$k_fac_bas^16)+(1^15),
    odd    = (57^3)+(bpa$k_fac_bas^16)+(1^15),
    onbad  = (58^3)+(bpa$k_fac_bas^16)+(1^15),
    nederr = (59^3)+(bpa$k_fac_bas^16)+(1^15),
    iolerr = (60^3)+(bpa$k_fac_bas^16)+(1^15),
    divby0 = (61^3)+(bpa$k_fac_bas^16)+(1^15),
    norts  = (62^3)+(bpa$k_fac_bas^16)+(1^15),
    fielde = (63^3)+(bpa$k_fac_bas^16)+(1^15),
    noracs = (64^3)+(bpa$k_fac_bas^16)+(1^15),
    notmta = (65^3)+(bpa$k_fac_bas^16)+(1^15),
    errerr = (66^3)+(bpa$k_fac_bas^16)+(1^15),
    badswt = (67^3)+(bpa$k_fac_bas^16)+(1^15),
    new1   = (68^3)+(bpa$k_fac_bas^16)+(1^15),
    new2   = (69^3)+(bpa$k_fac_bas^16)+(1^15),
    new3   = (70^3)+(bpa$k_fac_bas^16)+(1^15),
    smterr = (71^3)+(bpa$k_fac_bas^16)+(1^15),
    exittm = (72^3)+(bpa$k_fac_bas^16)+(1^15),
    exitnr = (73^3)+(bpa$k_fac_bas^16)+(1^15),
    undfni = (74^3)+(bpa$k_fac_bas^16)+(1^15),
    coserr = (75^3)+(bpa$k_fac_bas^16)+(1^15),
    tlopnv = (76^3)+(bpa$k_fac_bas^16)+(1^15),
    tlnzsp = (77^3)+(bpa$k_fac_bas^16)+(1^15),
    tlnoit = (78^3)+(bpa$k_fac_bas^16)+(1^15),
    tliffe = (79^3)+(bpa$k_fac_bas^16)+(1^15),
    tlconi = (80^3)+(bpa$k_fac_bas^16)+(1^15),
    tlnotf = (81^3)+(bpa$k_fac_bas^16)+(1^15),
    tlqdum = (82^3)+(bpa$k_fac_bas^16)+(1^15),
    tlmnfd = (83^3)+(bpa$k_fac_bas^16)+(1^15),
    tlrnmm = (84^3)+(bpa$k_fac_bas^16)+(1^15),
    moderr = (85^3)+(bpa$k_fac_bas^16)+(1^15),
    tlordt = (86^3)+(bpa$k_fac_bas^16)+(1^15),
    ovtoas = (87^3)+(bpa$k_fac_bas^16)+(1^15),
    funerr = (88^3)+(bpa$k_fac_bas^16)+(1^15),
    tltmaf = (89^3)+(bpa$k_fac_bas^16)+(1^15),
    tlincd = (90^3)+(bpa$k_fac_bas^16)+(1^15),
    cpnsdf = (91^3)+(bpa$k_fac_bas^16)+(1^15),
    cpupfr = (92^3)+(bpa$k_fac_bas^16)+(1^15),
    cpufnx = (93^3)+(bpa$k_fac_bas^16)+(1^15),
    cpupdf = (94^3)+(bpa$k_fac_bas^16)+(1^15),
    cpuped = (95^3)+(bpa$k_fac_bas^16)+(1^15),
    tljnky = (96^3)+(bpa$k_fac_bas^16)+(1^15),
    tlnofn = (97^3)+(bpa$k_fac_bas^16)+(1^15),
    sasyne = (98^3)+(bpa$k_fac_bas^16)+(1^15),
    sasnos = (99^3)+(bpa$k_fac_bas^16)+(1^15),
    sasnoi = (100^3)+(bpa$k_fac_bas^16)+(1^15),
    tlurtp = (101^3)+(bpa$k_fac_bas^16)+(1^15),
    tlxdim = (102^3)+(bpa$k_fac_bas^16)+(1^15),
    fucore = (103^3)+(bpa$k_fac_bas^16)+(1^15),
    reserr = (104^3)+(bpa$k_fac_bas^16)+(1^15),
    dimed2 = (105^3)+(bpa$k_fac_bas^16)+(1^15),
    tlidim = (106^3)+(bpa$k_fac_bas^16)+(1^15),
    nogoto = (107^3)+(bpa$k_fac_bas^16)+(1^15),
    eoserr = (108^3)+(bpa$k_fac_bas^16)+(1^15),
    tlcntd = (109^3)+(bpa$k_fac_bas^16)+(1^15),
    tlprnm = (110^3)+(bpa$k_fac_bas^16)+(1^15),
    edbmce = (111^3)+(bpa$k_fac_bas^16)+(1^15),
    edexon = (112^3)+(bpa$k_fac_bas^16)+(1^15),
    nrnerr = (113^3)+(bpa$k_fac_bas^16)+(1^15),
    edcone = (114^3)+(bpa$k_fac_bas^16)+(1^15),
    edarsv = (115^3)+(bpa$k_fac_bas^16)+(1^15),
    prerrs = (116^3)+(bpa$k_fac_bas^16)+(1^15),
    udmerr = (117^3)+(bpa$k_fac_bas^16)+(1^15),
    prner1 = (118^3)+(bpa$k_fac_bas^16)+(1^15),
    ndnoim = (119^3)+(bpa$k_fac_bas^16)+(1^15),
    prner2 = (120^3)+(bpa$k_fac_bas^16)+(1^15),
    baderr = (121^3)+(bpa$k_fac_bas^16)+(1^15),
    diserr = (122^3)+(bpa$k_fac_bas^16)+(1^15),
    stperr = (123^3)+(bpa$k_fac_bas^16)+(1^15),
    dimerr = (124^3)+(bpa$k_fac_bas^16)+(1^15),
    nomath = (125^3)+(bpa$k_fac_bas^16)+(1^15),
    xcdcor = (126^3)+(bpa$k_fac_bas^16)+(1^15),
    scaerr = (127^3)+(bpa$k_fac_bas^16)+(1^15);
!
!
!	End of file BPAERRMSG.REQ
