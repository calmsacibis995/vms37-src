MODULE BAS$RAD50 (				! RADIX50 conversion
		IDENT = '1-005'			! File: BASRAD50.B32
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  BASIC-PLUS-2 Miscellaneous
!
! ABSTRACT:
!
!	This module contains the BASIC RAD$ function,
!	which converts a 16-bit word to three ASCII characters.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: John Sauter, CREATION DATE: 01-MAY-1979
!
! MODIFIED BY:
!
! 1-001	- Original.
! 1-002	- The BAS$RAD synonym must be global!  JBS 02-MAY-1979
! 1-003	- Change LIB$S and OTS$S to STR$.  JBS 21-MAY-1979
! 1-004	- Change the call to STR$COPY.  JBS 16-JUL-1979
! 1-005	- Improve a comment.  JBS 07-NOV-1979
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE (EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
!	NONE
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    BAS$RAD50 : NOVALUE;			! convert word to three chars

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';			! Macros for defining psects

LIBRARY 'RTLSTARLE';				! System symbols

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!

GLOBAL BIND
    ROUTINE
    BAS$RAD = BAS$RAD50;			! Synonym used by compiled code

!
! PSECTS:
!
DECLARE_PSECTS (BAS);				! Declare psects for BAS$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    R50ASC : NOVALUE,				! Convert radix50 to ASCII
    STR$COPY_R,					! Copy a string by reference
    LIB$STOP : NOVALUE;				! Signal a fatal error


GLOBAL ROUTINE BAS$RAD50 (			! Convert a word to three characters
	RESULT, 				! Descriptor of resultant string
	NUMBER					! Value to convert
    ) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Convert a 16-bit word into an ASCII string.  The word is
!	encoded as RADIX50.
!
!	This function should not be used for new development;
!	someday we hope to do away with this extra character set.
!
! FORMAL PARAMETERS:
!
!	RESULT.wt.dx	A string containing the 3 characters in the word
!	NUMBER.rw.v	The 16-bit word into which the characters are
!			packed.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	THREE_CHARS : VECTOR [3, BYTE];

!+
! Call the FORTRAN-compatability routine to convert radix-50 to ASCII.
!-
    R50ASC (%REF (3), NUMBER, THREE_CHARS [0]);
!+
! Copy the three characters back to the caller's descriptor.
!-
    STR$COPY_R (.RESULT, %REF (3), THREE_CHARS [0]);
    END;					! end of BAS$RAD50

END						! end of module BAS$RAD50

ELUDOM
