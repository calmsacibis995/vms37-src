	.TITLE	FOR$READ_SN - FORTRAN READ Sequential NAMELIST
	.IDENT	/1-001/			; File: FORREADSN.MAR, Edit: SBL1001

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: FORTRAN Language Support
;
; ABSTRACT:
;
;	This module contains FOR$READ_SN, the user interface to the FORTRAN
;	I/O Run-Time Library which begins a READ NAMELIST statement.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; MAINTENANCE NOTE:
;	The transfer vector (RTLVECTOR+ALLGBL) must have the following:
;
;	.TRANSFER	FOR$READ_SN
;	.MASK		FOR$$IO_BEG
;	JMP		FOR$READ_SN+2
;
;	This puts the correct mask in entry vector, that is FOR$$IO_BEG entry mask.
;	Furthermore this module must only use R0 and R1
;	since any other register might not be in the entry mask for FOR$$IO_BEG.
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 21-July-1980
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 21-July-1980
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
	$ISBDEF			; Intra-statement block definitions
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
	.EXTRN	FOR$$IO_BEG	; Common initialization routine
	.EXTRN	FOR$$UDF_RN0, FOR$$UDF_RN9	; To pull in weak references
	.EXTRN	FOR$$REC_RSN0, FOR$$REC_RSN1	; To pull in weak references

;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
;
; PSECT DECLARATIONS:
;
	.PSECT _FOR$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	FOR$READ_SN - READ sequential NAMELIST
;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine begins a FORTRAN READ NAMELIST statement.
;
; CALLING SEQUENCE:
;
;	CALL FOR$READ_SN (unit.rl.v, namelist.rlu.ra [, err_eql.j.r [, end_eql.j.r]])
;
; FORMAL PARAMETERS:
;
;	unit		- logical unit number
;	namelist	- address of namelist descriptor block (see below)
;	err_eql		- address of instruction to branch to if an error occurs
;	end_eql		- address of instruction to branch to if an end-of-file
;			  is found
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION STATUS: 
;
;	NONE
;
; SIDE EFFECTS:
;
;	One READ NAMELIST statement will be executed.
;
;--

FOR$READ_SN::
	.MASK	FOR$$IO_BEG
	MOVZBL	#ISB$K_ST_TY_RSN, R0	; Move statement type
	JMP	G^FOR$$IO_BEG+2		; Jump to FOR$$IO_BEG

	.END				; End of module FOR$READ_SN
