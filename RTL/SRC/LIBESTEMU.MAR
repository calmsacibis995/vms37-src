	.TITLE	LIB$ESTEMU - Establish instruction emulator
	.IDENT	/1-002/			; File: LIBESTEMU.MAR  Edit: SBL1002

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: General Utility Library
;
; ABSTRACT:
;
;	Inclusion of this module in an image automatically enables
;	LIB$EMULATE, the optional instruction emulator, on the stack.
;
; ENVIRONMENT: Runs at any access mode, AST Reentrant
;
; AUTHOR: Steven B. Lionel, CREATION DATE: 11-JAN-1980
;
; MODIFIED BY:
;
; 1-001	- Original. SBL 11-JAN-1980
; 1-002 - Rename to LIB$ESTEMU.  Module is now in STARLET.OLB.  SBL 17-Jan-1980
;--

	.SBTTL	DECLARATIONS
;
; LIBRARY MACRO CALLS:
;
;	NONE
;
; EXTERNAL DECLARATIONS:
;
	.DSABL	GBL		; Force all external symbols to be declared
	.EXTRN	LIB$INITIALIZE	; Pull in initialization facility
	.EXTRN	LIB$EMULATE	; Instruction emulator
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
	.PSECT	LIB$INITIALIZE	NOPIC, USR, CON, REL, GBL, -
		NOSHR, NOEXE, RD, NOWRT, LONG
;
	.LONG	LIB$ESTEMU		; Address of initialization routine
;
; PSECT DECLARATIONS:
;
	.PSECT _LIB$CODE PIC, USR, CON, REL, LCL, SHR, -
			EXE, RD, NOWRT, LONG


	.SBTTL	LIB$ESTEMU - Establish the emulator
;++
; FUNCTIONAL DESCRIPTION:
;
;	When this module is linked into an image, this routine is
;	automatically called by the image initialization process.
;	It establishes the instruction emulator, LIB$EMULATE, as
;	a condition handler.  This routine can not be called directly
;	and has no computational function.
;
;	There are two ways to cause this module to be included in
;	an image.  One way is to specifically include it from the
;	system object library.  This has the advantage of not
;	requiring source program changes.
;
;	Example:
;
;	$ LINK program,SYS$LIBRARY:STARLET/INCLUDE=LIB$ESTEMU
;
;	where "program" is the user program object module.
;
;	Another method, which does require a source program change,
;	is to declare an external reference to the symbol LIB$ESTEMU.
;	If this method is chosen, there is no change necessary in the
;	link method.
;
;	FORTRAN example:
;
;		EXTERNAL LIB$ESTEMU
;
;	MACRO example:
;
;		.EXTRN LIB$ESTEMU
;
;
;			NOTE
;	An image linked with this module is not PIC and is 
;	not shareable.
;
;
; CALLING SEQUENCE:
;
;	This routine is called by the command language interpreter
;	with the following sequence:
;
;	CALL LIB$ESTEMU (init_co_routine, cli_co_routine)
;
; FORMAL PARAMETERS:
;
	init_co_routine = 4	; Address of library co-routine to
				; be called to effect a co-routine
				; linkage with LIB$INITIALIZE.
	cli_co_routine = 8	; Address of the command language
				; interpreter co-routine used to obtain
				; command language arguments.  This
				; parameter is not used here.
;
; IMPLICIT INPUTS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; ROUTINE VALUE:
;
;	NONE
;
; SIDE EFFECTS:
;
;	The instruction emulator LIB$EMULATE is established as
;	a condition handler on the image's stack frame.
;
;--

	.ENTRY	LIB$ESTEMU, ^M<>	; Global symbol definition
	MOVAB	G^LIB$EMULATE, (FP)	; Establish the emulator as
					; a condition handler
	CALLG	(AP), @init_co_routine(AP) ; Continue initialization
					; process by doing a callback
					; to the CLI.

	RET				; Return with program's exit
					; status.


	.END				; End of module LIB$ESTEMU
