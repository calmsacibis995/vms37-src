MODULE LIB$SYS_ASCTIM (

	IDENT = '1-008'		! File: LIBASCTIM.B32 EDIT: RKR1008

		      ) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:  General Library Support
!
! ABSTRACT:
!
!	This routine calls $ASCTIM to convert binary date and time
! to an ASCII string, returning the resultant string using the 
! semantics of the caller's string
!	Parameter CONVFLG is presented to this routine by-reference
! and promoted to by-value for presentation to $ASCTIM.
!
! ENVIRONMENT:  VAX-11 User Mode
!
! AUTHOR: R. Reichert, CREATION DATE: 20-SEPT-1979
!
! MODIFIED BY:
!
! 1-001	- Original.  RKR 20-SEPT-1979
! 1-002 - Change name to LIB$SYS_ASCTIM. RKR 15-OCT-79
! 1-003 - Change logic for status returned. Improve comments.
!	  RKR 20-OCT-79
! 1-004 - Add code to promote by-reference arguments to by-value.
!	  RKR 1-NOV-79
! 1-005 - Change STR$ codes to LIB$ codes. RKR 22-JAN-80
! 1-006 - Enhance to recognize additional classes of string descriptors
!	  on output by always getting data into internal buffer and
!	  using LIB$SCOPY_DXDX6 to deliver to caller's buffer.
!	  LIB$ANALYZE_SDESC_R3 is used to compute the number of bytes
!	  actually copied after the copy operation completes.
!	  Change to use LIB$SCOPY_DXDX6 instead of STR$COPY_DX.  This
!	  avoids having to change STR$ statuses to LIB$ statuses and
!	  eliminates need for a handler.
!	  RKR 29-MAY-1981.
! 1-007 - Add special-case code to speed up performance for strings that
!	  "read" like fixed strings.   RKR 7-OCT-1981.
! 1-008 - Redirect jsb's from LIB$ANALYZE_SDESC_R3 to
!	  LIB$ANALYZE_SDESC_R2.  Redirect jsb from LIB$SCOPY_DXDX6 to
!	  LIB$SCOPY_R_DX6 to gain a little more speed.
!	  RKR 18-NOV-1981.
!--

!<BLF/PAGE>

!
! SWITCHES:
!

SWITCHES ADDRESSING_MODE 
		(EXTERNAL = GENERAL, NONEXTERNAL = WORD_RELATIVE);

!
! LINKAGES:
!
REQUIRE 'RTLIN:STRLNK';		! linkage for LIB$ANALYZE_SDESC_R2
!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    LIB$SYS_ASCTIM;			! Convert date and time

!
! INCLUDE FILES:
!

REQUIRE 'RTLIN:RTLPSECT';		! Macros for defining psects

LIBRARY 'RTLSTARLE';			! System symbols and macros

!
! MACROS:
!
!	NONE
!
! EQUATED SYMBOLS:
!
LITERAL
	LOCAL_BUF_SIZE = 42 ; ! The maximum number of characters that
			      ! can be returned by a call to $ASCTIM
!
! PSECTS:
!
DECLARE_PSECTS (LIB);		! Declare psects for LIB$ facility
!
! OWN STORAGE:
!
!	NONE
!
! EXTERNAL REFERENCES:
!

EXTERNAL ROUTINE
    LIB$ANALYZE_SDESC_R2 : LIB$ANALYZE_SDESC_JSB_LINK, ! Extract length
						       ! and address of
						       ! 1st data byte
						       ! from descriptor
    LIB$SCOPY_R_DX6 : STRING_JSB;		! Copy string

GLOBAL ROUTINE LIB$SYS_ASCTIM (		! Convert date and time

	LENGTH,			! Length returned
	RESULT_ADDR,		! Descriptor of user's string
	TIMEADR,		! Time value to convert
	CONVFLG			! Flags

			      ) : =
!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine calls $ASCTIM to convert binary date and time
! to an ASCII string, returning the resultant string using the 
! semantics of the caller's string
!	Parameter CONVFLG is presented to this routine by-reference
! and promoted to by-value for presentation to $ASCTIM.
!
!
! FORMAL PARAMETERS:
!
!	LENGTH.ww.r		Address of a word to receive the length
!				of the output string returned.
!				(Optional parameter)
!
!	RESULT_ADDR.wt.dx	Address of the descriptor into which
!				the resulting date and time is written.
!
!	TIMEADR.rqu.r		Address of the 64-bit time value to be
!				converted.  If no address is specified,
!				or is specified as zero (the default),
!				the current system date and time are
!				returned.  A positive time value
!				represents an absolute time.  A Negative
!				time  value represents a delta time.  If
!				a delta time is specified, it must be
!				less than 10,000 days.
!				(Optional parameter)
!
!	CONVFLG.rlu.r		Address of a
!				Conversion indicator.  A value of 1
!				causes only the hour, minute, second,
!				and hundredths of a second to be
!				returned, depending on the length of the
!				buffer.  A value of 0 (the default)
!				causes the full date and time to be
!				returned, depending on the length of the
!				buffer.
!				(Optional parameter)
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! COMPLETION CODES:
!
!	SS$_NORMAL	Procedure successfully completed
! From LIB$SCOPY_R_DX6
!	LIB$_STRTRU	Success, but source string truncated
!	LIB$_INSVIRMEM	Insufficient virtual memory
!	LIB$_INVSTRDES	Invalid string descriptor
! From $ASCTIM
!	SS$_IVTIME	The specified delta time is greater than or
!			equal to 10,000 days.
!
!
! SIDE EFFECTS:
!
!	May request the current date and time from VAX/VMS.
!
!--

    BEGIN
    BUILTIN
	NULLPARAMETER,
	ACTUALPARAMETER ;

    LOCAL
				! output buffer
	COPY_STATUS,		! Status from LIB$SCOPY_R_DX6 call
	STR_STATUS,	        ! Status from $ASCTIM call
	DATE_TIME_BUF : VECTOR [LOCAL_BUF_SIZE, BYTE], ! Local buffer
	BUFFER_DESC : BLOCK [8, BYTE];		       ! Descr for local
							! buffer

MAP
	RESULT_ADDR : REF BLOCK [,BYTE] ,
	LENGTH: REF VECTOR [,WORD] ;

!+
! Construct a static descriptor to receive the date and time from
! VAX/VMS
!-
    BUFFER_DESC [DSC$W_LENGTH] = LOCAL_BUF_SIZE;
    BUFFER_DESC [DSC$B_DTYPE] = DSC$K_DTYPE_T;
    BUFFER_DESC [DSC$B_CLASS] = DSC$K_CLASS_S;
    BUFFER_DESC [DSC$A_POINTER] = DATE_TIME_BUF;

!+
! Call $ASCTIM using the appropriate combination of caller's
! parameters, default parameters and internal variables.
!-

    STR_STATUS = $ASCTIM (
	    TIMLEN = BUFFER_DESC, ! NOTE: length will get rewritten with
	    TIMBUF = BUFFER_DESC, !       actual length returned
	    TIMADR = (IF NULLPARAMETER(3)
		THEN 0
		ELSE ACTUALPARAMETER(3) ),
	    CVTFLG = ( IF NULLPARAMETER(4) 
		THEN 0
		ELSE .ACTUALPARAMETER(4) )
		) ;

!+
! Copy internal buffer to caller's buffer, letting LIB$SCOPY_R_DX6
! worry about its semantics.
!-
    COPY_STATUS = LIB$SCOPY_R_DX6 (.BUFFER_DESC [DSC$W_LENGTH], 
				   .BUFFER_DESC [DSC$A_POINTER],
				   .RESULT_ADDR ) ;

!+
! If caller supplied optional length parameter, update it.
! To do this accurately, we need to inspect the resulting descriptor
! as it appears after the copy.  Get LIB$ANALYZE_SDESC_R2 to do it.
! No need to check LIB$ANALYZE_SDESC_R2 status.  If RESULT_ADDR descr
! was bad, LIB$SCOPY_R_DX6 would have told us about it.
!-
    IF (NOT NULLPARAMETER(1)) 
    THEN 
	BEGIN
	LOCAL
	    RESULT_LEN,		! No. of bytes delivered to caller
	    RESULT_ADDRESS;	! Address of 1st data byte of callers
				! buffer
	IF .RESULT_ADDR [ DSC$B_CLASS] GTRU DSC$K_CLASS_D
	THEN			! Must use general extraction
	    BEGIN
	    LIB$ANALYZE_SDESC_R2 ( .RESULT_ADDR ; 
			           RESULT_LEN, RESULT_ADDRESS );
	    END

	ELSE			! Can fetch length directly

	    RESULT_LEN = .RESULT_ADDR [DSC$W_LENGTH] ;

	LENGTH [0] = MIN (.BUFFER_DESC [DSC$W_LENGTH], .RESULT_LEN) ;
	END;
!+
! At this point we have 2 statuses that we could return to caller.
! Determine which one is the "most meaningful".
!-
    !+
    ! If original $ASCTIM call failed, tell him about that
    ! else give him the copy status.
    !-
    IF NOT .STR_STATUS THEN RETURN (.STR_STATUS)
		       ELSE RETURN (.COPY_STATUS) ;

    END;				! end of LIB$SYS_ASCTIM

END					! end of module LIB$SYS_ASCTIM

ELUDOM
