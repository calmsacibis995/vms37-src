	.TITLE	SATSSF14 - SATS SYSTEM SERVICE TESTS  (FAILING S.C.)
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	SATS SYSTEM SERVICE TESTS
;
; ABSTRACT:	THE SATSSF14 MODULE TESTS THE EXECUTION OF CERTAIN
; VMS SYSTEM SERVICES, INVOKED IN SUCH A WAY AS TO EXPECT FAILING
; STATUS CODES. THE SYSTEM SERVICES TESTED AND THE STATUS CODES
; EXPECTED ARE SUMMARIZED AS ARGUMENTS TO THE TESTSERV MACROS
; WHICH APPEAR NEAR THE END OF THIS LISTING. SUCCESSFUL STATUS
; CODES ARE TESTED IN OTHER MODULES.
;
;
; ENVIRONMENT:	USER MODE IMAGE; NEEDS CMKRNL PRIVILEGE,
;		DYNAMICALLY ACQUIRES OTHER PRIVILEGES, AS NEEDED.
;
; AUTHOR: THOMAS L. CAFARELLA,		CREATION DATE: MMM, 1978
;	  PAUL D. FAY (DISPSERV & TESTSERV MACROS)
;
; MODIFIED BY:
;
;	, : VERSION
; 01	- 
;--
	.PAGE
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	$PHDDEF				; PROCESS HEADER OFFSET SYMBOLS
	$PCBDEF				; PROCESS CONTROL BLOCK OFFSET SYMBS
	$STSDEF				; STATUS MESSAGE SYMBOLS
	$PRVDEF				; SYMBOL DEFS FOR PRIVILEGES
	$UETPDEF			; UETP MSG CODE DEFINITIONS
	$SHR_MESSAGES UETP,116,<<TEXT,INFO>> 
					; DEFINE UETP$_TEXT
					; GET RID OF MACRO DEFINITIONS
	$PSLDEF				; ACCESS MODE SYMBOLS
;
; MACROS:
;
;
; EQUATED SYMBOLS:
;
WARNING		= 0			; WARNING SEVERITY VALUE FOR MSGS
SUCCESS		= 1			; SUCCESS SEVERITY VALUE FOR MSGS
ERROR		= 2			; ERROR SEVERITY VALUE FOR MSGS
INFO		= 3			; INFORMATIONAL SEV VALUE FOR MSGS
SEVERE		= 4			; SEVERE (FATAL) SEV VALUE FOR MSGS
TCG_NO		=  0			; INITIALIZE TEST CASE GROUP NUMBER
GRP_TOTAL	=  0			; INITIALIZE TEST CASE GROUP TOTAL
R0_THRU_SP	= ^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP,SP>
INADR_LWS12	= 0			; INADR ARG FOR LKWSET (LOCATION 0)
RETADR_LWS20	= 1			; RETADR ARG FOR LKWSET (LOCATION 1)
INADR_UWS12	= 0			; INADR ARG FOR ULWSET (LOCATION 0)
RETADR_UWS20	= 1			; RETADR ARG FOR ULWSET (LOCATION 1)
INADR_LKP12	= 0			; INADR ARG FOR LCKPAG (LOCATION 0)
RETADR_LKP20	= 1			; RETADR ARG FOR LCKPAG (LOCATION 1)
INADR_ULP12	= 0			; INADR ARG FOR ULKPAG (LOCATION 0)
RETADR_ULP20	= 1			; RETADR ARG FOR ULKPAG (LOCATION 1)
;
; OWN STORAGE:
;
	.PAGE
	.PSECT	RODATA,RD,NOWRT,NOEXE,LONG
REG_COMP_MASK:	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP> ! ^X8000 -
					; REG COMPARE MASK (HIGH-ORDER ... 
					; ... BIT MUST BE ON
ERR_MSG_FAOCTL:	STRING	I,<!/!AC!1ZB!1ZB: REGISTER !2UW CONTENTS ALTERED>, -
		<;  BEFORE SERVICE CALL: !8XL   AFTER SERVICE CALL: !8XL>
TEST_MOD_NAME:	STRING	C,<SATSSF14>	; TEST MODULE NAME
TEST_MOD_BEG:	STRING	C,<begun>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_SUCC:	STRING	C,<successful>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_FAIL:	STRING	C,<failed>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_NAME_D: STRING	I,<SATSSF14>	; TEST MODULE NAME DESCRIPTOR
TTNAME:     	STRING  I,<TT>		; TERMINAL LOGICAL NAME
INADR:		.LONG	NOACCESS,NOACCESS ; PAGE ADDRESS OF NOACCESS PSECT
PROT:		.LONG	PRT$C_NA	; PROTECTION CODE FOR NOACCESS PSECT
ONES:		.LONG	-1,-1		; A QUADWORD OF 1-BITS
INADR_LWS10:				; INADR ARGUMENT FOR LKWSET
INADR_UWS10:				; INADR ARGUMENT FOR ULWSET
		.ADDRESS ^X80000000 	; ......
		.ADDRESS ^X8F000000	; .......
INADR_LKP10:				; INADR ARGUMENT FOR LCKPAG
		.ADDRESS .,.		; ..... THIS PAGE
RETADR_LWS21:				; RETADR ARGUMENT FOR LKWSET
RETADR_UWS21:				; RETADR ARGUMENT FOR ULWSET
RETADR_LKP21:				; RETADR ARGUMENT FOR LCKPAG
RETADR_ULP21:				; RETADR ARGUMENT FOR ULKPAG
		.BLKL	2
ACMODE_LWS:				; ACMODE ARGUMENT FOR LKWSET
ACMODE_UWS:				; ACMODE ARGUMENT FOR ULWSET
		.LONG	PSL$C_USER
	.PAGE
	.PSECT	RWDATA,RD,WRT,NOEXE
TPID:		.BLKL	1		; PROCESS ID FOR THIS PROCESS
CURRENT_TC:	.BLKL	1 		; PTR TO CURRENT TEST CASE
REG_SAVE_AREA:	.BLKL	15		; SAVE AREA FOR ALL REGS (SANS PC)
MOD_MSG_CODE:	.LONG	UETP$_SATSMS	; TEST MODULE MSG CODE FOR PUTMSG
CLOB_REG_NO:	.BLKL	1		; CLOBBERED REG NO (FOR FAO ERR MSG)
REG_BEFORE_SS:	.BLKL	1		; REG CONTENTS BEFORE S.S. 
					; ... (FOR FAO ERROR MSG)
REG_AFTER_SS:	.BLKL	1		; REG CONTENTS AFTER S.S. 
					; ... (FOR FAO ERROR MSG)
$$TSTN$$:	STRING	C,<  SF   >	; ASCII PORTION OF TEST CASE NAME
TMN_ADDR:	.ADDRESS TEST_MOD_NAME	; ADDR OF TEST MOD NAME FOR FAO
TMD_ADDR:	.ADDRESS TEST_MOD_BEG	; ADDR OF T.M. DISP FIELD FOR FAO
TS_EP:		.BLKL	1		; ENTRY PNT FOR CURR TESTSERV MACRO
RETADR:		.BLKL	2		; RETURN LONGWORDS FOR SETPRT
PRVPRT:		.BLKB	1		; PROT RETURN BYTE FOR SETPRT
PRIVMASK:	.BLKQ	1		; ADDR OF PRIVILEGE MASK (IN PHD)
CHM_CONT:	.BLKL	1		; CHANGE MODE CONTINUE ADDRESS
REGS:		.BLKL	5		; AREA FOR COND INDEX REGS (R2-R6)
INADR_LWS:	.BLKL	2		; INADR ARGUMENT FOR LKWSET SERVICE
INADR_LWS11:	.BLKL	2		; INADR ARGUMENT FOR LKWSET SERVICE
RETADR_LWS:	.BLKL	2		; RETADR ARGUMENT FOR LKWSET SERVICE
INADR_UWS:	.BLKL	2		; INADR ARGUMENT FOR ULWSET SERVICE
INADR_UWS11:	.BLKL	2		; INADR ARGUMENT FOR ULWSET SERVICE
RETADR_UWS:	.BLKL	2		; RETADR ARGUMENT FOR ULWSET SERVICE
INADR_LKP:	.BLKL	2		; INADR ARGUMENT FOR LCKPAG SERVICE
INADR_LKP11:	.BLKL	2		; INADR ARGUMENT FOR LCKPAG SERVICE
RETADR_LKP:	.BLKL	2		; RETADR ARGUMENT FOR LCKPAG SERVICE
INADR_ULP:	.BLKL	2		; INADR ARGUMENT FOR ULKPAG SERVICE
INADR_ULP11:	.BLKL	2		; INADR ARGUMENT FOR ULKPAG SERVICE
RETADR_ULP:	.BLKL	2		; RETADR ARGUMENT FOR ULKPAG SERVICE
	.PAGE
	.PSECT	SATS_ACCVIO_1,RD,WRT,NOEXE,PAGE
EMPTY:		.BLKB	512		; RESERVE A PAGE OF SPACE
;
; + 
; ******************************************************************
; *                                                                *
; * 	THE ORDER OF STATEMENTS IN THIS PSECT IS CRITICAL.         *
; *	DO NOT RE-ARRANGE THE VARIABLES. CONSULT SATS              *
; *	FUNCTIONAL SPECIFICATION FOR A DESCRIPTION OF THE USE      *
; *	OF THE EMPTY PSECT (AND ITS COMPANION PSECT, NOACCESS).    *
; *                                                                *
; ******************************************************************
; -
;
; TYPE AAAAA_SSSX1 (TYPE AAAAA_SSSX2 IF NOT DESC) GO HERE:
INADR_ULP10	= . - 1			; INADR ARG FOR ULKPAG (LAST BYTE IN PAGE)
INADR_LWS14	= . - 7			; INADR ARGUMENT FOR LKWSET
RETADR_LWS22	= . - 7			; RETADR ARGUMENT FOR LKWSET
INADR_UWS14	= . - 7			; INADR ARGUMENT FOR ULWSET
RETADR_UWS22	= . - 7			; RETADR ARGUMENT FOR ULWSET
INADR_LKP14	= . - 7			; INADR ARGUMENT FOR LCKPAG
RETADR_LKP22	= . - 7			; RETADR ARGUMENT FOR LCKPAG
INADR_ULP14	= . - 7			; INADR ARGUMENT FOR ULKPAG
RETADR_ULP22	= . - 7			; RETADR ARGUMENT FOR ULKPAG
		. = . - 13		; ALLOW ROOM FOR STRING DESCRIPTOR
; TYPE AAAAA_SSSX5 GO HERE:
		.LONG	6		; STRING LENGTH (WILL CROSS PSECT BOUNDARY)
		.ADDRESS .+4		; STRING ADDRESS
; TYPE AAAAA_SSSX3 GO HERE:
		.BLKB	1		; LOW-ORDER BYTE OF STRING LENGTH
; TYPE AAAAA_SSSX2 GO HERE:
		.BLKL	1		; STRING LENGTH
;
;
;
;
	.PSECT	SATS_ACCVIO_2,RD,WRT,NOEXE,PAGE
NOACCESS:	.BLKB	512		; RESERVE A PAGE OF SPACE
		. = . - 512		; RETURN LOC CTR TO BEGINNING OF PSECT
		.ADDRESS EMPTY		; ADDRESS OF ACCESSIBLE STRING
		.ADDRESS EMPTY/^X100 	; ADDRESS OF ACCESSIBLE STRING
;+
; *** NOTE -- DO NOT CHANGE LOCATION OR SEQUENCE OF ABOVE STATEMENTS!
; ***         THIS PSECT (NOACCESS) MUST APPEAR IN MEMORY IMMEDIATELY
; ***         FOLLOWING THE EMPTY PSECT. PSECT NAMES AND OPTIONS WILL BE 
; ***         CHOSEN TO FORCE THE DESIRED PSECT ORDERING.
;-
;
INADR_LWS13:	.BLKL	2		; INADR ARGUMENT FOR LKWSET
INADR_UWS13:	.BLKL	2		; INADR ARGUMENT FOR ULWSET
INADR_LKP13:	.BLKL	2		; INADR ARGUMENT FOR LCKPAG
INADR_ULP13:	.BLKL	2		; INADR ARGUMENT FOR ULKPAG
;
;
;
	.PSECT	SATSSF14,RD,WRT,EXE,LONG
	.PAGE
	.SBTTL	SATSSF14
;++
; FUNCTIONAL DESCRIPTION:
;
;		AFTER PERFORMING SOME INITIAL HOUSEKEEPING, SUCH AS
; PRINTING THE MODULE BEGIN MESSAGE AND ACQUIRING ALL PRIVILEGES,
; THE SATSSF14 ROUTINE EXECUTES THE TEST_SERV_EXEC MACRO TO RUN
; ALL TEST CASES. WHEN THE MACRO COMPLETES ITS EXECUTION, SATSSF14
; PRINTS A TEST MODULE SUCCESS OR FAIL MESSAGE AND EXITS TO THE
; OPERATING SYSTEM. TEST_SERV_EXEC CALLS THE TC_CONTROL/TESTSERV
; CO-ROUTINE PAIR ONCE PER TEST CASE GROUP TO EXECUTE ALL TEST
; CASES IN THAT GROUP. EACH TEST CASE GROUP IS DEFINED BY BOUNDING
; ITS TEST CASES WITH A TC_GROUP MACRO BEFORE THE FIRST TEST CASE
; AND A TCEND MACRO AFTER THE LAST ONE. THE TEST CASES THEMSELVES
; ARE DEFINED WITHIN THESE BOUNDS BY PRECEDING EACH WITH A
; NEXT_TEST_CASE MACRO. TC_CONTROL/TESTSERV EXECUTES THE CODE 
; FOLLOWING EACH NEXT_TEST_CASE MACRO IMMEDIATELY BEFORE ISSUING
; THE SYSTEM SERVICE AS REQUESTED IN THE TESTSERV MACRO. TC_CONTROL/
; TESTSERV ALSO CHECKS THE RESULTS OF THE SERVICE WITH RESPECT
; TO ITS EXPECTED STATUS CODE AND PRINTS ANY REQUIRED FAILURE
; MESSAGES FOR THE TEST CASE. THE CODE APPEARING AFTER EACH
; NEXT_TEST_CASE MACRO IS MERELY TO SET UP CONDITIONS REQUIRED
; FOR THE SYSTEM SERVICE AND TO CLEAN UP ANY RESOURCES ACQUIRED
; BY THE PREVIOUS TEST CASE.
;
; CALLING SEQUENCE:
;
;	$ RUN SATSSF14  ...  (DCL COMMAND)
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	MESSAGES TO SYS$OUTPUT ARE THE ONLY OUTPUT FROM SATSSF14.
;	THEY ARE OF THE FORM:
;
;		%UETP-S-SATSMS, TEST MODULE SATSSF14 BEGUN ... (BEGIN MSG)
;		%UETP-S-SATSMS, TEST MODULE SATSSF14 SUCCESSFUL ... (END MSG)
;		%UETP-E-SATSMS, TEST MODULE SATSSF14 FAILED ... (END MSG)
;		%UETP-I-TEXT, ... (VARIABLE INFORMATION ABOUT A TEST MODULE FAILURE)
;
; COMPLETION CODES:
;
;	THE SATSSF14 ROUTINE TERMINATES WITH A $EXIT TO THE
;	OPERATING SYSTEM WITH A STATUS CODE DEFINED BY UETP$_SATSMS.
;
; SIDE EFFECTS:
;
;	NONE
;
;--



SATSSF14:
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
					; ENTRY MASK
	$WAKE_S  TPID			; GET PID OF THIS PROCESS
	$HIBER_S			; UNDO WAKE
	$SETPRN_S TEST_MOD_NAME_D 	; SET PROCESS NAME
	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE BEGIN MSG
	MOVAL	TEST_MOD_SUCC,TMD_ADDR	; ASSUME END MSG WILL SHOW SUCCESS
	INSV	#SUCCESS,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR SUCCESS
	MODE	TO,10$,KRNL,NOREGS 	; KERNEL MODE TO ACCESS PHD
	MOVL	@#CTL$GL_PHD,R9		; GET PROCESS HEADER ADDRESS
	MOVAL	PHD$Q_PRIVMSK(R9),PRIVMASK ; GET PRIV MASK ADDRESS
	MODE	FROM,10$		; GET BACK TO USER MODE
	PRIV	ADD,ALL			; GET ALL PRIVILEGES
	DISPSERV			; SET UP DISPLAY INFO FOR TESTSERV
	$SETPRT_S INADR=INADR, RETADR=RETADR, -
		  PROT=PROT, PRVPRT=PRVPRT
					; SET NOACCESS PSECT ...
					; ... FOR NO USER ACCESS
	BRW	EXECUTE			; GO EXECUTE ALL TEST CASES
;
	TC_GROUP	LWS,1,TS1
;
	NEXT_TEST_CASE	SFLWS10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS10      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LWS10         
; *
; *  INPUT CONDITIONS:
; *	ISSUE LKWSET WITH RANGE OF ADDRESSES IN
; *	  SYSTEM SPACE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLWS11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS11      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LWS11         
; *
; *  INPUT CONDITIONS:
; *	LOCK INTO WORKING SET A PAGE ALREADY 
; *	  OWNED BY EXEC MODE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,10$,EXEC,NOREGS	; GET INTO EXEC MODE FOR EXPREG
	$EXPREG_S PAGCNT=#1, RETADR=INADR_LWS11
					; GET A 1-PAGE REGION OWNED BY EXEC MODE
	MODE	FROM,10$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFLWS12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS12      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LWS12         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD AT LOCATION 0.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,20$,EXEC,NOREGS	; INTO EXEC MODE FOR CNTREG
	$CNTREG_S PAGCNT=#1		; GIVE BACK PAGE ACQUIRED BY SFLWS11
	MODE	FROM,20$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFLWS13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS13      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LWS13         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLWS14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS14      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LWS14         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF INPUT ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLWS20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS20      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LWS20         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD AT LOCATION 1.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLWS21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS21      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LWS21         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD IN READ-ONLY PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLWS22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLWS22      
; *
; *  SYSTEM SERVICE:		LKWSET               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LWS22         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF RETURN ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	TCEND
;
	TC_GROUP	UWS,1,TS2
;
	NEXT_TEST_CASE	SFUWS10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS10      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_UWS10         
; *
; *  INPUT CONDITIONS:
; *	ISSUE ULWSET WITH RANGE OF ADDRESSES IN
; *	  SYSTEM SPACE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFUWS11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS11      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_UWS11         
; *
; *  INPUT CONDITIONS:
; *	UNLOCK A PAGE ALREADY OWNED BY EXEC MODE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,10$,EXEC,NOREGS	; GET INTO EXEC MODE FOR EXPREG
	$EXPREG_S PAGCNT=#1, RETADR=INADR_UWS11
					; GET A 1-PAGE REGION OWNED BY EXEC MODE
	MODE	FROM,10$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFUWS12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS12      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_UWS12         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD AT LOCATION 0.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,20$,EXEC,NOREGS	; INTO EXEC MODE FOR CNTREG
	$CNTREG_S PAGCNT=#1		; GIVE BACK PAGE ACQUIRED BY SFUWS11
	MODE	FROM,20$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFUWS13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS13      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_UWS13         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFUWS14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS14      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	INADR_UWS14         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF INPUT ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFUWS20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS20      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_UWS20         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD AT LOCATION 1.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFUWS21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS21      
; *
; *  SYSTEM SERVICE:		ULWSET               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_UWS21         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD IN READ-ONLY PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFUWS22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFUWS22      
; *
; *  SYSTEM SERVICE:		ULWSET               

; *
; *  ARGUMENT UNDER TEST: 	RETADR_UWS22         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF RETURN ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	TCEND
;
	TC_GROUP	LKP,1,TS3
;
	NEXT_TEST_CASE	SFLKP10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP10      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LKP10         
; *
; *  INPUT CONDITIONS:
; *	LOCK PAGE INTO MEMORY WITHOUT PROPER PRIVILEGE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	REM,PSWAPM		; REMOVE PRIV REQUIRED TO LOCK PAGES
;
	NEXT_TEST_CASE	SFLKP11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP11      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LKP11         
; *
; *  INPUT CONDITIONS:
; *	LOCK A PAGE ALREADY OWNED BY EXEC MODE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	ADD,PSWAPM		; GET BACK PRIVILEGE REMOVED BY SFLKP10
	MODE	TO,10$,EXEC,NOREGS	; GET INTO EXEC MODE FOR EXPREG
	$EXPREG_S PAGCNT=#1, RETADR=INADR_LKP11
					; GET A 1-PAGE REGION OWNED BY EXEC MODE
	MODE	FROM,10$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFLKP12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP12      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LKP12         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD AT LOCATION 0.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,20$,EXEC,NOREGS	; INTO EXEC MODE FOR CNTREG
	$CNTREG_S PAGCNT=#1		; GIVE BACK PAGE ACQUIRED BY SFLKP11
	MODE	FROM,20$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFLKP13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP13      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LKP13         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLKP14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP14      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_LKP14         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF INPUT ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLKP20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP20      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LKP20         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD AT LOCATION 1.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLKP21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP21      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LKP21         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD IN READ-ONLY PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFLKP22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFLKP22      
; *
; *  SYSTEM SERVICE:		LCKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_LKP22         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF RETURN ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	TCEND
;
	TC_GROUP	ULP,1,TS4
;
	NEXT_TEST_CASE	SFULP10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP10      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_ULP10         
; *
; *  INPUT CONDITIONS:
; *	FIRST LONGWORD OF INPUT ADDRESS ARRAY BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFULP11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP11      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_ULP11         
; *
; *  INPUT CONDITIONS:
; *	UNLOCK A PAGE ALREADY OWNED BY EXEC MODE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,10$,EXEC,NOREGS	; GET INTO EXEC MODE FOR EXPREG
	$EXPREG_S PAGCNT=#1, RETADR=INADR_ULP11
					; GET A 1-PAGE REGION OWNED BY EXEC MODE
	MODE	FROM,10$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFULP12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP12      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_ULP12         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD AT LOCATION 0.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MODE	TO,20$,EXEC,NOREGS	; INTO EXEC MODE FOR CNTREG
	$CNTREG_S PAGCNT=#1		; GIVE BACK PAGE ACQUIRED BY SFULP11
	MODE	FROM,20$		; BACK TO USER MODE
;
	NEXT_TEST_CASE	SFULP13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP13      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_ULP13         
; *
; *  INPUT CONDITIONS:
; *	INPUT ADDRESS FIELD IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFULP14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP14      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	INADR_ULP14         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF INPUT ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFULP20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP20      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_ULP20         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD AT LOCATION 1.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFULP21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP21      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_ULP21         
; *
; *  INPUT CONDITIONS:
; *	RETURN ADDRESS FIELD IN READ-ONLY PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFULP22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFULP22      
; *
; *  SYSTEM SERVICE:		ULKPAG               
; *
; *  ARGUMENT UNDER TEST: 	RETADR_ULP22         
; *
; *  INPUT CONDITIONS:
; *	SECOND LONGWORD OF RETURN ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	TCEND
TS1:
	TESTSERV	LKWSET,ERR,SATS,				-
                                          				-
	   <1,INADR_LWS,						-
	        	INADR_LWS10,NOPRIV,	-  ; SFLWS10
	        	INADR_LWS11,ACCVIO,	-  ; SFLWS11
	        	INADR_LWS12,ACCVIO,	-  ; SFLWS12
	        	INADR_LWS13,ACCVIO,	-  ; SFLWS13
	        	INADR_LWS14,ACCVIO,	-  ; SFLWS14
                                                  >,			-
                                          				-
	   <1,RETADR_LWS,						-
	        	RETADR_LWS20,ACCVIO,	-  ; SFLWS20
	        	RETADR_LWS21,ACCVIO,	-  ; SFLWS21
	        	RETADR_LWS22,ACCVIO,	-  ; SFLWS22
                                                  >,			-
                                          				-
	   <1,ACMODE_LWS,						-
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS2:
	TESTSERV	ULWSET,ERR,SATS,				-
                                          				-
	   <1,INADR_UWS,						-
	        	INADR_UWS10,NOPRIV,	-  ; SFUWS10
	        	INADR_UWS11,ACCVIO,	-  ; SFUWS11
	        	INADR_UWS12,ACCVIO,	-  ; SFUWS12
	        	INADR_UWS13,ACCVIO,	-  ; SFUWS13
	        	INADR_UWS14,ACCVIO,	-  ; SFUWS14
                                                  >,			-
                                          				-
	   <1,RETADR_UWS,						-
	        	RETADR_UWS20,ACCVIO,	-  ; SFUWS20
	        	RETADR_UWS21,ACCVIO,	-  ; SFUWS21
	        	RETADR_UWS22,ACCVIO,	-  ; SFUWS22
                                                  >,			-
                                          				-
	   <1,ACMODE_UWS,						-
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS3:
	TESTSERV	LCKPAG,ERR,SATS,				-
                                          				-
	   <1,INADR_LKP,						-
	        	INADR_LKP10,NOPRIV,	-  ; SFLKP10
	        	INADR_LKP11,ACCVIO,	-  ; SFLKP11
	        	INADR_LKP12,ACCVIO,	-  ; SFLKP12
	        	INADR_LKP13,ACCVIO,	-  ; SFLKP13
	        	INADR_LKP14,ACCVIO,	-  ; SFLKP14
                                                  >,			-
                                          				-
	   <1,RETADR_LKP,						-
	        	RETADR_LKP20,ACCVIO,	-  ; SFLKP20
	        	RETADR_LKP21,ACCVIO,	-  ; SFLKP21
	        	RETADR_LKP22,ACCVIO,	-  ; SFLKP22
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS4:
	TESTSERV	ULKPAG,ERR,SATS,				-
                                          				-
	   <1,INADR_ULP,						-
	        	INADR_ULP10,ACCVIO,	-  ; SFULP10
	        	INADR_ULP11,ACCVIO,	-  ; SFULP11
	        	INADR_ULP12,ACCVIO,	-  ; SFULP12
	        	INADR_ULP13,ACCVIO,	-  ; SFULP13
	        	INADR_ULP14,ACCVIO,	-  ; SFULP14
                                                  >,			-
                                          				-
	   <1,RETADR_ULP,						-
	        	RETADR_ULP20,ACCVIO,	-  ; SFULP20
	        	RETADR_ULP21,ACCVIO,	-  ; SFULP21
	        	RETADR_ULP22,ACCVIO,	-  ; SFULP22
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
	.SBTTL	EXECUTE & CLEANUP
EXECUTE:
	TEST_SERV_EXEC			; EXECUTE ALL T. CASES IN ALL GROUPS
CLEANUP:
	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE END MSG
	INSV	#1,#STS$V_INHIB_MSG,#1,MOD_MSG_CODE 
					; INHIBIT PRINTING
	$EXIT_S	MOD_MSG_CODE		; EXIT TO OP SYS WITH MSG CODE
	.PAGE
	.SBTTL	TC_CONTROL
;++
; FUNCTIONAL DESCRIPTION:
;
;		THE TC_CONTROL SUBROUTINE IS CALLED BY THE TEST_SERV_EXEC
; MACRO TO EXECUTE A GROUP OF TEST CASES. A GROUP IS DEFINED BY A TC_GROUP
; MACRO. FOR EACH TC_GROUP MACRO, THERE IS A CORRESPONDING TESTSERV MACRO.
; TESTSERV CONTAINS CODE TO EXECUTE SYSTEM SERVICES AND CHECK THE RETURNED
; STATUS CODE VALUES. TESTSERV ARGUMENTS ARE CODED TO SPECIFY ALL THE SYSTEM
; SERVICE ARGUMENT VALUES AND THE EXPECTED STATUS CODE FOR EACH TEST CASE
; DEFINED BY A NEXT_TEST_CASE MACRO WITHIN THE GROUP. TC_CONTROL USES A
; CO-ROUTINE INTERFACE TO ENTER THE CODE OF THE APPROPRIATE TESTSERV MACRO
; IN VARIOUS PLACES. THE FIRST ENTRY OCCURS ONCE PER GROUP TO ALLOW TESTSERV
; TO DO SOME INITIALIZATION. THEN TWO ENTRIES ARE MADE FOR EACH TEST CASE IN
; THE GROUP. THE FIRST ALLOWS TESTSERV TO ISSUE THE SUBJECT SYSTEM SERVICE.
; THE SECOND ENTRY FOR THE TEST CASE CAUSES TESTSERV TO CHECK THE RETURNED
; STATUS CODE, PRINTING A FAILURE MESSAGE IF IT IS NOT THE EXPECTED CODE.
; IF THERE ARE NO MORE TEST CASES IN THE CURRENT GROUP, TESTSERV (NOT TC_CONTROL)
; RETURNS DIRECTLY TO TEST_SERV_EXEC (RSB ACTUALLY ISSUED IN TS_CLEANUP MACRO)
; FROM THIS SECOND ENTRY; OTHERWISE, CONTROL RETURNS TO TC_CONTROL WHICH
; IN TURN ENTERS TESTSERV AGAIN FOR THE NEXT TEST CASE. THE FAILURE OF A
; TEST CASE DOES NOT CAUSE TERMINATION OF THE TEST MODULE.
;
; CALLING SEQUENCE:
;
;	BSBW TC_CONTROL (ISSUED WITHIN THE TEST_SERV_EXEC MACRO)
;			(RSB IS ISSUED WITHIN THE TS_CLEANUP MACRO)
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	ARGUMENTS SPECIFIED ON EACH TESTSERV MACRO MAY BE VIEWED AS
;	INPUTS, SINCE TC_CONTROL AND TESTSERV ACT AS CO-ROUTINES.
;
; OUTPUT PARAMETERS:
;
;	SEVERITY CODE FIELD OF MOD_MSG_CODE (BITS 0,1,2) IS SET TO ERROR
;	IF ANY TEST CASE IN THE CURRENT GROUP FAILS; OTHERWISE IT REMAINS
;	SET TO SUCCESSFUL.
;
; IMPLICIT OUTPUTS:
;
;	%UETP-I-TEXT,   ERROR MESSAGES ARE WRITTEN TO SYS$OUTPUT BY
;			THE TESTSERV MACRO (CO-ROUTINE WITH TC_CONTROL)
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--



TC_CONTROL:
	PUSHL	TS_EP			; PUSH TESTSERV ENTRY POINT
	JSB	@(SP)+			; ENTER TESTSERV INITIALIZATION
10$:					; PROCESS NEXT TEST CASE
	MOVB	#^A/ /,$$TSTN$$+2 	; MAKE SURE T.C. NAME HAS A BLANK
	BSBW	REG_SAVE		; SAVE REGISTERS
	JSB	@CURRENT_TC		; JUMP TO CURRENT TEST CASE
	BSBW	REG_REST		; RESTORE REGS FOR TESTSERV
	JSB	@(SP)+			; LET TESTSERV ISSUE SYSTEM SERVICE
	BSBW	REG_COMP		; COMPARE REGS TO SEE IF ...
					; ... SYSTEM SERVICE CHANGED ANY
	JSB	@(SP)+			; LET TESTSERV CHEK S.S. STATUS CODE
	CMPB	#^A/*/,$$TSTN$$+2	; HAS TESTSERV INDICATED FAILURE ?
	BNEQU	10$			; NO -- PROCESS NEXT TEST CASE
	MOVAL	TEST_MOD_FAIL,TMD_ADDR	; YES -- INDICATE FAILED IN END MSG
	INSV	#ERROR,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR ERROR
	BRB	10$			; LOOP BAK TO PROCESS NEXT TEST CASE
;
;   TC_CONTROL RETURNS TO TEST_SERV_EXEC VIA TESTSERV (IN TS_CLEANUP MACRO)
;
	.PAGE
	.SBTTL	SUBROUTINES
REG_SAVE:
;
;  *****************************************************************
;  *                                                               *
;  *  SAVES R0 THRU SP IN REG_SAVE_AREA                            *
;  *                                                               *
;  *****************************************************************
;
	PUSHR	#R0_THRU_SP		; SAVE ALL REGS ON STACK
	MOVC3	#60,(SP),REG_SAVE_AREA	; SAVE REGS (BEFORE S.S.)
	POPR	#R0_THRU_SP		; CLEAN UP STACK
	RSB				; .... AND RETURN
;
;
;
;
REG_REST:
;
;
;  *****************************************************************
;  *                                                               *
;  *  RESTORES R0 THRU SP FROM REG_SAVE_AREA                       *
;  *                                                               *
;  *****************************************************************
;
	SUBL2	#60,SP			; MOVE SP TO MAKE ROOM FOR REGS
	MOVC3	#60,REG_SAVE_AREA,(SP)	; MOVE REGS ONTO STACK FOR POP
	POPR	#R0_THRU_SP		; RESTORE ALL REGS FOR TESTSERV
	RSB				; ... AND RETURN
	.PAGE
REG_COMP:
;
;  *****************************************************************
;  *                                                               *
;  *  1) PUSHES ALL REGS ONTO STACK                                *
;  *  2) COMPARES REGISTER IMAGES FROM STACK WITH CORRESPONDING    *
;  *       IMAGES FROM REG_SAVE_AREA FOR ALL REGISTERS SPECIFIED   *
;  *       IN REG_COMP_MASK.                                       *
;  *  3) FOR EACH UNEQUAL COMPARE, AN ERROR MESSAGE IS PRINTED     *
;  *       (USING $FAO AND $OUTPUT SYSTEM SERVICES).               *
;  *  4) POPS ALL REGS OFF OF STACK                                *
;  *                                                               *
;  *****************************************************************
;
	PUSHR	#R0_THRU_SP		; SAVE ALL REGISTERS ON STACK
	MOVAL	REG_SAVE_AREA,R6 	; POINT R6 TO BEG OF ...
					; ... REGS (BEFORE S.S.)
	MOVL	SP,R4			; POINT R4 TO BEG OF
					; ... REGS (AFTER S.S.)
	CVTBL	#-1,R3			; INITIALIZE REG_COMP_MASK INDEX
REG_COMP_NEXT:
	INCL	R3			; POINT TO NEXT BIT IN MASK
	CMPB	#15,R3			; END OF THE MASK ?
	BGTRU	REG_COMP_CONT		; NO -- CONTINUE
	BRW	REG_COMP_RSB		; YES -- GO TO COMMON RETURN
REG_COMP_CONT:
	CMPL	(R6)+,(R4)+		; REG BEFORE = REG AFTER ?
	BEQLU	REG_COMP_NEXT		; YES -- LOOK FOR NEXT REG
	BBC	R3,REG_COMP_MASK,REG_COMP_NEXT
					; NO -- GET NEXT IF BIT NOT SET
	MOVL	R3,CLOB_REG_NO		; NO -- GIVE REG NUMBER TO FAO
	MOVL	-4(R6),REG_BEFORE_SS 	; GIVE "BEFORE" CONTENTS TO FAO
	MOVL	-4(R4),REG_AFTER_SS  	; GIVE "AFTER" CONTENTS TO FAO
	MOVB	#^A/*/,$$TSTN$$+2 	; GIVE FAILURE INDIC'N IN ERROR MSG
;
	$FAO_S	ERR_MSG_FAOCTL,OUTL,OUTD,$$SNAD$$,  -
		$$ASEQ$$,$$PSEQ$$,CLOB_REG_NO,REG_BEFORE_SS,REG_AFTER_SS
;
	MOVW	OUTL,OUTD		; ACTUAL OUTPUT LEN IN STRING DESC'R
	PUTMSG	<#UETP$_TEXT,#1,#OUTD>	; PRINT THE MSG
	MOVW	#OUTE-OUTB,OUTD		; GET MAX LEN BACK INTO DESCRIPTOR
	MOVB	#^A/ /,$$TSTN$$+2 	; REMOVE FAIL INDIC'N FOR NEXT MSG
	MOVAL	TEST_MOD_FAIL,TMD_ADDR	; INDICATE FAILED IN END MSG
	INSV	#ERROR,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR ERROR
	BRW	REG_COMP_NEXT		; GO LOOK FOR NEXT REG TO COMPARE
REG_COMP_RSB:
	POPR	#R0_THRU_SP		; CLEAN UP STACK
	RSB				; RETURN TO CALLER
	.PAGE
MOD_MSG_PRINT:
;
;  *****************************************************************
;  *                                                               *
;  *  PRINTS THE TEST MODULE BEGUN/SUCCESSFUL/FAILED MESSAGES      *
;  *	   (USING THE PUTMSG MACRO).                               *
;  *                                                               *

;  *****************************************************************
;
	PUTMSG	<MOD_MSG_CODE,#2,TMN_ADDR,TMD_ADDR> ; PRINT MSG
	RSB				; ... AND RETURN TO CALLER
;
CHMRTN:
; **********************************************************
; *
; *	CHANGE MODE ROUTINE. THIS ROUTINE GETS CONTROL WHENEVER
; *	A CMKRNL, CMEXEC, OR CMSUP SYSTEM SERVICE IS ISSUED
; *	BY THE MODE MACRO ('TO' OPTION).  IT MERELY DOES 
; *	A JUMP INDIRECT ON A FIELD SET UP BY MODE. IT HAS 
; *	THE EFFECT OF RETURNING TO THE END OF THE MODE
; *	MACRO EXPANSION.
; *
; *************************************************************
;
	.WORD	0			; ENTRY MASK
	JMP	@CHM_CONT		; RETURN TO MODE MACRO IN NEW MODE
;
; *	RET INSTR WILL BE ISSUED IN EXPANSION OF 'MODE FROM, ....' MACRO
;
	.END	SATSSF14
