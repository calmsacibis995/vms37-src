	.TITLE	SATSSF05 - SATS SYSTEM SERVICE TESTS  (FAILING S.C.)
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	SATS SYSTEM SERVICE TESTS
;
; ABSTRACT:	THE SATSSF05 MODULE TESTS THE EXECUTION OF CERTAIN
; VMS SYSTEM SERVICES, INVOKED IN SUCH A WAY AS TO EXPECT FAILING
; STATUS CODES. THE SYSTEM SERVICES TESTED AND THE STATUS CODES
; EXPECTED ARE SUMMARIZED AS ARGUMENTS TO THE TESTSERV MACROS
; WHICH APPEAR NEAR THE END OF THIS LISTING. SUCCESSFUL STATUS
; CODES ARE TESTED IN OTHER MODULES.
;
;
; ENVIRONMENT:	USER MODE IMAGE; NEEDS CMKRNL PRIVILEGE,
;		DYNAMICALLY ACQUIRES OTHER PRIVILEGES, AS NEEDED.
;
; AUTHOR: THOMAS L. CAFARELLA,		CREATION DATE: MMM, 1978
;	  PAUL D. FAY (DISPSERV & TESTSERV MACROS)
;
; MODIFIED BY:
;
;		VERSION 1.50 : 25-MAY-79
;
; 01  PJT  08/31/79	Changed PHD, PCB, and STS assignments to
;			reference the system definitions.
;--
	.PAGE
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	$PRVDEF				; SYMBOL DEFS FOR PRIVILEGES
	$UETPDEF			; UETP MSG CODE DEFINITIONS
	$SHR_MESSAGES UETP,116,<<TEXT,INFO>> 
					; DEFINE UETP$_TEXT
	$PHDDEF				; PROCESS HEADER DEFINNITION
	$PCBDEF				; PROCESS CONTROL BLOCK DEFINITION
	$STSDEF				; STATUS DEFINITION
	$DIBDEF				; DEFINE DEVICE INFO BLOCK OFFSETS
;
; MACROS:
;
;
; EQUATED SYMBOLS:
;
WARNING		= 0			; WARNING SEVERITY VALUE FOR MSGS
SUCCESS		= 1			; SUCCESS SEVERITY VALUE FOR MSGS
ERROR		= 2			; ERROR SEVERITY VALUE FOR MSGS
INFO		= 3			; INFORMATIONAL SEV VALUE FOR MSGS
SEVERE		= 4			; SEVERE (FATAL) SEV VALUE FOR MSGS
TCG_NO		=  0			; INITIALIZE TEST CASE GROUP NUMBER
GRP_TOTAL	=  0			; INITIALIZE TEST CASE GROUP TOTAL
R0_THRU_SP	= ^M<R0,R1,R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP,SP>
DETFLAG		= 64			; EVENT FLAG NO. FOR DETACHED PROC
PIDADR_SUS10	= 1			; PIDADR ARG FOR SUSPND (LOCATION 1)
PIDADR_RES10	= 1			; PIDADR ARG FOR RESUME (LOCATION 1)
PIDADR_SWK10	= 1			; PIDADR ARG FOR SCHDWK (LOCATION 1)
DAYTIM_SWK30	= 0			; DAYTIM ARG FOR SCHDWK (LOCATION 0)
REPTIM_SWK40	= 1			; REPTIM ARG FOR SCHDWK (LOCATION 1)
;
; OWN STORAGE:
;
	.PAGE
	.PSECT	RODATA,RD,NOWRT,NOEXE,LONG
REG_COMP_MASK:	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11,AP,FP> ! ^X8000 -
					; REG COMPARE MASK (HIGH-ORDER ... 
					; ... BIT MUST BE ON
ERR_MSG_FAOCTL:	STRING	I,<!/!AC!1ZB!1ZB: REGISTER !2UW CONTENTS ALTERED>, -
		<;  BEFORE SERVICE CALL: !8XL   AFTER SERVICE CALL: !8XL>
TEST_MOD_NAME:	STRING	C,<SATSSF05>	; TEST MODULE NAME
TEST_MOD_BEG:	STRING	C,<begun>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_SUCC:	STRING	C,<successful>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_FAIL:	STRING	C,<failed>	; DISPOSITION FIELD OF TEST MOD MSG
TEST_MOD_NAME_D: STRING	I,<SATSSF05>	; TEST MODULE NAME DESCRIPTOR
TTNAME:     	STRING  I,<TT>		; TERMINAL LOGICAL NAME
INADR:		.LONG	NOACCESS,NOACCESS ; PAGE ADDRESS OF NOACCESS PSECT
PROT:		.LONG	PRT$C_NA	; PROTECTION CODE FOR NOACCESS PSECT
ONES:		.LONG	-1,-1		; A QUADWORD OF 1-BITS
DETIMAGE:	STRING	I,<SYSTST$RES:SATSUT01.EXE>
					; IMAGE NAME FOR DETACHED PROCESS
DETNAME:	STRING	I,<SATSSF05_DET> ; PROC & MBX NAME FOR DET PROCESS
PRCNAM_SUS29	= DETNAME		; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_RES29	= DETNAME		; PRCNAM ARGUMENT FOR RESUME
PRCNAM_SWK29	= DETNAME		; PRCNAM ARGUMENT FOR SCHDWK
PRCNAM_SUS:	STRING	I,<SATSSF05>	; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_SUS24:	.LONG	1		; PRCNAM ARGUMENT FOR SUSPND
		.ADDRESS NOACCESS	; ......
PRCNAM_SUS26:	STRING	I,<SFSUS26>	; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_SUS27:	.LONG	0		; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_SUS28:	STRING	I,<SIXTEEN CHARS$$$> 
					; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_RES:	STRING	I,<SATSSF05>	; PRCNAM ARGUMENT FOR RESUME
PRCNAM_RES24:	.LONG	1		; PRCNAM ARGUMENT FOR RESUME
		.ADDRESS NOACCESS	; ......
PRCNAM_RES26:	STRING	I,<SFRES26>	; PRCNAM ARGUMENT FOR RESUME
PRCNAM_RES27:	.LONG	0		; PRCNAM ARGUMENT FOR RESUME
PRCNAM_RES28:	STRING	I,<SIXTEEN CHARS$$$> 
					; PRCNAM ARGUMENT FOR RESUME
PRCNAM_SWK:	STRING	I,<SATSSF05>	; PRCNAM ARGUMENT FOR SCHDWK
PRCNAM_SWK24:	.LONG	1		; PRCNAM ARGUMENT FOR SCHDWK
		.ADDRESS NOACCESS	; ......
PRCNAM_SWK26:	STRING	I,<SFSWK26>	; PRCNAM ARGUMENT FOR SCHDWK
PRCNAM_SWK27:	.LONG	0		; PRCNAM ARGUMENT FOR SCHDWK
PRCNAM_SWK28:	STRING	I,<SIXTEEN CHARS$$$> 
					; PRCNAM ARGUMENT FOR SCHDWK
DAYTIM_SWK:	.LONG	0,0		; DAYTIM ARGUMENT FOR SCHDWK
REPTIM_SWK:	.LONG	0,0		; REPTIM ARGUMENT FOR SCHDWK
REPTIM_SWK43:	.LONG	1,0		; REPTIM ARGUMENT FOR SCHDWK
REPTIM_SWK44:	.LONG	^XFFFFFFFF,^X0FFFFFFF
					; REPTIM ARGUMENT FOR SCHDWK
	.PAGE
	.PSECT	RWDATA,RD,WRT,NOEXE
TPID:		.BLKL	1		; PROCESS ID FOR THIS PROCESS
CURRENT_TC:	.BLKL	1 		; PTR TO CURRENT TEST CASE
REG_SAVE_AREA:	.BLKL	15		; SAVE AREA FOR ALL REGS (SANS PC)
MOD_MSG_CODE:	.LONG	UETP$_SATSMS	; TEST MODULE MSG CODE FOR PUTMSG
CLOB_REG_NO:	.BLKL	1		; CLOBBERED REG NO (FOR FAO ERR MSG)
REG_BEFORE_SS:	.BLKL	1		; REG CONTENTS BEFORE S.S. 
					; ... (FOR FAO ERROR MSG)
REG_AFTER_SS:	.BLKL	1		; REG CONTENTS AFTER S.S. 
					; ... (FOR FAO ERROR MSG)
$$TSTN$$:	STRING	C,<  SF   >	; ASCII PORTION OF TEST CASE NAME
TMN_ADDR:	.ADDRESS TEST_MOD_NAME	; ADDR OF TEST MOD NAME FOR FAO
TMD_ADDR:	.ADDRESS TEST_MOD_BEG	; ADDR OF T.M. DISP FIELD FOR FAO
TS_EP:		.BLKL	1		; ENTRY PNT FOR CURR TESTSERV MACRO
RETADR:		.BLKL	2		; RETURN LONGWORDS FOR SETPRT
PRVPRT:		.BLKB	1		; PROT RETURN BYTE FOR SETPRT
PRIVMASK:	.BLKQ	1		; ADDR OF PRIVILEGE MASK (IN PHD)
CHM_CONT:	.BLKL	1		; CHANGE MODE CONTINUE ADDRESS
REGS:		.BLKL	5		; AREA FOR COND INDEX REGS (R2-R6)
DETUIC:		.BLKL	1		; UIC FOR DETACHED PROCESS
MBXCHAN:	.BLKL	1		; CHAN NO. FOR MBOX FOR CREATED PROC
MBXCHANINFO:	STRING	O,75		; CHANNEL INFO RETURNED BY GETCHN
MBXUNIT:	.BLKL	1		; SAVE AREA FOR MAILBOX UNIT NUMBER
MBXBUFF:	STRING	O,120		; MAILBOX BUFFER FOR CREATED PROCESS
PIDADR_SUS:	.BLKL	1		; PIDADR ARGUMENT FOR SUSPND
PIDADR_SUS13:	.BLKL	1		; PIDADR ARGUMENT FOR SUSPND
PIDADR_SUS14:	.BLKL	1		; PIDADR ARGUMENT FOR SUSPND
PIDADR_RES:	.BLKL	1		; PIDADR ARGUMENT FOR RESUME
PIDADR_RES13:	.BLKL	1		; PIDADR ARGUMENT FOR RESUME
PIDADR_RES14:	.BLKL	1		; PIDADR ARGUMENT FOR RESUME
PIDADR_SWK:	.BLKL	1		; PIDADR ARGUMENT FOR SCHDWK
PIDADR_SWK13:	.BLKL	1		; PIDADR ARGUMENT FOR SCHDWK
PIDADR_SWK14:	.BLKL	1		; PIDADR ARGUMENT FOR SCHDWK
	.PAGE
	.PSECT	SATS_ACCVIO_1,RD,WRT,NOEXE,PAGE
EMPTY:		.BLKB	512	; RESERVE A PAGE OF SPACE
;
; + 
; ******************************************************************
; *                                                                *
; * 	THE ORDER OF STATEMENTS IN THIS PSECT IS CRITICAL.         *
; *	DO NOT RE-ARRANGE THE VARIABLES. CONSULT SATS              *
; *	FUNCTIONAL SPECIFICATION FOR A DESCRIPTION OF THE USE      *
; *	OF THE EMPTY PSECT (AND ITS COMPANION PSECT, NOACCESS).    *
; *                                                                *
; ******************************************************************
; -
;
; TYPE AAAAA_SSSX1 (TYPE AAAAA_SSSX2 IF NOT DESC) GO HERE:
PIDADR_SUS12	= . - 1		; PIDADR ARGUMENT FOR SUSPND (LAST BYTE IN PAGE)
PRCNAM_SUS21	= . - 1		; PRCNAM ARGUMENT FOR SUSPND (LAST BYTE IN PAGE)
PIDADR_RES12	= . - 1		; PIDADR ARGUMENT FOR RESUME (LAST BYTE IN PAGE)
PRCNAM_RES21	= . - 1		; PRCNAM ARGUMENT FOR RESUME (LAST BYTE IN PAGE)
PIDADR_SWK12	= . - 1		; PIDADR ARGUMENT FOR SCHDWK (LAST BYTE IN PAGE)
PRCNAM_SWK21	= . - 1		; PRCNAM ARGUMENT FOR SCHDWK (LAST BYTE IN PAGE)
DAYTIM_SWK32	= . - 1		; DAYTIM ARGUMENT FOR SCHDWK (LAST BYTE IN PAGE)
REPTIM_SWK42	= . - 1		; REPTIM ARGUMENT FOR SCHDWK (LAST BYTE IN PAGE)
		. = . - 13	; ALLOW ROOM FOR STRING DESCRIPTOR
; TYPE AAAAA_SSSX5 GO HERE:
PRCNAM_SUS25:			; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_RES25:			; PRCNAM ARGUMENT FOR RESUME
PRCNAM_SWK25:			; PRCNAM ARGUMENT FOR SCHDWK
		.LONG	6	; STRING LENGTH (WILL CROSS PSECT BOUNDARY)
		.ADDRESS .+4	; STRING ADDRESS
; TYPE AAAAA_SSSX3 GO HERE:
PRCNAM_SUS23:			; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_RES23:			; PRCNAM ARGUMENT FOR RESUME
PRCNAM_SWK23:			; PRCNAM ARGUMENT FOR SCHDWK
		.BLKB	1	; LOW-ORDER BYTE OF STRING LENGTH
; TYPE AAAAA_SSSX2 GO HERE:
PRCNAM_SUS22:			; PRCNAM ARGUMENT FOR SUSPND
PRCNAM_RES22:			; PRCNAM ARGUMENT FOR RESUME
PRCNAM_SWK22:			; PRCNAM ARGUMENT FOR SCHDWK
		.BLKL	1	; STRING LENGTH
;
;
;
;
	.PSECT	SATS_ACCVIO_2,RD,WRT,NOEXE,PAGE
NOACCESS:	.BLKB	512	; RESERVE A PAGE OF SPACE
		. = . - 512	; RETURN LOC CTR TO BEGINNING OF PSECT
		.ADDRESS EMPTY	; ADDRESS OF ACCESSIBLE STRING
		.ADDRESS EMPTY/^X100 ; ADDRESS OF ACCESSIBLE STRING
;+
; *** NOTE -- DO NOT CHANGE LOCATION OR SEQUENCE OF ABOVE STATEMENTS!
; ***         THIS PSECT (NOACCESS) MUST APPEAR IN MEMORY IMMEDIATELY
; ***         FOLLOWING THE EMPTY PSECT. PSECT NAMES AND OPTIONS WILL BE 
; ***         CHOSEN TO FORCE THE DESIRED PSECT ORDERING.
;-
;
;
;
;
PIDADR_SUS11:	.LONG	0	; PIDADR ARGUMENT FOR SUSPND
PRCNAM_SUS20:	STRING	I,<SFSUS20> ; PRCNAM ARGUMENT FOR SUSPND
PIDADR_RES11:	.LONG	0	; PIDADR ARGUMENT FOR RESUME
PRCNAM_RES20:	STRING	I,<SFRES20> ; PRCNAM ARGUMENT FOR RESUME
PIDADR_SWK11:	.LONG	0	; PIDADR ARGUMENT FOR SCHDWK
PRCNAM_SWK20:	STRING	I,<SFSWK20> ; PRCNAM ARGUMENT FOR SCHDWK
DAYTIM_SWK31:	.LONG	0,0	; DAYTIM ARGUMENT FOR SCHDWK
REPTIM_SWK41:	.LONG	0,0	; REPTIM ARGUMENT FOR SCHDWK
	.PSECT	SATSSF05,RD,WRT,EXE,LONG
	.PAGE
	.SBTTL	SATSSF05
;++
; FUNCTIONAL DESCRIPTION:
;
;		AFTER PERFORMING SOME INITIAL HOUSEKEEPING, SUCH AS
; PRINTING THE MODULE BEGIN MESSAGE AND ACQUIRING ALL PRIVILEGES,
; THE SATSSF05 ROUTINE EXECUTES THE TEST_SERV_EXEC MACRO TO RUN
; ALL TEST CASES. WHEN THE MACRO COMPLETES ITS EXECUTION, SATSSF05
; PRINTS A TEST MODULE SUCCESS OR FAIL MESSAGE AND EXITS TO THE
; OPERATING SYSTEM. TEST_SERV_EXEC CALLS THE TC_CONTROL/TESTSERV
; CO-ROUTINE PAIR ONCE PER TEST CASE GROUP TO EXECUTE ALL TEST
; CASES IN THAT GROUP. EACH TEST CASE GROUP IS DEFINED BY BOUNDING
; ITS TEST CASES WITH A TC_GROUP MACRO BEFORE THE FIRST TEST CASE
; AND A TCEND MACRO AFTER THE LAST ONE. THE TEST CASES THEMSELVES
; ARE DEFINED WITHIN THESE BOUNDS BY PRECEDING EACH WITH A
; NEXT_TEST_CASE MACRO. TC_CONTROL/TESTSERV EXECUTES THE CODE 
; FOLLOWING EACH NEXT_TEST_CASE MACRO IMMEDIATELY BEFORE ISSUING
; THE SYSTEM SERVICE AS REQUESTED IN THE TESTSERV MACRO. TC_CONTROL/
; TESTSERV ALSO CHECKS THE RESULTS OF THE SERVICE WITH RESPECT
; TO ITS EXPECTED STATUS CODE AND PRINTS ANY REQUIRED FAILURE
; MESSAGES FOR THE TEST CASE. THE CODE APPEARING AFTER EACH
; NEXT_TEST_CASE MACRO IS MERELY TO SET UP CONDITIONS REQUIRED
; FOR THE SYSTEM SERVICE AND TO CLEAN UP ANY RESOURCES ACQUIRED
; BY THE PREVIOUS TEST CASE.
;
; CALLING SEQUENCE:
;
;	$ RUN SATSSF05  ...  (DCL COMMAND)
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	MESSAGES TO SYS$OUTPUT ARE THE ONLY OUTPUT FROM SATSSF05.
;	THEY ARE OF THE FORM:
;
;		%UETP-S-SATSMS, TEST MODULE SATSSF05 BEGUN ... (BEGIN MSG)
;		%UETP-S-SATSMS, TEST MODULE SATSSF05 SUCCESSFUL ... (END MSG)
;		%UETP-E-SATSMS, TEST MODULE SATSSF05 FAILED ... (END MSG)
;		%UETP-I-TEXT, ... (VARIABLE INFORMATION ABOUT A TEST MODULE FAILURE)
;
; COMPLETION CODES:
;
;	THE SATSSF05 ROUTINE TERMINATES WITH A $EXIT TO THE
;	OPERATING SYSTEM WITH A STATUS CODE DEFINED BY UETP$_SATSMS.
;
; SIDE EFFECTS:
;
;	NONE
;
;--



SATSSF05:
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>
					; ENTRY MASK
	$WAKE_S  TPID			; GET PID OF THIS PROCESS
	$HIBER_S			; UNDO WAKE
	$SETPRN_S TEST_MOD_NAME_D 	; SET PROCESS NAME
	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE BEGIN MSG
	MOVAL	TEST_MOD_SUCC,TMD_ADDR	; ASSUME END MSG WILL SHOW SUCCESS
	INSV	#SUCCESS,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR SUCCESS
	MODE	TO,10$,KRNL,NOREGS 	; KERNEL MODE TO ACCESS PHD
	MOVL	@#CTL$GL_PHD,R9		; GET PROCESS HEADER ADDRESS
	MOVAL	PHD$Q_PRIVMSK(R9),PRIVMASK ; GET PRIV MASK ADDRESS
	MODE	FROM,10$		; GET BACK TO USER MODE
	PRIV	ADD,ALL			; GET ALL PRIVILEGES
	$CREMBX_S CHAN=MBXCHAN, LOGNAM=DETNAME, - 
		  MAXMSG=#120, PROMSK=#0, BUFQUO=#240
					; GET MAILBOX FOR PROCESS
	$GETCHN_S CHAN=MBXCHAN, PRIBUF=MBXCHANINFO 
					; GET CHAN INFO (UNIT NUMBER)
	MOVZWL	MBXCHANINFO+8+DIB$W_UNIT,MBXUNIT 
					; SAVE MAILBOX UNIT NUMBER
	MODE	TO,20$,KRNL,NOREGS 	; KERNEL MODE TO ACCESS PCB
	MOVL	@#SCH$GL_CURPCB,R9 	; GET CURRENT PCB ADDRESS
	MOVL	PCB$L_UIC(R9),DETUIC 	; PICK UP UIC FROM PCB
	MODE	FROM,20$		; ... AND GET BACK TO USER MODE
	$CREPRC_S IMAGE=DETIMAGE, PRCNAM=DETNAME, -
		  UIC=DETUIC, MBXUNT=MBXUNIT
					; CREATE DETACHED PROC WITH SAME UIC
	DISPSERV			; SET UP DISPLAY INFO FOR TESTSERV
	$SETPRT_S INADR=INADR, RETADR=RETADR, -
		  PROT=PROT, PRVPRT=PRVPRT
					; SET NOACCESS PSECT ...
					; ... FOR NO USER ACCESS
	BRW	EXECUTE			; GO EXECUTE ALL TEST CASES
	TC_GROUP	SUS,1,TS1
;
	NEXT_TEST_CASE	SFSUS10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS10
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SUS10
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD AT LOCATION 1
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFSUS11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS11
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SUS11
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFSUS12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS12
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SUS12
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD BEGINS IN ACCESSIBLE PSECT, ENDS
; *	  IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFSUS13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS13
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SUS13
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_SUS13 ; GET A VALID PID
	CVTBW	#-1,PIDADR_SUS13  ; MAKE IT INVALID
;
	NEXT_TEST_CASE	SFSUS14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS14
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SUS14
; *
; *  INPUT CONDITIONS:
; *	VALID, NON-EXISTENT PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_SUS14 ; GET AN EXISTENT PID
	MOVW	#6000,PIDADR_SUS14+2 ; MAKE IT NON-EXISTENT
;
	NEXT_TEST_CASE	SFSUS20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS20
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS20
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS21
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS21
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS22
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS22
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
	MOVZBL	#3,PRCNAM_SUS22	; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFSUS23
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS23
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS23
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
	MOVZBL	#3,PRCNAM_SUS23	; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFSUS24
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS24
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS24
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	TCEND
	TC_GROUP	SUS,2,TS2
;
	NEXT_TEST_CASE	SFSUS25
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS25
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS25
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING BEGINS IN ACCESSIBLE PSECT,
; *	  ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS26
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS26
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS26
; *
; *  INPUT CONDITIONS:
; *	NON-EXISTENT PROCESS NAME
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS27
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS27
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS27
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 0)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS28
;
;++
; ******************************************************
; *

; *  TEST CASE NAME:		SFSUS28
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS28
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 16)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	NEXT_TEST_CASE	SFSUS29
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSUS29
; *
; *  SYSTEM SERVICE:		SUSPND
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SUS29
; *
; *  INPUT CONDITIONS:
; *	SUSPND ISSUED FOR EXISTING PROCESS WHICH IS NOT A
; *	  SUBPROCESS OF THIS PROCESS, AND THIS PROCESS HAS
; *	  NO GROUP OR WORLD PRIVILEGE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	REM,GROUP	; REMOVE GROUP PRIVILEGE
	PRIV	REM,WORLD	; REMOVE WORLD PRIVILEGE
	CLRL	PIDADR_SUS	; MAKE SURE PRCNAM IS USED BY SUSPND
;
	TCEND
	TC_GROUP	RES,1,TS3
;
	NEXT_TEST_CASE	SFRES10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES10
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_RES10
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD AT LOCATION 1
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	ADD,ALL		; GET BACK SOME PRIVS REMOVED IN PRIOR T.C.
;
	NEXT_TEST_CASE	SFRES11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES11
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_RES11
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFRES12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES12
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_RES12
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD BEGINS IN ACCESSIBLE PSECT, ENDS
; *	  IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFRES13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES13
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_RES13
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_RES13 ; GET A VALID PID
	CVTBW	#-1,PIDADR_RES13  ; MAKE IT INVALID
;
	NEXT_TEST_CASE	SFRES14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES14
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_RES14
; *
; *  INPUT CONDITIONS:
; *	VALID, NON-EXISTENT PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_RES14 ; GET AN EXISTENT PID
	MOVW	#6000,PIDADR_RES14+2 ; MAKE IT NON-EXISTENT
;
	NEXT_TEST_CASE	SFRES20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES20
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES20
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES21
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES21
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES22
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES22
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
	MOVZBL	#3,PRCNAM_RES22	; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFRES23
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES23
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES23
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
	MOVZBL	#3,PRCNAM_RES23	; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFRES24
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES24
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES24
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	TCEND
	TC_GROUP	RES,2,TS4
;
	NEXT_TEST_CASE	SFRES25
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES25
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES25
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING BEGINS IN ACCESSIBLE PSECT,
; *	  ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES26
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES26
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES26
; *
; *  INPUT CONDITIONS:
; *	NON-EXISTENT PROCESS NAME
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES27
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES27
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES27
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 0)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES28
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES28
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES28
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 16)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	NEXT_TEST_CASE	SFRES29
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFRES29
; *
; *  SYSTEM SERVICE:		RESUME
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_RES29
; *
; *  INPUT CONDITIONS:
; *	RESUME ISSUED FOR EXISTING PROCESS WHICH IS NOT A
; *	  SUBPROCESS OF THIS PROCESS, AND THIS PROCESS HAS
; *	  NO GROUP OR WORLD PRIVILEGE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	REM,GROUP	; REMOVE GROUP PRIVILEGE
	PRIV	REM,WORLD	; REMOVE WORLD PRIVILEGE
	CLRL	PIDADR_RES	; MAKE SURE PRCNAM IS USED BY RESUME
;
	TCEND
	TC_GROUP	SWK,1,TS5
;
	NEXT_TEST_CASE	SFSWK10
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK10
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SWK10
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD AT LOCATION 1
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	ADD,ALL		; GET BACK SOME PRIVS REMOVED BY PRIOR T.C.
;
	NEXT_TEST_CASE	SFSWK11
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK11
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SWK11
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFSWK12
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK12
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SWK12
; *
; *  INPUT CONDITIONS:
; *	PIDADR FIELD BEGINS IN ACCESSIBLE PSECT, ENDS
; *	  IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
;
	NEXT_TEST_CASE	SFSWK13
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK13
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SWK13
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_SWK13 ; GET A VALID PID
	CVTBW	#-1,PIDADR_SWK13  ; MAKE IT INVALID
;
	NEXT_TEST_CASE	SFSWK14
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK14
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PIDADR_SWK14
; *
; *  INPUT CONDITIONS:
; *	VALID, NON-EXISTENT PROCESS ID
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	MOVL	TPID,PIDADR_SWK14 ; GET AN EXISTENT PID
	MOVW	#6000,PIDADR_SWK14+2 ; MAKE IT NON-EXISTENT
;
	NEXT_TEST_CASE	SFSWK20
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK20
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK20
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK21
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK21
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK21
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR LENGTH FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK22
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK22
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK22
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD IN
; *	  NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
	MOVZBL	#3,PRCNAM_SWK22		; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFSWK23
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK23
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK23
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING DESCRIPTOR ADDRESS FIELD BEGINS IN
; *	  ACCESSIBLE PSECT, ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
	MOVZBL	#3,PRCNAM_SWK23		; ESTABLISH PRCNAM STRING LENGTH
;
	NEXT_TEST_CASE	SFSWK24
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK24
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK24
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK30
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK30
; *

; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	DAYTIM_SWK30
; *
; *  INPUT CONDITIONS:
; *	EXPIRATION TIME FIELD AT LOCATION 0
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK31
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK31
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	DAYTIM_SWK31
; *
; *  INPUT CONDITIONS:
; *	EXPIRATION TIME FIELD IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK32
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK32
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	DAYTIM_SWK32
; *
; *  INPUT CONDITIONS:
; *	EXPIRATION TIME FIELD BEGINS IN ACCESSIBLE PSECT,
; *	  ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK40
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK40
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	REPTIM_SWK40
; *
; *  INPUT CONDITIONS:
; *	REPEAT TIME FIELD AT LOCATION 1
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK41
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK41
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	REPTIM_SWK41
; *
; *  INPUT CONDITIONS:
; *	REPEAT TIME FIELD IN NON-ACCESSIBLE PSECT
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK42
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK42
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	REPTIM_SWK42
; *
; *  INPUT CONDITIONS:
; *	REPEAT TIME FIELD BEGINS IN ACCESSIBLE PSECT,
; *	  ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK43
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK43
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	REPTIM_SWK43
; *
; *  INPUT CONDITIONS:
; *	INVALID (POSITIVE) REPEAT TIME VALUE (= 1)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVTIME
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	NEXT_TEST_CASE	SFSWK44
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK44
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	REPTIM_SWK44
; *
; *  INPUT CONDITIONS:
; *	INVALID (LARGE POSITIVE) REPEAT TIME VALUE
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVTIME
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; LET SCHDWK USE PRCNAM
;
	TCEND
	TC_GROUP	SWK,2,TS6
;
	NEXT_TEST_CASE	SFSWK25
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK25
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK25
; *
; *  INPUT CONDITIONS:
; *	PRCNAM STRING BEGINS IN ACCESSIBLE PSECT,
; *	  ENDS IN NON-ACCESSIBLE PSECT.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	ACCVIO
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK26
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK26
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK26
; *
; *  INPUT CONDITIONS:
; *	NON-EXISTENT PROCESS NAME
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NONEXPR
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK27
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK27
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK27
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 0)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK28
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK28
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK28
; *
; *  INPUT CONDITIONS:
; *	INVALID PROCESS NAME (LENGTH 16)
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	IVLOGNAM
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	NEXT_TEST_CASE	SFSWK29
;
;++
; ******************************************************
; *
; *  TEST CASE NAME:		SFSWK29
; *
; *  SYSTEM SERVICE:		SCHDWK
; *
; *  ARGUMENT UNDER TEST: 	PRCNAM_SWK29
; *
; *  INPUT CONDITIONS:
; *	SCHDWK ISSUED FOR EXISTING PROCESS WHICH IS NOT A
; *	  SUBPROCESS OF THIS PROCESS, AND THIS PROCESS HAS
; *	  NO GROUP OR WORLD PRIVILEGE.
; *
; *  EXPECTED RESULTS:
; *	1) SYSTEM STATUS CODE:	NOPRIV
; *	2) REGISTERS R2 THROUGH FP UNCHANGED
; *
; ******************************************************
;--
;
	PRIV	REM,GROUP	; REMOVE GROUP PRIVILEGE
	PRIV	REM,WORLD	; REMOVE WORLD PRIVILEGE
	CLRL	PIDADR_SWK	; MAKE SURE PRCNAM IS USED BY SCHDWK
;
	TCEND
TS1:
	TESTSERV	SUSPND,ERR,SATS,				-
                                          				-
	   <1,PIDADR_SUS,						-
	        	PIDADR_SUS10,ACCVIO,	-  ; SFSUS10
	        	PIDADR_SUS11,ACCVIO,	-  ; SFSUS11
	        	PIDADR_SUS12,ACCVIO,	-  ; SFSUS12
	        	PIDADR_SUS13,NONEXPR,	-  ; SFSUS13
	        	PIDADR_SUS14,NONEXPR,	-  ; SFSUS14
                                                  >,			-
                                          				-
	   <1,PRCNAM_SUS,						-
	        	PRCNAM_SUS20,ACCVIO,	-  ; SFSUS20
	        	PRCNAM_SUS21,ACCVIO,	-  ; SFSUS21
	        	PRCNAM_SUS22,ACCVIO,	-  ; SFSUS22
	        	PRCNAM_SUS23,ACCVIO,	-  ; SFSUS23
	        	PRCNAM_SUS24,ACCVIO,	-  ; SFSUS24
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS2:
	TESTSERV	SUSPND,ERR,SATS,				-
                                          				-
	   <1,PIDADR_SUS,						-
                                                  >,			-
                                          				-
	   <1,PRCNAM_SUS,						-
	        	PRCNAM_SUS25,ACCVIO,	-  ; SFSUS25
	        	PRCNAM_SUS26,NONEXPR,	-  ; SFSUS26
	        	PRCNAM_SUS27,IVLOGNAM,	-  ; SFSUS27
	        	PRCNAM_SUS28,IVLOGNAM,	-  ; SFSUS28
	        	PRCNAM_SUS29,NOPRIV,	-  ; SFSUS29
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS3:
	TESTSERV	RESUME,ERR,SATS,				-
                                          				-
	   <1,PIDADR_RES,						-
	        	PIDADR_RES10,ACCVIO,	-  ; SFRES10
	        	PIDADR_RES11,ACCVIO,	-  ; SFRES11
	        	PIDADR_RES12,ACCVIO,	-  ; SFRES12
	        	PIDADR_RES13,NONEXPR,	-  ; SFRES13
	        	PIDADR_RES14,NONEXPR,	-  ; SFRES14
                                                  >,			-
                                          				-
	   <1,PRCNAM_RES,						-
	        	PRCNAM_RES20,ACCVIO,	-  ; SFRES20
	        	PRCNAM_RES21,ACCVIO,	-  ; SFRES21
	        	PRCNAM_RES22,ACCVIO,	-  ; SFRES22
	        	PRCNAM_RES23,ACCVIO,	-  ; SFRES23
	        	PRCNAM_RES24,ACCVIO,	-  ; SFRES24
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS4:
	TESTSERV	RESUME,ERR,SATS,				-
                                          				-
	   <1,PIDADR_RES,						-
                                                  >,			-
                                          				-
	   <1,PRCNAM_RES,						-
	        	PRCNAM_RES25,ACCVIO,	-  ; SFRES25
	        	PRCNAM_RES26,NONEXPR,	-  ; SFRES26
	        	PRCNAM_RES27,IVLOGNAM,	-  ; SFRES27
	        	PRCNAM_RES28,IVLOGNAM,	-  ; SFRES28
	        	PRCNAM_RES29,NOPRIV,	-  ; SFRES29
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS5:
	TESTSERV	SCHDWK,ERR,SATS,				-
                                          				-
	   <1,PIDADR_SWK,						-
	        	PIDADR_SWK10,ACCVIO,	-  ; SFSWK10
	        	PIDADR_SWK11,ACCVIO,	-  ; SFSWK11
	        	PIDADR_SWK12,ACCVIO,	-  ; SFSWK12
	        	PIDADR_SWK13,NONEXPR,	-  ; SFSWK13
	        	PIDADR_SWK14,NONEXPR,	-  ; SFSWK14
                                                  >,			-
                                          				-
	   <1,PRCNAM_SWK,						-
	        	PRCNAM_SWK20,ACCVIO,	-  ; SFSWK20
	        	PRCNAM_SWK21,ACCVIO,	-  ; SFSWK21
	        	PRCNAM_SWK22,ACCVIO,	-  ; SFSWK22
	        	PRCNAM_SWK23,ACCVIO,	-  ; SFSWK23
	        	PRCNAM_SWK24,ACCVIO,	-  ; SFSWK24
                                                  >,			-
                                          				-
	   <1,DAYTIM_SWK,						-
	        	DAYTIM_SWK30,ACCVIO,	-  ; SFSWK30
	        	DAYTIM_SWK31,ACCVIO,	-  ; SFSWK31
	        	DAYTIM_SWK32,ACCVIO,	-  ; SFSWK32
                                                  >,			-
                                          				-
	   <1,REPTIM_SWK,						-
	        	REPTIM_SWK40,ACCVIO,	-  ; SFSWK40
	        	REPTIM_SWK41,ACCVIO,	-  ; SFSWK41
	        	REPTIM_SWK42,ACCVIO,	-  ; SFSWK42
	        	REPTIM_SWK43,IVTIME,	-  ; SFSWK43
	        	REPTIM_SWK44,IVTIME,	-  ; SFSWK44
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
TS6:
	TESTSERV	SCHDWK,ERR,SATS,				-
                                          				-
	   <1,PIDADR_SWK,						-
                                                  >,			-
                                          				-
	   <1,PRCNAM_SWK,						-
	        	PRCNAM_SWK25,ACCVIO,	-  ; SFSWK25
	        	PRCNAM_SWK26,NONEXPR,	-  ; SFSWK26
	        	PRCNAM_SWK27,IVLOGNAM,	-  ; SFSWK27
	        	PRCNAM_SWK28,IVLOGNAM,	-  ; SFSWK28
	        	PRCNAM_SWK29,NOPRIV,	-  ; SFSWK29
                                                  >,			-
                                          				-
	   <1,DAYTIM_SWK,						-
                                                  >,			-
                                          				-
	   <1,REPTIM_SWK,						-
                                                  >,			-
 
	TS_CLEANUP		; CLEAN UP & RETURN TO TEST_SERV_EXEC
	.SBTTL	EXECUTE & CLEANUP
EXECUTE:
	TEST_SERV_EXEC			; EXECUTE ALL T. CASES IN ALL GROUPS
CLEANUP:
	PRIV	ADD,ALL			; ENSURE THAT ALL PRIVS ARE PRESENT
	$WAKE_S	PRCNAM=DETNAME		; WAKE DETACHED PROCESS ...
					; ... TO ALLOW HIS EXIT
	$QIOW_S	CHAN=MBXCHAN, FUNC=#IO$_READVBLK, -
		P1=MBXBUFF+8, P2=MBXBUFF
					; ... AND WAIT 4 PROC TO BE DELETED
	$DELMBX_S  MBXCHAN		; DELETE TERMINATION MAILBOX
	BSBW	MOD_MSG_PRINT		; PRINT TEST MODULE END MSG
	INSV	#1,#STS$V_INHIB_MSG,#1,MOD_MSG_CODE 
					; INHIBIT PRINTING
	$EXIT_S	MOD_MSG_CODE		; EXIT TO OP SYS WITH MSG CODE
	.PAGE
	.SBTTL	TC_CONTROL
;++
; FUNCTIONAL DESCRIPTION:
;
;		THE TC_CONTROL SUBROUTINE IS CALLED BY THE TEST_SERV_EXEC
; MACRO TO EXECUTE A GROUP OF TEST CASES. A GROUP IS DEFINED BY A TC_GROUP
; MACRO. FOR EACH TC_GROUP MACRO, THERE IS A CORRESPONDING TESTSERV MACRO.
; TESTSERV CONTAINS CODE TO EXECUTE SYSTEM SERVICES AND CHECK THE RETURNED
; STATUS CODE VALUES. TESTSERV ARGUMENTS ARE CODED TO SPECIFY ALL THE SYSTEM
; SERVICE ARGUMENT VALUES AND THE EXPECTED STATUS CODE FOR EACH TEST CASE
; DEFINED BY A NEXT_TEST_CASE MACRO WITHIN THE GROUP. TC_CONTROL USES A
; CO-ROUTINE INTERFACE TO ENTER THE CODE OF THE APPROPRIATE TESTSERV MACRO
; IN VARIOUS PLACES. THE FIRST ENTRY OCCURS ONCE PER GROUP TO ALLOW TESTSERV
; TO DO SOME INITIALIZATION. THEN TWO ENTRIES ARE MADE FOR EACH TEST CASE IN
; THE GROUP. THE FIRST ALLOWS TESTSERV TO ISSUE THE SUBJECT SYSTEM SERVICE.
; THE SECOND ENTRY FOR THE TEST CASE CAUSES TESTSERV TO CHECK THE RETURNED
; STATUS CODE, PRINTING A FAILURE MESSAGE IF IT IS NOT THE EXPECTED CODE.
; IF THERE ARE NO MORE TEST CASES IN THE CURRENT GROUP, TESTSERV (NOT TC_CONTROL)
; RETURNS DIRECTLY TO TEST_SERV_EXEC (RSB ACTUALLY ISSUED IN TS_CLEANUP MACRO)
; FROM THIS SECOND ENTRY; OTHERWISE, CONTROL RETURNS TO TC_CONTROL WHICH
; IN TURN ENTERS TESTSERV AGAIN FOR THE NEXT TEST CASE. THE FAILURE OF A
; TEST CASE DOES NOT CAUSE TERMINATION OF THE TEST MODULE.
;
; CALLING SEQUENCE:
;
;	BSBW TC_CONTROL (ISSUED WITHIN THE TEST_SERV_EXEC MACRO)
;			(RSB IS ISSUED WITHIN THE TS_CLEANUP MACRO)
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	ARGUMENTS SPECIFIED ON EACH TESTSERV MACRO MAY BE VIEWED AS
;	INPUTS, SINCE TC_CONTROL AND TESTSERV ACT AS CO-ROUTINES.
;
; OUTPUT PARAMETERS:
;
;	SEVERITY CODE FIELD OF MOD_MSG_CODE (BITS 0,1,2) IS SET TO ERROR
;	IF ANY TEST CASE IN THE CURRENT GROUP FAILS; OTHERWISE IT REMAINS
;	SET TO SUCCESSFUL.
;
; IMPLICIT OUTPUTS:
;
;	%UETP-I-TEXT,   ERROR MESSAGES ARE WRITTEN TO SYS$OUTPUT BY
;			THE TESTSERV MACRO (CO-ROUTINE WITH TC_CONTROL)
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--



TC_CONTROL:
	PUSHL	TS_EP			; PUSH TESTSERV ENTRY POINT
	JSB	@(SP)+			; ENTER TESTSERV INITIALIZATION
10$:					; PROCESS NEXT TEST CASE
	MOVB	#^A/ /,$$TSTN$$+2 	; MAKE SURE T.C. NAME HAS A BLANK
	BSBW	REG_SAVE		; SAVE REGISTERS
	JSB	@CURRENT_TC		; JUMP TO CURRENT TEST CASE
	BSBW	REG_REST		; RESTORE REGS FOR TESTSERV
	JSB	@(SP)+			; LET TESTSERV ISSUE SYSTEM SERVICE
	BSBW	REG_COMP		; COMPARE REGS TO SEE IF ...
					; ... SYSTEM SERVICE CHANGED ANY
	JSB	@(SP)+			; LET TESTSERV CHEK S.S. STATUS CODE
	CMPB	#^A/*/,$$TSTN$$+2	; HAS TESTSERV INDICATED FAILURE ?
	BNEQU	10$			; NO -- PROCESS NEXT TEST CASE
	MOVAL	TEST_MOD_FAIL,TMD_ADDR	; YES -- INDICATE FAILED IN END MSG
	INSV	#ERROR,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR ERROR
	BRB	10$			; LOOP BAK TO PROCESS NEXT TEST CASE
;
;   TC_CONTROL RETURNS TO TEST_SERV_EXEC VIA TESTSERV (IN TS_CLEANUP MACRO)
;
	.PAGE
	.SBTTL	SUBROUTINES
REG_SAVE:
;
;  *****************************************************************
;  *                                                               *
;  *  SAVES R0 THRU SP IN REG_SAVE_AREA                            *
;  *                                                               *
;  *****************************************************************
;
	PUSHR	#R0_THRU_SP		; SAVE ALL REGS ON STACK
	MOVC3	#60,(SP),REG_SAVE_AREA	; SAVE REGS (BEFORE S.S.)
	POPR	#R0_THRU_SP		; CLEAN UP STACK
	RSB				; .... AND RETURN
;
;
;
;
REG_REST:
;
;
;  *****************************************************************
;  *                                                               *
;  *  RESTORES R0 THRU SP FROM REG_SAVE_AREA                       *
;  *                                                               *
;  *****************************************************************
;
	SUBL2	#60,SP			; MOVE SP TO MAKE ROOM FOR REGS
	MOVC3	#60,REG_SAVE_AREA,(SP)	; MOVE REGS ONTO STACK FOR POP
	POPR	#R0_THRU_SP		; RESTORE ALL REGS FOR TESTSERV
	RSB				; ... AND RETURN
	.PAGE
REG_COMP:
;
;  *****************************************************************
;  *                                                               *
;  *  1) PUSHES ALL REGS ONTO STACK                                *
;  *  2) COMPARES REGISTER IMAGES FROM STACK WITH CORRESPONDING    *
;  *       IMAGES FROM REG_SAVE_AREA FOR ALL REGISTERS SPECIFIED   *
;  *       IN REG_COMP_MASK.                                       *
;  *  3) FOR EACH UNEQUAL COMPARE, AN ERROR MESSAGE IS PRINTED     *
;  *       (USING $FAO AND $OUTPUT SYSTEM SERVICES).               *
;  *  4) POPS ALL REGS OFF OF STACK                                *
;  *                                                               *
;  *****************************************************************
;
	PUSHR	#R0_THRU_SP		; SAVE ALL REGISTERS ON STACK
	MOVAL	REG_SAVE_AREA,R6 	; POINT R6 TO BEG OF ...
					; ... REGS (BEFORE S.S.)
	MOVL	SP,R4			; POINT R4 TO BEG OF
					; ... REGS (AFTER S.S.)
	CVTBL	#-1,R3			; INITIALIZE REG_COMP_MASK INDEX
REG_COMP_NEXT:
	INCL	R3			; POINT TO NEXT BIT IN MASK
	CMPB	#15,R3			; END OF THE MASK ?
	BGTRU	REG_COMP_CONT		; NO -- CONTINUE
	BRW	REG_COMP_RSB		; YES -- GO TO COMMON RETURN
REG_COMP_CONT:
	CMPL	(R6)+,(R4)+		; REG BEFORE = REG AFTER ?
	BEQLU	REG_COMP_NEXT		; YES -- LOOK FOR NEXT REG
	BBC	R3,REG_COMP_MASK,REG_COMP_NEXT
					; NO -- GET NEXT IF BIT NOT SET
	MOVL	R3,CLOB_REG_NO		; NO -- GIVE REG NUMBER TO FAO
	MOVL	-4(R6),REG_BEFORE_SS 	; GIVE "BEFORE" CONTENTS TO FAO
	MOVL	-4(R4),REG_AFTER_SS  	; GIVE "AFTER" CONTENTS TO FAO
	MOVB	#^A/*/,$$TSTN$$+2 	; GIVE FAILURE INDIC'N IN ERROR MSG
;
	$FAO_S	ERR_MSG_FAOCTL,OUTL,OUTD,$$SNAD$$,  -
		$$ASEQ$$,$$PSEQ$$,CLOB_REG_NO,REG_BEFORE_SS,REG_AFTER_SS
;
	MOVW	OUTL,OUTD		; ACTUAL OUTPUT LEN IN STRING DESC'R
	PUTMSG	<#UETP$_TEXT,#1,#OUTD>	; PRINT THE MSG
	MOVW	#OUTE-OUTB,OUTD		; GET MAX LEN BACK INTO DESCRIPTOR
	MOVB	#^A/ /,$$TSTN$$+2 	; REMOVE FAIL INDIC'N FOR NEXT MSG
	MOVAL	TEST_MOD_FAIL,TMD_ADDR	; INDICATE FAILED IN END MSG
	INSV	#ERROR,#0,#3,MOD_MSG_CODE ; ADJUST STATUS CODE FOR ERROR
	BRW	REG_COMP_NEXT		; GO LOOK FOR NEXT REG TO COMPARE
REG_COMP_RSB:
	POPR	#R0_THRU_SP		; CLEAN UP STACK
	RSB				; RETURN TO CALLER
	.PAGE
MOD_MSG_PRINT:
;
;  *****************************************************************
;  *                                                               *
;  *  PRINTS THE TEST MODULE BEGUN/SUCCESSFUL/FAILED MESSAGES      *
;  *	   (USING THE PUTMSG MACRO).                               *
;  *                                                               *
;  *****************************************************************
;
	PUTMSG	<MOD_MSG_CODE,#2,TMN_ADDR,TMD_ADDR> ; PRINT MSG
	RSB				; ... AND RETURN TO CALLER
;
CHMRTN:
; **********************************************************
; *
; *	CHANGE MODE ROUTINE. THIS ROUTINE GETS CONTROL WHENEVER
; *	A CMKRNL, CMEXEC, OR CMSUP SYSTEM SERVICE IS ISSUED
; *	BY THE MODE MACRO ('TO' OPTION).  IT MERELY DOES 
; *	A JUMP INDIRECT ON A FIELD SET UP BY MODE. IT HAS 
; *	THE EFFECT OF RETURNING TO THE END OF THE MODE
; *	MACRO EXPANSION.
; *
; *************************************************************
;
	.WORD	0			; ENTRY MASK
	JMP	@CHM_CONT		; RETURN TO MODE MACRO IN NEW MODE
;
; *	RET INSTR WILL BE ISSUED IN EXPANSION OF 'MODE FROM, ....' MACRO
;
	.END	SATSSF05
