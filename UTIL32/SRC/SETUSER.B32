MODULE SETUSER (
		LANGUAGE (BLISS32),
		MAIN = SET_USER,
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  Hack Programs
!
! ABSTRACT:
!
!	This program changes the process' user name to be the specified
!	string. It requires change mode to kernel privilege to run.
!
! ENVIRONMENT:
!
!	VAX/VMS Operating System
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  27-Mar-1980  14:42
!
! MODIFIED BY:
!
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
LIBRARY 'SYS$LIBRARY:CLIMAC.L32';


FORWARD ROUTINE
	SET_USER,			! main program
	WRITE_NAME;			! kernel mode routine


OWN
	GET_COMMAND	: $CLIREQDESC (
				RQTYPE = GETCMD
				);

GLOBAL ROUTINE SET_USER (START_ADDR, CLI_CALLBACK) =

!++
!
! Functional Description:
!
!	This routine is the main program of the set user name utility.
!
! Calling Sequence:
!	standard
!
! Input Parameters:
!	CLI_CALLBACK: CLI service callback address
!
! Implicit Inputs:
!	none
!
! Output Parameters:
!	none
!
! Implicit Outputs:
!	none
!
! Routines Called:
!	none
!
! Routine Value:
!	1
!
! Signals:
!	none
!
! Side Effects:
!	process name changed
!
!--

BEGIN

(.CLI_CALLBACK) (GET_COMMAND, 0, 0);

$CMKRNL (ROUTIN = WRITE_NAME)

END;					! end of routine SET_NAME

GLOBAL ROUTINE WRITE_NAME =

!++
!
! Functional Description:
!
!	This routine writes the specified user name into the user name
!	area in the process control region.
!
! Calling Sequence:
!	standard
!
! Input Parameters:
!	none
!
! Implicit Inputs:
!	none
!
! Output Parameters:
!	none
!
! Implicit Outputs:
!	CTL$T_USERNAME: written with new name string
!
! Routines Called:
!	none
!
! Routine Value:
!	none
!
! Signals:
!	none
!
! Side Effects:
!	none
!
!--

BEGIN

LOCAL
	JIB		: REF BLOCK [,BYTE];

EXTERNAL
	CTL$T_USERNAME	: VECTOR [,BYTE] ADDRESSING_MODE (ABSOLUTE),
	SCH$GL_CURPCB	: REF BLOCK [,BYTE] ADDRESSING_MODE (ABSOLUTE);

CH$COPY (.GET_COMMAND[CLI$W_RQSIZE], .GET_COMMAND[CLI$A_RQADDR],
	 ' ', 12, CTL$T_USERNAME);

JIB = .SCH$GL_CURPCB[PCB$L_JIB];
CH$COPY (.GET_COMMAND[CLI$W_RQSIZE], .GET_COMMAND[CLI$A_RQADDR],
	 ' ', 12, JIB[JIB$T_USERNAME]);

1
END;					! end of routine WRITE_NAME

END
ELUDOM
