	.TITLE	FORTRAN - BACKTRANSLATOR FOR FORTRAN COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	AUGUST 1977
;
; BACKTRANSLATOR FORTRAN
;
;
; MODIFIED BY:
;
;	V001	TMH0001		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;---

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL DATA
;
	IMPURE
;
;
;
INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
		RQFLGS=CLI$V_PARMREQ	;PRIMARY INPUT IS REQUIRED

OBJECT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OBJECT_DESC,-		;FOR PRIMARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OBJECT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT1	;FOR PRIMARY OUTPUT

LIST_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		LIST_DESC,-		;FOR SECONDARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

LIST_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT2	;FOR SECONDARY OUTPUT


QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_CHEC,-;/CHECK:(BOUNDS,OVERFLOW,ARGS)
		TRUACT=FORT_CHECK,-	;CALL QUALIFIER HANDLER
		FLSACT=FORT_NOCHECK	;CALL NEGATIVE QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_CONT,-;/CONTIUATIONS:N
		TRUACT=FORT_CONTIN	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_DEBU,-;/DEBUG:(LINES,SYMBOLS)
		TRUACT=FORT_DEBUG,-	;CALL QUALIFIER HANDLER
		FLSACT=FORT_NODEBUG	;CALL NEGATIVE QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_D_LI,-;/D_LINES
		TRUACT=FORT_D_LINES	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_I4,-	;/I4
		TRUACT=FORT_I4,-	;CALL QUALIFIER HANDLER
		FLSACT=FORT_NOI4	;CALL NEGATIVE QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_MACH,-;/MACHINE_CODE
		TRUACT=FORT_MACHINE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_OPTI,-;/OPTIMIZE
		FLSACT=FORT_NOOPTIMIZE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_WARN,-;/WARNINGS
		FLSACT=FORT_NOWARNINGS	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_FORT_WORK,-;/WORKFILES:N
		TRUACT=FORT_WORKFILES	;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

;	.SBTTL FORTRAN
;+
; BACKTRANSLATOR FORTRAN
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

FORT::
	CALLG	W^OBJECT_ARGLIST,-	;PROCESS PRIMARY OUTPUT (/OBJECT:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+OBJECT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	DECB	W^PARAMLOC		;SET UP FOR SECONDARY OUTPUT
	CALLG	W^LIST_ARGLIST,-	;PROCESS SECONDARY OUTPUT (/LIST:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+LIST_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS SECONDARY OUTPUT
	$SETSTRING </-SP>,TYPE=INLINE,POS=<PRIM_OUTPUT-1>
					;FORCE NO SPOOL OPTION ON LISTING
	MOVB	#PRIM_INPUT,W^HOLDLOC	;CAUSE OPTIONS TO GO AT END OF INPUT
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND OPTIONS
		@CLI$A_UTILSERV(AP)
	MOVB	#PRIM_INPUT+1,W^PARAMLOC;SET UP TO START ACCEPTING INPUTS
10$:	DECB	W^PARAMLOC		;PUT NEXT INPUT IN NEXT POSITION
	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	BBS	#CLI$V_CONCATINP,-	;BRANCH IF MORE INPUTS TO GET THEM
		W^CLI$B_RQSTAT+INPUT_DESC,10$
	DEFPROG	F4V,NOSTICK		;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


FORT_CHECK:
	$SETSTRING	</CH>,F4V,FLAGS=<BTR$M_RETURN> ;SET UP /CHECK OPTION
10$:	$GETKEYWORD	LIST=<-		;ACCEPT /CHECK[:VALS...] OPTION
				ALL,-
				ARGUMENTS,-
				BOUNDS,-
				OVERFLOW,-
				NONE,-
				NOARGUMENTS,-
				NOBOUNDS,-
				NOOVERFLOW>
	$REPLACE	<:AL,:AR,:B,:O,:NON,:NOA,:NOB,:NOO>,10$

FORT_NOCHECK:
	$SETSTRING	</NOCH>,F4V,FLAGS=<BTR$M_EXPLICIT>

FORT_CONTIN:
	$GETDECNUM	</CO>,F4V	;ACCEPT /CONTIUATIONS:N

FORT_DEBUG:
	$SETSTRING	</DE>,F4V,FLAGS=<BTR$M_RETURN> ;SET UP /DEBUG OPTION
10$:	$GETKEYWORD	LIST=<-		;ACCEPT /DEBUG[:VALS...] OPTION
				ALL,-
				SYMBOLS,-
				TRACEBACK,-
				NONE,-
				NOSYMBOLS,-
				NOTRACEBACK>
	$REPLACE	<:A,:S,:T,:NON,:NOS,:NOT>,10$

FORT_NODEBUG:
	$SETSTRING	</NODE>,F4V,FLAGS=<BTR$M_EXPLICIT>

FORT_D_LINES:
	$SETSTRING	</DL>		;SET UP /D_LINES OPTION

FORT_I4:
	$SETSTRING	</I4>		;SET UP /I4 OPTION

FORT_NOI4:
	$SETSTRING	</NOI4>,FLAGS=<BTR$M_EXPLICIT>	;SET UP /NOI4 OPTION

FORT_MACHINE:
	$SETSTRING	</MA>,F4V	;SET UP MACHINE CODE LISTING

FORT_NOOPTIMIZE:
	$SETSTRING	</-OP>,FLAGS=<BTR$M_EXPLICIT> ;SET UP /NOOPTIMIZE

FORT_NOWARNINGS:
	$SETSTRING	</-WA>,FLAGS=<BTR$M_EXPLICIT> ;SET UP /NOWARNINGS

FORT_WORKFILES:
	$GETDECNUM	</WO>,F4V	;SET UP /WORKFILES:N


	.END
