	.TITLE	LIBRARY - BACKTRANSLATOR FOR LIBRARY COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	NOVEMBER 1977
;
; BACKTRANSLATOR LIBRARY
;
; MODIFIED BY:
;
;	V001	TMH0001		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;---

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL SYMBOLS
;
	LIBR$M_OVRDEF	= 1		;FLAG SET TO OVERIDE /REPLACE DEFAULT
	LIBR$V_OVRDEF	= 0		;...
	LIBR$M_EXTRCOMP	= 2		;FLAG TO IDENTIFY /EXTRACT OPERATION
	LIBR$V_EXTRCOMP	= 1		;OR /COMPRESS OPERATION
	LIBR$M_INPUT	= 4		;FLAG TI INDICATE INPUT LIST OCCURRED
	LIBR$V_INPUT	= 2		;...
	LIBR$M_EXTRACT	= 8		;FLAG TO INDICATE /EXTRACT
	LIBR$V_EXTRACT	= 3		;...

;
; LOCAL DATA
;
	IMPURE

INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
		RQFLGS=CLI$V_PARMREQ	;PRIMARY INPUT IS REQUIRED

INPUT2_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT2_DESC,-		;FOR OPTIONAL SECONDARY INPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT2_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT2,-	;FOR SECONDARY INPUT
		QUALST=INPUT2_QUALS	;QUALIFIERS NEEDED ON INPUTS

INPUT2_QUALS:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_SELE,-;/SELECTIVE
		TRUACT=LIBR_SELECTIVE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

OUTPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OUTPUT_DESC,-		;FOR FIRST OUTPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OUTPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT1	;FOR PRIMARY OUTPUT


QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_COMP,-;/COMPRESS[:(BLOCKS=NNN,MODULES=MMM)]
		TRUACT=LIBR_COMPRESS	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_CREA,-;/CREATE[:(BLOCKS=NNN,MODULES=MMM)]
		TRUACT=LIBR_CREATE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_DELE,-;/DELETE:(MODULE,MODULE,...)
		TRUACT=LIBR_DELETE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_EXTR,-;/EXTRACT:MODULE
		TRUACT=LIBR_EXTRACT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_INSE,-;/INSERT
		TRUACT=LIBR_INSERT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_LIST,-;/LIST[:FILESPEC]
		TRUACT=LIBR_LIST	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_REMO,-;/REMOVE:(GLOBAL,GLOBAL,...)
		TRUACT=LIBR_REMOVE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_REPL	;/REPLACE

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_MACR,-;/MACRO
		TRUACT=LIBR_MACRO	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_OBJE	;/OBJECT

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_NAME,-;/NAMES
		TRUACT=LIBR_NAMES	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_FULL,-;/FULL
		TRUACT=LIBR_FULL	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_GLOB,-;/GLOBALS
		FLSACT=LIBR_NOGLOBALS	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_RSX1,-;/RSX11
		TRUACT=LIBR_RSX11	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_LIBR_SQUE,-;/SQUEEZE
		TRUACT=LIBR_SQUEEZE	;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

LIBFLAGS:	.BYTE	0		;LOCAL FLAGS FOR LIBRARY COMMAND

;	.SBTTL LIBRARY
;+
; BACKTRANSLATOR LIBRARY
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

LIBR::
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND QUALIFIER OPTIONS
		@CLI$A_UTILSERV(AP)
	CALLG	W^INPUT_ARGLIST,-	;PROCESS PRIMARY INPUT (LIBRARY NAME)
		@CLI$A_UTILSERV(AP)
	CALLG	W^OUTPUT_ARGLIST,-	;PROCESS OBJECT FILE OUTPUT ON EXTRACT
		@CLI$A_UTILSERV(AP)	;(THIS QUALIFIER DEFAULTS TO ON)
	BBC	#LIBR$V_EXTRCOMP,W^LIBFLAGS,10$ ;HANDLE /EXTRACT OR /COMPRESS
	MOVQ	W^CLI$Q_RQDESC+OUTPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	MOVB	#PRIM_INPUT,W^PARAMLOC	;SET UP TO MAKE LIBRARY =INPUT
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	BRB	40$			;EXIT VIA COMMON CODE
10$:	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	MOVB	#PRIM_INPUT+1,W^HOLDLOC	;SET UP TO ACCEPT OPTIONS ON FILESPEC
	MOVB	#PRIM_INPUT+1,W^PARAMLOC;SET UP TO START ACCEPTING INPUTS
20$:	DECB	W^PARAMLOC		;PUT NEXT INPUT IN NEXT POSITION
	DECB	W^HOLDLOC		;PUT NEXT OPTION IN NEXT POSITION
	CALLG	W^INPUT2_ARGLIST,-	;PROCESS OPTIONAL SECONDARY INPUTS
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+INPUT2_DESC,R9 ;PICK UP STRING DESCRIPTOR
	TSTW	R9			;IS THERE AN INPUT LIST?
	BEQL	30$			;BRANCH IF NOT
	BISB	#LIBR$M_INPUT,W^LIBFLAGS;SET FLAG INDICATING INPUT LIST
30$:	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	BBS	#CLI$V_CONCATINP,-	;BRANCH IF MORE INPUTS TO GET THEM
		W^CLI$B_RQSTAT+INPUT2_DESC,20$
	BBC	#LIBR$V_INPUT,W^LIBFLAGS,40$ ;BRANCH IF NO INPUT LIST
	BBS	#LIBR$V_OVRDEF,W^LIBFLAGS,40$ ;BRANCH IF OPERATION /INSERT
	$SETSTRING	</RP>,TYPE=INLINE,POS=<PRIM_OUTPUT>
					;TURN ON /RP DEFAULT OPTION
40$:	DEFPROG	LIB,NOSTICK		;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


LIBR_COMPRESS:
	$SETSTRING	</CO>,FLAGS=<BTR$M_RETURN> ;SET /COMPRESS OPTION
	BISB	#LIBR$M_EXTRCOMP,W^LIBFLAGS ;INDICATE /COMPRESS PROCESSING
LIBR_SIZE:
	$GETKEYWORD	LIST=<-		;HANDLE KEYWORD LIST ON /CREATE,/COMPR
				BLOCKS,-
				GLOBALS,-
				MODULES>
	BSBW	ORDERSUBVAL		;PUT THE NUMERIC PART INTO THE LIST
	BLBS	R0,LIBR_SIZE		;BRANCH TO CONTINUE VALUE SCANNING
	MOVL	#3,R6			;SET THE NUMBER OF VALUES TO PROCESS
	RSB				;CO-ROUTINE RETURN TO GENERATE TEXT

LIBR_CREATE:
	$SETSTRING	</CR>,FLAGS=<BTR$M_RETURN> ;SET /CREATE SWITCH
	BISB	#LIBR$M_OVRDEF,W^LIBFLAGS ;OVERRIDE /REPLACE DEFAULT
	BRB	LIBR_SIZE		;HANDLE KEYWORD PROCESSING

LIBR_DELETE:
	$GETSTRING	</DE:>,FLAGS=<BTR$M_LIST,BTR$M_VALREQ>
					;GENERATE /DELETE:MODULES-LIST

LIBR_EXTRACT:
	$GETSTRING	</EX>,FLAGS=<BTR$M_RETURN,BTR$M_LIST>,POS=<PRIM_INPUT>
					;GENERATE /EXTRACT:MODULES
	BISB	#LIBR$M_EXTRCOMP!LIBR$M_EXTRACT,W^LIBFLAGS
					;INDICATE /EXTRACT PROCESSING
	RET				;RETURN TO CLI PARSER

LIBR_INSERT:
	$SETSTRING	</IN>,FLAGS=<BTR$M_RETURN> ;GENERATE /INSERT OPTION
	BISB	#LIBR$M_OVRDEF,W^LIBFLAGS ;OVERRIDE /REPLACE DEFAULT
	RET				;RETURN TO CLI PARSER

LIBR_REMOVE:
	$GETSTRING	</DG:>,FLAGS=<BTR$M_LIST,BTR$M_VALREQ>
					;GENERATE /REMOVE:GLOBAL-LIST

LIBR_LISTDEF:
	.LONG	20$-10$			;SIZE OF STRING
	.LONG	10$			;ADDRESS OF STRING
10$:	.ASCII	\TI:\			;DEFAULT LISTING DEVICE
20$:

LIBR_LIST:
	$SETSTRING	</-SP>,FLAGS=<BTR$M_RETURN>,POS=<PRIM_OUTPUT-1>
					;TURN OFF SPOOLING
	BSBW	GETSUBVAL		;IS IT /LIST OR /LIST:FILESPEC?
	DECB	W^PARAMLOC		;SET UP FOR SECONDARY OUTPUT
	MOVQ	LIBR_LISTDEF,R9		;ASSUME OUTPUT TO TERMINAL
	BLBC	R0,10$			;BRANCH IF /LIST
	MOVQ	W^CLI$Q_RQDESC+VALUE_DESC,R9 ;GET DESCRIPTOR FOR FILESPEC
10$:	BSBW	INSERTARG		;PUT IT INTO THE INPUT LIST
	CLRB	W^PARAMLOC		;RETURN IT BACK TO PRIMARY OUTPUT
	RET				;RETURN TO CLI

LIBR_MACRO:
	$INLINE				;GET CONTROL TO SET FLAG FOR LATER
	BBS	#LIBR$V_EXTRACT,W^LIBFLAGS,10$ ;BRANCH IF /EXTRACT CASE
	$SETSTRING </DF:MAC>,TYPE=INLINE;SET /MACRO SWITCH DEFAULT LIBRARY
	RET				;RETURN TO CLI
10$:	$SETSTRING </DF:MAC>,TYPE=INLINE,POS=<PRIM_INPUT>
					;SET /MACRO SWITCH ON LIBRARY INPUT
	RET				;RETURN TO CLI

LIBR_NAMES:
	$SETSTRING	</LE>,POS=<PRIM_OUTPUT-1> ;INCLUDE GLOBALS IN LISTING

LIBR_FULL:
	$SETSTRING	</FU>,POS=<PRIM_OUTPUT-1> ;INCLUDE FULL DESCRIPTIONS

LIBR_NOGLOBALS:
	$SETSTRING	</-EP>,FLAGS=<BTR$M_EXPLICIT> ;SUPPRESS GLOBALS

LIBR_RSX11:
	$SETSTRING	<>,LBR,FLAGS=<BTR$M_FORCE>
					;INVOKE RSX LIBRARIAN

LIBR_SELECTIVE:
	$SETSTRING	</SS>		;GENERATE SELECTIVE SEARCH OPTION

LIBR_SQUEEZE:
	$SETSTRING	</SZ>		;GENERATE MACRO SQUEEZE OPTION

	.END
