	.TITLE	COBOL - BACKTRANSLATOR FOR COBOL COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	DECEMBER 1977
;
; BACKTRANSLATOR COBOL
;
; MODIFIED BY:
;
;	V002	TMH0002		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;
;	V01.1		T.J. PORTER	06-DEC-78
;			ADD /DE AND /TR IN VARIOUS COMBINATIONS
;			TO THE COBOL COMMAND LINE. ADD /C74 QUALIFIER
;			TO INVOKE COBOL-74.
;

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL DATA
;
	IMPURE
;
;
;
INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
		RQFLGS=CLI$V_PARMREQ	;PRIMARY INPUT IS REQUIRED

OBJECT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OBJECT_DESC,-		;FOR PRIMARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OBJECT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT1	;FOR PRIMARY OUTPUT

LIST_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		LIST_DESC,-		;FOR SECONDARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

LIST_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT2	;FOR SECONDARY OUTPUT


QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_ANSI,-;/ANSI
		TRUACT=COBO_ANSI	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_COPY,-;/COPY_LIST
		FLSACT=COBO_NOCOPY	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_CROS,-;/CROSS_REFERENCE
		TRUACT=COBO_CROSS_REF	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_MAP,-	;/MAP
		TRUACT=COBO_MAP		;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_NAME,-;/NAME:XX
		TRUACT=COBO_NAME	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_NEST,-;/NEST:N
		TRUACT=COBO_NEST	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_OVER,-;/OVERLAY
		TRUACT=COBO_OVERLAY	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_RSX1,-;/RSX11
		TRUACT=COBO_RSX11	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_SEGM,-;/SEGMENT_SIZE:N
		TRUACT=COBO_SEGMENT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_VERB,-;/VERB_LOCATION
		TRUACT=COBO_VERB_LOC	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_WARN,-;/WARNINGS
		FLSACT=COBO_NOWARNINGS	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_DEBU,-;/DEBUG[:NONE!TRACEBACK!ALL]
		TRUACT=COBO_DEBUG,-	;CALL QUALIFIER HANDLER
		FLSACT=COBO_NODEBUG	;CALL NEGATIVE QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_COBO_C74,-	;/C74 INVOKES COBOL-74
		TRUACT=COBO_C74		;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

;	.SBTTL COBOL
;+
; BACKTRANSLATOR COBOL
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

COBO::
	CALLG	W^OBJECT_ARGLIST,-	;PROCESS PRIMARY OUTPUT (/OBJECT:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+OBJECT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	DECB	W^PARAMLOC		;SET UP FOR SECONDARY OUTPUT
	CALLG	W^LIST_ARGLIST,-	;PROCESS SECONDARY OUTPUT (/LIST:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+LIST_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS SECONDARY OUTPUT
	MOVB	#PRIM_INPUT,W^HOLDLOC	;CAUSE OPTIONS TO GO AT END OF INPUT
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND OPTIONS
		@CLI$A_UTILSERV(AP)
	MOVB	#PRIM_INPUT+1,W^PARAMLOC;SET UP TO START ACCEPTING INPUTS
10$:	DECB	W^PARAMLOC		;PUT NEXT INPUT IN NEXT POSITION
	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	BBS	#CLI$V_CONCATINP,-	;BRANCH IF MORE INPUTS TO GET THEM
		W^CLI$B_RQSTAT+INPUT_DESC,10$
	$SETSTRING	</SYM:4>,TYPE=<INLINE>
	DEFPROG	CBL,NOSTICK		;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


COBO_ANSI:
	$SETSTRING	</CVF>			;SET UP TO ACCEPT ANSI COBOL

COBO_NOCOPY:
	$SETSTRING	</NL>,FLAGS=<BTR$M_EXPLICIT> ;SET UP /NOCOPY_LIST

COBO_CROSS_REF:
	$SETSTRING	</CREF>		;SET UP CROSS REFERENCE OPTION

COBO_MAP:
	$SETSTRING	</MAP>		;TURN ON MAP OPTION

COBO_NAME:
	$GETSTRING	</KER:>,FLAGS=<BTR$M_VALREQ> ;GET USER PSECT NAME

COBO_NEST:
	$GETDECNUM	</PFM>			;GET PERFORM STATEMENT NEST COUNT

COBO_OVERLAY:
	$SETSTRING	</OV>		;SET /OVERLAY OPTION

COBO_RSX11:
	$SETSTRING	<>,CBL,FLAGS=<BTR$M_FORCE> ;MAKE PROGRAM COBOL-11

COBO_SEGMENT:
	$GETDECNUM	</CSEG>			;GET /SEGMENT_SIZE OPTION

COBO_VERB_LOC:
	$SETSTRING	</OBJ>		;GET /VERB_LOCATION OPTION

COBO_NOWARNINGS:
	$SETSTRING	</ERR:1>,FLAGS=<BTR$M_EXPLICIT>	;SET UP /NOWARNINGS

COBO_DEBUG:
	$SETSTRING	</>,,FLAGS=<BTR$M_RETURN> ;SET UP /DEBUG OPTION
10$:	$GETKEYWORD	LIST=<-		;ACCEPT /DEBUG[:VALUE] OPTION
				ALL,-
				TRACEBACK,-
				NONE>
	$REPLACE	<DE/TR,-DE/TR,-DE/-TR>,10$

COBO_NODEBUG:
	$SETSTRING	</-DE/-TR>,,FLAGS=<BTR$M_EXPLICIT>

COBO_C74:
	$SETSTRING	<>,C74,FLAGS=<BTR$M_FORCE> ;MAKE PROGRAM COBOL-74


	.END
