	.TITLE	EDIT - BACKTRANSLATOR FOR EDIT COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	OCTOBER 1977
;
; BACKTRANSLATOR EDIT
;
; MODIFIED BY:
;
;	V003	TMH0003		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;
;	V002	TMH0001		T. Halvorsen	02-Nov-1979
;		Add EDIT/SOS qualifiers /NUM and /BAK
;
;	V01.01	RN0001		R. Newland	29-Apr-1979
;		New EDI/SLP qualifiers, /REPORT and /CHECKSUM
;

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL DATA
;
	IMPURE

INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1	;FOR PRIMARY INPUT

OUTPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OUTPUT_DESC,-		;FOR PRIMARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OUTPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT1	;FOR PRIMARY OUTPUT

LIST_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		LIST_DESC,-		;FOR SECONDARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

LIST_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT2	;FOR SECONDARY OUTPUT


QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_AUDI,-;/AUDIT:(POSITION=N,SIZE=M)
		TRUACT=EDIT_AUDIT,-	;CALL QUALIFIER HANDLER
		FLSACT=EDIT_NOAUDIT	;CALL FALSE QUALIFIER HANDLER

	$CLIQUALDESC -
		QDCODE=CLI$K_EDIT_BAK,-	; /[NO]BAK, /BAK IS DEFAULT
		FLSACT=EDIT_NOBAK	; QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_DECI,-;/DECIDE
		TRUACT=EDIT_DECIDE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_EXAC,-;/EXACT
		TRUACT=EDIT_EXACT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_EXPE,-;/EXPERT
		TRUACT=EDIT_EXPERT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_INCR,-;/INCREMENT:N
		TRUACT=EDIT_INCREMENT	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_ISAV,-;/ISAVE:N
		TRUACT=EDIT_ISAVE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_LINE,-;/[NO]LINE
		FLSACT=EDIT_NOLINE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_LOWE,-;/[NO]LOWER
		FLSACT=EDIT_NOLOWER	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -
		QDCODE=CLI$K_EDIT_NUM,-	; /[NO]NUM QUALIFIER, /NUM DEFAULT
		FLSACT=EDIT_NONUM	; QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_PLIN,-;/PLINES:N
		TRUACT=EDIT_PLINES	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_READ,-;/READ_ONLY
		TRUACT=EDIT_READONLY	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_SAVE,-;/SAVE:N
		TRUACT=EDIT_SAVE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_SLP,- ;/SLP
		TRUACT=EDIT_SLP		;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_SOS,- ;/SOS
		TRUACT=EDIT_SOS		;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_STAR,-;/START:N
		TRUACT=EDIT_START	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_STEP,-;/STEP:N
		TRUACT=EDIT_STEP	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_TAB,-	;/[NO]TAB
		TRUACT=EDIT_TAB_FILL	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_TRUN,-;/TRUNCATE:N
		TRUACT=EDIT_TRUNCATE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_CHEC,-;/CHECKSUM:N
		TRUACT=EDIT_CHECKSUM	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_EDIT_REPO,-;/REPORT
		TRUACT=EDIT_REPORT


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

;	.SBTTL EDIT
;+
; BACKTRANSLATOR EDIT
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

EDIT::
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND QUALIFIER OPTIONS
		@CLI$A_UTILSERV(AP)
	CALLG	W^OUTPUT_ARGLIST,-	;PROCESS PRIMARY OUTPUT (/OUTPUT:SPEC)
		@CLI$A_UTILSERV(AP)
	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
		@CLI$A_UTILSERV(AP)
	CMPB	#PROG_SLP,W^PROGINDEX	;ARE WE GOING TO INVOKE SLP?
	BNEQ	20$			;BRANCH IF SOS
	MOVB	#PRIM_INPUT,W^PARAMLOC	;SET UP TO START ACCEPTING INPUTS
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	CLRB	W^PARAMLOC		;GET PRIMARY OUTPUT AS OUTPUT
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;SET UP TO DEFAULT OUTPUT TO INPUT
	TSTW	W^CLI$W_RQSIZE+OUTPUT_DESC ;WAS AN EXPLICIT OUTPUT GIVEN?
	BEQL	10$			;BRANCH IF NOT TO DEFAULT IT
	MOVQ	W^CLI$Q_RQDESC+OUTPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
10$:	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	DECB	W^PARAMLOC		;SET UP TO TAKE LIST FILE SPEC AS
					;SECONDARY OUTPUT
	CALLG	W^LIST_ARGLIST,-	;PROCESS SECONDARY OUTPUT (/LIST:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+LIST_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE I AS SECONDARY OUTPUT
	BRB	40$			;BRANCH TO EXIT
20$:	MOVQ	W^CLI$Q_RQDESC+OUTPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	TSTW	R9			;WAS AN EXPLICIT OUTPUT GIVEN?
	BEQL	30$			;BRANCH IF NO EXPLICIT OUTPUT
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	MOVB	#PRIM_INPUT,W^PARAMLOC	;SET UP TO START ACCEPTING INPUTS
30$:	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
40$:	DEFPROG	SOS			;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT



EDIT_AUDIT:
	$SETSTRING	</AU>,SLP,FLAGS=<BTR$M_RETURN> ;SET /AUDIT OPTION
10$:	$GETKEYWORD	LIST=<-		;HANDLE KEYWORD LIST ON /AUDIT_TRAIL
				POSITION,-
				SIZE>
	BSBW	ORDERSUBVAL		;PUT THE NUMERIC PART INTO THE LIST
	BLBS	R0,10$			;BRANCH TO CONTINUE VALUE SCANNING
	MOVL	#2,R6			;SET THE NUMBER OF VALUES TO PROCESS
	RSB				;CO-ROUTINE RETURN TO GENERATE TEXT

EDIT_NOAUDIT:
	$SETSTRING	</-AU>,SLP,FLAGS=<BTR$M_EXPLICIT> ;GENERATE NO TRAIL

EDIT_NOBAK:
	$SETSTRING	</NOBAK>,SOS	;GENERATE /NOBAK OPTION

EDIT_DECIDE:
	$SETSTRING	</DEC>,SOS	;GENERATE /DECIDE OPTION

EDIT_EXACT:
	$SETSTRING	</EXA>,SOS	;GENERATE /EXACT OPTION

EDIT_EXPERT:
	$SETSTRING	</EXP>,SOS	;GENERATE /EXPERT OPTION

EDIT_INCREMENT:
	$GETDECNUM	</INC>,SOS	;GET THE INCREMENT

EDIT_ISAVE:
	$GETDECNUM	</ISA>,SOS	;GET THE ISAVE NUMBER

EDIT_NOLINE:
	$SETSTRING	</NOLIN>,SOS,FLAGS=<BTR$M_EXPLICIT> ;TURN OFF AUTOMATIC
					;LINE NUMBERING

EDIT_NOLOWER:
	$SETSTRING	</NOLOW>,SOS,FLAGS=<BTR$M_EXPLICIT> ;TURN OFF LOWER
					;CASE INPUT

EDIT_NONUM:
	$SETSTRING	</NONUM>,SOS	;GENERATE /NONUM OPTION

EDIT_PLINES:
	$GETDECNUM	</PLI>,SOS	;ACCEPT NEW /PLINES NUMBER

EDIT_READONLY:
	$SETSTRING	</REA>,SOS	;SET UP /READ_ONLY OPTION

EDIT_SAVE:
	$GETDECNUM	</SAV>,SOS	;ACCEPT AN AUTOMATIC SAVE VALUE

EDIT_SLP:
	$SETSTRING	<>,SLP,FLAGS=<BTR$M_FORCE> ;SELECT SLP AS EDITOR

EDIT_SOS:
	$SETSTRING	<>,SOS,FLAGS=<BTR$M_FORCE> ;SELECT SOS AS EDITOR

EDIT_START:
	$GETDECNUM	</STA>,SOS	;ACCEPT /START:LINENUMBER OPTION

EDIT_STEP:
	$GETDECNUM	</STE>,SOS	;ACCEPT /STEP:NUMBER OPTION

EDIT_TAB_FILL:
	$SETSTRING	</NOBF>,SLP	;SET TO GENERATE TAB FILL

EDIT_TRUNCATE:
	$GETDECNUM	</CM>,SLP	;SET TO CAUSE LINE TRUNCATION

EDIT_CHECKSUM:			;ACCEPT /CHECKSUM:NUMBER
	$GETSTRING	</CS>,SLP,FLAGS=<BTR$M_LIST>

EDIT_REPORT:				;ACCEPT /REPORT
	$SETSTRING	</TR>,SLP


	.END
