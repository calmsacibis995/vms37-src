	.TITLE	DISPAT - COMMAND DISPATCHER FOR BACKTRANSLATORS
	.IDENT	'V03-001'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	AUGUST 1977
;
; MODIFIED BY:
;
;
;	V03-001	BLS0163		Benn Schreiber		22-Mar-1982
;		Pass AP to RSX$ACTIVATE so RSX can get IMGHDRADR
;
;	V02-004	BLS0126		Benn Schreiber		1-Jan-1982
;		Remove COPY, CREATE, DELETE, DIF, DIR, DUMP, PURGE,
;		RENAME, SET PROTECTION, and UNLOCK commands
;
; BACKTRANSLATOR DISPATCHER
;

;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE LOCAL SYMBOLS
	$CLIDEF				;DEFINE CLI SYMBOLS
	$CLIVERBDEF			;DEFINE THE COMMAND VALUE SYMBOLS

;
; LOCAL DATA
;
	IMPURE

STICKY_FLAG::
	.LONG	0			;0 DEFAULT MEANS OUTPUT DEV:[DIR]
					;IS STICKY, 1 MEANS NO -- E.G.
					;FORTRAN SETS TO 1, BUT PURGE DOESN'T
CLIAP:	.LONG	0			;SAVED CLI AP FOR CALLBACK USAGE
RSXDESC:.LONG	0			;SAVED RSX DESC ADDRESS FOR COMMAND

BITMAP::
	.BLKB	3			;ALLOCATE BIT ARRAY FOR CLI

	$V_CMDRDY	= 0		;SET MEANS COMMAND LINE GENERATED
	$V_CHANGEPROG	= 1		;SET MEANS WE NEED CONTROL AT TOP
					;LEVEL TO OPEN A NEW IMAGE
CMDRDYFLAG:
	.BYTE	0			;BITS IDENTIFY WHETHER COMMAND PARSED

	.ALIGN	LONG
CLIWORKAREA::
	.BLKB	CLI$K_WORKAREA		;WORK AREA FOR THE CLI

INIT_ARGLIST:
	$ARGLST	3,-			;ARGLIST TO INITIALIZE THE CLI
		INIT_DESC,-		;POINTER TO REQUEST DESCRIPTOR
		CLIWORKAREA,-		;ADDRESS OF WORK AREA
		BITMAP			;ADDRESS OF CLI BITMAP

INIT_DESC:
	$CLIREQDESC -			;REQUEST DESCRIPTOR FOR INITIALIZATION
		RQTYPE=CLI$K_INITPRS


VERB_ARGLIST:
	$ARGLST	3,-			;ARGLIST FOR VERB IDENTIFIER CALL
		VERB_DESC,-		;POINTER TO REQUEST DESCRIPTOR
		CLIWORKAREA,-		;ADDRESS OF WORK AREA
		BITMAP			;ADDRESS OF CLI BITMAP

VERB_DESC:
	$CLIREQDESC -			;REQUEST DESCRIPTOR TO IDENTIFY VERB
		RQTYPE=CLI$K_GETCMD	;RETURN VERB INDEX

END_ARGLIST:
	$ARGLST	3,-			;ARGLIST FOR END IDENTIFIER CALL
		END_DESC,-		;POINTER TO REQUEST DESCRIPTOR
		CLIWORKAREA,-		;ADDRESS OF WORK AREA
		BITMAP			;ADDRESS OF CLI BITMAP

END_DESC:
	$CLIREQDESC -			;REQUEST DESCRIPTOR TO IDENTIFY VERB
		RQTYPE=CLI$K_ENDPRM1	;SET UP NEXT PART OF ',' LIST

	.IF DF	DEBUG
$DEBUG$FAB:	$FAB	FNM=<SYS$OUTPUT:>,-
			RAT=<CR>
$DEBUG$RAB:	$RAB	FAB=<$DEBUG$FAB>,-
			RAC=<SEQ>
	.ENDC

	PURE

	PURE	VALLIST
VALIST:
	PURE	DISPLIST
DISPLIST:

	COMMAND BASI
	COMMAND	COBO
	COMMAND	CORA
	COMMAND	EDIT
	COMMAND	FORT
	COMMAND	LIBR
	COMMAND	LINK
	COMMAND	MACR
	COMMAND	SORT

	PURE	VALLIST
	SIZVALIST = .-VALIST

	.SBTTL	DISPATCHER TO SUBCOMMANDS
	PURE
;+
; BACKTRANSLATOR DISPATCHER
;
;  THIS ROUTINE ACTS AS THE ENTRY POINT FOR ALL COMMANDS TO BE
;  BACK TRANSLATED TO THEIR RSX-11 COMMAND LINE FORMAT.
;  THIS IMAGE IS INVOKED AS A RESULT OF DCL IDENTIFYING THE COMMAND
;  AS BEING EXECUTED BY A COMPATIBILITY MODE IMAGE
;
;
; INPUTS:
;   THE CLI TABLES AS GIVEN BY RESULT PARSING REQUESTS
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-
	.ENABL	LSB

TRAN_START::
	.WORD	0			;ENTRY MASK FROM CLI
	MOVL	AP,W^CLIAP		;SAVE AP FOR USAGE AT CALLBACK LEVEL
	CALLG	W^INIT_ARGLIST, -	;CALL BACK TO INITIALIZE THE CLI
		@CLI$A_UTILSERV(AP)
	BSBW	COMMA_LIST		;PARSE AND GENERATE THE COMMAND
	PUSHL	AP			;PASS AP INTO RSX$ACTIVATE
	PUSHL	W^STICKY_FLAG		;INDICATE MCR OR DCL STICKYNESS
	PUSHAB	B^CALLBACK		;PROVIDE CALL BACK ROUTINE
	PUSHL	W^PROG_DESC+4		;ADDRESS OF FILE NAME
	PUSHL	W^PROG_DESC		;LENGTH OF FILE NAME
	CALLS	#5,RSX$ACTIVATE		;RUN THE RSX IMAGE
	BRB	IMMED_EXIT

ERR_EXIT::
	INSV	#BTRAN+<1@15>/<1@15>,#15,#17,R0	;INSERT OUR SUBSYSTEM CODE
IMMED_EXIT::
	$EXIT_S	R0			;EXIT WITH STATUS CODE IN R0

CALLBACK:
	.WORD	SAVE_REG_MASK		;SAVE THE REGS WE USE
	MOVL	4(AP),W^RSXDESC		;SAVE ADDRESS FOR COMMAND DESCRIPTOR
	MOVL	W^CLIAP,AP		;RESET OUR AP TO TALK TO CLI
	CLRL	R0			;ASSUME NO MORE COMMANDS
	BBS	#$V_CMDRDY,W^CMDRDYFLAG,20$ ;BRANCH IF COMMAND ALREADY PARSED
	BBC	#CLI$V_MOREINP,-	;BRANCH IF COMMAND FINISHED
		W^CLI$B_RQSTAT+END_DESC,40$
	BSBB	COMMA_LIST		;BRANCH FOR UNPROCESSED FILE AFTER ','
20$:	MOVQ	W^RESULT_DESC,@W^RSXDESC;SET UP DESC FOR RSX$RUNIMAGE
	BBCC	#$V_CMDRDY,W^CMDRDYFLAG,30$ ;CLEAR COMMAND READY FLAG
30$:	MOVL	#1,R0			;WE ARE GIVING YOU ANOTHER COMMAND
40$:	RET

	.DSABL	LSB
	.PAGE
	.ENABL	LSB

10$:	ERROR	NOTIMPLEM,FATAL		;ISSUE ERROR AND ABORT

COMMA_LIST:
	CALLG	W^VERB_ARGLIST, -	;CALL CLI TO GET COMMAND INDEX
		@CLI$A_UTILSERV(AP)
	MOVZWL	#SIZVALIST,R2		;GET SIZE OF INDEX TABLE
	LOCC	W^CLI$B_RQSTAT+VERB_DESC,-;FIND THE COMMAND TRANSLATOR TO CALL
		R2,W^VALIST
	BEQL	10$			;BRANCH IF COMMAND NOT IN LIST
	MOVAB	W^ARGSLIST,W^ARGSLISTPTR;INITIALIZE FILE NAME LIST TO NULL
	MOVAB	W^OPTLIST,W^OPTLISTPTR	;INITIALIZE OPTION LIST TO NULL
	CLRB	W^PARAMLOC		;DEFAULT PARAMETERS TO PRIMARY OUTPUT
	CLRB	W^HOLDLOC		;DEFAULT OPTIONS TO PRIMARY OUTPUT
	SUBL	R0,R2			;FORM INDEX TO ENTRY
	MOVZWL	W^DISPLIST[R2],R0	;GET OFFSET TO ROUTINE
DSTART:	JSB	DSTART[R0]		;CALL THE COMMAND TRANSLATOR
	BSBW	DEFAULTPROG		;DEFAULT THE PROGRAM IF NECCESSARY
	BSBW	COMMAND_GEN		;CALL THE COMMAND GENERATOR

	.IF DF	DEBUG
	PUSHR	#^M<R0,R1,R2>
	$CREATE	FAB=W^$DEBUG$FAB
	MOVAB	W^$DEBUG$RAB,R2
	$CONNECT RAB=R2
	$RAB_STORE RAB=R2,RSZ=W^PROG_DESC,RBF=@W^PROG_DESC+4
	$PUT	RAB=R2
	$RAB_STORE RAB=R2,RSZ=W^RESULT_DESC,RBF=@W^RESULT_DESC+4
	$PUT	RAB=R2
	$CLOSE	FAB=W^$DEBUG$FAB
	POPR	#^M<R0,R1,R2>
	.ENDC

	CALLG	W^END_ARGLIST, -	;CALL TO END THE ARGUMENT LIST
		@CLI$A_UTILSERV(AP)
	BLBS	R0,20$			;BRANCH IF NO ERRORS
	BRW	IMMED_EXIT
20$:	BBCS	#$V_CMDRDY,W^CMDRDYFLAG,30$ ;SET COMMAND READY FLAG
30$:	RSB

	.DSABL	LSB

	.END	TRAN_START
