	.TITLE	MACRO - BACKTRANSLATOR FOR MACRO COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	SEPTEMBER 1977
;
; BACKTRANSLATOR MACRO
;
; MODIFIED BY:
;
;	V003	TMH0003		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;
;	V02-002	BLS0076		Benn Schreiber		1-Sep-1981
;		Add support for /cross_reference
;

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL DATA
;
	IMPURE

INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
		QUALST=LIB_QUAL,-	;ACCEPT /LIBRARY QUALIFIER
		RQFLGS=CLI$V_PARMREQ	;PRIMARY INPUT IS REQUIRED

LIB_QUAL:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_LIBR,-;/LIBRARY
		TRUACT=MACR_LIBRARY	;CALL QUALIFIER HANDLER

	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

OBJECT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OBJECT_DESC,-		;FOR PRIMARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OBJECT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT1	;FOR PRIMARY OUTPUT

LIST_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		LIST_DESC,-		;FOR SECONDARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

LIST_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_OUTPUT2	;FOR SECONDARY OUTPUT


QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_RSX1,-;/RSX11 MACRO-11 QUALIFIER
		TRUACT=MACR_RSX11	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_CROS,-;/CROSS_REFERENCE
		TRUACT=MACR_CROSSREF	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_DISA,-;/DISABLE:LIST QUALIFIER
		TRUACT=MACR_DISABLE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_ENAB,-;/ENABLE:LIST QUALIFIER
		TRUACT=MACR_ENABLE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_SHOW,-;/SHOW:LIST QUALIFIER
		TRUACT=MACR_SHOW	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_MACR_NOSH,-;/NOSHOW:LIST QUALIFIER
		TRUACT=MACR_NOSHOW	;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

;	.SBTTL MACRO
;+
; BACKTRANSLATOR MACRO
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

MACR::
	CALLG	W^OBJECT_ARGLIST,-	;PROCESS PRIMARY OUTPUT (/OBJECT:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+OBJECT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	DECB	W^PARAMLOC		;SET UP FOR SECONDARY OUTPUT
	CALLG	W^LIST_ARGLIST,-	;PROCESS SECONDARY OUTPUT (/LIST:SPEC)
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+LIST_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS SECONDARY OUTPUT
	MOVB	#PRIM_INPUT,W^HOLDLOC	;CAUSE OPTIONS TO GO AT END OF INPUT
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND OPTIONS
		@CLI$A_UTILSERV(AP)
	MOVB	#PRIM_INPUT+1,W^PARAMLOC;SET UP TO START ACCEPTING INPUTS
10$:	DECB	W^PARAMLOC		;PUT NEXT INPUT IN NEXT POSITION
	MOVB	W^PARAMLOC,W^HOLDLOC	;MAKE /LIBRARY OCCUR ON THIS INPUT
	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	BBS	#CLI$V_CONCATINP,-	;BRANCH IF MORE INPUTS TO GET THEM
		W^CLI$B_RQSTAT+INPUT_DESC,10$
	$SETSTRING	</-SP>,TYPE=INLINE,POS=<PRIM_OUTPUT-1>
					;PREVENT AUTOMATIC SPOOLING OF LISTING
	DEFPROG	MAR,NOSTICK		;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


MACR_DISABLE:
	$SETSTRING	</DS>,FLAGS=<BTR$M_RETURN> ;SET UP /DISABLE OPTION
DISKEYWDS:
	$GETKEYWORD	LIST=<-		;ACCEPT /DISABLE[:VALS...] OPTION
				ABSOLUTE,-
				DEBUG,-
				TRUNCATION,-
				GLOBAL,-
				LOCAL,-
				TRACEBACK,-
				AMA,-
				DBG,-
				FPT,-
				GBL,-
				LSB,-
				TBK,-
				>
	$REPLACE	<:AMA,:DBG,:FPT,:GBL,:LSB,:TBK,-
			 :AMA,:DBG,:FPT,:GBL,:LSB,:TBK>,DISKEYWDS

MACR_ENABLE:
	$SETSTRING	</EN>,FLAGS=<BTR$M_RETURN> ;SET UP /ENABLE OPTION
	BRW	DISKEYWDS		;USE COMMON CODE WITH /DISABLE

MACR_SHOW:
	$SETSTRING	</LI>,FLAGS=<BTR$M_RETURN>,POS=<PRIM_OUTPUT-1>
SHOWKEYWDS:
	$GETKEYWORD	LIST=<-		;ACCEPT /SHOW[:VALS...]
				CONDITIONALS,-
				DEFINITIONS,-
				CALLS,-
				EXPANSIONS,-
				BINARY,-
				CND,-
				MD,-
				MC,-
				ME,-
				MEB,-
				>
	$REPLACE	<:CND,:MD,:MC,:ME,:MEB,:CND,:MD,:MC,:ME,:MEB>,SHOWKEYWDS

MACR_NOSHOW:
	$SETSTRING	</NL>,FLAGS=<BTR$M_RETURN>,POS=<PRIM_OUTPUT-1>
	BRW	SHOWKEYWDS		;USE COMMON CODE WITH /SHOW:

MACR_LIBRARY:
	$SETSTRING	</ML>		;APPEND /ML QUALIFIER TO RESULT INPUT

MACR_CROSSREF:
	$SETSTRING	</CR>,POS=<PRIM_OUTPUT-1> ;INCLUDE CROSS REFERENCE

MACR_RSX11:
	$SETSTRING	<>,MAC,FLAGS=<BTR$M_FORCE> ;MAKE ASSEMBLER MACRO-11


	.END
