	.TITLE	PROGSET - BACKTRANSLATOR SUBROUTINE
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	AUGUST 1977
;
; BACKTRANSLATOR SUBROUTINE PROGSET
;

;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI QUALIFIER CODES AND VALUES

;
; LOCAL SYMBOLS
;

;
; ARGUMENT LIST OFFSET DEFINITIONS
;

;
; LOCAL DATA
;
	IMPURE
;
;
;
PROGINDEX::	.BYTE	0		;INDEX TO PROGRAM TO RUN
PROGFLAG::	.BYTE	0		;NEQ 0 INDICATES SPECIFICALLY SET

	PURE

;	.SBTTL	PROGSET - INITIALIZATION AND PROGRAM SETTING
;+
; PROGSET   COMMON INITIALIZATION FOR THE MACRO TRANSLATION FUNCTIONS
;	    AND SETTING THE PROGRAM TO RUN
;
;  INPUTS:
;	4(SP) -> MACRO GENERATED PARAMETER BLOCK
;		0(BLOCK) PROGRAM INDEX OR 0
;		1(BLOCK) FLAGS
;		2(BLOCK) OPTIONAL BYTE STRING LENGTH
;		3(BLOCK) OPTIONAL STRING
;
;  OUTPUTS:
;	R10 -> 2ND BYTE OF PARAMETER BLOCK OR RETURN ADDRESS
;	R8  CONTAINS FLAG BYTE OF PARAMETER BLOCK
;	PROGINDEX CONTAINS PROGRAM TO RUN
;	PROGFLAG  CONTAINS EXPLICITLY REQUESTED FLAG
;
;-
PROGSET::
	MOVB	W^HOLDLOC,W^LOCATION	;RESTORE NORMAL PLACE FOR OPTIONS
	POPR	#^M<R7,R10>		;GET OUR RETURN ADDR INTO R7
					;GET OUR CALLERS RETURN ADDR INTO R10
	MOVB	(R10)+,R8		;GET FLAG BITS BYTE
	BBC	#BTR$V_EXPLICIT,R8,40$	;BRANCH IF DOESN'T NEED TO BE EXPLICIT
	MOVL	4(AP),R0		;GET ADDRESS OF QUALIFIER DESC BLOCK
	BBC	#CLI$V_QUALEXP,CLI$B_QDSTAT(R0),50$ ;BRANCH IF QUAL DEFAULTED
40$:	MOVB	(R10)+,R6		;GET PROGRAM TO RUN INDEX
	BEQL	20$			;BRANCH IF NOT GIVEN
	TSTB	W^PROGINDEX		;IS A SPECIFIC PROGRAM ALREADY SET?
	BEQL	10$			;BRANCH IF NOT
	CMPB	R6,W^PROGINDEX		;DO PROGRAMS AGREE?
	BNEQ	CNFLCT			;BRANCH IF NOT, AN ERROR
10$:	MOVB	R6,W^PROGINDEX		;SET PROGRAM FOR LATER
	BBC	#BTR$V_FORCE,R8,20$	;BRANCH IF NOT AN EXPLICIT SETTING
	BISB	#1,W^PROGFLAG		;SET EXPLICIT INDICATOR
20$:	BBC	#BTR$V_TEMPPOS,R8,30$	;BRANCH IF TEMPORARY LOCATION NOT USED
	MOVB	(R10)+,W^LOCATION		;SET THE TEMPORARY LOCATION
30$:	JMP	(R7)			;RETURN TO CALLER
50$:	RET				;RETURN DIRECTLY TO CLI

CNFLCT:	ERROR	ILLEGOPT,FATAL		;ISSUE THE ERROR, DON'T CONTINUE

	.PAGE
;+
; DEFAULTPROG	THIS ROUTINE SET UP A DEFAULT PROGRAM TO RUN IF NO
;		QUALIFIER HAS ALREADY CAUSED AN EXPLICIT ONE AND
;		CHECKS TO MAKE SURE THE DEFAULT IS NOT IN CONFLICT
;
;  INPUTS:
;	R0=	PROGRAM INDEX
;
;  OUTPUTS:
;	PROGINDEX IS OPTIONALLY SET
;	ERROR TERMINATION OCCURS IN CASE OF CONFLICT
;-
DEFAULTPROG::
	BLBS	W^PROGFLAG,20$		;BRANCH IF PROGRAM IS EXPLICIT
	TSTB	W^PROGINDEX		;IS A PROGRAM ALREADY SET?
	BEQL	10$			;BRANCH IF NOT
	CMPB	R0,W^PROGINDEX		;MAKE SURE THEY MATCH
	BNEQ	CNFLCT			;BRANCH IF NOT, ERROR
10$:	MOVB	R0,W^PROGINDEX		;SET THE PROGRAM NUMBER UP
20$:	RSB				;RETURN
	
	.END
