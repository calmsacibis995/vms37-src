	.TITLE	LINK2/RSX - BACKTRANSLATOR FOR LINK/RSX COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	DECEMBER 1977
;
; BACKTRANSLATOR LINK/RSX11
;
; MODIFIED BY:
;
;	V02-001	GAS0049		Gerry Smith		19-Feb-1982
;		Make sure the indirect command file is located in SYS$SCRATCH.
;		Signal with useful error return, instead of simply the 
;		contents of R0.
;

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY

;
; LOCAL SYMBOLS
;
	LINK$V_OVERLAY	= 0		;FLAG SET INDICATES /OVERLAY
	LINK$M_OVERLAY	= 1
	LINK$V_OPTIONS	= 1		;FLAG SET INDICATES /OPTIONS:FILESPEC
	LINK$M_OPTIONS	= 2

;
; ERROR MESSAGES
;
	$SHR_MSGDEF	BTR, 104, LOCAL, -	;DEFINE BACKTRANS ERRORS
			<<OPENOUT, ERROR>, -	;OPEN ERROR
			<WRITEERR, ERROR>, -	;WRITE ERROR
			<CLOSEOUT, ERROR>>	; CLOSE ERROR
;
; ARGUMENT LIST OFFSET DEFINITIONS
;

;
; LOCAL DATA
;
	IMPURE
;
; HERE LIES THE FAB AND RAB FOR CREATION OF THE INDIRECT FILE FOR TKB
;
	.ALIGN	LONG
AFAB:	$FAB	FNM=<SYS$SCRATCH:ATLNK.CMD;1>,FNS=<11>,FOP=<SUP>,RAT=<CR>
ARAB:	$RAB	FAB=<AFAB>

	PURE
SLASHES:	.ASCII	\//\		;SLASH CHARACTERS USED IN INDIRECT
					;FILE CONSTRUCTION
FNAME:		.ASCII	\@SYS$SCRATCH:ATLNK\	;INDIRECT FILE NAME WE CREATE
FNAMEL = .-FNAME				;LENGTH OF FILE NAME
SCRATCH:	.ASCID	/temporary file (SYS$SCRATCH:ATLNK.CMD) /	;SCRATCH FILE DESCRIPTOR

;	.SBTTL LINK2/RSX
;+
; BACKTRANSLATOR LINK/RSX
;
; CONVERTS DCL COMMAND TO TKB INDIRECT COMMAND FILE
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF THE INDIRECT COMMAND FILE 'SYS$SCRATCH:ATLNK.CMD;1'.
;  THE FILE CONTAINS THE APPROPRIATE COMMANDS TO ACCOMPLISH THE LINK.
;  THE CALLER OPENS THE IMAGE TKB AND INVOKES IT GIVING @SYS$SCRATCH:ATLNK
;  IF NO ERROR OCCURS.
;
;-

	PURE

LINK2::
	BSBW	COMMAND_GEN1		;GENERATE COMMAND LINE OF TKB FILE
	$CREATE	FAB=W^AFAB		;CREATE THE INDIRECT FILE 'ATLNK.CMD'
	BLBC	R0,5$			;BRANCH IF ERROR
	MOVAB	W^ARAB,R9		;GET A POINTER TO THE RAB
	$CONNECT RAB=R9			;SET UP THE RAB
	BLBS	R0,10$			;BRANCH IF NO ERROR
5$:	PUSHL	R0			;HERE IS ERROR OPENING THE FILE
	PUSHAL	SCRATCH			;PUSH ARGUMENTS ON STACK
	PUSHL	#1
	PUSHL	#BTR$_OPENOUT
	CALLS	#4,G^LIB$STOP		;AND SIGNAL AN ERROR
10$:	$RAB_STORE RAB=R9,RSZ=W^RESULT_DESC,RBF=@W^RESULT_DESC+4
	$PUT	RAB=R9			;PUT THE COMMAND LINE INTO THE FILE
	BLBC	R0,40$			;BRANCH IF ERROR
	BBS	#LINK$V_OVERLAY,W^LINKFLAGS,20$ ;BRANCH IF /MP, DON'T WANT /
	$RAB_STORE RAB=R9,RSZ=#1,RBF=SLASHES ;SET UP POINTER TO '/'
	$PUT	RAB=R9			;CREATE A '/' RECORD
	BLBC	R0,40$			;BRANCH IF ERROR
20$:	BBC	#LINK$V_OPTIONS,W^LINKFLAGS,30$ ;BRANCH IF NO OPTION FILE LINE
	$RAB_STORE RAB=R9,RSZ=W^OPTLINSIZ,RBF=W^OPTLINBUF ;SET UP @FILE RECORD
	$PUT	RAB=R9			;OUTPUT THE @FILE LINE
	BLBC	R0,40$			;BRANCH IF ERROR
30$:	$RAB_STORE RAB=R9,RSZ=#2,RBF=SLASHES ;SET UP POINTER TO '//'
	$PUT	RAB=R9			;CREATE THE TERMINATING '//' RECORD
	BLBS	R0,45$			;BRANCH IF NO ERROR
40$:	PUSHL	R0			;HERE IF ERROR WRITING TO SCRATCH FILE
	PUSHAL	SCRATCH			;PUSH ARGUMENTS ON STACK
	PUSHL	#1
	PUSHL	#BTR$_WRITEERR
	CALLS	#4,G^LIB$STOP		;SIGNAL THE ERROR AND EXIT
45$:	$CLOSE	FAB=W^AFAB		;CLOSE THE FILE
	BLBS	R0,50$			;BRANCH IF NO ERROR
	PUSHL	R0			;IF AN ERROR WHILE CLOSING,
	PUSHAL	SCRATCH			;PUT ARGUMENTS ON STACK
	PUSHL	#1
	PUSHL	#BTR$_CLOSEOUT
	CALLS	#4,G^LIB$STOP		;SIGNAL THE ERROR AND EXIT
50$:	MOVAB	W^OPTLIST,W^OPTLISTPTR	;RESET OPTION LIST POINTER TO NULL
	MOVAB	W^ARGSLIST,R9		;POINT TO ARGUMENT AREA
	MOVAB	FNAMEL+1(R9),B^ARGSLISTPTR-ARGSLIST(R9) ;SET THE END ADDRESS OF TEXT
	CLRB	(R9)+			;SET THE FIRST BYTE TO PRIMARY OUTPUT
	MOVC3	#FNAMEL,FNAME,(R9)	;SET THE INDIRECT FILE SPEC
	DEFPROG	TKB,NOSTICK		;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


	.END
