	.TITLE	SORT/RSX - BACKTRANSLATOR FOR SORT COMMAND
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; H.J.	FEBRUARY 1978
;
; BACKTRANSLATOR SORT
;
; MODIFIED BY:
;
;	V001	TMH0001		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;---

;	.SBTTL INITIALIZE DATA DEFINITIONS
;
; MACRO LIBRARY CALLS
;
	$BTDEFS				;DEFINE VALUES TO BE USED LOCALLY
	$CLIDEF				;DEFINE CLI CODES AND VALUES

;
; LOCAL DATA
;
	IMPURE

INPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		INPUT_DESC,-		;FOR FIRST INPUT PARAMETER
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

INPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT1,-	;FOR PRIMARY INPUT
		RQFLGS=CLI$V_PARMREQ,-	;PRIMARY INPUT IS REQUIRED
		QUALST=PARM_QUALS	;QUALIFIERS ASSOCIATED WITH FILE

OUTPUT_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		OUTPUT_DESC,-		;FOR PRIMARY OUTPUT
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

OUTPUT_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_INPUT2,-	;FOR PRIMARY OUTPUT
		QUALST=PARM_QUALS	;QUALIFIERS ASSOCIATED WITH FILE

PARM_QUALS:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_BLOC,-;/BLOCKSIZE:N
		TRUACT=SORT_BLOCKSIZE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_FORM,-;/FORMAT:(TYPE=X,RECORD_SIZE=N)
		TRUACT=SORT_FORMAT	;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

QUAL_ARGLIST:
	$ARGLST	3,-			;CREATE AN ARGUMENT LIST
		QUAL_DESC,-		;FOR COMMAND QUALIFIERS
		CLIWORKAREA,-		;WORK AREA FOR CLI
		BITMAP			;BIT ARRAY

QUAL_DESC:
	$CLIREQDESC -			;CREATE A CLI REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	;FOR COMMAND QUALIFIERS
		QUALST=QUAL_LIST	;ADDRESS OF THE QUALIFIERS


QUAL_LIST:
	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_ALLO,-;/ALLOCATION:N
		TRUACT=SORT_ALLOCATION	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_BUCK,-;/BUCKET_SIZE:N
		TRUACT=SORT_BUCKET	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_CONT,-;/CONTIGUOUS
		TRUACT=SORT_CONTIG	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_DEVI,-;/DEVICE:DEV
		TRUACT=SORT_DEVICE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_INDE,-;/INDEX:N
		TRUACT=SORT_INDEX	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_KEY ,-;/KEY:(DATA=A,ORDER=B,START=M,LEN=N)
		TRUACT=SORT_KEY		;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_PROC,-;/PROC:X
		TRUACT=SORT_PROCESS	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_RELA,-;/RELATIVE
		TRUACT=SORT_RELATIVE	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_RSX1	;/RSX11

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_SEQU,-;/SEQUENTIAL
		TRUACT=SORT_SEQUENTIAL	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_SPEC,-;/SPECIFICATION:FILESPEC
		TRUACT=SORT_SPEC	;CALL QUALIFIER HANDLER

	$CLIQUALDESC -			;DEFINE A QUALIFIER
		QDCODE=CLI$K_SORT_WORK,-;/WORK_FILES:N
		TRUACT=SORT_WORKFILES	;CALL QUALIFIER HANDLER


	$CLIQUALDESC	END_LIST	;TERMINATE THE QUALIFIER LIST

;	.SBTTL SORT/RSX
;+
; BACKTRANSLATOR SORT
;
; CONVERTS DCL COMMAND TO COMPATIBILITY MODE IMAGE COMMAND
;
;
; INPUTS:
;  THE INPUTS ARE RETURNED FROM THE DCL RESULT PARSER AS RESPONSES
;  TO THE VARIOUS REQUEST DESCRIPTORS THAT ARE GIVEN TO IT.
;
;
; OUTPUTS:
;  THE OUTPUT CONSISTS OF TWO STRINGS OR AN ERROR MESSAGE AND ABORT.
;  THE CALLER OPENS THE IMAGE AND INVOKES THE COMPATIBILITY EMULATOR
;  IF NO ERROR OCCURS.
;
;  1- FILENAME STRING OF COMPATIBILITY MODE IMAGE TO BE ACTIVATED.
;
;  2- COMMAND LINE TO BE GIVEN TO THE IMAGE.
;
;-

	PURE

SORT::
	CALLG	W^QUAL_ARGLIST,-	;PROCESS COMMAND OPTIONS -
		@CLI$A_UTILSERV(AP)	;DEFAULT OPTIONS TO OUTPUT FILESPEC
	CALLG	W^OUTPUT_ARGLIST,-	;PROCESS PRIMARY OUTPUT
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+OUTPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY OUTPUT
	MOVB	#PRIM_INPUT,W^HOLDLOC	;CAUSE OPTIONS TO GO ON INPUT
	MOVB	#PRIM_INPUT,W^PARAMLOC	;SET UP TO INPUT
	CALLG	W^INPUT_ARGLIST,-	;PROCESS THE PRIMARY INPUT
		@CLI$A_UTILSERV(AP)
	MOVQ	W^CLI$Q_RQDESC+INPUT_DESC,R9 ;PICK UP STRING DESCRIPTOR
	BSBW	INSERTARG		;SAVE IT AS PRIMARY INPUT
	DEFPROG	SRT			;RETURN DEFAULT PROGRAM TO RUN
	RSB				;RETURN TO GENERATE COMMAND TEXT


SORT_ALLOCATION:
	$GETDECNUM	</AL>		;ACCEPT ALLOCATION FOR OUTPUT FILE

SORT_BLOCKSIZE:
	$GETDECNUM	</BL>		;ACCEPT BLOCK SIZE ON INPUT OR OUTPUT

SORT_BUCKET:
	$GETDECNUM	</BU>		;ACCEPT BUCKET SIZE OPTION

SORT_CONTIG:
	$SETSTRING	</CO>		;ACCEPT /CONTIGUOUS FOR OUTPUT FILE

SORT_DEVICE:
	$GETSTRING	</DE>,POS=<PRIM_INPUT> ;ACCEPT WORKFILE DEVICE NAME

SORT_FORMAT:
	$GETSTRING	</FO>,FLAGS=<BTR$M_LIST> ;ACCEPT RECORD FORMAT, SIZE

SORT_INDEX:
	$GETDECNUM	</IN>,POS=<PRIM_INPUT> ;ACCEPT NUMBER OF INDEX KEYS

SORT_KEY:
	$GETSTRING	</KE>,POS=<PRIM_INPUT>,FLAGS=<BTR$M_LIST> ;ACCEPT SORT
					;KEY INFORMATION

SORT_PROCESS:
	$SETSTRING	</PR>,FLAGS=<BTR$M_RETURN> ;SET UP /PROCESS OPTION
10$:	$GETKEYWORD	LIST=<-		;ACCEPT /PROCESS:TYPE OPTION
				RECORD,-
				TAG,-
				ADDRESS,-
				INDEX>
	$REPLACE	<:R,:T,:A,:I>,10$

SORT_RELATIVE:
	$SETSTRING	</RE>		;ACCEPT RELATIVE OUTPUT FILE OPTION

SORT_SEQUENTIAL:
	$SETSTRING	</SE>		;ACCEPT SEQUENTIAL OUTPUT FILE OPTION

SORT_SPEC:
	$INLINE				;PROCESS LOCALLY TO MAKE 2ND INPUT
	BSBW	GETSUBVAL		;PICK UP FILESPEC (CLI HAS 'VALREQ')
	MOVQ	W^CLI$Q_RQDESC+VALUE_DESC,R9 ;GET DESCRIPTOR FOR FILESPEC
	MOVB	#PRIM_INPUT-1,W^PARAMLOC;FLAG AS SECOND INPUT FILE
	BSBW	INSERTARG		;PUT IT INTO THE INPUT LIST
	CLRB	W^PARAMLOC		;RESET BACK TO PRIMARY OUTPUT POSITION
	RET				;RETURN TO CLI

SORT_WORKFILES:
	$GETDECNUM	</FI>		;SET UP /WORKFILES:N


	.END
