%TITLE	'VAX-11 CONVERT'
%SBTTL	'Data Declarations'
MODULE	CONV$DATA	( IDENT='V03-000'
			) =

BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! Facility:	VAX-11 CONVERT
!
! Abstract:	CONVERT global data declarations
!
! Environment:
!
!		VAX/VMS Operating System
!
!--

!
! Author:	Keith B Thompson	Creation date:	June-1980
!
!
! Modified by:
!
!****


PSECT
	OWN	= _CONV$OWN	(PIC),
	GLOBAL	= _CONV$GLOBAL	(PIC),
	PLIT	= _CONV$PLIT	(SHARE,PIC),
	CODE	= _CONV$CODE	(SHARE,PIC);

LIBRARY	'SYS$LIBRARY:LIB.L32';
REQUIRE	'SRC$:CONVERT';

GLOBAL
	CONV$AB_FLAGS	: BLOCK [ 4,BYTE ],	! Flag block

	! General Global Variables
	!
	CONV$GW_OUT_MRS		: WORD,			! Output Max. Rec. Size
	CONV$GW_UDF_MRS		: WORD,			! BIO (Undefined) Max Rec Size
	CONV$GW_IN_REC_SIZ	: SIGNED WORD,		! Input Rec. Size + VFC Offset
	CONV$GW_OUT_REC_SIZ	: SIGNED WORD,		! Output Rec. Size

	CONV$GW_MAX_REC_SIZ	: WORD,			! Maximun record buffer size
	CONV$GB_CURRENT_FILE	: BYTE INITIAL(0),	! Current file being processed

	CONV$GL_REC_BUF_PTR	: LONG,			! Bottom of Record Buffer
	CONV$GL_VFC_BUF_PTR	: LONG,			! Bottom of VFC Buffer

	CONV$GL_EOF_VBN		: LONG,			! End of File VBN
	CONV$AR_PROLOGUE	: REF BLOCK [ ,BYTE ],	! Output file prologue (FAST & SORT)
	CONV$GW_PROLOGUE_SIZ	: WORD,			! Size in bytes of prologue
	CONV$AR_KEY_DESC_BUF	: REF VECTOR [ ,WORD ],	! Pointer to the key desc. buffer
	CONV$GL_KEY_DESC_VBN	: LONG,			! VBN of the current key desc.
	CONV$AR_AREA_BLOCK	: REF BLOCKVECTOR [ ,AREA$C_BLN,BYTE ],	! Prologue area
								!  desc. block
	CONV$GW_AREA_SIZE	: WORD;

OWN
	PROLOGUE_VERN	: VECTOR [ 4,BYTE ]	! Prologue Version Flag Block
				INITIAL(0);
GLOBAL BIND
	CONV$GB_PROL_V1		= PROLOGUE_VERN [ 0 ] : BYTE,	! Prologue Version 1 Flag
	CONV$GB_PROL_V2		= PROLOGUE_VERN [ 1 ] : BYTE,	! Prologue Version 2 Flag
	CONV$GB_PROL_V3		= PROLOGUE_VERN [ 2 ] : BYTE;	! Prologue Version 3 Flag

GLOBAL
	CONV$AL_IN_FILE_NAM	: VECTOR [ 10,LONG ],
	CONV$AR_OUT_FILE_NAM	: REF DESC_BLK,
	CONV$AR_FDL_FILE_NAM	: REF DESC_BLK,

	! FAB's and RAB's
	!
	! Input and Output files
	!
	CONV$AB_IN_XABFHC	: $XABFHC( NXT=0 ),	! Input File Header Char. Xab

	CONV$AB_IN_XABSUM	: $XABSUM( NXT=CONV$AB_IN_XABFHC ),! Input File Summary Xab

	CONV$AB_IN_NAM		: $NAM_DECL,		! Input Name Block

	CONV$AB_IN_FAB		: $FAB_DECL,		! Input File FAB

	CONV$AB_IN_RAB		: $RAB_DECL,		! Input File RAB

	CONV$AB_OUT_XABSUM	: $XABSUM( NXT=0 ),	! Output File Summary Xab

	CONV$AB_OUT_NAM		: $NAM_DECL,		! Output Name Block

	CONV$AB_OUT_FAB		: $FAB_DECL,		! Output File FAB

	CONV$AB_OUT_RAB		: $RAB_DECL,		! Output File RAB

	CONV$AB_EXC_RAB		: $RAB_DECL;		! Exception File RAB


! 	Shared messages
!
	$SHR_MSGDEF	( CONV,178,GLOBAL,
			( CREATEDSTM,INFO ),
			( INSVIRMEM,ERROR ),
			( OPENIN,ERROR ),
			( OPENOUT,ERROR ),
			( READERR,ERROR ),
			( WRITEERR,ERROR ),
			( CLOSEIN,ERROR ),
			( CLOSEOUT,ERROR ),
			( BADLOGIC,ERROR ),
			( NOWILD,ERROR ),
			( VALERR,ERROR ),
			( CONFQUAL,ERROR ) );

END	ELUDOM
