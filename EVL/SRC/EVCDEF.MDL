;	.TITLE	EVCDEF		Network Event Logger Definitions
;	.IDENT	'V03-000'


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	DECnet-VAX Network Management Components
;		for Event Logging
;
; ABSTRACT:
;
;	Common Definitions for Network Management Event Logging
;	These definitions are used by other components of the
;	network.
;
; ENVIRONMENT:	VAX/VMS Operating System
;
; AUTHOR:	Darrell Duffy, Tim Halvorsen, 13-June-1980
;
; MODIFIED BY:
;
;	V004	TMH0004		Tim Halvorsen		11-Nov-1981
;		Add Duplicate Phase II transport initialization event.
;
;	V003	TMH0003		Tim Halvorsen		05-Aug-1981
;		Add DAP CRC VMS-specific event
;
;	V002	TMH0002		Tim Halvorsen		07-Jul-1981
;		Add new 2.2 events.
;
;	V001	TMH0001		Tim Halvorsen		19-Dec-1980
;		Make line and node ID codes conform to the DNA entity
;		numbering scheme.
;--


;
;	Symbols for event codes
;

	$STRUCT	EVC

;
;	Symbols for event classes
;

	C <

	CLS_NMA, 0			; Network management
	CLS_APL, 1			; Application layer
	CLS_SCL, 2			; Session control layer
	CLS_NSL, 3			; Network services layer
	CLS_TPL, 4			; Transport layer
	CLS_DLL, 5			; Data link layer
	CLS_PLL, 6			; Physical link layer
	CLS_VMS, 128			; VMS Specific

	>

	C <				; Source codes

	SRC_NON, 255			; No source id
	SRC_NOD, 0			; Node source
	SRC_LIN, 1			; Line source
	SRC_CIR, 3			; Circuit source

	WLDCLS_KNO, 3			; Value for known events
	WLDCLS_ALL, 2			; Value of all events in class

	>

	V <M				; Mask values for sink flags

	SNKFLG_CON, 1			; Console
	SNKFLG_FIL, 1			; File
	SNKFLG_MON, 1			; Monitor

	>



;
;	Specific event codes, note that values contain the event class
;	as well as the code.
;

	C <

	NMA_LOS, 0@6+0			; event records lost
	NMA_ANC, 0@6+1			; automatic node counters
	NMA_ALC, 0@6+2			; automatic line counters
	NMA_ALS, 0@6+3			; automatic line service
	NMA_LCZ, 0@6+4			; circuit counters zeroed
	NMA_NCZ, 0@6+5			; node counters zeroed
	NMA_PSL, 0@6+6			; passive loopback
	NMA_ABS, 0@6+7			; aborted service request
	NMA_CTR, 0@6+8			; automatic counters
	NMA_ZER, 0@6+9			; counters zeroed

	SCL_LNS, 2@6+0			; local node state change
	SCL_ACR, 2@6+1			; access control reject

	NSL_IMS, 3@6+0			; invalid message
	NSL_IFC, 3@6+1			; invalid flow control
	NSL_DBR, 3@6+2			; data base reused

	TPL_APL, 4@6+0			; aged packet loss
	TPL_UPL, 4@6+1			; node unreachable packet loss
	TPL_RPL, 4@6+2			; node out-of-range packet loss
	TPL_OPL, 4@6+3			; oversized packet loss
	TPL_PFM, 4@6+4			; packet format error
	TPL_PRU, 4@6+5			; partial routing update loss
	TPL_VFR, 4@6+6			; verification reject
	TPL_LDF, 4@6+7			; line down, line fault
	TPL_LDS, 4@6+8			; line down, software fault
	TPL_LDO, 4@6+9			; line down, operator fault
	TPL_LUP, 4@6+10			; line up
	TPL_ILF, 4@6+11			; initialization failure, line fault
	TPL_ISF, 4@6+12			; initialization failure, software fault
	TPL_IOF, 4@6+13			; initialization failure, operator fault
	TPL_RCH, 4@6+14			; node reachability change

	DLL_LSC, 5@6+0			; locally initiated state change
	DLL_RSC, 5@6+1			; remotely initiated state change
	DLL_PRS, 5@6+2			; protocol restart received in maintenance mode
	DLL_SND, 5@6+3			; send error threshold
	DLL_RET, 5@6+4			; receive error threshold
	DLL_SLC, 5@6+5			; select error threshold
	DLL_BHF, 5@6+6			; block header format error
	DLL_SAD, 5@6+7			; selection address error
	DLL_STT, 5@6+8			; streaming tributary
	DLL_LBS, 5@6+9			; local buffer too small
	DLL_RST, 5@6+10			; restart (x.25 protocol)
	DLL_STC, 5@6+11			; state change (x.25 protocol)
	DLL_RME, 5@6+12			; retransmit maximum exceeded (x.25)

	PLL_DSR, 6@6+0			; data set ready transition
	PLL_RIN, 6@6+1			; ring indicator transition
	PLL_CAR, 6@6+2			; unexpected carrier transition
	PLL_MEM, 6@6+3			; memory access error
	PLL_COM, 6@6+4			; communications interface error
	PLL_PFM, 6@6+5			; performance error

	VMS_DBC, 128@6+0		; logging data base change
	VMS_DPC, 128@6+1		; DAP CRC error
	VMS_DP2, 128@6+2		; Duplicate Phase II initialization

	>


;
;	Event Parameter Codes
;

	C <

	NMA_PSER, 0			; service
	NMA_PSER_LOA, 0			; load
	NMA_PSER_DUM, 1			; dump
	NMA_PSTS, 1			; status
	NMA_POPR, 2			; operation
	NMA_POPR_INI, 0			; initiated
	NMA_POPR_TER, 1			; terminated
	NMA_PRSN, 3			; reason
	NMA_PRSN_TMO, 0			; receive timeout
	NMA_PRSN_ERR, 1			; receive error
	NMA_PRSN_LSC, 2			; line state change by higher level
	NMA_PRSN_UNR, 3			; unrecognized request
	NMA_PRSN_LOE, 4			; line open error

	SCL_PRSN, 0			; reason
	SCL_PRSN_OPC, 0			; operator command
	SCL_PRNS_NOR, 1			; normal operation
	SCL_POLD, 1			; old state
					; use node states for code
	SCL_PNEW, 2			; new state
					; use node states for code
	SCL_PNOD, 3			; source node
	SCL_PSPC, 4			; source process
	SCL_PDPC, 5			; destination process
	SCL_PUSR, 6			; user identification
	SCL_PPSW, 7			; password
	SCL_PACC, 8			; account

	NSL_PMSG, 0			; message
	NSL_PFLO, 1			; current flow control

	TPL_PPKH, 0			; packet header
	TPL_PPKB, 1			; packet beginning
	TPL_PHIA, 2			; highest address
	TPL_PNOD, 3			; node
	TPL_PEXP, 4			; expected node
	TPL_PRSN, 5			; reason
	TPL_PRSN_SYNC, 0			; line synchronization lost
	TPL_PRSN_DAER, 1			; data errors
	TPL_PRSN_UXPK, 2			; unexpected packet type
	TPL_PRSN_RUCS, 3			; routing update checksum error
	TPL_PRSN_ADJC, 4			; adjacent node address change
	TPL_PRSN_VTMO, 5			; verification receive timeout
	TPL_PRSN_VRSK, 6			; version skew
	TPL_PRSN_ADJR, 7			; adjacent node address out of range
	TPL_PRSN_ADJB, 8			; adjacent node block size too small
	TPL_PRSN_SEED, 9			; invalid verification seed value
	TPL_PRSN_LTMO, 10			; adjacent node listener receive timeout
	TPL_PRSN_LINV, 11			; adjacent node listener received invalid data
	TPL_PVRS, 6			; received version
	TPL_PSTS, 7			; status
	TPL_PSTS_RCH, 0			; reachable
	TPL_PSTS_URC, 1			; unreachable

	DLL_POLD, 0			; old state
	DLL_POLD_HALT, 0			; halted
	DLL_POLD_ISTR, 1			; istrt
	DLL_POLD_ASTR, 2			; astrt
	DLL_POLD_RUNG, 3			; running
	DLL_POLD_MAIN, 4			; maintenance
	DLL_PNEW, 1			; new state
	DLL_PHDR, 2			; header
	DLL_PSLT, 3			; selected tributary
	DLL_PPVT, 4			; previous tributary
	DLL_PTST, 5			; tributary status
	DLL_PTST_STRM, 0			; streaming
	DLL_PTST_STMO, 1			; continued send after timeout
	DLL_PTST_SDES, 2			; continued send after deselect
	DLL_PTST_ESTR, 3			; ended streaming
	DLL_PRTB, 6			; received tributary
	DLL_PBKL, 7			; block length
	DLL_PBFL, 8			; buffer length
	DLL_PDTE, 9			; DTE (ascic)
	DLL_PRSN, 10			; Reason
	DLL_PRSN_OPER, 0			; operator command
	DLL_PRSN_NORM, 1			; normal operation
	DLL_POST, 11			; Old X.25 state (only event 5.11)
	DLL_POST_ON, 0				; on
	DLL_POST_OFF, 1				; off
	DLL_POST_SHUT, 2			; shut
	DLL_PNST, 12			; New X.25 state (only event 5.11)
	DLL_PTYP, 13			; Parameter type (DNA numbering scheme)
	DLL_PCAU, 14			; Cause (byte)
	DLL_PDIA, 15			; Diagnostic (byte)

	PLL_PDVR, 0			; device register
	PLL_PNEW, 1			; new state
	PLL_PNEW_OFF, 0			; off
	PLL_PNEW_ON, 1			; on

	VMS_PNOD, 0			; Node (NICE format)
	>



	E				; End of EVC structure



;
;	Raw event structure
;

$STRUCT RAW

F	BYTES, W		; Number of bytes including this count
F	SYSTIM, T, 8		; 64 bit system time of event
F	EVTCODE, W		; DNA event code
V	<M
	EVTTYP, 6		; Type number of event
	EVTCLS, 9		; Class number of event
	,1
	>
F	SRCTYP, B		; DNA source type code
F	SRCID, T, 17		; Source code
F	DATA, T, 1		; Event data starts here
L	SIZE
E

;
;	Some events contain counters.  These counters are formatted as
;	counter blocks in fixed NETACP format and are placed in the data
;	portion of the event in the following way.
;
;	BYTE (count of parameter data in bytes) May be zero
;	BYTES (parameter data if it appears)
;	WORD (count of bytes in counter block)
;	BYTES (counter block)
;
;	This format is used only for those events returning counters.
;	No additional data is present with the parameter data for other
;	events.
;

;
;	End of EVCDEF.MDL
;
