;	.TITLE	EVLDEF		Network Event Logger Definitions
;	.IDENT	'V03-000'


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	DECnet-VAX Network Management Components
;		for Event Logging
;
; ABSTRACT:
;
;	Common Definitions for Network Management Event Logging
;	These definitions are private to the EVL component.
;
; ENVIRONMENT:	VAX/VMS Operating System
;
; AUTHOR:	Darrell Duffy, Tim Halvorsen, 13-June-1980
;
; MODIFIED BY:
;
;	V003	TMH0003		Tim Halvorsen	25-Jun-1981
;		Add two event flag symbols.
;
;	V002	TMH0002		Tim Halvorsen	20-Nov-1980
;		Change definition of second byte of source data
;		structure in the filter database from a sink mask
;		to a sink number (which is what NML is using).
;
;	V001	TMH0001		Tim Halvorsen	17-Nov-1980
;		Add descriptor of previous line output for
;		console formatting routines.
;--

;
;	General definitions
;

	$STRUCT	EVL

	C	<
		SYNCH_EFN,1		; Event flag used for synchronous I/O
		ASYNCH_EFN,2		; Event flag used for asynchronous I/O

		MAXEVTCNT,200		; Maximum number of events in a queue
					; for the transmitter
		>

	E

;
;	Processed event record structure
;

	$STRUCT	EVT

	F	FUNCTION,B		; Function code (= 1)
	F	FLAGS,B			; Indicates which sinks receive record
	F	CODE,W			; Event code
	V	<M
		TYPE,6			; Event type within class (see EVCDEF)
		CLASS,9			; Event class (see EVCDEF)
		,1
		>
	F	JULIAN,W		; Time:	Julian half-days since 1-Jan-77
	F	SECONDS,W		;	Second within half-day
	F	MSECS,W			;	Milliseconds within second
	F	SRCADR,W		; Source node address
	F	SRCNAMLEN,B		; Source node name length
	F	SRCNAM,T,1		; Source node name string (max 6 bytes)
					; Event entity follows, type and ID
					; Event specific data follows
	E


;
;	Data block descriptor
;

	$STRUCT DBK

	F	FL		; Forward link in queue
	F	BL		; Backward link in queue
	F	SIZE,W		; Size of structure
	L	SIZE
	E

;
;	Event Queue block
;

	$STRUCT EVQ

	F	FL		; Forward link
	F	BL		; Backward link
	F	SIZE,W		; Size of structure
	F	EVTSIZE,W	; Bytes in the event
	F	EVENT,T,0	; Start of event data
	L	SIZE
	E

;
;	Structures used in the event transmitter
;

;
;	AST Parameter Control Block
;

$STRUCT ASP
F	FL, L			; Forward link
F	BL, L			; Backward link
F	SIZE, W			; Size of structure
F	NETCHAN, W		; Channel to net device
F	IOSB, W			; IO status block
F	IOSB1, W		; Remainder of iosb
F	IOSB2, L
F	ROUTINE, L		; address of routine to perform
F	DATA, T, 0		; Data area address
L	SIZE
E

;
;	Sink control block structure, provides the context for
;	the outgoing logical links from the event transmitter.
;

$STRUCT	SNK

F	FL, L			; Forward link
F	BL, L			; Backward link
F	SIZE, W			; Size of structure
F	NETCHAN, W		; Channel to net device
F	IOSB, W			; IO status block
F	IOSB1, W		; Remainder of iosb
F	IOSB2, L
F	ROUTINE, L		; address of routine to perform
F	SNKADR, L		; Address of sink node
F	SRCFL, L		; Head of source list
F	SRCBL, L
F	EVTFL, L		; Head of event queue
F	EVTBL, L
F	EVTCNT, W		; Number of events on the queue
F	STATUS, B		; Status of logical link to node
V	<M
	STS_OPN, 1		; Link is open
	STS_BSY, 1		; Some action in progress
	STS_BKD, 1		; Back door in use
	STS_DEL, 1		; Delete on close
	STS_CLS, 1		; Close and delete
	STS_TMR, 1		; Close on non-use timer outstanding
	>
F	SNKLOS, B		; Sink mask for lost events
F	SNKLEN, L		; Descriptor of ncb
F	SNKNCB, A
F	SNKNCB, T, 16		; NCB of link
L	SIZE
E


;
;	Source descriptor block
;

$STRUCT SRC
F	FL, L			; Forward link
F	BL, L			; Backward link
F	SIZE, W			; Size of structure
F	SNKTYPE, B		; Sink type
F	SRCTYP, B		; Source type code
F	SRCID, T, 18		; Source name
F	FILTERS, W		; Number of filters
F	FILTERS, T, 0		; Start of filters
L	SIZE
E

;
;	Filter descriptor
;

$STRUCT FLT
F	CLASS, W		; Class of event
V	<M
	CLASS,	9		; Class code
	,	5
	WLDCOD, 2		; Wild card code
	>
F	, W			; Filler
F	TYPESLOG, Q		; Type mask to log
F	TYPESFIL, Q		; Type mask to filter
L	SIZE
E


;
;	Define structures used by the receiver
;

;
;	Define sink type descriptor block
;

	$STRUCT	SINK

	F	LINK		; Queue links
	F	BLINK
	F	TYPE,B		; Type of sink
	C	<
		ACTIVE,254	; Active sink types
		KNOWN,255	; Known sink types
		CONSOLE,1	; Console sink
		FILE,2		; File sink
		MONITOR,3	; Monitor process sink
		>
	F	STATE,B
	C	<
		ON		; Sink is on
		OFF		; Sink is off, ignore all events
		HOLD		; Sink is holding all events until turned on
		>
	F	EVENTS,W	; Number of events on queue
	F	EVTFL		; Queue head of event data blocks
	F	EVTBL
	F	FLAGS,B		; Flags 
	V	<M
		DELETE		; Indicates sink should be deleted when the
				; events queued for this sink are output
		ERROR		; "error" state; all events are ignored to
				; this sink until a data base change
		>
	F	,B,1
	F	MAXBUFSIZ,B	; Maximum size of buffer (OPCOM monitor only)
	F	BUFLEN,B	; Bytes currently in buffer (OPCOM monitor only)
	F	BUFFER		; Address of buffer (OPCOM monitor only)
	F	RAB		; Address of RAB/FAB storage block (file only)
	S	CHANNEL,0,W	; Channel for I/O (monitor only)
	F	CLOSERTN	; Address of routine to perform close
				;    nonzero if sink has been initialized
	F	IOSB,W		; I/O status block specific to this sink
	F	IOSB1,W
	F	IOSB2,L
	F	NAMELEN,B	; Length of sink name string
	F	NAME,T,255	; Sink name string
	L	LENGTH		; Length of sink descriptor block
	E

;
;	Define incoming event channel context block
;

	$STRUCT	IEC

	F	LINK		; Forward link
	F	BLINK		; Backward link
	F	SIZE,W		; Size of entire structure
	F	CHAN,W		; Network incoming channel number
	F	IOSB,W		; I/O status block
	F	IOSB1,W
	F	IOSB2,L
	F	NCBLEN,B	; Length of NCB
	F	NCB,T,64	; NCB for incoming link
	C	MAXNCBLEN,64
	F	EVENT,T,250	; Buffer for event record
	C	MAXEVTLEN,250
	L	LENGTH		; Fixed length of structure
	E


;
;	Define the bits for controlling messages to the batch log
;	of the event processor.
;

$STRUCT ELG

V <M

DBUPDAT,	1		; Data base updates for transmit or receive
SNKOPN,		1		; Link to sink node opened
RCVCCF,		1		; Link confirmed by receiver
MONOPN,		1		; Link opened to event monitor
RAWEVT,		1		; Text of raw event
QUEEVT,		1		; Text of event queued to sink
RCVEVT,		1		; Text of event received by receiver

>

E	

;
;	Counter descriptor list entry
;

$STRUCT CTB

F	PCODE, W		; Parameter code for counter
F	OFFSET, W		; Offset in counter block
F	WIDTH, B		; Width of counter in bits
F	ADDQ, B			; True for accumulate counter
F	BITMAP, W		; Bitmap mask for this counter

L	SIZE			; Total size of structure

E

;
;	Line id conversion table entry
;

$STRUCT VDL			; VMS to DNA Line table

F	VMS, A			; Address of vms name counted string
F	DNA, A			; Address of dna name counted string
F	TYP, B			; Type mask for
V	<M
	PNT			; point to point lines
	MUX			; multiplexed lines
	MPT			; multipoint lines
	>
F	COEF, B			; Unit/tributary coefficient
				; Unit = vms unit / coef
				; trib = vms unit mod coef
L	SIZE			; size of structure
E


;
;	IOSB fields
;

$STRUCT IOSB

F	STS, W			; Primary status
F	CNT, W			; Normally size of transfer
F	STS2, W			; Secondary status
F	STS3, W			; Tertiary status
L	SIZE

E

;
;	End of EVLDEF.MDL
;
