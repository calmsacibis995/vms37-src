	.TITLE	MPDAT - MULTI-PROCESSING DATA BASE
	.IDENT	'V03-003'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
;
; Facility:  Executive , Multi-processing data base
;
; Abstract: Data base of multi-processing information
;
; Environment: MODE=Kernel 
;
; Author:  Kathleen D. Morse, Creation date:  08-Jul-1981
;
; Modified by:
;
;	V03-003	KDM0090		Kathleen D. Morse	5-Apr-1982
;		Implement code for STOP/CPU that halts the secondary
;		and unloads the multi-processing code.
;
;	V03-002	KDM0082		Kathleen D. Morse	31-Mar-1982
;		Add quadword to hold time/date that multi-processing
;		code is loaded, so that MONITOR can recognize if a
;		STOP/CPU has been issued since last sampling.
;
;	V03-001	KDM0079		Kathleen D. Morse	31-Mar-1982
;		Add MPS$GL_NULLCPU to accumulate null time separate
;		from interrupt time.
;
;	V02-003	KDM0036		Kathleen D. Morse	19-Jan-1982
;		Move MPS$GL_ISP, MPS$GL_STRTVA, and MPS$GL_SCBB into same
;		physical page as the secondary's initialization code that
;		is executed without memory management enabled.
;
;	V02-002	KDM0020		Kathleen D. Morse	20-Jul-1981
;		Add performance measurement array for time secondary spends
;		in different modes.
;
; 01	- 
;--
	.PAGE
;
; Macro Library Calls
;
 
	$CADEF				; Define conditional assembly parameters
	$EMBDEF				; Define error message buffer header
	$MPSDEF				; Define secondary processsor states

;
; Equated Symbols
;

;
; Local Data
;

	.PSECT	$$$$MPDATA,LONG,WRT


	.ALIGN	LONG
;
; Major pointers - Initialized by MPLOAD
;
MPS$AL_MPMBASE::			; Base VA of multiport memory registers
	.LONG	0			;
	.LONG	0			;
	.LONG	0			;
	.LONG	0			;
MPS$GL_CURPCB::				; Secondary processor current PCB
	.LONG	SCH$GL_NULLPCB		;
MPS$GL_STATE::				; State of secondary processor
	.LONG	MPS$K_INITSTATE		; Initially set to INIT state
					;
					; 1 => Idle
					; 2 => Drop; CURPCB correct
					;            (SVPCTX done)
					; 3 => Busy; CURPCB correct
					;            (LDPCTX not yet done)
					; 4 => Execute; CURPCB correct
					;            (LDPCTX done)
					; 5 => Init
					; 6 => Stop
					;
MPS$GL_PRIMSKC::			; Primary processor interrupt clear
	.LONG	0			;
MPS$GL_PRIMSKT::			; Primary processor interrupt trigger
	.LONG	0			;
MPS$GL_SCNDMSKC::			; Secondary processor interrupt clear
	.LONG	0			;
MPS$GL_SCNDMSKT::			; Secondary processor interrupt trigger
	.LONG	0			;
MPS$GL_INVALID::			; Invalidate address
	.LONG	0			;
MPS$GL_MPMIIR::				; MA780 interrupt request register adr
	.LONG	0			;
MPS$GL_BUGCHECK::			; Indicator for bugcheck status
	.LONG	0			;
MPS$GL_STOPFLAG::			; Indicator for STOP/CPU requrests
	.LONG	0			;
MPS$GL_INTERLOCK::
	.LONG	0			; Interlock used to flush cache
MPS$GL_PFAILTIM::			; Indicator if powerfail in progress
	.LONG	0			;	0 => none in progress
					;   non-0 => time of day register
					;	     when powerfail occurred
MPS$GL_SECREQFLG::			; Indicator for secondary requests
	.LONG	0			;  MPS$V_SECBUGCHK - bugcheck request
					;  MPS$V_SECERRLOG - error log request
MPS$GL_ERLBUFIND::			; Secondary error log buffer indicator
	.LONG	0			;  MPS$V_ERLBUFBSY - set if buffer busy

MPS$GL_ERLSEQNUM::			; Secondary error log sequence number
	.LONG	0			; incremented for each error log attempt

MPS$GL_SAVEDAP::			; Saved value of secondary AP
	.LONG	0			;  used at boot time

MPS$GQ_MPSTRTIM::			; 64-bit time and date when multi-
	.LONG	0			;  code was loaded.  Used by MONITOR
	.LONG	0			;  to recognize STOP/CPU occurred.

;
; Secondary Timer Performance Statistics
;

	.IF NE	CA$_MEASURE		; Check for measurement enabled

	.ALIGN	LONG
MPS$AL_CPUTIME::			; Performance measurement array for
					; time spent in different modes:
	.LONG	0			;    kernel
	.LONG	0			;    executive
	.LONG	0			;    supervisor
	.LONG	0			;    user
	.LONG	0			;    on interrupt stack
	.LONG	0			;    compatibility mode

MPS$GL_NULLCPU::			; Null process cpu time
	.LONG	0			;

	.ENDC


;
; The following data does not fit into the header page
; of the multi-processing code, and therefore is positioned
; after the secondary's SCB.
;
	.PSECT	$$$ERLBUF,QUAD,WRT
	.LONG	EMB$K_LENGTH		; Error log message buffer header
MPS$AL_ERLBUFADR::			; Secondary error log buffer
	.BLKB	MPS$K_ERLBUFSIZ-EMB$K_LENGTH ; (Holds 1 message of maximum size)


	.PAGE
	.SBTTL	Interrupt Stack for Secondary processor
;
; Interrupt stack reservation for secondary processor
;
	.PSECT	$$$INTSTK,LONG,WRT
	.ALIGN	LONG
	.BLKB	512*2			; 2 Pages
MPS$AL_INTSTK::				; Empty stack pointer
	.END
