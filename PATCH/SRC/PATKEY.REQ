!++
!	PATKEY.BEG - Defines keywords for all
!		     PATCH syntax.
!	Version 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! PATCH Version X01.00 - K. D. Morse, 17-Oct-77
!		corresponds to FCSMAR.PAT, FCSFOR.PAT, BLITST.PAT.
!--

!++
! The keyword_table is made of four-tuple entries,
! the first of which is the keyword token equivalent, the
! second the number of characters in the minimal abbreviation,
! the third the number of characters in the ASCII string that
! is the keyword, and the fourth, the keyword itself represented
! as an ASCII string.
! 
! key_name formats table entries for the keyword_table.
! Each entry has three formals: the ASCII string representing a
! PATCH keyword, the length of that ASCII string abbreviated, and the
! lexically equivalent token for that keyword.
!--
MACRO
	key_name (kname, kabbrev, kequiv) = kequiv, kabbrev, %CHARCOUNT (kname), %ASCII kname%;

!++
! The keyword_table can be viewed as n-byte entries, where the
! first byte contains the token equivalent of a keyword, the
! second the length of the ASCII string representing the smallest
! legal abbreviation of the keyword, the third the length of the
! ASCII string representing the entire keyword, and the fourth,
! the first byte of the ASCII string itself.
!--
LITERAL
	kword_token	=0,		! offset to token for a keyword
	kword_abbrev	=1,		! offset to minimum keyword abbreviation
	kword_length	=2,		! offset to keyword length in characters
	kword_name	=3,		! offset to keyword ASCII representation 
	kword_overhead	=3;		! overhead for each entry

!++
! MARS tables
!--

BIND
	keyword_table 	= UPLIT BYTE (

	key_name ('ALIGN', 2, align_token),
	key_name ('ALL', 3, all_token),
	key_name ('AND', 2, and_token),
	key_name ('ASCII', 2, ascii_token),
	key_name ('BYTE', 1, byte_token),
	KEY_NAME ('CANCEL', 2, CANCEL_TOKEN),
	key_name ('CHECK', 2, check_token),
	key_name ('CREATE', 2, create_token),
	key_name ('DEPOSIT', 1, deposit_token),
	key_name ('DECIMAL', 3, decimal_token),
	key_name ('DEFINE', 3, define_token),
	key_name ('DELETE', 3, delete_token),
	key_name ('EXAMINE', 1, examine_token),
	key_name ('ECO', 2, eco_token),
!	key_name ('EQ', 2, eq_token),
	key_name ('EVALUATE', 2, evaluate_token),
	key_name ('EXIT', 3, exit_token),
!	key_name ('GE', 2, ge_token),
	key_name ('GLOBALS', 2, globals_token),
!	key_name ('GT', 2, gt_token),
	key_name ('HELP',1, help_token),
	key_name ('HEXADECIMAL', 1, hexadecim_token),
	key_name ('INITIALIZE', 4, initializ_token),
	key_name ('INSTRUCTION', 1, instructi_token),
	key_name ('INSERT', 4, insert_token),
!	key_name ('LE', 2, le_token),
	key_name ('LITERAL', 2, literal_token),
	key_name ('LONG', 2, long_token),
!	key_name ('LT', 2, lt_token),
	key_name ('MODE', 1, mode_token),
	key_name ('MODULE', 4, module_token),
!	key_name ('NE', 2, ne_token),
	key_name ('NOASCII', 3, noascii_token),
	key_name ('NOGLOBALS', 3, noglobals_token),
	key_name ('NOINSTRUCTION', 3, noinstruc_token),
	key_name ('NOSCOPE', 4, noscope_token),
	key_name ('NOSYMBOLS', 4, nosymbols_token),
	key_name ('NOT', 3, not_token),
	key_name ('OCTAL', 2, octal_token),
	key_name ('OR', 2, or_token),
	key_name ('PAGE', 3, page_token),
	key_name ('PATCH_AREA', 3, patch_are_token),
	key_name ('QUAD', 1, quad_token),
	key_name ('REPLACE', 2, replace_token),
	key_name ('SCOPE', 2, scope_token),
	key_name ('SET', 2, set_token),
	key_name ('SHOW', 2, show_token),
	key_name ('SYMBOLS', 2, symbols_token),
	key_name ('UPDATE', 1, update_token),
	key_name ('VERIFY', 1, verify_token),
	key_name ('WORD', 1, word_token),
	0

		) : VECTOR [, BYTE];

!	PATKEY.REQ	- last line
