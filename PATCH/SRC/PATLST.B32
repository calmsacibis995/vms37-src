MODULE PATLST (
		%IF %VARIANT EQL 1
		%THEN
			ADDRESSING_MODE (EXTERNAL = LONG_RELATIVE, NONEXTERNAL = LONG_RELATIVE),
		%FI
		IDENT = 'V03-000') =
BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! FACILITY:	PATCH
!
!++
! FUNCTIONAL DESCRIPTION:
!
!	CREATES AND ADDS ITEMS TO A LINKED LIST
!
! Version:	X01.05
!
! History:
!	Author:
!		Carol Peters, 28 Oct 1976: Version 01
!
! Modified by:
!		Kathleen Morse, 19 Oct 1977: Version X01.00
!
!	V01-05	MTR0001		Mike Rhodes	07-Oct-1981
!		Zero the linked argument list TAIL pointer also upon
!		command completion.  Routine PAT$FREE_ARG.
!
! Revision history:
!  NO	DATE		PROGRAMMER		PURPOSE
!  --	----		----------		-------
!
!  00	11-OCT-77	K.D. MORSE		ADAPT VERSION 8 FOR PATCH.
!  01	05-JAN-78	K.D. MORSE		NO CHANGES FOR VERS 9.
!						INSTEAD OWN STORAGE. (10)
!  02	25-APR-78	K.D. MORSE		CONVERT TO NATIVE COMPILER.
!  03	18-MAY-78	K.D. MORSE		NO CHANGES FOR VERS 11-13.
!  04	13-JUN-78	K.D. MORSE		ADD FAO COUNTS TO SIGNALS.
!
!--

FORWARD ROUTINE
	PAT$ADD_ARG,						! CREATES A LINKED LIST OR ADDS A NEW ENTRY TO IT
	PAT$FREE_ARG : NOVALUE;					! FREES A LINKED LIST

LIBRARY 'SYS$LIBRARY:STARLET.L32';
REQUIRE 'SRC$:PATPCT.REQ';
REQUIRE 'SRC$:BSTRUC.REQ';
REQUIRE 'SRC$:LISTEL.REQ';
REQUIRE 'SRC$:VXSMAC.REQ';
REQUIRE 'SRC$:SYSSER.REQ';

EXTERNAL ROUTINE
	PAT$FREEZ,						! GETS A PIECE OF FREE STORAGE
	PAT$FREERELEASE;					! RELEASES FREE STORAGE

EXTERNAL
	PAT$GL_HEAD_LST,					! ADDRESS OF HEAD OF LINKED LIST
	PAT$GL_TAIL_LST;					! ADDRESS OF TAIL OF LINKED LIST

GLOBAL ROUTINE PAT$ADD_ARG (EXPRESSION) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	ADDS AN ELEMENT TO A LINKED LIST OR CREATES A LINKED
!	LIST AND INSERTS THE FIRST ELEMENT.
!	THE ADDRESS OF THE HEAD OF THE LIST IS AT PAT$GL_HEAD_LST
!	AND THE ADDRESS OF THE TAIL AT PAT$GL_TAIL_LST.
!	THIS ROUTINE ONLY PUTS A SINGLE VALUE IN THE LIST ELEMENT,
!	AND IT PUTS IT AT THE LONGWORD AFTER THE POINTER.
!
! CALLING SEQUENCE:
!
!	PAT$ADD_ARG (EXPRESSION)
!
! INPUTS:
!
!	EXPRESSION	- VALUE TO PUT IN LIST ELEMENT
!
! IMPLICIT INPUTS:
!
!	THE HEAD AND TAIL OF THE LINKED LIST.
!	THE LENGTH OF A LIST ELEMENT (LIST_ELEM_LEN).
!
! OUTPUTS:
!
!	THE ADDRESS OF THE NEW ELEMENT IF SPACE FOR THE LIST
!	ELEMENT WAS FOUND. OTHERWISE A ZERO.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	THE POINTER TO THE ELEMENT, OR A ZERO IF NO ELEMENT WAS ALLOCATED.
!
! SIDE EFFECTS:
!
!	THE LIST ELEMENT IS WRITTEN. THE TAIL OF THE LIST IS REWRITTEN.
!	IF THE LIST WAS CREATED, BOTH THE HEAD AND THE TAIL ARE WRITTEN
!	TO THEIR GLOBAL VARIABLE NAMES.
!
!--

BEGIN

LOCAL
	POINTER;

POINTER = PAT$FREEZ (LIST_ELEM_LEN);
IF (.PAT$GL_HEAD_LST EQL 0)
THEN
	PAT$GL_HEAD_LST = .POINTER
ELSE
	LIST_ELEM_FLINK (.PAT$GL_TAIL_LST) = .POINTER;
LIST_ELEM_FLINK (.POINTER) = 0;
PAT$GL_TAIL_LST = .POINTER;
LIST_ELEM_EXP1 (.POINTER) = .EXPRESSION;
RETURN .POINTER
END;

GLOBAL ROUTINE PAT$FREE_ARG : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	FREES EACH ELEMENT OF A LINKED LIST, AND ZEROES THE
!	POINTER TO THE LIST.
!	THIS ROUTINE IS INTENDED TO BE CALLED AT THE END OF
!	PROCESSING OF A COMPLETE COMMAND LINE.
!
! CALLING SEQUENCE:
!
!	PAT$FREE_ARG ()
!
! INPUTS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	THE HEAD OF THE LINKED LIST.
!	THE LENGTH OF A LIST ELEMENT (LIST_ELEM_LEN).
!
! OUTPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
!
!	NOVALUE
!
! SIDE EFFECTS:
!
!	THE ELEMENTS OF THE LIST ARE RETURNED TO THE FREE STORAGE POOL.
!
!--

BEGIN

LOCAL
	POINTER1,
	POINTER2;

IF (POINTER1 = .PAT$GL_HEAD_LST) EQL 0
THEN RETURN
ELSE DO
	BEGIN
	POINTER2 = .LIST_ELEM_FLINK (.POINTER1);
	PAT$FREERELEASE (.POINTER1, LIST_ELEM_LEN);
	END
UNTIL (POINTER1 = .POINTER2) EQL 0;
PAT$GL_HEAD_LST = 0;
PAT$GL_TAIL_LST = 0;
END;

END
ELUDOM
