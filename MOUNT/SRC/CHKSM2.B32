MODULE CHKSM2 (
		LANGUAGE (BLISS32),
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  MOUNT Utility Structure Levels 1 & 2
!
! ABSTRACT:
!
!	This routine computes the block checksum over the indicated
!	byte count.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  24-Nov-1977  14:58
!
! MODIFIED BY:
!
!	V02-000	ACG0167		Andrew C. Goldstein,	18-Apr-1980  13:38
!		Previous revision history moved to MOUNT.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:MOUDEF.B32';
REQUIRE 'LIBD$:[VMSLIB.OBJ]MOUNTMSG.B32';

GLOBAL ROUTINE CHECKSUM2 (BUFFER, COUNT) =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine computes the additive block checksum over the indicated
!	count. It stores the checksum at the given byte offset and returns
!	a match or mismatch status.
!
!
! CALLING SEQUENCE:
!	CHECKSUM (ARG1, ARG2)
!
! INPUT PARAMETERS:
!	ARG1: address of block to checksum
!	ARG2: byte count of block
!
! IMPLICIT INPUTS:
!	NONE
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	1 if checksum is correct
!	0 if not
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN

MAP
	BUFFER		: REF VECTOR [,WORD];

LOCAL
	SUM		: WORD,		! running checksum
	STATUS;				! return status


SUM = 0;
INCR J FROM 0 TO .COUNT/2-1 DO
    SUM = .SUM + .BUFFER[.J];

STATUS = .SUM EQL .BUFFER[.COUNT/2];
BUFFER[.COUNT/2] = .SUM;
RETURN .STATUS;

END;					! end of routine CHECKSUM2

END
ELUDOM
