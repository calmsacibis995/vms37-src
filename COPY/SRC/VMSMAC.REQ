%PRINT ('File: VMSMAC.B32, Version V03-000, Edit 1, WWC, 09-JAN-1978')
!
!	Version V02-000
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FUNCTIONAL DESCRIPTION:
!	This require file defines BLISS macros and literals to be used
!	by routines which call or otherwise use various features of VAX/VMS.
!
!--

!+
! $BYTE_MASK - a macro which calculates a one-byte bit mask given a
! BLISS byte block field definition.
!
!	$BYTE_MASK( definition )
!
!	where:
!	    "definition" is the BLISS definition of a field
!
!-

MACRO
    $BYTE_MASK( L, B, S, X ) =
	1^(B+S) - 1^B %;

!+
! $SHR_MESSAGES - a macro which defines facility-specific message codes
!	which are based on the system-wide shared message codes.
!
!	$SHR_MESSAGES( name, code, (msg,severity), ... )
!
!	where:
!	    "name" is the name of the facility (e.g., COPY)
!	    "code" is the corresponding facility code (e.g., 103)
!	    "msg" is the name of the shared message (e.g., BEGIN)
!	    "severity" is the desired message severity (e.g., 1, 0, 2, 4)
!
!+

MACRO
    $SHR_MESSAGES( FACILITY_NAME, FACILITY_CODE ) =
	LITERAL
	SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE, %REMAINING ); %,

    SHR$MSG_IDS( FACILITY_NAME, FACILITY_CODE) [ VALUE ] =
	SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, %REMOVE(VALUE) ) %,

    SHR$MSG_CALC( FACILITY_NAME, FACILITY_CODE, MSG_ID, SEVERITY ) =
	%NAME(FACILITY_NAME,'$_',MSG_ID) = %NAME('SHR$_',MSG_ID) + FACILITY_CODE*65536 +
	    %IF %DECLARED(%NAME('STS$K_',SEVERITY))
		%THEN %NAME('STS$K_',SEVERITY)
		%ELSE SEVERITY %FI %;

!+
! $FAB_DEV - a macro which defines a single FAB$L_DEV bit.
!
!	$FAB_DEV( bit_name )
!
!	where:
!	    "bit_name" is a 3-character device bit name
!
!-

MACRO
    $FAB_DEV( BIT_NAME ) =
	FAB$DEV( FAB$L_DEV, %NAME('DEV$V_',BIT_NAME) ) %,

    FAB$DEV( FAB_BYTE, FAB_BIT, FAB_SIZE, FAB_SIGN, DEV_DISP, DEV_BIT, DEV_SIZE, DEV_SIGN ) =
	FAB_BYTE, DEV_BIT, DEV_SIZE, DEV_SIGN %;
