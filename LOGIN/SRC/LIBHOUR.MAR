	.TITLE	LIB$HOUR_OF_DAY		; Find numeric hour of day
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
; FACILITY: Language-independent support library
;++
; ABSTRACT:
;
;
;--
;
; VERSION: 1
;
; HISTORY:
;
; AUTHOR:
;
;	Herb Jacobs		November 1981
;

	.SBTTL	HISTORY		; Detailed Current Edit History

; EDIT HISTORY:
;
; 1-001 - 

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; EXTERNAL SYMBOLS:
;

;
; MACROS:
;

;
; PSECT DECLARATIONS:
;

	.PSECT	_LIB$CODE		PIC, SHR, LONG, EXE, NOWRT

;
; EQUATED SYMBOLS:
;


	.SBTTL	LIB$HOUR_OF_DAY -

;++
; FUNCTIONAL DESCRIPTION:
;
;	This routine returns the numeric hour of the day for an input time
;	value.  If the input value is ommited, the current hour of the day
;	at this time is returned.  Midnite is considered 0, highest hour is
;	23.
;
; CALLING SEQUENCE:
;
;	ret = LIB$HOUR_OF_DAY	( time_64_bit_Q, output_hour_L)
;
; INPUT PARAMETERS:
;
;	time_64_bit_Q - Address of a quadword representing time or 0
;
; IMPLICIT INPUTS:
;
;	If time_64_bit_Q is 0, then the current system time is used.
;
; OUTPUT PARAMETERS:
;
;	output_hour_L  - Address of a longword to recieve the hour
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	SS$_NORMAL 	- success
;
; SIDE EFFECTS:
;
;	NONE
;
;--
	.entry	-
lib$hour_of_day,^M<>
	movl	#lib$_invarg,r0	; assume error
	cmpb	#2,(ap)		; are there at least 2 arguments
	bgtru	100$		; branch if not
	movl	4(ap),r1	; get address of quadword time
	bneq	20$		; branch if specified
	movaq	-(sp),r1	; area to recieve time in, r1 addr of area
	$gettim_s (r1)		; get current time
	blbc	r0,100$		; branch if error
20$:	movq	(r1),r0		; get the time
	ediv	#60*10*1000*1000,r0,r0,r1 ; get the time in minutes
	clrl	r1		; time in minutes from 1858 is only 32 bits
	ediv	#60,r0,r0,r1	; time in hours into r0
	clrl	r1		; again only 32 bits
	ediv	#24,r0,r0,r1	; r0 number of days, r1 hour of day
	movl	r1,@8(ap)	; store the hour number
	movl	#1,r0		; set success
100$:	ret			; exit, clean stack if needed

	.end
