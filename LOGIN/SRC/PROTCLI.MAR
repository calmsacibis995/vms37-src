	.TITLE	PROTCLI - SET PROTECTION ON CLI PAGES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	LOGINOUT
;
; ABSTRACT:	INITIALIZE CLI CODE SECTION
;
; ENVIRONMENT:	NATIVE MODE PRIVILEGED PROCEDURE
;
; AUTHOR:	LEN KAWELL, 20-MAR-1980
;
; MODIFIED BY:
;
;---

	.SBTTL	DECLARATIONS
;
; MACROS
;
	$IPLDEF				; INTERRUPT PRIORITY LEVELS
	$PCBDEF				; PROCESS CONTROL BLOCK
	$PRDEF				; PROCESSOR REGISTERS
	$PRTDEF				; PAGE PROTECTION CODES
	$PTEDEF				; PAGE TABLE ENTRY

	.PSECT	$CODE$,NOWRT,EXE,WORD

	.SBTTL	CHANGE THE PROTECTION ON THE CLI PAGES
;++
; LGI$PROTECT_CLI - CHANGE THE PROTECTION ON THE CLI PAGES
;
;	THIS ROUTINE IS CALLED TO CHANGE THE OWNER AND PROTECTION OF THE
;	MAPPED CLI PAGES.  THEY ARE CREATED OWNED BY USER MODE, AND THIS
;	ROUTINE CHANGES THE OWNER TO SUPERVISOR MODE;  IF ANY PAGES ARE
;	WRITEABLE, THE PROTECTION IS CHANGED TO DISALLOW USER MODE WRITING.
;
; INPUTS:
;
;	4(AP) = ADDRESS OF CLI $IMGACT RETURN ADDRESS ARRAY
;
;	MODE = KERNEL
;
; OUTPUTS:
;
;	CTL$AG_IMAGE = SAVED CLI ADDRESS ARRAY
;
;	PTE$V_OWN OF ALL CLI PTE'S CHANGED TO PSL$C_SUPER
;	PTE$V_PROT OF ALL WRITEABLE CLI PTE'S CHANGED TO PRT$C_URSW
;--
LGI$PROTECT_CLI::
	.WORD	^M<R2,R3,R4,R5,R6>	;
	$LKWSET_S INADR=PROT_ROUTINE	; LOCK ROUTINE IN WORKING SET
	BLBC	R0,20$			; BR IF FAILURE
	MOVL	4(AP),R1		; GET ADDRESS OF CLI ADDRESS ARRAY
	MOVQ	(R1),R5			; GET CLI ADDRESS ARRAY
	CMPL	R5,R6			; FIRST ADDRESS GTRU LAST?
	BGTRU	10$			; BR IF YES - ORDER IS OK
	MOVL	R6,R5			; SWITCH ORDER OF ADDRESSES
	MOVL	(R1),R6			; ...
10$:	BICW	#VA$M_BYTE,R5		; CLEAR BYTE OFFSETS
	BICW	#VA$M_BYTE,R6		; ...
	MOVL	R5,R2			; GET FIRST ADDRESS OF CLI
	MOVL	SCH$GL_CURPCB,R4	; GET ADDRESS OF PCB
	MOVL	CTL$GL_PHD,R5		; GET ADDRESS OF PHD WINDOW
	JSB	MMG$PTEINDX		; CONVERT VA TO PTE INDEX
	BLBS	R0,30$			; BR IF SUCCESS
20$:	RET				;
30$:	DSBINT	#IPL$_ASTDEL		; DISABLE AST DELIVERY
PROT_LOOP:
	TSTL	@PCB$L_PHD(R4)[R3]	; FAULT IN PAGE TABLE PAGE
	DSBINT	#IPL$_SYNCH		; DISABLE SWAPPING
	MOVL	@PCB$L_PHD(R4)[R3],R0	; GET PAGE TABLE ENTRY
	CMPZV	#PTE$V_OWN,#PTE$S_OWN,-	; IS PAGE CURRENTLY OWNED BY USER MODE?
		R0,#PSL$C_USER		;
	BNEQ	20$			; BR IF NOT
	INSV	#PSL$C_SUPER,-		; MAKE THE OWNER SUPERVISOR MODE
		#PTE$V_OWN,#PTE$S_OWN,R0
	IFNOWRT #1,(R2),10$		; BR IF PAGE NOT WRITEABLE
	INSV	#PRT$C_URSW,-		; MAKE PAGE WRITEABLE ONLY BY SUPER
		#PTE$V_PROT,#PTE$S_PROT,R0
10$:	MOVL	R0,@PCB$L_PHD(R4)[R3]	; SAVE NEW PTE
	BGTR	20$			; BR IF NOT VALID
	INVALID	R2			; INVALIDATE TRANSLATION BUFFER
20$:	ENBINT				; RE-ENABLE SWAPPING AND PAGEFAULTS
	DECL	R3			; DECREMENT PTE INDEX
	MOVAB	-512(R2),R2		; DECREMENT VA
	CMPL	R2,R6			; ALL PAGES DONE?
	BGEQU	PROT_LOOP		; BR IF NO - CONTINUE
	ENBINT				; RE-ENABLE AST'S
	MOVL	#1,R0			; SET SUCCESS
	RET

PROT_ROUTINE:				; PROTECTION ROUTINE DESCRIPTOR
	.LONG	LGI$PROTECT_CLI,PROT_ROUTINE

	.SBTTL	EXECUTE_IMAGE, ACTIVATE AN IMAGE
;---
;
;	THIS ROUTINE IS COPIED INTO P1 SPACE (AND THEREFORE MUST BE PIC),
;	AND WHEN CALLED, WILL RUNDOWN THE LOGIN IMAGE AND ACTIVATE ANOTHER
;	IMAGE (ESSENTIALLY A CHAIN).  AFTER THE IMAGE COMPLETES, THE PROCESS
;	WILL BE TERMINATED.
;
; INPUTS:
;
;	ACCESS MODE IS EXECUTIVE.
;
;	MMG$IMGHDRBUF = IMAGE HEADER BUFFER, THE FIRST QUADWORD CONTAINS
;			A DESCRIPTOR OF THE IMAGE FILE SPECIFICATION.
;
; OUTPUTS:
;
;	NONE, CONTROL NEVER RETURNS TO THE CALLER.
;---

EXECUTE_IMAGE::
	.WORD	0

	$RUNDWN_S ACMODE=#PSL$C_USER	; RUNDOWN LOGIN IMAGE
	CLRL	R8			; SKIP HIBERNATION BEFORE EXECUTION
	MOVAB	G^MMG$IMGHDRBUF,AP	; POINT TO IMGHDR BUFFER/FILESPEC
	JMP	G^EXE$PROCIMGACT	; ACTIVATE THE REQUESTED IMAGE

	.END
