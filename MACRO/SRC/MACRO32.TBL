%	TERMINAL SYMBOL DEFINITIONS  \

TERMINAL

ERR01	 =	1;
ERR02	 =	2;
ERR03	 =	3;
ERR04	 =	4;
ERR05	 =	5;
ERR06	 =	6;
ERR07	 =	7;
ERR08	 =	8;
ERR09	 =	9;
GOALSY	 =	10;
DEOL	 =	11;
ID	 =	12;
MACTXT	 =	13;
DOPCODE	 =	14;
DCOMMA	 =	15;
DCOLON	 =	16;
DEQ	 =	17;
DPC	 =	18;
DSQOPN	 =	19;
DSQCLS	 =	20;
DANGOPN	 =	21;
DANGCLS	 =	22;
DOPN	 =	23;
DCLS	 =	24;
DPLUS	 =	25;
DMINUS	 =	26;
DTIMES	 =	27;
DDIV	 =	28;
DAND	 =	29;
DOR	 =	30;
DXOR	 =	31;
DAT	 =	32;
DPOUND	 =	33;
DINTEGER =	34;
DUPA	 =	35;
DUPB	 =	36;
DUPC	 =	37;
DUPD	 =	38;
DUPO	 =	39;
DUPF	 =	40;
DUPM	 =	41;
DUPX	 =	42;
DBUP	 =	43;
DGUP	 =	44;
DIUP	 =	45;
DLUP	 =	46;
DSUP	 =	47;
DWUP	 =	48;
RRREG	 =	49;
DMASK	 =	50;
KASCIC	 =	51;
KASCII	 =	52;
KASCIZ	 =	53;
KPACKED	 =	54;
KADDRESS =	55;
KBYTE	 =	56;
KDOUBLE	 =	57;
KFIELD	 =	58;
KFLOAT	 =	59;
KLONG	 =	60;
KQUAD	 =	61;
KWORD	 =	62;
KBLKA	 =	63;
KBLKB	 =	64;
KBLKD	 =	65;
KBLKF	 =	66;
KBLKL	 =	67;
KBLKQ	 =	68;
KBLKW	 =	69;
KIF	 =	70;
KIIF	 =	71;
KIFF	 =	72;
KIFT	 =	73;
KIFTF	 =	74;
KIRP	 =	75;
KIRPC	 =	76;
KREPT	 =	77;
KENDC	 =	78;
KENDR	 =	79;
KMACRO	 =	80;
KMCALL	 =	81;
KMEXIT	 =	82;
KENDM	 =	83;
KMDELETE =	84;
KDEBUG	 =	85;
KDSABL	 =	86;
KENABL	 =	87;
KENTRY	 =	88;
KVECTOR	 =	89;
KALIGN	 =	90;
KEVEN	 =	91;
KODD	 =	92;
KEXTRN	 =	93;
KGLOBL	 =	94;
KINCLUDE =	95;
KLIBRARY =	96;
KLIST	 =	97;
KNLIST	 =	98;
KNARG	 =	99;
KNCHR	 =	100;
KPAGE	 =	101;
KPSECT	 =	102;
KRESTORE =	103;
KSAVE	 =	104;
KTITLE	 =	105;
KIDENT	 =	106;
KSBTTL	 =	107;
KWEAK	 =	108;
KREF1	 =	109;
KREF2	 =	110;
KREF4	 =	111;
KREF8	 =	112;
KERROR	 =	113;
KPRINT	 =	114;
KWARN	 =	115;
KNTYPE	 =	116;
KOPDEF	 =	117;
KEND	 =	118;
KXFER	 =	119;
KASCID	=	120;
KCROSS	=	121;
KNCROS	=	122;
KDFLT	=	123;
KSGNB	=	124;
KSGNW	=	125;
KBLKG	=	126;
KBLKH	=	127;
KBLKO	=	128;
KGFLOAT	=	129;
KHFLOAT	=	130;
KOCTA	=	131;
KREF16	=	132;

END

BEGIN

S		= MARS_TEXT GOALSY			/ GOAL;

MARS_TEXT	= STATEMENT				/ MTXT1
		! MARS_TEXT STATEMENT			/ MTXT2
		! DEOL					/ MTXT3
		! MARS_TEXT DEOL			/ MTXT4
		! ERR01					/ ERRMRS;

STATEMENT	= MACHINE_STAT				/ STAT1
		! LABEL DEOL
		! LABEL STATEMENT
		! ASSIGNMENT
		! MACTXT				/ STAT4
		! DIRECTIVE DEOL
		! DIRECTIVE ERR03			/ ERRDOL
		! IF_STATE
		! IIF_STAT;

MACHINE_STAT	= MACHINE_INST DEOL
		! MACHINE_INST OPERANDS DEOL
		! MACHINE_INST ERR04			/ ERRMST;

MACHINE_INST	= DOPCODE				/ MINST1;

OPERANDS	= REF					/ OPRAND
		! OPERANDS DCOMMA REF			/ OPRAND
		! OPERANDS DCOMMA ERR03			/ ERRREF
		! OPERANDS ERR03			/ ERRREF;

LABEL		= ID DCOLON				/ LBL1
		! ID DCOLON DCOLON			/ LBL2;

ASSIGNMENT	= ASSIGN_HEAD EXPR DEOL			/ ASSGN1
		! ASSIGN_HEAD ERR02			/ ERRASN;

ASSIGN_HEAD	= ID DEQ				/ ASSHD1
		! ID DEQ DEQ				/ ASSHD2
		! DPC DEQ				/ ASSHD3;


IF_STATE	= IF_HEAD DEOL				/ IFSPL
		! IF_HEAD1 DEOL				/ IF
		! IF_HEAD1 ERR02			/ IFSYNT;

IF_HEAD1	= IF_HEAD EXPR;

IF_HEAD		= KIF					/ IFHD1;

IIF_STAT	= IIF_HEAD EXPR DCOMMA			/ IIF1
		! IIF_HEAD DCOMMA			/ IIF2
		! IIF_HEAD ERR02			/ ERRIIF;

IIF_HEAD	= KIIF					/ IIF;

%		DIRECTIVES		\

DIRECTIVE	= KMACRO				/ MACRO
		! KIFF					/ IFF
		! KIFT					/ IFT
		! KIFTF					/ IFTF
		! KIRP					/ IRP
		! KIRPC					/ IRPC
		! DATA_STAT
		! BLOCK_STAT
		! KDSABL				/ DSABL
		! KENABL				/ ENABL
		! KLIST					/ LIST
		! KNLIST				/ NLIST
		! KPSECT				/ PSECT
		! KSAVE					/ CSAVE
		! KRESTORE				/ CRESTO
		! KENTRY ID DCOMMA EXPR			/ ENTRY1
		! KENTRY ID EXPR			/ ENTRY2
		! KENTRY DCOMMA EXPR			/ ERRENT
		! KENTRY ERR02				/ ERRENT
		! KENTRY ID ERR02			/ ERRENT
		! ALIGN_HEAD				/ ALIGN1
		! ALIGN_HEAD DCOMMA EXPR		/ ALIGN2
		! ALIGN_HEAD EXPR			/ ALIGN2
		! KMDELETE				/ DELETE
		! KLIBRARY				/ LIBRY
		! KMCALL				/ MCALL
		! KMEXIT				/ MEXIT
		! KNARG					/ NARG
		! KNCHR ID				/ NCHR
		! KPAGE					/ PAGE
		! KSBTTL				/ SBTTL
		! KTITLE				/ TITLE
		! KIDENT				/ IDENT
		! KVECTOR ID				/ VECTR0
		! KVECTOR ID DCOMMA EXPR		/ VECTR1
		! KVECTOR ID EXPR			/ VECTR2
		! ID_LIST_HEAD ID_LIST
		! KXFER ID				/ XFER
		! KEND					/ ENDPRG
		! KENDM					/ BDEND1
		! KENDR					/ BDEND2
		! KENDC					/ ENDC
		! REPT_HEAD EXPR			/ REPT
		! REPT_HEAD ERR02			/ ERREPT
		! NTYPE_HEAD				/ NTYPE1
		! NTYPE_HEAD REF			/ NTYPE2
		! ERROR_HEAD				/ ERROR1
		! ERROR_HEAD EXPR			/ ERROR2
		! REF_HEAD REF				/ DIRREF
		! KDFLT					/ SETDFL
		! OPDEF_HEAD ID EXPR DCOMMA		/ DFNOPC
		! OPDEF_HEAD ERR02			/ ERROPD
		! OPDEF_HEAD ID ERR02			/ ERROPD
		! OPDEF_HEAD ID EXPR ERR02		/ ERROPD
		! KCROSS				/ CROENB
		! KNCROS				/ CRODSB
		! KODD					/ ODD
		! KEVEN					/ EVEN;

ID_LIST_HEAD	= KDEBUG				/ DEBUG
		! KGLOBL				/ GLOBAL
		! KEXTRN				/ EXTRN
		! KWEAK					/ WEAK;

ID_LIST		= ID					/ IDLIST
		! ID_LIST DCOMMA ID			/ IDLIST;

REF_HEAD	= KREF1					/ RFHD1
		! KREF2					/ RFHD2
		! KREF4					/ RFHD4
		! KREF8					/ RFHD8
		! KREF16				/ RFHD16;


ALIGN_HEAD	= KALIGN				/ ALIGN;

REPT_HEAD	= KREPT					/ REPTHD;

ERROR_HEAD	= KERROR				/ ERROR
		! KPRINT				/ PRINT
		! KWARN					/ WARN;


NTYPE_HEAD	= KNTYPE ID DCOMMA			/ NTHD1
		! KNTYPE ID				/ NTHD2;

BLOCK_STAT	= BLOCK_TYPE				/ BSTAT1
		! BLOCK_TYPE EXPR			/ BSTAT2
		! BLOCK_TYPE ERR02			/ ERRBLK;

BLOCK_TYPE	= KBLKA					/ BLKLNG
		! KBLKB					/ BLKBYT
		! KBLKD					/ BLKQUD
		! KBLKF					/ BLKLNG
		! KBLKL					/ BLKLNG
		! KBLKQ					/ BLKQUD
		! KBLKW					/ BLKWRD
		! KBLKG					/ BLKQUD
		! KBLKH					/ BLKOCT
		! KBLKO					/ BLKOCT;

OPDEF_HEAD	= KOPDEF				/ REPTHD;

DATA_STAT	= DATA_TYPE DATA_ARGS
		! DATA_TYPE				/ DATNUL
		! CHAR_STAT
		! ADDR_STAT
		! KPACKED				/ PACKED
		! KFLOAT				/ FLOAT
		! KDOUBLE				/ DOUBLE
		! KGFLOAT				/ GFLOAT
		! KHFLOAT				/ HFLOAT
		! QUAD_HEAD PRIMITIVE			/ QUDSTR
		! QUAD_HEAD				/ DATNUL
		! OCTA_HEAD PRIMITIVE			/ OCTSTR
		! OCTA_HEAD				/ DATNUL;

QUAD_HEAD	= KQUAD					/ QUAD;

OCTA_HEAD	= KOCTA					/ OCTA;

DATA_TYPE	= KBYTE					/ BYTE
		! KLONG					/ LONG
		! KSGNB					/ SGNBYT
		! KSGNW					/ SGNWRD
		! KWORD					/ WORD;

DATA_ARGS	= DATA_LIST				/ DALST1
		! DATA_LIST DSQOPN EXPR DSQCLS		/ DALST2
		! DATA_LIST DSQOPN EXPR ERR06		/ ERRDAR;

DATA_LIST	= EXPR					/ DATARG
		! DATA_ARGS DCOMMA EXPR			/ DATARG
		! DATA_ARGS ERR04			/ ERRDAR
		! DATA_ARGS DCOMMA ERR04		/ ERRDAR;


CHAR_STAT	= CHAR_HEAD				/ CHARHD
		! CHAR_HEAD CHAR_ARGS			/ CHARHD;

CHAR_HEAD	= KASCII				/ ASCII
		! KASCIZ				/ ASCIZ
		! KASCID				/ ASCID
		! KASCIC				/ ASCIC;

CHAR_ARGS	= DANGOPN EXPR DANGCLS			/ CHRARG
		! CHAR_ARGS DANGOPN EXPR DANGCLS	/ CHRARG
		! DANGOPN DANGCLS			/ CHRNUL
		! CHAR_ARGS DANGOPN DANGCLS		/ CHRNUL
		! DANGOPN EXPR ERR06			/ ERRCHA
		! CHAR_ARGS DANGOPN EXPR ERR06		/ ERRCHA
		! CHAR_ARGS ERR06			/ ERRCHA;

ADDR_STAT	= ADDR_TYPE ADDR_LIST
		! ADDR_TYPE				/ ERRADR;

ADDR_TYPE	= KADDRESS				/ ADDRES;

ADDR_LIST	= EXPR					/ STOADR
		! ADDR_LIST DCOMMA EXPR			/ STOADR
		! ADDR_LIST ERR04			/ ERRADR
		! ADDR_LIST DCOMMA ERR04		/ ERRADR;

%		EXPRESSIONS		\

EXPR		= PRIMARY
		! EXPR OPBINARY PRIMARY			/ EXPBIN;

OPUNARY		= DUPC					/ OPCOM
		! DPLUS					/ OPSAME
		! DMINUS				/ OPNEG;

OPBINARY	= DPLUS					/ OPPLUS
		! DMINUS				/ OPMINU
		! DTIMES				/ OPMUL
		! DDIV					/ OPDIV
		! DAND					/ OPAND
		! DOR					/ OPOR
		! DXOR					/ OPXOR
		! DAT					/ OPASH;

PRIMARY		= PRIMITIVE
		! OPUNARY PRIMITIVE			/ PRMUN
		! OPUNARY ERR05				/ ERREXP;

PRIMITIVE	= ID					/ PRMSYM
		! DPC					/ PRMPC
		! DINTEGER				/ PRMINT
		! RADIX_CONTROL PRIMITIVE		/ PRMRDX
		! SPECIAL_OPERATOR
		! DANGOPN EXPR DANGCLS			/ PRMBRK
		! RADIX_CONTROL ERR05			/ ERREXP
		! DANGOPN EXPR ERR05			/ ERREXP;

RADIX_CONTROL	= DUPX					/ RDXHEX
		! DUPD					/ RDXDEC
		! DUPB					/ RDXBIN
		! DUPO					/ RDXOCT;

SPECIAL_OPERATOR = DUPA					/ NUMASC
		! DUPF					/ NUMFLT
		! REGISTER_MASK ;

REGISTER_MASK	= DUPM DANGOPN REGLIS DANGCLS		/ MASK
		! DUPM DANGOPN DANGCLS			/ MASKNL
		! DUPM MASK_ITEM			/ MASKX;

REGLIS		= MASK_ITEM				/ RGLST1
		! REGLIS DCOMMA MASK_ITEM		/ REGLST;

MASK_ITEM	= RRREG
		! DMASK;

%		REFERENCES		\

REF		= BASIC_REF				/ REF1
		! DSUP DPOUND EXPR			/ LITERL
		! RRREG					/ REF2
		! INDEX_REF				/ REF3
		! ERR02					/ ERRREF;


BASIC_REF	= DOPN RRREG DCLS			/ RDEFER
		! AUTO_INC				/ AUTOI
		! DAT AUTO_INC				/ AUTOII
		! DAT DOPN RRREG DCLS			/ AUTOI3
		! DMINUS DOPN RRREG DCLS		/ AUTODC
		! DISPLACEMENT				/ DISP
		! DAT DISPLACEMENT			/ DISPI
		! DGUP EXPR				/ GENLDS
		! DOPN ERR01				/ ERRBRF
		! DOPN RRREG ERR01			/ ERRBRF
		! DAT RRREG				/ ERRBRF;

AUTO_INC	= DOPN RRREG DCLS DPLUS			/ AINC1
		! DPOUND EXPR				/ AINC2
		! DIUP DPOUND EXPR			/ AINC3;

DISPLACEMENT	= EXPR DOPN RRREG DCLS			/ DISPL1
		! EXPR					/ DISPL2
		! DBUP EXPR DOPN RRREG DCLS		/ DISPL3
		! DLUP EXPR DOPN RRREG DCLS		/ DISPL4
		! DWUP EXPR DOPN RRREG DCLS		/ DISPL5
		! DBUP EXPR				/ DISPL6
		! DLUP EXPR				/ DISPL7
		! DWUP EXPR				/ DISPL8;

INDEX_REF	= BASIC_REF DSQOPN RRREG DSQCLS		/ INDEX;

END.
