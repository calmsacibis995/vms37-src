	.TITLE	MAC$DATA1
	.IDENT	'V03-001'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	VAX MACRO ASSEMBLER OBJECT LIBRARY
;
; ABSTRACT:
;
; The VAX-11 MACRO assembler translates MACRO-32 source code into object
; modules for input to the VAX-11 LINKER.
;
; ENVIRONMENT:	USER MODE
;
; AUTHOR: Benn Schreiber, CREATION DATE: 30-AUG-78
;
; MODIFIED BY:
;
;	V03-01	MTR0012		Mike Rhodes	22-Mar-1982
;		Change version number format to be compatible
;		with other facilities.  3-00.
;
;	V03.00	MTR0002		Mike Rhodes	15-Mar-1982
;		Advanced the identification version number to 3.00.
;
;	V02.26	CNH0045		Chris Hume	 1-Dec-1980
;		Increased size of parser value stack.  Stack overflow remains
;		undetected.  Also advanced displayed IDENT to 2.46.
;		(DATA.MAR 02.22, MAIN.MAR 02.46)
;
;	V01.25	RN0029		R. Newland	18-Feb-1980
;		Update version number to V02.42.
;
;	V01.24	RN0026		R. Newland	16-Jan-1980
;		Update version number.
;
;	V01.23	RN0022		R. Newland	31-Oct-1979
;		Translate SYS$LP_LINES to set lines/page
;
;	V01.22	RN0019		R. Newland	30-Oct-1979
;		Improve error pointer positioning.
;
;	V01.21	RN0014		R. Newland	10-Oct-1979
;		Support for G_floating, H_floating and Octaword data types
;
;	V01.20	RN0011		R. Newland	11-Sep-1979
;		New librarian support
;
;	V01.19	RN0008		R. Newland	29-Aug-1979
;		31 character PSECT names
;
;	V01.18	RN0002		R. Newland	01-Feb-1979
;		Changes for Source Update Merge
;--

	$MAC_CRFLAGDEF			;DEFINE CREF CONTROL FLAGS
	$MAC_CTLFLGDEF			; Control flags

	.PSECT	MAC$RO_DATA,NOWRT,NOEXE,GBL,LONG

	.SBTTL	DATA STORAGE

MAC$AB_DEF_TITL::			;DEFAULT TITLE STRING
	.ASCIC	/.MAIN./		;DEFAULT TITLE
MAC$AB_VERSION::			;VAX-11 MACRO VERSION STRING
	.ASCIC	\VAX-11 Macro V03-00\	;VAX-11 MACRO VERSION

MAC$AB_TOC_MSG::			;"TABLE OF CONTENTS"
	.ASCIC	/Table of contents/
MAC$AB_STB_MSG::			;"SYMBOL TABLE"
	.ASCIC	/Symbol table/

MAC$AB_RNT_MSG::
	.ASCIC	/VAX-11 Macro Run Statistics/
MAC$AB_CRF_MSG::
	.ASCIC	/Cross reference/
MAC$AB_CRF_HDR::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!45* +!24*-+!/\
	.ASCII	\!45* !! Symbol Cross Reference !!\
	.ASCII	\!/!45* +!24*-+!/\
20$:
MAC$AB_CRF_HD1::
	.LONG	20$-10$,10$
10$:	.ASCII	\!15<SYMBOL!> !8<VALUE!>!5* !14<DEFINITION!>\
	.ASCII	\!2* !14<REFERENCES...!>!/\
	.ASCII	\!15<!6*-!> !8<!5*-!>!5* !14<!10*-!>\
	.ASCII	\!2* !14<!13*-!>\
20$:
MAC$AB_CRF_HD1W::
	.LONG	20$-10$,10$
10$:	.ASCII	\!31<SYMBOL!> !8<VALUE!>!5* !14<DEFINITION!>\
	.ASCII	\!2* !14<REFERENCES...!>!/\
	.ASCII	\!31<!6*-!> !8<!5*-!>!5* !14<!10*-!>\
	.ASCII	\!2* !14<!13*-!>\
20$:
MAC$AB_CRF_HDM::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!45* +!24*-+!/\
	.ASCII	\!45* !! Macros Cross Reference !!\
	.ASCII	\!/!45* +!24*-+!/\
20$:

MAC$AB_CRF_HD2::
	.LONG	20$-10$,10$
10$:	.ASCII	\!15<MACRO!>!3* !8<SIZE!>!6* !14<DEFINITION!>\
	.ASCII	\!3* !14<REFERENCES...!>!/\
	.ASCII	\!15<!5*-!>!3* !8<!4*-!>!6* !14<!10*-!>\
	.ASCII	\!3* !14<!13*-!>\
20$:
MAC$AB_CRF_HD2W::
	.LONG	20$-10$,10$
10$:	.ASCII	\!31<MACRO!>!3* !8<SIZE!>!6* !14<DEFINITION!>\
	.ASCII	\!3* !14<REFERENCES...!>!/\
	.ASCII	\!31<!5*-!>!3* !8<!4*-!>!6* !14<!10*-!>\
	.ASCII	\!3* !14<!13*-!>\
20$:
MAC$AB_CRF_HDO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!45* +!24*-+!/\
	.ASCII	\!45* !! Opcode Cross Reference !!\
	.ASCII	\!/!45* +!24*-+!/\
20$:
MAC$AB_CRF_HD3::
	.LONG	20$-10$,10$
10$:	.ASCII	\!15<OPCODE!>!5<VALUE!>!5* !14<REFERENCES...!>!/\
	.ASCII	\!15<!6*-!>!5<!5*-!>!5* !14<!13*-!>\
20$:
MAC$AB_CRF_HDD::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!43* +!28*-+!/\
	.ASCII	\!43* !! Directives Cross Reference !!\
	.ASCII	\!/!43* +!28*-+!/\
20$:
MAC$AB_CRF_HD4::
	.LONG	20$-10$,10$
10$:	.ASCII	\!15<DIRECTIVE!>!14<REFERENCES...!>!/\
	.ASCII	\!15<!9*-!>!14<!13*-!>\
20$:
MAC$AB_CRF_HDG::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!44* +!26*-+!/\
	.ASCII	\!44* !! Register Cross Reference !!\
	.ASCII	\!/!44* +!26*-+!/\
20$:
MAC$AB_CRF_HD5::
	.LONG	20$-10$,10$
10$:	.ASCII	\!10<REGISTER!>!14<NO. REFERENCES!>!5* !14<REFERENCES...!>!/\
	.ASCII	\!10<!8*-!>!14<!14*-!>!5* !14<!13*-!>\
20$:
MAC$AB_IND_HDR::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!45* +!24*-+!/\
	.ASCII	\!45* !! Performance indicators !!\
	.ASCII	\!/!45* +!24*-+!/\
20$:

MAC$AB_RUN_HDR::
	.LONG	20$-10$,10$
10$:	.ASCII	\!25<Phase!>!15<Page faults!>!15<CPU Time!>!15<Elapsed Time!>!/\
	.ASCII	\!25<!5*-!>!15<!11*-!>!15<!8*-!>!15<!12*-!>\
20$:
MAC$AB_MLB_HDR::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!44* +!26*-+!/\
	.ASCII	\!44* !! Macro library statistics !!\
	.ASCII	\!/!44* +!26*-+!/\
20$:
MAC$AB_MLB_HD2::
	.LONG	20$-10$,10$
10$:	.ASCII	\!45<Macro library name!>\
	.ASCII	\!20<Macros defined!>!/\
	.ASCII	\!45<!18*-!>\
	.ASCII	\!20<!14*-!>\
20$:
MAC$AB_MLB_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!45<!AS!>!12SL!8* \
20$:
MAC$AB_MLB_TOT::
	.ASCID	/TOTALS (all libraries)/

MAC$AB_MLB_SUM::
	.LONG	20$-10$,10$
10$:	.ASCII	\!SL GET!%S !AC required to define !SL macros.\
20$:
MAC$AB_FAO_TIM::
	.LONG	20$-10$,10$
10$:	.ASCII	\!25<!AC!>!10SL!5* !2ZL:!2ZL:!2ZL.!2ZL!4* !%T\
20$:
MAC$AB_PSS_MSG::
	.ASCIC	/Psect synopsis/

MAC$AB_PSC_HDR::
	.LONG	20$-10$,10$
10$:	.ASCII	\!/!48* +!16*-+!/!48* !! Psect synopsis !!\
	.ASCII	\!/!48* +!16*-+!/\
20$:
MAC$AB_PSC_HD2::
	.LONG	20$-10$,10$
10$:	.ASCII	\!31<PSECT name!>!1* !18<Allocation!>!2* \
	.ASCII	\!9<PSECT No.!>!2* !15<Attributes!>!/\
	.ASCII	\!31<!10*-!>!1* !18<!10*-!>!2* \
	.ASCII	\!9<!9*-!>!2* !15<!10*-!>\
20$:
MAC$AB_LPG_FMT::
	.LONG	20$-10$,10$
10$:	.ASCII	\!14<!5SL!#*.!#(SL) (!SL)!> \
20$:
MAC$AB_PSS_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!31<!AC!>!9XL  (!5SL.)  !2XB (!3SL.)  \
20$:

MAC$AB_WAS_MSG::
	.ASCIC	/was/
MAC$AB_WERE_MG::
	.ASCIC	/were/
MAC$AB_NOERRM::
	.LONG	20$-10$,10$
10$:	.ASCII	\There were no errors, warnings or information messages.\

20$:
MAC$AB_ERRM::
	.LONG	20$-10$,10$
10$:	.ASCII	\There were !SL error!%S, !SL warning!%S and \ -
		\!SL information message!%S, on lines:\
20$:
MAC$AB_WSL_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\The working set limit was !SL pages.\
20$:
MAC$AB_IFP_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!SL bytes (!SL page!%S) of virtual memory\
	.ASCII	\ were used to buffer the intermediate code.\
20$:
MAC$AB_SYP_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\There !AC !SL page!%S of symbol table space allocated\
	.ASCII	\ to hold !SL non-local and !SL local symbols.\
20$:
MAC$AB_OBSR_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!SL source line!%S !AC read in Pass 1, producing\
	.ASCII	\ !SL object record!%S in Pass 2.\
20$:
MAC$AB_MCD_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!SL page!%S of virtual memory !AC used to define \
	.ASCII	\!SL macro!%S.\
20$:
MAC$AB_CMD_FAO::
	.LONG	20$-10$,10$
10$:	.ASCII	\!AD\
20$:
;
; STRINGS FOLLOWING DESCRIBE THE DIFFERENT TIMES KEPT BY ASSEMBLER
;
MAC$S_IND_INI:
	.ASCIC	/Initialization/
MAC$S_IND_CMD:
	.ASCIC	/Command processing/
MAC$S_IND_P1:
	.ASCIC	/Pass 1/
MAC$S_IND_SSORT:
	.ASCIC	/Symbol table sort/
MAC$S_IND_P2:
	.ASCIC	/Pass 2/
MAC$S_IND_SYOUT:
	.ASCIC	/Symbol table output/
MAC$S_IND_PSY:
	.ASCIC	/Psect synopsis output/
MAC$S_IND_CRF:
	.ASCIC	/Cross-reference output/
MAC$S_IND_TOT:
	.ASCIC	/Assembler run totals/
;
; POINTERS TO ABOVE STRINGS AND TIME DATA WORDS FOR STATISTICS OUTPUT
;
MAC$AW_IND_NAMS::
	.WORD	MAC$S_IND_INI
	.WORD	MAC$S_IND_CMD
	.WORD	MAC$S_IND_P1
	.WORD	MAC$S_IND_SSORT
	.WORD	MAC$S_IND_P2
	.WORD	MAC$S_IND_SYOUT
	.WORD	MAC$S_IND_PSY
	.WORD	MAC$S_IND_CRF
	.WORD	MAC$S_IND_TOT
	.WORD	0

MAC$AW_RNT_PTRS::
	.WORD	MAC$GQ_RNT_INI
	.WORD	MAC$GQ_RNT_CMD
	.WORD	MAC$GQ_RNT_P1
	.WORD	MAC$GQ_RNT_SRT
	.WORD	MAC$GQ_RNT_P2
	.WORD	MAC$GQ_RNT_SYO
	.WORD	MAC$GQ_RNT_PSY
	.WORD	MAC$GQ_RNT_CRF
	.WORD	MAC$GQ_RNT_TOT

MAC$AW_TIM_PTRS::
	.WORD	MAC$GQ_TIM_INI
	.WORD	MAC$GQ_TIM_CMD
	.WORD	MAC$GQ_TIM_P1
	.WORD	MAC$GQ_TIM_SRT
	.WORD	MAC$GQ_TIM_P2
	.WORD	MAC$GQ_TIM_SYO
	.WORD	MAC$GQ_TIM_PSY
	.WORD	MAC$GQ_TIM_CRF
	.WORD	MAC$GQ_TIM_TOT

;
; TABLES OF MESSAGE AND TABLE POINTERS FOR USE WITH CROSS-REFERENCE
; OUTPUT.
;
;
; POINTER TO CREF HEADER MESSAGES (THE ONES SURROUNDED BY BOXES).
;
MAC$AL_CRF_TB1::
	.LONG	MAC$AB_CRF_HDR		;SYMBOLS
	.LONG	MAC$AB_CRF_HDM		;MACROS
	.LONG	MAC$AB_CRF_HDO		;OPCODES
	.LONG	MAC$AB_CRF_HDD		;DIRECTIVES
	.LONG	MAC$AB_CRF_HDG		;REGISTERS
;
; POINTER TO CREF SECONDARY HEADER MESSAGES (NAME, VALUE, REFERENCES...)
;
MAC$AL_CRF_TB2::
	.LONG	MAC$AB_CRF_HD1		;SYMBOLS
	.LONG	MAC$AB_CRF_HD2		;MACROS
	.LONG	MAC$AB_CRF_HD3		;OPCODES
	.LONG	MAC$AB_CRF_HD4		;DIRECTIVES
	.LONG	MAC$AB_CRF_HD5		;REGISTERS
;
; POINTER TO CREF SECONDARY HEADER MESSAGES (NAME, VALUE, REFERENCES...)
; FOR WIDE COLUMN LISTINGS
;
MAC$AL_CRF_TB2W::
	.LONG	MAC$AB_CRF_HD1W		;SYMBOLS
	.LONG	MAC$AB_CRF_HD2W		;MACROS
	.LONG	MAC$AB_CRF_HD3		;OPCODES
	.LONG	MAC$AB_CRF_HD4		;DIRECTIVES
	.LONG	MAC$AB_CRF_HD5		;REGISTERS
;
; POINTERS TO CREF CONTROL BLOCKS
;
MAC$AL_CRF_TB3::
	.LONG	MAC$AL_CRFSYCTB		;SYMBOLS
	.LONG	MAC$AL_CRFMCCTB		;MACROS
	.LONG	MAC$AL_CRFOPCTB		;OPCODES
	.LONG	MAC$AL_CRFDRCTB		;DIRECTIVES
	.LONG	MAC$AL_CRFRGCTB		;REGISTERS
;
; DEFS_REFS OR VALS_REFS INDICATOR FOR EACH CREF
;
MAC$AB_CRF_TB4::
	.BYTE	CRF$K_DEFS_REFS		;SYMBOLS
	.BYTE	CRF$K_DEFS_REFS		;MACROS
	.BYTE	CRF$K_VALS_REFS		;OPCODES
	.BYTE	CRF$K_VALS_REFS		;DIRECTIVES
	.BYTE	CRF$K_VALS_REFS		;REGISTERS
;
; TABLE OF COUNTERS OF # OF CREFS IN EACH CREF
;
MAC$AL_CRF_TB5::
	.LONG	MAC$GL_CRF_CNT		;SYMBOLS	
	.LONG	MAC$GL_CRF_MCNT		;MACROS
	.LONG	MAC$GL_CRF_OCNT		;OPCODES
	.LONG	MAC$GL_CRF_DCNT		;DIRECTIVES
	.LONG	MAC$GL_CRF_RCNT		;REGISTERS
	.LONG	0			;ALL DONE
;
; FINALLY, THE BIT NUMBERS TO CHECK IN CRF_FLG
;
MAC$AB_CRF_TB6::
	.BYTE	CRF$V_SYMBOLS		;SYMBOLS
	.BYTE	CRF$V_MACROS		;MACROS
	.BYTE	CRF$V_OPCODES		;OPCODES
	.BYTE	CRF$V_DIR		;DIRECTIVES
	.BYTE	CRF$V_REGISTERS		;REGISTERS
;
; Bit number to test in control flags word for wide column listing
;
MAC$AL_CRF_TB7::
	.LONG	FLG$V_SYM2COL		; Symbols
	.LONG	FLG$V_MAC2COL		; Macros
	.LONG	0			; Opcodes
	.LONG	0			; Directives
	.LONG	0			; Registers
;
; Table of KEY1TABLE entries for narrow column listings
;
MAC$AL_CRF_TB8::
	.LONG	SYMBOLFIELD		; Symbols
	.LONG	MACROFIELD		; Macros
;
; Table of KEY1TABLE entries for wide column listings
;
MAC$AL_CRF_TB9::
	.LONG	SYMBOLFIELD_31		; Symbols
	.LONG	MACROFIELD_31		; Macros

	.END
