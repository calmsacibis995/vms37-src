	$BEGIN	RMS0DISC,010,F$RMSCLOSE0,<DISPATCH FOR DISCONNECT OPERATION>
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; FACILITY: RMS32
;
; ABSTRACT:
;		This routine is the highest level control
;		routine to perform the $DISCONNECT function.
;
;
; ENVIRONMENT:
;		STAR processor running STARLET EXEC.
;
; AUTHOR: L F Laverdure,	 CREATION DATE: 1-Apr-1977
;
; MODIFIED BY:
;
;	V02-010	MCN0001		Maria del C. Nasr	29-Jul-1981
;		Rename entry point to RMS$$ to support long branches.
;
;	V02-009	CDS0001		C D Saether		26-Feb-1981
;		Use RM$EX_NIRAB_SHR exit.
;
;	V02-008	REFORMAT	Frederick E. Deen, Jr.	    28-Jul-1980
;		This code was reformatted to adhere to RMS standards
;
;	V007	RAN0003	R A NEWELL	9-Nov-1978
;		File sharing code enhancements
;
;--


	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

;
; MACROS:
;

	$IFBDEF
	$IRBDEF
	$DPSECT

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;


	.SBTTL	RMS$$DISCONNECT - COMMON $DISCONNECT SETUP AND DISPATCH ROUTINE

;++
; RMS$$DISCONNECT - Common $DISCONNECT setup and dispatch
;
; This routine performs common RAB function setup followed
; by dispatch to organization-dependent $DISCONNECT code.
;
; CALLING SEQUENCE:
;
;	Entered from EXEC as a result of user's calling SYS$DISCONNECT
;	(e.g., by using the $DISCONNECT macro)
;
; INPUT PARAMETERS:
;
;	AP	User's argument list addr
;
; IMPLICIT INPUTS:
;
;	The contents of the RAB and RELATED IRAB and IFAB.
;
; OUTPUT PARAMETERS:
;
;	R1	Destroyed
;	R0	STATUS code
;
; IMPLICIT OUTPUTS:
;
;	All BDB'S and buffers for this stream are released, and the
;	IRAB and ASB (if any) are deallocated.
;	RAB$L_STS and RAB$L_STV reflect the status of the disconnect.
;	if successful, RAB$W_ISI is zeroed.
;
;	A completion AST is queued if specified in the user arglist.
;
; COMPLETION CODES:
;
;	Standard RMS (see functional spec for list).
;
; SIDE EFFECTS:
;
;	None
;
;--


	$ENTRY	RMS$$DISCONNECT
	$TSTPT	DISCON0
	$RABSET					; do common setup with no
						;  specific checks - returns
						;  to user on error
	CSB	#IRB$V_ASYNC,(R9)		; force synchronous operation
						;  in order to avoid problem
						;  with ASYNC arglist in
						;  deallocated asb!
;
; Dispatch to org-dependent code
;

	PUSHAB	W^RM$EX_NIRAB_SHR		; return PC to STACK
						;  (i.e., to fake a BSBW)
	BBC	#IRB$V_PPF_IMAGE,(R9),10$	; branch if not INDIRECT PPF
	MOVAB	W^RM$EXRMS,(SP)			; take structured exit
10$:	CASE	TYPE=B,SRC=IFB$B_ORGCASE(R10),-	; and dispatch
	DISPLIST=<RM$DISCONNECT1,-
		RM$DISCOMMONSUC,RM$DISCONNECT3>
	BRW	RM$DISCOMMONSUC			; DISCONNECT for unknown org

	.END
