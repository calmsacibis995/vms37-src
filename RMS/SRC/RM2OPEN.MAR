	$BEGIN	RM2OPEN,013,F$RMSOPEN2,<RELATIVE SPECIFIC OPEN>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: RMS32
;
; Abstract:
;	this module provides the organization-specific
;	open processing for relative files.
;
; Environment:
;		star processor running starlet exec.
;
; Author: L F Laverdure,	 creation date: 10-OCT-1977
;
; Modified By:
;
;	V02-013	CDS0002		C Saether		 5-Feb-1982
;		Back out V02-012.  GBC is now a record attribute.
;
;	V02-012	CDS0001		C Saether		 3-Jan-1982
;		Return GBC field from prologue to FAB.
;		Fix comment fields.
;
;	V02-011	REFORMAT	Keith B. Thompson	29-Jul-1980
;
;	V010	RAS0002		R A Schaefer	27-Nov-1979	09:30
;		allow open on any device (i.e. magtape) for bio access.
;
;	V009	JAK0020		J A Krycka	11-Sep-1979	10:00
;		remove network code.
;
;	V008	CDS0010		C Saether	24-Jul-1979	14:25
;		remove reference to IFB$W_BKS_BYTES and IFB$W_BKS_RECS
;
;	V007	RAN0003		R A Newell	20-Dec-1978	11:20
;		file sharing code enhancements
;
; Revision History:
;
;	W Koenig,	    19-Dec-1978   8:50	; disallow ppf open
;	L F Laverdure,      19-Oct-1978  16:21	; make file sharing mods
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$BDBDEF
	$FABDEF
	$IFBDEF
	$PLGDEF
	$RMSDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RM$OPEN2 - PROCESS RELATIVE FILE PROLOG

;++
;
;  RM$OPEN2	-
;
;	this routine performs the file open functions that are
;	specific to the relative file organization, including:
;
;	1  -  verify inter-process record locking not specified
;	      since not yet implemented
;	2  -  reading in the prolog and setting the ebk,dvbn,
;	      and mrn ifab fields based upon its contents.
;	3  -  setting the mrn fab field.
;
; Calling sequence:
;
;	entered via case branch from RMS$OPEN. returns by
;	jumping to RM$COPRTN.
;
; Input Parameters:
;
;	R11	impure area address
;	R9	ifab address
;	R8	fab address
;
; Implicit Inputs:
;
;	the contents of the ifab
;
; Output Parameters:
;
;	R0		status code
;	R10		ifab addr
;	R1-R5,AP	destroyed
;
; Implicit Outputs:
;
;	various fields in the ifab and fab are initialized.
;
; Completion Codes:
;
;	standard rms, in particular suc,plg,shr,rpl, and ver.
;
; Side Effects:
;
;	may wait quite some time for prolog to become
;	free initially. leaves prolog locked.
;
;--


RM$OPEN2::

;
;  make sure this isn't an open of a ppf file
;

	BBS	#FAB$V_PPF,-		; branch if it is
		FAB$L_FOP(R8),ERRORG
	TSTB	IFB$B_BKS(R9)		; make sure bks non-zero
	BEQL	ERRIFA			; if yes, is error
	BITB	#FAB$C_REL,-		; really relative?
		IFB$B_RFMORG(R9)
	BEQL	EXIT			; aha - a bogus seq file posing
					; as relative for sharing
;
; if bio access, then prolog read is not required.
;

	BBS	#IFB$V_BIO,-		; leave successfully
		IFB$B_FAC(R9),SEXIT

;
; read and process prolog
;

	MOVL	R9,R10			; set ifab addr
	$CACHE	VBN=#1,-		; read the prolog
		SIZE=#512,-		; (R5=buffer addr)
		FLAGS=LOCK,-
		ERR=ERRRPL

	BSBW	RM$CHKSUM		; validate its checksum
	BLBC	R0,EXIT			; get out on error
	CMPW	PLG$W_VER_NO(R5),-	; supported version?
		#PLG$C_VER_NO
	BNEQ	ERRPLV			; branch if not

;
; set up ifab values
;

	MOVL	PLG$L_EOF(R5),-		; copy eof vbn
		IFB$L_EBK(R9)
	BSBW	RM$UPD_SIFB_EOF		; update ebk in sifab
	MOVZWL	PLG$W_DVBN(R5),-	; copy vbn of first data bucket
		IFB$L_DVBN(R9)
	MOVL	PLG$L_MRN(R5),-		; copy max. record number
		IFB$L_MRN(R9)
	CLRW	IFB$W_FFB(R9)		; set blk offset=0

;
; set mrn, gbc in fab
;

SET:	MOVL	IFB$L_MRN(R9),-		; set mrn
		FAB$L_MRN(R8)
SEXIT:	RMSSUC				; show success
EXIT:	BRW	RM$COPRTN		; & rejoin common open code
					; note: the bdb will
					; be released there


;++
; handle errors
;--
;
;--

ERRORG:	$PSECT_BR	L$RMS2
	RMSERR	ORG			; trying to open a ppf
	BRB	ERRXIT
	$PSECT_RESTORE
ERRRPL:	$PSECT_BR	L$RMS2
	RMSERR	RPL			; prolog read error

;
; (stv has ss error code)
;

ERRXIT:	BRW	RM$COPRTN		; go clean up
	$PSECT_RESTORE

;

ERRPLV:	$PSECT_BR	L$RMS2
	RMSERR	PLV			; unsupported prolog version
	BRB	ERRXIT
	$PSECT_RESTORE

;

ERRIFA:	$PSECT_BR	L$RMS2
	MOVL	#RMS$_BKS,FAB$L_STV(R8)	; set secondary error info
	RMSERR	IFA			; illegal file attributes
	BRB	ERRXIT
	$PSECT_RESTORE

	.END
