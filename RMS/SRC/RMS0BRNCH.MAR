	$BEGIN	RMS0BRNCH,006,$RMS0BRANCH,<PSEUDO ENTRY PTS. TO RESOLVE BRANCHING>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this routine defines the following entry points
;			rm$errorg
;			rms$create
;			rms$connect
;			rms$display
;			rms$extend
;			rms$free
;			rms$flush
;			rms$open
;			rms$release
;			rms$nxtvol
;			rms$space
;			rms$setdd
;			rms$truncate
;			rms$setdfprot
;		and merely does a branch to the actual entry points in
;		the correct modules.  the correct entry point names are
;		identical, with the exception of having two, instead of
;		one, '$' in the name.
;		this kludge is necessary to resolve out of range branches
;		which occur due to the introduction of the isam code.
;
; Environment:
;		star processor running starlet exec.
;
; Author: R A Newell,		 creation date: 18-SEP-1978
;
; Modified By:
;
;	V02-006	TMK0035		Todd M. Katz	22-Dec-1981
;		Fix three broken branches by changing BRWs (to RMS$$FLUSH+02,
;		RMS$$FREE+02, and RMS$$RELEAS+02) to JMPs.
;
;	V02-005	CDS0001		C Saether	15-Dec-1981
;		Fix broken branch.
;
;	V02-004	TMK0022		Todd M. Katz	14-Dec-1981
;		Add	RM$ERRORG: BRW	RM$$ERRORG 
;		to fix several broken branches.
;
;	V02-003	KPL0001		P Lieberwirth	29-Jul-1981
;		Rename PSECT so module is earlier in RMS.  This resolves
;		broken branches in dispatching due to additional ISAM code.
;
;		Also add entry points for routines:
;
;			rms$close
;			rms$disconnect
;			rms$enter
;			rms$modify
;			rms$parse
;			rms$remove
;			rms$rename
;			rms$rewind
;			rms$rmsrundwn
;			rms$search
;
;	V02-002	REFORMAT	C Saether	30-Jul-1980	23:32
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;
;
;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	PSEUDO ENTRY POINTS FOR FURTHER BRANCHING

;

RM$ERRORG:: BRW	RM$$ERRORG		; go to real routine

;

	$ENTRY	RMS$CLOSE		; pseudo entry for close
	BRW	RMS$$CLOSE+2		; go to real routine

;

	$ENTRY	RMS$CREATE		; pseudo entry for create
	BRW	RMS$$CREATE+2		; go to real routine

;

	$ENTRY	RMS$DISCONNECT		; pseudo entry for disconnect
	BRW	RMS$$DISCONNECT+2	; go to real routine

;

	$ENTRY	RMS$DISPLAY		; pseudo entry for display
	BRW	RMS$$DISPLAY+2		; go to real routine

;

	$ENTRY	RMS$ENTER		; pseudo entry for enter
	BRW	RMS$$ENTER+2		; go to real routine

;

	$ENTRY	RMS$ERASE		; pseudo entry for erase
	BRW	RMS$$ERASE+2		; go to real routine

;

	$ENTRY	RMS$EXTEND		; pseudo entry for extend
	BRW	RMS$$EXTEND+2		; go to real routine

;

	$ENTRY	RMS$MODIFY		; pseudo entry for modify
	BRW	RMS$$MODIFY+2		; go to real routine

;

	$ENTRY	RMS$OPEN		; pseudo entry for open
	BRW	RMS$$OPEN+2		; go to real routine

;

	$ENTRY	RMS$PARSE		; pseudo entry for parse
	BRW	RMS$$PARSE+2		; go to real routine

;

	$ENTRY	RMS$REMOVE		; pseudo entry for remove
	BRW	RMS$$REMOVE+2		; go to real routine

;

	$ENTRY	RMS$RENAME		; pseudo entry for rename
	BRW	RMS$$RENAME+2		; go to real routine

;

	$ENTRY	RMS$REWIND		; pseudo entry for rewind
	BRW	RMS$$REWIND+2		; go to real routine

;

	$ENTRY	RMS$RMSRUNDWN		; pseudo entry for rmsrundwn
	BRW	RMS$$RMSRUNDWN+2	; go to real routine

;

	$ENTRY	RMS$SEARCH		; pseudo entry for search
	BRW	RMS$$SEARCH+2		; go to real routine

;

	$ENTRY	RMS$CONNECT		; pseudo entry for connect
	BRW	RMS$$CONNECT+2		; go to real routine

;

	$ENTRY	RMS$FREE		; pseudo entry for free
	JMP	RMS$$FREE+2		; go to real routine

;

	$ENTRY	RMS$FLUSH		; pseudo entry for flush
	JMP	RMS$$FLUSH+2		; go to real routine

;

	$ENTRY	RMS$RELEASE		; pseudo entry for release
	JMP	RMS$$RELEASE+2		; go to real routine

;

	$ENTRY	RMS$NXTVOL		; pseudo entry for nxtvol
	BRW	RMS$$NXTVOL+2		; go to real routine

;

	$ENTRY	RMS$SPACE		; pseudo entry for space
	BRW	RMS$$SPACE+2		; go to real routine

;

	$ENTRY	RMS$SETDDIR		; pseudo entry for setddir
	JMP	RMS$$SETDDIR+2		; go to real routine

;

	$ENTRY	RMS$TRUNCATE		; pseudo entry for truncate
	BRW	RMS$$TRUNCATE+2		; go to real routine

;

	$ENTRY	RMS$SETDFPROT		; pseudo entry for setdfprot
	JMP	RMS$$SETDFPROT+2	; go to real routine
	.END				; end routine
