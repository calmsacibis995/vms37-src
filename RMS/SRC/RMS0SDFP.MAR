	$BEGIN	RMS0SDFP,006,L$RMS0MISC,<SET DEFAULT FILE PROTECTION>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this routine sets the default file protection in
;		the process i/o control page.
;
; Environment:
;		star processor running starlet exec.
;
; Author: l f laverdure,	 creation date: 22-APR-1977
;
; Modified By:
;
;	V02-006	REFORMAT	P S Knibbe	25-Jul-1980
;
;	V005	RAN0002		R A Newell	18-SEP-1978	09:19
;		rms32 isam modification.  redefinition of entry point to
;		resolve out of range branches.
;
; 01	-
;--


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$PSLDEF
	$RMSDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RMS$SETDFPROT - SET DEFAULT FILE PROTECTION ROUTINE

;++
; RMS$SETDFPROT - Set default file protection
;
;  this routine optionally returns and/or sets the value of the
;  default file protection word in the process i/o control page.
;
; Calling sequence:
;
;	entered from exec as a result of user's calling sys$setdfprot
;
; Input Parameters:
;
;	ap	user's argument list addr
;		first argument gives the address of the new default file
;		protection word if any, else 0.
;		contains a second argument optionally giving the address of
;		a word in which the current default protection may be returned.
;
; Implicit Inputs:
;
;
; Output Parameters:
;
;	r1	destroyed
;	r0	status code
;	(note: this routine uses r0-r3 as saved in the system vector entry mask)
;
; Implicit Outputs:
;
;	optionally, pio$gw_dfprot set to the value of the input word
;	and/or the current default protection is returned to the caller
;
; Completion Codes:
;
;	standard rms, in particular, suc and ial.
;
; Side Effects:
;
;	none
;
;--


	$ENTRY	RMS$$SETDFPROT
	$TSTPT	SETDFPROT

;
; see if the caller wants the protection returned
;

	RMSERR	IAL			; anticipate error
	MOVL	4(AP),R2		; get 1st argument
	BEQL	3$			; branch if no value to set
	IFNORD	#2,(R2),EXIT		; is the word readable?
	MOVW	(R2),R3			; save new value
3$:	MOVL	8(AP),R1		; possible address of return length
	BEQL	5$			; if caller doesn't want it, o.k.
	IFNOWRT	#2,(R1),EXIT		; writeable?
	MOVW	@#PIO$GW_DFPROT,(R1)	; yes, so return it to the caller
5$:	TSTL	R2			; was there a new value?
	BEQL	7$			; branch if not
	MOVW	R3,@#PIO$GW_DFPROT	; else copy it over
7$:	RMSSUC
EXIT:
	SSB	#16,R0
	RET
	.END
	.END
