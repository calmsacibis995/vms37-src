	$BEGIN	RMS0ERASE,007,F$RMS0MISC,<DELETE FILE OPERATION>

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this routine is the highest level control
;		routine to perform the $erase function.
;
; Environment:
;		star processor running starlet exec.
;
; Author:	L F Laverdure,	 creation date: 27-SEP-1977
;
; Modified By:
;
;	V02-007	MCN0001		Maria del C. Nasr	29-Jul-1981
;		Rename entry point to RMS$$ to support long branches.
;
;	V006	REFORMAT	Ken Henderson	30-JUL-1980	7:10
;		the code was reformatted
;
; Revision History:
;
;		J A Krycka,	08-AUG-1978  18:24
; 01	-
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$IFBDEF
	$DEVDEF
	$NAMDEF
	$FWADEF
	$FIBDEF
	$IODEF
	$RMSDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RMS$$ERASE - ERASE FILENAME STRING ROUTINE

;++
; RMS$$ERASE
;
;	L F Laverdure,   22-MAR-1978  15:36
;
; the filename, issues the acp qio function to delete the file, and
; then deletes the ifab.
;
; Calling sequence:
;
;	entered from exec as a result of user's calling sys$erase
;
; Input Parameters:
;
;	ap	user's argument list addr
;
; Implicit Inputs:
;
;	the contents of the fab (fna, fns, dna, dns) and related nam block.
;
; Output Parameters:
;
;	r1	destroyed
;	r0	status code
;
; Implicit Outputs:
;
;	the sts and stv fields of the fab are output along with the
;	various fields of the nam block (dvi, fid, did, esl and the buffer at esa,
;	 rsl and the buffer at rsa)
;	 to reflect the status of the $erase operation. (see rms functional
; 	spec for a complete list.)
;
;	a completion ast is queued if specified in the user arglist.
;
; Completion Codes:
;
;	standard rms (see functional spec for list).
;
; Side Effects:
;
;	none
;
;--

	$ENTRY	RMS$$ERASE
	$TSTPT	ERASE
	BSBW	RM$FSETI		; create an ifab

;
; returns to user on error
;

	BSBW	RM$XPFN			; expand file name
	BLBC	R0,CLEANUP		; get out on error
	TSTB	FWA$B_ESCFLG(R10)	; ppf indicated?
	BNEQ	ERRIOP			; branch if yes
	BBS	#FWA$V_WILDCARD,(R10),ERRWLD; branch if wild card seen
	BSBW	RM$ASSIGN		; assign channnel to device
	BLBC	R0,CLEANUP
	BBS	#IFB$V_DAP,(R9),NTERASE	; branch if network file oper
	BBC	#DEV$V_RND,IFB$L_PRIM_DEV(R9),ERRIOP; branch if not disk
	BSBW	RM$SETDID		; lookup the directory name
	BLBC	R0,CLEANUP

;
;NOTE: R7 SET TO NAM BLK ADDR
;

	TSTL	FIB$W_DID+FWA$T_FIBBUF(R10); did specified?
	BNEQ	DELETE			; branch if yes (implies fid=0)
	.IF	NE $$RMSTEST&$$RMS_TBUGCHK
	TSTL	FIB$W_FID+FWA$T_FIBBUF(R10); fid specified?
	BEQL	ERRBUG			; branch if none
	.ENDC

;
;  since fid is set, there must be a nam blk.  set did from the nam blk.
;

	MOVW	NAM$W_DID(R7),FIB$W_DID_NUM+FWA$T_FIBBUF(R10)
	BEQL	DELETE			; branch if none
	MOVL	NAM$W_DID_SEQ(R7),FIB$W_DID_SEQ+FWA$T_FIBBUF(R10)
	SSB	#FIB$V_FINDFID,FIB$W_NMCTL+FWA$T_FIBBUF(R10); flag find by file id

;
;  set up the qio parameters and issue the delete qio
;

DELETE:	CLRQ	-(SP)			; p6=p5=0
	BSBW	RM$FCP_P4_P2		; build p4 thru p2

;
; (resultant name, name string)
;

	MOVZWL	#IO$_DELETE!IO$M_DELETE,R0; function code
	BSBW	RM$FCPFNC		; do the delete
	BLBC	R0,ERRDLT		; branch on error
	BSBW	RM$FILLNAM		; fill in nam blk, if any
CLEANUP:
	BRW	RM$CLSCU		; all done - evaporate ifab

;++
;
;  process network erase function
;
;--

NTERASE:
	$PSECT_BR	NF$NETWORK
	BSBW	NT$ACCESS		; establish logical link with fal
	BLBC	R0,20$			; branch on failure
	BSBW	NT$ERASE		; erase file at remote node
	BLBC	R0,10$			; branch on failure
	BSBW	RM$FILLNAM		; fill in nam blk, if any
10$:	BRW	RM$CLSCU		; all done - evaporate ifab
20$:	BRW	ERRDLT			; branch aid
	$PSECT_RESTORE

;++
;  process errors
;
;--

ERRIOP:	$PSECT_BR	L$RMS0
	RMSERR	IOP			; can't delete non-disk file
CLSCU:	BRW	RM$CLSCU		; go evaporate ifab
	$PSECT_RESTORE

;

ERRBUG:	RMSTBUG	FTL$_NODIDORFID		; no did or fid

;

ERRDLT:	$PSECT_BR	L$RMS0
	RMSERR	MKD,R1
	BSBW	RM$MAPERR
	BRB	CLSCU
	$PSECT_RESTORE

;

ERRWLD:	$PSECT_BR	L$RMS0		; wild card operation not supported
	RMSERR	WLD
	BRB	CLSCU
	$PSECT_RESTORE
	.END
