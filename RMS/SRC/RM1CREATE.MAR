	$BEGIN	RM1CREATE,017,F$RMSOPEN1C,<SEQUENTIAL-SPECIFIC CREATE>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;
;	this routine performs the sequential file
;	organization-specific create processing.
;
; Environment:
;		star processor running starlet exec.
;
; Author: L F Laverdure,	 Creation Date: 11-MAY-1977
;
; Modified By:
;
;	V02-017	CDS0001		C Saether	31-Aug-1981
;		Always set NORECLK if not disk (RND).
;
;	V02-016	RAS0020		Ron Schaefer	6-Aug-1981
;		Correct fixed record length limit for magtape.
;		ANY size record is permitted as long as the blocks
;		are larger than 18 bytes.
;
;	V02-015	RAS0016		Ron Schaefer	6-Aug-1981
;		allow stream files to any device;  actual GET/PUT logic
;		is prepared to ignore the format if necessary.
;
;	V014	REFORMAT	D M WALP	24-JUL_1980
;
;	V013	CDS0021		C SAETHER	26-JUL-1979	22:30
;		take file sharing checks out of rm$create1
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$FABDEF
	$IFBDEF
	$DEVDEF
	$RMSDEF

;
; Equated Symbols:
;

	FOP=FAB$L_FOP*8			; bit offset to fop

;
; Own Storage:
;


	.SBTTL	RM$CREATE1 - SEQUENTIAL CREATE ROUTINE

;++
; RM$CREATE1
;
;	RM$CREATE1
;
;	this routine performs all of the file create
;	functions that are specific to the sequential
;	file organization, including:
;
;	1.  checking that write-sharing has not been specified
;	2.  allowing user to override default block size for magtape
;	3.  performing eof positioning to start of file
;	4.  checking xab chain validity
;	5.  calling the common create routine
;
; Calling sequence:
;
;	entered via case branch from rm$open
;	returns by jumping to rm$createxit
;
; Input Parameters:
;
;	r11	impure area address
;	r10	fwa address
;	r9	ifab address
;	r8	fab address
;
; Implicit Inputs:
;
;	the contents of the fab, ifab, & fwa.
;
; Output Parameters:
;
;	r0	status code
;	r1-r7	destroyed
;
; Implicit Outputs:
;
;	various fields in the ifab & fab are initialized.
;
; Completion Codes:
;
;	standard rms
;
; Side Effects:
;
;	none
;
;--


RM$CREATE1::
	$TSTPT	CREATE1

;
; providing interlocking
;

	BBS	#DEV$V_RND,IFB$L_PRIM_DEV(R9),-
		SETBL1			; branch if disk

	SSB	#IFB$V_NORECLK, (R9)	; never do locking if not disk.
	BICB2	#FAB$M_BLK,IFB$B_RAT(R9); clear blk for unit rec devices
	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R9),-
		SETBLS			; branch if not mt

;
; force 'records can't cross block boundaries' and
; check for default block size override for magtape
;

	MOVW	FAB$W_BLS(R8),R1	; get block size
	BEQL	20$			; branch if not  speced
	CMPW	R1,#18			; is block size ge min.
	BGEQU	10$			; branch if yes
	MOVW	#18,R1			; minimum record size
10$:	MOVW	R1,IFB$W_DEVBUFSIZ(R9)	; set device buffer size

20$:	SSB	#IFB$V_ANSI_D,(R9)	; flag as ansi

;
; round up bls & return it
;

SETBLS:
	ADDW2	#3,IFB$W_DEVBUFSIZ(R9)
	BICW2	#3,IFB$W_DEVBUFSIZ(R9)
SETBL1:	MOVW	IFB$W_DEVBUFSIZ(R9),FAB$W_BLS(R8)
	BBC	#DEV$V_SPL,IFB$L_AS_DEV(R9),-
		SETEOF			; branch if device not spooled
	MOVW	IFB$W_ASDEVBSIZ(R9),-
		FAB$W_BLS(R8)		; return assigned device buf size

;
; set eof block to vbn 1 and first free byte to 0.
;

SETEOF:	INCL	IFB$L_EBK(R9)		; eof at vbn 1

;
; if fixed record format and 'blk' set in rat,
; make sure record size is less than 1 block
;

	CMPB	IFB$B_RFMORG(R9),-
		#FAB$C_FIX		; fixed rfm?
	BNEQ	CHKXAB			; branch if not
	BBC	#FAB$V_BLK,IFB$B_RAT(R9),-
		CHKXAB			; branch if 'blk' not speced
	CMPW	IFB$W_MRS(R9),-
		IFB$W_DEVBUFSIZ(R9)	; does record fit?
	BGTRU	ERRMRS			; branch if not

;++
;
;  entry point for block i/o create for unknown file org
;
;--

RM$BIO_CREATE::

;
;  process allocation xab if present, and set deq and rtdeq
;

CHKXAB:
	BSBW	RM$SETALLOC
	BLBC	R0,EXIT

;
; call the common create file routine
;

	BSBW	RM$CREATECOM

;
; note that file is positioned at eof in the ifab
; so that connect will be set up for $put.
;

	SSB	#IFB$V_EOF,(R9)		; flag eof
EXIT:	BRW	RM$CREATEXIT


;
; handle errors
;

ERRSHR:	$PSECT_BR	L$RMS1
RM$CRE_ERRSHR::
	BSBB	ERROR			; write sharing specified
	RMSERR_WORD	SHR
	$PSECT_RESTORE

;

ERRRFM:	$PSECT_BR	L$RMS1
RM$CRE_ERRRFM::
	BSBB	ERROR			; rfm not udf,fix,var, or vfc
	RMSERR_WORD	RFM		; for non-disk device
	$PSECT_RESTORE

;

ERRMRS:	$PSECT_BR	L$RMS1
RM$CRE_ERRMRS::
	BSBB	ERROR			; fixed record length <18
	RMSERR_WORD	MRS		; for magtape or > bls and 'blk' set

;

ERROR:	MOVZWL	@(SP)+,R0		; pick up error code
	BRW	RM$CREATEXIT		; and get out
	$PSECT_RESTORE
	.END
