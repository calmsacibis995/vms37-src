;	$begin	rmsusr,V02-040
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;	rms user structure definitions
;
;	Modified By:
;
;	V02-040	RAS0073		Ron Schaefer		 2-Mar-1982
;		Add FAB$B_DSBMSK, to support $TRNLOG translation table
;		disable mask support.
;
;	V02-039	CDS0003		C Saether		 5-Jan-1982
;		Add XAB$W_GBC and XAB$W_VERLIMIT to FHC XAB.
;		Make NAM$C_MAXRSS and NAM$C_MAXRSSLCL both 252.
;
;	V02-038 DMW0003		David Michael Walp	21-Jan-82
;		Remove NAM$B/L_QUOTED, 17 ANSI "a" character filenames
;
;	V02-037	KBT0001		Keith B Thompson	 8-Jan-1982
;		Remove XAB$B_COMPAT, change XAB$B_STRUCT to XAB$B_PROLOG
;		in the key xab and add XAB$B_MTACC to the protection xab
;
;	V02-036	TMK0001		Todd M. Katz		 8-Jan-1982
;		Define NAM$V_IFI and NAM$V_SRCHNMF in the field NAM$L_WCC.
;
;	V02-035	CDS0002		C Saether		23-Dec-1981
;		Add FAB$W_GBC field for global buffer count.
;
;	V02-034 LJA0002		Laurie Anderson		20-Dec-1981
;		Re-inserted NAM$C_BLN_DIRWC as equivalant to NAM$C_BLN
;
;	V02-033	CDS0001		C Saether		 4-Nov-1981
;		Change key xab "structure" field to "struct".
;
;	V02-032	RAS0040		Ron Schaefer		26-Oct-1981
;		Add NAM$V_CNCL_DEV bit for concealed devices and
;		NAM$V_ROOT_DIR bit for rooted directories to the
;		NAM$L_FNB field.
;
;	V02-031	PSK0004		Paulina S Knibbe	19-Oct-1981
;		Change the XAB$$B_CMP_BITS to COMPAT and insert the 
;		constants that field can take.
;
;	V02-030	PSK0003		Paulina S Knibbe	14-Sep-1981
;		Make the new key XAB variables shorter so we can
;		keep three column format in map
;
;	V02-029	PSK0002		Paulina S Knibbe	02-Sep-1981
;		Make the KEY XAB long word aligned again.
;
;	V02-028	PSK0001		Paulina S Knibbe	25-Aug-1981
;		Merge in Maria's changes to the KEY XAB.
;
;	V02-027	RAS0028		Ron Schaefer		20-Aug-1981
;		Change FAB$C_STM11 to FAB$C_STM.
;
;	V02-026	JAK0062		J A Krycka		14-Aug-1981
;		Add NOP and RFS fields to the NAM block.
;
;	V02-025 RAS0014		Ron Schaefer		7-Jul-1981
;		Add stream format codes to FAB and stream access code to RAB.
;
;	V02-024	RAS0012		Ron Schaefer		12-Jun-1981
;		Correct the BLISS definition of the XAB protection codes
;		to be relative to the start of the 4-bit protection field.
;
;	V02-023	JAK0059		J A Krycka		11-Jun-1981
;		Multiplex the QUOTED descriptor in the NAM block with the
;		NAME descriptor instead of the DEV descriptor.
;
;	V02-022	MCN0007		Maria del C. Nasr	12-May-1981
;		Use new symbol for old length of backup date and time XAB.
;
;	V02-021	KRM0012		Karl Malik		17-Apr-1981
;		Remove the NAM DWC definitions and extend the NAM block
;		by 40 bytes to provide easy access to various filespec
;		elements of either the expanded name string or the 
;		resultant name string.
;
;	V02-020	MLJ0010		Martin L. Jack		25-Mar-1981
;		Add alternate format file ID in NAM block.
;
;	V02-019 kpl0001		Peter Lieberwirth	31-Dec-1980
;		Include definitions for new ROP bits RRL and REA.
;		Clean up some spelling and format while here.
;
;	V02-018	MCN0004		Maria del C. Nasr	17-Nov-1980
;		Include definition for backup date and time XAB.
;
;	v017	reformat	dave walp	24-JUL-1980
;
;	v016	cds0063		chris saether	7-DEC-1979
;		add rab$w_stv0 and rab$w_stv2 to get at both words of stv
;
;	v015	tmh0001		tim halvorsen	01-NOV-1979
;		add svctx bit to wcc longword definition
;
;	V014	ran0002		r a newell	1-SEP-1978	09:59
;		rms32 isam modification.
;
;	e h marison,	 19-APR-1978  16:20
;	e h marison,	 26-APR-1978  13:08
;	w koenig,	 16-JUN-1978, added dct bit in key xab
;
;	file access block (fab) definitions
;
;
	$STRUCT	FAB

;+++++*****
;   the fields thru ctx must not be modified due to
;   commonality between fab/rab/xab
	F BID,B		; block id
	  C BID,3	; code for fab
	F BLN,B		; block len
	F IFI,W		; internal file index
	V <M
	  ,6		; move to bit 6
	  PPF_RAT,8	; rat value for process-permanent files
	  PPF_IND	; indirect access to process-permanent file
			; (i.e., restricted operations)
	  >
	F FOP,L		; file options
	  V <M
	  ,1		; reserved for asy (not implemented)
	  MXV		; maximize version number
	  SUP		; supersede existing file
	  TMP		; create temporary file
	  TMD		; create temp file marked for delete
	  DFW		; deferred write (rel and idx)
	  SQO		; sequential access only
	  RWO		; rewind mt on open
	  POS		; use next magtape position
	  WCK		; write checking
	  NEF		; inhibit end of file positioning
	  RWC		; rewind mt on close
	  DMO		; dismount mt on close (not implemented)
	  SPL		; spool file on close
	  SCF		; submit command file on close
	  DLT		; delete sub-option 
	  NFS		; non-file structured operation
	  UFO		; user file open - no rms operations
	  PPF		; process permanent file (pio segment)
	  INP		; process-permanent file is 'input'
	  CTG		; contiguous extension
	  CBT		; contiguous best try
	  JNL		; explicit logging (not implemented)
	  RCK		; read checking
	  NAM		; use name block dvi, did, and/or fid fields for open
	  CIF		; create if non-existent
	  UFM		; user file open mode (user if 1, super if 0)
			;  enable only if esc and (ufo or nfs) are also on
			;  (note: this bit must immediately precede esc)
	  ESC		; 'escape' to non-standard function ($modify)
	  TEF		; truncate at eof on close (write-accessed seq. disk file only)
	  OFP		; output file parse (only name type sticky)
	  KFO		; known file open (image activator only release 1)
	  >
	F STS,L		; status
	F STV,L		; status value
	F ALQ,L		; allocation quantity
	F DEQ,W		; default allocation quantity
	F FAC,B		; file access
	  V <M
	  PUT		; put access
	  GET		; get access
	  DEL		; delete access
	  UPD		; update access
	  TRN		; truncate access
	  BIO		; block i/o access
	  BRO		; block and record i/o access
	  EXE		; execute access (caller must be exec or kernel mode,
			;  ufo must also be set)
	  >
	F SHR,B		; file sharing
	  V <M
	  SHRPUT	; put access
	  SHRGET	; get access
	  SHRDEL	; delete access
	  SHRUPD	; update access
	  MSE		; multi-stream connects enabled
	  NIL		; no sharing
	  UPI		; user provided interlocking (allows multiple
			;  writers to seq. files)
	  >
	F CTX,L		; user context
;-----*****
	F RTV,B,,S	; retrieval window size
	F ORG,B		; file organization
	  V <
	   ,4
	   ORG,4
	  >
	  C SEQ,0	; sequential
	  C REL,16	; relative
	  C IDX,32	; indexed
	  C HSH,48	; hashed
	F RAT,B		; record format
	  V <M
	  FTN		; fortran carriage-ctl
	  CR		; lf-record-cr carriage ctl
	  PRN		; print-file carriage ctl
	  BLK		; records don't cross block boundaries
	  >
	F RFM,B		; record format
	  C RFM_DFLT,2	; var len is default
	  C UDF,0	; undefined (also stream binary)
	  C FIX,1	; fixed length records
	  C VAR,2	; variable length records
	  C VFC,3	; variable fixed control
	  C STM,4	; RMS-11 stream (valid only for sequential org)
	  C STMLF,5	; LF stream (valid only for sequential org)
	  C STMCR,6	; CR stream (valid only for sequential org)
	  C MAXRFM,6	; maximum rfm supported
	F JNL,L		; lcb address
	F XAB,L		; xab address
	F NAM,L		; nam block address
	F FNA,L		; file name string address
	F DNA,L		; default file name string addr
	F FNS,B		; file name string size
	F DNS,B		; default name string size
	F MRS,W		; maximum record size
	F MRN,L		; maximum record number
	F BLS,W		; blocksize for tape
	F BKS,B		; bucket size
	F FSZ,B		; fixed header size
	F DEV,L		; device characteristics
	F SDC,L		; spooling device characteristics
	F GBC,W		; Global buffer count
	F DSBMSK,B	; $TRNLOG disable mask
	F ,B		; (spare)
	F ,L		; (spare)
	L BLN		; length of fab
	E

;
;	 record access block (rab) definitions
;
;  there is one rab per connected stream
;  it is used for all communications between the user
;  and rms concerning operations on the stream
;
	$STRUCT RAB

;+++++*****
;  the fields thru ctx cannot be changed due to commonality
;  with the fab
;
	F BID,B		; block id
	  C BID,1	; code for rab
	F BLN,B		; block length
	F ISI,W		; internal stream index
			; (ifi in fab)
	V <M
	  ,6		; move to bit 6
	  PPF_RAT,8	; rat value for process-permanent files
	  PPF_IND	; indirect access to process-permanent file
			; (i.e., restricted operations)
	  >
	F ROP,L		; record options
	  V <M
			; the following bits may be
			; input to various rab-related
			; operations
			;
	  ASY		; asynchronous operations
	  TPT		; truncate put  -  allow sequential put not at
			;   eof, thus truncating file (seq. org only)
			;
			; these next two should be in the byte for bits
			; input to $find or $get, but there is no room there
			;
	  REA		; lock record for read only, allow other readers
	  RRL		; read record regardless of lock
			;
	  UIF		; update if existent
	  MAS		; mass-insert mode
	  FDL		; fast record deletion
	  HSH		; use hash code in bkt
			;
	  EOF		; connect to eof
	  RAH		; read ahead
	  WBH		; write behind
	  BIO		; connect for bio only
	  ,1		; (1 spare)
	  LOA		; use bucket fill percentage
	  LIM		; compare for key limit reached on $get/$find seq. (idx only)
	  ,1		; (1 spare)
			;
			; the following bits are input to
			; $find or $get, (see above also REA and RRL)
			; (separate byte)
			;
	  LOC		; use locate mode
	  WAT		; wait if record not available
	  ULK		; manual unlocking
	  RLK		; allow readers for this locked record
	  NLK		; do not lock record
	  KGE		; key > or =
	  KGT		; key greater than
	  NXR		; get non-existent record
			;
			;  the following bits are terminal qualifiers only
			;  (separate byte)
			;
	  RNE		; read no echo
	  TMO		; use time-out period
	  CVT		; convert to upper case
	  RNF		; read no filter
	  ,1		; spare (for dsablmbx if ever supported)
	  PTA		; purge type ahead
	  PMT		; use prompt buffer
	  CCO		; cancel control o on output
	  >
	  S ROP1,1,B	; various options
	  S ROP2,2,B	; get/find options  (use of this field discouraged
			; due to REA and RRL being in a different byte)
	  S ROP3,3,B	; terminal read options
;
	F STS,L		; status
	F STV,L		; status value
	 S STV0,0,W	; low word of stv
	 S STV2,2,W	; high word of stv
	F RFA,W,3	; record's file address
	  S RFA0,0,L
	  S RFA4,4,W
	F ,W		; (reserved - rms release 1 optimizes stores
			;  to the rfa field to be a move quad, overwriting
			;  this reserved word)
	F CTX,L		; user context
;-----*****
	F ,W		; (spare)
	F RAC,B		; record access
	  C SEQ,0	; sequential access
	  C KEY,1	; keyed access
	  C RFA,2	; rfa access
	  C STM,3	; stream access (valid only for sequential org)
	F TMO,B		; time-out period
	F USZ,W		; user buffer size
	F RSZ,W		; record buffer size
	F UBF,L		; user buffer address
	F RBF,L		; record buffer address
	F RHB,L		; record header buffer addr
	F KBF,L		; key buffer address
	  S PBF,0,L	; prompt buffer addr
	F KSZ,B		; key buffer size
	  S PSZ,0,B	; prompt buffer size
	F KRF,B		; key of reference
	F MBF,B,,S	; multi-buffer count
	F MBC,B		; multi-block  count
	F BKT,L		; bucket hash code, vbn, or rrn
	  S DCT,0,L	; duplicates count on key accessed on alternate key
	F FAB,L		; related fab for connect
	F ,L,1		; (spare)
	L BLN		; length of rab
	E

;
;	 name block field definitions
;
;  the nam block is used to communicate optional
;  filename-related information
;
	$STRUCT NAM

	F BID,B		; block id
	  C BID,2	; code for nam block
	F BLN,B		; block length
;+++++++++++++++++++++++
;  the following 3 fields must not be rearranged relative to each other
;
	F RSS,B		; resultant string area size
	  C MAXRSS,252	; maximum resultant name string size (network)
	  C MAXRSSLCL,252 ;maximum resultant name string size (local)
			;	dev (15+1)
			;	dir (60)
			;	name,type,version (9+3+6+2)
	F RSL,B		; resultant string length
	F RSA,L		; resultant string area address
;-----------------------
	F NOP,B		; Name options (currently not documented)
			; Note: This field is reserved for use by Digital
	V <M		;
	  PWD		; Return password if present in nodespec string
			;  (default is to mask out password from expanded and
			;  resultant name strings and to create a logical name
			;  whose equivalence string is the unaltered nodespec)
	  ROD		; Return optional data if present in taskspec string
			;  (default is to mask out binary data after slash in
			;  taskspec from expanded and resultant name strings)
	  SOD		; Send optional data if present in taskspec string
			;  (default is to ignore optional data in taskspec
			;  string for a task-to-task access function)
	  >		;
	F RFS,B		; Remote file system type (currently not documented)
			; Note: This field is reserved for use by Digital
	  C UFS,0	; Unknown file system for remote file access or
			;  not applicable for local file access or
			;  not applicable for task-to-task operation
	  C RMS11,1	; RMS-11
	  C RMS20,2	; RMS-20
	  C RMS32,3	; RMS-32
	  C FCS11,4	; FCS-11
	  C RT11FS,5	; RT-11 file system
	  C TOPS20FS,7	; TOPS-20 file system
	  C TOPS10FS,8	; TOPS-10 file system
;+++++++++++++++++++++++
;  the following 3 fields must not be rearranged relative to each other
;
	F ESS,B		; espanded string area size
	F ESL,B		; expanded string length
	F ESA,L		; expanded string area address
;-----------------------
	F RLF,L		; related file nam block addr
	F DVI,T,16	; device id
	  C DVI,16	; length of dvi field
;+++++*****
;  the location of the following fields must not
;  be changed due to their commonality with the fib
	F FID,W,3	; file id
	  S FID_NUM,,W	; file number
	  S FID_SEQ,,W	; sequence number
	  S FID_RVN,,W	; relative volume number
	  S FID_RVN,4,B	; alternate format RVN
	  S FID_NMX,,B	; alternate format file number extension
	F DID,W,3	; directory id
	  S DID_NUM,,W	; file number
	  S DID_SEQ,,W	; sequence number
	  S DID_RVN,,W	; relative volume number
	  S DID_RVN,4,B	; alternate format RVN
	  S DID_NMX,,B	; alternate format file number extension
	F WCC,L		; wild card context
	V <M
	  ,16		; the first word is reserved for IFI/ACP context
	  IFI		; the first word contains an IFI
	  ,13		; grow from top down, start at top bit
	  SRCHNMF	; no-more-files has been encountered on a search
	  SVCTX		; save context across search calls
	  >
	F FNB,L		; file name status bits
	V <M
	  EXP_VER	; version was explicit
	  EXP_TYPE	; type was explicit
	  EXP_NAME	; name was explicit
	  WILD_VER	; version contained a wild card
	  WILD_TYPE	; type contained a wild card
	  WILD_NAME	; name contained a wild card
	  EXP_DIR	; directory was explicit
	  EXP_DEV	; device was explicit
	  WILDCARD	; filename string included a wild card
			; (inclusive or of other wild card bits)
	  ,3		; (spares)
	  CNCL_DEV	; concealed device present
	  ROOT_DIR	; root directory present
	  LOWVER	; lower numbered version(s) of file exist(s)
	  HIGHVER	; higher 		"
			;
	  PPF		; process-permanent file referenced indirectly
	  NODE		; filename specification included a nodename
	  QUOTED	; filename spec included a quoted string
	  GRP_MBR	; directory spec was of group-member format
	  WILD_DIR	; directory spec included a wild card
	  DIR_LVLS,3	; number of directory levels (0=ufd only)
	  >
	V <M
	  ,24		; separate byte for wild card directory flags
	  WILD_UFD	; ufd included a wild card
	  WILD_SFD1	; sfd1 included a wild card
	  WILD_SFD2	; sfd2 included a wild card
	  WILD_SFD3	; sfd3 included a wild card
	  WILD_SFD4	; sfd4 included a wild card
	  WILD_SFD5	; sfd5 included a wild card
	  WILD_SFD6	; sfd6 included a wild card
	  WILD_SFD7	; sfd7 included a wild card
	  >
	V <M
	  ,24		; alternate definitions for wild_ufd and wild_sfd1
	  WILD_GRP	; group contained a wild card
	  WILD_MBR	; member contained a wild card
	  >
;-----*****
	L BLN_V2	; Version 2 name block length
			; (prior to 40 byte extension)

;
; Extend the NAM block by 40 bytes.
;
	F NODE,B	; Nodespec length
	F DEV ,B	; Device length
	F DIR ,B	; Directory length
	F NAME,B	; Filename length
	F TYPE,B	; Filetype length
	F VER ,B	; Version number length
	F     ,B,2	; Currently unused
	F NODE,L	; Nodespec address
	F DEV ,L	; Device address
	F DIR ,L	; Directory address
	F NAME,L	; Filename address
	F TYPE,L	; Filetype address
	F VER ,L	; Version number address
	F     ,L,2	; Currently unused
	L BLN_DIRWC	; Not documented optional length
	L BLN		; Name block length
	E

;
;	 definitions for all xabs
;		$xabdef
;
;
	$STRUCT XAB
;
;  the first four fields are shared in common between all xabs
;  and hence are defined only once
;  (the only exception is that the spare word may be used by some xabs)
;
	F COD,B		; xab id code
	F BLN,B		; block length
	F ,W		; (spare)
	F NXT,L		; xab chain link
	M 2		;UP TILL NOW COMMON AMONG ALL XABS
			;WITH POSSIBLE EXCEPTION OF SPARE FIELD
	F RVN,W
	F ,W
	F RDT,Q,,S
	  S RDT0,0,L
	  S RDT4,4,L,,S
			;COMMON AMONG DAT AND RDT XABS
	P 2		;BACK TO END OF TOTAL COMMONALITY
	F ,B		;THESE FIELDS WILL BE DEFINED LATER
	F ,B
	F ,W
	F ,L
	F ,L
	F ,W
	F BKZ,B		;COMMON TO FHC AND ALQ XABS
	E
;++
;	file header characteristics xab definitions
;		$xabfhcdef
;
;+++++*****
	$STRUCT XAB, FHCDEF 
;  the fields of this xab cannot be rearranged since
;  they correspond to an on-disk structure
;
	  C FHC,29	; xabfhc id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F RFO,B		; record format and file org
	F ATR,B		; record attributes
	F LRL,W		; longest record's length
	F HBK,L		; hi vbn allocated
			; (n.b. reversed on disk!)
	  S HBK0,0,W
	  S HBK2,2,W
	F EBK,L		; eof vbn
			; (n.b. reversed on disk)
	  S EBK0,0,W
	  S EBK2,2,W
	F FFB,W		; first free byte in eof block
	F ,B		; bucket size for fhc ( note: field name is bkz,
			; defined above in $xabdef, since it is shared
			; by the all xab)
	F HSZ,B		; header size for vfc
	F MRZ,W		; max record size
	F DXQ,W		; default extend quantity
	F GBC,W		; global buffer count
	F ,B,8		; spares (pad to last word)
	F VERLIMIT,W	; version limit for file.
;-----*****
	F SBN,L		; starting lbn if contiguous
	L FHCLEN	; length of xabfhc
	E
;--
;++
;
;	allocation xab definitions
;		$xaballdef
	$STRUCT XAB, ALLDEF 
;
;
;+++++*****
;  the fields thru bkz cannot be rearranged due to
;  their commonality with fab
	  C ALL,20	; xaball id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F AOP,B		; allocation options
	  V <M
	  HRD		; fail if requested alignment impossible
	  ONC		; locate allocated space within a cylinder
	  ,3		; (spares)
	  CBT		; contiguous alllocation, best try
	  ,1		; spare
	  CTG		; contiguous allocation
	  >
	F ALN,B		; alignment type
	  C ANY,0	; any allocation o.k.
	  C CYL,1	; cylinder boundary
	  C LBN,2	; allocate at specified lbn
	  C VBN,3	; allocate near specified vbn
	  C RFI,4	; allocate near related file
	F VOL,W		; relative volume no. for allocation
			; (not applicable if aln = vbn or rfi)
	F LOC,L		; allocation location
	F ALQ,L		; allocation quantity
	F DEQ,W		; default allocation quantity
	F ,B		; bucket size for area (note: field name is bkz,
			; defined above in $xabdef,since it is shared by the fhc
			; xab and has the same offset, of course)
;-----*****
	F AID,B		; area id number
	F RFI,W,3	; related file id
	  S RFI0,0,W	; file number
	  S RFI2,2,W	; seq number
	  S RFI4,4,W	; rev number
	F ,W		; (spare)
	L ALLLEN	; length of xaball
	E
;--
;++
;
;	date/time xab definitions
;		$xabdatdef
	$STRUCT XAB, DATDEF 
;
	  C DAT,18	; xabdat id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F ,W		;REVISION #,DEFINED IN $XABDEF,SINCE COMMON TO DAT & RDT
	F ,W		; spare
	F ,Q		; revision date & time,defined in $xabdef
	F CDT,Q,,S	; creation date & time
	  S CDT0,0,L
	  S CDT4,4,L,,S
	F EDT,Q,,S	; expiration date & time
	  S EDT0,0,L
	  S EDT4,4,L,,S
	L DATLEN_V2	; Version 2 XABDAT length
	F BDT,Q,,S	; backup date and time
	  S BDT0,0,L
	  S BDT4,4,L,,S
	L DATLEN	; length of XABDAT
	E
;--
;++
;
;	revision date/time xab definitions
;		$xabrdtdef
	$STRUCT XAB, RDTDEF 
	  C RDT,30	; xabrdt id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F ,W		;REVISION #,DEFINED IN $XABDEF,SINCE COMMON TO DAT & RDT
	F ,W		; spare
	F ,Q		; revision date & time,defined in $xabdef
	L RDTLEN	; length of rdt xab
	E
;--
;++
;
;	protection xab field definitions
;		$xabprodef
;
	$STRUCT XAB, PRODEF 
;
	  C PRO,19	; xabpro id code
	  V <M		; define relative to the start of the 4-bit subfield
	  NOREAD	; deny read access
	  NOWRITE	; deny write access
	  NOEXE		; deny execution access
	  NODEL		; deny delete access
	  >
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F PRO,W		; protection mask
	  V <
	  SYS,4		; system
	  OWN,4		; owner
	  GRP,4		; group
	  WLD,4		; world
	  >
	F MTACC,B	; Magtape access control char.
	F ,B		; (spare)
	F UIC,L		; uic code
	  S MBM,0,W	; member code
	  S GRP,2,W	; group code
	L PROLEN	; xabpro length
	E
;--
;++
;
;	terminal control xab field definitions
;		$xabtrmdef
;
;
	$STRUCT	XAB,TRMDEF 
;
	  C TRM,31	;XABTRM ID CODE
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F AST_ADDR,L	; ast address
	F AST_PARM,L	; ast parameter
	F MBX_CHAN,W	; associated mailbox channel number
	F FLAGS,B
	V <M
	   DSABL_AST	; disable ast
	  >
	F ,B		; spare
	F ,L,1		; spares
	L TRMLEN	; length of xab of type terminal control
	E
;--
;++
;
;	summary xab field definitions
;		$xabsumdef
;
	$STRUCT XAB, SUMDEF 
;
	  C SUM,22	; xabsum id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
	F NOA,B		; number of defined areas for index file
	F NOK,B		; number of defined keys for index file
	F PVN,W		; prologue version number (relative and index files)
	L SUMLEN	; xabsum length
	E
;--
;++
;
;	key definition xab field definitions
;		$xabkeydef
;
	$STRUCT XAB, KEYDEF 
;
	  C KEY,21	; xabkey id code
	F ,B
	F ,B
	F ,W
	F ,L		;HAS SAME COD, BLN, SPARE AND NXT FIELD
			;THESE 4 FIELDS ARE COMMON TO ALL XABS AND
			;HAVE BEEN DEFINED BY $XABDEF
;
; the field layout of the key xab is such that it matchs as
; closely as possible the layout of a key decriptor in the
; index file prologue. this is so the contents may be moved
; between the two structures as efficiently as possible.
;
	F IAN,B		; index level area number
	F LAN,B		; lowest index level area number
	F DAN,B		; data level area number
	F LVL,B		; level of root bucket
	F IBS,B		; size of index buckets in virtual blocks
	F DBS,B		; size of data buckets in virtual blocks
	F RVB,L		; root bucket start vbn
	F FLG,B		; key option flags
	  V <M
	  DUP		; duplicate key values allowed
	  CHG		; alt key only --key field may change on update
	  NUL		; alt key only --null key value enable
	  IDX_NCMPR	; indicate index records for given key are not compressed
	  >

	  V <M		; primary key only flags
	  ,1		; space over dup
	  ,5		; spare
	  KEY_NCMPR	; indicates primary key is not compressed in data record
	  DAT_NCMPR	; data record is not compressed
	  >

	F DTP,B		; key field data type
	  C STG,0	; string
	  C IN2,1	; signed 15 bit integer (2 bytes)
	  C BN2,2	; 2 byte binary
	  C IN4,3	; signed 31 bit integer (4 bytes)
	  C BN4,4	; 4 byte binary
	  C PAC,5	; packed decimal (1-16 bytes)
	  C MAXDTP,5	; max. legal data type
	F NSG,B		; number of key segments
	F NUL,B		; nul key character
	F TKS,B		; total key field size (bytes)
	F REF,B		; key of reference (0=prim key,
			; 1-254 = alternate keys)
	F MRL,W		; minimun record length to contain key field
	F IFL,W		; index bucket fill size (bytes)
	F DFL,W		; data bucket fil size (bytes)
	F POS,W,8	; key field record offset positions
	  S POS0,0,W	; segment 0
	  S POS1,2,W	; segment 1
	  S POS2,4,W	; segment 2
	  S POS3,6,W	; segment 3
	  S POS4,8,W	; segment 4
	  S POS5,10,W	; segment 5
	  S POS6,12,W	; segment 6
	  S POS7,14,W	; segment 7
	F SIZ,B,8	; key field segment sizes
	  S SIZ0,0,B	; segment 0
	  S SIZ1,1,B	; segment 1
	  S SIZ2,2,B	; segment 2
	  S SIZ3,3,B	; segment 3
	  S SIZ4,4,B	; segment 4
	  S SIZ5,5,B	; segment 5
	  S SIZ6,6,B	; segment 6
	  S SIZ7,7,B	; segment 7
	F ,W		; spare
;
; the positions of the above fields are dictated by the key descriptor
; record layout in the index file prologue.
;
	F KNM,L		; pointer to 32 character key name buffer
	F DVB,L		; first data bucket start vbn
	L KEYLEN_V2	; old xabkey length
;
; Additions for prologue 3 files
;
	F TYP,B,8	; key field segment types
	  S TYP0,0,B	; segment 0
	  S TYP1,1,B	; segment 1
	  S TYP2,2,B	; segment 2
	  S TYP3,3,B	; segment 3
	  S TYP4,4,B	; segment 4
	  S TYP5,5,B	; segment 5
	  S TYP6,6,B	; segment 6
	  S TYP7,7,B	; segment 7
	F PROLOG,B	; indicate prologue version desired (primary key only)
	  C PRG3,3	;  Prologue version three
	  C PRG2,2	;  Prologue version two
	  C PRG1,1	;  Prologue versoin one
	F ,B		; spare
	F ,W		; spare
	L KEYLEN	; xabkey length

;--
;++
	E

;
;		rms escape definitions
;
;  the following values identify various requests for non-standard rms
;  functions.  they are currently input to the $modify function in the
;  ctx field of the fab only if the esc bit is set in fop.  incorrect
;  use of these capabilties could cause rms to fail, hence great caution
;  should be exercised in their use.
;
	$STRUCT	RME

	C SETRFM,1	; change rfm, mrs, and fsz (if vfc) in ifab only
	E

