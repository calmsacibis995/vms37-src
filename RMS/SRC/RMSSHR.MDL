;	$begin	rmsshr,v02-014
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;	rms shared file structure definitions
;
;	Modified By:
;
;	V02-014	CDS0004		C Saether		11-Feb-1982
;		Change SIFB$L_GBL_SIZE field to SIFB$W_GBC and
;		SIFB$W_GBREF.
;
;	V02-013	CDS0003		C Saether		 4-Feb-1982
;		Pad out sifb to reflect lengthening of record attributes.
;
;	V02-012	KPL0012		Peter Lieberwirth	20-Jan-1982
;		Shorten some SFSB names so symbols can be displaed in three
;		columns on listings.
;
;	V02-011	CDS0002		C Saether		17-Jan-1982
;		Add SIFB$W_WACC_BUF and SIFB$L_GBL_SIZE fields to SIFB.
;
;	V02-010	KPL0009		Peter Lieberwirth	22-Oct-1981
;		Improve SFSB by defining sub-fields to hold different parts
;		of the file identifier (resouce name in lock manager parlance).
;
;	V02-009	CDS0001		C Saether		29-Aug-1981
;		Remove BCB definitions.
;
;	V008	KPL0008		Peter Lieberwirth	18-Jul-1981
;		remove SIFB and IFB RLB_LNK fields in favor of an RLB_LNK
;		field in the IRB.  this makes the code for multi-stream
;		more straightforward.
;
;	V007	KPL0007		Peter Lieberwirth	27-Apr-1981
;		add SFSB (Shared File Synchronization Block) to keep
;		lock manager context, and lock, on shared file
;
;	V006	REFORMAT	Ken Henderson	29-JUL-1980	13:50
;		the code was reformated
;
;	V005	RAS0001		R A Schaefer	05-NOV-1979	11:50
;		add pagemax field to sfd to better report s0 space usage
;
;	V004	RAN0007		R A Newell	12-FEB-1979	3:00
;		file sharing enhancements
;
;	V003	JAK0017		J A Krycka	28-DEC-1978	17:45
;		make sifb correspond to ifb after ifb was changed to
;		make ifb$l_nwa_ptr and ifb$l_frb_ptr separate locations so that
;		networking and file sharing do not interfere with each other.
;
;		R A Newell		19-SEP-1978
;
;
;	shared file data (sfd) definitions
;
;	these definitions describe the shared file data base resource queue list
;	head, shared file list head, and the number of pages which are currently
;	being used by the shared file data base and the maximum number of pages
;	allowed.
;
	$STRUCT SFD
					; begins at 8 offset from start
					; of page to allow for possible
					; free space header
					; pointed to by rms$gl_sfdbase
	F	RQ_FLNK,L		; resource queue list head
	F	RQ_BLNK,L		;
	F	SHRF_LNK,L		; shared file list head
	F	PAGELIMIT,L		; max pages allocated for sfd
	F	PAGECOUNT,L		; current pages in use for sfd
	F	PAGEMAX,L		; max pages used for sfd
	F	TEMP_FRB,L,2		; temporary frb for use by close
	F	FREEPGLH,L,2		; list head for s0 free page list
	F	FLGS,B			; sfd flags
	V<
	  INSQUEFLG			; insque interlock bit
	 >
	F	,B,3			; spare bytes
	F	,L,2			; added length to include frb flags
	F	PID,L			; owner pid
	F	FRBFLGS,B		; frb flags
	F	,B,3			;
					; byte when using the temp_frb
	E				; end of sfd structure

;
;
;	file resource block
;
;	the file resource block (frb) is allocated one per each ifab which opens
;	a shared file.  the frb serves as the space required for entries in the
;	various resource queues.
;	the per process list allows for the control of shared resource use within
;	a process.  this means that for any given process open of a shared file,
;	we will single stream access to it, but will allow multi-stream access by
;	different processes or by multiple opens within a single process.
;
	$STRUCT	FRB
	F	FRQ_FLNK,L		; file resource queue links
	F	FRQ_BLNK,L		;
	F	SIFAB_PTR,L		; pointer to shared ifab
	F	BWB,L			; bucket wait block list
	F	PPQ,L			; per process list head
	  V<M
	    INUSE			; flag for frb owned by a stream
	   >
					; note: owner merely sets in use flag.
					; 1st waiter or's his irab addr.
					; other waiters are queued via the bwb
					; field.  no conflict since all 
					; irab's/ifab's start on lw boundary.
	F	ASTADDR,L		; address of ast routine
	F	ASTPRM,L		; ast parameter (irab or ifab addr)
	F	PID,L			; process id of current process
	F	FLAGS,B			; frb flags
	  V<
	    QUE_STALL			; que stall flag
	    TEMP			; bit saying frb is a temporary frb
	    KRNLMODE			; deliver ast in kernel mode
	   >
	F	,B,3			; spare bytes
	L	BLN			;
	E


;
;
;	shared ifab definitions (sifab)
;
;	the sifab contains all the file definition data which is 
;	pertinent to the shared file.  when a stream performs an
;	operation on the file, it must own the shared file's
;	resource.  whenever the stream must wait, it must relinquish
;	ownership to the resource and if necessary, issue an ast to 
;	the next stream in the queue.
;
;	note that the shared ifab is similar to the ifab.  in particular, those
;	fields that are used in the shared ifab if it exists, else in the ifab,
;	are found at the same offset in both structures.  unnamed fields are
;	currently unused.
;
	$STRUCT SIFB
	F	,L		; (ifab=dev, unused)
	F	,L		; (ifab=bkpbits, unused)
	F	BID,B		; block id
	  C	BID,9		; sifab id = 9
	F	BLN,B		; block id
	F	FLGS,B		; sifab flags
	V<
	  INQUEFLG		; insque interlock bit
	 >
	F	,B		; spare byte
	F	FRB_FLNK,L	; frb list head
	F	FRB_BLNK,L	;   (note: reuse of ifab ios field
	F	SFL_LNK,L	; shared file list
				;    (note: reuse of asbaddr)
	F	ACC_CNT,W	; access count (reuse of arglist)
	F	WACC_CNT,W	; write access count (reuse of arglist)
	F	VBNSEQNO,L	; vbn sequence # check init value
				;   (note: reuse of irab_lnk)
	F	,W		; (ifab=chnl, must be zero)
	F	SHR,B		; allowed sharing access
				;   (note: reuse of fac)
	F	,B		; (ifab=orgcase, unused)
	F	WACC_BUF,W	; count of buffers connected for write access
				; (note: reuse of last_fab)
	F	,W		; (pad remainder of last_fab field)
	F	GBC,W		; Number of global buffers in section.
	F	GBREF,W		; Number of accessors to global section.
	F	FCB_ADDR,L	; fcb address (note: reuse of frb_ptr)
	F	,L		; was bucket control block list head
	F	,L		;    (note:reuse of bdb fields)
	F	,W		; (ifab=devbufsz)
	F	,W		; (ifab=rtdeq)
	F	,B		; (ifab=rfmorg)
	F	,B		; (ifab=rat)
	F	,W		; (ifab=lrl)
	F	HBK,L		; hi vbn allocated
	F	EBK,L		; eof vbn
	F	,W		; (ifab=ffb)
	F	,B		; (ifab=bks)
	F	,B		; (ifab=fsz)
	F	,W		; (ifab=mrs)
	F	,W		; (ifab=deq)
	F	,W		; (ifab=gbc)
	F	,W		; (padding)
	F	NRP_LIST	; ptr to nrp list for idx files
	F	TEMP_FRB,L,2	; temporary frb for use by close
	F	,L,5			;
	F	PID,L			; owner pid
	F	FRBFLGS,B		; frb flags
	F	,B,3			;
	L	BLN	;
	E

;
;	SFSB field definitions - shared file synchronization block
;
;	The SFSB contains the information necessary to lock a file for
;	RMS synchronization via the VAX/VMS Lock Manager.
;
; Temporarily include 32 byte RESNAM field in SFSB.  When full implementation
; is complete, this can be moved out of SFSB, if desired.
;
;
;               +---------------------------------------+
;               |                                       |
;sfsb:		|               			|
;               |                                       |
;               |              FILE_NAME                |
;               |                                       |
;               |               			|
;               |                                       |
;               +------------------+----------+---------+
;               |                  |                    |
;               |     unused       |    BLN       BID   |
;               |                  |                    |
;               +------------------+----------+---------+
;				   .
;				   .
;				   .
;               |                  |                    |
;lksb:          | Still to be def- |  VMS status code   |
;               | ined status bits |                    |
;               +------------------+--------------------+
;               |                                       |
;               |  Lock Id. (Returned for new locks,    |
;               |            input for conversions)     |
;               +-----------------------------+---------+
;               |                             |         |
;lvb:           |            unused           |   SHR   |
;               |                             |         |
;               +-----------------------------+---------+
;               |                                       |
;               |               VBNSEQNO		|
;               |                                       |
;               +---------------------------------------+
;               |                                       |
;               |	  HBK - Hi VBN allocated	|
;               |                                       |
;               +---------------------------------------+
;               |                                       |
;               |	  EOF - end of file VBN		|
;               |                                       |
;               +---------------------------------------+
;
;
;
	$STRUCT	SFSB

	F FILENAME,Q		; descriptor of shared file resource name
				;  will eventually be NODE, DEVICE, FILE_ID
				;  currently only DEVICE, FILE_ID
				;  points to RESNAM, below
	  S NAME_LEN,0,W	; subfield to address descriptor length field
	  S ADDRESS,4,L		; subfield to address descriptor address field
	F BID,B			; block id
	  C BID,16		; sfsb code
	F BLN,B			; block length in longwords
	F ,W			; reserved
	F RESNAM,T,32		; 32 bytes for name of shared resource
	  S FAC_CODE,0,W	; RMS facility code
	  S FID_NUM,2,W		; file id word one
	  S FID_SEQ,4,W		; file id word two
	  S FID_RVN,6,W		; file id word three
	  C FIX_LEN,8		; 8 bytes of fixed size data
	  S DEV_NAM,8,T,24	; 24 bytes remain to hold variable length device id
				; (NODE sometime too...)
	F LKSB,L		; lock status block
	  S STATUS,0,W 		; VMS status code
	  S S_BITS,2,W		; various status bits
	F LOCK_ID,L		; second longword of LKSB is the lock id
	F LVB,L,4		; lock value block
	L BLN			; length of sfsb
	E
