!	Version 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! Facility:
!
!	Messages are for the FAL (DECnet File Access Listener) facility, but
!	are generated on behalf of FAL by RMS.
!
! Abstract:
!
!	This module defines FAL status code symbols and corresponding message
!	text. Note that this message file is maintained by the RMS facility,
!	not the FAL facility, because RMS does the translation of DAP status
!	into FAL status codes which are reported as secondary status information
!	to the RMS$_NETFAIL and RMS$_SUPPORT completion codes on behalf of FAL.
!
! Environment: VAX/VMS
!
! Author: James A. Krycka,	Creation Date:	15-JAN-1982
!
! Modified By:
!
!--

!++
! Define FAL status codes for use by RMS as secondary status codes.
!
! Layout of message space:
!
!	Msg Numbers	Msg Numbers	Msg Codes	Description
!	(decimal)	(hexadecimal)	(hexadecimal)
!
!	   0 - 1023	0000 - 03FF	0000 - 1FFF	Unused
!	1024 - 2047	0400 - 07FF	2000 - 3FFF	For RMS$_NETFAIL
!	2048 - 4095	0800 - 0FFF	4000 - 7FFF	For RMS$_SUPPORT
!--
 
 
	.TITLE		FAL Status Codes
	.FACILITY	FAL,503 /SYSTEM /MACRO=$RMSFALMSG

!+
! Define FAL status codes that are associated with the RMS$_NETFAIL completion
! code and returned in the STV field of the FAB or RAB.
!
! Use the following formula to map a DAP status code (STSCODE field with
! MACCODE = 4 thru 7) into a corresponding FAL message code (lower 16 bits):
!
!	message-code = (2**15 + ((MICCODE + 1024) * 8) + severity-level)
!
! Note:	The first three characters of the message identification mnemonic
!	for each message code in this set indicates its origin as follows:
!
!	RMS ---	the code is defined for RMS-11 or RMS-20, but not for RMS-32.
!		(RMS-32 completion codes are defined in RMSDEF.MDL.)
!	FCS --- the code is defined for the FCS-11 environment.
!	DAP --- origin in the DAP specification is unknown.
!-

	.SEVERITY	FATAL
	.LITERAL	FAL$_OFFSET_A = ^X400

	.BASE		^X400
	DAPFAIL		<operation failed>
	RMSABO		<operation aborted due to internal error condition>
	.BASE		^X409
	RMSAST		<invalid operation at AST level>
	RMSBPA		<private pool address error>
	RMSBPS		<private pool size error>
	.BASE		^X416
	RMSCLS		<file close operation failed>
	.BASE		^X42E
	RMSFID		<invalid file ID value>
	.BASE		^X439
	RMSINI		<$INIT macro never issued>
	.BASE		^X442
	RMSLBL		<tape label is not ANSI format>
	RMSLBY		<logical channel busy>
	RMSLCH		<logical channel number too large>
	.BASE		^X446
	RMSLOC		<invalid allocation location value in XAB>
	RMSMAP		<buffer mapping error>
	.BASE		^X44D
	RMSNID		<cannot allocate internal index descriptor>
	.BASE		^X44F
	RMSOPN		<file open operation failed>
	.BASE		^X454
	RMSPRM		<invalid file date value in XAB>
	.BASE		^X46B
	RMSSTK		<stack too large for save area>
	.BASE		^X472
	RMSVOL		<invalid volume number value in XAB>
	.BASE		^X478
	RMSCAA		<cannot access argument list>
	.BASE		^X499
	RMSBLK		<BLK record attribute option not supported>
	RMSBSZ		<invalid byte size for this system>
	RMSCDR		<cannot disconnect RAB>
	RMSCGJ		<cannot get JFN for file>
	RMSCOF		<cannot open file>
	RMSJFN		<invalid JFN value>
	RMSPEF		<cannot position to end of file>
	RMSTRU		<cannot truncate file>
	RMSUDF		<file currently in an indefinite state (access denied)>
	RMSXCL		<file must be opened for exclusive access>
	DAPDIRFUL	<directory full>
	FCSHWR		<device driver not resident>
	FCSFHE		<fatal hardware error>
	DAPWRTEOF	<attempt to write beyond end of file>
	FCSONP		<hardware option not present in system>
	FCSDNA		<device not attatched>
	FCSDAA		<device already attached>
	FCSDUN		<device not attachable>
	FCSRSU		<shareable resource in use>
	FCSOVR		<invalid overlay request>
	FCSBCC		<block check or CRC error>
	FCSNOD		<system dynamic memory failure>
	FCSIFU		<index file full>
	FCSHFU		<file header full>
	FCSWAC		<file accessed for write operation>
	FCSCKS		<file header checksum error>
	FCSWAT		<attribute control list error>
	FCSALN		<file already accessed on logical unit>
	FCSBTF		<bad tape format>
	FCSILL		<invalid operation on file descriptor block>
	FCS2DV		<rename operation failed--different devices specified>
	FCSFEX		<rename operation failed--new file name already exists>
	FCSRNM		<rename operation failed--cannot change old file name>
	FCSFOP		<file already open>
	FCSVER		<parity error on device>
	FCSEOV		<end of volume detected>
	FCSDAO		<data overrun error>
	FCSBBE		<bad block encountered on device>
	FCSEOT		<end of tape detected>
	FCSNBF		<no buffer space available for file>
	FCSNBK		<file exceeded allocated space>
	FCSNST		<specified task not installed>
	FCSULK		<cannot unlock file>
	FCSNLN		<no file accessed on logical unit>
	FCSSRE		<send/receive error>
	.BASE		^X4C9
	DAPQUOEXC	<quota exceeded>
	.BASE		^X4E6
	DAPDIRCAF	<directory request failed--cannot access file>
	DAPDIRCRA	<directory request failed--cannot read file attributes>
	DAPDIRPRO	<directory request failed--protection violation>
	DAPDIRPRA	<directory request failed--protection violation>
	DAPDIRNFA	<directory request failed--file attributes do no exist>
	DAPDIRCON	<directory request failed--unable to continue after error>

!+
! Define FAL status codes that are associated with the RMS$_SUPPORT completion
! code and returned in the STV field of the FAB or RAB.
!
! Use the following formula to map a DAP status code (STSCODE field with
! MACCODE = 2) into a corresponding FAL message code (lower 16 bits):
!
!	message-code = (2**15 + ((MICCODE + 2048) * 8) + severity-level)
!
! Note:	The intent in this section is to define FAL status codes only for DAP
!	fields that correspond directly to RMS control block fields used for
!	input. For other DAP fields that may be rejected by the remote FAL as
!	being unsupported, the RMS$_SUP completion code is returned in the STS
!	field of the FAB or RAB with an associated DAP code in the STV field.
!-

	.SEVERITY	FATAL
	.LITERAL	FAL$_OFFSET_B = ^X800

	.BASE		^X892
	ORG		<file organization field rejected>
	RFM		<record format field rejected>
	RAT		<record attributes field rejected>
	BLS		<block size field rejected>
	MRS		<maximum record size field rejected>
	ALQ1		<allocation quantity field rejected>
	BKS		<bucket size field rejected>
	FSZ		<fixed control area size field rejected>
	MRN		<maximum record number field rejected>
	.BASE		^X89C
	DEQ1		<default file extension quantity field rejected>
	FOP1		<file processing options field rejected>
	.BASE		^X8A1
	LRL		<longest record length field rejected>
	.BASE		^X8D0
	ACCFUNC		<unsupported RMS service call>
	.BASE		^X8D3
	FAC		<file access field rejected>
	SHR		<file sharing field rejected>
	.BASE		^X910
	CTLFUNC		<unsupported RMS service call>
	.BASE		^X912
	RAC		<record access field rejected>
	KEY		<record number, key string, RFA, or VBN rejected>
	KRF		<key of reference field rejected>
	ROP		<record processing options field rejected>
	.BASE		^X950
	CONFUNC		<cannot continue operation after error as specified>
	.BASE		^X9D0
	CMPFUNC		<unsupported RMS service call>
	FOP2		<file processing options field rejected>
	.BASE		^X0A91
	FLG		<key options flags field in XAB rejected>
	DFL		<data bucket fill size field in XAB rejected>
	IFL		<index bucket fill size field in XAB rejected>
	.BASE		^X0A95
	POS		<key segment position field in XAB rejected>
	SIZ		<key segment size field in XAB rejected>
	REF		<key of reference field in XAB rejected>
	KNM		<key name field in XAB rejected>
	NUL		<null key value field in XAB rejected>
	IAN		<index bucket area number field in XAB rejected>
	LAN		<lowest level of index bucket area number field in XAB rejected>
	DAN		<data bucket area number field in XAB rejected>
	DTP		<key data type field in XAB rejected>
	.BASE		^X0AD1
	VOL		<relative volume number field in XAB rejected>
	ALN		<alignment boundary type field in XAB rejected>
	AOP		<allocation options field in XAB rejected>
	LOC		<starting location field in XAB rejected>
	.BASE		^X0AD6
	ALQ2		<allocation quantity field in XAB rejected>
	AID		<area identification number field in XAB rejected>
	BKZ		<bucket size field in XAB rejected>
	DEQ2		<default file extension quantity field in XAB rejected>
	.BASE		^X0B51
	CDT		<creation date and time field in XAB rejected>
	RDT		<revision date and time field in XAB rejected>
	EDT		<expiration date and time field in XAB rejected>
	RVN		<revision number field in XAB rejected>
	.BASE		^X0B91
	OWNER		<file owner (UIC) field in XAB rejected>
	PROTSYS		<system protection subfield in XAB rejected>
	PROTOWN		<owner protection subfield in XAB rejected>
	PROTGRP		<group protection subfield in XAB rejected>
	PROTWLD		<world protection subfield in XAB rejected>
 
	.END
