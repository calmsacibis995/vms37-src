	$BEGIN	NT0DISPLY,003,NF$NETWORK,<NETWORK DISPLAY>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; Facility: RMS
;
; Abstract:
;
;	This module communicates with the file access listener at the remote
;	node to display attributes of the specified file.
;
; Environment: VAX/VMS, executive mode
;
; Author: James A. Krycka,	Creation Date:	01-JUN-1981
;
; Modified By:
;
;	V02-003	JAK0066		J A Krycka	07-OCT-1981
;		Reject $DISPLAY request while in file transfer mode.
;
;	V02-002	JAK0063		J A Krycka	17-AUG-1981
;		Add support for the Revision Date and Time XAB.
;
;--

	.SBTTL	DECLARATIONS

;
; Include Files:
;

	$DAPPLGDEF			; Define DAP prologue symbols
	$DAPHDRDEF			; Define DAP message header
	$DAPCNFDEF			; Define DAP Configuration message
	$DAPACCDEF			; Define DAP Access message
	$DAPCTLDEF			; Define DAP Control message
	$IFBDEF				; Define IFAB symbols
	$NWADEF				; Define Network Work Area symbols

;
; Macros:
;
;	None
;
; Equated Symbols:
;

	ASSUME	DAP$Q_DCODE_FLG EQ 0

;
; Own Storage:
;
;	None
;

	.SBTTL	NT$DISPLAY - PERFORM NETWORK DISPLAY FUNCTION

;++
; NT$DISPLAY - engages in a DAP dialogue with the remote FAL to display
;	attributes of the specified file according to the XABs chained to the
;	FAB.
;
; Calling Sequence:
;
;	BSBW	NT$DISPLAY
;
; Input Parameters:
;
;	R8	FAB address
;	R9	IFAB address
;	R10	IFAB address
;	R11	Impure Area address
;
; Implicit Inputs:
;
;	User FAB
;	DAP$Q_SYSCAP
;	NWA$V_FTM_RETRV
;	NWA$V_FTM_STORE
;
; Output Parameters:
;
;	R0	Status code (RMS)
;	R1-R7	Destroyed
;	AP	Destroyed
;
; Implicit Outputs:
;
;	User ALL, DAT, FHC, KEY, PRO, RDT, and SUM XABs
;
; Completion Codes:
;
;	Standard RMS completion codes
;
; Side Effects:
;
;	None
;
;--

NT$DISPLAY::				; Entry point
	$TSTPT	NTDISPLAY		;
	MOVL	IFB$L_NWA_PTR(R9),R7	; Get address of NWA (and DAP)
	BBC	#DAP$V_DISPLAY,-	; Branch if remote FAL does not support
		DAP$Q_SYSCAP(R7),ERRSUP	;  display attributes function
	BBS	#NWA$V_FTM_RETRV,(R7),-	; Branch if file transfer mode retrieval
		ERRFTM			;  in progress
	BBS	#NWA$V_FTM_STORE,(R7),-	; Branch if file transfer mode storage
		ERRFTM			;  in progress
	BRB	BUILD_MASK		; Proceed
ERRSUP:	BRW	NT$SUP_CTLFUNC		; Assemble error codes in R0 and STV
					;  and exit
ERRFTM:	RMSERR	FTM			; Declare file transfer mode error
	RSB				; Exit with RMS code in R0

;+
; Build display field request mask which will be used in the Control message
; to request that optional DAP messages be returned by FAL.
; For $DISPLAY these are the ATT, ALL, KEY, PRO, SUM, and TIM messages.
; (Note that the Attributes message will supply information to update the
; FHCXAB.)
;-

BUILD_MASK:				; Build NWA$W_DISPLAY
	CLRL	R6			; Indicate this is not a close operation
	BSBW	NT$SCAN_XABCHN		; Scan user XAB chain and check FAL's
					;  capabilities; request mask put in R2
	BLBC	R0,FAIL			; Branch on failure to complete scan
	CMPB	NWA$B_ORG(R7),#NWA$K_IDX; Branch if IDX organization
	BEQL	10$			;
	BICW2	#<<DAP$M_DSP_SUM>!-	; Ignore these XABs in chain
		  <DAP$M_DSP_KEY>!-	;
		0>,R2			;
10$:	MOVW	R2,NWA$W_DISPLAY(R7)	; Save request mask
	BEQL	SUC			; Exit if there are no XABs to fill

;+
; Build and send DAP Control message to partner.
;-

SEND_CTL:				; (required message sequence)
	$SETBIT	#NWA$V_LAST_MSG,(R7)	; Declare this last message to block
	MOVL	#DAP$K_CTL_MSG,R0	; Get message type value
	BSBW	NT$BUILD_HEAD		; Construct message header
	MOVB	#DAP$K_DISPLAY,(R5)+	; Store CTLFUNC field
	MOVB	#DAP$M_DISPLAY2,(R5)+	; Store CTLMENU field
	MOVZWL	NWA$W_DISPLAY(R7),R1	; Get request mask
	BSBW	NT$CVT_BN4_EXT		; Store DISPLAY as an extensible field
	BSBW	NT$BUILD_TAIL		; Finish building message
	BSBW	NT$TRANSMIT		; Send Control message to FAL
	BLBC	R0,FAIL			; Branch on failure

;+
; Receive DAP Attributes message from partner and update the user FHCXAB.
;-

RECV_ATT:				; (optional--must be requested)
	BBC	#DAP$V_DSP_ATT,-	; Branch if Attributes message was not
		NWA$W_DISPLAY(R7),-	;  requested
		RECV_EXT_ATT		;
	$SETBIT	#DAP$K_ATT_MSG,DAP$L_MSG_MASK(R7)
					; Expect response of Attributes message
	BSBW	NT$RECEIVE		; Get reply from FAL
	BLBC	R0,FAIL			; Branch on failure
	BSBW	NT$UPDATE_FHC		; Update user FHCXAB

;+
; Receive DAP Extended Attributes messages from partner and update the user
; ALL, DAT, KEY, PRO, RDT, and SUM XABs.
;-

RECV_EXT_ATT:				; (optional--must be requested)
	BSBW	NT$RECV_EXT_ATT		; Process Extended Attributes messages
	BLBC	R0,FAIL			; Branch on failure

;+
; Receive DAP Acknowledge message from partner.
;-

RECV_ACK:				; (required message)
	$SETBIT	#DAP$K_ACK_MSG,DAP$L_MSG_MASK(R7)
					; Expect response of Acknowledge message
	BSBW	NT$RECEIVE		; Get reply from FAL
	BLBC	R0,FAIL			; Branch on failure
SUC:	RMSSUC				; Return success
FAIL:	RSB				; Exit with RMS code in R0

	.END				; End of module
