	$BEGIN	RM0FABCHK,007,F$RMSCOM,<COMMON FAB CHECKING>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; Facility: rms32
;
; Abstract:
;		this routine performs common fab call argument
;		list and fab validation.
;
; Environment:
;		star processor running starlet exec.
;
; Author: L F Laverdure,	 creation date: 4-JAN-1977
;
; Modified By:
;
;	V007	REFORMAT	Ken Henderson	29-JUL-1980	15:42
;		code was reformatted
;
;--


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$FABDEF
	$PIODEF
	$PSLDEF
	$RMSDEF

;
; Equated Symbols:
;

;
; Own Storage:
;


	.SBTTL	RM$FABCHK - COMMON ARGLIST AND FAB VALIDATION ROUTINE

;++
; RM$FABCHK
;
;  this routine performs the following functions:
;
;	1. setup r11 to point to the image i/o impure area
;	   (it may be changed in fset to the process i/o impure area)
;	2. check argument list for accessibility and validity
;	3. check fab for accessibility and validity
;	4. set r8 to address of fab
;	5. clear sts and stv
;	6. inhibit rms internal asts
;	7. set r9 to the value of ifi
;
;
;
; Calling sequence:
;
;	bsbw	rm$fabchk
;
; Input Parameters:
;
;	ap	arglist addr
;
; Implicit Inputs:
;
;	the contents of the arglist and the bid, bln, and ifi fields
;	of the fab.
;
; Output Parameters:
;
;	r11	impure area address
;	r9	ifi value
;	r8	fab address
;	r7	mode of caller
;
; Implicit Outputs:
;
;	the sts and stv fields of the fab are zeroed.
;
; Completion Codes:
;
;	z-bit set if ifi = zero, else clear.
;	if any errors, the rms error code is set into r0
;	and return is made to the user (not caller).
;
; Side Effects:
;
;	rms internal asts are inhibited.
;
;--



;
;  set up pointer to impure area based on the mode of the caller
;

RM$FABCHK::
	MOVPSL	R11			; get psl
	EXTZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,R11,R7
					; extract the previous mode
	MOVAL	@#PIO$GW_IIOIMPA,R11	; image io impure area addr

;
;  perform accessibility checks
;

	MOVL	4(AP),R8		; get fab address
	IFNOWRT	#FAB$C_BLN,(R8),ERRFAB	; fab writeable?
	ASSUME	FAB$B_BID EQ 0
	CMPB	(R8),#FAB$C_BID		; is it a fab?
	BNEQ	ERRFAB
	CMPB	FAB$B_BLN(R8),#FAB$C_BLN; is it long enough?
	BLSSU	ERRBLN

;
;  zero the sts and stv fab fields
;

	ASSUME	FAB$L_STS+4 EQ FAB$L_STV
	CLRQ	FAB$L_STS(R8)
	BISW2	S^#1@PIO$V_INHAST,@#PIO$GW_STATUS; disable asts
	MOVZWL	FAB$W_IFI(R8),R9	; set r9 = ifi value
	RSB


;
;  an error has occurred in validating the argument list or fab
;
;  since an error code cannot be safely stored in the fab,
;  no attempt to generate an err= ast will be made.
;  r0 will be set to the appropriate error code and an
;  exception, if enabled, will be generated upon ret.
;
;

ERRFAB:	$PSECT_BR	L$RMS0
	BSBB	ERR
	RMSERR_WORD	FAB		; invalid fab
	$PSECT_RESTORE
ERRBLN:	$PSECT_BR	L$RMS0
	BSBB	ERR
	RMSERR_WORD	BLN		; invalid block length

;

ERR:	BRW	RM$BASIC_ERR		; go return to user
	$PSECT_RESTORE

	.END
