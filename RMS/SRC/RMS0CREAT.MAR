	$BEGIN	RMS0CREAT,001,F$RMSOPEN0C,<DISPATCH FOR CREATE OPERATION>


;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; Facility: rms32
;
; Abstract:
;		this module is the highest level control routine
;		to perform the $create function.
;
; Environment:
;		star processor running starlet exec.
;
; Author: L F LAVERDURE,	 Creation Date: 8-MAY-1977
;
; Modified By:
;
;	V03-001	RAS0084		Ron Schaefer	 2-Apr-1982
;		Force stream format files to have RAT non null.
;
;	V02-018	CDS0001		C Saether	 5-Feb-1982
;		Store GBC in ifab from fab.
;
;	V02-017	JAK0068		J A Krycka	29-DEC-1981
;		Preserve alternate success code on network exit path.
;
;	V02-016	MCN0005		Maria del C. Nasr	10-Feb-1981
;		Make sure magtape is mounted before creating file.
;
;	V02-015	JAK0048		J A KRYCKA	25-SEP-1980
;		Move network specific code from RM0CRECOM to this module and
;		add support for the create-if (CIF) option.
;
;	V014	REFORMAT	D M WALP	25-JUL-1980
;
;	V013	RAS0003		R A SCHAEFER	27-NOV-1979
;		allow any record format for bio access.
;
;	V012	TMH0001		TIM HALVORSEN	13-OCT-1979
;		fix wildcard check to use the wildcard summary bit
;		rather than checking explicitly for wc name,type,ver.
;
;	V011	RAN0002		R A NEWELL	1-SEP-1978	12:00
;		rms32 isam modification.  redefinition of entry points to
;		resolve out of range branches.
;
;	V010	JAK0001		J A KRYCKA	24-AUG-1978	07:53
;		miscellaneous clean-up prior to decnet v1.0 code freeze.
;		skip organization dependent code on network operations.
;
;--
;


	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; Macros:
;

	$IFBDEF
	$FIBDEF
	$FABDEF
	$FWADEF
	$RMSDEF

;
; Equated Symbols:
;

	FOP=	FAB$L_FOP*8		; bit offset to file options longword

;
; Own Storage:
;


	.SBTTL	RMS$CREATE - $CREATE ROUTINE

;++
; RMS$CREATE
;
;  RMS$CREATE -
;
;	this routine performs the highest level $create processing.
;	its functions include:
;
;	1. common setup and checks
;	2. dispatch to organization-dependent code
;	   which calls common create routines
;
;
; Calling sequence:
;
;	entered from exec as a result of user's calling sys$create
;	(e.g., by using the $create macro).
;
; Input Parameters:
;
;	ap	user's argument list addr
;
; Implicit Inputs:
;
;	the contents of the fab and possible related user interface
;	blocks.
;
; Output Parameters:
;
;	r0	status code
;	r1	destroyed
;
; Implicit Outputs:
;
;	the various fields of the fab are filled in to reflect
;	the status of the created open file. (see rms functional spec for
;	a complete list.)
;	an ifab is initialized to reflect the created file.
;
;	a completion ast is queued if so specified by the user.
;
; Completion Codes:
;
;	standard rms (see functional spec for list).
;
; Side Effects:
;
;	none
;
;--


	$ENTRY	RMS$$CREATE
	$TSTPT	CREATE
	BSBW	RM$FSETI		; do common setup

;
;NOTE: DOES NOT RETURN ON ERROR
;
;  an ifab has been set up
;  perform various checks
;

	SSB	#IFB$V_CREATE,(R9)	; remember we're doing create
	BISB3	#FAB$M_PUT,FAB$B_FAC(R8),-
		IFB$B_FAC(R9)		; imply put access
	ASSUME	FAB$V_BRO EQ FAB$V_BIO+1
	CMPZV	#FAB$V_BIO,#2,IFB$B_FAC(R9),-
		#3			; both bro & bio set?
	BNEQ	5$			; branch if not
	BICB2	#FAB$M_BIO,IFB$B_FAC(R9); clear bio (implied
					; by bro without restrictions)
5$:

;
;  validate rfm
;

	ASSUME	IFB$V_RFM EQ 0
	ASSUME	IFB$S_RFM EQ 4
	MOVB	FAB$B_RFM(R8),-
		IFB$B_RFMORG(R9)	; save rfm in rfmorg

;
;  check for rfm in supported range
;

	BBS	#IFB$V_BIO,-
		IFB$B_FAC(R9),10$	; don't check for bio
	CMPB	FAB$B_RFM(R8),#FAB$C_MAXRFM
	BLEQU	10$
	BRW	ERRRFM

;
;  set mrs, gbc, lrl, rat, and fsz from fab
;

10$:	MOVW	FAB$W_MRS(R8),-
		IFB$W_MRS(R9)		; save mrs
	CMPB	FAB$B_RFM(R8),#FAB$C_FIX; fixed length rfm?
	BNEQ	20$			; branch if not
	MOVW	FAB$W_MRS(R8),-
		IFB$W_LRL(R9)		; save fixed length
	BGTR	20$
	BRW	ERRMRS			; branch if not > 0
20$:	MOVW	FAB$W_GBC(R8),-		; store gbc
		IFB$W_GBC(R9)
	BGEQ	21$			; ok if non-negative
	BRW	ERRGBC			; else it's an error
21$:
;
; force stream format files to have RAT non-null.
;
	ASSUME	FAB$C_STM LT FAB$C_STMLF
	ASSUME	FAB$C_STM LT FAB$C_STMCR

	CMPB	FAB$B_RFM(R8),-		; stream format?
		#FAB$C_STM
	BLSSU	22$			; nope
	BITB	#<FAB$M_CR!FAB$M_FTN!FAB$M_PRN>,-
		FAB$B_RAT(R8)		; carriage control already set?
	BNEQ	22$			; ok
	BISB2	#FAB$M_CR,FAB$B_RAT(R8)	; force RAT=CR
22$:	MOVB	FAB$B_RAT(R8),-
		IFB$B_RAT(R9)		; save rat

;
;  check that only one of 'prn', 'cr' and 'ftn' rat bits are on
;

	CLRL	R1			; zero-extend the field
	BICB3	#255\<FAB$M_CR!FAB$M_FTN!FAB$M_PRN>,FAB$B_RAT(R8),R1
	BBC	#FAB$V_PRN,R1,23$	; branch if not prn
	CMPB	FAB$B_RFM(R8),#FAB$C_VFC; rfm = vfc?
	BNEQ	ERRRAT			; branch if not
	ASSUME	FAB$V_FTN EQ 0
	ASSUME	FAB$V_CR EQ FAB$V_FTN+1
	ASSUME	FAB$V_PRN EQ FAB$V_CR+1
23$:	BBC	R1,I^#^B00010111,ERRRAT	; branch if yes


;
;  if vfc record format, check for 0 fixed header size and if
;  found make it 2 bytes
;

	CMPB	FAB$B_RFM(R8),#FAB$C_VFC
	BNEQ	30$			; omit check if not vfc
	MOVB	FAB$B_FSZ(R8),-
		IFB$B_FSZ(R9)		; save fsz value
	BNEQ	29$			; branch if value specified
	MOVB	#2,IFB$B_FSZ(R9)	; else set default value
29$:	BBC	#FAB$V_PRN,-
		IFB$B_RAT(R9),30$	; branch if not prn
	CMPB	IFB$B_FSZ(R9),#2	; fsz > 1?
	BLSSU	ERRFSZ			; branch if not
30$:
	BSBW	RM$PRFLNMALT		; process file name
	BLBC	R0,EXIT			; exit on error
	BBS	#FWA$V_WILDCARD,(R10),-
		ERRSYN			; no wildcards allowed

;
;  dispatch to organization-dependent create code
;

SETORG:	EXTZV	#FAB$V_ORG,#FAB$S_ORG,-
		FAB$B_ORG(R8),R0	; get organization code
	MOVB	R0,IFB$B_ORGCASE(R9)	; and save for dispatching
	BBS	#FWA$V_NODE,(R10),NTCRE	; branch if network operation
	BBC	#DEV$V_SQD,IFB$L_PRIM_DEV(R9),10$    ; branch if not magtape
	BBC	#DEV$V_MNT,IFB$L_PRIM_DEV(R9),ERRDNR ; error, if magtape not mounted
	BBS	#DEV$V_DMT,IFB$L_PRIM_DEV(R9),ERRDNR ; error, if magtape marked for dismount
10$:	CASE	TYPE=B,SRC=R0,-
		DISPLIST=<RM$CREATE1,RM$CREATE2,RM$CREATE3>
					; pick up correct routine

;
;  error returns
;

	$PSECT_BR	L$RMS0
	RMSERR	ORG			; org not supported
RM$CHKBIOCRE::
	BITB	#FAB$M_BIO!FAB$M_BRO,-
		IFB$B_FAC(R9)		; either bio or bro set?
	BEQL	EXIT1			; branch if not (error)
	BRW	RM$BIO_CREATE		; go do block i/o create
	$PSECT_RESTORE

;

ERRRFM:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	RFM		; bad rfm field
	$PSECT_RESTORE

;

ERRFSZ:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	FSZ		; fsz doesn't specify 'put'
	$PSECT_RESTORE

;

ERRMRS:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	MRS		; mrs zero for fixed length rfm
	$PSECT_RESTORE

;

ERRGBC:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	GBC		; GBC must be non-negative
	$PSECT_RESTORE


ERRRAT:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	RAT		; both 'cr' and 'ftn' bits on
	$PSECT_RESTORE

;

ERRDNR:	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	DNR		; device not mounted
	$PSECT_RESTORE

;

ERRSYN:	BBS	#FAB$V_OFP+FOP,(R8),-
		SETORG			; wild card o.k. if ofp set
	$PSECT_BR	L$RMS0
	BSBB	ERROR
	RMSERR_WORD	SYN		; wild card seen

;

ERROR:	MOVZWL	@(SP)+,R0		; pick up in-line error code
EXIT1:	BRW	RM$CLSCU		; and clean up and return
	$PSECT_RESTORE
EXIT:	BRW	RM$CLSCU		; clean up and return to user

;++
; Network specific code for $CREATE.
;--

NTCRE:	$PSECT_BR	NF$NETWORK
	BSBW	NT$ACCESS		; Perform network access function
	BLBC	R0,60$			; Branch on failure
	BBC	#FAB$V_SQO+FOP,(R8),10$	; Branch if SQO not specified
	SSB	#IFB$V_SQO,(R9)		;  and save bit in IFAB
10$:	BBS	#IFB$V_NSP,(R9),30$	; Branch if task-to-task
	BBC	#FAB$V_CIF+FOP,(R8),20$	; Branch if CIF not specified
	BSBW	NT$OPEN			; Try to open file via remote FAL
	BLBS	R0,50$			; Branch on successful open
					; Note that we could check for errors
					;  such as RMS$_DNF, DNR, PRV, WLK, etc.
					;  to avoid getting same error on create
20$:	BSBW	NT$CREATE		; Create file via remote FAL
	BLBC	R0,40$			; Branch on failure
30$:	PUSHR	#^M<R0>			; Save possible alternate success code
	BSBW	RM$FILLNAM		; Fill in NAM block with resultant name
	POPR	#^M<R0>			; Restore status code
	BBC	#FAB$V_CIF+FOP,(R8),40$	; Branch if CIF not specified
	RMSERR	CREATED			; Return alternate success code
40$:	BRW	RM$CREATEXIT		; Join common create code
50$:	BRW	RM$OPEN_CIF		; Join common open code
					;  (which will call RM$FILLNAM)
60$:	RMSERR	CRE,R1			; Establish default error code
	BSBW	RM$MAPERR		; Try to map SS code to RMS code
	BRW	RM$CREATEXIT		; join common create code
	$PSECT_RESTORE
	.END
