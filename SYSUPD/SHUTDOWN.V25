$ !
$ !	This shutdown is a V2 SHUTDOWN.COM that takes input parameters instead
$ !	of prompting.
$ !
$ !		P1 = Number of minutes to go
$ !		P2 = Reason for shutdown
$ !		P3 = Do you want to spin down the disks (Y/N)
$ !
$ ON CONTROL_Y THEN GOTO CLEANUP
$ SET DEFAULT SYS$SYSTEM
$ SET NOON
$ WRITE SYS$OUTPUT "	System shutdown command procedure."
$ SHOW TIME
$ TOGO := 'P1
$ IF P1 .NES. "" THEN GOTO 1
$ INQUIRE TOGO "How many minutes until shutdown?"
$1:
$ TOGO='TOGO
$ WHY := 'P2
$ IF P2 .NES. "" THEN GOTO 2
$ INQUIRE WHY "Reason?"
$2:
$ UNLOAD := 'P3
$ IF P3 .NES. "" THEN GOTO 3
$ INQUIRE UNLOAD "Do you want to spin down the disks?"
$3:
$ IF UNLOAD THEN GOTO 10
$ UNLOAD := /NOUNLOAD
$ DEFINE OPC$UNLOAD N
$ GOTO 20
$10:
$ UNLOAD := /UNLOAD
$ DEFINE OPC$UNLOAD Y
$20:
$ SET PROCESS/PRIVILEGE=(CMKRNL,SYSNAM,OPER,WORLD,SYSPRV)
$ REPLY/ENABLE
$ BATCH=0
$ LOOP:
$ IF TOGO .GT. 4 .OR. BATCH .EQ. 1 THEN GOTO NOTIFY
$ BATCH=1
$ SET LOGIN/INTERACTIVE=0
$ WRITE SYS$OUTPUT "	Non-operator logins are disabled."
$ ASSIGN/USER QUEUE.SXX SYS$OUTPUT
$ SHOW QUEUE /BATCH
$ ASSIGN/USER QUEUE2.SXX SYS$OUTPUT
$ SHOW QUEUE /DEVICE
$ COPY QUEUE.SXX,QUEUE2.SXX QUEUE.SXX
$ OPEN QDATA QUEUE.SXX
$ GNQ:
$	READ/END=WAITL QDATA QREC
$	FQUOTE='F$LOC("""",QREC)+1
$	SIZE='F$LENGTH(QREC)-FQUOTE
$	IF SIZE .LE. 0 THEN GOTO GNQ
$		LQUOTE='F$LOCATE(""" ",QREC)
$		SIZE=LQUOTE-FQUOTE
$		QNAME:='F$EXTRACT(FQUOTE,SIZE,QREC)
$		STOP /QUEUE/NEXT 'QNAME
$	GOTO GNQ
$ WAITL:
$ REPLY/ALL "BATCH AND DEVICE QUEUES HAVE BEEN STOPPED"
$ CLOSE QDATA
$ DELETE  QUEUE.SXX;*,QUEUE2.SXX;*
$ NOTIFY:
$ REASON:=""""'WHY
$ UNIT:=MINUTES.
$ IF TOGO .EQ. 1 THEN UNIT:=MINUTE.
$ A:="""SYSTEM SHUTDOWN IN "'TOGO 'UNIT " LOGINS ARE DISABLED, PLEASE LOGOFF.
$ IF TOGO .GT. 4 THEN A:="""SYSTEM SHUTDOWN IN "'TOGO 'UNIT "
$	REPLY/ALL/BELL 'A
$	REPLY/ALL 'REASON
$	IF TOGO .EQ. 0 THEN GOTO FINISH
	TOGO=TOGO/2
$	DURAT=TOGO
$	IF DURAT .EQ. 0 THEN DURAT=1
$	WAIT 00:'DURAT
$	GOTO LOOP
$ FINISH:
$ WRITE SYS$OUTPUT "	Invoke installation dependent shutdown procedure."
$ @[SYSMGR]SYSHUTDWN
$ WRITE SYS$OUTPUT "	Stop all user processes."
$ ASSIGN/USER PROC.SXX SYS$OUTPUT
$ SHOW SYSTEM
$ OPEN PROC PROC.SXX
$ GNP:
$	READ/END=STOPPED PROC PREC
$	K:='F$EXTRACT(2,1,PREC)
$	IF K .NES. "0" THEN GOTO GNP
$	PID:='F$EXTRACT(2,8,PREC)
$	K='F$LOCATE(",",PREC)-3
$	GROUP:='F$EXTRACT(K,3,PREC)
$	K=K+8
$	STATE:='F$EXTRACT(K,3,PREC)
$	PREC:='F$EXTRACT(11,25,PREC)
$	K='F$LOC(" ",PREC)
$	PREC:='F$EXTRACT(0,K,PREC)
$	IF STATE .EQS. "CUR" THEN GOTO GNP
$	ACP='F$LOCATE("ACP",PREC)
$	IF (ACP .NE. 'F$LENGTH(PREC)) .AND. (GROUP .EQS. "001") -
		THEN GOTO GNP
$	IF PREC .EQS. "NULL" THEN GOTO GNP
$	IF PREC .EQS. "SWAPPER" THEN GOTO GNP
$	IF PREC .EQS. "JOB_CONTROL" THEN GOTO GNP
$	IF PREC .EQS. "OPCOM" THEN GOTO GNP
$	IF PREC .EQS. "ERRFMT" THEN GOTO GNP
$	STOP/ID='PID
$ GOTO GNP
$ STOPPED:
$ CLOSE PROC
$ DELETE PROC.SXX;*
$ WRITE SYS$OUTPUT "	Dismount all mounted volumes."
$ SYSDISK:='F$LOGICAL("SYS$SYSTEM")
$ K='F$LOCATE(":",SYSDISK)
$ SYSDISK:='F$EXTRACT(0,K,SYSDISK)
$ ASSIGN/USER MDATA.SXX SYS$OUTPUT
$ SHOW DEVICE/MOUNT
$ OPEN MDATA MDATA.SXX
$ DELETE MDATA.SXX;*
$ GND:
$	READ/END=DMOUTED MDATA MREC
$	K='F$LOCATE("mnt",MREC)
$	IF K .EQ. 'F$LENGTH(MREC) THEN GOTO GND
$	QPOS='F$LOC(":",MREC)
$	DEVNAM:='F$EXTRACT(0,QPOS,MREC)
$	IF SYSDISK .EQS. DEVNAM THEN GOTO GND
$	DISMOUNT 'DEVNAM' 'UNLOAD' /UNIT
$ GOTO GND
$ DMOUTED:
$ CLOSE MDATA
$ REQUEST "OPERATOR REQUESTED SHUTDOWN"
$ REPLY/NOLOG
$ WAIT 00:00:05
$ RUN SYS$SYSTEM:OPCCRASH
$ CLEANUP:
$ CLOSE QDATA
$ CLOSE MDATA
$ CLOSE PROC
$ DELETE *.SXX;*
