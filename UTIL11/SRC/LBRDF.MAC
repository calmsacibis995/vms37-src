	.TITLE	LBRDF
	.IDENT	/V03000/

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; VERSION 06.01
;
; WRITTEN BY:
;	GEORGE W. BERRY
;
; MODIFIED BY:
;	C.A. D'ELIA	22-MAY-74
;	C.A. D'ELIA	02-JUL-74  (VIRTUAL TABLES)
;	C.A. D'ELIA	05-SEP-74
;	THOMAS J. MILLER 01-NOV-74
;
;	T. J. MILLER 11-JAN-76
;
;		TM001 -- ADDITION OF EXTRACT SWITCH (/EX).
;
;	T. J. MILLER 22-JAN-76
;
;		TM002 -- ADDITION OF ENTRY POINT SWITCH (/EP).
;
;	B. ALIMONTI	2-OCT-78
;		BA002 -- ADDITION OF UNIVERSAL MODULE TYPE
;
;
;	B. ALIMONTI	17-APR-79
;		BA016 -- DEDICATE LUN 8 TO ERROR MESSAGE REPORTING
;
;
;

;
; MONITOR DEPENDENT I/O DATA BASE
;
; EQUATED SYMBOLS
;
F$DEVL==16.			;MAX LENGTH OF DEVICE NAME
F$DIRL==31.			;MAX LENGTH OF DIRECTORY NAME
F$FILL==17.			;MAX LENGTH OF FILENAME


;
; MACRO LIBRARY CALLS
;

	.MCALL	CSI$
	CSI$
	.MCALL	FDOFF$
	FDOFF$	DEF$L
	.MCALL	GCMLD$
	GCMLD$
	.MCALL	FCSBT$
	FCSBT$

	.MCALL	CSI$ND,CSI$SV,CSI$SW,FDAT$A,FDBDF$,FDOP$A
	.MCALL	FDRC$A,FSRSZ$,GCMLB$,NMBLK$



;
; LOCAL MACROS
;
; CLOSE SWITCH P-SECTION
;
; CLOSCT A
;
;	A=FIRST THREE CHARACTERS OF BLOCK NAME.
;

	.MACRO	CLOSCT A
	.PSECT	A'SWT,D,GBL
	.WORD	0
	.PSECT
	.ENDM

;
; GENERATE CONTROL BLOCK
;
; GENBLK A,B,C,DD,E,F,G,H,I,J,K
;
; WHERE:
;
;	A=FIRST THREE CHARACTERS OF BLOCK NAME.
;	B=RECORD TYPE.
;	C=RECORD ATTRIBUTES.
;	DD=RECORD SIZE.
;	E=RECORD ACCESS.
;	F=RECORD BUFFER SIZE.
;	G=LOGICAL UNIT.
;	H=FILE POINTER SWITCH.
;	I=DEFAULT FILE TYPE.
;	J=DEFAULT DEVICE NAME.
;	K=DEFAULT DEVICE UNIT.
;

	.MACRO	GENBLK A,B,C,DD,E,F,G,H,I,J,K
	.PSECT	A'PT,D,GBL
$'A'PT::.WORD	A'PT
A'PT::	FDBDF$
	FDAT$A	B,C,DD
$$=0
	.IF NB	F
	.PSECT	A'BUF,D,GBL
$$=.
	.BLKB	F
	.PSECT	A'PT,D,GBL
	.ENDC
	FDRC$A	E,$$,F
	.PSECT	A'NAM,D,GBL
$$=.
A'NAM::
	NMBLK$	,I,,J,K
$$0=0
	.IF NB	H
	.PSECT	A'DV,D,GBL
$$1=.
	.BLKB	F$DEVL
	.PSECT	A'DR,D,GBL
$$2=.
	.BLKB	F$DIRL
	.PSECT	A'FL,D,GBL
$$3=.
	.BLKB	F$FILL
	.PSECT	A'FP,D,GBL
$$0=.
	.BLKW	1
	.WORD	$$1
	.BLKW	1
	.WORD	$$2
	.BLKW	1
	.WORD	$$3
	.ENDC
	.PSECT	A'PT,D,GBL
	FDOP$A	G,$$0,$$
R$NAME==.-A'PT
	.WORD	A'PT+F.FNB+N.FNAM
R$SWTH==.-A'PT
	.BLKW	1
R$SWBK==.-A'PT
	.WORD	A'SW
	.PSECT	A'SWT,D,GBL
A'SW:
	.PSECT
	.ENDM


;
; GENERATE SWITCH CONTROL BLOCK
;
; GENSWT A,B,C,D,E,F,G
;
;	A=FIRST THREE CHARACTERS OF RECORD BLOCK NAME.
;	B=A 2 CHARACTER SWITCH NAME.
;	C=SWITCH MASK.
;	DD=ADDRESS OF SWITCH WORD.
;	E=SWITCH MASK DISPOSITION.
;	F=NEGATE ENABLE.
;	G=ADDRESS OF SWITCH VALUE TABLE.
;

	.MACRO	GENSWT	A,B,C,DD,E,F,G
	.PSECT	A'SWT,D,GBL
	CSI$SW	B,C,DD,E,F,G
	.PSECT
	.ENDM


;
; GET COMMAND INPUT CONTROL BLOCK
;

	.PSECT	CMIPT,D,GBL
$CMIPT::.WORD	CMIPT		;POINTER TO CONTROL BLOCK

ILVL=3				;MAX LEVEL OF 3 INDIRECT FILES

	.IIF DF	R$$11M,ILVL=1	;ONE INDIRECT FILE IN RSX-11M VERSION

CMIPT:	GCMLB$	ILVL,LBR,$LNBUF


;
; FILE CONTROL BLOCKS
;

$CMOLN==2			;LUN USED FOR COMMAND OUTPUT
$ERRLN==8.			;LUN USED FOR ERROR MESSAGE REPORTING

	.IF NDF	Q$$CMO
	GENBLK	CMO,R.VAR,,80.,,,$CMOLN  ;COMMAND OUTPUT ($CMOPT)
	.ENDC


	GENBLK	INP,,,,4,132.,3,1,,SY  ;INPUT ($INPPT)
	GENBLK	LIS,R.VAR,,74.,,,4,1,LST,SY  ;LISTING ($LISPT)
	GENBLK	LBR,R.FIX,,512.,10,,5,1,,SY  ;LIBRARY ($LBRPT)
	GENBLK	CMP,R.FIX,,512.,10,,6,1,,SY  ;COMPRESS ($CMPPT)
	GENBLK	EXT,R.VAR,,512.,,,4,1,,SY                                       ; TM001



;
; OTHER WORK FILE RELATED DATA
;

$FRHD::	.BLKW	2		;FREE MEMORY LIST HEAD



;
; SPECIFY ACTIVE FILE REQUIREMENTS
;

AFILES=3			;3 ACTIVE FILES ARE REQUIRED

	.IIF DF	Q$$CMO,AFILES=AFILES-1  ;ONE LESS IF Q I/O TO CMD OUTPUT

	FSRSZ$	AFILES
	.PAGE
;+
;
; LIBRARIAN DATA BASE:
;	LIBRARY HEADER BLOCK
;	ENTRY POINT TABLE
;	MODULE NAME TABLE
;
;-

	.PSECT	BUFFER

;
; DEFINE THE LIBRARY HEADER

;	(ORDERED DATA)
;
L$BUF::

L$TYP::	.BLKB	1		;LIBRARY TYPE (OBJ, ETC)
L$ID::	.BLKB	1		;LIBRARY FILE ID
L$VER::	.BLKW	2		;CREATED BY LBR VERSION V-RRRRRR
L$DAT::	.BLKW	6		;DATE OF LAST MODULE INSERTION
L$ES::	.BLKB	1		;SIZE OF LIBRARY EPT ENTRIES
	.BLKB	1		;UNUSED BYTE
L$ET::	.BLKW	1		;LOW-ORDER VBN OF START OF EPT IN FILE
L$EI::	.BLKW	1		;NUMBER OF EPT ENTRIES ALLOCATED
L$EA::	.BLKW	1		;NUMBER OF EPT ENTRIES AVAILABLE
L$MS::	.BLKB	1		;SIZE OF LIBRARY MNT ENTRIES
	.BLKB	1		;UNUSED BYTE
L$MT::	.BLKW	1		;LOW-ORDER VBN OF START OF MNT IN FILE
L$MI::	.BLKW	1		;NUMBER OF MNT ENTRIES ALLOCATED
L$MA::	.BLKW	1		;NUMBER OF MNT ENTIRES AVAILABLE
L$LD::	.BLKW	2		;LOGICALLY DELETED MODULE SPACE (BYTES)
L$LA::	.BLKW	2		;BYTES AVAILABLE FOR MODULE INSERTS
L$NX::	.BLKW	2		;ADDR (VBN+OFFSET) OF NEXT MODULE INSERT
L$UEX::	.BLKW	1		;UNIVERSAL LIBRARY DEFAULT INSERT FILE EXT


.=L$BUF+512.			;MUST USE 256. WORD BLK FOR LIBRARY HDR


;
; THIS BUFFER IS EXPANDED AS NEEDED AT LINK TIME.  THE FOLLOWING
; .PSECT ENABLES THE RUNNING LIBRARIAN TO DETERMINE THE SIZE OF THIS
; BUFFER.
;
; NOTE: WHEN RUNNING ON RSX-11M SYSTEM, THE AMOUNT OF DYNAMIC BUFFER
; MEMORY IS DETERMINED AT RUN TIME BY OBTAINING INFORMATION ABOUT
; ITS PARTITION'S AND ITS OWN ADDRESS LIMITS.
;

	.PSECT	BUFFES

$LBEND::			;REF LABEL TO END OF BUFFER

	.PSECT
	.PAGE
;
; LBR FILE ID (INSURES ITS A LIBRARY FILE)
;

ID$==2


;
; ENTRY POINT TABLE (EPT)
;

EPTBLK	==2			;STARTING DISK BLOCK OF EPT


;
; MODULE HEADER RECORD
;

MHSIZE	==100			;MAXIMUM SIZE OF MODULE HEADER
 


;
; MODULE HEADER READ/WRITE BUFFER
;

$MHBUF::.BLKB	MHSIZE		;MODULE HEADER BUFFER

$MHST	==$MHBUF		;HEADER STATUS
$MHAT	==$MHBUF+1		;MODULE ATTRIBUTES (SEL-SRCH, ETC)
$MOSZ	==$MHBUF+2		;SIZE OF MODULE IN BYTES
$MHDA	==$MHBUF+6		;DATE MODULE INSERTED
$MHID	==$MHBUF+14		;ADDITIONAL TYPE DEPENDENT ENTRIES
$MHOP1	==$MHBUF+20		;OP. INFO. 1 (UNV MODULE ONLY)
$MHOP2	==$MHBUF+24		;OP. INFO. 2 (UNV MODULE ONLY)
$MHOP3	==$MHBUF+30		;OP. INFO. 3 (UNV MODULE ONLY)
$MHOP4	==$MHBUF+34		;OP. INFO. 4 (UNV MODULE ONLY)
$MHUFA	==$MHBUF+40		;USER FILE ATTRIBUTES (H.UFAT OF FILE BLK HDER)
 
 
;
; BIT PATTERNS FOR MODULE ATTRIBUTES IN $MHAT
;
 
SS$	==1			;SELECTIVE SEARCH ATTRIBUTE
CN$TG	==2			;INPUT FILE WAS CONTIGIOUS


;
; TYPE DEPENDENT INFORMATION
;

TY$	==2			;HIGHEST LEGAL MODULE TYPE CODE

; OBJECT MODULE TYPE

TY$OBJ	==0			;DEFINES OBJ MODULE TYPE
E$OBJ	==10			;EPT ENTRY SIZE
M$OBJ	==10			;MNT ENTRY SIZE
HS$OBJ	==20			;MODULE HEADER SIZE

; MACRO DEFINITION MODULE TYPE
TY$MAC	==1			;DEFINES MACRO DEF MODULE TYPE
E$MAC	==0			;NO EPT IN MACRO DEF TYPE
M$MAC	==10			;MNT ENTRY SIZE
HS$MAC	==20			;MODULE HEADER SIZE
 
; UNIVERSAL MODULE TYPE
TY$UNI	==2			;DEFINES UNI MODULE TYPE
E$UNI	==0			;NO EPT IN UNIVERSAL TYPE
M$UNI	==10			;MNT ENTRY SIZE
HS$UNI	==100			;MODULE HEADER SIZE
 
 
 
;
; BUFFER FOR MODULE RECORDS (BLOCKS FOR UNIVERSAL MODULES)
;
 
$BFSIZ	==512.			;MAXIMUM BUFFER SIZE
$RECBF::	.BLKB	$BFSIZ	;BUFFER FOR MODULE CONTENTS


;
; EPT/MNT PARTITION DESCRIPTOR LIST
;

$PARTD::
	.RAD50	/E99/		;A  -  E
	.RAD50	/K99/		;F  -  K
	.RAD50	/S99/		;L  -  S
	.RAD50	/Z99/		;T  -  Z
	.RAD50	/$L9/		;$  -  $L
	.RAD50	/$99/		;$M -  $9
	.RAD50	/.L9/		;.  -  .L
	.RAD50	/999/		;.M -  999

NU$PAR == <.-$PARTD>/2		;NUMBER OF TABLE PARTITIONS
	.PAGE
;+
;
; IMPURE DATA BASE AREA
;
; THE AREA BETWEEN 'DBASE' AND 'DBEND' IS ZEROED INITIALLY.
;
;-
DBASE	==.

;
; PARTITION LIST HEADS FOR THE EPT AND MNT
;

$EPTHL::.BLKW	NU$PAR		;EPT LIST HEADS
$MNTHL::.BLKW	NU$PAR		;MNT LIST HEADS

$HDLST::.BLKW	1		;POINTER TO LIST HEADS IN USE


;
; POINTER TO FDB OF FILE CURRENTLY OPEN (OTHER THAN LIBRARY FILE)
;

$OPNFL::.BLKW	1


;
; TELETYPE ATTACHED INFORMATION (FOR LIBRARY LISTING)
;

$ATTFG::.BLKB	1		;TELETYPE ATTACHED FLAG
	.BLKB	1		;TELETYPE LUN


;
; SWITCH OPTION WORD AND LIBRARIAN STATUS WORD
;

$SWTCH::.BLKW	2


;
; MNT DESCRIPTOR BLOCK
;

$MNBLK::.BLKW	3
$MNES	==$MNBLK		;MNT ENTRY SIZE
$MNADR	==$MNBLK+2		;ADDRESS OF MNT LIST HEADS
$MNSIZ	==$MNBLK+4		;NUMBER OF ENTRIES IN MNT


;
; EPT DESCRIPTOR BLOCK
;

$EPBLK::.BLKW	3
$EPES	==$EPBLK		;EPT ENTRY SIZE
$EPADR	==$EPBLK+2		;ADDRESS OF EPT LIST HEADS
$EPSIZ	==$EPBLK+4		;NUMBER OF ENTRIES IN EPT


;
; -- $DMN -- MODULE DELETION LIST (USED BY /DE AND /DG)
;
; THIS LIST CONTAINS THE NAMES (IN RADIX 50) OF THE
; MODULES TO BE DELETED WITH /DE.
;
$DMSIZ	==30.			;NUMBER OF NAMES PERMITTED

$DMN::	.BLKW	2*$DMSIZ+1
$DEND	==.-12
$DGEND	==.-2
 
 
;+
; --$HDI-- MODULE HEADER INFO. (USED BY /IN, /RP, AND /MH) SUPPLIED FOR
; A UNIVERSAL MODULE. THIS INFO. IS THE MODULE NAME, AND FOUR
; SETS OF OPTIONAL INFORMATION.  ALL INFO. IS ASCII, BUT LATER CHANGED
; TO RAD50.
;-
 
$MHVSZ	==5			;MAX NUM OF SWITCH VALUES OF /MH
$INVSZ	==5			;MAX NUM OF SWITCH VALUES OF /IN
 
$HDI::	.BLKW	3*$MHVSZ+3*$INVSZ
 
$MHBLK	==$HDI
 
 


;
; /CR PARAMETERS
;

PBLK:	.BLKW	6
$SIZ	==PBLK			;SIZE OF NEW FILE IN BLOCKS
$EPT	==PBLK+2		;EPT ENTRIES TO ALLOCATE
$MNT	==PBLK+4		;MNT ENTRIES TO ALLOCATE
$TYP	==PBLK+6		;TYPE OF LIBRARY FILE
$EXTIN	==PBLK+10		;UNI LIB DEFAULT INSERT FILE EXTENSION


;
; END OF IMPURE DATA BASE AREA
;

DBEND=.
DSIZE	==<DBEND-DBASE>/2
	.PAGE
 
 
 
;
; I/O STATUS BLOCK FOR READ$/WRITE$ FOR UNIVERSAL LIBRARY
;
 
$BKSTA::.BLKW	2
 
 
 
 
;
; UNIVERSAL MODULE NAME BUFFER
;
 
$UNINM::.BLKW	2		;UNIVERSAL MOUDLE NAME
 
	.WORD	0		;NEEDED HERE BECAUSE ROUTINE CSTOR IN LBRCD
				;ZEROS WORD FOLLOWING BUFFER
 
 
 
;
; STORAGE FOR RAD50 OF DEFAULT UNI LIB INSERT FILE EXTENSION
;
 
$UNIEX::	.WORD	0
 
 
 
 
;
; TABLE OF TYPE DEPENDENT CO-ROUTINES (INDEXED BY TYPE)
;
 
$INSUB::
	.WORD	$INOBJ		;OBJ TYPE - INSERT OBJ MODULES
	.RAD50	/OBJ/		;DEFAULT EXTENSION IS OBJ
	.WORD	$INMAC		;MAC TYPE - INSERT MAC MODULES
	.RAD50	/MAC/		;DEFAULT EXTENSION IS MAC
	.WORD	$INUNI		;UNI TYPE - INSERT UNI MODULES
	.WORD	0		;HERE TO CONFORM TO OTHER LIBRARY TYPES
 
 
 
;
; STORAGE REQURIED FOR 'GTCML' INTERFACE ROUTINE
;

$LNDES::.BLKW	2		;COMMAND LINE DESCRIPTOR
$LNBUF::.BLKW	42.		;COMMAND LINE BUFFER

$CMFLG::.WORD	0		;NO SPECIAL PROMPT FROM $GTCML


;
; EPT ENTRY SIZE TABLE (INDEXED BY TYPE)
;

TY$ES::
	.BYTE	E$OBJ		;SIZE OF OBJECT MODULE EPT ENTRIES
	.BYTE	E$MAC		;SIZE OF MACRO DEF MODULE EPT ENTRIES
	.BYTE	E$UNI		;SIZE OF UNIVERSAL MODULE EPT ENTRIES


;
; MNT ENTRY SIZE TABLE (INDEXED BY TYPE)
;

TY$MS::
	.BYTE	M$OBJ		;SIZE OF OBJECT MODULE MNT ENTRIES
	.BYTE	M$MAC		;SIZE OF MACRO DEF MODULE MNT ENTRIES
	.BYTE	M$UNI		;SIZE OF UNIVERSAL MODULE MNT ENTRIES


	.EVEN
;
; CURRENT DEFAULT LIBRARY TYPE (INITIALLY OBJ)
;
DF$TYP::.WORD	0


;
; REGISTER SAVE AREA FOR CONTINUOUS ASSOCIATIVE SEARCH
;

SR0::	.BLKW	5

;
; THIS PSECT CONTAINS A ONE WORD ENTRY FOR EACH LIBRARY TYPE CONTAINING
; THE DEFAULT LIBRARY EXTENSION FOR LIBRARY FILES OF THE TYPE.  THE
; THE ENTRIES ARE IN THE MODULE LBRCD, BUT THEY ARE REFERENCED THROUGH
; THE GLOBAL SYMBOL DEFINED HERE.  ALLOCATION FOR THE ENTRIES IS IN THE ROOT.
;

	.PSECT	DFTYP,D,GBL,OVR
LBRTAB::
	.PSECT


;
; PARAMETERS FOR .XQIO CALL (READ/WRITE USER FILE ATTRIBUTES TO/FROM MOD HDER)
;
 
$RUFAP::.WORD	INPPT+F.FNB+N.FID,ATTLST,0,0,0,0
$WUFAP::.WORD	EXTPT+F.FNB+N.FID,ATTLST,0,0,0,0
 
ATTLST::.BYTE	0,32.		;READ/WRITE ATTRIBUTES CONTROL BLK
	.WORD	$MHUFA		;STARTING ADDR OF WHERE READ FROM/WRITEN TO
	.WORD	0
 
 
 
;
; MESSAGE OUTPUT BUFFER -- NOTE THE 'OVR' .PSECT ATTRIBUTE USED TO
; SHARE THE ALLOCATED SPACE BETWEEN FOLLOWING MODULES:
;	NORMAL MESSAGE OUTPUT ROUTINE ($OUT)
;	ERROR MESSAGE OUTPUT ROUTINE ($ERMSG)
;	TABLE INPUT ROUTINES ($RDEP/$RDMN)
;

	.PSECT	OUTBUF,D,GBL,OVR

$OUTBF::.BLKB	128.

	.PSECT
	.PAGE
;
; CSI DEPENDENT DATA BASE
;

$CSIBK::.BLKB	C.SIZE		;CSI BLOCK


;
; SWITCHES DEFINED AS BITS IN $SWTCH
;

CR$SW	==100000		;/CR (CREATE)
IN$SW	==40000			;/IN (INSERT)
DL$SW	==20000			;/DL (DELETE)
RP$SW	==10000			;/RP (REPLACE)
CO$SW	==4000			;/CO (COMPRESS)
LI$SW	==2000			;/LI (LIST)
LE$SW	==1000			;/LE (LIST MODULE ENTRY POINTS)
FU$SW	==400			;/FU (LIST FULL MODULE ID)
SP$SW	==200			;/SP (SPOOL OUTPUT)
SS$SW	==100			;/SS (SELECTIVE SEARCH ATTRIBUTE)
DF$SW	==40			;/DF (SET DEFAULT TYPE)
SZ$SW	==20			;/SZ (SQUEEZE)
EX$SW	==10			;/EX (EXTRACT)                                  ; TM001
EP$SW	==4			;/EP (ENTRY POINT)                              ; TM002
MH$SW	==2			;/MH (MODIFY HEADER)
;
; STATUS BITS DEFINED IN $SWTCH+2
;
IN$COR	==100000		;LBR HEADER, EPT AND MNT IN CORE
LB$DTY	==40000			;LBR HEADER, EPT OR MNT HAS BEEN MODIFIED
;
; THE FOLLOWING IS DEFINED FOR GTCML COMPATIBILITY BUT IS NOT USED
;
EN$DR	==0

; SWITCH COMBINATION DEFINITIONS

XC$SW	==CR$SW!IN$SW!DL$SW!SZ$SW ;ALL BUT /CO AND /LI
CO$DL	==CO$SW!DL$SW		;CO$SW+DL$SW
LI$FU	==LI$SW!FU$SW		;LI$SW+FU$SW
LI$LE	==LI$SW!LE$SW		;LI$SW+LE$SW


;
; GENERATE SWITCH CONTROL BLOCKS
;

	GENSWT	LBR,CR,CR$SW,$SWTCH,SET,,CRVAL
	GENSWT	LBR,CO,CO$SW,$SWTCH,SET,,COVAL
	GENSWT	LBR,IN,IN$SW,$SWTCH,SET,,INVAL
	GENSWT	LBR,RP,RP$SW,$SWTCH,SET,NEG,INVAL
	GENSWT	LBR,SZ,SZ$SW,$SWTCH,SET
	GENSWT	LBR,SS,SS$SW,$SWTCH,SET,NEG                                     ; TM001
	GENSWT	LBR,LI,LI$SW,$SWTCH,SET
	GENSWT	LBR,FU,LI$FU,$SWTCH,SET
	GENSWT	LBR,LE,LI$LE,$SWTCH,SET
	GENSWT	LBR,DE,DL$SW,$SWTCH,SET,,DLVAL
	GENSWT	LBR,DF,DF$SW,$SWTCH,SET,,DFVAL
	GENSWT	LBR,DG,DL$SW,$SWTCH,SET,,DGVAL
	GENSWT	LBR,EX,EX$SW,$SWTCH,SET,,DLVAL                                  ; TM001
	GENSWT	LBR,EP,EP$SW,$SWTCH,CLEAR,NEG                                   ; TM002
	GENSWT	LBR,MH,MH$SW,$SWTCH,SET,,MHVAL

	GENSWT	LIS,LI,LI$SW,$SWTCH,SET
	GENSWT	LIS,FU,FU$SW,$SWTCH,SET
	GENSWT	LIS,LE,LE$SW,$SWTCH,SET
	GENSWT	LIS,SP,SP$SW,$SWTCH,CLEAR,NEG

	GENSWT	INP,IN,IN$SW,INPPT+R$SWTH,SET,,INVAL
	GENSWT	INP,RP,RP$SW,INPPT+R$SWTH,SET,NEG,INVAL
	GENSWT	INP,SZ,SZ$SW,INPPT+R$SWTH,SET,NEG
	GENSWT	INP,SS,SS$SW,INPPT+R$SWTH,SET,NEG
	GENSWT	INP,EP,EP$SW,INPPT+R$SWTH,CLEAR,NEG                             ; TM002


	.PSECT	LBRVAL,D,GBL

;
; VALUE BLOCK FOR /CR:SIZ:EPT:MNT:LIB-TYPE:FILETYPE
;
CRVAL:	CSI$SV	NUMERIC,$SIZ,2
	CSI$SV	NUMERIC,$EPT,2
	CSI$SV	NUMERIC,$MNT,2
	CSI$SV	ASCII,L$BUF,3
	CSI$SV	ASCII,$EXTIN,3

	CSI$ND


;
; VALUE BLOCK FOR /CO:SIZ:EPT:MNT
;
COVAL:	CSI$SV	NUMERIC,$SIZ,2
	CSI$SV	NUMERIC,$EPT,2
	CSI$SV	NUMERIC,$MNT,2

	CSI$ND
;
; VALUE BLOCK FOR /DF:TYP
;
DFVAL:	CSI$SV	ASCII,L$BUF+3,3

	CSI$ND
 
 
;
; VALUE BLOCK FOR /MH:NAME:OP1:OP2:OP3:OP4, ...
;
ZZZ=0
 
MHVAL:
	.REPT	$MHVSZ
	CSI$SV	ASCII,$MHBLK+ZZZ,6
	ZZZ=ZZZ+6
	.ENDR
 
$INBLK	==$HDI+ZZZ
 
	CSI$ND
 
 
;
; VALUE BLOCK FOR /IN[:NAME:OP1:OP2:OP3:OP4], ... .
; ALSO FOR /RP WITH THE SAME SWITCH VALUES.
;
ZZZ=0
INVAL:
	.REPT	$INVSZ
	CSI$SV	ASCII,$INBLK+ZZZ,6
	ZZZ=ZZZ+6
	.ENDR
 
	CSI$ND

;
; VALUE BLOCK FOR /DE:NAME1:NAME2:...
;
$DBLK	==L$BUF+6		;ADDRESS TO STORE NAMES
ZZZ=0

DLVAL:
	.REPT	$DMSIZ
	CSI$SV	ASCII,$DBLK+ZZZ,6
	ZZZ=ZZZ+6
	.ENDR

$DGBLK	==$DBLK+ZZZ

	CSI$ND


;
; VALUE TABLE FOR /DG:NAME:NAME:...
;
ZZZ=0

DGVAL:
	.REPT	$DMSIZ
	CSI$SV	ASCII,$DGBLK+ZZZ,6
	ZZZ=ZZZ+6
	.ENDR

	CSI$ND

	.PSECT


;
; CLOSE SWITCH P-SECTIONS
;

	CLOSCT	LBR
	CLOSCT	LIS
	CLOSCT	INP
	CLOSCT	CMP


	.END
