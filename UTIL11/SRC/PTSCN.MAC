	.TITLE	PTSCN
	.IDENT	/V03000/

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION 00
;
; D.N. CUTLER 16-OCT-72
;
; MONITOR DEPENDENT COMMAND STRING ANALYSIS ROUTINES
;
; MACRO LIBRARY CALLS
;

	.MCALL	CSI$,CSI$1,CSI$2

;
; EQUATED SYMBOLS
;

	CSI$			;DEFINE CSI BLOCK OFFSET DEFINITIONS
 
;
; MAXIMUM SUBSTRING LENGTHS
;
 
F$DEVL==16.			;DEVICE FIELD
F$DIRL==31.			;DIRECTORY FIELD
F$FILL==17.			;FILE NAME FIELD
 
T$MSIZ==C.SIZE			;SIZE OF CSI BLOCK

;+
; **-$SCANI/$SCANO-SCAN FOR INPUT/OUTPUT FILE SPECIFCICATION
;
; THIS ROUTINE IS CALLED TO SCAN A COMMAND STRING FOR THE NEXT INPUT
; OR OUTPUT FILE. $SYNTX MUST HAVE BEEN PREVIOUSLY CALLED TO SET UP
; THE COMMAND BUFFER AND TO DO THE SYNTAX ANALYSIS.
;
; INPUTS:
;
;	R0=ADDRESS OF RECORD BLOCK.
;	R1=ADDRESS OF TEMP BUFFER AREA.
;	R2=ADDRESS OF CSI SWITCH BLOCK
;
; OUTPUTS:
;
;	C=1 IF NO FILE SPECIFIED OR ILLEGAL SWITCH.
;	C=0 IF REQUEST IS SUCESSFUL.
;	IN EITHER CASE R0 IS RETURNED AS THE MORE FILES FLAG.
;		IF R0 EQ 0, THEN MORE FILES ARE SPECIFIED.
;		IF R0 EQ 1, THEN NO MORE FILES ARE SPECIFIED.
;-

$SCANI::MOVB	#CS.INP,C.TYPR(R1);SET FOR INPUT FILE
	BR	SCANO		;
$SCANO::MOVB	#CS.OUT,C.TYPR(R1);SET FOR OUTPUT FILE
SCANO:	SAVRG			;SAVE NONVOLITILE REGISTERS
	MOV	R0,R5		;SAVE RECORD BLOCK ADDRESS
	CSI$2	R1,,R2		;GET FILE SPECIFICATION
	MOV	R1,R2		;COPY CSI BLOCK ADDRESS
	MOVB	C.STAT(R2),R4	;GET STATUS BYTE
	BCS	10$		;IF CS ILLEGAL SWITCH
	BITB	#CS.NMF!CS.DVF,R4;FILE OR DEVICE SPECIFIED?
	BEQ	60$		;IF EQ NO
	BITB	#CS.WLD,R4	;WILD CARD SPECIFIED?
	BNE	20$		;IF NE YES
	CMP	#F$DEVL,C.DEVD(R2);LEGAL DEVICE NAME LENGTH?
	BLO	40$		;IF LO NO
	CMP	#F$DIRL,C.DIRD(R2);LEGAL DIRECTORY NAME LENGTH?
	BLO	35$		;IF LO NO
	CMP	#F$FILL,C.FILD(R2);LEGAL FILENAAME LENGTH?
	BLO	20$		;IF LO NO
	ADD	#C.DSDS,R2	;POINT TO CSI DATA SET DESCRIPTOR
	MOV	R2,F.DSPT(R5)	;SET ADDRESS OF DESCRIPTOR
	BR	70$		;

;
; ILLEGAL SWITCH SPECIFICATION
;

10$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY
	.BYTE	E$R20,S$V2	;FATAL-NO RETURN
	BR	30$		;

;
; ILLEGAL FILE SPECIFICATION
;

20$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY
	.BYTE	E$R21,S$V2	;FATAL-NO RETURN
30$:	ADD	#C.FILD,R2	;POINT TO FILENAME DESCRIPTOR
	BR	50$		;

;
; ILLEGAL DIRECTORY NAME
;

35$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY
	.BYTE	E$R24,S$V2	;FATAL-NO RETURN
	ADD	#C.DIRD,R2	;POINT TO DIRECTORY NAME
	BR	50$		;

;
; ILLEGAL DEVICE SPECIFICATION
;

40$:	MOV	(PC)+,R1	;GET ERROR,SEVERITY
	.BYTE	E$R22,S$V2	;FATAL-NO RETURN
	ADD	#C.DEVD,R2	;POINT TO DEVICE NAME DESCRIPTOR
50$:	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
60$:	SEC			;SET CARRY
70$:	ROR	-(SP)		;SAVE CARRY BIT
	CLR	R0		;ASSUME MORE FILES ARE SPECIFIED
	BITB	#CS.MOR,R4	;MORE FILES?
	BNE	80$		;IF NE YES
	INC	R0		;SET NO FILES
80$:	ROL	(SP)+		;RESTORE CARRY
	RETURN			;

;+
; **-$SYNTX-COMMAND STRING SYNTAX ANALYSIS
;
; THIS ROUTINE IS CALLED TO ANALYZE A COMMAND STRING FOR CORRECT SYN-
; TAX AND TO SET UP THE COMMAND BUFFER FOR THE ABOVE SCAN ROUTINES.
;
; INPUTS:
;
;	R0=ADDRESS OF BYTE COUNT,REC ADDR DOUBLEWORD.
;	R1=ADDRESS OF TEMP BUFFER AREA
;
; OUTPUTS:
;
;	C=1 IF SYNTAX ERROR.
;	C=0 IF NO SYNTAX ERROR.
;-

$SYNTX::MOV	(R0)+,C.CMLD(R1);SET LENGTH OF LINE
	MOV	(R0),C.CMLD+2(R1);SET ADDRESS OF LINE
	CSI$1	R1		;ANALYZE SYNTAX
	BCC	10$		;IF CS RETURN
	MOV	R1,R2		;COPY ADDRESS OF CSI BLOCK
	ADD	#C.CMLD,R2	;POINT TO LINE SEGMENT DESCRIPTOR
	MOV	(PC)+,R1	;SYNTAX ERROR
	.BYTE	E$R23,S$V1	;DIAGNOSTIC
	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
	SEC			;SET CARRY
10$:	RETURN			;

	.END
