	IDENT	0116,FILMSG,<FILE HEADER TO ASCII>
; ALTERED THURSDAY 21-NOV-74 9:45
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN 5-JUNE-73
; ANDREW C. GOLDSTEIN  20-MAR-78  16:20
;
	.MCALL	CALL,RETURN,FDOF$L
	FDOF$L
;
	HDFNAM=1		;IF SET IN R3, CONVERT THE FILE NAME
	HDLONG=2		;IF SET IN R3, LONG FORM CONVERSION
;
	PURE.D
;
; FIELD DEFINITION TABLES
$HDTB1::.BYTE	20.,8.,3.	;SHORT FORM
$HDTB2:	.BYTE	20.,16.,14.,3.,16.,2,9.,22.,24. ;LONG FORM
	.EVEN

;
	PURE.I
;+
; CONVERT FILE HEADER TO STRING
; CALLING SEQUENCE:
;	CALL	$FILMG
; INPUTS
;	R0=STRING ADDRESS TO PUT CHARACTERS IN
;	R1=ATTRIBUTE BUFFER ADDRESS (DEFINED IN PIPMAC)
;	R2=STATISTICS BLOCK ADDRESS
;	R3=CONVERT CONTROL BITS (0-7)
;		BIT 0 = 0 SKIP THE FILE NAME, TYPE, AND VERSION
;		BIT 0 = 1 CONVERT THE FILE NAME, TYPE AND VERSION
;		BIT 1 = 0 SHORT FORM CONVERSION
;		BIT 1 = 1 LONG FORM CONVERSION
;	R3 BITS 8-15 - LISTING WIDTH OF LINE, (>=132. FOR LONG 1 LINER)
; OUTPUTS:
;	R0=UPDATED STRING POINTER
;	R1=TOTAL NUMBER OF BYTES CONVERTED
;	R2-R5 PRESERVED
;-
$FILMG::	JSR	R5,$SAVRG	;SAVE R3-R5
	MOV	R0,-(SP)
	MOV	R2,-(SP)
	MOV	R3,-(SP)	;TOP OF STACK=CONTROL BITS
	MOV	R1,R3		;R3=ADDRESS OF HEADER
	MOV	R1,R4		;ANOTHER COPY OF BUFFER
	MOV	#$HDTB1,R5
	BIT	#HDLONG,@SP
	BEQ	10$
	MOV	#$HDTB2,R5	;R5=FIELD CONTROL TABLE
10$:	BIT	#HDFNAM,@SP	;CONVERT FILE NAME, TYPE, AND VERSION?
	BEQ	20$		;BRANCH IF NO
;
; CONVERT THE FILE NAME, TYPE, AND VERSION
	MOV	#HD01MG,R1
	MOV	R4,R2
	ADD	#AB.NAM,R2	;R2 POINTS AT RAD50 NAME, TYPE VER
	CALL	$EDMSG
	CALL	HDFILL		;FILL OUT THE FIELD WITH BLANK
	BR	25$
20$:	INC	R5		;SKIP THE FILENAME FIELD
25$:	BIT	#HDLONG,@SP
	BEQ	40$		;BRANCH IF SHORT FORM
;
; CONVERT THE FILE ID
	MOV	R0,-(SP)
	MOVB	#'(,(R0)+
	MOV	AB.FNU(R3),R1
	CLR	R2		;SUPPRESS LEADING ZEROS
	CALL	$CBOMG		;CONVERT FILE NUMBER
	MOVB	#',,(R0)+
	MOV	AB.FSQ(R3),R1
	CLR	R2
	CALL	$CBOMG		;CONVERT FILE SEQUENCE NUMBER
	MOVB	#'),(R0)+
	MOV	R0,R1
	SUB	(SP)+,R1
	CALL	HDFILL
; CONVERT THE NO. OF BLOCKS USED.
40$:	MOV	R3,R1
	ADD	#AB.UAT,R1
	MOV	F.EFBK(R1),-(SP) ;SAVE EFBK
	MOV	F.EFBK+2(R1),-(SP)
	MOV	@SP,R2
	BIS	2(SP),R2
	BNE	43$
;
; EFBK = 0 INDICATING THAT NO FCS END OF FILE INFO IS PRESENT
; SAY THAT FILE SIZE IS THE ALLOCATED SPACE
	MOV	6(SP),R2	;R2=STAT BLOCK ADDRESS
	MOV	4(R2),F.EFBK(R1) ;USE ALLOCATED SPACE FOR SIZE USED
	MOV	6(R2),F.EFBK+2(R1)
	BR	45$
43$:	TST	F.FFBY(R1)	;IF FFBY=0
	BNE	45$
	SUB	#1,F.EFBK+2(R1)	;THEN EFBK IS 1 TOO BIG
	SBC	F.EFBK(R1)
45$:	ADD	#F.EFBK,R1
	CLR	R2		;ZERO SUPPRESS
	CALL	CDDMG		;CONVERT DOUBLE PRECISION TO MAG DECIMAL
	MOV	(SP)+,AB.UAT+F.EFBK+2(R3) ;RESTORE EFBK
	MOV	(SP)+,AB.UAT+F.EFBK(R3)
	BIT	#HDLONG,@SP
	BEQ	60$		;BRANCH IF SHORT MODE
; CONVERT NO. OF BLOCKS ALLOCATED
	MOVB	#'/,(R0)+	;PUT IN "/"
	INC	R1		;AND COUNT IT
	MOV	R1,-(SP)	;SAVE THE COUNT
	MOV	4(SP),R1	;R1=STATISTICS BLOCK ADDRESS
	ADD	#4,R1		;R1=ADDRESS OF ALLOCATED SIZE
	CLR	R2
	CALL	CDDMG		;CONVERT DBL PRECISION TO DECIMAL MAGNITUDE
	ADD	(SP)+,R1	;FORM COUNT FOR NNN/MMM
60$:	CALL	HDFILL		;BLANK FILL THE FIELD
; PUT "C" FOR CONTIGUOUS AND "L" FOR LOCKED
	MOVB	#' ,(R0)+
	BITB	#HS.CON,AB.CHU(R3) ;IF CONTIGUOUS
	BEQ	65$
	MOVB	#'C,-1(R0)	;PUT A "C" IN STRING
65$:	MOVB	#' ,(R0)+
	BITB	#HS.PHL,AB.CHU(R3) ;IF LOCKED
	BEQ	70$
	MOVB	#'L,-1(R0)	;PUT A "C" IN STRING
70$:	MOV	#2,R1		;NO. OF CHARACTERS
	CALL	HDFILL
; PUT CREATION DATE AND TIME IN STRING
	MOV	R4,R1
	ADD	#AB.CDT,R1
	CALL	DATIM
	BIT	#HDLONG,@SP
	BEQ	FILMGX
FILMG1:	CMPB	#132.,1(SP)	;DON'T PUT IN ANOTHER LINE IF LONG LINE
	BHI	5$
	CALL	HDFILL
	INC	R5		;SKIP INDENT
	BR	10$
5$:	MOVB	#15,(R0)+	;NEXT LINE
	MOVB	#12,(R0)+
	CLR	R1
	INC	R5		;SKIP FILL FIELD FOR CREATION DATE
	CALL	HDFILL		;INDENT
; STORE OWNER'S PROJECT PROGRAMMER NUMBER
10$:	MOV	#HD03MG,R1
	CLR	-(SP)	
	MOVB	AB.PC(R3),@SP
	CLR	-(SP)
	MOVB	AB.GC(R3),@SP
	MOV	SP,R2
	CALL	$EDMSG
	ADD	#4,SP
	CALL	HDFILL
; PUT PROTECTION CODE IN STRING
	MOV	R0,-(SP)	;SAVE 50 CAN GET COUNT
	MOVB	#'[,(R0)+
	MOV	#4,R2
	MOV	AB.FP(R3),R1
18$:	BIT	#HF.RDV,R1
	BNE	20$
	MOVB	#'R,(R0)+
20$:	BIT	#HF.WRV,R1
	BNE	22$
	MOVB	#'W,(R0)+
22$:	BIT	#HF.EXT,R1
	BNE	24$
	MOVB	#'E,(R0)+
24$:	BIT	#HF.DEL,R1
	BNE	26$
	MOVB	#'D,(R0)+
26$:	MOVB	#',,(R0)+

	.IF	EQ,R$$EIS
	.REPT	4
	ASR	R1		;SHIFT RIGHT 4 BITS
	.ENDR

	.IFF
	ASH	#-4,R1
	.ENDC

	SOB	R2,18$
	MOVB	#'],-1(R0)	;"]" INSTEAD OF TRAILING ","
	MOV	R0,R1
	SUB	(SP)+,R1	;NEW POINTER -OLD=COUNT
	TSTB	AB.EXP(R4)	;IF NO EXPIRATION DATE
;***	BNE	30$		; TEMP UNTIL ODS2 REVISION DATES ARE FIXED
	CMP	#1,AB.REV(R4)	;AND NO REVISION DATE TO PRINT
	BHIS	FILMGX		;SKIP TO THE END
30$:	CALL	HDFILL
; REVISION DATE
	CLR	R1
	CMP	#1,AB.REV(R4)	;IF REVISION NUMBER IS <=1
	BHIS	40$		;DON'T BOTHER PRINTING THE REVISION INFO
	MOV	R4,R1
	ADD	#AB.RDT,R1
	CALL	DATIM
	MOV	R1,-(SP)
; REVISION NUMBER
	MOV	R4,R2
	ADD	#AB.REV,R2
	MOV	#HD04MG,R1
	CALL	$EDMSG
	ADD	(SP)+,R1	;ADD SAVED COUNT FROM REVISION DATE
	TSTB	AB.EXP(R4)	;IF NULL EXPIRATION DATE
	BR	FILMGX	;***	BEQ	FILMGX		;SKIP TO THE END
40$:	CMPB	#132.,1(SP)	;IF USING LONG LINE FORMAT
	BHI	45$
	MOVB	#15,(R0)+	;MUST GO TO NEW LINE NOW
	MOVB	#12,(R0)+
	MOVB	#11,(R0)+
	BR	50$
45$:	CALL	HDFILL
; EXPIRATION DATE
50$:	MOV	R4,R1
	ADD	#AB.EXP,R1
	CALL	DATIM
	TST	R1		;ANY EXPIRATION DATE?
	BR	FILMGX	;***	BEQ	FILMGX		;BRANCH IF NO
	SUB	#6,R0		;SUBTRACT OFF THE TIME CHARACTERS
FILMGX:	MOV	(SP)+,R3
	MOV	(SP)+,R2
	MOV	R0,R1
	SUB	(SP)+,R1
	CLRB	@R0
	RETURN

;+
; FILL IN FIELD WITH BLANKS
; CALLING SEQUENCE:
;	CALL	HDFILL
; INPUTS
;	R0=STRING ADDRESS
;	R1=BYTES USED IN THIS FIELD
;	R5=POINTS TO BYTE WHICH IS NO. OF SPACES TO USE IN THE FIELD
; OUTPUTS:
;	R0=UPDATED STRING POINTER
;	R5=POINTS AT NEXT BYTE IN FIELD DEFINITION TABLE
;	R1 ALTERED
;	R2-R4 PRESERVED
;-
$HDFIL::MOV	R1,-(SP)
	MOVB	(R5)+,R1
	SUB	(SP)+,R1
	BLE	20$
10$:	MOVB	#' ,(R0)+
	SOB	R1,10$
20$:	RETURN
;
; CONVERT FILE-11 DATE AND TIME FORMAT TO STRING
; INPUTS
;	R0=STRING ADDRES
;	R1=DATE STRING ADDRESS
; OUTPUTS
;	R0 UPDATE
;	R1=NO. OF BYTES
DATIM:	MOV	R0,-(SP)
	TSTB	@R1
	BEQ	20$
	MOVB	(R1)+,(R0)+	;DATE DD
	MOVB	(R1)+,(R0)+
	MOVB	#'-,(R0)+
	MOVB	(R1)+,(R0)+	;MONTH MMM
	MOVB	(R1)+,(R0)+
	MOVB	(R1)+,(R0)+
	MOVB	#'-,(R0)+
	MOVB	(R1)+,(R0)+	;YEAR YY
	MOVB	(R1)+,(R0)+
	MOVB	#' ,(R0)+
	MOVB	(R1)+,(R0)+	;HOURS HH
	MOVB	(R1)+,(R0)+
	MOVB	#':,(R0)+
	MOVB	(R1)+,(R0)+	;MINUTES MM
	MOVB	(R1)+,(R0)+
20$:	MOV	R0,R1
	SUB	(SP)+,R1
	RETURN
; CONVERT DOUBLE PRECISION BINARY TO MAGNITIDE DECIMAL
; INPUTS
;	R0=STRING ADDRESS
;	R1=ADDRESS OF DOUBLE PRECISION NUMBER
;	R2=R2 PARAM TO CBDMG
; OUTPUTS
;	R0=UPDATED STRING
;	R1=SIZE
;	R2 ALTERED, R3-R5 PRESERVED
CDDMG:	MOV	R0,-(SP)
	CALL	$CDDMG
	MOVB	#'.,(R0)+
	MOV	R0,R1
	SUB	(SP)+,R1
	RETURN
;
	.CSECT
;
; HEADER CONVERSION STRINGS
	MSGZ	HD01,<%X>
	MSGZ	HD02,<(%P,%P)>
	MSGZ	HD03,<[%O,%O]>
	MSGZ	HD04,<(%D.)>
;
;
;
	.END
