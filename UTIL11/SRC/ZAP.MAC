; BLIS11 V.76078	Thursday 4-Nov-76 3:16.15	ZAP.B11	Page 1
;
;      	0001	MODULE ZAP(MAIN,IDENT=/V03000/)=
;      	0002	BEGIN
;      	0003	
;      	0004	!
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;      	0022	!
;      	0023	! WRITTEN BY
;      	0024	!	M. JACK
;      	0025	!
;      	0026	! MODULE FUNCTION
;      	0027	!	TASK-IMAGE PATCHING UTILITY FOR USE WITH RSX-11D AND RSX-11M
;      	0028	!
;      	0029	!
;      	0030	
;      	0031	LINKAGE
;      	0032		REG0 = BLISS(REGISTER=0);
;      	0033	
;      	0034	FORWARD
;      	0035		OPENLOC,
;      	0036		REG0 ERRPRT;
;      	0037	
;      	0038	
;      	0039	REQUIRE STDMAC.BEG;
;      	0040	!	STDMAC.BEG - WIDELY USED STANDARD MACROS
;      	0041	!
;      	0062	SWITCHES LIST; SWITCHES LIST;
;      	0063	!	VERSION 000101
;      	0064	!	LAST MODIFIED 10/27/75 RBG
;      	0113	SWITCHES LIST; SWITCHES LIST;
;      	0114	!	STDMAC.BEG LAST LINE
;      	0115	
;      	0116	REQUIRE STDSTR.BEG;
;      	0117	!	STDSTR.BEG - WIDELY USED STANDARD STRUCTURES
;      	0118	!
;      	0139	SWITCHES LIST; SWITCHES LIST;
;      	0140	!	VERSION 000003

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.17	STDSTR.BEG	Page 1-1
;
;      	0141	!	LAST MODIFIED 02/28/74 RBG
;      	0155	SWITCHES LIST; SWITCHES LIST;
;      	0156	!	STDSTR.BEG LAST LINE
;      	0157	
;      	0158	REQUIRE ZAP.BEG;
;      	0159	!	ZAP.BEG - BEGIN FILE FOR ZAP
;      	0160	!
;      	0181	SWITCHES LIST; SWITCHES LIST;
;      	0182	!
;      	0183	!	VERSION 000003
;      	0184	!	LAST MODIFIED 08/06/76
;      	0185	!
;      	0186	
;      	0187	STRUCTURE
;      	0188		BUFFER[I] = (.BUFFER + .I)<0,16>;
;      	0189	
;      	0190	BIND
;      	0191		SEGSIZ=	5;		! LENGTH OF SEGMENT TABLE ENTRY
;      	0192	
;      	0193	MACRO
;      	0194		SEGBLK=	0,0,16$,	! STARTING DISK BLOCK (SEGMENT "NAME")
;      	0195		SEGLOW=	1,0,16$,	! LOW ADDRESS
;      	0196		SEGHIGH=2,0,16$,	! HIGH ADDRESS PLUS ONE
;      	0197		SEGVIRT=3,0,16$,	! VIRTUAL ORIGIN DATA
;      	0198		SEGVIR1=3,0,16$,	! HIGH ORDER WORD OF SEGVIRT
;      	0199		SEGVIR0=4,0,16$,	! LOW ORDER WORD OF SEGVIRT
;      	0200		SEGVIRW=4,0,9$,		! WORD OFFSET PART OF SEGVIRT
;      	0201		SEGNEXT=5,0,16$;	! OFFSET TO NEXT ENTRY
;      	0202	
;      	0203	MACRO
;      	0204		ABSOLUTE=0,0,1$,	! /AB SWITCH BIT
;      	0205		READONLY=0,1,1$,	! /RO SWITCH BIT
;      	0206		LISTING=0,2,1$;		! /LI SWITCH BIT
;      	0207	
;      	0208	BIND
;      	0209		NORELO=	0,		! NO SUCH RELOCATION REGISTER
;      	0210		ADROOB=	1,		! ADDRESS NOT WITHIN SEGMENT
;      	0211		NOSEGM=	2,		! NO SUCH SEGMENT
;      	0212		BADARG=	3,		! BAD ARGUMENT COUNT
;      	0213		NOSPEC=	4,		! NO SUCH SPECIAL REGISTER
;      	0214		BADCMD=	5,		! UNRECOGNIZABLE COMMAND
;      	0215		NOOPEN=	6,		! NO OPEN LOCATION
;      	0216		NOBYTE=	7,		! CANNOT USE IN BYTE MODE
;      	0217		BADTSK=	12,		! BAD TASK IMAGE
;      	0218		VFYREJ=	13,		! VERIFY REJECT
;      	0219		NOTYET=	14,		! NOT YET IMPLEMENTED
;      	0220		OVFLSG=	15;		! SEGMENT TABLE OVERFLOW
;      	0221	
;      	0222	BIND
;      	0223		SIGXIT=	-1,		! SIGNAL VALUE FOR EXIT
;      	0224		SIGADR=	-2;		! SIGNAL VALUE FOR ADDRESS ERROR
;      	0225	

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.18	ZAP.BEG	Page 1-2
;
;      	0226	!
;      	0227	!	ZAP.BEG LAST LINE
;      	0228	
;      	0229	
;      	0230	PSECT
;      	0231		CODE=" ", OWN=" ", GLOBAL="$GBL", PLIT="$PLIT";
;      	0232	
;      	0233	EXTERNAL
;      	0234		ABORT,			! EXIT IMMEDIATELY
;      	0235		EOL,			! OUTPUT RECORD
;      	0236		FCSCLOSE,		! CLOSE FILES AND EXIT
;      	0237		REG0 FCSREAD,		! READ TASK IMAGE BLOCK
;      	0238		REG0 OUTSA,		! OUTPUT ASCIZ STRING
;      	0239		TRANSLATE,		! TRANSLATE SEGMENT-OFFSET TO BLOCK-WORD
;      	0240		ZAPINIT,		! INITIALIZATION CODE
;      	0241		ZAPPROC;		! PROCESSING CODE
;      	0242	
;      	0243	EXTERNAL
;      	0244		SEGTAB,			! SEGMENT TABLE BASE POINTER
;      	0245		BLOCK SWITCH;		! COMMAND SWITCHES
;      	0246	
;      	0247	GLOBAL
;      	0248		PBLOCK SEGMAX,		! POINT TO FIRST FREE LOC IN SEGTAB
;      	0249		REALDOT;		! POINT TO "DOT" IN BUFFER
;      	0250	
;      	0251	
;      	0252	
;      	0253	
;      	0254	COMMENT ! OPENLOC(SEG,ADDR)
;      	0255	!
;      	0256	! FUNCTION
;      	0257	!	OPEN A LOCATION IN TASK ADDRESS SPACE
;      	0258	!
;      	0259	! INPUTS
;      	0260	!	SEG	- THE SEGMENT-ID FOR THE SEGMENT
;      	0261	!	ADDR	- THE ADDRESS IN TASK ADDRESS SPACE
;      	0262	!
;      	0263	! OUTPUTS
;      	0264	!	REALDOT	- THE ADDRESS IN BLOCK BUFFER OF THE WORD OPENED
;      	0265	!	VALUE	- THE CONTENTS OF THE WORD OPENED
;      	0266	!
;      	0267	
;      	0268	GLOBAL ROUTINE OPENLOC(SEG,ADDR)=
;      	0269	    BEGIN
;      	0270	
;      	0271	    LOCAL
;      	0272		SEGHIT,			! FOUND A SEGMENT-NUMBER MATCH
;      	0273		PBLOCK SEGPTR;
;      	0274	
;      	0275	    OWN
;      	0276		TEMP[2];		! TEMPORARY VECTOR
;      	0277	

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.19	ZAP.B11	Page 1-3
;
;      	0278	    IF .SWITCH[ABSOLUTE]
;      	0279	    THEN
;      	0280		BEGIN
;      	0281		IF .SEG EQL 0 THEN SEG = 1;
;      	0282		TEMP[0] = .SEG<7,9>;
;      	0283		TEMP[1] = .SEG * 512;
;      	0284		TRANSLATE(TEMP,.ADDR,TEMP,REALDOT);
;      	0285		FCSREAD(TEMP);
;      	0286		IF .REALDOT
;      	0287		    THEN SIGNAL SIGADR
;      	0288		    ELSE RETURN ..REALDOT;
;      	0289		END
;      	0290	    ELSE
;      	0291		BEGIN
;      	0292		SEGHIT = 0;
;      	0293		SEGPTR = .SEGTAB;
;      	0294		DO
;      	0295		    BEGIN
;      	0296		    IF .SEG EQL .SEGPTR[SEGBLK]
;      	0297		    THEN
;      	0298			BEGIN
;      	0299			SEGHIT = .SEGHIT + 1;
;      	0300			IF
;      	0301			    .ADDR GEQU .SEGPTR[SEGLOW] AND
;      	0302			    .ADDR LSSU .SEGPTR[SEGHIGH]
;      	0303			THEN
;      	0304			    BEGIN
;      	0305			    TRANSLATE(SEGPTR[SEGVIRT],.ADDR,TEMP,REALDOT);
;      	0306			    FCSREAD(TEMP);
;      	0307			    IF .REALDOT
;      	0308				THEN SIGNAL SIGADR
;      	0309				ELSE RETURN ..REALDOT;
;      	0310			    END
;      	0311			END;
;      	0312		    SEGPTR = SEGPTR[SEGNEXT];
;      	0313		    END
;      	0314		UNTIL
;      	0315		    .SEGPTR GEQU .SEGMAX;
;      	0316		ERRPRT(IF .SEGHIT NEQ 0 THEN ADROOB ELSE NOSEGM);
;      	0317		SIGNAL SIGADR
;      	0318		END;
;      	0319	
;      	0320	    END;
;      	0321	
	.TITLE	ZAP
	.IDENT	/V05.01/
	.PSECT	 

R$0=%0
R$1=%1
R$2=%2
R$3=%3

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.26	ZAP.B11	Page 1-4
;
R$4=%4
R$5=%5
SP=%6
PC=%7


	.SBTTL	OPENLOC
OPENLOC:
	JSR	R$1,$SAV3
	MOV	14(SP),R$3
	BITB	#1,SWITCH
	BEQ	L$3
	TST	R$3
	BNE	L$6
	MOV	#1,14(SP)
L$6:	MOV	14(SP),R$2
	ROL	R$2
	ROLB	R$2
	SWAB	R$2
	BIC	#177000,R$2
	MOV	R$2,TEMP
	MOV	14(SP),R$2
	SWAB	R$2
	CLRB	R$2
	ASL	R$2
	MOV	R$2,TEMP+2
	MOV	#TEMP,-(SP)
	MOV	14(SP),-(SP)
	MOV	#TEMP,-(SP)
	MOV	#REALDOT,-(SP)
	JSR	PC,TRANSLATE
	MOV	#TEMP,R$0
	JSR	PC,FCSREAD
	BITB	#1,REALDOT
	BEQ	L$19
L$29:	MOV	#-2,R$0
	JMP	$SIGNL
L$3:	CLR	R$2
	MOV	SEGTAB,R$1
L$13:	CMP	R$3,@R$1
	BNE	L$15
	INC	R$2
	MOV	12(SP),R$0
	CMP	R$0,2(R$1)
	BLO	L$15
	CMP	R$0,4(R$1)
	BHIS	L$15
	MOV	R$1,-(SP)
	ADD	#6,@SP
	MOV	R$0,-(SP)
	MOV	#TEMP,-(SP)
	MOV	#REALDOT,-(SP)

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.26	ZAP.B11	Page 1-5
;
	JSR	PC,TRANSLATE
	MOV	#TEMP,R$0
	JSR	PC,FCSREAD
	BITB	#1,REALDOT
	BNE	L$29
L$19:	MOV	@REALDOT,R$0
	ADD	#10,SP
L$2:	RTS	PC
L$15:	ADD	#12,R$1
	CMP	R$1,SEGMAX
	BLO	L$13
	TST	R$2
	BEQ	L$26
	MOV	#1,R$0
	BR	L$27
L$26:	MOV	#2,R$0
L$27:	JSR	PC,ERRPRT
	BR	L$29

; Routine Size:  103


	.PSECT	 
TEMP:	.BLKW	2



;      	0322	COMMENT ! ERRPRT(P)
;      	0323	!
;      	0324	! FUNCTION
;      	0325	!	OUTPUT A MESSAGE
;      	0326	!
;      	0327	! INPUTS
;      	0328	!	P	- MESSAGE INDEX
;      	0329	!
;      	0330	! OUTPUTS
;      	0331	!	MESSAGE TYPED ON CONSOLE
;      	0332	!	VALUE	- NONE
;      	0333	!
;      	0334	
;      	0335	GLOBAL ROUTINE REG0 ERRPRT(P)=
;      	0336	    BEGIN
;      	0337	
;      	0338	    BIND
;      	0339		MESSAGES = UPLIT(
;      	0340		    UPLIT ASCIZ "NO SUCH RELOCATION REGISTER",
;      	0341		    UPLIT ASCIZ "ADDRESS NOT WITHIN SEGMENT",
;      	0342		    UPLIT ASCIZ "NO SUCH SEGMENT",
;      	0343		    UPLIT ASCIZ "TOO MANY ARGUMENTS",
;      	0344		    UPLIT ASCIZ "NO SUCH INTERNAL REGISTER",
;      	0345		    UPLIT ASCIZ "UNRECOGNIZED COMMAND",

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.27	ZAP.B11	Page 1-6
;
;      	0346		    UPLIT ASCIZ "NO OPEN LOCATION",
;      	0347		    UPLIT ASCIZ "CANNOT BE USED IN BYTE MODE",
;      	0348		    UPLIT ASCIZ "ERROR IN FILE SPECIFICATION",
;      	0349		    UPLIT ASCIZ "OPEN FAILURE FOR TASK IMAGE FILE",
;      	0350		    UPLIT ASCIZ "ERROR ON COMMAND INPUT",
;      	0351		    UPLIT ASCIZ "I/O ERROR ON TASK IMAGE FILE",
;      	0352		    UPLIT ASCIZ "NOT A TASK IMAGE OR NO TASK HEADER",
;      	0353		    UPLIT ASCIZ "VERIFY FAILURE",
;      	0354		    UPLIT ASCIZ "NOT IMPLEMENTED",
;      	0355		    UPLIT ASCIZ "SEGMENT TABLE OVERFLOW");
;      	0356	
;      	0357	    OUTSA(UPLIT ASCIZ "ZAP -- ");
;      	0358	    OUTSA(.MESSAGES[.P]);
;      	0359	    EOL();
;      	0360	    NOVALUE
;      	0361	    END;
;      	0362	

	.PSECT	 

	.SBTTL	ERRPRT
ERRPRT:
	MOV	R$1,-(SP)
	MOV	R$0,R$1
	MOV	#P$AAR,R$0
	JSR	PC,OUTSA
	MOV	R$1,R$0
	ASL	R$0
	MOV	P$AAA(R$0),R$0
	JSR	PC,OUTSA
	JSR	PC,EOL
	MOV	(SP)+,R$1
	RTS	PC

; Routine Size:  16


	.PSECT	$PLIT
P$AAK:	.WORD	50117,47105,43040
	.WORD	44501,52514,42522
	.WORD	43040,51117,52040
	.WORD	51501,20113,46511
	.WORD	43501,20105,44506
	.WORD	42514,0
P$AAL:	.WORD	51105,47522,20122
	.WORD	47117,41440,46517
	.WORD	40515,42116,44440
	.WORD	50116,52125,0
P$AAM:	.WORD	27511,20117,51105
	.WORD	47522,20122,47117
	.WORD	52040,51501,20113

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.27	ZAP.B11	Page 1-7
;
	.WORD	46511,43501,20105
	.WORD	44506,42514,0
P$AAN:	.WORD	47516,20124,20101
	.WORD	40524,45523,44440
	.WORD	40515,42507,47440
	.WORD	20122,47516,52040
	.WORD	51501,20113,42510
	.WORD	42101,51105,0
P$AAO:	.WORD	42526,44522,54506
	.WORD	43040,44501,52514
	.WORD	42522,0
P$AAP:	.WORD	47516,20124,46511
	.WORD	46120,46505,47105
	.WORD	42524,104
P$AAQ:	.WORD	42523,46507,47105
	.WORD	20124,40524,46102
	.WORD	20105,53117,51105
	.WORD	46106,53517,0
P$AAR:	.WORD	40532,20120,26455
	.WORD	40
P$AAA:	.WORD	P$AAB,P$AAC,P$AAD
	.WORD	P$AAE,P$AAF,P$AAG
	.WORD	P$AAH,P$AAI,P$AAJ
	.WORD	P$AAK,P$AAL,P$AAM
	.WORD	P$AAN,P$AAO,P$AAP
	.WORD	P$AAQ
P$AAB:	.WORD	47516,51440,41525
	.WORD	20110,42522,47514
	.WORD	40503,44524,47117
	.WORD	51040,43505,51511
	.WORD	42524,122
P$AAC:	.WORD	42101,51104,51505
	.WORD	20123,47516,20124
	.WORD	44527,44124,47111
	.WORD	51440,43505,42515
	.WORD	52116,0
P$AAD:	.WORD	47516,51440,41525
	.WORD	20110,42523,46507
	.WORD	47105,124
P$AAE:	.WORD	47524,20117,40515
	.WORD	54516,40440,43522
	.WORD	46525,47105,51524
	.WORD	0
P$AAF:	.WORD	47516,51440,41525
	.WORD	20110,47111,42524
	.WORD	47122,46101,51040
	.WORD	43505,51511,42524
	.WORD	122
P$AAG:	.WORD	47125,42522,47503
	.WORD	47107,55111,42105
	.WORD	41440,46517,40515
	.WORD	42116,0

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.27	ZAP.B11	Page 1-8
;
P$AAH:	.WORD	47516,47440,42520
	.WORD	20116,47514,40503
	.WORD	44524,47117,0
P$AAI:	.WORD	40503,47116,52117
	.WORD	41040,20105,51525
	.WORD	42105,44440,20116
	.WORD	54502,42524,46440
	.WORD	42117,105
P$AAJ:	.WORD	51105,47522,20122
	.WORD	47111,43040,46111
	.WORD	20105,50123,41505
	.WORD	43111,41511,52101
	.WORD	47511,116



;      	0363	COMMENT ! MAIN PROGRAM
;      	0364	!
;      	0365	! FUNCTION
;      	0366	!	ACTS AS THE DRIVER PROGRAM
;      	0367	!
;      	0368	
;      	0369	    ENABLE
;      	0370		ALWAYS:
;      	0371		    BEGIN
;      	0372		    ENABLE
;      	0373			ALWAYS:  ABORT()
;      	0374		    ELBANE;
;      	0375		    FCSCLOSE()
;      	0376		    END
;      	0377	    ELBANE;
;      	0378	
;      	0379	    ZAPINIT();
;      	0380	    ZAPPROC()
;      	0381	
;      	0382	END
;      	0383	ELUDOM

	.PSECT	 

	.SBTTL	ZAP
ZAP:
	SUB	#14,SP
	MOV	#14,R$0
	JSR	PC,$ENABL
	.WORD	L$35-L$34
L$34:	MOV	#6,R$0
	JSR	PC,$ENABL
	.WORD	L$37-L$36
L$36:	JSR	PC,ABORT
	HALT	
L$37:	JSR	PC,FCSCLOSE

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.28	ZAP.B11	Page 1-9
;
	BR	L$38
L$35:	JSR	PC,ZAPINIT
	JSR	PC,ZAPPROC
L$38:	MOV	@SIGREG,SIGREG
U$40:	HALT	

; Routine Size:  26


	.PSECT	$GBL
SEGMAX:	.BLKW
REALDOT:	.BLKW
$BREG:	.BLKW
	.GLOBL	ZAP
	.GLOBL	TRANSLATE
	.GLOBL	FCSREAD
	.GLOBL	SEGMAX
	.GLOBL	OPENLOC
	.GLOBL	OUTSA
	.GLOBL	SEGTAB
	.GLOBL	ABORT
	.GLOBL	SWITCH
	.GLOBL	FCSCLOSE
	.GLOBL	ZAPINIT
	.GLOBL	REALDOT
	.GLOBL	EOL
	.GLOBL	ZAPPROC
	.GLOBL	ERRPRT

	.GLOBL	$SAV3
	.GLOBL	$ENABL
	.GLOBL	$SIGN1
	.GLOBL	$SIGNL
	.GLOBL	SIGREG
	.GLOBL	SIGVAL
	.GLOBL	$BREG









; Size:  145+221
; Run Time:  7 Seconds
; Core Used:  15K
; Compilation Complete

	.END	ZAP

; BLIS11 V.76078	Thursday 4-Nov-76 3:16.29	ZAP.B11	Page 1-10
;



