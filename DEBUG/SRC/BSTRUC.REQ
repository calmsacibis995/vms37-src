!	BSTRUC.REQ - BASED STRUCTURE DECLARATIONS FILE
!
!	Version 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! Modified by:
!		Dale Roedger, 08 November 1978
!		David Plummer, 7-Jul-80, DLP
!
!	30-03-77	CP	deleted ENAB field from a BPT based structure.
!	13-04-77	CP	changed REQUIRE file extension from REQ
!				to BEG for BSTRUC.
!	12-10-77	CP	Remove BSTRUC.REQ declaration.
!	16-12-77	CP	Change breakpoint table shape to
!				accommodate watchpoints.
!	22-SEP-78	DAR	Merged BSTRUC.REQ and LISTEL.REQ into one
!				require file.  Deleted macros BS_DEBUG, and DISPOSE.
!	25-OCT-78	MCC	Added fields to list_elem structure to support
!				BLISS field references
!	08-NOV-78	DAR	Added necessary fields to "bpt" structure to
!				support threaded breakpoints and tracepoints.
!	 9-DEC-78	MCC	Added field_ref present and indirection present
!				to command argument list structure.
!	3-Jul-80	DLP	Added primary descriptor pointer field, entry point
!				flag field to break point table.
!--


MACRO BASED1(NAME)
	[FFIELD,OFFSET,POS,SIZE,SIGN]
=
	MACRO %QUOTE %NAME(%STRING(NAME),'_',%STRING(FFIELD)) (PTR)
	=
	BLOCK[ (PTR),OFFSET,POS,SIZE,SIGN]
	 %QUOTE %
%;


MACRO BASED_STRUCTURE(NAME,ENTRY_SIZE) []
=
	LITERAL   %NAME (%STRING(NAME), '_','ALLOC') = ENTRY_SIZE ;
	BASED1 (NAME,%REMAINING) %;

LITERAL
	list_elem_len	=8;
!
!	note that there is some unused space in the 4th longword of this structure

based_structure (list_elem, list_elem_len,
	flink,	0,	0,	32,	0,	! forward link
	exp1,	1,	0,	32,	0,	! first expression
	exp2,	2,	0,	32,	0,	! Second expression
	type,	3,	0,	 8,	0,	! data type of expression
	size,	3,	8,	 8,	0,	! structure size field
	ext,	3,     16,	 1,	0,	! sign extension bit
	ref,	3,     17,	 1,	0,	! "is it a ref" bit
	immed,	3,     18,	 1,	0,	! immediate mode bit
	args,	3,     19,	 2,	0,	! access actuals supplied flag
	fldrf,  3,     21,	 2,	0,	! <field_ref> supplied flag
	dot,	3,     23,	 1,	0,	! indirection bit
	struc,	3,     24,	 4,	0,	! kind of BLISS structure
	ntptr,	4,	0,	32,	0,	! name table pointer
	index,	5,      0,      16,     0,	! structure index field
	offst,  5,     16,	16,	0,	! structure offset field
	pos,	6,      0,	16,	0,	! structure position field
	store,	6,	16,	32,	0);	! pointer to counted ascii string

LITERAL
	DLL_LEN		=2,
	SYM_LEN		=2,
	BPT_LEN		=7,
	OVERHEAD_SYM	= SYM_LEN + DLL_LEN,
	OVERHEAD_BPT	= BPT_LEN + DLL_LEN;

!++
! THE FOLLOWING based_structure DECLARATION EQUATES LITERAL NAMES
! WITH PARTICULAR FIELDS OF EACH ELEMENT OF THE DOUBLY-LINKED
! LIST.
!--
based_structure (DLL, DLL_LEN,
	RLINK,		0,	0,	32,	0,	! RIGHT LINK
	LLINK,		1,	0,	32,	0);	! LEFT LINK

based_structure (SYM, SYM_LEN + DLL_LEN,
	VALUE,		2,	0,	32,	0,	! VALUE OF SYMBOL'S ADDRESS
	CHCOUNT,	3,	0,	8,	0,	! CHARACTER COUNT OF SYMBOL'S NAME
	CSTRING,	3,	0,	32,	0,	! BEGINNING OF COUNTED STRING
	NAME,		3,	8,	32,	0);	! SYMBOLIC NAME STARTS HERE

based_structure (BPT, BPT_LEN + DLL_LEN,
	ADDR,	2,	0,	32,	0,	! ADDRESS OF BREAKPOINT
	ACNT,	3,	16,	16,	0,	! ACTION ITEM COUNT
	AFTC,	3,	0,	16,	1,	! AFTER COUNT
	LENG,	4,	0,	16,	0,	! length of location to watch
	THPT,	4,	16,	1,	0,	! is it a thread point?
	TYPE,	4,	17,	2,	0,	! 1 = bpt, 2 = tracepoint, 3 = watchpoint
	ACCS,	4,	19,	2,	0,	! 1 = w, 2 = r/w, 3 = exe
	OPCO,	4,	24,	8,	0,	! OPCODE REPLACED BY BPT INSTRUCTION
	PRO1,	4,	24,	4,	0,	! original protection of watchpoint start
	PRO2,	4,	28,	4,	0,	! original protection of watchpoint final byte
	APTR,	5,	0,	32,	0,	! POINTER TO ACTION ITEMS
	THRD,	6,	0,	32,	0,	! Thread replaced "thread_bpt" if
						! BPT_THPT is TRUE.
	PRIM,	7,	0,	32,	0,	! Pointer to primary descriptor
	ENTY,	8,	0,	1,	0);	! If TRUE than an entry point

!
!	BSTRUC.REQ - LAST LINE
