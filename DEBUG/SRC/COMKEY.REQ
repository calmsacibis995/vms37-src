!	COMKEY.REQ - Defines keywords for all DEBUG syntaxes
!			(MACRO, FORTRAN, and BLISS).
!
!	Version 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! Modified by:	Dale Roedger, 17 May 1978
!--
!++
! Modified by:  R. Title, 1 Jul 1981
!               Added QUAD, OCTAWORD, FLOAT,
!               F_FLOAT, D_FLOAT, G_FLOAT, and H_FLOAT
!	        to implement new debugger types.
!		
!		R. Title, 20 Aug 1981
!		Added keywords SOURCE and NOSOURCE to support source
!		level debugging.
!		Also added MAX_SOURCE_FILES for SET MAX_SOURCE_FILES n
!		
!		R. Title, 20 Oct 1981
!		Added keywords ALL, NEXT, IDENTIFIER, STRING, and SEARCH
!		to support the SEARCH command.
!--

!++
! The keyword_table is made of four-tuple entries:
! 1 - The keyword token equivalent.
! 2 - The number of characters in the minimal abbreviation
! 3 - The number of characters in the keyword name
! 4 - The keyword string itself
! 
! The macro KEY_NAME formats table entries for the keyword_table.
! Each entry has three formals: the ASCII string representing a
! DEBUG keyword, the length of that ASCII string abbreviated, and the
! lexically equivalent token for that keyword.
!--
MACRO
	key_name (kname, kabbrev, kequiv) = kequiv, kabbrev, %CHARCOUNT (kname), %ASCII kname%;

LITERAL
	kword_token	=0,		! offset to token for a keyword
	kword_abbrev	=1,		! offset to minimum keyword abbreviation
	kword_length	=2,		! offset to keyword length in characters
	kword_name	=3,		! offset to keyword ASCII representation 
	kword_overhead	=3;		! overhead for each entry

!++
! MACRO tables
!--

BIND
	keyword_table 	= UPLIT BYTE (

	key_name ('ADDRESS',	2,	address_token),
	key_name ('AFTER',	2,	after_token),
	key_name ('ALL',	2,	all_token),
	key_name ('.AND.',	2,	and_token),
	key_name ('AND',	3,	and_token),
	key_name ('ASCII',	2,	ascii_token),
	key_name ('BRANCH',	3,	branch_token),
	key_name ('BREAK',	1,	break_token),
	key_name ('BYTE',	2,	byte_token),
	key_name ('CALLS',	1,	calls_token),
	key_name ('CANCEL',	3,	cancel_token),
	key_name ('DEPOSIT',	1,	deposit_token),
	key_name ('DECIMAL',	3,	decimal_token),
	key_name ('DEFINE',	3,	define_token),
	key_name ('DO',		2,	do_token),
	key_name ('D_FLOAT',	2,	d_float_token),
	key_name ('.EQV.',	2,	eqv_token),
	key_name ('EQV',	3,	eqv_token),
	key_name ('EXAMINE',	1,	examine_token),
	key_name ('EXCEPTION',	3,	exception_token),
	key_name ('EXIT',	3,	exit_token),
	key_name ('EVALUATE',	2,	evaluate_token),
	key_name ('FLOAT',	1,	f_float_token),
	key_name ('F_FLOAT',	1,	f_float_token),
	key_name ('GO',		1,	go_token),
	key_name ('GLOBAL',	2,	global_token),
	key_name ('G_FLOAT',	2,	g_float_token),
	key_name ('HEXADECIMAL', 1,	hexadecim_token),
	key_name ('HELP',	2,	help_token),
	key_name ('H_FLOAT',	2,	h_float_token),
    	key_name ('IDENTIFIER', 2, 	ident_token),
	key_name ('INSTRUCTION', 1,	instruct_token),
	key_name ('INTO',	3,	into_token),
	key_name ('%LABEL',	3,	label_token),
	key_name ('LANGUAGE',	2,	language_token),
	key_name ('%LINE',	3,	line_token),
	key_name ('LINE',	2,	stepline_token),
	key_name ('LITERAL',	3,	literal_token),
	key_name ('LOG',	2,	log_token),
	key_name ('LONG',	3,	long_token),
    	key_name ('MARGINS',	3,	margins_token),
	key_name ('MAX_SOURCE_FILES',	3,	maxfiles_token),
	key_name ('MODE',	1,	mode_token),
	key_name ('MODULE',	4,	module_token),
    	key_name ('NEXT',	1,	next_token),
	key_name ('NOASCII',	4,	noascii_token),
	key_name ('NOGLOBAL',	3,	noglobal_token),
	key_name ('NOINSTRUCTION', 3,	noinstruc_token),
	key_name ('NOLOG',	3,	nolog_token),
	key_name ('NOSCOPE',	4,	noscope_token),
	key_name ('NOSOURCE',	4,	nosource_token),
	key_name ('NOSYMBOLIC',	4,	nosymbols_token),
	key_name ('NOSYSTEM',	5,	nosystem_token),
	key_name ('.NOT.',	2,	not_token),
	key_name ('NOT',	3,	not_token),
	key_name ('NOTERMINAL',	4,	noterm_token),
	key_name ('NOVERIFY',	3,	noverify_token),
	key_name ('OCTAL',	1,	octal_token),
	key_name ('OCTAWORD',	5,	octa_word_token),
	key_name ('.OR.',	2,	or_token),
	key_name ('OR',		2,	or_token),
	key_name ('OUTPUT',	2,	output_token),
	key_name ('OVER',	2,	over_token),
	key_name ('OVERRIDE',	5,	override_token),
	key_name ('QUADWORD',	1,	quad_token),
	key_name ('SCOPE',	2,	scope_token),
    	key_name ('SEARCH',	3,	search_token),
	key_name ('SET',	2,	set_token),
	key_name ('SHOW',	2,	show_token),
	key_name ('SOURCE',	2,	source_token),
	key_name ('STEP',	1,	step_token),
    	key_name ('STRING',	3,	string_token),
	key_name ('SYMBOLIC',	2,	symbols_token),
	key_name ('SYSTEM',	3,	system_token),
	key_name ('TERMINAL',	2,	terminal_token),
	key_name ('TRACE',	2,	trace_token),
	key_name ('TYPE',	1,	type_token),
	key_name ('VERIFY',	1,	verify_token),
	key_name ('WATCH',	1,	watch_token),
	key_name ('WORD',	2,	word_token),
	key_name ('.XOR.',	2,	xor_token),
	key_name ('XOR',	3,	xor_token),
	0
		) : VECTOR [, BYTE];

!
!	COMKEY.REQ	- last line
