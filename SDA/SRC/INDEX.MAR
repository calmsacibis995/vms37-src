	.TITLE	INDEX	TABLE OF CONTENTS FOR LISTING
	.SBTTL	COPYRIGHT NOTICE
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
	.PAGE
	.SBTTL	PROGRAM DESCRIPTION
;++
;   FACILITY
;
;	SYSTEM DUMP ANALYZER
;
;   ABSTRACT
;
;	LISTING TABLE OF CONTENTS
;
;   ENVIRONMENT
;
;	NATIVE MODE, USER MODE
;
;   AUTHOR
;
;	TIM HALVORSEN, JULY 1978
;
;   MODIFIED BY
;
;	V002	KEK0004		K. E. Kinnear	30-July-1981
;		Change default addressing mode to longword.
;
;	V001	MTR0001		Mike Rhodes	22-Jun-1981
;		Remove references to $SDAMSGDEF macro.
;
;--

	.PAGE
	.SBTTL	DECLARATIONS
;
;	SYMBOL DEFINITIONS
;
	$FABDEF			; FILE ACCESS BLOCK (FAB)
	$RABDEF			; RECORD ACCESS BLOCK (RAB)

MAX_HEADINGS = 45		; MAX. 45 HEADINGS
HEADING_SIZE = 54		; LENGTH OF EACH SLOT
;   EACH ASCIC HEADING IS PRECEEDED BY A LONGWORD PAGE NUMBER.

	.SBTTL	STORAGE DEFINITIONS
;
;	STORAGE DEFINITIONS
;

	.PSECT	SDADATA,NOEXE,WRT

INDEX_RFA:
	.BLKW	3			; RFA OF DUMMY INDEX

CUR_HEADING::
	.LONG	-1			; CURRENT HEADING NUMBER

SUB_HEADING::
	.BLKL	2			; DESCRIPTOR OF CURRENT HEADING

HEADING_ROUTINE::
	.BLKL	1			; ADDRESS OF HEADING ROUTINE

HEADINGS:
	.LONG	-1			; ADDRESS OF HEADINGS BUFFER

	.PSECT	INDEX,EXE,NOWRT

	.DEFAULT DISPLACEMENT,LONG

	.SBTTL	READ-ONLY DATA DEFINITIONS

;
;	READ-ONLY DATA DEFINITIONS
;

INDEXCTL1:
	STRING	<!38* !32AC ....!4UL>
LINE_LENGTH = 1+79			; MAXIMUM LENGTH OF EACH LINE

	.SBTTL	DUMMY_INDEX -- PRINT DUMMY TABLE OF CONTENTS
;---
;
;	DUMMY_INDEX
;
;	THIS ROUTINE PRINTS A PAGE FULL OF EMPTY RECORDS
;	TO THE LISTING FILE TO BE LATER WRITTEN OVER WHEN
;	THE TABLE OF CONTENTS BECOMES AVAILABLE.
;
;   INPUTS:
;
;	NONE
;
;   OUTPUTS:
;
;	NONE
;
;---

DUMMY_INDEX::
	.WORD	^M<R2,R3>

	CLRL	PAGE_NUMBER		; RESET PAGE NUMBER 
	MNEGL	#1,CUR_HEADING	; RESET HEADING INDEX
	CLRQ	SUB_HEADING		; AND CLEAR ANY SUBHEADING
	SKIP	PAGE
	SKIP	3
	PRINT	0,<!35* !15* Table of Contents>
	PRINT	0,<!35* !15* ----------------->
	SKIP	2
	MOVAL	LIST,R3
	MOVW	#LINE_LENGTH,RAB$W_RSZ(R3)
	CALLS	#0,PUT_LINE		; OUTPUT DUMMY RECORD
	MOVAB	INDEX_RFA,R0
	MOVL	RAB$W_RFA(R3),(R0)+	; SAVE CURRENT POSITION
	MOVW	RAB$W_RFA+4(R3),(R0)
	MOVL	#MAX_HEADINGS-1,R2	; ITERATION COUNT
10$:
	MOVW	#LINE_LENGTH,RAB$W_RSZ(R3)
	CALLS	#0,PUT_LINE		; OUTPUT RECORD
	SOBGTR	R2,10$			; LOOP UNTIL DONE
	RET

	.SBTTL	PRINT_INDEX -- PRINT TABLE OF CONTENTS PAGE
;---
;
;	PRINT_INDEX
;
;	THIS ROUTINE OVERWRITES THE PREVIOUSLY OUTPUT DUMMY
;	RECORDS WITH THE TABLE OF CONTENTS LISTING AND ZERO
;	THE REMAINING RECORDS.
;
;   INPUTS:
;
;	HEADINGS HOLDS THE LIST OF SUB_HEADINGS AND PAGE NUMBERS
;
;   OUTPUTS:
;
;	NONE
;
;---

PRINT_INDEX::
	.WORD	^M<R2,R3>

	MOVAL	LIST,R3
	MOVAB	INDEX_RFA,R0
	MOVL	(R0)+,RAB$W_RFA(R3)	; RESET CURRENT POSITION
	MOVW	(R0),RAB$W_RFA+4(R3)
	MOVB	#RAB$C_RFA,RAB$B_RAC(R3)  ; SHIFT TO RANDOM ACCESS
	$FIND	(R3)			; LOCATE FIRST DUMMY LINE
	SIGNAL	RMS,(R3)
	MOVB	#RAB$C_SEQ,RAB$B_RAC(R3)  ; BACK TO SEQUENTIAL ACCESS
	CLRL	R2			; CURRENT SUB_HEADING INDEX
	TSTL	CUR_HEADING		; ANY HEADINGS?
	BGEQ	10$			; BRANCH IF SO
	RET
10$:
	$GET	(R3)
	SIGNAL	RMS,(R3)
	MULL3	R2,#HEADING_SIZE,R0	; OFFSET TO SLOT
	MOVAB	@HEADINGS[R0],R1	; ADDRESS OF SLOT
	PUSHL	(R1)+			; PAGE NUMBER
	PUSHAB	(R1)			; ADDRESS OF ASCIC STRING
	PUSHAQ	LINE_DESCR		; BUFFER DESCRIPTOR
	PUSHL	#0			; RESULT STRING LENGTH
	PUSHAB	INDEXCTL1		; CONTROL STRING
	CALLS	#5,G^SYS$FAO		; FORMAT STRING
	$UPDATE	(R3)
	SIGNAL	RMS,(R3)
	INCL	R2			; INCREMENT HEADING NUMBER
	CMPL	R2,CUR_HEADING	; CHECK IF LAST HEADING
	BLEQ	10$			; CONTINUE UNTIL DONE
	RET

	.SBTTL	SET_HEADING -- SET A NEW PAGE HEADING
;---
;
;	SET_HEADING
;
;	THIS ROUTINE ACCEPTS THE DESCRIPTOR OF A STRING AND
;	SAVES THE SUB-HEADING IN THE HEADING ARRAY TO BE USED
;	FOR THE INDEX.
;
;   INPUTS:
;
;	4(AP) = ADDRESS OF STRING DESCRIPTOR OF HEADING
;
;   OUTPUTS:
;
;	NONE
;
;---

SET_HEADING::
	.WORD	^M<R2,R3,R4,R5>

	TSTL	HEADINGS		; SEE IF STORAGE ALLOCATED YET
	BGTR	5$			; BRANCH IF OK
	PUSHL	#MAX_HEADINGS*HEADING_SIZE ; LENGTH OF HEADING BUFFER
	CALLS	#1,ALLOCATE		; ALLOCATE STORAGE
	MOVL	R1,HEADINGS		; SAVE ADDRESS OF BUFFER
5$:
	MOVAB	SUB_HEADING,R2
	MOVAB	CUR_HEADING,R3
	CLRL	HEADING_ROUTINE		; NO HEADING ROUTINE BY DEFAULT
	MOVQ	@4(AP),(R2)		; SET NEW HEADING
	CMPL	(R3),#MAX_HEADINGS	; CHECK IF ENOUGH ROOM
	BLSS	10$			; IF STILL ROOM TO STORE
	RET
10$:
	INCL	(R3)			; INCREMENT HEADING NUMBER
	MULL3	(R3),#HEADING_SIZE,R0	; OFFSET TO SLOT
	MOVAB	@HEADINGS[R0],R1	; ADDRESS OF SLOT
	ADDL3	PAGE_NUMBER,#1,(R1)+	; STORE PAGE NUMBER
	MOVB	(R2),(R1)+		; STORE LENGTH
	MOVC3	(R2),@4(R2),(R1)	; STORE STRING
	RET


	.END
