	.TITLE	HANDLER	EXCEPTION HANDLER
	.SBTTL	COPYRIGHT NOTICE
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
	.PAGE
	.SBTTL	PROGRAM DESCRIPTION
;++
;   FACILITY
;
;	SYSTEM DUMP ANALYZER
;
;   ABSTRACT
;
;	THIS MODULE CONTAINS THE EXCEPTION HANDLER
;	FOR THE DUMP ANALYZER PROGRAM.  IT OUTPUTS
;	AN ERROR MESSAGE IF THE HANDLER WAS SIGNALED
;	FROM WITHIN THE PROGRAM.
;
;   ENVIRONMENT
;
;	NATIVE MODE, USER MODE
;
;   AUTHOR
;
;	TIM HALVORSEN, JULY 1978
;
;   MODIFIED BY
;
;	V004	TMH0004		Tim Halvorsen	04-Nov-1981
;		Fix handler to re-add the count of two (for the PC/PSL)
;		back to the signal vector, so that a resignal after the
;		PUTMSG doesn't screw up a later handler.
;
;	V003	MTR0001		Mike Rhodes	19-Jun-1981
;		A.  Check for internally signalled conditions, and act upon
;		them appropriately.
;
;		B.	1.  Remove $SDAMSGDEF macro references.
;
;			2.  Remove MSG macro and its associated MSG_TABLE.
;
;			3.  Remove CMD_HANDLER entry point and code.
;
;			4.  Remove private table search code, which now allows
;			for uniform condition handling of all signals.
;
;	V002	TMH0002		Tim Halvorsen	07-Feb-1981
;		Do not convert unknown errors to fatals.
;		Add NOINSTRAN for instruction decode.
;
;	V001	TMH0001		Tim Halvorsen	19-Jan-1981
;		Add SPTNOTFND and modify SHORTDUMP to include the number
;		of blocks desired.  Make fatal errors return the error
;		status code in the final image R0.
;--

	.SBTTL	DECLARATIONS
;
;	SYMBOL DEFINTIONS
;
	$CHFDEF			; CONDITION HANDLING DEFINITIONS
	$STSDEF			; CONDITION VALUE FIELDS

	.SBTTL	HANDLER -- EXCEPTION HANDLER
;---
;
;	HANDLER
;
;	THIS EXCEPTION HANDLER IS RESPONSIBLE FOR TRAPPING
;	CONDITIONS SIGNALED WITHIN THE PROGRAM AND OUTPUTING
;	THE APPROPRIATE ERROR MESSAGE.
;
;   INPUTS:
;
;	4(AP) = POINTER TO SIGNAL ARGUMENTS 
;	8(AP) = POINTER TO MECHANISM ARGUMENTS
;
;   OUTPUTS:
;
;	ERROR MESSAGE TO THE OUTPUT DEVICE
;
;---

HANDLER::
	.WORD	^M<R2,R3,R4,R5>
;
;	Check for INTERNALLY signalled conditions, upon receipt of one
;	unwind to the appropriate command level.
;
	MOVQ	4(AP),R2		; GET ADDRESSES OF ARRAYS
	MOVL	CHF$L_SIG_NAME(R2),R5	; FIND OUT IF ITS AN INTERNAL SIGNAL
	CMPL	#MSG$_BACKUP,R5		; BACK UP 1 COMMAND LEVEL
	BEQL	25$
	CMPL	#MSG$_EXITCMD,R5	; ABORT COMMAND AND ERASE SCREEN
	BEQL	25$
	CMPL	#MSG$_EOF,R5		; INTERNAL END OF FILE SIGNAL
	BEQL	25$

;
; MESSAGES ARE WRITTEN USING $PUTMSG
;
80$:	CMPL	#SS$_UNWIND,R5		; ARE WE UNWINDING?
	BEQL	30$			; IF SO, SIMPLY RESIGNAL
	SUBL	#2,CHF$L_SIG_ARGS(R2)	; SUBTRACT PC,PSL FROM MESSAGE VECTOR
	$PUTMSG_S MSGVEC=(R2)		; OUTPUT THE MESSAGE
	ADDL	#2,CHF$L_SIG_ARGS(R2)	; RESTORE PC,PSL TO MESSAGE VECTOR
	BBSS	#STS$V_INHIB_MSG,CHF$L_SIG_NAME(R2),15$ ; MARK MESSAGE OUTPUT
;
; ON WARNINGS, SIMPLY CONTINUE EXECUTION AT THE POINT OF THE SIGNAL
;
15$:	EXTZV	#STS$V_SEVERITY,#STS$S_SEVERITY, -
		CHF$L_SIG_NAME(R2),R0	; EXTRACT SEVERITY CODE
	CMPL	R0,#STS$K_WARNING	; CHECK IF ONLY WARNING
	BNEQ	20$			; BRANCH IF ERROR
	MOVZBL	#SS$_CONTINUE,R0	; INDICATE TO CONTINUE
	RET
;
; ON ERRORS, SET SUCCESS IN CALLER'S R0 AND UNWIND TO ESTABLISHER.
;
20$:	CMPL	R0,#STS$K_ERROR		; CHECK IF ERROR
	BNEQ	30$			; BRANCH IF FATAL
	MOVL	#1,CHF$L_MCH_SAVR0(R3)	; SUCCESS AFTER UNWIND
25$:	CLRQ	-(SP)			; GO BACK TO ESTABLISHER
	CALLS	#2,G^SYS$UNWIND		; UNWIND CALL FRAMES
	RET				; RETURN TO ESTABLISHER
;
; ON FATALS, RESIGNAL THE CONDITION SO THAT THE IMAGE IS ABORTED
;
30$:	MOVZWL	#SS$_RESIGNAL,R0	; RESIGNAL CONDITION
	RET


	.END
