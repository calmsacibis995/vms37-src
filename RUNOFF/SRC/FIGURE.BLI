MODULE FIGURO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes .FIGURE and .FIGURE DEFERRED commands.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
! MODIFIED BY: K. A. Dawson
!
!	007	REM00007	Ray Marshall	13-December-1981
!		Built up revision history based on CMS library generations.
!
!	006	RWF00006	Rich Friday	11-November-1981
!		Footnote control was moved to its own control area in its own
!		  require file (FNCT.REQ).  Appropreate changes have been made.
!
!	005	REM00005	Ray Marshall	25-August-1981
!		Updated copyright notice and reformatted what little revision
!		  history existed at that time -- just the following entry.
!
!	004	KAD00004	Keith Dawson	14-November-1980
! 		For VERSION 1.124h: Routine GFIG included (from GCODE), 
!		to reduce size of GCODE for overlaying.
!
!	003	KAD00003	Keith Dawson	21-October-1980
!		Fixup require file declarations so they now all come from REQ:
!		  and not the local directory.
!
!	002	KAD00002	Keith Dawson	17-October-1980
!		I (Ray Marshall) don't know what (if any) changes were made
!		  on or before this date.  This is the first generation in
!		  the CMS library.
!--

!
! TABLE OF CONTENTS:
!
FORWARD ROUTINE
    GFIG : NOVALUE;
!
! INCLUDE FILES:
!
REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:FNCT.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:NUMPRM.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

EXTERNAL
    FNCT : FNCT_DEFINITION,
    GCA : GCA_DEFINITION,
    IRA : FIXED_STRING,
    MRA : REF FIXED_STRING,
    NUMPRM : NUMPRM_DEFINE,
    PHAN : PHAN_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL LITERAL 				! Error messages
    RNFINM;

EXTERNAL ROUTINE
    ERMA,
    GCPAGE,
    GUSKIP,
    OUTCRG;


GLOBAL ROUTINE FIGURE (HANDLER_CODE) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	See ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE indicates which command should be processed.
!
! IMPLICIT INPUTS:
!
!	NUMPRM contains a number, as processed by GETNUM.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    IF 						!
	NOT .NUM_RESULT
    THEN 					!
    !Illegal number.  Ignore the command.
	RETURN;

    IF 						!
	.NUM_LENGTH EQL 0
    THEN 					!
	NUM_VALUE = 1;

    IF 						!
	.NUM_VALUE LEQ 0			!
	OR (.NUM_VALUE GTR .PHAN_LLINES)
    THEN 					!
	BEGIN
	ERMA (RNFINM, FALSE);
	RETURN;
	END;

    SELECTONE .HANDLER_CODE OF
	SET

	[H_FIGURE] :
	    GFIG (TRUE, .NUM_VALUE);

	[H_FIGURE_DEFERR] :
	    GFIG (FALSE, .NUM_VALUE);
	TES;

    END;					!End of FIGURE

GLOBAL ROUTINE GFIG (IMMEDIATELY, COUNT) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates code corresponding to RUNOFF's .FIGURE and
!	.FIGURE DEFERRED commands.
!
! FORMAL PARAMETERS:
!
!	IMMEDIATELY indicates whether the block of lines should be done
!	immediately, or whether it can be put off until the top of
!	the next page.  TRUE means immediately.
!
!	COUNT is the number of lines to be generated.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TSF_PHREGS : REF VECTOR [TSF_NREGS];

    TSF_PHREGS = TSF__PHREGS;
    !If collecting a footnote, all figures are unconditional and cannot
    !start a new line.  Code generation is particularily simple, being
    !just an unconditional generation of the number of lines.

    IF 						!
	.FNCT_COLLECTING
    THEN
	BEGIN
	GUSKIP (.COUNT);
	RETURN;
	END;

    IF 						!Don't allocate too many "registers".
	.TSF_NEXT_REG GEQ TSF_NREGS
    THEN 					!
	OUTCRG ();

    TSF_PHREGS [.TSF_NEXT_REG] = .COUNT;
    FS_WCHAR (MRA, RINTES);			!If (test page..)
    FS_WCHAR (MRA, %C't');
    FS_WCHAR (MRA, .TSF_NEXT_REG);
    FS_WCHAR (MRA, RINTES);			!then skip now..
    FS_WCHAR (MRA, %C'u');
    FS_WCHAR (MRA, .TSF_NEXT_REG);
    FS_WCHAR (MRA, RINTES);			!end then
    FS_WCHAR (MRA, %C'.');
    FS_WCHAR (MRA, %C' ');
    TSF_INT_VL = .TSF_INT_VL + 9;

    IF 						!
	.IMMEDIATELY
    THEN
	BEGIN
	GCPAGE ();				!Generate code for a new page.
	FS_WCHAR (MRA, RINTES);			!generate code for skips
	FS_WCHAR (MRA, %C'u');			!unconditional skipping!!
	FS_WCHAR (MRA, .TSF_NEXT_REG);
	END
    ELSE
	BEGIN					!The block of lines can wait.
	FS_WCHAR (MRA, RINTES);
	FS_WCHAR (MRA, %C'd');			!defer space
	FS_WCHAR (MRA, .TSF_NEXT_REG);
	END;

    FS_WCHAR (MRA, RINTES);			!end else
    FS_WCHAR (MRA, %C'.');
    FS_WCHAR (MRA, %C' ');
    TSF_INT_VL = .TSF_INT_VL + 6;
    TSF_NEXT_REG = .TSF_NEXT_REG + 1;
    END;					!End of GFIG

END						!End of module

ELUDOM
