MODULE STDOOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes the .STANDARD command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: August, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    SDXY : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:PDT.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:NUMPRM.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

REQUIRE 'REQ:SETCAS.REQ';
!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    GCA : GCA_DEFINITION,
    IRA : FIXED_STRING,
    NUMPRM : NUMPRM_DEFINE,
    PDT : REF PDT_DEFINITION,
    PHAN : PHAN_DEFINITION,
    SCA : SCA_DEFINITION;

EXTERNAL LITERAL 				!Error messages
    RNFINM;

EXTERNAL ROUTINE
    ERMA,
    REMNEG,
    REMMRG,
    SETCAS,
    TSTBLK;


GLOBAL ROUTINE STD (HANDLER_CODE) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE is passed for conformance only.
!
! IMPLICIT INPUTS:
!
!	NUMPRM contains a number as processed by GETNUM.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    TSTBLK (0);					!Force .LISTs and .NOTEs to end, and
    !issue error messages if applicable.
    REMMRG ();					!Report unreported bad margins.
    REMNEG ();					!Report unreported bad backdents.

    IF 						!
	NOT .NUM_RESULT
    THEN
    !Use current page width if no argument given by user.
	NUM_VALUE = .GCA_LWIDTH
    ELSE
	BEGIN

	IF 					!
	    .NUM_SIGN NEQ 0
	THEN
	!Try adjusting current page width if a signed number.
	    NUM_VALUE = .NUM_VALUE + .GCA_LWIDTH
	ELSE

	    IF 					!
		.NUM_LENGTH EQL 0
	    THEN
	    !Use current page width if user said nothing.
		NUM_VALUE = .GCA_LWIDTH;

	IF 					!
	    .NUM_VALUE LEQ 0
	THEN
	    BEGIN
	    ERMA (RNFINM, FALSE);
	    NUM_VALUE = .GCA_LWIDTH;
	    END;

	END;

    GCA_LWIDTH = .NUM_VALUE;
    !Set lines per page based on page width.

    IF 						!
	.GCA_LWIDTH EQL 60
    THEN
	PHAN_LLINES = 58
    ELSE

	IF 					!
	    .GCA_LWIDTH EQL 70
	THEN
	    PHAN_LLINES = 74;

    !Check for top of page condition so that footnotes
    !get taken care of ok.

    IF 						!
	.PHAN_LINES_TP GEQ .PHAN_LLINES
    THEN
	PHAN_TOP_PAGE = TRUE;

    PDT_INDENT = 0;
    SDXY ();					!Finish resetting.
    END;					!End of STD


GLOBAL ROUTINE SDXY : NOVALUE = 		!

!++
! FUNCTIONAL DESCRIPTION:
!
!	Part of .STANDARD command common to .CHAPTER and .APPENDIX
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN
    PHAN_PAGING = .PHAN_CMD_PAGING;		!Turn on paging if not /NOPAGING
    SCA_FILL = TRUE;
    SCA_JUSTIFY = .GCA_AUTOJUST;		!Turn on justification if the user didn't
    SCA_CROCK = .GCA_AUTOJUST;			!say .NO AUTOJUSTIFY.
    SCA_SPACING = 1;
    SCA_LM = 0;
    SCA_RM = .GCA_LWIDTH;
    !Set case rules.

    SETCAS (.GCA_CASE);

    END;					!End of SDXY

END						!End of module

ELUDOM
