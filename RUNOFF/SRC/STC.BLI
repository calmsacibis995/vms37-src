MODULE STCOOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes the .SEND TOC command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1979
!
! MODIFIED BY:	K. A. Dawson
!
!
!	004 	KAD00004	K. A. Dawson
! 	 	For VERSION1(126c)
!		Fix unreported bug -- wrong page number send if .PAGE;.STC.
!	003	KAD00003	K.A. Dawson 
!		Lost the previous fix when adding REQ: to requires. Got 'em 
!		back now.
!
!	002	KAD00002	K. A. Dawson 
!		Change to allow SEND TOC to pass all characters without 
!		quoting.
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!

REQUIRE 'REQ:ATCODE.REQ';

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FLGT.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:LSTBTS.REQ';

REQUIRE 'REQ:NUMPRM.REQ';

REQUIRE 'REQ:PAGEN.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

REQUIRE 'REQ:SETCAS.REQ';

REQUIRE 'REQ:TOCRTY.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    ATABLE : VECTOR,
    FLGT : FLAG_TABLE,
    GCA : GCA_DEFINITION,
    IRA : FIXED_STRING,
    MRA : REF FIXED_STRING,
    NPAGEN : PAGE_DEFINITION,
    NUMPRM : NUMPRM_DEFINE,
    PAGEN : PAGE_DEFINITION,
    PHAN : PHAN_DEFINITION,
    SCA : SCA_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    ENDWRD,
    OFT,
    OUTLIN,
    PUTTPG,
    RSKIPS,
    SCANT,
    SETCAS,
    SKPSEP;


GLOBAL ROUTINE STC (HANDLER_CODE, DO_TOC) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	See ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE	- A dummy parameter, used for conformance only.
!	DO_TOC	- If FALSE, the scan is done but no toc entry is made.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	SCA_PARA_COPY,
	SCA_INDENT_COPY,
	HOLD_IND_FLAG,
	HOLD_IND_EFLAG,
	HOLD_ALL_FLAGS,				!Vers. 1(123), KAD.
	SCA_COPY : SCA_DEFINITION;		!Used to preserve SCA.

    LOCAL
	MRA_TEMP : VECTOR [4 + CH$ALLOCATION (1000)],	!Temporary MRA area
	TSF_TEMP : VECTOR [TSF_SIZE];		!Temporary TSF

    LOCAL
	MRA_ADDRESS,				!Preserve interrupted MRA
	TSF_ADDRESS;				!Preserve interrupted TSF

    !Skip the comma and spaces, if any, following the numerical parameter, if any.
    SKPSEP (IRA);

    INCR I FROM 0 TO SCA_SIZE - 1 DO
	SCA_COPY [.I] = .SCA [.I];		!Save SCA

    !Initialize SCA prior to scanning the string.
    !Incr I from 0 to SCA_SIZE - 1 do SCA[.i] = 0;
    SCA_LM = 0;
    SCA_RM = 150;				!Set wide right margin so won't start a new line.
    SCA_SPACING = 1;				!Single spacing avoids spurious intermediate code.
    SETCAS (LEAVE_CASE);			!Force first character of first word
						!to upper case, rest to lower case.
    SCA_FC = TRUE;				!This is the first character for the MRA.
    SCA_FC_CASE = TRUE;				!Use first character-of-word case rules.
    SCA_PRESCAN = FALSE;			!A ';' doesn't terminate the scan.
    SCA_PARA_COPY = .SCA_PARA_PND;		!Don't let FCIMRA do any indentation, etc.
    SCA_INDENT_COPY = .SCA_INDENT;		!...
    SCA_PARA_PND = FALSE;			!...
    SCA_INDENT = 0;				!...
    SCA_FILL = FALSE;
    SCA_JUSTIFY = FALSE;
!
    !Preserve the addresses of the structures to which these items refer.
    MRA_ADDRESS = .MRA;
    TSF_ADDRESS = .TSF;
    !Now switch working buffers, so that text currently being accumulated
    !is not disturbed.
    MRA = MRA_TEMP;
    TSF = TSF_TEMP;
    !Now manually set up MRA, to look like a FIXED STRING.
    FS_MAXSIZE (MRA) = 1000;
    FS_INIT (MRA);				!And that finishes the initialization.
!
    !Now initialize TSF for SCANT.

    INCR I FROM 0 TO TSF_SIZE - 1 DO
	TSF [.I] = 0;

    TSF_BTC = TRUE;				!This TSF record describes a table of contents entry.
!
    SCA_WRD_INT_L = 0;
    SCA_WRD_EXT_L = 0;
    SCA_WRD_ISEQN = 0;
    SCA_WRD_DRAFT = 0;
    SCA_WRD_DRAFT_F = 0;
    SCA_WRD_BARS = 0;
    SCA_WRD_BAR_CHR = 0;
    SCA_WRD_SEQN_F = 0;
    SCA_WRD_IPAGEN = 0;
    SCA_WRD_FOOTW = 0;
    SCA_WRD_F_XTN = 0;
    SCA_WRD_L_XTN = 0;
    SCA_WRD_LC_PNCT = 0;
    SCA_WRD_LST_SP = 0;
    SCA_WRD_LST_JUS = 0;
    SCA_WRD_LST_UND = 0;
    SCA_WRD_PNTR = .FS_NEXT (MRA);
    SCA_WRD_CPEND = RINTES;			!Tell ENDCHR no character is pending.
    FS_START (MRA) = .SCA_WRD_PNTR;
    HOLD_IND_FLAG = .FLGT [IND_FLAG, FLAG_CHARACTER];	!Preserve <INDEX flag> status.
    HOLD_IND_EFLAG = .FLGT [IND_FLAG, FLAG_ENABLED];	!...
    OFT (H_NO_FLAGS_INDE, IND_FLAG);		!Disable <INDEX flag>
    !Save status of all flags. We disable all flags before scanning the
    !text to be sent to the .BTC file; therefore RUNOFF flags can be
    !sent as normal characters. (Vers. 1(123), KAD.)
    HOLD_ALL_FLAGS = .GCA_FLAG_CMD;
    OFT (H_NO_FLAGS_ALL, 0);			!Disable all flags.

    !Now let SCANT process the command.
    SCANT ();
    !Restore saved flags.
    OFT (.HOLD_ALL_FLAGS, 0);
    !Restore <INDEX flag> to former status.
    OFT (H_NO_FLAGS_INDE, IND_FLAG);
    FLGT [IND_FLAG, FLAG_CHARACTER] = .HOLD_IND_FLAG;
    FLGT [IND_FLAG, FLAG_ENABLED] = .HOLD_IND_EFLAG;

    IF 						!
	.FLGT [IND_FLAG, FLAG_ENABLED]		!
	AND .SCA_FLAGS
    THEN
	ATABLE [.FLGT [IND_FLAG, FLAG_CHARACTER]] = A_FLAG;

    !Return here is with a word.

    IF 						!
	.DO_TOC
    THEN
	BEGIN

	IF 					!
	    .SCA_WRD_CPEND NEQ RINTES
	THEN
	    ENDWRD (FALSE, FALSE, FALSE);		!End word, but don't write a space too.

	!Identify this record as something from the .SEND TOC command
	TSF_MAJOR = MAJ_SEND;
	!Copy the value of "n" from the .SEND command into the minor type code
	TSF_MINOR = .NUM_VALUE;

	!If at the top of any page, look again to see which page number to output.
	!This code added (from HL.BLI) in V1.126c, ident 004.
	IF
	    .GCA_BTC
	    AND .PHAN_TOP_PAGE
	THEN
	    IF
		.PHAN_TOP_FIRST
	    THEN
		PUTTPG (PAGEN)
	    ELSE
		PUTTPG (NPAGEN);

	OUTLIN (FALSE);				!Don't disturb justification algorithm
	END;

    INCR I FROM 0 TO SCA_SIZE - 1 DO
	SCA [.I] = .SCA_COPY [.I];		!Restore SCA

    MRA = .MRA_ADDRESS;				!Restore previous status.
    TSF = .TSF_ADDRESS;				!...
    SCA_PARA_PND = .SCA_PARA_COPY;		!...
    SCA_INDENT = .SCA_INDENT_COPY;		!...
    END;					!End of STC

END						!End of module

ELUDOM
