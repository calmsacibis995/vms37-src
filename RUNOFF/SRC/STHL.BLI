MODULE STHLOO (	!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes the .STYLE HEADERS command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: April, 1979
!
! MODIFIED BY: K. A. Dawson, 8-27-1980
!
!	003	KAD00003	K. A. Dawson
!		For VERSION 1(124)
!		Support for 5 new arguments to STHL.
!--
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
REQUIRE 'REQ:HLC.REQ';

REQUIRE 'REQ:NMLST.REQ';

!
! MACROS:
!

!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!

!
! EXTERNAL REFERENCES:
EXTERNAL
    HLC : HLC_DEFINITION,
    NMLST : NUMBER_LIST;
!

EXTERNAL ROUTINE
    GLNM;

GLOBAL ROUTINE STHL (HANDLER_CODE) :NOVALUE =	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	STHL processes the .STYLE HEADERS command, which specifies
!	how text given on a .HEADER LEVEL command is to be processed.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE is a dummy, used just for conformance.
!
! IMPLICIT INPUTS:
!
!	There are 9 legal arguments that can be supplied to .STHL. They are gotten
!	by GLNM(9) at the beginning of this routine. The 9 arguments control the
!	following things:
!
!	 n1: Heads at this level or higher (smaller n) are made all-cap. Default 1.
!	 n2: Heads at this level and lower (larger n) are cap-lower-case. Default 2.
!	 n3: Heads at this level and lower are run-in heads. Default 3. ??
!	 n4: Heads at this level and lower are not numbered. Default 7.
!	 n5: Heads at this level and lower, if not run-in, are centered. Default 7.
!	 n6: This many lines are skipped before heads. Default 2. ??
!	 n7: This many lines are skipped after heads. Default 1. ??
!	 n8: An implied test-page of this many lines is done before heads. Default 3. ??
!	 n9: This many spaces are inserted after header number, before title. Default 1.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    !Get parameters.
    GLNM(9);

    !If any parameter is in error don't do anything but return.
    INCR I FROM 1 TO .NMLST_COUNT DO
	IF			
	    .NMLST_DESCR (.I) EQL NM_BAD
	THEN
	    RETURN;

    !Process parameters
    !First parameter specifies lowest .HL command that generates a "runon" header
    IF				!
	.NMLST_COUNT GEQ 1	!First, be sure there was at least one parameter.
    THEN
	BEGIN
	IF
	    .NMLST_DESCR(1) NEQ NM_NULL	!Be sure this parameter was specified
	THEN
	    HLC_RUNON = .NMLST_VALUE(1);!Assign first value to "runon"

	!See if at least two parameters specified.
	IF			!
	    .NMLST_COUNT GEQ 2
	THEN
	    BEGIN
	    IF
		.NMLST_DESCR(2) NEQ NM_NULL	!Be sure second parameter was specified
	    THEN
		HLC_UPPER = .NMLST_VALUE(2);	!Assign second value to "all upper case"

	    !Make sure there was a third parameter specified.
	    IF
		.NMLST_COUNT GEQ 3
	    THEN
		BEGIN
		IF
		    .NMLST_DESCR(3) NEQ NM_NULL	!Be sure third parameter was specified
		THEN
		    HLC_CAP = .NMLST_VALUE(3);	!Assign third value to "capitalize first character".

		!Make sure there was a fourth parameter specified.
		IF
		    .NMLST_COUNT GEQ 4
		THEN
		    BEGIN
		    !If the fourth parameter was not a dummy, get its value.
		    IF
			.NMLST_DESCR(4) NEQ NM_NULL
		    THEN
			HLC_NO_NUMBER = .NMLST_VALUE(4);

		    !Make sure there was a fifth parameter specified.
		    IF
			.NMLST_COUNT GEQ 5
		    THEN
			BEGIN
			!Process fifth parameter only if it was not null
			IF
			    .NMLST_DESCR(5) NEQ NM_NULL
			THEN
			    HLC_CENTER = .NMLST_VALUE(5);

			!Make sure there was a sixth parameter specified.
			IF
			    .NMLST_COUNT GEQ 6
			THEN
			    BEGIN
			    !Process sixth parameter only if it was not null.
			    IF
				.NMLST_DESCR(6) NEQ NM_NULL
			    THEN
				HLC_HEADLB = .NMLST_VALUE(6);

			    !Make sure there was a seventh parameter specified.
			    IF
				.NMLST_COUNT GEQ 7
			    THEN
				BEGIN
				!Process the seventh parameter only if it wasn't null
				IF
				    .NMLST_DESCR(7) NEQ NM_NULL
				THEN
				    HLC_HEADLC = .NMLST_VALUE(7);

				!Make sure an eighth parameter was specified
				IF
				    .NMLST_COUNT GEQ 8
				THEN
				    BEGIN
				    !Process the eighth parameter only if it wasn't null.
				    IF
					.NMLST_DESCR(8) NEQ NM_NULL
				    THEN
					HLC_HEADLT = .NMLST_VALUE(8);
				    
				    !Make sure a ninth parameter was specified
				    IF
					.NMLST_COUNT GEQ 9
				    THEN
					BEGIN
					!Process the ninth parameter only if it wasn't null.
					IF
					    .NMLST_DESCR(9) NEQ NM_NULL
					THEN
					    HLC_HEADSP = .NMLST_VALUE(9);
					END;
				    END;
				END;
			    END;
			END;
		    END;
		END;

	    END;
	END;

    END;			!End of STHL
END				!End of module
ELUDOM

