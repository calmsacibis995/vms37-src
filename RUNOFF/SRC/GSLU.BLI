MODULE GSLUOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Collect an unbroken sequence of letters, converting
!		all letters to upper case.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: April, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GSLUCC.REQ';

REQUIRE 'REQ:KC.REQ';

REQUIRE 'REQ:LETTER.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    KHAR;


GLOBAL ROUTINE GSLU (INPUT_STRING, OUTPUT_STRING) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	GSLU processes an unbroken sequence of letters,
! stopping when 1) a non-letter is found, or
!		2) the end of IRA is reached, or
!		3) OUTPUT_STRING is about to overflow.
! All letters encountered are transferred to OUTPUT_STRING
! after being first converted to upper case.
!
!
! FORMAL PARAMETERS:
!
!	INPUT_STRING is the string to be scanned.
!	The collected string of letters is left in OUTPUT_STRING.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	See GSLUCC.REQ for completion codes returned.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	OUTPUT_STRING : REF FIXED_STRING;

    BIND
	IRA = INPUT_STRING : REF FIXED_STRING;

!

    WHILE 1 DO
	BEGIN

	IF 					!Stop on a non-letter.
	    NOT LETTER (.KHAR)
	THEN
	    RETURN (IF .FS_LENGTH (OUTPUT_STRING) EQL 0	!
		THEN GSLU_NONE ELSE GSLU_NORMAL);

	IF 					!
	    .FS_LENGTH (OUTPUT_STRING) EQL .FS_MAXSIZE (OUTPUT_STRING)
	THEN
	    (WHILE LETTER (.KHAR) DO (KCNS ()); RETURN GSLU_TOO_LONG);	!Throw away excess letters.

	FS_WCHAR (OUTPUT_STRING, 		!Convert to upper case and output the letter.
	    (IF UPPER_LETTER (.KHAR)		!
	    THEN .KHAR ELSE UPPER_CASE (.KHAR)));
	KCNS ()					!Get next character.
	END					!end of processing loop.

    END;					!End of GSLU

END						!End of module

ELUDOM
