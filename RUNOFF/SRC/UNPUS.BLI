MODULE UNPUS (		!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Takes the contents of MRA as described by TSF
!	    and translates it into an equivalent .INDEX or .SEND TOC command.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: February, 1979
!
! MODIFIED BY:
!
!--
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
REQUIRE 'REQ:CLHOPS.REQ';

REQUIRE 'REQ:FLGT.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!

!
! EQUATED SYMBOLS:
!
EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!

!
! EXTERNAL REFERENCES:
!
EXTERNAL
    FLGT : FLAG_TABLE,
    FRA : FIXED_STRING,
    MRA : REF FIXED_STRING,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    CLH;

GLOBAL ROUTINE UNPUS (TOC) : NOVALUE =	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	UNPUS untranslates the results of a .INDEX command or
!	INDEX flag, and puts the result into the output file.
!
! FORMAL PARAMETERS:
!
!	If TOC is true, what is to be regurgitated is a .SEND TOC command.
!	Otherwise, its an indexing command.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN
    LOCAL
	MARK,
	PTR;


    FS_INIT ( FRA );				!Initialize FRA.

    PTR = .FS_START(MRA);

    !Generate either .INDEX, .ENTRY, or .SEND TOC
    IF						!
	.TOC
    THEN
	MARK = CH$PTR ( UPLIT('.SEND TOC      '))
    ELSE
	IF					!
	    .TSF_FIRST_XTN NEQ 0
	THEN
	    MARK = CH$PTR ( UPLIT('.INDEX       '))
	ELSE
	    MARK = CH$PTR ( UPLIT('.ENTRY       '));
    INCR I FROM 1 TO 10 DO
	FS_WCHAR(FRA, CH$RCHAR_A(MARK) );
	FS_WCHAR(FRA, %C' ');

    !Scan the text, untranslating escape codes, etc back to RUNOFF flags.
    INCR I FROM 1 TO .TSF_INT_HL DO
	BEGIN
	LOCAL
	    KHAR;

	KHAR = CH$RCHAR_A(PTR);

	IF!
	    .KHAR EQL RINTES
	THEN
	!Untranslate special function
	    BEGIN
	    LOCAL
		FUNCTION_CODE,
		OPERAND;

	    FUNCTION_CODE = CH$RCHAR_A(PTR);
	    OPERAND = CH$RCHAR_A(PTR);
	    I = .I + 2;

	    SELECTONE .FUNCTION_CODE OF
		SET
		[%C'B'] : BEGIN
			  !Bolded character.
			  FS_WCHAR (FRA, .FLGT [BLD_FLAG, FLAG_CHARACTER]);
			  END;

		[%C'U'] : BEGIN
			  !Underlined character.
			  FS_WCHAR (FRA, .FLGT [UND_FLAG, FLAG_CHARACTER]);
			  END;

		[%C'O'] : BEGIN
			  !An overstruck character.
			  !NOTE: Order is the reverse of what user specified.
			  FS_WCHAR (FRA, .OPERAND);
			  FS_WCHAR (FRA, .FLGT [OVR_FLAG, FLAG_CHARACTER]);
			  END;
		
		[%C'J'] : BEGIN
			  !A word mark.  For indexing commands, this
			  !starts a new sub-indexing level.
			  FS_WCHAR (FRA, .FLGT [SBX_FLAG, FLAG_CHARACTER]);
			  END;

		[OTHERWISE] : BEGIN
			      !Unknown/unsupported special function
			      FS_WCHAR (FRA, %C'?');
			      END;
		TES;
	    END
	ELSE
	!Some normal character
	    BEGIN
	    !Normal characters go out as themselves.  Control characters
	    !are translated to something else.
	    IF!
		(.KHAR GEQ %C' ')
		AND (.KHAR LEQ %O'176')
	    THEN
	    !Output a normal character
		FS_WCHAR(FRA, .KHAR)
	    ELSE
	    !Translate and output a control character.
	    !NOTE: DEL (Octal 177) and NUL (Octal 0) have the same result.
		BEGIN
		FS_WCHAR(FRA, %C'^');
		FS_WCHAR(FRA, %C'@'+.KHAR);
		END;
	    END;
	END;

	CLH (CLH_WRITE_OUT);				!Write result to document.

    END;			!End of UNPUS
END				!End of module
ELUDOM
