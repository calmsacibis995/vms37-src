MODULE DOPXOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes .DO INDEX and .PRINT INDEX commands
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	CREATION DATE: July, 1978
!
! MODIFIED BY: K. A. Dawson, 9-2-80
!
!	009	REM00009	Ray Marshall
!		This change is for V1.126e of DSR.
!
!		A new parameter has been added to GETLIN telling it wether or
!		not to output the text of the command it parses.  In several
!		cases, we don't want to output anything and this fix provides
!		for those cases.  A list of those cases follows:
!
!		o  This is a PDP-11 version and in-core indexing is not valid
!		   because of space limitations.
!		o  Indexing has been disabled at execution time via the command
!		   line.
!		o  The indexing pool is empty (e.g. no .X commands have been
!		   issued yet).
!
!				PLEASE NOTE:
!
!		The next Ident and version doesn't really follow from the
!		previous two because it was generated from V1.125 (above
!		called 2(1)).  The history lines for 007 & 008 are only
!		included for historical purposes -- the code from those
!		versions was never used here-in!
!
!		It seems that the intended fix caused problems with the PDP-11
!		version, so 009 is a totally re-structured way of solving the
!		bug that 007 & 008 were trying to fix.
!
!
!	008	REM00008	Ray Marshall
!		Put FPOOL, XPRT inside %IF--%FI under control of FILE_INDEX.
!		This update is for V1.126e of DSR.
!
!	007	KAD00007	Keith Dawson
!		Do ENDCMT to pass by possible text argument if the command is
!		a no-op.  Fixes a bug reported Feb. 3, 1981 in V1.125.
!		This update is for V1.126c of DSR.
!
!	001	KAD00001	Keith Dawson ?
!		DO INDEX, PRINT INDEX are no-ops for -11; also no-ops if user
!		user has said /INDEX, or if no index hits exist.
!
!--

!
! TABLE OF CONTENTS:
!
REQUIRE 'REQ:RNODEF.REQ';				!RUNOFF capabilities

%IF NOT FILE_INDEX
%THEN
FORWARD ROUTINE
	DOPX : NOVALUE,
	GENNDX : NOVALUE;
%FI
! INCLUDE FILES:
!
REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:HCT.REQ';

REQUIRE 'REQ:PAGEN.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

REQUIRE 'REQ:SETCAS.REQ';

REQUIRE 'REQ:TOCRTY.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

LITERAL
    INDEXD = 4;					!Skip this many blank lines after word 'INDEX'

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    GCA : GCA_DEFINITION,
    HCT : HCT_DEFINITION,
    MRA : REF FIXED_STRING,
    NPAGEN : PAGE_DEFINITION,
    SBTMRA : VECTOR,
    SBTTSF : VECTOR,
    TITMRA : VECTOR,
    TITTSF : VECTOR,
    TSF : TSF_DEFINITION;

%IF NOT FILE_INDEX
%THEN
EXTERNAL
    NDXPOL,
    SCA : SCA_DEFINITION;
%FI

EXTERNAL ROUTINE
    CENTXT,
    GETLIN;

%IF NOT FILE_INDEX
%THEN
EXTERNAL ROUTINE
    GCPAGE,
    GCSKIP,
    GUSKIP,
    PUTRTY;
%FI

GLOBAL ROUTINE DOPX (HANDLER_CODE, DO_INDEXING) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE indicates which command is to be processed.
!	DO_INDEXING indicates whether or not the command is to be
!	completely processed or not.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	GCA_INDEX_FMT indicates the format in which the list of index
!	entries is to be produced.  It is simply passed to XPRT.
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN
	LOCAL
	    DO_OUT;
	! If indexing commands are to be ignored or the index is empty,
	! then no output is to be generated.  The following symbol supplies
	! a brief conditional to facilitate testing for this condition.
%IF NOT FILE_INDEX
%THEN	DO_OUT = (.DO_INDEXING AND  .NDXPOL NEQ 0);
%ELSE	DO_OUT = FALSE;
%FI

    SELECTONE .HANDLER_CODE OF
	SET

	[H_DO_INDEX] :
	    BEGIN

	    LOCAL
		HOLD_TSF,
		HOLD_MRA;

%IF NOT FILE_INDEX
%THEN
	    IF			!If user is generating a table of contents file
		.GCA_BTC AND .DO_OUT
	    THEN		!Put "start of index" marker into .BTC file
		PUTRTY (MAJ_RUNOFF, MIN_INDEX);
%FI
	    HOLD_TSF = .TSF;		!Save current buffer status.
	    HOLD_MRA = .MRA;

	    TSF = TITTSF;		!Clear title buffer
	    MRA = TITMRA;
	    TSF_INT_HL = 0;
	    TSF_EXT_HL = 0;
	    FS_INIT (MRA);

	    TSF = SBTTSF;		!Clear subtitle buffer
	    MRA = SBTMRA;
	    TSF_INT_HL = 0;
	    TSF_EXT_HL = 0;
	    FS_INIT (MRA);

	    TSF = .HOLD_TSF;		!Switch back to original buffers.
	    MRA = .HOLD_MRA;

	    NPAGEN [SCT_PAGE] = 1;	!Change page #ing scheme to Index-1, etc
	    NPAGEN [SCT_TYP] = SCT_INDEX;
	    NPAGEN [SCT_SUB_PAGE] = 0;
	    NPAGEN [SCT_NUMBER] = 0;	!Indexes are not numbered.
%IF NOT FILE_INDEX
%THEN
	    IF .DO_OUT THEN GCPAGE ();		!Generate code to start a new page.
%FI
	    !Reset odd/even page parity.
	    HCT_ODD_EVEN = 0;
	    !Determine if text was given on the .DO INDEX command

	    IF 					!
		NOT CENTXT (CH$PTR (UPLIT ('INDEX')), 5)
	    THEN
	    !Text after ".DO INDEX".  Fetch and output text centered.
		GETLIN (TRUE, TRUE, FORCE_UPPER, .DO_OUT);

%IF NOT FILE_INDEX
%THEN
	    IF .DO_OUT THEN GUSKIP (INDEXD);	!Skip lines before index.
%FI
	    END;

	[H_PRINT_INDEX] :
	    BEGIN
%IF NOT FILE_INDEX
%THEN
	    IF .DO_OUT THEN GCSKIP (.SCA_SPACING);
%ELSE	    0
%FI
	    END;
	TES;

%IF NOT FILE_INDEX
%THEN
	    IF .DO_OUT THEN GENNDX();	!Now actually generate the index
%FI
    END;					!End of DOPX
%IF NOT FILE_INDEX
%THEN

ROUTINE GENNDX : NOVALUE =	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates and clears the index.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--
!
! EXTERNAL REFERENCES:
!

    BEGIN

EXTERNAL
    NDXSGE,
    NDXSGF,
    XPAGEN,
    XTNCNT,
    XTNLSP,
    XTNLSX,
    XTNPOL,
    XTNSGP,
    XTNTAB;


EXTERNAL ROUTINE
    FPOOL,
    XPRT,
    SETCAS;

    !Make sure what's generated doesn't look like an index entry.
    TSF_INDEX = FALSE;

    !Call the routine that actually outputs the index.
    XPRT (.GCA_CHAPT, .GCA_INDEX_FMT);

    !Now clear the index.
    IF!
	.NDXPOL NEQ 0
    THEN
	BEGIN
	FPOOL(NDXPOL);
	NDXSGE=0;
	NDXSGF=0;
	FPOOL(XTNPOL);
	XPAGEN=0;
	XTNCNT=0;
	XTNLSP=0;
	XTNLSX=0;
	XTNSGP=0;
	XTNTAB=0;
	END;

    END;			!End of GENNDX
%FI
END						!End of module

ELUDOM
