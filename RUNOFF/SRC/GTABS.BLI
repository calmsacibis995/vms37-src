MODULE GTABSO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Collects and validates tabs when activated via a .TABS command
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: July, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:CLIST.REQ';

REQUIRE 'REQ:NMLST.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    NMLST : NUMBER_LIST,			!GLNM returns command parameters here
    TTABLE : COUNTED_LIST;			!Table of tab settings

!

EXTERNAL LITERAL 				!Error messages
!!    RNFITS,
    RNFTMT;

!

EXTERNAL ROUTINE
    ERMA,
!!    ERMN,
    GLNM;

!


GLOBAL ROUTINE GTABS (HANDLER_CODE) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	GTABS calls GLNM to pick up a list of tab settings, and
!	then validates them and sets up the new tab settings in
!	TTABLE.  In the normal case, the numbers are simply picked
!	up, and become the new tab settings.  However, there are
!	the following special cases.
!
!	1)	If no tab settings are given, the tab settings
!		count (TTABLE[CL_INDEX]) is set to zero to indicate
!		that no tabs are to be expanded.  However,
!		the settings are left undisturbed, and can be
!		recovered later.
!	2)	If the user just specified a ',' instead of giving
!		a value (i.e., NM_NULL), the "old" tab stop setting
!		is used as a parameter value instead.
!		It undergoes the same validation that a normal setting
!		would.  In this way, tab settings "turned off", as
!		described in 1) are recovered.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE is not examined.  It is passed to this routine
!	for reasons of conformity only.  It will always have the
!	value H_TAB_STOPS.
!
! IMPLICIT INPUTS:
!
!	The current setting of TTABLE is used as input.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	PREVIOUS_TAB,
	TEMP;

    GLNM (0);					!Request maximum number of tabs

    IF 						!
	.NMLST_COUNT EQL 0
    THEN
	BEGIN
	TTABLE [CL_INDEX] = 0;			!Turn off all tabs
	RETURN;
	END;

    IF 						!
	.NMLST_COUNT GTR .TTABLE [CL_MAX_INDEX]
    THEN
	BEGIN
	ERMA (RNFTMT, FALSE);			!Too many tab settings
	NMLST_COUNT = .TTABLE [CL_MAX_INDEX];	!Fix it up
	END;

    PREVIOUS_TAB = 0;

    INCR I FROM 1 TO .NMLST_COUNT DO
	BEGIN

	IF 					!
	    .NMLST_DESCR (.I) EQL NM_BAD	!
	THEN
	    BEGIN
	    TEMP = .TTABLE [.I];		!Use old value instead
	    END
	ELSE

	    IF 					!
		.NMLST_DESCR (.I) EQL NM_NULL	!
	    THEN
		TEMP = .TTABLE [.I]
	    ELSE
		IF
		    .NMLST_DESCR (.I) EQL NM_UNSIGNED
		THEN
		    TEMP = .NMLST_VALUE (.I)
		ELSE
		    !A signed value to adjust this tab setting.
		    TEMP = .TTABLE [.I] + .NMLST_VALUE (.I);

	!At this point, TEMP contains the number that might become
	!the new tab setting.
	!The null case has been resolved by applying the "old" setting.
!!	IF 					!
!!	    .TEMP LEQ .PREVIOUS_TAB
!!	THEN
!!	    BEGIN
!!	    !New tab is not greater than previous tab.
!!	    ERMN (RNFITS, .TEMP);
!!	    RETURN;
!!	    END
!!	ELSE
	    BEGIN
	    TTABLE [.I] = .TEMP;		!Tab setting is ok
	    PREVIOUS_TAB = .TEMP;
	    TTABLE [CL_INDEX] = .I;
	    END;

	END;

    END;					!End of GTABS

END						!End of module

ELUDOM
