MODULE TPROBO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Checks to see if a keyword matches an entry.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
!	MODIFIED BY:
!
!	002	KAD000002	K. A. Dawson	August 1981
!		Fixed compiler complaint, null expression in value-
!		required context.
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:KWITEM.REQ';				!Definition of an entry in the keyword list.

REQUIRE 'REQ:TPROB.REQ';

!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!


GLOBAL ROUTINE TPROBE (KEY, SIZE, ITEM) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Checks to see if 'key' is described by 'item'.  If not,
!	returns a condition code indicating how the search is to proceed.
!	This routine is called only from FIND.
!
! FORMAL PARAMETERS:
!
!	'Key' is the keyword to be checked. 'Size' is the length
!	of the keyword. 'Item' is the entry in the keyword table against
!	which 'key' is checked.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	See TPROB.REQ for the completion codes.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN
!temporary coding, change when ch$compare is done.

    MACRO
	CH_RELATION (A, B, L) =
	(IF CH$EQL(L,A,L,B) THEN 0
				ELSE IF CH$GTR(L,A,L,B) THEN 1
							ELSE -1)
			%;

    LITERAL
	CH_EQUAL = 0,
	CH_LSS = -1,
	CH_GTR = 1;

!end of temporary coding

    MAP
	ITEM : REF VECTOR;

    SELECTONE TRUE OF
	SET

	[.SIZE EQL .ITEM_LENGTH (ITEM)] :
	    BEGIN

	    LOCAL
		R;

	    R = CH_RELATION (.KEY, CH$PTR (P_WORD (ITEM)), .SIZE);

	    CASE .R FROM -1 TO 1 OF
		SET

		[CH_EQUAL] :
		    RETURN FOUND;

		[CH_LSS] :
		    RETURN TRY_ABOVE;

		[CH_GTR] :
		    RETURN TRY_BELOW;
		TES;

	    END;

	[.SIZE GTR .ITEM_LENGTH (ITEM)] :
	    BEGIN

	    LOCAL
		R;

	    R = CH_RELATION (.KEY, CH$PTR (P_WORD (ITEM)), .ITEM_LENGTH (ITEM));

	    CASE .R FROM -1 TO 1 OF
		SET

		[CH_EQUAL] :

		    IF 				!
			.ABBREVIATION (ITEM)
		    THEN
			RETURN TRY_BELOW
		    ELSE
			RETURN GIVE_UP;

		[CH_LSS] :
		    RETURN TRY_ABOVE;

		[CH_GTR] :
		    RETURN TRY_BELOW;
		TES;

	    END;

	[.SIZE LSS .ITEM_LENGTH (ITEM)] :
	    BEGIN

	    LOCAL
		R;

	    R = CH_RELATION (.KEY, CH$PTR (P_WORD (ITEM)), .SIZE);

	    CASE .R FROM -1 TO 1 OF
		SET

		[CH_EQUAL] :

		    IF 				!
			.ABBREVIATION (ITEM)
		    THEN
			RETURN TRY_ABOVE
		    ELSE

			IF 			!
			    .SIZE GEQ .MINIMUM_MATCH (ITEM)
			THEN
			    RETURN FOUND
			ELSE
			    RETURN TRY_ABOVE;

		[CH_LSS] :
		    RETURN TRY_ABOVE;

		[CH_GTR] :
		    RETURN TRY_BELOW;
		TES;

	    END;
	TES			!No semicolon -- avoid compiler compalint.

    END;					!End of TPROBE

END						!End of module
ELUDOM
