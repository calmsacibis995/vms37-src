MODULE FNDFLO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Identifies a flag occurring in text.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:FLGT.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    FLGT : FLAG_TABLE [FLAG_COUNT],
    FLTSO : VECTOR;

BIND
    SEARCH_ORDER = FLTSO : VECTOR;


GLOBAL ROUTINE FNDFLG (KHAR) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	FNDFLG looks at all those enabled flags that can
! occur in running text (as opposed to those that can appear,
! say only in column 1, etc), and sees if KHAR  matches one
! of them.  If it does, FNDFLG returns the number of the flag
! table entry involved; if not, a number outside the range of the
! flag table is returned.
!
!	SEARCH_ORDER is a list of those flags that can occur in
! running text, and specifies the order in which the flags are to
! be identified.  It is independent of the actual layout of the
! flag table.
!
! FORMAL PARAMETERS:
!
!	KHAR is the character that is to be associated with a
! specific flag.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	Possible completion codes are either an entry from
! SEARCH_ORDER, or FLAG_COUNT + 1.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    INCR I FROM 0 TO .SEARCH_ORDER [-1] - 1 DO
	BEGIN

	IF 					!
	    .FLGT [.SEARCH_ORDER [.I], FLAG_ENABLED]	!
	    AND (.KHAR EQL .FLGT [.SEARCH_ORDER [.I], FLAG_CHARACTER])
	THEN 					!
	    RETURN .SEARCH_ORDER [.I];

	END;

    RETURN FLAG_COUNT + 1;
    END;					!End of FNDFLG

END						!End of module

ELUDOM
