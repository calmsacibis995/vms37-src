MODULE PAGEOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes .PAGE SIZE, .LEFT_MARGIN, and .RIGHT_MARGIN commands.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: June, 1978
!
! MODIFIED BY:
!
!	003	REM00003	Ray Marshall	25-August-1981
!		Modified .RIGHT MARGIN directive processing such that it will
!		pickup 
!--
!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:NMLST.REQ';

REQUIRE 'REQ:NUMPRM.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    GCA : GCA_DEFINITION,
    IRA : FIXED_STRING,
    NMLST : NUMBER_LIST,
    NUMPRM : NUMPRM_DEFINE,
    PHAN : PHAN_DEFINITION,
    SCA : SCA_DEFINITION;

EXTERNAL LITERAL 				!Error messages
    RNFBMS,
    RNFINM;

EXTERNAL ROUTINE
    ERMA,
    GLNM;


GLOBAL ROUTINE PAGE (HANDLER_CODE) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE indicates which command is to be processed.
!
! IMPLICIT INPUTS:
!
!	NUMPRM contains a number as processed by GETNUM.
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    SELECT .HANDLER_CODE OF
	SET

	[H_RIGHT_MARGIN, H_LEFT_MARGIN] :
	    BEGIN

	    IF 					!
		NOT .NUM_RESULT
	    THEN
		BEGIN
		!Ignore command if number is in error.
		RETURN
		END

	    END;

	[H_RIGHT_MARGIN] :
	    BEGIN

	    IF 					!
		.NUM_SIGN NEQ 0
	    THEN
	    !Adjustment to existing margin, i.e., + or -
		NUM_VALUE = .NUM_VALUE + .SCA_RM;

	    IF
		.NUM_LENGTH EQL 0
	    THEN
		BEGIN
		SCA_RM = .GCA_LWIDTH;
		RETURN
		END;
!

	    IF 					!
		.NUM_VALUE LEQ .SCA_LM OR .NUM_VALUE GTR 150	!not unlimited!!
	    THEN
		BEGIN
		!Bad margin.
		ERMA (RNFBMS, FALSE);
		RETURN
		END
	    ELSE
		BEGIN
		SCA_RM = .NUM_VALUE;
		!Push out page width if right margin is made larger.
		GCA_LWIDTH = MAX (.SCA_RM, .GCA_LWIDTH)
		END

	    END;

	[H_LEFT_MARGIN] :
	    BEGIN

	    IF 					!
		.NUM_SIGN NEQ 0
	    THEN
	    !Adjust margin. I.e., + or -
		NUM_VALUE = .NUM_VALUE + .SCA_LM;

!

	    IF 					!
		.NUM_VALUE GEQ .SCA_RM
	    THEN
		BEGIN
		!Bad margin.
		ERMA (RNFBMS, FALSE);
		RETURN
		END
	    ELSE
		SCA_LM = .NUM_VALUE

	    END;

	[H_PAGE_SIZE] :
	    BEGIN
	    PHAN_PAGING = .PHAN_CMD_PAGING;	!Turn on paging unless /NOPAGING
	    GLNM (2);				!Get parameters

	    IF 					!
		.NMLST_COUNT GEQ 1
	    THEN
		BEGIN
		!First parameter defines lines per page.

		CASE .NMLST_DESCR (1) FROM 0 TO 4 OF
		    SET

		    [NM_BAD] :
			BEGIN
			!Use current value if input was bad.
			NMLST_VALUE (1) = .PHAN_LLINES;
			END;

		    [NM_NULL] :
			BEGIN
			!Use current value if no input value.
			NMLST_VALUE (1) = .PHAN_LLINES;
			END;

		    [NM_PLUS, NM_MINUS] :
			BEGIN
			!Adjust value if adjustment specified (i.e., + or -)
			NMLST_VALUE (1) = .PHAN_LLINES + .NMLST_VALUE (1);
			END;

		    [NM_UNSIGNED] :
			BEGIN
			!Nothing to do if an unsigned number.
			0
			END;
		    TES;

		IF 				!
		    .NMLST_VALUE (1) LEQ 12
		THEN
		!Page is too short.
		    ERMA (RNFINM, FALSE)
		ELSE
		!Set new page length.
		    PHAN_LLINES = .NMLST_VALUE (1);

		END;

	    !Process page width, if supplied.

	    IF 					!
		.NMLST_COUNT GEQ 2
	    THEN
		BEGIN
		!Second parameter defines page width.

		CASE .NMLST_DESCR (2) FROM 0 TO 4 OF
		    SET

		    [NM_BAD] :
			BEGIN
			!Use current value if input was bad.
			NMLST_VALUE (2) = .GCA_LWIDTH;
			END;

		    [NM_NULL] :
			BEGIN
			!Use current value of no input was supplied.
			NMLST_VALUE (2) = .GCA_LWIDTH;
			END;

		    [NM_PLUS, NM_MINUS] :
			BEGIN
			!Adjust page width (i.e., + or -)
			NMLST_VALUE (2) = .GCA_LWIDTH + .NMLST_VALUE (2);
			END;

		    [NM_UNSIGNED] :
			BEGIN
			!Nothing to do if just a number.
			0
			END;
		    TES;

		IF 				!
		    .NMLST_VALUE (2) LEQ .SCA_LM OR 	!
		    .NMLST_VALUE (2) GTR 150
		THEN
		!Bad margin specification.
		    ERMA (RNFBMS, FALSE)
		ELSE
		    BEGIN
		    GCA_LWIDTH = .NMLST_VALUE (2);
		    SCA_RM = .NMLST_VALUE (2)
		    END

		END

	    END;
	TES;

    END;					!End of PAGE

END						!End of module

ELUDOM
