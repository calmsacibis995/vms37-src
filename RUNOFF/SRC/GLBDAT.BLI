MODULE GLBDAT (					!
		IDENT = 'V03-000'
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Global data definitions; contains no instructions.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: November, 1978
!
! MODIFIED BY:
!
!	010	REM00010	Ray Marshall	16-December-1981
!		Built up revision history based on CMS library generations.
!
!	009	RWF00009	Rich Friday	11-November-1981
!		Footnote control was moved to its own control area in its own
!		  require file (FNCT.REQ).  Appropreate changes have been made.
!
!	008	KAD00008	Keith Dawson	29-September-1981.
!		New variable PREV_REQUIRE to keep track of default file-spec
!		  information in the Require nest.
!
!	007	REM00007	Ray Marshall	25-August-1981
!		Updated copyright notice and initial pass at reformatting
!		  this revision history.
!
!	006	KAD00006	Keith Dawson	21-October-80.
!		Fixup require file declarations so they now all come from REQ:
!		  and not the local directory.
!
!	005	KAD00005	Keith Dawson
!		Moved several footnote data structures into here in order to
!		  globalize them and allow better modulization of the footnote
!		  coding.
!
!	004	KAD00004	Keith Dawson	15-July-80.
!		Changes as noted in the code to reduce size for RSX implemen-
!		  tation.  Specifically, conditionalized several constants
!		  based on the compiler used so we can specify smaller buffers
!		  and work areas for the PDP-11 implementations.
!
!	003	KAD00003	Keith Dawson	17-October-1980
!		I (Ray Marshall) don't know what (if any) changes were made
!		  on or before this date.  This is the first generation in
!		  the CMS library and the IDENT is as it was.
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

LIBRARY 'NXPORT:XPORT';		!XPORT I/O macros
REQUIRE 'REQ:ATCODE.REQ';
REQUIRE 'REQ:BIGNUM.REQ';
REQUIRE 'REQ:BOOL.REQ';
REQUIRE 'REQ:CLIST.REQ';
REQUIRE 'REQ:FLGT.REQ';
REQUIRE 'REQ:FNCT.REQ';
REQUIRE 'REQ:FRMSTK.REQ';
REQUIRE 'REQ:FSPACK.REQ';
REQUIRE 'REQ:GCA.REQ';
REQUIRE 'REQ:HLC.REQ';
REQUIRE 'REQ:IFSTK.REQ';
REQUIRE 'REQ:HCT.REQ';
REQUIRE 'REQ:IRAC.REQ';
REQUIRE 'REQ:LSTBTS.REQ';
REQUIRE 'REQ:NBITS.REQ';
REQUIRE 'REQ:NMLST.REQ';
REQUIRE 'REQ:NUMPRM.REQ';
REQUIRE 'REQ:OUTOPT.REQ';
REQUIRE 'REQ:PAGEN.REQ';
REQUIRE 'REQ:PDT.REQ';
REQUIRE 'REQ:PHDEF.REQ';
REQUIRE 'REQ:RNOMAC.REQ';
REQUIRE 'REQ:SCA.REQ';
REQUIRE 'REQ:TSF.REQ';
REQUIRE 'REQ:VR.REQ';
REQUIRE 'REQ:XTNTAB.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

GLOBAL LITERAL
    RINTES = %O'34' : UNSIGNED (8);

GLOBAL
    R_CMD : $RNO_CMD;				!Command-line information.
LITERAL
    MAX_LEVELS = 6,				!Maximum .HEADER LEVEL depth
    MAX_REQUIRE = 				!Maximum depth of .REQUIRE commands.
	%IF %BLISS(BLISS16)
	%THEN
	    3,		!For PDP-11.
	%ELSE
	   10,		!For VAX, 20, 10.
	%FI

    MAX_TABS = 40,				!Maximum number of tab stops.
    MAX_TITLE = 				!Maximum internal length of titles and subtitles.
	%IF %BLISS(BLISS16)
	%THEN
	    300;	! For PDP-11.
	%ELSE
	    450;	!For VAX, 20, 10.
	%FI

LITERAL
    MAX_ORANGES = 5;				!Maximum number of /PAGE_RANGE specifications.

GLOBAL LITERAL
    MAXORA = MAX_ORANGES;			!Maximum number of /PAGE_RANGE specifications.

!
! OWN STORAGE:
!
!
! GLOBAL STORAGE:
!

GLOBAL
    FS_ALLOCATE (MRAA, 500),
    LSTSTF : COUNTED_LIST,
    PDTSTF : VECTOR [PDT_SIZE],
    TSFA : VECTOR [TSF_SIZE];

GLOBAL
    %IF %BLISS(BLISS16)
    %THEN
	FS_ALLOCATE (FRA, 300),		!For PDP-11.
    %ELSE
	FS_ALLOCATE (FRA, 1000),	!For VAX, 20, 10.
    %FI

    FS_ALLOCATE (IRA, 10),
    FS_ALLOCATE (XMRA, 100),			!Used for <INDEX flag> processing.
    MRA;					!Refers to MRAa or MRAb.

GLOBAL 						!Intermediate storage for subtitle and title.
    FS_ALLOCATE (SBTMRA, MAX_TITLE),
    FS_ALLOCATE (TITMRA, MAX_TITLE);

GLOBAL 						!Descriptors for subtitle and title.
    SBTTSF : VECTOR [TSF_SIZE],
    TITTSF : VECTOR [TSF_SIZE],
    XTSF : VECTOR [TSF_SIZE];			!Used for <INDEX flag> processing.

GLOBAL
    KHAR;

GLOBAL
    ATABLE : VECTOR [128];

!

GLOBAL
    TSF : REF VECTOR [TSF_SIZE];		!refers to TSFa or TSFb

GLOBAL
    DATTIM : VECTOR[6],				!Day and time pieces.
    FNESIZ : FN_EXT_SIZE_DEFINITION,		!Sizes of pending footnotes.
    FNISIZ : FN_INT_SIZE_DEFINITION,		!Number of TSF/MRA pairs in each pending footnote
    FNCT : FNCT_DEFINITION,			!Footnote control table.
    GCA : GCA_DEFINITION,			!Global control area
    HCT : HCT_DEFINITION,			!Header control area
    IFSTK : IFSTACK;				!Stack for .IFs, etc

GLOBAL
    FOHLCH,
    FOHRCH,
    FOHDD,
    FOHLSC,
    FOHLSK,
    FOHLST,
    FOHPDT,
    FOHMRA,
    FOHTSF;

!The global literal S_FMRA is used in the module FNONLY. In
!that module, it is nesessary to reset the MRA size explicitly. The
!global literal assures that the size will be reset to the allocated
!value.

GLOBAL
    FS_ALLOCATE (FOOMRA, 300);
GLOBAL LITERAL 
    S_FMRA = 300;

GLOBAL
    FOOIOB : ref $XPO_IOB (),		!Used for processing footnotes.
    FOTIOB : ref $XPO_IOB (),
    FO1IOB : $XPO_IOB (),		!Never referred to directly
    FO2IOB : $XPO_IOB (),		!Never referred to directly
    FOOPDT : VECTOR [PDT_SIZE],		!Save area for paragraph stuff.
    FOOSCA : VECTOR [SCA_SIZE],		!Save area for SCA
    F_LIST : COUNTED_LIST [3],		!Substitute .LIST counters
    F_LCHR : VECTOR [3],		!Substitute .LIST bullet char.
    F_LSKP : VECTOR [3],		!Substitute .LIST EL spacing.
    F_LLCHR : VECTOR [3],		!Substitute left character
    F_LRCHR : VECTOR [3],		!Substitute right character
    F_LDD   : VECTOR [3],		!Susbtitute display descriptor.
    FOOTSF : VECTOR [TSF_SIZE];		!Substitute TSF area

GLOBAL
    IRAC : IRAC_DEFINITION,
    NPAGEN : PAGE_DEFINITION,			!Page number of next page
    SPAGER : BLOCK [MAX_ORANGES*PAGE_SCT_SIZE],	!List of starting pages
    TPAGER : BLOCK [MAX_ORANGES*PAGE_SCT_SIZE],	!List of terminating pages.
    PAGEN : PAGE_DEFINITION,			!Page number of current page
    NDXOOB : $XPO_IOB (),			!IOB for binary index, output.
    TOCOOB : $XPO_IOB (),			!IOB for binary table of contents, output.
    NDXPOL : INITIAL(0),			!Address of indexing pool
    NDXSGE : INITIAL(0),			!End of current segment.
    NDXSGF : INITIAL(0),			!No storage in current segment.
    XTNCNT,					!Number of XTNTAB entries
    XTNLSP : INITIAL(0),
    XTNLSX : INITIAL(0),
    XTNPOL : INITIAL(0),
    XTNSGP : INITIAL(0),
    XTNTAB : REF XTNTAB_DEFINE,			!List of transaction numbers assigned
    XPAGEN : REF XPAGEN_DEFINE;			!Page number associated with transaction number.

GLOBAL
    FLGT : FLAG_TABLE [FLAG_COUNT];

GLOBAL
    SCA : SCA_DEFINITION,			!Scanner control area.
    SCALIT : VECTOR [SCA_CASE_SIZE];		!Save case rules here during literal processing.

GLOBAL
    NUMPRM : NUMPRM_DEFINE,			!Work area.
    %IF %BLISS(BLISS16)				!General purpose character string work area.
    %THEN
	FS_ALLOCATE (FS01, 100);	!For PDP-11.
    %ELSE
	FS_ALLOCATE (FS01, 150);	!For VAX, 20, 10.
    %FI

GLOBAL
    OUTOPT : OUTOPT_DEFINE;			!Output options

!

GLOBAL BIND 					!Flag table search order
    FLTSO = PLIT (SUB_FLAG,
			   QUO_FLAG,!<QUOTE flag>
			   UPP_FLAG,!<UPPERCASE flag>
			   LOW_FLAG,!<LOWERCASE flag>
			   CAP_FLAG,!<CAPITALIZE flag>
			   UND_FLAG,!<UNDERLINE flag>
			   BLD_FLAG,!<BOLD flag>
			   SPA_FLAG,!<SPACE flag>
			   IND_FLAG,!<INDEX flag>
			   HYP_FLAG,!<HYPHENATION flag>
			   BRK_FLAG,!<BREAK flag>
			   PER_FLAG,!<PERIOD flag>
			   OVR_FLAG)!<OVERSTRIKE flag>
				    : VECTOR;

GLOBAL
    FRMSTD,					!Depth of FRMSTK (0 means empty)
    FRMSTK : FORM_STACK,
    HLC : HLC_DEFINITION,
    HLLIST : COUNTED_LIST [MAX_LEVELS],
    HLDSP : VECTOR [MAX_LEVELS],
    LSTCHR : REF VECTOR,
    LSTLCH : REF VECTOR,
    LSTRCH : REF VECTOR,
    LSTLDD : REF VECTOR,
    LSTCNT : REF COUNTED_LIST,
    LSTSKP : REF VECTOR,
    LCHLST : VECTOR [NMLST_MAXSIZE],
    RCHLST : VECTOR [NMLST_MAXSIZE],
    LDDLST : VECTOR [NMLST_MAXSIZE],
    CHLST : VECTOR[NMLST_MAXSIZE],
    NMLST : NUMBER_LIST,
    PDT : REF PDT_DEFINITION,
    PHAN : PHAN_DEFINITION,
    SKPLST : VECTOR [NMLST_MAXSIZE],
    TTABLE : COUNTED_LIST [MAX_TABS];		!Tab settings

GLOBAL
    IOBSTK : BLOCKVECTOR [MAX_REQUIRE, IOB$K_LENGTH],
    PREV_REQUIRE,				!Saves last Require's file-spec info.
    !Active input file IOBs saved in IOBSTK.
    RNEIOB : REF $XPO_IOB (),			!Storage for primary input IOB.
    RNAIOB : REF $XPO_IOB (),			!Storage for output IOB.
    RNIIOB : REF $XPO_IOB (),			!Input IOB currently active
    RNOIOB : REF $XPO_IOB (),			!Output file IOB (i.e., for generated document)
    TTEIOB : $XPO_IOB (),			!Standard error file (usually TTY:)
    TTIIOB : $XPO_IOB (),			!Standard input file (usually TTY:)
    TTOIOB : $XPO_IOB (),			!Standard output file (usually TTY:)
    TSIIOB : $XPO_IOB ();			!Standard input file; but STREAM; not RECORD.

!!	TSOIOB:	    $XPO_IOB();	!Standard output file, but STREAM, not RECORD.

GLOBAL
    VRCNT,					!Number of variables.
    VRNAME : VRNAME_DEF,			!The variable names.
    VRLNG : VRLNG_DEF,				!The length of the names.
    VRBOOL : VRBOOL_DEF,			!TRUE/FALSE value
    VRFFLG : VRFFLG_DEF,			!FALSE flag
    VRTFLG : VRTFLG_DEF,			!TRUE flag
    VRSRC : VRSRC_DEF;				!Source of variable definition.

END						!End of module

ELUDOM
!			End of CLIST.REQ
