%TITLE 'DSR directive dispatcher'
MODULE DOCMOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Command dispatcher.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
! MODIFIED BY:
!
!	012	RWF00012	Rich Friday	11-November-1981
!		All footnote control has been moved into FNCT.  Made
!		  appropriate changes herein.
!		.PAGING & .NO PAGING processing has been moved to a new
!		  routine -- PANPA.
!
!	011	REM00011	Ray Marshall	16-September-1981
!		Cosmetic changes only!  Added %TITLE and comments.  Filled
!		  in all history items.
!
!	010a	D?S00010a	Dot Smith	25-August-1981
!		Updated Copyright.  She didn't know where or how to get the
!		  missing revision history information so she just put in a
!		  null history section.
!
!	010	   00010	
!		Added .SET LEVEL directive.
!
!	009	   00009	
!		Changed REQUIRE directives to include the logical REQ:
!		  pointing to the require file.
!		Added the directives:  .KEEP, .NOKEEP, .AUTOJUSTIFY, &
!		  .NOAUTOJUSTIFY.
!
!	008	   00008	
!		Added support of .XLOWER & .XUPPER directives -- including a
!		  pointer to routine XCASE which processes them.
!
!
!			NOTE on history entries:
!
!	I haven't been able to find any history before IDENT 008.  The
!	information I've included here is based on STEP DIFFERENCES run
!	against the different generations in the step library.
!								  / REM
!--
!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:FLGT.REQ';

REQUIRE 'REQ:FNCT.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:KC.REQ';

REQUIRE 'REQ:KWITEM.REQ';

REQUIRE 'REQ:NUMPRM.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    FLGT : FLAG_TABLE [FLAG_COUNT],
    FNCT : FNCT_DEFINITION,
    GCA : GCA_DEFINITION,
    IRA : FIXED_STRING,
    KHAR,
    NUMPRM : NUMPRM_DEFINE,
    SCA : SCA_DEFINITION;

EXTERNAL LITERAL 				!Error messages
    RNFCNS,
    RNFIFT,
    RNFJEC,
    RNFURR;

EXTERNAL ROUTINE
    ALINE,
    BARS,
    CARAGE,
    CHAPT,
    CONCAT,
    CONTRL,
    DLE,
    DOCASE,
    DOPX,
    DSPPAG,
    DSPHL,
    ELSEN,
    ENDCMT,
    ERMA,
    ERMN,
    FIGURE,
    FJNFNJ,
    FLGSEM,
    FN,
    GETNUM,
    GTABS,
    HL,
    IFIFNE,
    LAYOUT,
    LIST,
    LIT,
    MAKNDX,
    NM,
    NOTE,
    OFT,
    OUTNJ,
    PAGE,
    PANPA,
    PARAG,
    PERIOD,
    REPEAT,
    REQ,
    RSKIPS,
    SETDAT,
    SETTIM,
    STC,
    STD,
    STHL,
    SUBPAG,
    TITLES,
    VR,
    XCASE;


%SBTTL 'DOCM -- routine header'
GLOBAL ROUTINE DOCM (HANDLER, ACTION_LIST) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine is mainly a node from which all the
!	commands branch out to their corresponding modules.
!	The only processing done here is
!	1.	Interpretation of bits stored in the tables
!	2.	Skipping spaces and tabs after a command has
!		completed
!	3.	Detecting junk not picked up by the command
!		routines, and issuing an error message.
!	4.	Skipping comments after commands.
!
! FORMAL PARAMETERS:
!
!	HANDLER is a unique integer that specifies exactly which
! command the user typed.  ACTION_LIST is a set of bits that specify
! additional processing to take place before the actual command is
! carried out.  See KWITEM.REQ for a description of the bits.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

%SBTTL 'DOCM -- directive pre-processing'

    BEGIN
    !Interpret the various action bits associated with each command.

    IF 						!
	.GCA_SKIPPING
    THEN 					!
	BEGIN					!In the FALSE branch of an .IF command.

	IF 					!
	    NOT .RIF (ACTION_LIST)
	THEN 					!
	    BEGIN				!Skip lines containing commands not related to .IF
	    RETURN;
	    END;

	END;

!

    IF 						!
	.FNCT_COLLECTING AND .IIF (ACTION_LIST)
    THEN 					!
	BEGIN					!This command is illegal in a footnote
	ERMA (RNFIFT, TRUE);			!Skip to end of command and issue message
	RETURN;
	END;

    IF 						!
	.CPP (ACTION_LIST)
    THEN 					!
	BEGIN					!One bit controls both paragraphs and indentation
	SCA_INDENT = 0;
	END;

!

    IF 						!
	.DO_OUTNJ (ACTION_LIST)
    THEN 					!
	BEGIN
	OUTNJ ();
	!Cancel pending indentation only if it came from an
	!"auto-ed" paragraph.

	IF 					!
	    .SCA_PARA_PND
	THEN 					!
	    SCA_INDENT = 0;

	SCA_PARA_PND = FALSE;
	END;

    IF 						!
	.DO_GETNUM (ACTION_LIST)
    THEN
    !Pick up a single number that might be provided.
	NUM_RESULT = GETNUM (IRA, NUM_VALUE, NUM_SIGN, NUM_LENGTH);

%SBTTL 'DOCM -- directive dispatching'

    CASE .HANDLER FROM FIRST_COMMAND TO LAST_COMMAND OF
	SET

	[H_APPENDIX, H_CHAPTER] :
	    BEGIN
	    CHAPT (.HANDLER);
	    END;

	[H_DISPLAY_APPEN, H_DISPLAY_CHAPT, H_DISPLAY_SUBPA, H_DISPLAY_NUMBE] :
	    BEGIN
	    DSPPAG (.HANDLER);
	    END;

	[H_DISPLAY_LEVEL] :
	    BEGIN
	    DSPHL (.HANDLER);
	    END;

	[H_DISPLAY_ELEME] :
	    BEGIN
	    DLE (.HANDLER);
	    END;

	[H_COMMENT] :
	    BEGIN
	    ENDCMT ();
	    END;

	[H_BEGIN_BAR, H_END_BAR, H_ENABLE_BAR, H_DISABLE_BAR] :
	    BEGIN
	    BARS (.HANDLER);
	    END;

	[H_CONTROL_CHARA, H_NO_CONTROL_CH] :
	    BEGIN
	    CONTRL (.HANDLER);
	    END;

	[H_DO_INDEX, H_PRINT_INDEX] :
	    BEGIN
	    DOPX (.HANDLER, .SCA_INDEX);
	    END;

	[H_ENTRY, H_INDEX, H_SUBINDEX] :
	    BEGIN
	    MAKNDX (.HANDLER, .SCA_INDEX);
	    END;

	[H_XLOWER,H_XUPPER] :
	    BEGIN
	    XCASE (.HANDLER);
	    END;

	[H_CENTER, H_RIGHT, H_LEFT, H_INDENT] :
	    BEGIN
	    ALINE (.HANDLER);
	    END;

	[H_RIGHT_MARGIN, H_LEFT_MARGIN, H_PAGE_SIZE] :
	    BEGIN
	    PAGE (.HANDLER);
	    END;

	[H_FIGURE, H_FIGURE_DEFERR] :
	    BEGIN
	    FIGURE (.HANDLER);
	    END;

	[H_FOOTNOTE, H_END_FOOTNOTE] :
	    BEGIN
	    FN (.HANDLER);
	    END;

	[H_FILL, H_JUSTIFY, H_NO_FILL, H_NO_JUSTIFY] :
	    BEGIN
	    FJNFNJ (.HANDLER);
	    END;

	[H_KEEP, H_NO_KEEP, H_AUTOJUSTIFY, H_NO_AUTOJUSTIF]:
	    BEGIN
	    FJNFNJ (.HANDLER);
	    END;

	[H_LIST, H_LIST_ELEMENT] :
	    BEGIN
	    LIST (.HANDLER);
	    END;

	[H_NOTE] :
	    BEGIN
	    NOTE (.HANDLER);
	    END;

	[H_END_LIST, H_END_NOTE] :
	    BEGIN
	    ELSEN (.HANDLER);
	    END;

	[H_HEADER_LEVEL, H_SET_LEVEL] :
	    BEGIN
	    HL (.HANDLER);
	    END;
	
	[H_STYLE_HEADERS]:
	    BEGIN
	    STHL (.HANDLER);
	    END;

	[H_NO_SPACE] :
	    BEGIN
	    CONCAT (.HANDLER);
	    END;

	[H_NUMBER_PAGE, H_NUMBER_APPEND, H_NUMBER_CHAPTE, H_NUMBER_SUBPAG, H_NUMBER_INDEX, H_NUMBER_LEVEL,
	    H_NUMBER_LIST, H_NUMBER_RUNNIN] :
	    BEGIN
	    NM (.HANDLER);
	    END;

	[H_LITERAL, H_END_LITERAL] :
	    BEGIN
	    LIT (.HANDLER);
	    END;

!!!	[H_BOLDING, H_HYPHENATION, H_UNDERLINING, H_OVERSTRIKING, H_INDEXING, H_NO_BOLDING, H_NO_UNDERLININ,
!!!	    H_NO_OVERSTRIKI, H_NO_HYPHENATIO, H_NO_INDEXING] :
	[H_HYPHENATION, H_NO_HYPHENATIO]:
	    BEGIN
	    FLGSEM (.HANDLER);
	    END;

	[H_ENABLE_BOLDIN, H_ENABLE_INDEXI, H_ENABLE_OVERST, H_ENABLE_UNDERL,
	    H_ENABLE_HYPHEN, H_DISABLE_HYPHE,
	    H_DISABLE_BOLDI, H_DISABLE_INDEX, H_DISABLE_OVERS, H_DISABLE_UNDER] :
	    BEGIN
	    FLGSEM (.HANDLER);
	    END;

	[H_ENABLE_TOC, H_DISABLE_TOC] :
	    BEGIN
	    FLGSEM (.HANDLER);
	    END;

	[H_SEND_TOC] :
	    BEGIN
	    STC (.HANDLER, .GCA_BTC)
	    END;

	[H_PERIOD, H_NO_PERIOD] :
	    BEGIN
	    PERIOD (.HANDLER);
	    END;

	[H_REPEAT] :
	    BEGIN
	    REPEAT (.HANDLER);
	    END;

	[H_REQUIRE] :
	    BEGIN
	    REQ (.HANDLER);
	    END;

	[H_STANDARD] :
	    BEGIN
	    STD (.HANDLER);
	    END;

	[H_TAB_STOPS] :
	    BEGIN
	    GTABS (.HANDLER);
	    END;

	[H_UPPER_CASE] :
	    BEGIN
	    DOCASE (.HANDLER);
	    END;

	[H_LOWER_CASE] :
	    BEGIN
	    DOCASE (.HANDLER);
	    END;

	[H_AUTOPARAGRAPH, H_NO_AUTOPARAGR, H_AUTOTABLE, H_NO_AUTOTABLE, H_PARAGRAPH, H_SET_PARAGRAPH] :
	    BEGIN
	    PARAG (.HANDLER);
	    END;

	[H_FLAGS_ALL] :
	    BEGIN
	    OFT (.HANDLER, 0);
	    END;

	[H_NO_FLAGS_ALL] :
	    BEGIN
	    OFT (.HANDLER, 0);
	    END;

	[H_FLAGS_BOLD] :
	    BEGIN
	    OFT (.HANDLER, BLD_FLAG);
	    END;

	[H_NO_FLAGS_BOLD] :
	    BEGIN
	    OFT (.HANDLER, BLD_FLAG);
	    END;

	[H_FLAGS_BREAK] :
	    BEGIN
	    OFT (.HANDLER, BRK_FLAG);
	    END;

	[H_NO_FLAGS_BREA] :
	    BEGIN
	    OFT (.HANDLER, BRK_FLAG);
	    END;

	[H_FLAGS_CAPITAL] :
	    BEGIN
	    OFT (.HANDLER, CAP_FLAG);
	    END;

	[H_NO_FLAGS_CAPI] :
	    BEGIN
	    OFT (.HANDLER, CAP_FLAG);
	    END;
	
	[H_FLAGS_COMMENT] :
	    BEGIN
	    OFT (.HANDLER, COM_FLAG);
	    END;

	[H_NO_FLAGS_COMM] :
	    BEGIN
	    OFT (.HANDLER, COM_FLAG);
	    END;

	[H_FLAGS_CONTROL] :
	    BEGIN
	    OFT (.HANDLER, CON_FLAG);
	    END;

	[H_NO_FLAGS_CONT] :
	    BEGIN
	    OFT (.HANDLER, CON_FLAG);
	    END;

	[H_FLAGS_ENDFOOT] :
	    BEGIN
	    OFT (.HANDLER, EFO_FLAG);
	    END;

	[H_NO_FLAGS_ENDF] :
	    BEGIN
	    OFT (.HANDLER, EFO_FLAG);
	    END;

	[H_FLAGS_HYPHENA] :
	    BEGIN
	    OFT (.HANDLER, HYP_FLAG);
	    END;

	[H_NO_FLAGS_HYPH] :
	    BEGIN
	    OFT (.HANDLER, HYP_FLAG);
	    END;

	[H_FLAGS_INDEX] :
	    BEGIN
	    OFT (.HANDLER, IND_FLAG);
	    END;

	[H_NO_FLAGS_INDE] :
	    BEGIN
	    OFT (.HANDLER, IND_FLAG);
	    END;

	[H_FLAGS_LOWERCA] :
	    BEGIN
	    OFT (.HANDLER, LOW_FLAG);
	    END;

	[H_NO_FLAGS_LOWE] :
	    BEGIN
	    OFT (.HANDLER, LOW_FLAG);
	    END;

	[H_FLAGS_OVERSTR] :
	    BEGIN
	    OFT (.HANDLER, OVR_FLAG);
	    END;

	[H_NO_FLAGS_OVER] :
	    BEGIN
	    OFT (.HANDLER, OVR_FLAG);
	    END;

	[H_FLAGS_PERIOD] :
	    BEGIN
	    OFT (.HANDLER, PER_FLAG);
	    END;

	[H_NO_FLAGS_PERI] :
	    BEGIN
	    OFT (.HANDLER, PER_FLAG);
	    END;

	[H_FLAGS_QUOTE] :
	    BEGIN
	    OFT (.HANDLER, QUO_FLAG);
	    END;

	[H_NO_FLAGS_QUOT] :
	    BEGIN
	    OFT (.HANDLER, QUO_FLAG);
	    END;

	[H_FLAGS_SPACE] :
	    BEGIN
	    OFT (.HANDLER, SPA_FLAG);
	    END;

	[H_NO_FLAGS_SPAC] :
	    BEGIN
	    OFT (.HANDLER, SPA_FLAG);
	    END;

	[H_FLAGS_SUBINDE] :
	    BEGIN
	    OFT (.HANDLER, SBX_FLAG);
	    END;

	[H_NO_FLAGS_SUBI] :
	    BEGIN
	    OFT (.HANDLER, SBX_FLAG);
	    END;

	[H_FLAGS_SUBSTIT] :
	    BEGIN
	    OFT (.HANDLER, SUB_FLAG);
	    END;

	[H_NO_FLAGS_SUBS] :
	    BEGIN
	    OFT (.HANDLER, SUB_FLAG);
	    END;

	[H_FLAGS_UNDERLI] :
	    BEGIN
	    OFT (.HANDLER, UND_FLAG);
	    END;

	[H_NO_FLAGS_UNDE] :
	    BEGIN
	    OFT (.HANDLER, UND_FLAG);
	    END;

	[H_FLAGS_UPPERCA] :
	    BEGIN
	    OFT (.HANDLER, UPP_FLAG);
	    END;

	[H_NO_FLAGS_UPPE] :
	    BEGIN
	    OFT (.HANDLER, UPP_FLAG);
	    END;

	[H_BLANK, H_BREAK, H_PAGE, H_SKIP, H_SPACING, H_TEST_PAGE] :
	    BEGIN
	    CARAGE (.HANDLER);
	    END;

	[H_VARIABLE] :
	    BEGIN
	    VR (.HANDLER);
	    END;

	[H_IF, H_IFNOT, H_ELSE, H_ENDIF] :
	    BEGIN
	    IFIFNE (.HANDLER);
	    END;

	[H_DATE, H_NO_DATE, H_FIRST_TITLE, H_SUBTITLE, H_NO_SUBTITLE, H_TITLE, H_AUTOSUBTITLE, H_NO_AUTOSUBTIT
	, H_HEADERS_LOWER, H_HEADERS_ON, H_HEADERS_MIXED, H_HEADERS_UPPER, H_NO_HEADERS, H_NO_NUMBER] :
	    BEGIN
	    TITLES (.HANDLER);
	    END;

	[H_PAGING, H_NO_PAGING] :
	    BEGIN
	    PANPA (.HANDLER);
	    END;

	[H_SET_DATE] :
	    BEGIN
	    SETDAT (.HANDLER);
	    END;

	[H_SET_TIME] :
	    BEGIN
	    SETTIM (.HANDLER);
	    END;

	[H_SUBPAGE, H_END_SUBPAGE] :
	    BEGIN
	    SUBPAG (.HANDLER);
	    END;

	[H_LAYOUT] :
	    BEGIN
	    LAYOUT (.HANDLER);
	    END;

	[INRANGE] :
	    BEGIN
	    ERMN (RNFCNS, .HANDLER);
	    END;

	[OUTRANGE] :
	    BEGIN
	    ERMN (RNFURR, .HANDLER);
	    END;
	TES;

%SBTTL 'DOCM -- directive post-processing'

    RSKIPS (IRA);				!Trailing spaces and tabs are ok.

    IF 						!
	(.KHAR EQL RINTES)			!
	OR (.KHAR EQL %C';')			!
	OR (.KHAR EQL .FLGT [CON_FLAG, FLAG_CHARACTER])
    THEN
	RETURN;

    IF 						!
	.FLGT [COM_FLAG, FLAG_ENABLED]		!
	AND (.KHAR EQL .FLGT[COM_FLAG, FLAG_CHARACTER])	!Trailing comment?
    THEN 					!
    !Skip trailing comment.
	BEGIN
	ENDCMT ();
	RETURN;
	END;

    !The following code positions past any text still left after
    !the command parameters have been processed.  Such text should not have
    !been there in the first place, and constitutes a syntax error.
    ERMA (RNFJEC, TRUE);			!Skip to end of command and issue message
    RETURN;
    END;					!End of DOCM

END						!End of module

ELUDOM
