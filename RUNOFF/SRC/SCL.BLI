MODULE SCLOOO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Rearrange the MRA by moving the current word to the left.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!
!
! INCLUDE FILES:
!

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:TSF.REQ';

REQUIRE 'REQ:SCA.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    MRA : REF FIXED_STRING,
    SCA : SCA_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    GCSKIP;


GLOBAL ROUTINE SCL : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
! See ABSTRACT for a sufficient explanation.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	PTR,
	PTR_COPY;

    FS_INIT (MRA);				!reset pointers and counters back to start
    TSF_INT_HL = 0;				!Nothing in TSF yet.
    TSF_EXT_HL = 0;				!...
    TSF_INT_VL = 0;				!...

    IF 						!
	.SCA_WRD_INT_L EQL 0
    THEN
    !No word to shift left.
	RETURN;

    GCSKIP (.SCA_SPACING - 1);			!Generate intermediate code for skipping.

    INCR I FROM 1 TO .SCA_LM DO
	(FS_WCHAR (MRA, %C' '));		!Fill out left margin with spaces.

    TSF_INT_HL = .TSF_INT_HL + .SCA_LM;
    TSF_EXT_HL = .SCA_LM;
    PTR = .FS_NEXT (MRA);			!The current word will start here eventually.
    PTR_COPY = .FS_NEXT (MRA);

    INCR I FROM 1 TO (.SCA_WRD_INT_L) DO
	BEGIN					!move the current word a character at a time.
	! NOTE: This could have been coded using fs_wchar, and forgetting
	!	about using ptr_copy and hold_char; however, that uncovered a
	!	compiler bug.  Also, this generates more efficient object code.

	LOCAL
	    HOLD_CHAR;

	HOLD_CHAR = CH$RCHAR_A (SCA_WRD_PNTR);
	CH$WCHAR_A (.HOLD_CHAR, PTR_COPY);
	FS_LENGTH (MRA) = .FS_LENGTH (MRA) + 1;
	END;

    FS_NEXT (MRA) = .PTR_COPY;
    SCA_WRD_PNTR = .PTR;				!re-establish pointer to SCA_WRD.
    RETURN;
    END;					!End of SCL

END						!End of module

ELUDOM
