MODULE GCODEO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Generates intermediate code for paper positioning.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: June, 1978
!
! MODIFIED BY: K. A. Dawson
!
!	007	REM00007	Ray Marshall	17-December-1981
!		Built up revision history based on CMS library generations.
!
!	006	RWF00006	Rich Friday	5-November-1981
!		Footnote control was moved to its own control area in its own
!		  require file (FNCT.REQ).  Appropreate changes have been made.
!
!	005	REM00005	Ray Marshall	25-August-1981
!		Updated copyright and did initial reformatting of history.
!
!	004	KAD00004	Keith Dawson	14-November-1981
! 		For VERSION1.124h: Moved routine GFIG from this module into
!		  FIGURE, in order to move GCODE into the root for PDP-11.
!
!	003	KAD00003	Keith Dawson	21-October-1980
!		Fixup require file declarations so they now all come from REQ:
!		  and not the local directory.
!
!	002	KAD00002	Keith Dawson	17-October-1980
!		I (Ray Marshall) don't know what (if any) changes were made
!		  on or before this date.  This is the first generation in
!		  the CMS library.
!--

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    GCPAGE : NOVALUE,
    GCPOS : NOVALUE,
    GCSKIP : NOVALUE,
    GTPC : NOVALUE,
    GUSKIP : NOVALUE;

!
! INCLUDE FILES:
!
REQUIRE 'REQ:FNCT.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:IRAC.REQ';

REQUIRE 'REQ:LSTBTS.REQ';

REQUIRE 'REQ:SCA.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    FNCT : FNCT_DEFINITION,
    GCA : GCA_DEFINITION,
    IRAC : IRAC_DEFINITION,
    MRA : REF FIXED_STRING,
    SCA : SCA_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    OUTCRG;


GLOBAL ROUTINE GCPAGE : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates code for starting a new page, if not already
!	at the top of a page.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    IF 						!Don't start a new page if
	.FNCT_COLLECTING			!footnotes are being collected,
    THEN 					!since footnotes all belong on
	RETURN;					!one page.

    FS_WCHAR (MRA, RINTES);
    FS_WCHAR (MRA, %C'p');
    FS_WCHAR (MRA, %C' ');
    TSF_INT_VL = .TSF_INT_VL + 3;
    END;					!End of GCPAGE


GLOBAL ROUTINE GCPOS (POSITION) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates code to position to a particular line on a page.
!
! FORMAL PARAMETERS:
!
!	POSITION indicates which line is to be positioned to.
!	Negative means from the bottom of the page, positive from
!	the top.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TSF_PHREGS : REF VECTOR [TSF_NREGS];

    !Don't go anywhere if footnotes are being collected.  Leave
    !the paper positioned where it is.
    IF 						!
	.FNCT_COLLECTING
    THEN 					!
	RETURN;

    TSF_PHREGS = TSF__PHREGS;

    IF 						!Be sure not to allocate too many "registers".
	.TSF_NEXT_REG GEQ TSF_NREGS
    THEN
	OUTCRG ();

    TSF_PHREGS [.TSF_NEXT_REG] = .POSITION;
    FS_WCHAR (MRA, RINTES);
    FS_WCHAR (MRA, %C'g');
    FS_WCHAR (MRA, .TSF_NEXT_REG);
    TSF_INT_VL = .TSF_INT_VL + 3;
    TSF_NEXT_REG = .TSF_NEXT_REG + 1;
    TSF_BAR_CHAR = .SCA_BAR_CHAR;		!Propogate change bars.
    TSF_BARS = .TSF_BARS OR .IRAC_BARS;		!...
    END;					!End of GCPOS


GLOBAL ROUTINE GCSKIP (SPACING) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generate code to skip lines that don't occur at the top
!	of a page.
!
! FORMAL PARAMETERS:
!
!	SPACING indicates how many lines are to be skipped.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TSF_PHREGS : REF VECTOR [TSF_NREGS];

    TSF_PHREGS = TSF__PHREGS;

    IF 						!
	.SPACING LEQ 0
    THEN
	RETURN;					!Don't generate code for single spacing.

    IF 						!Don't allocate too many "registers".
	.TSF_NEXT_REG GEQ TSF_NREGS
    THEN 					!
	OUTCRG ();

    TSF_PHREGS [.TSF_NEXT_REG] = .SPACING;
    FS_WCHAR (MRA, RINTES);

    !If collecting footnotes, make the lines unconditional and
    !count them too.
    IF 						!
	.FNCT_COLLECTING
    THEN 					!
	BEGIN
	FS_WCHAR (MRA, %C'u');
	TSF_LINES = .TSF_LINES + .SPACING;
	END
    ELSE 					!
	FS_WCHAR (MRA, %C's');

    FS_WCHAR (MRA, .TSF_NEXT_REG);
    TSF_INT_VL = .TSF_INT_VL + 3;
    TSF_NEXT_REG = .TSF_NEXT_REG + 1;
    TSF_BAR_CHAR = .SCA_BAR_CHAR;		!Propogate change bars.
    TSF_BARS = .TSF_BARS OR .IRAC_BARS;		!...
    END;					!End of GCSKIP


GLOBAL ROUTINE GTPC (COUNT) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates intermediate code for a .TEST PAGE command.
!
! FORMAL PARAMETERS:
!
!	COUNT specifies how many free lines should be tested for.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TSF_PHREGS : REF VECTOR [TSF_NREGS];

    TSF_PHREGS = TSF__PHREGS;

    !If collecting a footnote, don't bother to do a test page, since
    !the text will fit by definition.
    IF 						!
	.FNCT_COLLECTING
    THEN 					!
	RETURN;

    IF 						!Don't allocate too many "registers".
	.TSF_NEXT_REG GEQ TSF_NREGS
    THEN
	OUTCRG ();

    TSF_PHREGS [.TSF_NEXT_REG] = .COUNT;
    FS_WCHAR (MRA, RINTES);			!If (test page..)
    FS_WCHAR (MRA, %C't');
    FS_WCHAR (MRA, .TSF_NEXT_REG);
    FS_WCHAR (MRA, RINTES);			!end THEN
    FS_WCHAR (MRA, %C'.');
    FS_WCHAR (MRA, %C' ');
    FS_WCHAR (MRA, RINTES);			!else (page..)
    FS_WCHAR (MRA, %C'p');
    FS_WCHAR (MRA, %C' ');
    FS_WCHAR (MRA, RINTES);			!end ELSE
    FS_WCHAR (MRA, %C'.');
    FS_WCHAR (MRA, %C' ');
    TSF_INT_VL = .TSF_INT_VL + 12;
    TSF_NEXT_REG = .TSF_NEXT_REG + 1;
    TSF_BAR_CHAR = .SCA_BAR_CHAR;		!Propogate change bars.
    TSF_BARS = .TSF_BARS OR .IRAC_BARS;		!...
    END;					!End of GTPC


GLOBAL ROUTINE GUSKIP (SPACING) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	Generates code to skip unconditionally a number of lines.
!
! FORMAL PARAMETERS:
!
!	SPACING indicates how many lines should be skipped.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TSF_PHREGS : REF VECTOR [TSF_NREGS];

    TSF_PHREGS = TSF__PHREGS;

    IF 						!
	.SPACING LEQ 0
    THEN
	RETURN;					!Don't generate code for single spacing.

    IF 						!Don't allocate too many "registers".
	.TSF_NEXT_REG GEQ TSF_NREGS
    THEN
	OUTCRG ();

    TSF_PHREGS [.TSF_NEXT_REG] = .SPACING;
    FS_WCHAR (MRA, RINTES);
    FS_WCHAR (MRA, %C'u');
    FS_WCHAR (MRA, .TSF_NEXT_REG);
    TSF_INT_VL = .TSF_INT_VL + 3;
    TSF_NEXT_REG = .TSF_NEXT_REG + 1;
    TSF_BAR_CHAR = .SCA_BAR_CHAR;		!Propogate change bars.
    TSF_BARS = .TSF_BARS OR .IRAC_BARS;		!...

    !If collecting a footnote count the number of lines to be generated.
    IF 						!
	.FNCT_COLLECTING
    THEN 					!
	TSF_LINES = .TSF_LINES + .SPACING;

    END;					!End of GUSKIP

END						!End of module

ELUDOM
