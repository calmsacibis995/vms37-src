MODULE SKIPLO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Conditional and unconditional line skipping.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: May, 1978
!
! MODIFIED BY:
!
!
!	006	REM00006	Ray Marshall	17-December-1981
!		Built up revision history based on CMS library generations.
!
!	005	RWF00005	Rich Friday	5-November-1981
!		Footnote control was moved to its own control area in its own
!		  require file (FNCT.REQ).  Appropreate changes have been made.
!		  There were also some minor comment changes to reflect the new
!		  footnote processing.  And some minor logic changes, too.
!
!	004	REM00004	Ray Marshall	25-August-1981
!		Updated copyright.
!
!	003	KAD00003	Keith Dawson	21-October-1980
!		Fixup require file declarations so they now all come from REQ:
!		  and not the local directory.
!
!	002	KAD00002	Keith Dawson	17-October-1980
!		I (Ray Marshall) don't know what (if any) changes were made
!		  on or before this date.  This is the first generation in
!		  the CMS library.
!--

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    CSKIPL : NOVALUE,
    UFORM : NOVALUE,
    USKIPL : NOVALUE;

!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:BPOSIT.REQ';

REQUIRE 'REQ:CLHOPS.REQ';

REQUIRE 'REQ:FNCT.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:LSTBTS.REQ';

REQUIRE 'REQ:LSTOPS.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    FNCT : FNCT_DEFINITION,
    FRA : FIXED_STRING,
    GCA : GCA_DEFINITION,
    PHAN : PHAN_DEFINITION,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    BWAIT,
    CLH,
    FBWAIT,
    LSTOPS,
    NEWPAG,
    TPFEQL,
    TPR;


GLOBAL ROUTINE CSKIPL (LINES) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	CSKIPL skips lines until either the top of a page is
!	reached, or the requested number of lines have been skipped.
!
! FORMAL PARAMETERS:
!
!	LINES specifies the maximum number of lines to be skipped.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    IF 						!
	.PHAN_TOP_PAGE
    THEN
	RETURN;					!Don't skip lines if at top of page.

    IF 						!
	.LINES EQL 0
    THEN
	RETURN;					!Forget trivial requests.

    IF 						!
	NOT TPR (.LINES + 1)
    THEN
    !Just start a new page if the skipping
    !would go over a page boundary.
	PHAN_TOP_PAGE = TRUE
    ELSE
	BEGIN

	!Initialize output buffer.  When CLH gets called FRA is either empty
	!or else contains some stuff that appears to the left of the document.
	FS_INIT (FRA);

	!Attach listing options to line.
	LSTOPS(LSTOPS_NO_ISEQN, TRUE);

	!Write out the blank lines.
	INCR I FROM 1 TO MIN (.LINES, 500) DO
	    BEGIN

	    IF 					!
		.FNCT_READY NEQ 0
	    THEN

		!Yup, there are footnotes waiting to be output.
		!So, before writing a blank line, see if the paper is
		!positioned at precisely the position where some
		!footnotes should appear.
		IF 				!
		    TPFEQL () NEQ 0
		THEN
		    !Yup, we're in the location where some footnotes should go.
		    !If a blank line were to be put out now, it would be exactly
		    !where the first line of the waiting footnotes is supposed
		    !to appear.
		    !THEREFORE, it's important that the blank line not be
		    !generated.  Instead, the top-of-page indicator is set,
		    !so that no more blank lines will be generated, and
		    !so the next line of text will force out some footnotes.
		    BEGIN
		    PHAN_TOP_PAGE = TRUE;
		    RETURN;
		    END;

	    IF 					!
		NOT .GCA_SKIP_OUT
	    THEN
		!Output blank lines only if not skipping output.
		CLH (CLH_WRITE_OUT);

	    !Count lines.
	    PHAN_LINES_TP = .PHAN_LINES_TP + 1;
	    END;

	!Now restore the output buffer to an empty state
	FS_INIT (FRA)

	END;

    END;					!End of CSKIPL


GLOBAL ROUTINE USKIPL (LINES) : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	USKIPL skips lines regardless of position on the page.
!	In the event that there is a pending formfeed, it forces
!	that out also.  Note that the only time a formfeed could
!	be pending is at the top of a page, when the user had said
!	.NO HEADERS.  The routine CSKIPL cannot put out the formfeed
!	because it skips lines only if they do not occur at the top
!	of the page.  The only other routine that can catch pending
!	formfeeds is LOUT1.
!
! FORMAL PARAMETERS:
!
!	LINES specifies how many lines are to be skipped.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	SKIP;

    IF 						!
	.LINES EQL 0
    THEN
    !No lines to skip.
	RETURN;

    SKIP = .LINES;

    IF 						!
	.PHAN_FORM_PEND NEQ 0
    THEN
    !A form feed is pending.

	IF .PHAN_SIMULATE
	THEN
	!Simulate the formfeed.
	    UFORM ()
	ELSE
	!Force out pending formfeed
	    BEGIN

	    IF 					!
		.PHAN_PAUSE
	    THEN
		(IF 				!
		    NOT .GCA_SKIP_OUT THEN
		!Bell the user before issuing the form feed.
		    FBWAIT ())
	    ELSE
		FS_WCHAR (FRA, .PHAN_FORM_PEND);

	!Attach listing options to line.
	LSTOPS(LSTOPS_NO_ISEQN, TRUE);

	    IF 					!
		NOT .GCA_SKIP_OUT
	    THEN
		!Don't write blank lines if output is suppressed.
		CLH (CLH_WRITE_OUT);

	    !Count lines.
	    PHAN_LINES_TP = .PHAN_LINES_TP + 1;
	    SKIP = .SKIP - 1;
	    PHAN_FORM_PEND = 0;
	    FS_INIT (FRA);
	    END;

    INCR I FROM 1 TO MIN (.SKIP, 500) DO
	BEGIN

	IF 					!
	    .PHAN_PAGING			!
	    AND ((.PHAN_LINES_TP GEQ .PHAN_LLINES) OR .PHAN_TOP_PAGE)
	THEN
	    NEWPAG ();

	FS_INIT (FRA);

	!Attach listing options to line.
	LSTOPS(LSTOPS_NO_ISEQN, TRUE);

	IF 					!
	    NOT .GCA_SKIP_OUT
	THEN
	!Write out blank lines only if output is not suppressed.
	    CLH (CLH_WRITE_OUT);

	!Count lines.
	PHAN_LINES_TP = .PHAN_LINES_TP + 1;
	END;

    FS_INIT (FRA);
    END;					!End of USKIPL


GLOBAL ROUTINE UFORM : NOVALUE =

!++
! FUNCTIONAL DESCRIPTION:
!
!	UFORM starts a new page by simulating a form feed by
!	putting out a sufficient number of blank lines.
!
! FORMAL PARAMETERS:
!
!	NONE
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	TO_END;

    IF 						!
	.GCA_SKIP_OUT
    THEN
	RETURN;

    !User said /SIMULATE, so simulate formfeeds.
    FS_INIT (FRA);
    TO_END = .PHAN_PLINES - (.PHAN_BOTTOM MOD .PHAN_PLINES);

    IF 						!
	.TO_END NEQ .PHAN_PLINES
    THEN
    !Skip blank lines only if not already at the end of the page.

	INCR I FROM 1 TO MIN (.TO_END, 500) DO
	    CLH (CLH_WRITE_OUT);

    PHAN_FORM_PEND = 0;				!No more pending formfeed.
    !Buzz the user if he said /PAUSE

    IF 						!
	.PHAN_PAUSE
    THEN
	BWAIT ();

    END;					!End of UFORM

END						!End of module

ELUDOM
