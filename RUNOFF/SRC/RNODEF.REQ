!Version 005 --  1-JUL-1981
!For DSR V1.124f
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!		RNODEF.REQ
!
!	This file defines compile-time logical expressions
!	that control what a generated RUNOFF does.
!
!	REVISION HISTORY:
!
!	VERSION 002	By Ray Marshall		16-JUN-1981
!		Expanded comments.  Modified the use of VARIANT such that
!		the resulting TRUE/FALSE status is now based on a specific
!		bit, rather than the complicated divisable by 3 and/or
!		greater then 100 configuration.
!
!	VERSION 003	By Ray Marshall		24-JUN-1981
!		Added USING_XPORT for conditional compilations of the new
!		I/O method.  The default condition is TRUE.
!
!	VERSION 004	By Ray Marshall		 1-JUL-1981
!		Added FULL_LISTING for conditionally including/excluding blocks
!		of source code in the resulting compilation listing.  This is
!		initially used by IO.BLI, but is applicable to any other DSR
!		module as well.  For ease of use I also added the macros
!		STOP_LIST and START_LIST
!
!	VERSION 005	By Ray Marshall		 25-JUL-1981
!		Added DSR16_RSX and DSR16_RSTS to allow us to, in the future,
!		conditionly compile the error messages to eithor of these two
!		operating systems.
!
!
!	The bit assignments are as follows:
!
!	BIT  WEIGHT   MEANING
!------------------------------------------------------------------------------
!	 0      1     CLEAR =	Command line interpriter compiled in.
!
!		      SET   =	No command line interpriter!
!
!	 1      2     CLEAR =	Index may be compiled either in memory or in
!				a file usable by TCX.
!
!		      SET   =	Index will not be compiled in memory.  Instead,
!				it will be written to a file which must be
!				processed by TCX.
!
!	 2      4     CLEAR =	XPORT is used for performing I/O operations
!
!		      SET   =	Interface is directly to RMS-11 (no XPORT)
!
!	 3      8     CLEAR =	Unassigned
!
!		      SET   =	Unassigned
!
!	 4     16     CLEAR =	Unassigned
!
!		      SET   =	Unassigned
!
!	 5     32     CLEAR =	Unassigned
!
!		      SET   =	Unassigned
!
!	 6     64     CLEAR =	Unassigned
!
!		      SET   =	Unassigned
!
!	10   1024     CLEAR =	Extraneous comments removed
!
!		      SET   =	Full listings
!
!	11   2048     CLEAR =	No affect
!
!		      SET   =	Compile in RSX specific code
!
!	12   4096     CLEAR =	No affect
!
!		      SET   =	Compile in RSTS/E specific code
!

!------------------------------------------------------------------------------
!	If NO_CLI is true, no command line interpriter is compiled into
!	the resulting code and RUNOFF asks for the file names explicitly.
!	Also, be aware of the fact that it has no switches then, and all
!	options must be compiled in.
!
!	Modules using NO_CLI are:
!			CLH
!			RUNOFF


MACRO
	NO_CLI = (%VARIANT) %;

!------------------------------------------------------------------------------
!	If FILE_INDEX is true, RUNOFF does not generate an in-core
!	index, but rather writes it to a temporary file instead.
!	Modules using FILE_INDEX are:
!			DOPX
!			LOUT
!			OUTLIN


MACRO
	FILE_INDEX
	       = (%BLISS(BLISS16)
		OR (%VARIANT/2) )
				 	%;


!------------------------------------------------------------------------------
!   If USING_XPORT is true, RUNOFF uses XPORT for all of its I/O operations.
!   If false, then RUNOFF will interface directly to RMS-11 (XPORT isn't used).
!
!   Module utilizing USING_XPORT is:
!
!	IO


MACRO
	USING_XPORT
	       = NOT (%VARIANT/4) %;

!------------------------------------------------------------------------------
!   If FULL_LISTING is true, the compilation listing will contain all comments
!   in the source file.  The ones included, are extraneous to normal under-
!   standing of the function/operation of the module or routine.
!
!   To make it easier to use this variant, the following macros have also been
!   defined:
!
!   STOP_LIST
!	Which will decrement the listing counter by one and hopefully stop the
!	source code from being sent to the listing file. See 18.2.4.3 of the
!	BLISS Language Guide.
!
!   START_LIST
!	Which will resume the listing if at any time the listing counter has
!	been decremented below 1 by incrementing it by 1.  See 18.2.4.3 of the
!	BLISS Language Guide.
!
!   Module utilizing FULL_LISTING is:
!
!	IO


MACRO
	FULL_LISTING
	       = (%VARIANT/1024) %;
MACRO
	STOP_LIST
	       = 
%IF NOT (%VARIANT/1024)
%THEN SWITCHES LIST (NOSOURCE);
%FI
				 %;
MACRO
	START_LIST
	       = 
%IF NOT (%VARIANT/1024)
%THEN SWITCHES LIST (SOURCE);
%FI
				 %;

!------------------------------------------------------------------------------
!	These macros (DSR16_RSX and DSR16_RSTS) indicate for which PDP-11
!	operating system the target code is intended.
!
!	For now, they are used to tailor error messages to those specific
!	environments.  Module using DSR16_RSX and DSR16_RSTS is:
!
!			RNFERM


MACRO
	DSR16_RSX
	       = (%BLISS(BLISS16)
		AND (%VARIANT/2048) )
				 	%;

MACRO
	DSR16_RSTS
	       = (%BLISS(BLISS16)
		AND (%VARIANT/4096) )
				 	%;


!		End of RNODEF.REQ
