MODULE RNODAO (	!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Obtains the system date and time in a standard format.
!
!
! ENVIRONMENT: Specific for TOPS-10 and VMS
!
! AUTHOR: R.W.Friday	 CREATION DATE: February, 1979
!
! REVISION HISTORY:
!
!	003	REM00003	Ray Marshall	May 1981
!		Fixed ident to include DSR in added PDP-11 support.
!
!	002	KAD00003	K. A. Dawson	April 1981
!		Added PDP-11 support for DSRTMS.
!
!	001	KAD00001	K. A. Dawson
!		Corrected double logical-name on UUOSYM, required for B36.
!
!--
!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!
%IF %BLISS(BLISS36)
%THEN
REQUIRE 'BLI:UUOSYM';
%FI

%IF %BLISS(BLISS16)
%THEN
LIBRARY 'RSX:RSX11M';
%FI
!
! MACROS:
!

!
! EQUATED SYMBOLS:
!

!
! OWN STORAGE:
!

!
! EXTERNAL REFERENCES:
!
%IF
    %BLISS(BLISS32)
%THEN
EXTERNAL ROUTINE
    SYS$NUMTIM;
%FI

GLOBAL ROUTINE RNODAT (PIECES) : NOVALUE =	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine obtains the system date and time, breaks it
!	up into its constituents, and returns the results.
!
! FORMAL PARAMETERS:
!
!	PIECES is a vector in which the results are returned.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

%IF
    %BLISS(BLISS32)
%THEN
    LOCAL
	TIME_32 : VECTOR [7,2];
%FI

%IF
    %BLISS(BLISS16)
%THEN
    LOCAL
	TIME_16 : VECTOR [8];
%FI

    MAP
	PIECES : REF VECTOR [6];


    BIND					!Map PIECES into its constituents.
	YEAR	= PIECES[0],			!...
	MONTH	= PIECES[1],			!...
	MONTHDAY= PIECES[2],			!...
	HOURS	= PIECES[3],			!...
	MINUTES	= PIECES[4],			!...
	SECONDS	= PIECES[5];			!...

%IF
    %BLISS(BLISS36)
%THEN
    LOCAL
	SYSTEM_DATE,
	SYSTEM_MSTIME;
    MACRO
	T10_MSTIME =
	BEGIN
	BUILTIN UUO;
	REGISTER MILLISECONDS;
	UUO (0, MSTIME(MILLISECONDS));
	.MILLISECONDS
	END	%;

    MACRO
	T10_DATE =
	BEGIN
	BUILTIN UUO;
	REGISTER CURRENT_DATE;
	UUO (0, DATE(CURRENT_DATE));
	.CURRENT_DATE
	END	%;
%FI

%IF
    %BLISS(BLISS36)
%THEN
    SYSTEM_DATE		= T10_DATE;		!Fetch system date.
    SYSTEM_MSTIME	= T10_MSTIME;		!Fetch system time.

    SECONDS = .SYSTEM_MSTIME/1000;		!Convert to seconds,
    SECONDS = .SECONDS MOD 60;			!and compute seconds into current minute.

    SYSTEM_MSTIME = .SYSTEM_MSTIME/(1000*60);	!Toss away odd milliseconds and seconds.

    MINUTES = .SYSTEM_MSTIME MOD 60;		!Minutes into current hour.

    HOURS = .SYSTEM_MSTIME/60;			!Current hour.

    MONTHDAY = 1 + (.SYSTEM_DATE MOD 31);	!Day of current month.

    SYSTEM_DATE = .SYSTEM_DATE/31;		!Drop days.

    MONTH = 1 + (.SYSTEM_DATE MOD 12);		!Current month.

    YEAR = 1964 + .SYSTEM_DATE/12;		!Current year.
%FI

%IF
    %BLISS(BLISS16)
%THEN
    GTIM$S (TIME_16);				!Get binary date as an 8-word vector.

    INCR I FROM 0 TO 5 DO
	PIECES[.I] = .TIME_16[.I];		!Copy it to PIECES.
%FI

%IF
    %BLISS(BLISS32)
%THEN
    SYS$NUMTIM (TIME_32, 0);			!Get binary date as a short-word vector.

    INCR I FROM 0 TO 5 DO
	PIECES[.I] = .TIME_32[.I];		!Convert from short-word to long word.
%FI

    RETURN;

    END;			!End of RNODAT
END				!End of module
ELUDOM
