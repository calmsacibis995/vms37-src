MODULE CHAPTO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Processes .CHAPTER and .APPENDIX commands
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: August, 1978
!
! MODIFIED BY:
!
!--

!
! TABLE OF CONTENTS:
!

!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:CLIST.REQ';

REQUIRE 'REQ:FSPACK.REQ';

REQUIRE 'REQ:GCA.REQ';

REQUIRE 'REQ:HCT.REQ';

REQUIRE 'REQ:PAGEN.REQ';

REQUIRE 'REQ:PHDEF.REQ';

REQUIRE 'REQ:RUNHAN.REQ';

REQUIRE 'REQ:SCA.REQ';

REQUIRE 'REQ:SETCAS.REQ';

REQUIRE 'REQ:TOCRTY.REQ';

REQUIRE 'REQ:TSF.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!

EXTERNAL LITERAL
    RINTES : UNSIGNED (8);

!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!

EXTERNAL
    GCA : GCA_DEFINITION,
    HCT : HCT_DEFINITION,
    HLLIST : COUNTED_LIST,
    IRA : FIXED_STRING,
    MRA : REF FIXED_STRING,
    NPAGEN : PAGE_DEFINITION,
    PAGEN : PAGE_DEFINITION,
    PHAN : PHAN_DEFINITION,
    SBTMRA : FIXED_STRING,
    SBTTSF : VECTOR,
    SCA : SCA_DEFINITION,
    TITMRA : FIXED_STRING,
    TITTSF : VECTOR,
    TSF : TSF_DEFINITION;

EXTERNAL ROUTINE
    ENDCHR,
    GCPAGE,
    GCSKIP,
    GUSKIP,
    LOUT,
    OUTNJ,
    PACSEC,
    PUTTXT,
    REMMRG,
    REMNEG,
    RSKIPS,
    SDXY,
    TITLES,
    SETCAS,
    TSTBLK;


GLOBAL ROUTINE CHAPT (HANDLER_CODE) : NOVALUE = 	!

!++
! FUNCTIONAL DESCRIPTION:
!
!	See the ABSTRACT, above.
!
! FORMAL PARAMETERS:
!
!	HANDLER_CODE indicates which command is to be processed.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	NONE
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    LOCAL
	CHAR_COUNT,
	CHAX_LENGTH,				!Length of 'CHAPTER ' or 'APPENDIX '
	HOLD_HEADERS,				!Copy of HCT_HEADERS
	MINOR_CODE,
	PTR,
	SECTION_NUMBER : VECTOR [CH$ALLOCATION (100)];

    !Report pending errors.
    REMNEG ();
    REMMRG ();
    TSTBLK (0);
    !Initialization of new chapter or appendix
    GCPAGE ();					!Start a new page
    NPAGEN [SCT_PAGE] = 1;			!and number it "1"
    NPAGEN [SCT_SUB_PAGE] = 0;			!and turn off subpaging.
    GCA_CHAPT = TRUE;				!Mark document as containing chapters/appendices.
    !Turn off page headers for this page.
    HOLD_HEADERS = .HCT_HEADERS;		!No header at top of chapters and appendices.
    HCT_HEADERS = FALSE;			!...
    HCT_ODD_EVEN = 0;				!Reset odd/even page parity.
    BEGIN					!Clear subtitles

    LOCAL
	HOLD_TSF;

    HOLD_TSF = .TSF;				!Remember current TSF.
    TSF = SBTTSF;				!Switch to the TSF for subtitles.
    TSF_INT_HL = 0;
    TSF_EXT_HL = 0;
    TSF = .HOLD_TSF;				!Return to main TSF.
    FS_INIT (SBTMRA);				!Complete reset of subtitle MRA.
    END;
    !Reset header levels.

    INCR I FROM 1 TO .HLLIST [CL_MAX_INDEX] DO
	HLLIST [.I] = 0;

    HLLIST [CL_INDEX] = 1;
    !Reset some other things
    SDXY ();

    IF 						!
	NOT .GCA_PCHAX
    THEN 					!
    !A previous .NUMBER CHAPTER/APPENDIX command has not already set
    !up the section number and type.
	BEGIN

	IF 					!
	    .HANDLER_CODE EQL H_APPENDIX
	THEN 					!
	!See if this an appendix following a completed appendix.
	    IF 					!
		.NPAGEN [SCT_TYP] NEQ SCT_APPEND
	    THEN 				!
	    !Not already an appendix, so make it one.
		BEGIN
		NPAGEN [SCT_TYP] = SCT_APPEND;
		NPAGEN [SCT_NUMBER] = 0;	!0 is binary form of 'A-1', which gets bumped to 'A' below.
		END;

	IF 					!
	    .NPAGEN [SCT_TYP] NEQ SCT_APPEND
	THEN 					!
	!This section is not an appendix, so turn it into
	!a chapter.  The effect is that .CHAPTER after .APPENDIX
	!acts like .APPENDIX.  Similarily, .NUMBER APPENDIX
	!causes .CHAPTER to act like .APPENDIX.
	    BEGIN

	    IF 					!
		.NPAGEN [SCT_TYP] NEQ SCT_CHAPT
	    THEN 				!
	    !This is the first chapter encountered so must
	    !initialize the section number.
		NPAGEN [SCT_NUMBER] = 0;

	    NPAGEN [SCT_TYP] = SCT_CHAPT;
	    END;

	!Bump section counter.
	NPAGEN [SCT_NUMBER] = .NPAGEN [SCT_NUMBER] + 1

	END;					!End of NOT .GCA_PCHAX

    IF 						!
	.PHAN_TOP_FIRST
    THEN 					!
    !This was specified at the top of the very first page, and so
    !we cannot wait for NEWPAG to advance the page number.
	BEGIN
	PAGEN [SCT_TYP] = .NPAGEN [SCT_TYP];
	PAGEN [SCT_NUMBER] = .NPAGEN [SCT_NUMBER];
	PAGEN [SCT_PAGE] = .NPAGEN [SCT_PAGE];
	NPAGEN [SCT_PAGE] = .NPAGEN [SCT_PAGE] + 1;
	END;

    !Leave 12 lines at top of page.
    GUSKIP (12);

    !Generate the section number so as to get its length
    PTR = CH$PTR (SECTION_NUMBER);
    CHAR_COUNT = PACSEC (NPAGEN, PTR);
    !Generate CHAPTER XXX, center it, and output it.

    IF 						!
	.NPAGEN [SCT_TYP] EQL SCT_CHAPT
    THEN 					!
    !It's a chapter to be generated
	BEGIN
	CHAX_LENGTH = 8;
	PTR = CH$PTR (UPLIT ('CHAPTER '));

	INCR I FROM 1 TO 8 DO
	    ENDCHR (CH$RCHAR_A (PTR));

	!Set up minor record type code for table of contents
	MINOR_CODE = MIN_CHAPT;
	END
    ELSE 					!
    !It's an appendix to be generated
	BEGIN
	CHAX_LENGTH = 9;
	PTR = CH$PTR (UPLIT ('APPENDIX '));

	INCR I FROM 1 TO 9 DO
	    ENDCHR (CH$RCHAR_A (PTR));

	!Set up minor record type code for table of contents
	MINOR_CODE = MIN_APPEND;
	END;

    !Now put the section number on the line
    PTR = CH$PTR (SECTION_NUMBER);

    INCR I FROM 1 TO .CHAR_COUNT DO
	ENDCHR (CH$RCHAR_A (PTR));

    !Compute shift needed to center the line.
    TSF_ADJUST = (.GCA_LWIDTH - (.CHAX_LENGTH + .CHAR_COUNT))/2;
    !Force out the line
    OUTNJ ();
    !Always skip a line after the initial heading.
    GCSKIP (1);
    !Force new line to happen immediately, rather than
    !allowing other events to spring it.
    OUTNJ ();
    !Get title of chapter.  It automatically becomes the new title
    !for subsequent pages.
    RSKIPS (IRA);				!Skip leading spaces/tabs
    SETCAS (FORCE_UPPER);				!Force title to upper case.
    SCA_FCBE_LT = %C'A' - %C'a';		!...
    SCA_OCBE_LT = %C'A' - %C'a';		!...
    SCA_WRD_FC_LT = %C'A' - %C'a';		!...
    SCA_WRD_OC_LT = %C'A' - %C'a';		!...
    SCA_FC_LT = %C'A' - %C'a';			!...
    SCA_OC_LT = %C'A' - %C'a';			!...
    TITLES (H_TITLE);				!Get title returned in title buffer.
    !Output name of chapter, centered.  This is done by temporarily
    !switching to TITMRA and TITTSF.
    BEGIN

    LOCAL
	!Save current status in xxx_hold items.
	MRA_HOLD,
	TSF_HOLD;

    MRA_HOLD = .MRA;
    TSF_HOLD = .TSF;
    !Now switch to title.
    TSF = TITTSF;
    MRA = TITMRA;

    !If generating a table of contents send the chapter/appendix title to the
    !.BTC file
    IF
	.GCA_BTC
    THEN
	!User is generating a table of contents.
	PUTTXT (.TSF_INT_HL, .FS_START(MRA), MAJ_RUNOFF, .MINOR_CODE);

    IF 						!
	.TSF_INT_HL NEQ 0
    THEN 					!
    !The user did give a name to the chapter or appendix.
	BEGIN
	!Compute number of spaces needed to center the title.
	TSF_ADJUST = (.GCA_LWIDTH - .TSF_EXT_HL)/2;
	!Force out the title immediately.  Note that this is the
	!centered title that goes about 12 lines down the page.
	LOUT ();
	!Remove the space padding.  On the tops of all pages the
	!title will appear to the far left.  Leaving TSF_ADJUST
	!set would have caused the title to be centered at the
	!top of each page.
	TSF_ADJUST = 0;
	!NOTE****Previous MRA/TSF status must be restored
	!before the call on GCSKIP, since otherwise the
	!information would go into the wrong buffer.
	MRA = .MRA_HOLD;
	TSF = .TSF_HOLD;
	!Generate three blank lines after the centered title
	GCSKIP (3);
	END
    ELSE 					!
    						!CHAPTER/APPENDIX without title
	BEGIN
	MRA = .MRA_HOLD;
	TSF = .TSF_HOLD;
	END;

    END;
    !Set up case rules for rest of chapter or appendix.

    SETCAS (.GCA_CASE);

    GCA_PCHAX = FALSE;				!Pending .NUMBER CHAPTER/APPENDIX done.
    SCA_SECT_EMPTY = TRUE;			!No text in chapter/appendix yet.
    HCT_HEADERS = .HOLD_HEADERS;		!Restore .HEADERS or .NO HEADERS status.
    END;					!End of CHAPT

END						!End of module

ELUDOM
