MODULE PAGCMO (					!
		IDENT = 'V03-000'
%BLISS32[,
	ADDRESSING_MODE(EXTERNAL=LONG_RELATIVE,NONEXTERNAL=LONG_RELATIVE)
	]
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: RUNOFF document formatter
!
! ABSTRACT: Routines for comparing page numbers.
!
!
! ENVIRONMENT: Transportable
!
! AUTHOR: R.W.Friday	 CREATION DATE: February, 1979
!
!	MODIFIED BY:
!
!	004	KAD000004	K. A. Dawson	August 1981
!		Fixed compiler complaint, null expression in value-
!		required context.
!--

!
! TABLE OF CONTENTS:
!

FORWARD ROUTINE
    DSPEQL,
    PAGEQL,
    PAGFND;

!
! INCLUDE FILES:
!

REQUIRE 'REQ:BOOL.REQ';

REQUIRE 'REQ:PAGEN.REQ';

!
! MACROS:
!
!
! EQUATED SYMBOLS:
!
!
! OWN STORAGE:
!
!
! EXTERNAL REFERENCES:
!


GLOBAL ROUTINE DSPEQL (PAGE_A, PAGE_B) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	DSPEQL compares the display characteristics of PAGE_A and PAGE_B
!	and returns TRUE if they are equal.  Otherwise it returns FALSE.
!
! FORMAL PARAMETERS:
!
!	PAGE_A and PAGE_B are the pages whose display characterstics are to be compared.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	Returns TRUE if the display characteristics are the same, else FALSE.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	PAGE_A : REF PAGE_DEFINITION,
	PAGE_B : REF PAGE_DEFINITION;

	IF
	    .PAGE_A [SCT_PAGE_D] NEQ .PAGE_B [SCT_PAGE_D]
	THEN
	    !Page counters don't match.
	    RETURN FALSE;
	
	!Next try subpage display code.
	IF							!
	    (.PAGE_A [SCT_SUB_PAGE] NEQ 0)
	    AND (.PAGE_B [SCT_SUB_PAGE] NEQ 0)
	    AND (.PAGE_A [SCT_SUBPG_D] NEQ .PAGE_B [SCT_SUBPG_D])
	THEN
	    !Subpages with different display characterstics.
	    RETURN FALSE;
	
	!Now compare major section display types
	IF
	    (.PAGE_A [SCT_TYP] EQL .PAGE_B [SCT_TYP])		!Are there major sections,
								!and are they the same?
	THEN
	    !Both pages are from the same major type of section.
	    !It can also be that there are no major sections, and that will
	    !get taken care of by all these tests being not applicable.
	    IF
		(.PAGE_A [SCT_TYP] EQL SCT_CHAPT)
		AND (.PAGE_A [SCT_CHAPT_D] NEQ .PAGE_B [SCT_CHAPT_D])
	    THEN
		!Both chapters, but different display characteristics
		RETURN FALSE
	    ELSE
	    IF
		(.PAGE_A [SCT_TYP] EQL SCT_APPEND)
		AND (.PAGE_A [SCT_APPEN_D] NEQ .PAGE_B [SCT_APPEN_D])
	    THEN
		!Both appendixes, but different display characteristics
		RETURN FALSE
	    ELSE
	    IF
		(.PAGE_A [SCT_TYP] EQL SCT_INDEX)
		AND (.PAGE_A [SCT_INDEX_D] NEQ .PAGE_B [SCT_INDEX_D])
	    THEN
		!Both indexes, but different display characteristics
		RETURN FALSE
	    ELSE
		!No differences found
		!This can happen if there are are no major sections, or
		!both pages have different types of major sections.
		RETURN TRUE
	ELSE				!Avoid compiler complaint.
	    RETURN FALSE
    END;					!End of DSPEQL


GLOBAL ROUTINE PAGEQL (PAGE_A, PAGE_B, DISPLAY) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	PAGEQL compares the pages represented by PAGE_A and PAGE_B
!	and returns TRUE if they are equal.  Otherwise it returns FALSE.
!
! FORMAL PARAMETERS:
!
!	PAGE_A and PAGE_B are the pages to be compared.
!	If DISPLAY is TRUE, the display characteristics of the pages
!	are taken into account, otherwise not.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	Returns TRUE if the pages are the same, else FALSE.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	PAGE_A : REF PAGE_DEFINITION,
	PAGE_B : REF PAGE_DEFINITION;

    IF
	.DISPLAY
    THEN
	IF
	    NOT DSPEQL (.PAGE_A, .PAGE_B)
	THEN
	    !Display characteristics don't match
	    RETURN FALSE;

    RETURN (.PAGE_A [SCT_TYP] EQL .PAGE_B [SCT_TYP] AND 	!
	.PAGE_A [SCT_SUB_PAGE] EQL .PAGE_B [SCT_SUB_PAGE] AND 	!
	.PAGE_A [SCT_NUMBER] EQL .PAGE_B [SCT_NUMBER] AND 	!
	.PAGE_A [SCT_PAGE] EQL .PAGE_B [SCT_PAGE])


    END;					!End of PAGEQL


GLOBAL ROUTINE PAGFND (PAGEN, PAGE_LIST, COUNT, DISPLAY) =

!++
! FUNCTIONAL DESCRIPTION:
!
!	PAGFND searches through a list of pages to find one which matches.
!
! FORMAL PARAMETERS:
!
!	PAGEN is the page number to be found.
!	PAGE_LIST is the list of page numbers to be searched.
!	COUNT is the number of entries in PAGE_LIST to be searched.
!	If DISPLAY is TRUE, the display characteristics of the pages are
!	taken into account, otherwise not.
!
! IMPLICIT INPUTS:
!
!	NONE
!
! IMPLICIT OUTPUTS:
!
!	NONE
!
! ROUTINE VALUE:
! COMPLETION CODES:
!
!	Returns 0 if no match was found.
!	Returns the number of pages that needed to be compared before
!	a match was found.  This is always at least 1.
!
! SIDE EFFECTS:
!
!	NONE
!
!--

    BEGIN

    MAP
	PAGEN : REF PAGE_DEFINITION,
	PAGE_LIST : REF BLOCKVECTOR [1, PAGE_SCT_SIZE];

    INCR I FROM 0 TO .COUNT - 1 DO

	IF 					!
	    PAGEQL (.PAGEN, PAGE_LIST [.I, SCT_TYP], .DISPLAY)
	THEN
	    RETURN (.I + 1);

    RETURN 0;					!Not found.

    END;					!End of PAGFND

END						!End of module

ELUDOM
