!	SCA.REQ		Definitions for SCA (SCANT control area)
!
!			      IDENT = 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY:
!   Digital Standard Runoff
!
! ABSTRACT:
!
!	Definitions having to do with SCA (SCANT control area)
!
! ENVIRONMENT:
!   Compatible BLISS
!
! MODULE(S) REQUIRING IN THIS FILE:
!
!		Fourty six files REQUIRE this file!
!
!    ALINE.BLI	   CARAGE.BLI	CENTXT.BLI	CHAPT.BLI	CONTRL.BLI
!    DOCASE.BLI	   DOCM.BLI	DOFLG.BLI	DOOPTS.BLI	DOPX.BLI
!    ELSEN.BLI	   ENDCHR.BLI	ENDWRD.BLI	FCIMRA.BLI	FJNFNJ.BLI
!    FLGSEM.BLI	   FNONLY.BLI	FOOFIL.BLI	FOOOUT.BLI	GCODE.BLI
!    GETLIN.BLI	   GETONE.BLI	GLBDAT.BLI	HL.BLI		LIST.BLI
!    LIT.BLI	   MAKNDX.BLI	NOTE.BLI	OFT.BLI		OUTLIN.BLI
!    OUTTXT.BLI	   OUTXHR.BLI	PAGE.BLI	PARAG.BLI	PERIOD.BLI
!    PUS.BLI	   REPEAT.BLI	RINIT.BLI	SCANT.BLI	SCL.BLI
!    STC.BLI	   STD.BLI	STKFRM.BLI	TITLES.BLI	XPRT.BLI
!    XTAB.BLI
!
! "REQUIRE" files that must be envoked BEFORE this file:
!
!	LSTBTS.REQ	NBITS.REQ
!
! AUTHOR:  Rich Friday,   CREATION DATE:  ?
!
! MODIFIED BY:
!
!	004	REM00004	Rich Friday	16-November-1981
!		Changed meaning of SCA_WRD_FOOTW to be a count of footnotes
!		  instead of a flag.  Only a comment change in this file!
!
!	003	REM00003	Ray Marshall	2-November-1981
!		Add header and rev history.  Filled in information based
!		  on the CMS generations and history data.
!
!	002	KAD00002	Keith Dawson	11-NOV-1980
!		For DSR V1.124h.  Enhanced comment for SCA_XROUTINE.
!
!--

MACRO
	SCA_FC_UT	= SCA[00]	!Save case rules here when
			%,
	SCA_OC_UT	= SCA[01]	!exceptions are set up.
			%,
	SCA_FC_LT	= SCA[02]	!...
			%,
	SCA_OC_LT	= SCA[03]	!...
			%,
	SCA_FCBE_UT	= SCA[04]	!Default case rules.
			%,
	SCA_OCBE_UT	= SCA[05]	!...
			%,
	SCA_FCBE_LT	= SCA[06]	!...
			%,
	SCA_OCBE_LT	= SCA[07]	!...
			%,
	SCA_WORD_SET	= SCA[08]	!TRUE if case rules set for a word only.
			%,
	SCA_WRD_FC_UT	= SCA[09]	!Case rules for current word.
			%,
	SCA_WRD_FC_LT	= SCA[10]	!...
			%,
	SCA_WRD_OC_UT	= SCA[11]	!...
			%,
	SCA_WRD_OC_LT	= SCA[12]	!...
!*********************************************************************
!Everything above this point is counted in SCA_CASE_SIZE.
			%,
	SCA_FC_CASE	= SCA[13]	!TRUE if case rules to be used are
					!those for the first character of a word.
			%,
	SCA_JUSTIFY	= SCA[14]	!TRUE if text should be justified.
			%,
	SCA_FC		= SCA[15]	!TRUE if first character on the line.
			%,
	SCA_NBITS	= SCA[16]	!SEE BELOW
			%,
	SCA_FILL	= SCA[17]	!TRUE if filling lines.
			%,
	SCA_X_FLAG	= SCA[18]	!TRUE if in the middle of a sequence
					!marked by the <INDEX flag>
			%,
	SCA_FRC_CASE	= SCA[19]	!TRUE if case of current
					!word was forced.
			%,
	SCA_FLAGS	= SCA[20]	!TRUE if flags are enabled.
			%,
	SCA_CONT	= SCA[21]	!TRUE if user said .NO SPACE
			%,
	SCA_CC_OK	= SCA[22]	!TRUE if control characters allowed in input file
			%,
	SCA_CROCK	= SCA[23]	!See FJNFNJ for explanation.
			%,
	SCA_DO_NBITS	= SCA[24]	!SEE BELOW
			%,
	SCA_PRESCAN	= SCA[25]	!See SCANT for explanation
			%,
	SCA_LM		= SCA[26]	!The left margin.
			%,
	SCA_RM		= SCA[27]	!The right margin.
			%,
	SCA_SPACING	= SCA[28]	!1+number of blank lines between lines of text.
			%,
	SCA_PERIOD	= SCA[29]	!TRUE if double spacing after ".?!;:"
			%,
!!	SCA_HL_UPPER	= SCA[30]	! Max .HL number for which entire
!!					! text is to be in upper case.
!!			%,
!!	SCA_HL_CAP	= SCA[31]	! Max. .HL number for which first character
!!					! of each word should be capitalized
!!					! and others put to lower case.
!!			%,
!!	SCA_HL_RUNON	= SCA[32]	! Smallest .HL number for which
!!					! '-' gets generated and no break
!!					! before next text line.
!!			%,
	SCA_SECT_EMPTY	= SCA[33]	!TRUE if nothing in current section.
			%,
	SCA_XROUTINE	= SCA[34]	!Indicates which routine to call for indexing:
					!FALSE ==> XR, TRUE ==> SUBXR.
			%,
!!	SCA_CO_NBITS	= SCA[35]	!Control carry-over of underlining/bolding/overstriking
!!					!from HEADER LEVEL to SUBTITLE.
!!			%,
	SCA_WRD_NBITS	= SCA[36]	!SEE BELOW
			%,
	SCA_WRD_CNBITS	= SCA[37]	!SEE BELOW
			%,
	SCA_WRD_ACNBITS	= SCA[38]	!SEE BELOW
			%,
	SCA_RSKIPS	= SCA[39]	!TRUE if multiple spaces/tabs are to
					!be skipped.
			%,
	SCA_KER		= SCA[40]	!TRUE if empty records have significance.
			%,
	SCA_BAR_CHAR	= SCA[41]	!Change bar character to be used if enabled.
			%,
!!	SCA_DRAFT	= SCA[42]	!Replaced by GCA_CMD_DRF
!!			%,
	SCA_INDEX	= SCA[43]	!TRUE if indexing commands are to be obeyed.
			%,
	SCA_FRC_CHR	= SCA[44]	!True if current character should not be translated.
			%,
	SCA_INDENT	= SCA[45]	!Pending indentation.
			%,
	SCA_PARA_PND	= SCA[46]	!TRUE if a paragraph is pending.
			%,
!	Everything below this point refers to the word currently being
!	scanned.
!*******************************************************************
	SCA_WRD_PNTR	= SCA[50]	!A CH$PTR to the first character of the word.
			%,
	SCA_WRD_INT_L	= SCA[51]	!Internal representation size so far.
			%,
	SCA_WRD_EXT_L	= SCA[52]	!External size (i.e., print positions)
			%,
	SCA_WRD_ISEQN	= SCA[53]	!Input line counter or record number.
			%,
	SCA_WRD_DRAFT	= SCA[54]	!TRUE if word is inside a /DRAFT area.
			%,
	SCA_WRD_DRAFT_F	= SCA[55]	!The draft flag for this word.
			%,
	SCA_WRD_BARS	= (SCA[56])<BAR__>	!TRUE if change bars associated with this word.
			%,
	SCA_WRD_BAR_CHR	= SCA[57]	!Use this character as the change bar.
			%,
	SCA_WRD_CPEND	= SCA[58]	!Character being worked on.
			%,
	SCA_WRD_SEQN_F	= SCA[59]	!TRUE if SCA_WRD_ISEQN is an SOS style record number.
			%,
	SCA_WRD_IPAGEN	= SCA[60]	!Input page number.
			%,
	SCA_WRD_FOOTW	= SCA[61]	!The number of footnotes attached to
			%,		!this word.
	SCA_WRD_F_XTN	= SCA[62]	!First transaction number associated with this word.
			%,
	SCA_WRD_L_XTN	= SCA[63]	!Last transaction number associated with this word.
			%,
!	SCA_WRD_ACNBITS	= SCA[64]
!			%,
!	SCA_WRD_FC_UT	= SCA[65]
!			%,
!	SCA_WRD_OC_UT	= SCA[66]
!			%,
!	SCA_WRD_FC_LT	= SCA[67]
!			%,
	SCA_WRD_LST_HYP	= SCA[68]	!TRUE if word to end with a '-'.
			%,
	SCA_WRD_HYP_PTR	= SCA[69]	!If SCA_WRD_LST_HYP is TRUE,
					!then a CH$PTR to the '-'.
			%,
	SCA_WRD_LC_PNCT	= SCA[70]	!TRUE if last character was end-of-sentence punctuation.
			%,
	SCA_WRD_LST_SP	= SCA[71]	!Number of spaces after last word.
			%,
	SCA_WRD_LST_JUS	= SCA[72]	!True if justification mark after last word.
			%,
	SCA_WRD_LST_UND	= SCA[73]	!True if last space was underlined.
			%;


LITERAL
	SCA_CASE_SIZE	= 13,		!Number of cells containing case information
	SCA_SIZE	= 75;		!Number of cells in entire SCA


!NOTE**** For all fields having to do with underlining, bolding, etc, see ENDCHR, ENDWRD, OUTLIN, and DOFLG
!	  to see how these fields get manipulated.

!The bits defined by these macros get set to TRUE if SCANT is supposed
!to BoLD and/or UNDerline all characters it encounters.  These bits get
!set/unset by things like ^& and \&, and .ENABLE/.DISABLE BOLDING, etc.
MACRO
	SCA_BLD		= (SCA_NBITS)<BLD__>
			%,
	SCA_UND		= (SCA_NBITS)<UND__>
			%,
	SCA_BLDUND	= (SCA_NBITS)<BLDUND__>		!Bolding and underlining as a set.
			%;

!The bits defined by these macros determine whether or not various flags
!have any effect.  TRUE means that the corresponding function should be
!done when the flag is recognized, FALSE not.
!These bits get set/cleared by commands such as .ENABLE/.DISABLE BOLDING,
!and so on.   See FLGSEM, which sets these flags.
!There is a difference between SCA_XXX and SCA_DO_XXX.  The former
!indicates whether or not the XXX type of emphasis has been turned on
!by a construct such as ^&.  The latter indicates whether or not the
!emphasis called for by XXX should really be done.  In particular,
!consider the following sequence:
!00100 .ENABLE UNDERLINING;^&
!00200 This text will be underlined because both .ENABLE UNDERLINING and _^_&
!00300 were specified.  But 
!00400 .DISABLE UNDERLINING;this text (after the ";") will not be underlined
!00500 because the .DISABLE UNDERLINING command indicates it should not be
!00600 done.  Or, perhaps more interesting is the fact that even
!00700 &t&h&e&s&e &t&w&o &w&o&r&d&s will not be underlined whereas
!00800 .ENABLE UNDERLINING;these two words\& will be underlined, but nothing
!00900 after the _\_& sequence.
MACRO							!See FLGSEM
	SCA_DO_BLD	= (SCA_DO_NBITS)<BLD__>
			%,
	SCA_DO_UND	= (SCA_DO_NBITS)<UND__>
			%,
	SCA_DO_BLDUND	= (SCA_DO_NBITS)<BLDUND__>	!Bolding and underlining as a set.
			%,
	SCA_DO_OVR	= (SCA_DO_NBITS)<OVR__>
			%,
	SCA_DO_IND	= (SCA_DO_NBITS)<IND__>
			%,
	SCA_DO_HYP	= (SCA_DO_NBITS)<HYP__>
			%;

MACRO
! The fields defined here are accumulated for an entire word.
! They get cleared at the start of a new word.

	SCA_WRD_BLD	= (SCA_WRD_NBITS)<BLD__>
			%,
	SCA_WRD_UND	= (SCA_WRD_NBITS)<UND__>
			%,
	SCA_WRD_BLDUND	= (SCA_WRD_NBITS)<BLDUND__>	!Bolding and underlining as a set
			%,
	SCA_WRD_OVR	= (SCA_WRD_NBITS)<OVR__>
			%;

MACRO
! The fields defined here get set just before a new character
! is picked up.  They are inherited from the global environment
! in effect at that time.

	SCA_WRD_C_BLD	= (SCA_WRD_CNBITS)<BLD__>
			%,
	SCA_WRD_C_UND	= (SCA_WRD_CNBITS)<UND__>
			%,
	SCA_WRD_C_BLDUN	= (SCA_WRD_CNBITS)<BLDUND__>	!Bolding and underlining as a set
			%,
	SCA_WRD_C_OVR	= (SCA_WRD_CNBITS)<OVR__>
			%;

MACRO
! The fields defined here get set as various functions are
! requested, on a once-only basis (e.g., single character underline, &x).  These fields, together with
! the previous three fields, determine what functions have been
! requested for a specific character.

	SCA_WRD_AC_BLD	= (SCA_WRD_ACNBITS)<BLD__>
			%,
	SCA_WRD_AC_UND	= (SCA_WRD_ACNBITS)<UND__>
			%,
	SCA_WRD_AC_BLUN	= (SCA_WRD_ACNBITS)<BLDUND__>	!Bolding and underlining as a set
			%,
	SCA_WRD_AC_OVR	= (SCA_WRD_ACNBITS)<OVR__>
			%;

MACRO
	SCA_DEFINITION	=
		VECTOR[SCA_SIZE]%;

!			End of SCA.REQ
