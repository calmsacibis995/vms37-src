define type privileges
	keyword acnt
	keyword allspool
	keyword altpri
	keyword bugchk
	keyword bypass
	keyword cmexec
	keyword cmkrnl
	keyword detach
	keyword diagnose
	keyword exquota
	keyword group
	keyword grpnam
	keyword log_io
	keyword mount
	keyword netmbx
	keyword oper
	keyword pfnmap
	keyword phy_io
	keyword prmceb
	keyword prmgbl
	keyword prmmbx
	keyword pswapm
	keyword same
	keyword setprv
	keyword shmem
	keyword syslck
	keyword sysgbl
	keyword sysnam
	keyword sysprv
	keyword tmpmbx
	keyword volpro
	keyword world

define verb allocate
	routine allocate
	parameter p1,prompt="Device",value(required,list,type=$device)
	parameter p2,prompt="Log name",value(type=$outlog)

define syntax merge_queue
	image queman

define verb assign
	routine assign
	prefix cli$k_assi_
	parameter p1,prompt="Device",value(required,type=$infile)
	parameter p2,prompt="Log name",value(required,type=$outlog)
	qualifier system
	qualifier group
	qualifier process
	qualifier user_mode
	qualifier supervisor_mode
	qualifier queue,	syntax=merge_queue
	qualifier merge,	syntax=merge_queue

define verb close
	routine close
	prefix cli$k_clos_
	parameter p1,prompt="Log name",value(required,type=$inlog)
	qualifier end_of_file,	value(required)		! && whats this?
	qualifier error,	value(required)

define verb (continue,c)
	routine continue

define syntax deallocate_all_devices
	noparameters

define verb deallocate
	routine deallocat
	prefix cli$k_deal_
	parameter p1,prompt="Device",value(required,type=$device)
	qualifier all,syntax=deallocate_all_devices

define syntax deassign_all_names
	noparameters

define syntax deassign_queue
	image queman

define verb deassign
	routine deassign
	prefix cli$k_deas_
	parameter p1,prompt="Log name",value(required,type=$inlog)
	qualifier system
	qualifier group
	qualifier process
	qualifier all,		syntax=deassign_all_names
	qualifier user_mode
	qualifier supervisor_mode
	qualifier queue,	syntax=deassign_queue

define verb debug
	routine debug

define verb deck
	routine deck
	prefix cli$k_deck_
	qualifier dollar,	value

define verb define
	routine define
	prefix cli$k_defi_
	parameter p1,prompt="Log name",value(required,type=$outlog)
	parameter p2,prompt="Equ name",value(required,type=$infile)
	qualifier system
	qualifier group
	qualifier process
	qualifier user_mode
	qualifier supervisor_mode

define verb eoj
	routine eoj

define verb logout
	routine logout
	prefix cli$k_logo_
	qualifier brief
	qualifier full
	qualifier hangup

define verb open
	routine open
	prefix cli$k_open_
	parameter p1,prompt="Log name",value(required,type=$outlog)
	parameter p2,prompt="File",value(required,type=$infile)
	qualifier end_of_file,	value(required)	 ! Make /EOF=1, /ERROR=2 for
	qualifier error,	value(required)  ! all file commands
	qualifier read
	qualifier write
	qualifier share,	value
	qualifier append

define syntax run_process
	image rundet

define verb (run,r,ru)
	routine run
	prefix cli$k_run_
	parameter p1,prompt="File",value(required,type=$infile)
	qualifier delay,	value(required,type=$datetime),
				syntax=run_process
	qualifier error,	value(required,type=$outfile),
				syntax=run_process
	qualifier input,	value(required,type=$outfile),
				syntax=run_process
	qualifier interval,	value(required,type=$datetime),
				syntax=run_process
	qualifier output,	value(required,type=$outfile),
				syntax=run_process
	qualifier priority,	value(required),
				syntax=run_process
	qualifier privileges,	value(required,list,type=privileges),
				syntax=run_process
	qualifier process,	value(required),
				syntax=run_process
	qualifier resource_wait,default,syntax=run_process
	qualifier schedule,	value(required,type=$datetime),
				syntax=run_process
	qualifier service_failure,syntax=run_process
	qualifier swapping,	default,syntax=run_process
	qualifier uic,		value(required,type=$uic),
				syntax=run_process
	qualifier accounting,	default,syntax=run_process
	qualifier buffer_limit,	value(required),syntax=run_process
	qualifier time_limit,	value(required),syntax=run_process
	qualifier file_limit,	value(required),syntax=run_process
	qualifier page_file,	value(required),syntax=run_process
	qualifier queue_limit,	value(required),syntax=run_process
	qualifier subprocess_limit,value(required),syntax=run_process
	qualifier maximum_working_set,value(required),syntax=run_process
	qualifier working_set,	value(required),syntax=run_process
	qualifier debug
	qualifier authorize,	default,syntax=run_process
	qualifier mailbox,	value(required),syntax=run_process
	qualifier ast_limit,	value(required),syntax=run_process
	qualifier io_buffered,	value(required),syntax=run_process
	qualifier io_direct,	value(required),syntax=run_process
	qualifier enqueue_limit,value(required),syntax=run_process
	qualifier extent,	value(required),syntax=run_process

define verb read
	routine read
	prefix cli$k_read_
	parameter p1,prompt="Log name",value(required,type=$inlog)
	parameter p2,prompt="Symbol",value(required,type=$outfile)
			! $outfile on p2 needed to preserve double quotes
	qualifier end_of_file,	value(required)	! Make /EOF=1, /ERROR=2 for
	qualifier error,	value(required)	! all file commands
	qualifier key,		value(required,list)
	qualifier index,	value(required)
	qualifier delete
	qualifier lock,		default
	qualifier prompt,	value(required)

define syntax stop_cpu
	image mp
	noparameters

define syntax stop_queue
	image queman
	parameter p1,prompt="Queue",value(required)

define verb stop
	routine stop
	prefix cli$k_stop_
	parameter p1,prompt="Process",value(type=$process)
	qualifier queue,	syntax=stop_queue
	qualifier abort,	syntax=stop_queue
	qualifier next,		syntax=stop_queue
	qualifier identification,value(required)
	qualifier requeue,	value,syntax=stop_queue
	qualifier entry,	value(required),syntax=stop_queue
	qualifier priority,	value(required),syntax=stop_queue
	qualifier cpu,nonnegatable,syntax=stop_cpu

define verb write
	routine write
	prefix cli$k_writ_
	parameter p1,prompt="Log name",value(required,type=$inlog)
	parameter p2,prompt="Symbol",value(required,list,type=$outfile)
			! $outfile on p2 needed to preserve double quotes
	qualifier end_of_file,	value(required)	! Make /EOF=1, /ERROR=2 for
	qualifier error,	value(required)	! all file commands
	qualifier update
