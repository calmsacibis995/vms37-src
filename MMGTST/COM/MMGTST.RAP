





This object of this rap file is to inform you, the MMG test package

user, as to which system services are exercised by these tests, and to

explain just how completely they are tested.



The tests and comments regarding individual tests are as follows:





TEST #1:  MMGCRDLSP

*******************



This program does routine calls to the system services $CRETVA, $DELTVA,

and $SETPRT. These calls are done using normal va space, permananet global

sections, and PFN mapped sections.  It is also possible to invoke this

program using shared memory, in which case all the above mapped sections

are also mapped and tested in shared memory.  

 

The calls and there purposes are as follows:

 

Currently tested:

DELETE VA AND TEST TO MAKE SURE NONREADABLE.

CREATE VA AND TEST TO MAKE SURE WRITABLE.

REFERENCE PAGE.

DELETE VA AND TEST TO MAKE SURE NONREADABLE.

CREATE VA

SET PROTECTION OF PAGES FROM UW TO UR.

NOWRITE

READ

SET PROTECTION OF PAGES FROM UR TO NA (NA DEFAULTS TO KR)

NOREAD (CORRECT BECAUSE STILL IN USER MODE.)

SET PROTECTION FROM KR TO UW.

WRITE

REFERENCE PAGE.

SET PROTECTION FROM UW TO UR.

NOWRITE

SET PROTECTION OF PAGES FROM UR TO NA (DEFAULTS TO KR).

NOREAD

SET PROTECTION FROM KR TO UW.

WRITE

 

:: MAKE A READ ONLY DEMAND ZERO PAGE AND READ REFERENCE IT. :::

DELTVA

CRETVA

SET PROTECTION FROM UW TO UR.

MOVE ADDRESS OF PAGE TO R0.

NOWRITE 

READ

 

::: PSTX PAGE WRITABLE, COPY ON REFERENCE, NOT YET REFERENCED. :::

MOVE ADDRESS OF PAGE INTO PAGE REGISTER (R2).

MOVE ADDRESS OF PAGE INTO INRANGE.

WRITE

SET PROTECTION FROM UW TO UR.

NOWRITE

READ

SET PROTECTION FROM UR TO NA (DEFAULTS TO KR).

                                                      Page 2





NOREAD

SET PROTECTION FROM KR TO UW.

WRITE

 

::: PSTX READ ONLY PAGE, NOT YET REFERENCED. :::.

LOAD ADDRESS OF PAGE INTO INRANGE AND R2.

NOWRITE

READ

SET PROTECTION FROM UR TO UW.

WRITE

REFERENCE PAGE.

SET PROTECTION FROM UW TO UR.



::: PSTX READ ONLY PAGE - READ REFERENCE IT. :::.

MOVE FIRST ACCESSIBLE PAGE IN MEMORY INTO INRANGE AND R2. (W^200)

NOWRITE

READ

READ REFERENCE THE PAGE.

SET PROTECTION FROM UR TO UW.

WRITE

REFERENCE PAGE.

SET PROTECTION FROM UW TO UR.

 

::: CHECK CREATING THE LAST 2 PAGES OF P1 SPACE.

CRETVA

DELTVA

REVERSE THE RANGE AND TRY AGAIN.

CRETVA

DELTVA

 

::: CHECK RETURN RANGE LOGIC. :::

CRETVA FORWARD (P0 SPACE)

DELTVA (SAME ADDRESS)

ADD 1 PAGE FORWARD

CRETVA

DELTVA

CRETVA (1 PAGE BACKWARD, P0 SPACE)

DELTVA

CRETVA (1 PAGE P1 SPACE)

DELTVA

CRETVA

                                                      Page 3





TESTS #2:   MMGSETPRT

*********************

 

This program forces error paths in the $SETPRT system service.  The program 

utilizes only normal va space as some of the error paths rely on conditions

found only in normal va space.  Also, shared memory is not invokable for the

same reason.

 

All error paths have been forced at least once for this system service.  The

errors are:

 

Forced Errors:

Attempt                                         Error Generated

-------                                         ---------------

 

Try to protect page that is beyond end        LENVIO

  of P0 space.

 

Try to change protection of a non-existent    ACCVIO

  page.

 

Try to set protection on page located in      NOPRIV

  system address space.

 

Try to change protection of page owned by     PAGOWNVIO

  a more privileged access mode.

 

Input range not accessible.                   ACCVIO

 

Return range not accessible.                  ACCVIO

 

Make returned pages user non-writable         ACCVIO

  (return range cannot be stored).

 

Input range address unable to be written      ACCVIO

  back to page.

 

Try to pass a protection code that has a      IVPROTECT

  numeric value greater than 15.

 

Try to pass the reserved protection           IVPROTECT

  code. (numeric value 1)

 

                                                      Page 4





TEST #3:  MMGCRTDEL

*******************

 

This program forces possible error paths in the $CRETVA and $DELTVA system

services.  all possible error paths are forced at least once for these system

services.  They are as follows:

 

Forced Errors:

CRETVA

 

Attempt                                         Error Generated

-------                                         ---------------

                                                 

Input address could not be read.              ACCVIO

 

Return address array could not be written     ACCVIO

  by the caller.

 

Try to exceed paging file quota.              EXQUOTA

 

Expand size of virtual address space          INSFWSL

  beyond working space limit.

 

Try to use a page in the system               NOPRIV 

  address space as part of the range in

  the create va.

 

Try to delete a page that already exists      PAGOWNVIO

  and which is owned by a more privileged

  user.

 

Try to CREATE more virtual address space,     VASFULL

  but there is no more space available in

  the page tables.

 

Forced Errors:

DELTVA

 

Attempt                                         Error Generated

-------                                         ---------------

 

Try and access system address space.          NOPRIV



Try and delete va space owned by a higher     PAGOWNVIO

  privileged user.

 

Input address array could not be read by      ACCVIO

  caller.

 

Return address array could not be written     ACCVIO

  by caller.

 

Try to delete page containing return range.   ACCVIO

  

                                                      Page 5





TEST #4:  ADJWSL

****************

 

This program tests the $ADJWSL system service.  It does both normal calls

to the system service as well as forces all possible error codes.  The program

is run using only normal va space.  This is because the $ADJWSL system service

is not affected by the current va pointer.  Therefore, shared memory is not

envokable with this program for the same reason.

 

The $ADJWSL features tested are listed below. This is followed by a list

of the forced error codes.

 

                             Test of ADJWSL

 

Tests of Features:

 

Return default WS Limit

 

Expand to Maximum WS Size

 

Contract to Minimum WS Size

 

With Minimum WS Limit, Touch every 128 Pages

       (Dead Page Table Logic)



Return to default WS Limit



Ensure that limit can't be increased above WSQUOTA



Force Errors:

ADJWSL



Attempt                                                 Error Generated

-------                                                 ----- ---------



Give invalid WSETLM address                            ACCVIO

                                                      Page 6





TEST #5:  EXPCNT

****************



This program tests the $EXPREG and $CNTREG system services.  this program is 

run uisng only normal va space as  these system services are unaffected by

the current state of the va pointer.  For this reason the shared memory option

of this test package is not invokable either.



All possible error codes have been forced at least once for both of these

system services.  how the services were tested is listed below.  Following this

is a list of the forced errors and how they were forced.



EXPREG/CNTREG

                          Tests of Features:



Now in MMGTST:



Expand 1 page, P0 Space



Contract 1 page, P0 Space



Expand 1 page, P1 Space



Contract 1 page, P1 Space





Force Errors:

EXPCNT



Attempt                                                 Error Generated

-------                                                 ----- ---------



Expand w/invalid RETADR                                ACCVIO

Contract w/invalid RETADR                              ACCVIO



Expand w/invalid PAGCNT                                ILLPAGCNT

Contract w/invalid PAGCNT                              ILLPAGCNT



Expand great number of pages                           VASFULL



Expand great number of pages with                      EXQUOTA

PGFLQUOTA set low (separate account?)



Expand great number of pages with                      INSFWSL

with low WSQUOTA



                                                      Page 7





TEST #6:  LKWULW

****************



This program does routine calls to the system services $LKWULW and $ULWSET.

These calls are done using normal va space, permananet global

sections, and PFN mapped sections.  It is also possible to invoke this

program using shared memory, in which case all the above mapped sections

are also mapped and tested in shared memory.  

 

The calls and there purposes are listed below (followed by the forced error

condition calls).



                        Test of LKWSET/ULWSET



Tests of features:



Lock 3 Pages.



Unlock 3 Pages.



Lock 1 Page.



Lock 3 Pages, First already locked.



Unlock First Page.



Unlock 3 Pages, First already unlocked.



Lock 1 Page.



Lock 3 Pages, Last already locked.



Unlock 1 Page.



Unlock 3 Pages, Last already unlocked.



Lock global read only page.



Lock shared memory page. (Could cause error?)





Force Errors:

LKWSET/ULWSET



Attempt                                         Error Generated

-------                                         ----- ---------

Lock System Pages                              NOPRIV

Unlock System Pages                            NOPRIV



Lock Someone Else's Page                       PAGOWNVIO

Unlock Someone Else's Page                     PAGOWNVIO

 

Lock Nonexistent Page                          ACCVIO

Unlock Nonexistent Page                        ACCVIO

 

                                                      Page 8





Lock 1st Page, P0      (Intent was to lock     ACCVIO

Unlock 1st Page, P0    deleted page)           ACCVIO



Lock 3 pages, INADR Invalid                    ACCVIO

Unlock 3 Pages, INADR Invalid                  ACCVIO



Lock 3 Pages, RETADR Invalid                   ACCVIO

Unlock 3 Pages, RETADR Invalid                 ACCVIO



Try to lock too many pages, P0                 LKWSETFUL



Lock a global writable page(unlockable).       NOPRIV



                                                      Page 9





TEST #7:  MMGNSFWSL

*******************

 

This program tests the $CRETVA and $EXPREG system services for an error

path caused by low working set limit.  This program uses only normal va space

as the error is independant of the va pointer.  For this reason also, shared

memory is not invokable from this program.



Forced Errors:

NSFWSL



ATTEMPT                                 Error Generated

-------                                 ---------------



Process's working set is to small               INSFWSL











TEST #8:  XQUOTA

****************



This program tests the same services as test #7, only for low page file

quota.  These calls are done using normal va space, permananet global

sections, and PFN mapped sections.  It is also possible to invoke this

program using shared memory, in which case all the above mapped sections

are also mapped and tested in shared memory.  

 

The error path forced is as follows:



ATTEMPT                                 Error Generated

-------                                 ---------------



Exceed process's page file quota                EXQUOTA



