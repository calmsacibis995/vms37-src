	.TITLE	TTYDRVDAT - Terminal driver data base module
	.IDENT	'V03-001'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
; FACILITY:
;
;	VAX/VMS TERMINAL DRIVER
;
; ABSTRACT:
;
;	TERMINAL DRIVER DATA BASE
;
; AUTHOR:
;
;	R.HEINEN 14-JUN-1977
;
; Enhancement Revision history:
;
;	V03-001	JLV0201		Jake VanNoy		23-MAR-1982
;		Remove ^X40 from 9600 baud autobaud table. This is
;		generated by both 1200 and 4800 baud.
;		Remove uppercase only altmode from table.
;
;	V02-026	RKS0026		RICK SPITZ		8-FEB-1982
;		DISALLOW UNLOAD OF TTDRIVER
;
;	V02-025	RKS0025		RICK SPITZ		25-JAN-1982
;		CHANGE CONTROL O TO OUTPUT <CR><LF>^O<CR><LF>
;		TO SOLVE SPLIT WRAP DURING BURST OUTPUT
;
;	V02-024	RKS0024		RICK SPITZ		13-DEC-1981
;		ADD CTRL3 FIELDS TO CHARACTER TYPE TABLE (SPECIALS)
;		TO OPTIMIZE FORMAT LOGIC.
;		ALLOW FOR ALTERNATE ESCAPES.
;		ADD CONTROL CHARACTER REGION FOR 8 BIT CHARACTERS.
;	
;	V02-023	JLV0100		Jake VanNoy		27-Oct-1981
;		Changed TTYDEFS to $TTYDEFS.
;
;	V02-022	JLV0088		Jake VanNoy			29-Sep-1981
;		Two more entries at 1200 baud for autobaud tables. Add patch
;		space for autobaud tables.
;
;	V02-021	RKS021		RICK SPITZ			12-AUG-1981
;		MOVE DPT AND OTHER DRIVER TABLES TO END OF MODULE TO KEEP
;		DATA OF OF PROLOGUE PSECT.
;
;	V02-020	JLV0061		Jake VanNoy			10-Aug-1981
;		Add autobaud tables.
;
;	V02-019	RKS019		RICK SPITZ			27-JULY-1981
;		PROVIDE DRIVER PROLOGUE TABLE TO ALLOW SEPERATION
;		OF CLASS AND PORT SECTIONS OF TERMINAL DRIVER.
;
;		ADD TERMINAL CLASS VECTOR TABLE TO ALLOW PORT DRIVERS
;		TO COMMUNICATE WITH THE CLASS DRIVER.
;
;	V02-018	RKS018		RICK SPITZ			26-FEB-1981
;		DELETE V2.0 AUDIT TRAILS
;
;	V02-017	SPF0001		Steve Forgey			19-Dec-1980
;		Remove terminal/host synch RTE prompt.
;
; Bug Revision History
;
;
;	V02-016	RKS016		RICK SPITZ			18-SEP-1980
;		REPAIR TYPE MACRO TO CORRECT LOWERCASE RANGE
;--

	.SBTTL	Declarations

;
; EXTERNAL DEFINITIONS
;
	$IODEF				; DEFINE I/O FUNCTION CODES
	$TTYDEF				; DEFINE TERMINAL DRIVER SYMBOLS
	$TTDEF				; DEFINE TERMINAL CHARACTERISTICS
	$UCBDEF				; DEFINE UCB
	$TTYDEFS			; DEFINE TERMINAL DEFINITIONS
;
; LOCAL DATA STORAGE
;
	.MACRO	TYPE	TYP
	Y=0
	.IF	NB	TYP
	Y=XY'TYP
	XY'TYP=1+XY'TYP
	.IF	IDN	CONTROL,TYP
	Y=Y!<TTY$M_CH_CTRL>
	.ENDC
	.IF	IDN	SPEC,TYP
	Y=Y!<TTY$M_CH_SPEC>
	.ENDC
	.IF	IDN	CTRL2,TYP
	Y=Y!<TTY$M_CH_CTRL2>
	.ENDC
	.IF	IDN	CTRL3,TYP
	Y=<TTY$M_CH_CTRL3>
	.ENDC
	.ENDC
	.IF	GE	CHAR-97
	.IF	LE	CHAR-97-25
	Y=<TTY$M_CH_LOWER>
	.ENDC
	.ENDC
	.BYTE	Y
	CHAR=CHAR+1
	.ENDM
 
	.PSECT	$$$115_DRIVER,LONG	; DEFINE I/O DRIVER NON PAGED 
 
;
; CHARACTERISTICS FOR CHARACTER ECHO AND TERMINATION DETECTION
;
;
CHAR=0
XYSPEC=0
XYCONTROL=0
XYCTRL2=0
XYCTRL3=0
;
TTY$A_TYPE::
	TYPE	CTRL3			; NULL
	TYPE	CTRL3			; CONTROL A
	TYPE	CTRL3			; CONTROL B
	TYPE	CONTROL			; CONTROL C
	TYPE	CTRL3			; CONTROL D
	TYPE	CTRL3			; CONTROL E
	TYPE	CTRL3			; CONTROL F
	TYPE	CTRL3			; BELL CONTROL G
	TYPE	SPEC			; BACKSPACE
	TYPE	SPEC			; TAB
	TYPE	SPEC			; LINE FEED
	TYPE	SPEC			; VERTICLE TAB
	TYPE	SPEC			; FORM FEED
	TYPE	SPEC			; CARRIAGE RETURN
	TYPE	CTRL3			; CONTROL N
	TYPE	CONTROL			; CONTROL O
	TYPE	CTRL3			; CONTROL P
	TYPE	CONTROL			; CONTROL Q
	TYPE	CTRL2			; CONTROL R
	TYPE	CONTROL			; CONTROL S
	TYPE	CTRL3			; CONTROL T
	TYPE	CTRL2			; CONTROL U
	TYPE	CTRL3			; CONTROL V
	TYPE	CTRL3			; CONTROL W
	TYPE	CONTROL			; CONTROL X
	TYPE	CONTROL			; CONTROL Y
	TYPE	SPEC			; CONTROL Z
	TYPE	SPEC			; ESCAPE
	TYPE	CTRL3			;
	TYPE	CTRL3			;
	TYPE	CTRL3			;
	TYPE	CTRL3			;
	TYPE				; SPACE
	TYPE				; !
	TYPE				; "
	TYPE				; #
	TYPE				; $
	TYPE				; %
	TYPE				; &
	TYPE				; '
	TYPE				; (
	TYPE				; )
	TYPE				; *
	TYPE				; +
	TYPE				; ,
	TYPE				; -
	TYPE				; .
	TYPE				; /
	TYPE				; 0
	TYPE				; 1
	TYPE				; 2
	TYPE				; 3
	TYPE				; 4
	TYPE				; 5
	TYPE				; 6
	TYPE				; 7
	TYPE				; 8
	TYPE				; 9
	TYPE				; :
	TYPE				; ; 
	TYPE				; <
 	TYPE				; =
	TYPE				; >
	TYPE				; ?
	TYPE				; @
	TYPE				; A
	TYPE				; B
	TYPE				; C
	TYPE				; D
	TYPE				; E
	TYPE				; F
	TYPE				; G
	TYPE				; H
	TYPE				; I
	TYPE				; J
	TYPE				; K
	TYPE				; L
	TYPE				; M
	TYPE				; N
	TYPE				; O
	TYPE				; P
	TYPE				; Q
	TYPE				; R
	TYPE				; S
	TYPE				; T
	TYPE				; U
	TYPE				; V
	TYPE				; W
	TYPE				; X
	TYPE				; Y
	TYPE				; Z
	TYPE				; [
	TYPE				; \
	TYPE				; ]
	TYPE				; ^
	TYPE				; _
	TYPE				; ELISPE
	TYPE				; LOWER A
	TYPE				; LOWER B
	TYPE				; LOWER C
	TYPE				; LOWER D
	TYPE				; LOWER E
	TYPE				; LOWER F
	TYPE				; LOWER G
	TYPE				; LOWER H
	TYPE				; LOWER I
	TYPE				; LOWER J
	TYPE				; LOWER K
	TYPE				; LOWER L
	TYPE				; LOWER M
	TYPE				; LOWER N
	TYPE				; LOWER O
	TYPE				; LOWER P
	TYPE				; LOWER Q
	TYPE				; LOWER R
	TYPE				; LOWER S
	TYPE				; LOWER T
	TYPE				; LOWER U
	TYPE				; LOWER V
	TYPE				; LOWER W
	TYPE				; LOWER X
	TYPE				; LOWER Y
	TYPE				; LOWER Z
	TYPE				; CURRLY LEFT
	TYPE				; UP LINE
	TYPE				; CURRLY RIGHT
	TYPE				; WIGGLE
	TYPE	CTRL2			; DELETE


;
; 8 BIT CHARACTERS
;

	.REPT	32
	TYPE	CTRL3			; CONTROL REGION (NON SPACING)
	.ENDR

	.REPT	96
	TYPE				; SPACING CHARACTERS
	.ENDR


	.SBTTL	ESCAPE SYNTAX TABLE
;
; ESCAPE SYNTAX TABLE
;
TTY$A_ESCAPE::				; ESCAPE SYNTAX TABLE
;
; ESCAPE SEQUENCE <ESC><;><32:47>....<48:126>
;
	.ASCII	/;;/			; ";"
	.BYTE	10$-TTY$A_ESCAPE	;
;
; ESCAPE SEQUENCE <ESC><?><32:47>....<48:126>
;
	.ASCII	/??/			; "?"
	.BYTE	10$-TTY$A_ESCAPE	;
;
; ESCAPE SEQUENCE <ESC><O><32:47>....<64:126>
;
	.ASCII	/OO/			; "O"
	.BYTE	20$-TTY$A_ESCAPE	;
;
; ESCAPE SEQUENCE <ESC><Y><32:126><32:126>
;
	.ASCII	/YY/			; "Y"
	.BYTE	30$-TTY$A_ESCAPE	;
;
; ANSI CONTROL SEQUENCES <ESC><[><48:63>...<32:47>...<64:126>
;
	.ASCII	/[[/			; "["
	.BYTE	15$-TTY$A_ESCAPE

;
; ESCAPE SEQUENCE <ESC><32:47>....<48:126>
;
10$:	.ASCII	! /!			; SPACE TO "/"
	.BYTE	10$-TTY$A_ESCAPE	; INTERMEDIATE CHARACTER
	.ASCII	/0/<126>		; "0" TO END
	.BYTE	0			; FINAL
15$:	.ASCII	/0?/			; "0" TO "?"
	.BYTE	15$-TTY$A_ESCAPE
20$:	.ASCII	! /!			; SPACE TO "/"
	.BYTE	20$-TTY$A_ESCAPE
	.ASCII	/@/<126>		; "@" TO END
	.BYTE	0			; END OF ESC O.
30$:	.ASCII	! !<126>		; SPACE TO END
	.BYTE	40$-TTY$A_ESCAPE
40$:	.ASCII	! !<126>		;
	.BYTE	0			;
;
; ESCAPE SEQUENCES WITH MEANING FOR OUTPUT
;
; THERE IS A CORRELATION BETWEEN THIS TABLE AND CODE!
;
TTY$A_ESC_OUT::
	.ASCIC	/ABCDHIYFGKZ>=\[/		;


	.sbttl	autobaud tables

TTY$AB_9600::				; Table for samples taken at 9600

	.BYTE	^X7F,TT$C_BAUD_19200
	.BYTE	^X7A,TT$C_BAUD_19200
	.BYTE	^X72,TT$C_BAUD_19200
	.BYTE	^X7E,TT$C_BAUD_19200
	.BYTE	^X0D,TT$C_BAUD_9600
	.BYTE	^X66,TT$C_BAUD_4800
	.BYTE	^X0C,TT$C_BAUD_3600
	.BYTE	^X78,TT$C_BAUD_2400
	.BYTE	^X70,TT$C_BAUD_1800
	.BYTE	^X00,TT$C_BAUD_1200
	.BYTE	-1,-1			; End of list
	.BLKB	16			; Patch space

TTY$AB_600::				; Table for samples taken at 600

	.BYTE	^X7E,TT$C_BAUD_1200
	.BYTE	^X72,TT$C_BAUD_1200
	.BYTE	^X0D,TT$C_BAUD_600
	.BYTE	^X66,TT$C_BAUD_300
	.BYTE	^X78,TT$C_BAUD_150
	.BYTE	^X60,TT$C_BAUD_110
	.BYTE	^X70,TT$C_BAUD_110
	.BYTE	-1,-1			; End of list
	.BLKB	16			; Patch space


	.SBTTL	TERMINATOR BITMASK FOR STANDARD SET
;
;
;
TTY$A_STANDARD::				;
		.LONG	^X0FFFFE0FF		; BS,TAB,LF,VT,FORM NOT TERMS
		.LONG	0,0,^X80000000		; AND DELETE
		.LONG	^X0FFFFE0FF		;
		.LONG	0,0,^X80000000	

	.SBTTL	SPECIAL STRINGS
;
; MULTI ECHO STRINGS
;
; TAB STRINGS
;
TTY$A_TAB::		.ASCIZ	/        /
;
; BACKSPACE STRING
;
TTY$A_DELCRTTAB::	.BYTE	TTY$C_BS,TTY$C_BS,TTY$C_BS,TTY$C_BS,TTY$C_BS,TTY$C_BS,TTY$C_BS,0
TTY$A_BACKSPACE::	.BYTE	TTY$C_BS,TTY$C_BLANK,TTY$C_BS
		.BYTE	0
;
; UTILITY STRINGS
;
; THE ORGANIZATION OF THIS TABLE IS CRITICAL
;
;
TTY$A_CTRLZ::	.ASCIZ	/^Z/<TTY$C_CR>
TTY$A_CTRLU::	.ASCIZ	/^U/<TTY$C_CR>
TTY$A_CTRLR::	.ASCIZ	/^R/<TTY$C_CR>
TTY$A_CTRLY::	.ASCIZ	<13><10>/^Y/<13><10>
TTY$A_HS_CTRLY::.BYTE	^O033,^O0134	; TURN HOLDSCREEN OFF, SEND ^Y,
		.ASCII	<13><10>/^Y/<13><10><10>  ;   AND TURN HOLDSCREEN ON.
		.BYTE	^O033,^O111	; ESC I TO MOVE UP CURSOR.
		.BYTE	^O033,^O0133,0
TTY$A_CTRLC::	.ASCIZ	<13><10>/^C/<13><10>
TTY$A_HS_CTRLC::.BYTE	^O033,^O0134	; TURN HOLDSCREEN OFF, SEND ^C, AND
		.ASCII	<13><10>/^C/<13><10><10>	;  TURN HOLDSCREEN ON.
		.BYTE	^O033,^X49	; ESC I TO MOVE UP CURSOR.
TTY$A_HLDSCREEN::.BYTE	^O033,^O0133,0
TTY$A_RLSCREEN::.BYTE	^O033,^O0134,0
TTY$A_CTRLO::	.ASCII	<13><10>	
		.ASCIZ	/^O/<13><10>
;
; VTAB AND FORM
;
TTY$A_VTAB::		.BYTE	TTY$C_LF,TTY$C_LF,TTY$C_LF,TTY$C_LF
TTY$A_MECHFORM::	.BYTE	0
TTY$A_FORM::		.BYTE	TTY$C_LF,TTY$C_LF,TTY$C_LF,TTY$C_LF
			.BYTE	TTY$C_CR,0
TTY$A_LONGFORM::	.BYTE	TTY$C_LF,TTY$C_LF,TTY$C_LF,TTY$C_LF,TTY$C_FF
;
; MAXIMUM POSSIBLE ABSOLUTE SYSTEM TIME.  USED TO KEEP EXE$TIMEOUT
; FROM TIMING OUT READS WITH ZERO SECOND TIMEOUT.
;
TTY$A_MAXTIME::	.LONG	^X7FFFFFFF
;


	.SBTTL	TERMINAL CLASS DRIVER PROLOGUE TABLE
	.PSECT	$$$105_PROLOGUE

;
; CLASS DRIVER DPT
;

TT$DPT::				; DRIVER START
	DPTAB	-			; DRIVER PROLOGUE TABLE
		END=TT_END,-		; END OF CLASS DRIVER
		FLAGS=DPT$M_NOUNLOAD,-	; UNLOAD NOT ALLOWED
		UCBSIZE=UCB$C_TT_LENGTH,- ; SIZE OF UCB
		ADAPTER=NULL,-		; ADAPTER TYPE
		NAME=TTDRIVER,-		; NAME OF DRIVER
		VECTOR=CLASS_VECTOR	; CLASS VECTOR TABLE
	DPT_STORE INIT
	DPT_STORE REINIT
	DPT_STORE END



	.SBTTL	DRIVER DISPATCH TABLE AND FUNCTION DECISION TABLE
;
; DRIVER DISPATCH TABLE
;
	DDTAB	TT,-			; DRIVER DISPATCH TABLE
		TTY$STARTIO,-		; START IO OPERATION
		0,-			; UNEXPECTED INTERRUPT
		FUNCTION,-		; FUNCTION DECISION TABLE
		TTY$CANCELIO,-		; CANCEL I/O
		0,-			; REGISTER DUMP ROUTINE
		0,-			; SIZE OF DIAGNOSTIC BUFFER
		0,-			; SIZE OF ERROR LOG BUFFER
		0,-			; Unit initialization routine
		TTY$WRTSTARTIO		; Alternate START I/O

;
; FUNCTION DECISION TABLE FOR ALL TERMINALS
;
FUNCTION:
	FUNCTAB	,-			; LEGAL FUNCTIONS
		<READLBLK,-
		WRITELBLK,-
		READVBLK,-
		WRITEVBLK,-
		READPBLK,-
		WRITEPBLK,-
		READPROMPT,-
		TTYREADALL,-
		TTYREADPALL,-
		SETMODE,-
		SETCHAR,-
		SENSEMODE,-
		SENSECHAR,-
		>
	FUNCTAB	,-			; BUFFERED I/O FUNCTIONS
		<READLBLK,-
		WRITELBLK,-
		READVBLK,-
		WRITEVBLK-
		READPBLK,-
		READPROMPT,-
		TTYREADALL,-
		TTYREADPALL,-
		WRITEPBLK,-
		>
	FUNCTAB	TTY$FDTREAD,<READLBLK,READVBLK,READPBLK,READPROMPT,-
				TTYREADALL,TTYREADPALL>
	FUNCTAB	TTY$FDTWRITE,<WRITELBLK,WRITEVBLK,WRITEPBLK>
	FUNCTAB TTY$FDTSETM,<SETMODE>
	FUNCTAB	TTY$FDTSETC,<SETCHAR>
	FUNCTAB TTY$FDTSENSEM,<SENSEMODE>
	FUNCTAB	TTY$FDTSENSEC,<SENSECHAR>

	.PAGE

;	THIS TABLE IS USED FOR COMMUNICATION WITH THE TERMINAL CLASS DRIVER.
;	IT INITIALLY CONTAINS RELATIVE OFFSETS TO VARIOUS ROUTINES AND
;	DATA STRUCTURES NEEDED BY TERMINAL PORT DRIVERS. AT DRIVER LOAD
;	THE RELATIVE OFFSETS ARE RELOCATED TO ACTUAL VIRTUAL ADDRESSES.
;	THE LIST IS TERMINATED BY A 0 LONGWORD TO SIGNAL THE RELOCATION
;	ROUTINE WHERE THE LIST TERMINATES.

CLASS_VECTOR:
	.LONG	TTY$GETNEXTCHAR - 	TT$DPT	; GET NEXT STRING
	.LONG	TTY$PUTNEXTCHAR -	TT$DPT	; PUT NEXT STRING
	.LONG	TTY$SETUP_UCB -		TT$DPT	; ROUTINE TO INIT UCB
	.LONG	TRANSITION -		TT$DPT	; ROUTINE TO HANDLE MODEM TRANSITIONS
	.LONG	TT$DDT -		TT$DPT	; CLASS DRIVER DDT
	.LONG	TTY$READERROR
	.LONG	0				; END OF LIST

	.END

