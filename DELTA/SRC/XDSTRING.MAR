	.TITLE	XDSTRING	XDELTA Stored Command Strings
	.IDENT	'V03-000'

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;  Modified by:
;
;	V02-003	LJK0030		Lawrence J. Kenah	10-Jun-1981
;		Add second set of stored text strings to accomodate the
;		longword PFN arrays that result when more than 32 Mbytes
;		of physical memory is present on the system.
;
	.PAGE
	.SUBTITLE	DECLARATIONS

;
;  Equated Symbols:
;
	CR=^O15
	LF=^O12

;
;  Own Storage:
;
	.PSECT	Z$DEBUGXDSTR,BYTE

	.PAGE
	.SUBTITLE	Stored commands for word PFN arrays
;
;  This first set of stored commands assumes that the PFN data base link
;  arrays contain word elements. Ths initial contents of both XE and XF
;  cause this initialization sequence to take place.
;
XDS$GT_WORD_PFN::
	.ASCII	<CR>^[L^<CR>
	.ASCII	^X6/Q,6;X^<CR>		;SET X REGISTERS 6 THROUGH D
	.ASCII	^X7/Q,7;X^<CR>
	.ASCII	^X8/Q,8;X^<CR>
	.ASCII	^X9/Q,9;X^<CR>
	.ASCII	^XA/Q,A;X^<CR>
	.ASCII	^XE+70[W"[L^<CR>	;CR, LF
	.ASCII	^XB/Q,B;X^<CR>
	.ASCII	^XC/Q,C;X^<CR>
	.ASCII	^XD/Q,D;X^<CR>
;
;  See ASSUME macros at bottom of page for meaning of hard coded constants
;
	.ASCII	^XE=Q+8F,E;X^<CR>	;XE PRINTS PFN DATA BASE FOR PFN IN X0
	.ASCII	^XF=Q+7A,F;X^<CR>	;XF PRINTS PFN DATA BASE FOR PFN IN R0
	.BYTE	0			;TERMINATOR FOR INITIAL LOAD OF XE AND XF

XDS$CRLFMSG:
	.BYTE	CR,LF
XDS$PFNMSG:
	.ASCII	^ PFNDATA^

XDS$PFNR0:
	.BYTE	CR
	.ASCII	^XF-A[W"[L^<CR>		;CRLF
	.ASCII	^R0[W/Q,0^ <^X3B> ^X^	;DISPLAY PFN, SET X0
XDS$PFNX0:
	.BYTE	CR
	.ASCII	^XF-A[W".+2[L".+4"^ ;CRLF "PFN DATA"
	.BYTE	CR
	.ASCII	^[WX0=^			;DISPLAY PFN
	.ASCII	^X0+XC[B/^		;DISPLAY STATE
	.ASCII	^X0+XD[B/^		;DISPLAY TYPE
	.ASCII	^X0*2+X9[W/^		;DISPLAY REFCOUNT
	.ASCII	^X0*2+XB/^		;DISPLAY BLINK/WSLX
	.ASCII	^X0*2+XA/^		;DISPLAY FLINK/SHRCNT
	.ASCII	^X0*4+X7[L/^		;DISPLAY PTE POINTER
	.ASCII	^X0*4+X8/^		;DISPLAY BACKUP ADDRESS
	.ASCII	^X0*2+X6[W/^		;DISPLAY SWAP VBN
	.ASCII	^XF-A[W"[L^<CR>	;FINAL CRLF, SET LONGWORD DISPLAY
	.BYTE	0

;
;  The difference between the initial and working contents of both XE and
;  XF must be hard coded into ASCII strings. The ASSUME macros here make
;  sure that these strings are prpoerly initialized in the event that text
;  is added to cause these differences to change. A third assumption, the
;  location of the CRLF string, is also checked with the ASSUME macro.
;
	ASSUME <XDS$PFNX0 - XDS$GT_WORD_PFN> EQ <^X8F> ; Stored string for XE
	ASSUME <XDS$PFNR0 - XDS$GT_WORD_PFN> EQ <^X7A> ; Stored string for XF

	ASSUME <XDS$CRLFMSG - XDS$GT_WORD_PFN> EQ <^X70>
	ASSUME <XDS$PFNR0 - XDS$CRLFMSG> EQ <^X0A>
	.PAGE
	.SUBTITLE	Stored commands for longword PFN arrays
;
;  This second set of stored commands is identical to the first except for
;  those displays that reflect longword (instead of word) PFN sizes. All
;  characters that are different are reflected in the comments. INIT detects
;  the longword PFN arrays and alters the initial contents of XE and XF to
;  this alternate set of stored commands. 
;
XDS$GT_LONG_PFN::
	.ASCII	<CR>^[L^<CR>
	.ASCII	^X6/Q,6;X^<CR>		;SET X REGISTERS 6 THROUGH D
	.ASCII	^X7/Q,7;X^<CR>
	.ASCII	^X8/Q,8;X^<CR>
	.ASCII	^X9/Q,9;X^<CR>
	.ASCII	^XA/Q,A;X^<CR>
	.ASCII	^XE+70[W"[L^<CR>	;CR, LF
	.ASCII	^XB/Q,B;X^<CR>
	.ASCII	^XC/Q,C;X^<CR>
	.ASCII	^XD/Q,D;X^<CR>
	.ASCII	^XE=Q+8F,E;X^<CR>	;XE PRINTS PFN DATA BASE FOR PFN IN X0
	.ASCII	^XF=Q+7A,F;X^<CR>	;XF PRINTS PFN DATA BASE FOR PFN IN R0
	.BYTE	0			;TERMINATOR FOR INITIAL LOAD OF XE AND XF

XDS$CRLFMSG_LONG:
	.BYTE	CR,LF
XDS$PFNMSG_LONG:
	.ASCII	^ PFNDATA^

XDS$PFNR0_LONG:
	.BYTE	CR
	.ASCII	^XF-A[W"[L^<CR>		;CRLF
	.ASCII	^R0[L/Q,0^ <^X3B> ^X^	;DISPLAY PFN, SET X0 (* [L *)
XDS$PFNX0_LONG:
	.BYTE	CR
	.ASCII	^XF-A[W".+2[L".+4"^ ;CRLF "PFN DATA"
	.BYTE	CR
	.ASCII	^[LX0=^			;DISPLAY PFN (* [L *)
	.ASCII	^X0+XC[B/^		;DISPLAY STATE
	.ASCII	^X0+XD[B/^		;DISPLAY TYPE
	.ASCII	^X0*2+X9[W/^		;DISPLAY REFCOUNT
	.ASCII	^X0*4+XB[L/^		;DISPLAY BLINK/WSLX (* times 4 , [L added *)
	.ASCII	^X0*4+XA/^		;DISPLAY FLINK/SHRCNT (* times 4 *)
	.ASCII	^X0*4+X7/^		;DISPLAY PTE POINTER (* [L eliminated *)
	.ASCII	^X0*4+X8/^		;DISPLAY BACKUP ADDRESS
	.ASCII	^X0*2+X6[W/^		;DISPLAY SWAP VBN
	.ASCII	^XF-A[W"[L^<CR>	;FINAL CRLF, SET LONGWORD DISPLAY
	.BYTE	0

;
;  The difference between the initial and working contents of both XE and
;  XF must be hard coded into ASCII strings. The ASSUME macros here make
;  sure that these strings are prpoerly initialized in the event that text
;  is added to cause these differences to change. A third assumption, the
;  location of the CRLF string, is also checked with the assume macro.
;
	ASSUME <XDS$PFNX0_LONG - XDS$GT_LONG_PFN> EQ <^X8F> ; Stored string for XE
	ASSUME <XDS$PFNR0_LONG - XDS$GT_LONG_PFN> EQ <^X7A> ; Stored string for XF

	ASSUME <XDS$CRLFMSG_LONG - XDS$GT_LONG_PFN> EQ <^X70>
	ASSUME <XDS$PFNR0_LONG - XDS$CRLFMSG_LONG> EQ <^X0A>

	.END
