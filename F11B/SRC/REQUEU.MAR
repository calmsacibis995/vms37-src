	.TITLE	REQUEU - REQUEUE REQUEST TO DRIVER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  F11ACP STRUCTURE LEVEL 1
;
; ABSTRACT:
;
;	THIS ROUTINE REQUEUES THE INDICATED I/O PACKET TO THE DEVICE
;	DRIVER FOR WHICH IT WAS ORIGINALLY INTENDED.
;
; ENVIRONMENT:
;
;	STARLET OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	AND INTERNAL EXEC ROUTINES. THIS ROUTINE MUST BE CALLED IN
;	KERNEL MODE.
;
;--
;
; AUTHOR:  ANDREW C. GOLDSTEIN  14-MAR-78  10:43
;
; MODIFIED BY:
;
;	V02-001	ACG0176		Andrew C. Goldstein,	18-Jun-1980  17:17
;		Update UCB address in mapped virtual I/O packet
;
;	V02-000	ACG0167		Andrew C. Goldstein,	16-Apr-1980  19:28
;		Previous revision history moved to F11B.REV
;**

;
; EQUATED SYMBOLS:
;
PACKET	=  4				; ADDRESS OF I/O PACKET ARG
LBN	=  8				; STARTING LBN OF TRANSFER
UNMAPPED= 12				; COUNT OF UNMAPPED BLOCKS

	$IRPDEF				; DEFINE I/O PACKET OFFSETS
	$IODEF				; DEFINE I/O FUNCTION CODES

;++
;
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE REQUEUES THE INDICATED I/O PACKET TO THE DEVICE
;	DRIVER FOR WHICH IT WAS ORIGINALLY INTENDED. IT TRANSLATES THE
;	LBN INTO THE CORRESPONDING PHYSICAL BLOCK NUMBER AND CONVERTS THE
;	I/O FUNCTION CODE INTO THE APPROPRIATE PHYSICAL FUNCTION.
;	THE NUMBER OF UNMAPPED BLOCKS IS DEDUCTED FROM THE BYTE COUNT.
;
; CALLING SEQUENCE:
;	CALL REQUEUE_REQ (ARG1, ARG2, ARG3)
;
; INPUT PARAMETERS:
;	ARG1: ADDRESS OF I/O PACKET
;	ARG2: STARTING LBN OF TRANSFER
;	ARG3: NUMBER OF BLOCKS UNMAPPED
;
; IMPLICIT INPUTS:
;	CURRENT_UCB: ADDRESS OF REQUEST UCB
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; ROUTINE VALUE:
;	NONE
;
; SIDE EFFECTS:
;	REQUEST QUEUED TO UCB
;
;--

	.PSECT	$CODE$,NOWRT,LONG

REQUEUE_REQ::
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS
	MOVL	PACKET(AP),R3		; GET PACKET ADDRESS
	MOVL	W^CURRENT_UCB,R5	; GET UCB ADDRESS
	MOVL	R5,IRP$L_UCB(R3)	; STORE POSSIBLY CHANGED UCB ADDRESS
	ASHL	#9,UNMAPPED(AP),R0	; GET BYTE COUNT OF UNMAPPED BLOCKS
	BEQL	10$			; BRANCH IF ALL MAPPED - NO FIXUP
	SUBW	R0,IRP$W_BCNT(R3)	; AND SUBTRACT FROM TRANSFER COUNT
	ADDW	#511,IRP$W_BCNT(R3)	; ROUND BYTE COUNT TO NEXT BLOCK BOUNDARY
	BICW	#511,IRP$W_BCNT(R3)	; IN CASE FULL BYTE COUNT CONTAINS A PARTIAL BLOCK
10$:	MOVL	LBN(AP),R0		; GET STARTING LBN
	JSB	@#IOC$CVTLOGPHY		; CONVERT TO PHYSICAL BLOCK
	JSB	@#EXE$INSIOQ		; AND QUEUE TO DRIVER
	RET



	.END
