MODULE CHKSUM (
		LANGUAGE (BLISS32),
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 1
!
! ABSTRACT:
!
!	This routine computes and checks a file header checksum.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  22-Nov-1977  22:25
!
! MODIFIED BY:
!
!	A0100	ACG00001	Andrew C. Goldstein,  10-Oct-1978  20:02
!	Previous revision history moved to F11A.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE CHECKSUM (HEADER) =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine computes, checks, and stores the checksum of a file header.
!
! CALLING SEQUENCE:
!	CHECKSUM (ARG1)
!
! INPUT PARAMETERS:
!	ARG1: address of file header buffer
!
! IMPLICIT INPUTS:
!	NONE
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	1 if checksum was correct
!	0 if checksum was wrong
!
! SIDE EFFECTS:
!	Correct checksum stored in header
!
!--

BEGIN

MAP
	HEADER		: REF VECTOR [,WORD];

LOCAL
	P		: REF VECTOR [,WORD], ! pointer to scan header
	SUM		: WORD,		! checksum value
	MATCH;				! success flag


! We simply sum the first 255 words of the file header. Then we compare the
! checksum in the header with the one computed, and store the new one.
!

SUM = 0;
P = .HEADER;
DECR I FROM 255 TO 1
DO
    BEGIN
    SUM = .SUM + .P[0];
    P = .P + 2;
    END;

MATCH = .SUM EQL .P[0];
P[0] = .SUM;

RETURN .MATCH;

END;					! end of routine CHECKSUM

END
ELUDOM
