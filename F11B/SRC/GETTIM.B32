MODULE GETTIM (
		LANGUAGE (BLISS32),
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 1
!
! ABSTRACT:
!
!	This routine builds a date/time string in the format for file headers
!	in the indicated buffer.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  2-May-1977  16:07
!
! MODIFIED BY:
!
!	A0100	ACG00001	Andrew C. Goldstein,  10-Oct-1978  20:03
!	Previous revision history moved to F11A.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE GET_TIME (BUFFER, TIME) : NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine builds a date/time string in the format for file headers
!	in the indicated buffer. If a time is supplied, it is used; if not,
!	the current time is used.
!
! CALLING SEQUENCE:
!	GET_TIME (ARG1, ARG2)
!
! INPUT PARAMETERS:
!	NONE
!
! IMPLICIT INPUTS:
!	system time of day
!
! OUTPUT PARAMETERS:
!	ARG1: address of buffer to receive date/time string
!	ARG2: optional 64 bit date/time to convert
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN

LITERAL					! entries in the numeric date/time buffer
	YEAR		= 0,
	MONTH		= 1,
	DAY		= 2,
	HOUR		= 3,
	MINUTE		= 4,
	SECOND		= 5;

MAP
	BUFFER		: REF VECTOR [,BYTE]; ! date/time buffer arg

LOCAL
	TIMEADDR,			! address of 64 bit date/time
	DUMMY,				! dummy to receive string length
	TIMBUF		: VECTOR [7, WORD], ! buffer to receive numeric format time
	BUF_DESCRIPT	: VECTOR [2];	! descriptor to pass buffer to FAO

BIND
					! month name table
	MONTH_TABLE	= UPLIT BYTE
			('JAN FEB MAR APR MAY JUN JUL AUG SEP OCT NOV DEC ')
			: VECTOR,
					! FAO format string
	FORMAT		= DESCRIPTOR ('!2ZW!AD!4(2ZW)');

EXTERNAL ROUTINE
	SYS$NUMTIM	: ADDRESSING_MODE (ABSOLUTE),
					! system time in numeric format
	SYS$FAO		: ADDRESSING_MODE (ABSOLUTE);
					! formatted ASCII output


! Execution of this routine simply involves getting the current date and time
! in numeric format from the system, and then calling FAO to build the ASCII
! date/time string in the buffer. The string is of the form "DDMMMYYHHMMSS".
!

BUF_DESCRIPT[0] = FI1$S_CREDATE + FI1$S_CRETIME;
BUF_DESCRIPT[1] = .BUFFER;

TIMEADDR = 0;
IF ACTUALCOUNT GEQ 2 THEN TIMEADDR = .TIME;
SYS$NUMTIM (TIMBUF, .TIMEADDR);

SYS$FAO	(FORMAT, DUMMY, BUF_DESCRIPT,
	.TIMBUF[DAY],
	3, MONTH_TABLE[.TIMBUF[MONTH]-1],
	.TIMBUF[YEAR] MOD 100,
	.TIMBUF[HOUR],
	.TIMBUF[MINUTE],
	.TIMBUF[SECOND]
	);

END;					! end of routine GET_TIME

END
ELUDOM
