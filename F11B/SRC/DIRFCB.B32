MODULE DIRFCB (
		LANGUAGE (BLISS32),
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 2
!
! ABSTRACT:
!
!	This routine makes the necessary adjustments to the FCP data
!	base to make an FCB useful for directory operations.
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines. This routine must be called
!	in kernel mode.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  2-Jan-1977  23:37
!
! MODIFIED BY:
!
!	B0101	ACG0054		Andrew C. Goldstein,  24-Jul-1979  22:25
!	Keep directory FCB valid when accessed as a file
!
!	B0100	ACG00001	Andrew C. Goldstein,  10-Oct-1978  20:00
!	Previous revision history moved to [F11B.SRC]F11B.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE MAKE_DIR_FCB (FCB) : NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine makes the necessary adjustments to the FCP data
!	base to make an FCB useful for directory operations.
!
! CALLING SEQUENCE:
!	MAKE_DIR_FCB (ARG1)
!
! INPUT PARAMETERS:
!	ARG1: address of FCB
!
! IMPLICIT INPUTS:
!	CURRENT_VCB: address of VCB of volume in process
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	FCB may be linked into FCB list
!	oldest FCB LRU entry may be gone
!
!--

BEGIN

MAP
	FCB		: REF BBLOCK;	! FCB argument

LOCAL
	DUMMY,				! dummy destination for REMQUE
	P		: REF BBLOCK;	! random pointer

EXTERNAL
	CURRENT_VCB	: REF BBLOCK;	! volume VCB

EXTERNAL ROUTINE
	DEALLOCATE;			! deallocate block


! If the FCB is not accessed, hook it into the directory LRU list,
! if it is not already there.
!

IF .FCB[FCB$W_ACNT] EQL 0
AND .CURRENT_VCB[VCB$B_LRU_LIM] GEQ 0
THEN
    BEGIN
    IF NOT .FCB[FCB$V_DIR]
    THEN
	BEGIN
	CURRENT_VCB[VCB$B_LRU_LIM] = .CURRENT_VCB[VCB$B_LRU_LIM] - 1;

! If we just overflowed the LRU, search the FCB list for the first
! (and therefore oldest) directory FCB and dump it.
!

	IF .CURRENT_VCB[VCB$B_LRU_LIM] LSS 0
	THEN
	    BEGIN
	    P = .CURRENT_VCB[VCB$L_FCBFL];
	    IF NOT
		(
		WHILE .P NEQ .CURRENT_VCB DO
		    BEGIN
		    IF .P[FCB$V_DIR] THEN EXITLOOP 0;
		    P = .P[FCB$L_FCBFL];
		    END
		)
	    THEN			! FCB found
		BEGIN
		IF .P[FCB$W_ACNT] EQL 0	! if FCB is not accessed
		THEN
		    BEGIN
		    REMQUE (.P, DUMMY);	! remove FCB from list
		    DEALLOCATE (.P);	! deallocate the block
		    END
		ELSE
		    P[FCB$V_DIR] = 0;	! else just invalidate
		CURRENT_VCB[VCB$B_LRU_LIM] = .CURRENT_VCB[VCB$B_LRU_LIM] + 1;
		END
	    ELSE			! FCB not found - LRU not in use
		CURRENT_VCB[VCB$B_LRU_LIM] = -1;
	    END;

! If the LRU is not disabled (now indicated by a negative count value),
! insert the FCB into the list and mark it as a directory FCB.
!

	IF .CURRENT_VCB[VCB$B_LRU_LIM] GEQ 0
	THEN
	    BEGIN
	    FCB[FCB$V_DIR] = 1;
	    INSQUE (.FCB, .CURRENT_VCB[VCB$L_FCBBL]);
	    END;

! If the FCB was already in the LRU, move it to the end of the FCB list
! to indicate its new use.
!

	END
    ELSE
	BEGIN
	REMQUE (.FCB, DUMMY);
	INSQUE (.FCB, .CURRENT_VCB[VCB$L_FCBBL]);
	END;
    END;

END;					! end of routine MAKE_DIR_ACCESS

END
ELUDOM
