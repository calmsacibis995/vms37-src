	.TITLE	LOCKDN - LOCK FCP INTO REAL MEMORY
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  F11ACP STRUCTURE LEVEL 1
;
; ABSTRACT:
;
;	THIS ROUTINE TOUCHES ALL OF THE PAGES IN FCP TO BRING THEM
;	INTO REAL MEMORY.
;
; ENVIRONMENT:
;
;	STARLET OPERATING SYSTEM, INCLUDING PRIVILEGED SYSTEM SERVICES
;	AND INTERNAL EXEC ROUTINE.
;
; AUTHOR:  ANDREW C. GOLDSTEIN, CREATION DATE:  22-DEC-1976  14:46
;
; MODIFIED BY:
;
;	B0100	ACG00001	Andrew C. Goldstein,  10-Oct-1978  20:01
;	Previous revision history moved to [F11B.SRC]F11B.REV
;**

;
; DEFINE LABELS FOR THE START AND END OF THE LOCKED DOWN AREAS
;
	.PSECT	$LOCKEDC0$,NOWRT,PAGE
LCODE_START:

	.PSECT	$LOCKEDC9$,NOWRT,LONG
LCODE_END:

	.PSECT	$LOCKEDD0$,NOEXE,LONG
LDATA_START:

	.PSECT	$LOCKEDD9$,NOEXE,LONG
LDATA_END:

	.PSECT	$LOCKEDD1$,NOEXE,LONG
;
; OWN STORAGE:
;
WORKING_SET:	.BLKL	1		; SPACE TO RECEIVE WORKING SET SIZE
SET_SIZE::	.LONG	70		; SIZE TO ADJUST WORKING SET TO
LAST_PAGE:	.BLKL	2		; SPACE TO RECEIVE LAST PAGE POINTERS

;
; DESCRIPTORS TO LOCK DOWN THE CODE AND DATA AREAS THAT ARE TO BE LOCKED INTO
; THE WORKING SET
;
	.PSECT	$CODE$,NOWRT,LONG

LOCKED_CODE:	.LONG	LCODE_START,LCODE_END-1
LOCKED_DATA:	.LONG	LDATA_START,LDATA_END-1

;++
;
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE TOUCHES ALL OF THE PAGES IN FCP TO BRING THEM
;	INTO REAL MEMORY.
;
; CALLING SEQUENCE:
;	CALL LOCKDOWN ()
;	NONE
;
; INPUT PARAMETERS:
;	NONE
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;
; IMPLICIT OUTPUTS:
;	NONE
;
; ROUTINE VALUE:
;	NONE
;
; SIDE EFFECTS:
;	ALL OF FCP RESIDING IN REAL MEMORY
;
;--

LOCKDOWN::
	.WORD	^M<>
;
; ADJUST THE WORKING SET SIZE TO A SUITABLE VALUE
;
	$ADJWSL_S  #0,W^WORKING_SET	; READ CURRENT SIZE
	SUBL3	   W^WORKING_SET,W^SET_SIZE,R0 ; COMPUTE INCREMENT
	$ADJWSL_S  R0,W^WORKING_SET	; AND SET TO DESIRED SIZE
;
; LOCK INTO THE WORKING SET THE CODE AND DATA AREAS THAT SHOULD BE.
;
	$LKWSET_S  LOCKED_CODE
	$LKWSET_S  LOCKED_DATA
;
; EXPAND THE PROGRAM REGION BY ONE PAGE TO GET THE ADDRESS OF THE TOP.
; THIS PAGE WILL NEVER BE TOUCHED AND WILL THEREFORE REMAIN DEMAND ZERO.
;
	$EXPREG_S  #1,LAST_PAGE,REGION=#0
;
; NOW TOUCH ALL PAGES UP TO THE ONE CREATED.
;
	MOVAB	@#^X200,R0	; START WITH PAGE 1
10$:	TSTL	(R0)		; TOUCH IT
	ACBL	LAST_PAGE,#^X200,R0,10$  ; NEXT PAGE AND LOOP
	RET



	.END
