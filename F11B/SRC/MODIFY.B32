MODULE MODIFY (
		LANGUAGE (BLISS32),
		IDENT = 'V03-001'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 2
!
! ABSTRACT:
!
!	This routine implements the MODIFY function.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  6-Jan-1977  23:03
!
! MODIFIED BY:
!
!	V03-001	ACG0282		Andrew C. Goldstein,	6-Apr-1982  16:08
!		Check for device write-locked before attempting operations
!
!	V02-007	ACG0223		Andrew C. Goldstein,	17-Nov-1981  21:49
!		Allow modification of directory version limit
!
!	V02-006	ACG0171		Andrew C. Goldstein,	7-May-1980  18:34
!		Condition check of truncate lock count on presence of FCB
!
!	V02-005	ACG0167		Andrew C. Goldstein,	16-Apr-1980  19:27
!		Previous revision history moved to F11B.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE MODIFY  =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine implements the MODIFY function.
!
! CALLING SEQUENCE:
!	MODIFY ()
!
! INPUT PARAMETERS:
!	NONE
!
! IMPLICIT INPUTS:
!	CURRENT_WINDOW: window for file
!	PRIMARY_FCB: FCB of file
!	IO_PACKET: I/O packet in process
!	FILE_HEADER: address of current file header
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	file and FCB modified
!
!--

BEGIN

LOCAL
	FIND_MODE,			! mode for FIND call
	ABD		: REF BBLOCKVECTOR [,ABD$C_LENGTH],
					! buffer descriptors
	FIB		: REF BBLOCK,	! FIB
	FCB		: REF BBLOCK,	! FCB of file
	HEADER		: REF BBLOCK;	! file header

EXTERNAL
	CLEANUP_FLAGS	: BITVECTOR,	! cleanup action flags
	IO_PACKET	: REF BBLOCK,	! I/O packet in process
	FILE_HEADER	: REF BBLOCK,	! address of currently resident file header
	CURRENT_WINDOW	: REF BBLOCK,	! window of file
	PRIMARY_FCB	: REF BBLOCK,	! FCB of file
	CURRENT_VCB	: REF BBLOCK,	! VCB of volume
	CURRENT_UCB	: REF BBLOCK,	! UCB of volume
	LOC_RVN,			! placement RVN or 0
	LOC_LBN;			! placement LBN or 0

EXTERNAL ROUTINE
	GET_FIB,			! get FIB of request
	GET_LOC_ATTR,			! get placement data from attribute list
	GET_LOC,			! get placament data
	FIND,				! find name in directory
	SWITCH_VOLUME,			! switch context to right volume
	SEARCH_FCB,			! search FCB list
	READ_HEADER,			! read file header
	CHECK_PROTECT,			! check file protection
	WRITE_ATTRIB,			! write file attributes
	EXTEND,				! extend file
	TRUNCATE,			! truncate file
	CHECKSUM,			! checksum the file header
	UPDATE_FCB;			! update FCB contents


! First find the buffer descriptor, FIB, FCB, etc., and read the header.
!

					! pointer to buffer descriptors
ABD = .BBLOCK [.IO_PACKET[IRP$L_SVAPTE], AIB$L_DESCRIPT];
FIB = GET_FIB (.ABD);
IF .FIB[FIB$W_VERLIMIT] GTRU 32767
THEN ERR_EXIT (SS$_BADPARAM);

IF .FIB[FIB$V_ALLOCATR]
THEN GET_LOC_ATTR (.ABD, .FIB);
GET_LOC (.FIB, LOC_RVN, LOC_LBN);

! If a directory ID is present, do a directory search first.
!

FIND_MODE = 0;
IF .FIB[FIB$W_VERLIMIT] NEQ 0
THEN FIND_MODE = 2;
IF .CLEANUP_FLAGS[CLF_DIRECTORY]
THEN FIND (.ABD, .FIB, .FIND_MODE);
SWITCH_VOLUME (.FIB[FIB$W_FID_RVN]);

! If there is a file open on the channel, check the file ID returned by the
! FIND against the file ID that is open. If they are different, drop the FCB
! and window addresses on the floor.
!

IF .PRIMARY_FCB NEQ 0
THEN
    IF .PRIMARY_FCB[FCB$W_FID_NUM] NEQ .FIB[FIB$W_FID_NUM]
    OR .PRIMARY_FCB[FCB$W_FID_RVN] NEQ .FIB[FIB$W_FID_RVN]
    THEN
	BEGIN
	PRIMARY_FCB = 0;
	CURRENT_WINDOW = 0;
	END;

FCB = SEARCH_FCB (FIB[FIB$W_FID]);
PRIMARY_FCB = .FCB;
HEADER = READ_HEADER (FIB[FIB$W_FID], .FCB);

! Check that the volume is write enabled.
!

IF .BBLOCK [CURRENT_UCB[UCB$L_DEVCHAR], DEV$V_SWL]
THEN ERR_EXIT (SS$_WRITLCK);

! Arbitrate access interlocks. If this is the accessor, then the file
! must be write accessed. If it is not, then the file must not be
! locked against modification and he must pass file protection.
!

IF .CURRENT_WINDOW NEQ 0
THEN
    BEGIN
    IF NOT .CURRENT_WINDOW[WCB$V_WRITE]
    THEN ERR_EXIT (SS$_NOPRIV);
    END
ELSE
    BEGIN
    IF .FIB[FIB$V_EXTEND] OR .FIB[FIB$V_TRUNC]
    THEN
	BEGIN

	IF .FCB NEQ 0
	THEN
	    IF .FCB[FCB$V_EXCL]
	    OR .FCB[FCB$W_LCNT] NEQ 0
	    THEN ERR_EXIT (SS$_ACCONFLICT);
	CHECK_PROTECT (WRITE_ACCESS, .HEADER, .FCB);
	END;
    END;


! If an attribute list exists, perform the write attributes operation.
!

IF .IO_PACKET[IRP$W_BCNT] GTR ABD$C_ATTRIB
THEN
    BEGIN
    WRITE_ATTRIB (.HEADER, .ABD);
    HEADER = .FILE_HEADER;
    CHECKSUM (.HEADER);
    END;

! If the extend enable bit is on, perform the extend operation.
! If the truncate bit is on, perform the truncate operation. If both are
! on, it is an error.
!

IF (.FIB[FIB$V_EXTEND] OR .FIB[FIB$V_TRUNC])
AND .CURRENT_VCB[VCB$V_NOALLOC]
THEN ERR_EXIT (SS$_WRITLCK);

IF .FIB[FIB$V_EXTEND]
THEN
    BEGIN
    IF .FIB[FIB$V_TRUNC] THEN ERR_EXIT (SS$_BADPARAM);
    EXTEND (.FIB, .HEADER);
    END;

IF .FIB[FIB$V_TRUNC]
THEN
    BEGIN
    IF .FCB NEQ 0
    THEN
	BEGIN
	IF .FCB[FCB$W_TCNT] NEQ 0
	THEN ERR_EXIT (SS$_ACCONFLICT);
	END;
    TRUNCATE (.FIB, .HEADER);
    END;

HEADER = .FILE_HEADER;
CHECKSUM (.HEADER);			! checksum the file header
KERNEL_CALL (UPDATE_FCB, .HEADER);

RETURN 1;

END;					! end of routine MODIFY

END
ELUDOM
