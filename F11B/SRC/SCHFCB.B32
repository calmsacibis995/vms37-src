MODULE SCHFCB (
		LANGUAGE (BLISS32),
		IDENT = 'V03-000'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  F11ACP Structure Level 1
!
! ABSTRACT:
!
!	This routine searches the current volume's FCB list for the
!	FCB representing the desired file number.
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--
!
!
! AUTHOR:  Andrew C. Goldstein,	 CREATION DATE:  13-Dec-1976  15:41
!
! MODIFIED BY:
!
!	A0101	ACG26369	Andrew C. Goldstein,	31-Dec-1979  17:35
!		Fix multi-header file interlock bug
!
!	A0100	ACG00001	Andrew C. Goldstein,  10-Oct-1978  20:03
!	Previous revision history moved to F11A.REV
!**


LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:FCPDEF.B32';

GLOBAL ROUTINE SEARCH_FCB (FILE_ID) =

!++
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine searches the current volume's FCB list for the
!	FCB representing the desired file number.
!
!
! CALLING SEQUENCE:
!	SEARCH_FCB (ARG1)
!
! INPUT PARAMETERS:
!	ARG1: address of desired file ID
!
! IMPLICIT INPUTS:
!	CURRENT_VCB: VCB address of volume
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	FCB address if found
!	zero if not
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN

MAP
	FILE_ID		: REF BBLOCK;	! file ID arg

LOCAL
	FCB		: REF BBLOCK,	! current FCB being looked at
	PREV_FCB	: REF BBLOCK;	! previous FCB in list

EXTERNAL
	CURRENT_VCB	: REF BBLOCK;	! VCB of volume in process

! Init the pointers and start scanning the FCB list, which is a double
! linked list. Check for consistency of pointers and the block ID for each
! FCB. We win when the FCB containing the desired file number is found;
! we lose at end of list (pointing back to the VCB).
!

PREV_FCB = .CURRENT_VCB;
FCB = .CURRENT_VCB[VCB$L_FCBFL];

IF
    BEGIN
    UNTIL .FCB EQL .CURRENT_VCB DO
	BEGIN
	IF .FCB[FCB$B_TYPE] EQL DYN$C_FCB
	AND .FCB[FCB$L_FCBBL] EQL .PREV_FCB
	THEN
	    BEGIN
	    IF  .FILE_ID[FID$W_NUM] EQL .FCB[FCB$W_FID_NUM]
	    AND .FILE_ID[FID$B_NMX] EQL .FCB[FCB$B_FID_NMX]
	    THEN EXITLOOP .FCB;

	    PREV_FCB = .FCB;		! link to next FCB
	    FCB = .FCB[FCB$L_FCBFL];
	    END
	ELSE
	    BUG_CHECK (NOTFCBFCB, FATAL, 'FCB linkage broken');
	END				! end of loop
    END

    EQL -1
THEN 0					! return 0 if loop failed
ELSE .FCB				! else FCB address

END;					! end of routine SEARCH_FCB

END
ELUDOM
