	.TITLE	COPYFSR - FSR EXPANDER FOR THE COPY COMMAND
	.IDENT	/V03001/

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	24-AUG-76
;
; MODIFIED BY:
;
;	V03001	PHL0707		Peter H. Lipman		11-Mar-1982
;
;		Save one more bit of STRMIN context, for new VAX
;	stream file processing.
;
;	020702	PHL0702		Peter H. Lipman		18-May-1980
;
;		Avoid extra close logic for RSTS by using .CLOSE 
;	instead of the standard SOS close routine.
;
	.MCALL	FDOF$L,FCSBT$,IOERR$
	FDOF$L
	FCSBT$
	IOERR$

;  	COPY COMMAND FSR HANDLER ROUTINES
;
; GIVFSR - GIVES ENOUGH SPACE BACK TO THE FILE STORAGE REGION
;	FOR OPENING THE COPY FILE.  THIS IS ACCOMPLISHED BY
;	MARKING THE PLACE IN THE INPUT FILE AND CLOSING IT.
;
	CODE$	CPFS

	.ENABL	LSB

GIVFSR::JSR	R1,$SAV4		;SAVE R1-R3
	MOV	BUF+BUFILE,R0		;R0=FDB ADR OF INPUT FDB
	MOV	#SVSTRM,R4		;ADDRESS OF STREAM POSITION INFO
	MOV	(R4)+,-(SP)		;SAVED POSITION PRESENT?
	BEQ	10$			;BRANCH IF NOT
	NEG	(SP)			;NEGATIVE INDICATES RECORD
					;IS NO LONGER IN STREAM BUFFER
					;AND MUST BE RE-READ
	MOV	(R4)+,R1		;LOAD REGISTERS
	MOV	(R4)+,R2		;  AS IF
	MOV	(R4)+,R3		;    CALLED .MARK
	BR	20$
10$:	JSR	PC,.MARK		;RECORD POSITION OF FILE
20$:	MOV	#SAVIFL,R4		;ADDRESS OF SAVE CONTEXT AREA
	MOV	R0,(R4)+		;FDB ADDRESS
	MOV	R1,(R4)+		;HIGH VBN
	MOV	R2,(R4)+		;LOW VBN BITS
	MOV	R3,(R4)+		;BYTE OFFSET IN VBN
	MOV	(SP)+,(R4)+		;BYTE OFFSET IN STREAM RECORD
	ASLB	STRMIN			;SAVE BITS 0 AND 1 OF STRMIN
	ASLB	STRMIN			; IN BITS 2 AND 3

	.IF	NDF,R$$STS
	MOV	F.FNB(R0),-(SP)		;CLOSE WILL WIPE OUT FILE ID

	.IFTF	;RSX AND RSTS
	JSR	PC,.CLOSE		;CLOSE THE FILE

	.IFT	;RSX ONLY
	MOV	(SP)+,F.FNB(R0)		;RESTORE FILE ID FOR FAST OPEN
	.ENDC	;R$$STS

	BCS	60$			;BRANCH IF ERROR
	RTS	PC			;AND RETURN
;
; GETFSR - CALLED AFTER THE COPY FILE IS CLOSED TO "GET BACK
;	THE FILE STORAGE REGION SPACE."  THE INPUT FILE IS
;	NOW REOPENED AND POSITIONED TO ITS SAVED PLACE.
;
GETFSR::JSR	R1,$SAV3		;SAVE R1-R3
	MOV	#SAVIFL+10.,R0		;POINTER TO SAVED FILE INFO
	MOV	-(R0),-(SP)		;BYTE OFFSET IN STREAM RECORD
	MOV	-(R0),R3		;RESTORE R1-R3
	MOV	-(R0),R2		;IN ORDER TO REPOSITION
	MOV	-(R0),R1		;THE FILE
	MOV	-(R0),R0		;RESTORE THE FDB ADDRESS
	BICB	#FA.CRE!FA.NSP,F.FACC(R0) ;IF FILE WAS OPEN FOR PUT AS WELL
					;JUST LEAVE OPEN FOR UPDATE BITS
	JSR	PC,OPNCOM		;REOPEN THE INPUT FILE
					;USING PREVIOUS FILE ACCESS
	BCS	60$			;DISASTER IF IT FAILS
	JSR	PC,.POINT		;REPOSITION
	BCC	40$			;BRANCH IF OK
	CMPB	#IE.EOF,F.ERR(R0)	;EOF ERROR IS OK
	BNE	60$			;OTHER ERROR IS FATAL
40$:	MOV	#SVSTRM,R0		;ADDRESS OF GET STREAM CONTEXT
	MOV	(SP)+,(R0)+		;BYTE OFFSET IN STREAM RECORD
	MOV	R1,(R0)+		;HIGH VBN BITS
	MOV	R2,(R0)+		;LOW VBN BITS
	MOV	R3,(R0)+		;BYTE OFFSET IN VBN
	ASRB	STRMIN			;RESTORE BITS 0 AND 1 OF STRMIN
	ASRB	STRMIN			; FROM BITS 2 AND 3
	RTS	PC

60$:	MOV	#3,-(SP)		;TROUBLE--BAD ERROR
	CLR	-(SP)			;INTERNAL CODE
	JSR	PC,SOSERR		;ABORT SOS

	.DSABL	LSB

	.END
