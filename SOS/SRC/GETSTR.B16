MODULE GETSTR (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!


!	03	18-AUG-77	BILL MARSHALL
!
!	ADDED ENTRIES TO SPECIAL CHARACTER TABLE FOR NEW
!	STRING SEARCHING CAPABILITY.
!
!	07	1-NOV-78	PETER H. LIPMAN
!
!	MADE "SPECIAL" TABLE GLOBAL FOR USE BY GIVSTR.
!

!
!	GETSTR
!
!	THIS ROUTINE READS STRINGS FROM THE TERMINAL FOR
!	THE F(FIND) AND S(SUBSTITUTE) COMMANDS.  STRINGS
!	ARE READ INTO AN 'OWN' AREA, NAMES FSTRING, AND
!	ARE POINTED TO BY POINTERS IN THE TABLE PASSED
!	AS A PARAMETER.  STRINGS ARE STORED BYTWISE,
!	WITH A ZERO BYTE FOLLOWING THE LAST CHARACTER
!	IN EACH STRING.  STRINGS ARE SEPARATED BY CARRIAGE
!	RETURNS ON THE TERMINAL, AND TERMINATED BY AN
!	ALTMODE.
!
!	PARAMETERS -
!		SNO - STARTING STRING NUMBER TO READ
!		MAXNO - MAXIMUM NUMBER  OF STRINGS
!		TBL - ADDRESS OF POINTER TABLE TO BUILD
!		FSTRNG - ADDRESS OF FIRST BYTE OF STRING AREA
!			BEING READ INTO
!		FSTRGL - SIZE OF STRING AREA BEING READ INTO
!		PROMPT - ADDRESS OF PLIT TO PROMPT WITH
!			WHEN MULTIPLE STRINGS ARE INPUT
!			OR ZERO IF NO PROMPT.
!
!	RETURNS -
!		VALUE IS THE NEXT STRING NUMBER THAT
!			CAN BE READ INTO THE TABLE,
!			OR -2  IF ALL STRINGS WERE
!			DEFAULTED BY A SINGLE CR
!			OR 0 IF ALL STRINGS WERE
!			DEFAULTED BY A SINGLE ALTMODE.
!
!
!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	LISTEN,		! READ CHAR FROM TERMINAL
	PRINT,		! PRINT PLIT
	CMDABO;		! COMMAND ABORT
EXTERNAL
    ALTCHR: BYTE,			! ALTERNATE ALTMODE CHARACTER
    MATCHR: BYTE;			! MATCH CHAR FOR SPECIAL SEARCH CHARS

GBLROUTINE (GETSTR(SNO,MAXNO,TBL,FSTRNG,FSTRGL,PROMPT))=
BEGIN
MACRO B(LO,HI) = (LO) OR (HI)^8 %;
GLOBAL BIND  SPECIAL = PLIT (
	B(':' , %O'174'),
	B('/' , %O'24'),
	B('%' , %O'5'),
	B('"' , %CHAR(2)),
	B('7' , %O'36'),
	B('9' , %CHAR(24)),
	B('!' , %CHAR(1)),
	B('&' , %CHAR(6)),
	B('2' , %CHAR(23)),
	B('+' , %CHAR(16)),
	B('<' , %O'34'),
	B('>' , %O'35'),
	B('1' , %CHAR(22)),
	B('*' , %CHAR(15)),
	B(')' , %O'16')  ): VECTOR[,WORD];
LOCAL
    TADR: REF VECTOR[,BYTE];
LOCAL
    CNT,
    CHAR,
    I;
MAP
    TBL: REF VECTOR[,WORD];
TADR = .TBL[.SNO];			! ADDRESS OF FIRST BYTE TO STORE IN
CHAR=LISTEN(1);
IF .CHAR EQL %CHAR(13) THEN
	RETURN -2;
IF .CHAR EQL %O'033' THEN
	RETURN 0;
INCR CNT FROM .SNO TO .MAXNO - 1 DO
	BEGIN
	IF .CHAR EQL 0 THEN		! SECOND OR SUBSEQUENT STRING
		BEGIN
		IF .PROMPT NEQ 0 THEN PRINT (.PROMPT);
		CHAR = LISTEN(1);
		END;
	TBL[.CNT]=.TADR;
	UNTIL (.CHAR EQL %CHAR(13) OR .CHAR EQL %O'033'
			OR (.TADR - .FSTRNG) GEQ .FSTRGL )
		DO BEGIN
		IF .CHAR<0,8> EQL .ALTCHR<0,8> THEN CHAR = %O'033';
		IF .CHAR<0,8> EQL .MATCHR<0,8>
			THEN BEGIN
			CHAR = LISTEN(1);
			IF (INCR I FROM 0 TO .SPECIAL[-1] -1 DO
				IF .CHAR EQL .(SPECIAL[.I])<0,8> THEN
					BEGIN
					CHAR = .(SPECIAL[.I])<8,8>;
					EXITLOOP 0;
					END )
				THEN IF .CHAR<0,8> NEQ .MATCHR<0,8> THEN
					BEGIN
					TADR[0] = .MATCHR<0,8>;
					TADR = .TADR + 1;
					END;
			END
			ELSE BEGIN
			TADR[0] = .CHAR;
			TADR = .TADR + 1;
			CHAR = LISTEN(1);
			END;
		END;
	IF .TADR-.FSTRNG GEQ .FSTRGL THEN
		BEGIN
		UNTIL .CHAR EQL %O'033' OR .CHAR EQL %CHAR(13) DO
			CHAR=LISTEN(1);
		IF .CHAR EQL %O'033' THEN PRINT (PLIT (%STRING(%CHAR(13),%CHAR(10))) );
		CMDABO(BADFST);
		END;
	TADR[0] = 0;			! MARK END OF THIS STRING
	TADR = .TADR + 1;
	IF .CHAR EQL %O'033' THEN		! IF ALTMODE THEN LAST STRING
		BEGIN
		TBL[.CNT+1] = .TADR;
		RETURN .CNT+1;
		END
		ELSE CHAR = 0;		! WAS A CR, LOOP BACK TO READ NEXT STRING
	END;
CMDABO(BADTMS);
RETURN 0;				! RETURN REQUIRED BY BLISS16
END;


END ELUDOM
