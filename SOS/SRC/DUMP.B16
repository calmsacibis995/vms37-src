MODULE DUMP (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!


!
!	DUMP
!
!	THIS ROUTINE WILL WRITE OUT RECORDS FROM THE BUFFER
!	TO THE OUTPUT FILE, AS REQUIRED, UNTIL A SUFFICIENT
!	AMOUNT OF FREE STORAGE IS AVAILABLE IN THE BUFFER.
!	ENOUGH FREE STORAGE SHOULD ALWAYS BE AVAILABLE TO
!	READ IN A MAX LENGTH LINE, INSERT A MAX LENGTH LINE,
!	ETC.  ALL THOSE ROUTINES CHECK SPACE AFTER DOING THE
!	INSERT, CHANGE, ETC. (BECAUSE SOME POINTERS MAY CHANGE
!	INVALIDATING THEIR PARAMETERS)
!
!	PARAMETERS -
!		NONE
!
!	RETURNS -
!		NONE
!
!
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	SOSERR,		! ERROR HANDLER
	PUT;		! TO WRITE OUT RECORD TO FILE


GBLROUTINE (DUMP(ADR))=
BEGIN
EXTERNAL
    FILEOUT;
WHILE NEEDSP DO
	BEGIN
	IF .ADR EQL .BUFFIR THEN
		BEGIN
		REGISTER
		    PTR1,
		    PTR2,
		    LNG;
		IF .BUFFR1+.BUFFR2 LSS FREEMID THEN
			SOSERR(3,INTERNAL);
		PTR1=.BUFADR+.BUFLEN-.BUFFR2;
		PTR2=.BUFADR+.BUFLEN;
		LNG=(.PTR1-.ADR)/2;
		WHILE .LNG GTR 0 DO
			BEGIN
			PTR1=.PTR1-2;
			PTR2=.PTR2-2;
			.PTR2=..PTR1;
			LNG=.LNG-1;
			END;
		ADR=BUFFIR=.PTR2;
		BUFFR1=.BUFFR1+.BUFFR2;
		BUFLST=.BUFLST+.BUFFR2;
		BUFFR2=0;
		EXITLOOP;
		END;
	IF NOT READONLY THEN
		PUT(FILEOUT,.BUFFIR,BUFPGW);
	IF .LINFLG(.BUFFIR) AND FLGWRP THEN
		BEGIN
		BUFFR2=.BUFFR2+.BUFFR1+.LINLEN(.BUFFIR)*2;
		BUFFR1=0;
		BUFFIR=.BUFSTRT;
		END
	ELSE
		BEGIN
		BUFFR1=.BUFFR1+.LINLEN(.BUFFIR)*2;
		BUFFIR=.BUFFIR+.LINLEN(.BUFFIR)*2;
		END;
	BUFPG1=.LINPAG(.BUFFIR);
	BUFPG1+2=.LINLIN(.BUFFIR);
	END;
BUFWRP=.BUFWRP+1;
RETURN .ADR;
END;


END ELUDOM
