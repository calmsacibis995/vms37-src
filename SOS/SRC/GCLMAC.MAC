;
; GCML MACRO DEFINITIONS
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION V03-000
;
; WRITTEN BY:
;	R.B. GROVE	25-APR-73, BASE LEVEL 6B VERSION
;
; MODIFIED BY:
;	C.A. D'ELIA	19-OCT-73 (FOR RSX-11D V003A)
;	C.A. D'ELIA	28-MAR-74 (FOR GCML VERSION 09)
;	C.A. D'ELIA	01-AUG-74
;	C.A. D'ELIA	20-JAN-75
;	I. SMITH	04-JAN-77	CONTINUATION LINES
;
;
 
;
; GCMLB$ - GENERATE A CONTROL BLOCK FOR GCML$
;
	.MACRO	GCMLB$	MAXD,PRMPT,UBUF,LUN,PDL,SIZE=80.,?PDL1,?DFNB,?BUF
 
	.MCALL	FDBDF$,FDAT$A,FDOP$A,NMBLK$,FDBF$A,CBYTE$
 
	FDBDF$			;DEFINE FDB
	FDAT$A	2
	.IF NB	<LUN>
	FDOP$A	LUN,,DFNB
	.IFF
	FDOP$A	1,,DFNB
	.ENDC
	FDBF$A	,,1		;FORCE SINGLE BUFFERING
 
	CBYTE$	<FD.TTY!FD.REC!FD.CCL>,F.RCTL  ;FUDGE INITIAL ATTRIBUTES
 
 
	.MCALL	GCMLD$
	GCMLD$			;DEFINE GCML OFFSETS
 
	.BYTE	0		; ERROR BYTE
	.BYTE	GE.COM!GE.IND!GE.CLO!GE.SIZ!GE.CON  ;MODE BYTE
	.BLKW	4		;PROMPT STR AND CMD DESCRIPTORS
	.BYTE	-1,MAXD		;CURRENT AND MAXIMUM DEPTHS
 
	.IF B	<PDL>
	.WORD	PDL1		;USE GENERATED PUSH-DOWN LIST
	.IFF
	.WORD	PDL		;USER SUPPLIED PUSH-DOWN LIST
	.ENDC
 
	.IF NB <UBUF>
	.WORD	UBUF
	.IFF
	.WORD	BUF
	.ENDC
 
$$$=.
	.ASCII	<15><12>
	.IF NB	<PRMPT>
	.ASCII	/PRMPT>/
	.IFF
	.ASCII	/   >/
	.ENDC
.=$$$+6
 
DFNB:	NMBLK$	CMI,CMD
 
	.WORD	SIZE
 
G.LPDL=<MAXD+1>*<6+<5*2>>	;LENGTH (IN BYTES) OF REQUIRED PDL
 
	.IF B	<PDL>
PDL1:	.BLKB	G.LPDL		;GENERATE REQUIRED PUSH-DOWN STORAGE
	.ENDC
 
	.IF B	<UBUF>
BUF:	.BLKB	SIZE+2.
	.ENDC
 
	.ENDM	GCMLB$
 
 
 
 
;
; GCML$  - GET COMMAND LINE MACRO
;
	.MACRO	GCML$	NAME,ADPR,LNPR
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	NAME
	.IF NB	<LNPR>
	MOV	LNPR,G.PSDS(R0)
	.IIF B	<ADPR>, .ERROR ; PROMPT STRING MISSING
	.IIF NB	<ADPR>,	MOV	ADPR,G.PSDS+2(R0)
	.ENDC
	.IIF B	<LNPR>,	CLR	G.PSDS(R0)
	.GLOBL	.GCML1
	JSR	PC,.GCML1
	.ENDM	GCML$
 
 
 
 
 
;
; RCML$  - RESET COMMAND LINE SCAN TO TOP LEVEL
;
	.MACRO	RCML$	NAME
	.MCALL	LDR0$
	LDR0$	NAME
	.GLOBL	.GCML2
	JSR	PC,.GCML2
	.ENDM	RCML$
 
 
 
 
 
;
; CCML$  - CLOSE CURRENT LEVEL OF COMMAND LINE
;
	.MACRO	CCML$	BLK
	.MCALL	LDR0$
	LDR0$	BLK
	.GLOBL	.GCML3
	JSR	PC,.GCML3
	.ENDM	CCML$
 
 
 
 
 
;
; GCMLD$ - GET COMMAND LINE SYMBOL DEFINITIONS
;
	.MACRO	GCMLD$	GBL
 
	.IF NDF	S.FDB	;MUST FIRST DEFINE SIZE OF FDB
	.MCALL	FDBSZ$
	FDBSZ$
	.ENDC
 
	.MCALL	GCML$D	;NOW DEFINE GCML SYMBOLS
	GCML$D	GBL
 
	.MACRO	GCMLD$	X
	.ENDM
 
 
	.ENDM	GCMLD$
 
 
 
 
;
; GCML$D - DEFINE GCML SYMBOLS (CALLED BY GCMLD$)
;
 
	.MACRO	GCML$D	GBL
 
	.IF IDN	<GBL>,<DEF$G>
	.GLOBL	G.ERR,G.MODE,G.PSDS,G.CMLD,G.RBUF,G.DPRM,G.SIZE
	.GLOBL	GE.COM,GE.IND,GE.CLO,GE.LC,GE.CON,GE.SIZ
	.GLOBL	GE.IOR,GE.OPR,GE.BIF,GE.MDE,GE.EOF,GE.RBG
	.ENDC
 
 
G.ERR	= S.FDB		;ERROR RETURN CODE BYTE
G.MODE	= G.ERR+1	;STATUS AND MODE CONTROL BYTE
G.PSDS	= G.ERR+2	;PROMPT STRING DESCRIPTOR
G.CMLD	= G.ERR+6	;COMMAND LINE DESCRIPTOR
G.RBUF	= G.ERR+14.	;BUFFER ADDRESS
G.ISIZ	= 16.		;SIZE OF IMPURE AREA (PTRS,FLAGS,COUNTS,ETC)
G.DPRM	= G.ERR+G.ISIZ	;DEFAULT PROMPT STRING
G.SIZE	= G.DPRM+6+S.FNB	; BUFFER SIZE
;
; G.MODE BIT DEFINITIONS
;
GE.COM	= 1		;COMMENT RECOGNITION
GE.IND	= 2		;INDIRECT FILE RECOGNITION
GE.CLO	= 4		;CLOSE COMMAND FILE BEFORE RETURN
GE.LC	= 10		;PASS LOWER CASE CHARACTERS
GE.CON	= 20		; CONTINUATION LINES ALLOWED
GE.SIZ	= 40		; BUFFER SIZE
;
; G.ERR VALUES
;
GE.IOR	= -1		;I/O ERRER
GE.OPR	= -2		;UNABLE TO OPEN INDIRECT FILE
GE.BIF	= -3		;BAD INDIRECT FILE NAME
GE.MDE	= -4		;MAXIMUM INDIRECT FILE DEPTH EXCEEDED
GE.EOF	= -10.		;END OF FILE
GE.RBG	= -40.		; BUFFER SIZE ERROR  (OVERFLOW)
;
; MACRO REDEFINITION
;
	.MACRO	GCML$D	X
	.ENDM
 
	.ENDM	GCML$D
