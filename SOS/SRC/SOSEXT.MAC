	.TITLE	SOSEXT - EXTEND OUTPUT FILE IF NEEDED
	.IDENT	/V03000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	27-JUL-79
;
;	06.14	30-OCT-79	PETER H. LIPMAN
;
;	MOVE EXTFLG TO SOSDAT SO THIS MODULE CAN BE MADE A
;		SUCCESSFUL NOP FOR OVERLAYED SOS
;
;	06.15	16-NOV-79	PETER H. LIPMAN
;
;	GIVE CORRECT EXTEND ERROR MESSAGE VIA FDBERR
;
	.MCALL	FDOF$L
	FDOF$L

	DATA$	EXTD
EXTFL2:	.BYTE	0
	.EVEN

	CODE$	EXTD

ENTRY	EXTEND				; EXTEND(OUTFDB)
	TSTB	EXTFLG			; SEE IF EXTEND REQUIRED?
	BEQ	50$			; BRANCH IF NO
	CLRB	EXTFLG			; CHECK THIS TIME ONLY
	JSR	R1,$SAV3		; SAVE SOME REGISTERS
	MOV	12(SP),R0		; GET OUTPUT FDB ADDRESS
	MOV	BUF+BUFLEN,R1		; ACTUAL SIZE OF TEXT BUFFER
	SUB	BUF+BUFFR1,R1		; SUBTRACT FREE SPACE AT BEGINNING
	SUB	BUF+BUFFR2,R1		; AND FREE SPACE AT END
					; GIVING ACTUAL TEXT IN BUFFER
	ADD	#511.,R1		; ROUND UP TO BLOCK SIZE
	ASH	#-9.,R1			; AND FORM BLOCK COUNT
	CMP	FILUSE,#1		; CREATING A NEW FILE?
	BEQ	20$			; BRANCH IF YES, NO INPUT FILE
	MOV	BUF+BUFILE,R2		; GET INPUT FILE FDB ADDRESS
	TST	COPERF			; IF NON ZERO, THEN THIS IS COPY FILE
	BEQ	10$
	MOV	COPSFL,R2		; USE REAL INPUT FDB
10$:	MOV	F.EFBK+2(R2),R3		; LAST BLOCK IN FILE
	SUB	F.VBN+2(R2),R3		; - CURRENT VBN GIVES BLOCKS
					; NOT READ FROM INPUT FILE
	ADD	R3,R1			; FORM TOTAL NEEDED BLOCKS
20$:	MOV	F.HIBK+2(R0),R3		; LAST ALLOCATED VBN
	SUB	F.EFBK+2(R0),R3		; - LAST VBN IN USE
	INC	R3			; + 1 GIVES SPACE LEFT IN OUTPUT FILE
	SUB	R3,R1			; COUNT OF BLOCKS TO ALLOCATE
	BLT	50$			; BRANCH IF NO NEED TO ALLOCATE
	CLR	R2			; NON-CONTIGUOUS EXTEND
	JSR	PC,.EXTND		; EXTEND THE FILE
	BCC	30$			; BRANCH IF SUCCESSFUL
	INCB	EXTFLG			; STILL NEED TO CHECK FOR EXTEND
	TSTB	EXTFL2			; WARNING MESSAGE ALREADY ISSUED?
	BNE	50$			; BRANCH IF YES
	MOV	#EXTMG1,-(SP)		; FAILED TO EXTEND OUTPUT FILE
	MOV	R0,-(SP)		; ADDRESS OF FDB IN ERROR
	JSR	PC,FDBERR		; OUTPUT THE ERROR MESSAGE
	CMP	(SP)+,(SP)+		; CLEAN OFF THE PARAMETERS
	INCB	EXTFL2			; NOTE WARNING GIVEN
	BR	50$
30$:	TSTB	EXTFL2			; IF WARNING MESSAGE SENT
	BEQ	50$
	JSR	R1,PRTINL		; THEN TELL HIM THINGS ARE OK NOW
	.WORD	EXTMG2
	CLRB	EXTFL2			; RESET WARNING SENT FLAG
50$:	RTS	PC
;
; EXTEND WARNING MESSAGE
;
	PLIT	EXTMG1,<<15><12>/Disk allocation failure/>
	PLIT	EXTMG2,<<15><12>/Disk space successfully allocated - ok for now/<15><12>>



	.END
