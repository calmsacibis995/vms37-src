	.TITLE	SOSLST - OPEN AND CLOSE LISTING FILE
	.IDENT	/V03000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	29-AUG-76
;
;	020705	PHL35536	Peter H. Lipman		6-Feb-1981
;		The CMDL code uses the TTOCTL pointer without initializing
;	it.  Under some obscure conditions it actually points at an odd
;	byte address.  Force initialize it in OPNLST to be sure.
;		If the 3rd word of the file id or directory id fields
;	are non-zero and we are changing the device to lp0: for auto-
;	spooling, the FCS OPEN routine fails.  Clear those locations.
;
	.MCALL	FDOF$L,FCSBT$,QIOSY$
	FDOF$L
	FCSBT$
	QIOSY$
	.MCALL	CCML$,OFNB$,CLOSE$
	.MCALL	QIO$,DIR$,WTSE$S,GTIM$S,ALUN$S

	CODE$	LST

ENTRY	PUTLST				;PUT TO LISTING FILE
	JSR	R1,$SAV3		;SAVE 3 REGS
	MOV	16(SP),R1		;FDB POINTER
	MOVB	@20(SP),R0		;GET FLAGS WORD
	BIT	#1,R0			;ALREADY INITIALIZED?
	BNE	10$			;BRANCH IF YES
	JSR	PC,SETPUT		;GET PUT FLAGS WORD, SET RECORD TYPE
	MOVB	R0,@20(SP)		;STORE IT BACK
10$:	MOV	14(SP),R2		;LINE ADDRESS
	MOV	12(SP),R3		;PAGE # ADDRESS
	JSR	PC,PUTLS1		;PUT THE RECORD
	MOV	16(SP),R1		;RECOVER FDB ADDRESS
	TSTB	F.ERR(R1)		;ERROR IN PUT?
	BLT	20$			;BRANCH IF YES
	RTS	PC
20$:	MOV	F.ERR(R1),R2		;SAVE ERROR STATUS
	MOV	R1,-(SP)		;FDB ADDRESS
	JSR	PC,CLSDEL		;CLOSE AND DELETE LIST FILE
	MOV	R2,F.ERR(R1)		;RESTORE FDB ERROR CODE
	MOV	#LSTX2,-(SP)		;ERROR WITH LISTING FILE
	MOV	#25,-(SP)		;"LIST TROUBLE"
	JSR	PC,SOSERR		;ISSUE THE ERROR AND ABORT COMMAND

ENTRY	OPNLST				;OPNLST(DSTFLG,FDB)
					;NOTE ADDRESS OF DSTFLG, NOT VALUE

	JSR	PC,INITCR		;INIT TTOCTL PROPERLY
	CCML$	#GCMLB			;CLOSE CMD FILE
					;FREEING SOME FSR SPACE
	MOV	2(SP),R0		;FDB ADDRESS
	MOVB	#R.VAR,F.RTYP(R0)	;SET RECORD TYPE TO DEFAULT
	MOVB	#FD.CR,F.RATT(R0)	;AND SET CARRIAGE CONTROL

	.IF	DF,R$$STS
	OFNB$	,#FO.WRT		;OPEN THE .LST FILE

	.IFF				;RSX ONLY
	JSR	R1,$SAV2		;SAVE SOME REGISTERS
	JSR	PC,DETACH		;IN CASE LST LUN = TI:
	MOV	@10.(SP),R1		;GET DESTINATION FLAG
	BMI	20$			;NEGATIVE IF TO A FILE
	BIT	#SYS11D!SYSIAS!SYSMPL!SYSCME,SYSTEM ;AUTO SPOOLING OF LP?
	BEQ	10$			;BRANCH IF NOT
	MOV	#"LP,F.DVNM(R0)		;OTHERWISE ASSUME A PRINTER
	MOV	R1,F.UNIT(R0)		;WITH THAT UNIT NUMBER
	CLR	F.FNB+N.DID(R0)		;CLEAN OUT DIRECTORY ID
	CLR	F.FNB+N.DID+4(R0)	;AND RELATIVE VOLUME NO.
	INC	@10.(SP)		;DON'T SPOOL ON CLOSE
	BR	20$
10$:	MOV	#"SY,F.DVNM(R0)		;USE SY0: AS INTERMEDIATE DEVICE
	CLR	F.UNIT(R0)		;FORCE UNIT TO 0
	MOV	#^RLP ,F.FNAM(R0)	;USE LP.LST WHICH WILL AUTO DELETE
	CLR	F.FNAM+2(R0)
20$:	OFNB$	R0,#FO.WRT		;OPEN FOR OUTPUT
	BCS	30$
	MOV	#IO.ATT,R1		;FUNCTION CODE FOR ATTACH
	JSR	PC,ADLST		;ATTACH LST DEV IF NECESSARY
30$:	JSR	PC,ATTACH		;REATTACH THE TERMINAL
	.ENDC

	JMP	FCSDON			;SET RETURN CODE AND EXIT

ENTRY	CLOLST			;CLOSE LIST FILE

	.IF	DF,R$$STS
	MOV	2(SP),-(SP)		;FDB ADR
	JSR	PC,CLOSE		;CLOSE THE FILE
	MOV	#CLOMSG,(SP)		;MESSAGE TO TELL USER
	JSR	PC,PRINT
	MOV	4(SP),(SP)		;FDB ADR AS PARAMETER
	CLR	-(SP)			;NO [FILE] OR (NO CHG)
	JSR	PC,PRTFIL
	CMP	(SP)+,(SP)+		;POP 2

	.IFF
	JSR	R1,$SAV2
	MOV	10(SP),R0
	TST	12(SP)			;CHECK DESTINATION FLAG
	BNE	10$			;BRANCH IF DOES NOT NEED MANUAL SPOOLING
	JMP	.PRINT			;SPOOL IT AND RETURN TO CALLER
10$:	BGT	20$			;BRANCH IF NOT ",F" OPTION
	MOV	R0,-(SP)		;FDB ADDRESS
	CLR	-(SP)			;NO PRTFIL FLAGS
	JSR	PC,PRTFIL		;PRINT THE OUTPUT FILE NAME
	TST	(SP)+			;CLEAN OFF FLAGS PARAMETER
	MOV	(SP)+,R0		;CLEAN STACK, RECOVER FDB ADDRESS
20$:	MOV	#IO.DET,R1		;FUNCTION CODE FOR DETACH
	JSR	PC,ADLST		;DETACH .LST FILE IF NECESSARY
	CLOSE$	R0			;AND FINALLY CLOSE THE FILE
	MOVB	F.LUN(R0),R1		;FETCH LOGICAL UNIT TO WORD
	ALUN$S	R1,#"SY,#0		;FORCE LUN AWAY FROM RECORD DEVICE
					;REQUIRED TO RELEASE OWNERSHIP IN VAX
	.ENDC

	RTS	PC

;
; GDATIM(OUTADR);
;	CONVERT DATE AND TIME TO ASCII STRING STARTING AT OUTADR
;	RETURN R0 = ADDRESS OF BYTE JUST BEYOND LAST STORED.
;
ENTRY	GDATIM				;GET DATE AND TIME TO STRING
	MOV	2(SP),R0		;ADDRESS TO RETURN STRING
	JSR	R1,$SAV3		;PRESERVE R1, R2, R3
	SUB	#16.,SP			;MAKE ROOM FOR TIME PARAMETERS
	MOV	SP,R1			;ADDRESS OF AREA TO STORE TIME DATA
	GTIM$S	R1
	BCS	10$			;BRANCH IF ERROR
	JSR	PC,$DAT			;CONVERT DATE TO ASCII
	MOVB	#' ,(R0)+		;PUT IN A SEPARATOR
	MOV	#3,R2			;TIME TO SECONDS
	JSR	PC,$TIM			;CONVERT TIME TO ASCII
10$:	ADD	#16.,SP			;CLEAN OFF TIME DATA
	RTS	PC			;AND RETURN WITH R0=ADR OF NEXT CHAR
;
; ATTACH OR DETACH LISTING DEVICE IF NECESSARY
;
; INPUTS:
;
;	R0 = FDB ADDRESS
;	R1 = IO.ATT OR IO.DET FUNCTION CODE
;

	.IF	NDF,R$$STS		;RSX ONLY
ADLST:	BIT	#SYSCME,SYSTEM		;DON'T BOTHER WITH ATTACH/DETACH
	BNE	20$			;IF THIS IS VAX CME
	BITB	#FD.TTY!FD.DIR!FD.SDI,F.RCTL(R0) ;ATTACH NECESSARY?
	BNE	20$			;BRANCH IF NOT ATTACHING FDB
	CLR	R2			;NO ADDITIONAL PARAMETERS
	JSR	PC,.XQIO		;ISSUE THE ATTACH QI/O
20$:	RTS	PC

	.IFF				;RSTS ONLY

	PLIT$	LST

	.WORD	CLOL+1/2
CLOMSG:	.ASCII	/Output file=/
CLOL	=	.-CLOMSG
	.EVEN
	.ENDC

	.END
