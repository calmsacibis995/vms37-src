MODULE CMDF (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!


!	03	16-AUG-77	BILL MARSHALL
!
!	ADDED NEGATE SWITCH TO F COMMAND TO FIND THE FIRST LINE IN
!	THE FILE THAT DOES NOT HAVE ANY OF THE DESIGNATED STRINGS.
!
!	05	5-MAR-78	PETER H. LIPMAN
!
!	IF NEGATE SWITCH AND ALTER MODE, POSITION ALTER POINTER
!	AT THE BEGINNING OF THE LINE.
!
!	06.07	6-SEP-78	PETER H. LIPMAN
!
!	IF FOUND AND PRINTED A LINE, RECORD THAT "." WAS JUST PRINTED.
!
!	06.11	20-APR-79	PETER H. LIPMAN
!
!	FOR ",N" OPTION, PRINT LINE NUMBER OF LINE(S) FOUND
!		EVEN IF /NONUM SWITCH IS SET.
!
!	06.12	2-JUL-79	PETER H. LIPMAN
!
!	ALTER NOW DOES SETDOT PROPERLY, NO NEED TO DO IT AFTER
!		ALTER CALL HERE.  COMBINE ALTER CALLS.
!

!
!	CMDF - FIND COMMAND HANDLER
!
!
!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	GETSTR,		! READ IN SEARCH STRINGS
	RDCMD,		! READ IN COMMAND
	GETRNG,		! PARSE RANGE SPEC
	SCAN,		! COMMAND SCANNER
	CMDABO,		! COMMAND ABORT WITH SPECIFIED ERROR
	ILLCMD,		! BAD COMMAND ERROR
	ILLRO,		! ILLEGAL FOR READ ONLY FILE
	GETDOT,		! FIND CURRENT POSITION
	FINDR,		! FIND LINE IN RANGE
	SEARCH,		! STRING SEARCHER
	ALTER,		! ,A OPTION
	PRTLIN,		! TYPE LINE ON TTY
	PRVLINE,	! BACK UP ONE
	SETDOT,		! SAVE CURRENT LOCATION
	NXTLINE,	! BUMP UP ONE LINE
	PSTRNG;		! END OF RANGE TESTER

EXTERNAL
    FSTRGSIZ,				! MAX ALLOWABLE LEN SEARCH STRING
    FSTRLST: VECTOR[,WORD],		! FIND STRING LIST
    SRRET: VECTOR[,WORD],		! SEARCH RETURN AREA
    FRANGE: VECTOR[,WORD],		! SAVED FIND RANGE
    CMDSQN,				! SEQUENCE NUMBER FOR THIS COMMAND
    PRTSQN;				! SEQUENCE NUMBER OF LAST COMMAND TO PRINT "."

EXTERNAL
    FSTRNG: BYTE;	! AREA TO SAVE SEARCH STRINGS


GBLNVROUTINE (CMDF)=
BEGIN			!  F COMMAND - FIND A STRING SOMEWHERE
LOCAL
    NUM,
    FDSWT,
    I,
    ADR;
NUM=1;
FDSWT=0;
FSTRLST[1] = FSTRNG;
I=GETSTR(0,6,FSTRLST[1],FSTRNG,FSTRGSIZ,PLIT ('F*'));
IF .I GEQ 0 THEN
	BEGIN
	IF .I GTR 0 THEN FSTRLST[0]=.I;
	RDCMD();
	SOSFLG[FSFLG]=.SOSFLG[FSFLG] AND NOT
		(FAOPT OR FNOPT OR FXOPT OR FEOPT OR NOMATCH);
	IF (.SOSFLG AND EXACT) NEQ 0 THEN
		SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR FEOPT;
	IF .SCTYP EQL SCEOF OR .SCSYM EQL ', ' THEN
		BEGIN
		GETDOT(FRANGE);
		FRANGE[1]=.FRANGE[1]+1;
		FRANGE[2]=.PAGHIG;
		FRANGE[3]=INF;
		END
	ELSE
		GETRNG(FRANGE);
	WHILE .SCSYM EQL ', ' DO
		BEGIN
		SCAN();
		IF .SCSYM EQL 'A ' THEN
			BEGIN
			SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR FAOPT;
			BADIFRO;
			END
		ELSE
		IF .SCSYM EQL 'X ' THEN
			BEGIN
			BADIFRO;
			SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR FXOPT;
			END
		ELSE
		IF .SCSYM EQL 'N ' THEN
			SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR FNOPT
		ELSE
		IF .SCSYM EQL 'E ' THEN
			SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR FEOPT
		ELSE
		IF .SCTYP EQL SCNUM THEN
			NUM=.SCSYM
		ELSE
		IF .SCSYM EQL '- ' THEN
			SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR NOMATCH
		ELSE
			BADCOMMAND;
		SCAN();
		END;
	IF .SCTYP NEQ SCEOF THEN BADCOMMAND;
	END
ELSE
	BEGIN
	GETDOT(FRANGE);
	FRANGE[1]=.FRANGE[1]+1;
	IF .FRANGE[1] GTRU .FRANGE[3] AND
		.FRANGE[0] GEQU .FRANGE[2] THEN
		CMDABO(BADSNF);
	END;
IF .FSTRLST[0] EQL 0 THEN CMDABO(BADISS);
ADR=FINDR(FRANGE);
SOSFLG[FSFLG]=.SOSFLG[FSFLG] AND NOT EMATCH;
IF (.SOSFLG[FSFLG] AND FEOPT) NEQ 0 THEN
	SOSFLG[FSFLG]=.SOSFLG[FSFLG] OR EMATCH;
DO	BEGIN
	LOCAL
	    I;
	I=SEARCH(.ADR,0,FSTRLST[0],FRANGE,SRRET);
	IF .I LSS 0 THEN CMDABO(BADISS) ELSE
	IF .I EQL 0 THEN
		IF .FDSWT THEN EXITLOOP
			ELSE CMDABO(BADSNF);
	CURLIN=.LINLIN(.SRRET[0]);	!SETDOT BUT LEAVE CURLPG ALONE
	CURPAG=.LINPAG(.SRRET[0]);
	ADR=NXTLINE(.SRRET[0],1);
	IF (.SOSFLG[FSFLG] AND (FAOPT OR FXOPT)) NEQ 0 THEN
		BEGIN
		LOCAL
		    PRTCNT,
		    PRECMD;
		PRTCNT=0;
		IF (.SOSFLG[FSFLG] AND FAOPT) NEQ 0 THEN
			BEGIN
			IF (.SOSFLG[FSFLG] AND NOMATCH) EQL 0
				THEN PRTCNT=.SRRET[1];
			PRECMD=0;
			END
		ELSE	BEGIN
			IF (.SOSFLG[FSFLG] AND FNOPT) NEQ 0 THEN
				PRECMD=PLIT (%STRING(%CHAR(19),'I'))
		 	ELSE	PRECMD=PLIT (%STRING(%CHAR(9),'I'));
			END;
		ADR=ALTER(.SRRET[0],.PRTCNT,.PRECMD,0);
		END
	ELSE
		BEGIN
		LOCAL
		    PRTCTL;
		PRTCTL=(IF (.SOSFLG[FSFLG] AND FNOPT) NEQ 0
			THEN 25 ELSE 15);
		PRTLIN(.SRRET[0],.PRTCTL);
		IF .PRTCTL EQL 15 THEN PRTSQN=.CMDSQN;
		END;
	GETDOT(FRANGE);
	FDSWT=1;
	END UNTIL PSTRNG(.ADR,FRANGE) OR
		(NUM=.NUM-1) LEQ 0;
END;


END ELUDOM
