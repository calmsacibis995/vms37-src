	.TITLE	SOSSWT - SWITCH TABLES
	.IDENT	/V03000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	22-MAR-77
;
; MODIFIED BY:
;
;	020702	PHL0702		Peter H. Lipman		21-May-1980
;
;			Switch value for /OPTION is changed from 
;		8 characters to 7.
;
	.MCALL	CSI$
	CSI$
	.MCALL	CSI$SW,CSI$SV,CSI$ND
;
; VALUES IN GIVWRD
;
VALALT	=	1		;ALTMODE
VALMAT	=	2		;MATCH
VALDOT	=	3		;DOT (CURRENT POSITION)
VALTER	=	4		;TERMINAL NAME
VALLOC	=	5		;LOCATION
VALSTR	=	6		;STRINGS
VALBIG	=	7		;BIG (HIGHEST PAGE NUMBER)
VALNAM	=	8.		;NAME (FILE NAME)
VALIDE	=	9.		;IDENTIFICATION (OF SOS VERSION)
VALHEL	==	10.		;HELP
VALERR	=	11.		;ERROR
VALEVE	=	12.		;EVENTS *****DEBUGGING*****

	CODE$	SWT
;
; COMPLETE THE SETTING OF SWITCHES
;
SWSET::	BIT	#BASIC!RMSFIL,CSIBLK+C.MKW1 ;IF /BAS OR /NOBAS OR /RMS OR /-RMS
	BEQ	30$
	BIS	#REQCPY,SOSFLG	;GUARANTEE A COPY
30$:	ROR	ALTSWT		;C = BIT 0 (/ALT)
	BCC	40$		;BRANCH IF NOT SET
	MOVB	ALTSTR,ALTCHR	;SET NEW ALTMODE CHAR
40$:	ROR	ALTSWT		;C = BIT 1 (/MAT)
	BCC	50$		;BRANCH IF NOT SET
	MOVB	MATSTR,MATCHR	;SET NEW SPECIAL MATCH CHAR
50$:	ROR	ALTSWT		;C=BIT 2 (/TERMINAL)
	BCC	60$		;BRANCH IF NOT SET
	MOV	#TRMNAM,-(SP)	;ADDRESS OF TERMINAL NAME STRING
	JSR	PC,TRMSET	;GO SET SCOPE INFORMATION
	TST	(SP)+		;CLEAN OFF STACK
60$:
LODSWT::RTS	PC		;ENTRY TO AUTOLOAD THE SWITCH TABLES
;
; SETSY0() - SET DEFAULT DEVICE, DIRECTORY TO SY0
;
SETSY0::MOV	#"SY,DFDEV	;DEFAULT DEVICE IS "SY
	CLR	DFUNIT		;DEFAULT UNIT IS 0

	.IF	NDF,R$$STS	;RSX ONLY
	CLR	DFDIR		;USE STANDARD DEFAULT DIRECTORY
	.ENDC

	RTS	PC

;
; SWITCH TABLES
;
	PLIT$	SWT

GIVTBL::CSI$SW	.,	VALDOT,	GIVWRD,	SET		,,,EXACT	;=.
	CSI$SW	ERR,	VALERR,	GIVWRD,	SET		,,,LONG		;=ERROR
	CSI$SW	LOC,	VALLOC,	GIVWRD,	SET		,,,LONG		;=LOCATION
	CSI$SW	STR,	VALSTR,	GIVWRD,	SET		,,,LONG		;=STRING
	CSI$SW	BIG,	VALBIG,	GIVWRD,	SET		,,,LONG		;=BIG
	CSI$SW	NAM,	VALNAM,	GIVWRD,	SET		,,,LONG		;=NAME
	CSI$SW	IDE,	VALIDE,	GIVWRD,	SET		,,,LONG		;=IDENT
	CSI$SW	ID,	VALIDE,	GIVWRD,	SET		,,,EXACT	;=IDENT

	.IF	DF,R$$DBG
	CSI$SW	EVE,	VALEVE,	GIVWRD,	SET		,,,LONG		;=EVENT (DEBUG)
	.ENDC

	CSI$SW	SUB,	SUBS,	GIVW2,	SET		,,,LONG		;=SUBS

ISWTAB::				;ONCE ONLY SETTABLE SWITCHES
	CSI$SW	BUF,	BUFSZ,	GIVW2,	SET,,	T$BUF	,LONG		;/BUFFER SIZE

SWTAB::
	CSI$SW	ALT,	VALALT,	ALTSWT,	SET,,	T$ALT	,LONG		;/ESCAPE:X
	CSI$SW	BAK,	NOBAK,	SOSFLG,	CLEAR,	NEG	,,LONG		;/BAK
	CSI$SW	BAS,	BASIC,	SOSFLG,	SET,	NEG	,,LONG		;/BASIC
	CSI$SW	DEC,	DECIDE,	SOSFLG,	SET,	NEG	,,LONG		;/DECIDE
	CSI$SW	DEL,	DELETE,	SOSFLG,	SET,	NEG	,,LONG		;/DELETE
	CSI$SW	ESC,	VALALT,	ALTSWT,	SET,,	T$ALT	,LONG		;/ESCAPE:X
	CSI$SW	EXA,	EXACT,	SOSFLG,	SET,	NEG	,,LONG		;/EXACT
	CSI$SW	EXP,	EXPERT,	SOSFLG,	SET,	NEG	,,LONG		;/EXPERT
	CSI$SW	HEL,	VALHEL,	GIVWRD,	SET,,	T$HEL	,LONG		;/HELP:XX
	CSI$SW	INC,	ISTEP,	GIVW2,	SET,,	T$INC	,LONG		;/INCREMENT:XX
	CSI$SW	ISA,	ISAVE,	GIVW2,	SET,,	T$ISA	,LONG		;/ISAVE:X
	CSI$SW	LEN,	LENN,	GIVW2,	SET,,	T$LEN	,LONG		;/LENGTH
	CSI$SW	LIN,	NOLINS,	SOSFLG,	CLEAR,	NEG	,,LONG		;/NOLINES
	CSI$SW	LMA,	LMAR,	GIVW2,	SET,,	T$LMA	,LONG		;/LMAR:X
	CSI$SW	LOW,	NOLOW,	SOSFLG,	CLEAR,	NEG	,,LONG		;/LOWER
	CSI$SW	MAT,	VALMAT,	ALTSWT,	SET,,	T$MAT	,LONG		;/MATCH:X
	CSI$SW	MAX,	MAXLN,	GIVW2,	SET,,	T$MAX	,LONG		;/MAXLN:X
	CSI$SW	NOV,	EXPERT,	SOSFLG,	CLEAR,	NEG	,,LONG		;/NOVICE
	CSI$SW	NSE,	SEPARA,	SOSFLG,	SET,	NEG	,,LONG		;/NONSEPARATOR
	CSI$SW	NUM,	NONUM,	SOSFLG,	CLEAR,	NEG	,,LONG		;/NUMBER
	CSI$SW	OLD,	NOBAK,	SOSFLG,	CLEAR,	NEG	,,LONG		;/OLD
	CSI$SW	OPT,	NOOPT,	SOSFLG,	CLEAR,NEG,T$OPT	,LONG		;/NOOPTION
	CSI$SW	PLI,	PLINES,	GIVW2,	SET,,	T$PLI	,LONG		;/PLINES:X
	CSI$SW	PMA,	PMAR,	GIVW2,	SET,,	T$PMA	,LONG		;/PMAR:X
	CSI$SW	PRI,	PRINTR,	GIVW2,	SET,,	T$PRI	,LONG		;/PRINTER:X
	CSI$SW	REA,	RONLY,	SOSFLG,	SET		,,,LONG		;/READ
	CSI$SW	RON,	RONLY,	SOSFLG,	SET		,,,LONG		;/RONLY
	CSI$SW	R,	RONLY,	SOSFLG,	SET		,,,EXACT		;/R

	.IF	DF,R$$STS
	CSI$SW	RMS,	RMSFIL,	SOSFLG,	SET,	NEG	,,LONG		;/RMS
	.ENDC

	CSI$SW	SAV,	SAVEN,	GIVW2,	SET,,	T$SAV	,LONG		;/SAVE:X
	CSI$SW	SEP,	SEPARA,	SOSFLG,	SET,	NEG	,,LONG		;/SEPARATOR
	CSI$SW	SEQ,	UNSEQ,	SOSFLG,	CLEAR,	NEG	,,LONG		;/SEQUENCE
	CSI$SW	STA,	STARTN,	GIVW2,	SET,,	T$STA	,LONG		;/START:X
	CSI$SW	STE,	STEPN,	GIVW2,	SET,,	T$STE	,LONG		;/STEP:X
	CSI$SW	TER,	VALTER,	ALTSWT,	SET,,	T$TER	,LONG		;/TERM:X
	CSI$SW	UNS,	UNSEQ,	SOSFLG,	SET,	NEG	,,LONG		;/UNSEQ
	CSI$ND


T$ALT:	CSI$SV	ASCII,		ALTSTR,		1
	CSI$ND

T$BUF:	CSI$SV	DECIMAL,	BUFSZ*2+SOSFLG,	2
	CSI$ND

T$HEL:	CSI$SV	DECIMAL,	HELPAG,2
	CSI$ND

T$INC:	CSI$SV	DECIMAL,	ISTEP*2+SOSFLG,	2
	CSI$ND
T$ISA:	CSI$SV	DECIMAL,	ISAVE*2+SOSFLG,	2
	CSI$ND

T$LEN:	CSI$SV	DECIMAL,	LENN*2+SOSFLG,	2
	CSI$ND

T$LMA:	CSI$SV	DECIMAL,	LMAR*2+SOSFLG,	2
	CSI$ND

T$MAT:	CSI$SV	ASCII,		MATSTR,		1
	CSI$ND

T$MAX:	CSI$SV	DECIMAL,	MAXLN*2+SOSFLG,	2
	CSI$ND

T$OPT:	CSI$SV	ASCII,		OPTNAM,		7
	CSI$ND

T$PLI:	CSI$SV	DECIMAL,	PLINES*2+SOSFLG	,2
	CSI$ND

T$PMA:	CSI$SV	DECIMAL,	PMAR*2+SOSFLG,	2
	CSI$ND

T$PRI:	CSI$SV	DECIMAL,	PRINTR*2+SOSFLG	,2
	CSI$ND

T$SAV:	CSI$SV	DECIMAL,	SAVEN*2+SOSFLG,	2
	CSI$ND

T$STA:	CSI$SV	DECIMAL,	STARTN*2+SOSFLG,	2
	CSI$ND

T$STE:	CSI$SV	DECIMAL,	STEPN*2+SOSFLG,	2
	CSI$ND

T$TER:	CSI$SV	ASCII,		TRMNAM,		7
	CSI$ND
	DATA$	SWT

HELPAG::.BLKW	1		;HELP STARTING PAGE NUMBER
ALTSWT::.BLKW	1		;BIT 0 SET IF /ALT
				;BIT 1 SET IF /MAT
				;BIT 2 SET IF /TERMINAL
ALTSTR::.BYTE	'$		;DEFAULT ALTMODE CHARACTER
MATSTR::.BYTE	'?		;DEFAULT SPECIAL MATCH CHARACTER


	.END
