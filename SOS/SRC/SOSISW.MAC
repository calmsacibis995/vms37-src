	.TITLE	SOSISW - INITIALIZE SWITCHES VIA SWITCH.INI
	.IDENT	/V03000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	27-FEB-76
;
;	06.10	19-JAN-79	PETER H. LIPMAN
;
;	MOVE SWSET SUBROUTINE TO SOSSWT MODULE, LEAVING THIS MODULE
;		WITH ONLY CODE FOR "SWITCH.INI" PROCESSING.
;
	.MCALL	CSI$
	CSI$

	.MCALL	SWINI$

	DATA$	ISW
MKW1:	.BLKW	1		;OR OF MASK WORDS FROM
MKW2:	.BLKW	1		;ITERATIVE CALLS TO SWINI
SAVOPT:	.BLKW	5		;SAVED OPTION NAME, EXTRA 0
RECBUF:	.BLKB	80.		;RECORD BUFFER FOR SWITCH INI LOGIC

	CODE$	ISW
PRGNAM:	.ASCII	/SOS/		;PROGRAM NAME
	.EVEN
INITSW::
	MOV	#10.,R0		;TO PREVENT INFINITE ITERATION
	CLR	MKW1		;INIT MASK WORDS
	CLR	MKW2
10$:	MOV	OPTNAM,SAVOPT	;MOVE THE OPTION STRING
	MOV	OPTNAM+2,SAVOPT+2
	MOV	OPTNAM+4,SAVOPT+4
	MOV	OPTNAM+6,SAVOPT+6
	CLR	OPTNAM
	MOV	R0,-(SP)
	SWINI$	#CSIBLK,#7,#SWTAB,#RECBUF,#80.,#PRGNAM,,#SAVOPT
	MOV	(SP)+,R0
	BCS	15$
	BIS	CSIBLK+C.MKW1,MKW1 ;OR THE MASKS FROM EACH CALL
	BIS	CSIBLK+C.MKW2,MKW2
	BIT	#NOOPT,CSIBLK+C.MKW2 ;/OPTION SPECIFIED?
	BEQ	12$		;BRANCH IF NO, ALL DONE
	SOB	R0,10$		;GO PROCESS ANOTHER, UNLESS TOO MANY
12$:	MOV	MKW1,CSIBLK+C.MKW1 ;LEAVE THE OR OF SWITCHES
	MOV	MKW2,CSIBLK+C.MKW2 ;IN THE CSIBLK
	RTS	PC
;
; ERROR FROM SWINI
;
15$:	MOV	R1,-(SP)	;SAVE A REGISTER
	MOV	#ISWER2,-(SP)	;"I/O ERROR ON SWITCH.INI"
	MOV	CSIBLK+C.FILD,R1 ;SIZE OF BAD RECORD IF BAD RECORD
	BEQ	20$		;IF ZERO, THEN FCS ERROR
	MOV	#ISWER1,(SP)	;"BAD RECORD IN SWITCH.INI"
20$:	JSR	PC,PRINTC	;PRINT WITH CR,LF;
	MOV	R1,(SP)		;SIZE OF BAD RECORD OR 0
	MOV	CSIBLK+C.FILD+2,-(SP) ;ADR OF BAD RECORD OR ERROR CODE
	TST	R1		;0 MEANS ERR CODE IN C.FILD+2
	BEQ	25$		;THEN PRINT FCS ERROR MESSAGE
	JSR	PC,TYPSTR	;TYPE THE BAD RECORD
	JSR	PC,TYPECR	;AND CR,LF
	BR	30$
25$:	JSR	PC,FCSERP	;PRINT FCS ERROR CODE
30$:	CMP	(SP)+,(SP)+	;CLEAN UP THE STACK
	MOV	(SP)+,R1
	RTS	PC
;
; ERROR MESSAGES
;
	PLIT	ISWER1,</Bad record found in SWITCH.INI/>
	PLIT	ISWER2,<$I/O error opening or reading SWITCH.INI$>

	.END
