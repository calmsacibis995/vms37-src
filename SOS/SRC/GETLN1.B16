MODULE GETLN1 (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!	020704	PHL0704		Peter H. Lipman		23-May-1980
!
!	Make "/" followed by nothing mean "/."
!	Replace SELECT with SELECTONE to improve the code

!
!	GETLNP
!
!	THIS ROUTINE WILL PARSE A LINE/PAGE SPECIFICATION
!	AS GIVEN IN A COMMAND.  IT RETURNS A TWO WORD AREA
!	WITH THE PAGE NUMBER IN THE FIRST WORD, AND LINE
!	NUMBER IN THE SECOND.  
!	THE FIRST SYMBOL OF THE PG/LIN MUST BE PRESENT IN
!	THE SCAN AREA, AND ON EXIT, THE SYMBOL FOLLOWING THE
!	LINE/PAGE WILL BE IN THE SCAN AREA.
!
!	PARAMETERS -
!		BUF - ADDRESS OF BUFFER HEADER
!		RET - ADDRESS OF TWO WORD RETURN AREA
!
!	RETURNS -
!		RETURN AREA SET WITH PAGE/LINE NUMBER
!		VALUE  RETURNED IS 1 IF LINE NUM GIVEN,
!			2 IF PAGE NUM, 3 IF BOTH.
!

!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	SCAN,		! COMMAND LINE SCANNER
	CMDABO;		! COMMAND ABORT


GBLROUTINE (GETLN1(RET,RET2,RET3))=
BEGIN
LOCAL
    CHAR,
    OFFSET,
    SAID,
    ADR;
MAP
    RET: REF VECTOR;
LABEL L2;
OFFSET=0;
SAID=0;
.RET3=0;
L2:BEGIN
CASE .SCTYP FROM 0 TO 4 OF
    SET
    !    0 - END OF LINE SYMBOL
	[0]:
	    LEAVE L2;
    ! 	 1 - SOME ALPHABETIC SYMBOL
	[1]:
	    LEAVE L2;
    !	 2 - NUMBER
	[2]:
	    BEGIN
	    RET[1]=.SCSYM;
	    SAID=1;
	    END;
    !	 3 - SEPARATER - SPECIAL SYMBOL
	[3]:
	    SELECTONE .SCSYM[0] OF
		    SET
		  ['^']:	BEGIN
			    RET[1]=0;
			    SAID=1;
			    END;
		  ['*']:	BEGIN
			    RET[1]=INF;
			    SAID=1;
			    END;
		  ['.']:	BEGIN
			    RET[1]=.CURLIN;
			    SAID=1;
			    END;
		  ['/']:	BEGIN
			    RET[1]=0;
			    RET[0]=.CURPAG;
			    SAID=2;
			    END;

		  [OTHERWISE]:
			    LEAVE L2;
		    TES;
	[4]:
    TES;
IF .SCSYM[0] NEQ '/' OR .SCTYP NEQ SCSEP THEN SCAN();
IF .SCTYP NEQ SCSEP THEN 
	LEAVE L2;
OFFSET=0;
WHILE 1 DO SELECTONE .SCSYM[0] OF
	SET
      ['+']:	BEGIN
		SCAN();
		IF .SCTYP EQL 2 THEN
			OFFSET=.OFFSET+.SCSYM
		ELSE
			CMDABO(BADLPG);
		SCAN();
		END;
      ['-']:	BEGIN
		SCAN();
		IF .SCTYP EQL SCNUM THEN
			OFFSET=.OFFSET-.SCSYM
		ELSE
			CMDABO(BADLPG);
		SCAN();
		END;
      ['/']:	EXITLOOP;
      [OTHERWISE]:
		LEAVE L2;
	TES;
IF .SCSYM[0] EQL '/' THEN
	BEGIN
	SCAN();
	CASE .SCTYP FROM 0 TO 4 OF
	    SET
	    !    0 - END OF LINE
		[0]:
		    ;
	    !    1 - ALPHA SYMBOL
		[1]:
		    ;
	    !    2 - NUMBER
		[2]:
		    BEGIN
		    RET[0]=.SCSYM;
		    SCAN();
		    SAID=.SAID OR 2;
		    END;
	    !    3 - SEPARATOR
		[3]:
		    SELECTONE .SCSYM[0] OF
			    SET
			  ['^']:	BEGIN
				    RET[0]=.PAGLOW;
				    SCAN();
				    SAID=.SAID OR 2;
				    END;
			  ['*']:	BEGIN
				    RET[0]=.PAGHIG;
				    SCAN();
				    SAID=.SAID OR 2;
				    END;
			  ['.']:	BEGIN
				    RET[0]=.CURPAG;
				    SCAN();
				    SAID=.SAID OR 2;
				    END;
			    TES;
		[4]:
	    TES;
	END;
.RET3=0;
WHILE 1 DO
IF .SCSYM[0] EQL '-' THEN
	BEGIN
	SCAN();
	IF .SCTYP NEQ SCNUM THEN CMDABO(BADRNG);
	IF .RET[0] LSSU INF-1 THEN
		RET[0]=.RET[0]-.SCSYM
	ELSE
		.RET3=..RET3-.SCSYM;
	SCAN();
	END
ELSE
IF .SCSYM[0] EQL '+' THEN
	BEGIN
	SCAN();
	IF .SCTYP NEQ SCNUM THEN CMDABO(BADRNG);
	IF .RET[0] LSSU INF-1 THEN
		RET[0]=.RET[0]+.SCSYM
	ELSE
		.RET3=..RET3+.SCSYM;
	SCAN();
	END
ELSE
	EXITLOOP;
END;
.RET2=.SAID;
RETURN .OFFSET;
END;


END ELUDOM
