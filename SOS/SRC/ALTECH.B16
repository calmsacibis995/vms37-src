MODULE ALTECHR (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!
!
!	05	4-MAR-78	PETER H. LIPMAN
!
!	DELETED UNUSED REFERENCE TO NEWLIN
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	LISTEN;		! READ A CHAR FROM TTY

EXTERNAL
    NCHR: M1TO1;
EXTERNAL
    OLINPT: REF VECTOR[,BYTE];
EXTERNAL
    NSLSH;

GBLROUTINE (ALTECHR(DIRECT,N))=
BEGIN
LOCAL
    POS: REF VECTOR[,BYTE];
LOCAL
    CHAR: BYTE,
    CHAR2: BYTE,
    CHAR3: BYTE;
CHAR2=CHAR=LISTEN(0);
IF (.SOSFLG AND EXACT) EQL 0 THEN
	BEGIN
	CHAR3=.CHAR2 AND NOT %O'040';
	IF (.CHAR3 GEQ 'A') AND (.CHAR3 LEQ 'Z') THEN
		BEGIN
		IF .CHAR2 EQL .CHAR3
			THEN CHAR2=.CHAR2 OR %O'040'
			ELSE CHAR2=.CHAR3;
		END;
	END;
POS=.NCHR[.DIRECT];
IF .POS[0] EQL .CHAR OR .POS[0] EQL .CHAR2 THEN 
	POS=.POS+.DIRECT;
UNTIL .N EQL 0 DO
	IF .POS[0] EQL .CHAR OR .POS[0] EQL .CHAR2 THEN
		BEGIN
		N=.N-.DIRECT;
		POS=.POS+.DIRECT;
		END
	ELSE
	IF .POS[0] EQL 0 THEN RETURN 0
	ELSE
	POS=.POS+.DIRECT;
RETURN .POS-.NCHR[.DIRECT]-(.DIRECT EQL 1);
END;


END ELUDOM
