MODULE ALTTYPEC (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!	020706	PHL0706		Peter H. Lipman		18-Jan-1982
!
!		<TAB> was not being displayed for hardcopy mode.
!
!	020705	PHL0705		Peter H. Lipman		22-Oct-1980
!
!		Echo all non-printing characters with the "^" or
!	the <FF> convention.  ALTUPDPOS no longer takes a repetition count
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	PRINT,		! PRINT A MESSAGE ON THE TERMINAL
	CTRLR,		! REPRINT THE LINE AS FOR CONTROL R
	ECHCTL,		! GET ECHO FOR CONTROL CHARACTER
	TYPECR,		! TYPE <CR><LF>
	TYPE;		! TYPE OUT A CHAR

EXTERNAL
    NCHR: M1TO1;
EXTERNAL
    OLINPT: REF VECTOR[,BYTE];
EXTERNAL
    NEWLNA: REF VECTOR[,BYTE];		! POINTER TO NEW LINE BUFFER
EXTERNAL
    INSFLG,				! ALTER/INSERT FLAG BITS
    NSLSH,				! COUNT OF "\" CURRENTLY OUTPUT
    FSLSH,				! FLAG INDICATING THAT A \...\ HAS BEEN OUTPUT
    HSLSH,				! HORIZONTAL POSITION OF END OF \...\
    TTSIZE,				! WIDTH OF TERMINAL
    HORPOS,				! HORIZONTAL POSITION (FOR SCOPE RUBOUT)
    VERPOS;				! VERTICAL POSITION (FOR SCOPE RUBOUT)
EXTERNAL
    ALTCHR: BYTE;	! ADR OF CHAR WHICH WHEN INPUT
			! IS REPLACED BY ALTMODE
EXTERNAL
    TTSCP: BYTE;	! GTR 0 IF TERMINAL IS A SCOPE

BIND  ERASE=PLIT (%STRING(%CHAR(8),' ',%CHAR(8)));

GBLNVROUTINE (ALTUPDPOS(CHAR,PTSW))=
!
! UPDATE THE HORIZONTAL AND VERTICAL POSITION FOR THE SPECIFIED
! CHARACTER, PRINTING THE CHARACTER IF PTSW IS SET.
!
BEGIN
LOCAL CHAR1;
CHAR1=.CHAR AND %O'177';
IF .CHAR1 EQL %O'11' THEN		! <TAB>
    DECR I FROM (((.HORPOS+8) AND (NOT 7))-.HORPOS) TO 1
	DO ALTUPDPOS(' ',.PTSW)
ELSE IF .INSFLG GEQ 0 AND
  (.CHAR LSS ' ' OR .CHAR EQL %O'177') THEN	! CONTROL OR DEL
    BEGIN
    LOCAL
	CHRSTR	: VECTOR[6,BYTE,UNSIGNED],
	POS		: REF VECTOR[,BYTE],
	N;
    N=ECHCTL(.CHAR,CHRSTR);
    POS=CHRSTR[0];
    DECR I FROM .N TO 1 DO
	BEGIN
	ALTUPDPOS(.POS[0],.PTSW);
	POS=.POS+1;
	END;
    END
ELSE
    BEGIN
    IF .CHAR1 GEQ ' ' THEN HORPOS=.HORPOS+1
    ELSE IF .CHAR1 EQL %O'15' THEN    ! <CR>
	BEGIN
	HORPOS=0;
	HSLSH=-1;
	END
    ELSE IF .CHAR1 EQL %O'12' THEN VERPOS=.VERPOS+1;    ! <LF>
    IF .PTSW GTR 0 THEN
	BEGIN
	TYPE(.CHAR1);
	IF .HORPOS EQL .TTSIZE THEN TYPECR();
	END;
    IF .HORPOS GEQ .TTSIZE THEN
	BEGIN
	HORPOS=.HORPOS-.TTSIZE;
	HSLSH=-1;
	VERPOS=.VERPOS+1;
	END;
    END;
END;
GBLNVROUTINE (ALTTYPEC(CHARACTER,SLASH))=
!
!	CHARACTER = CHARACTER TO BE ECHOED
!	SLASH	= 0 IF THIS CHARACTER IS NOT TO BE ECHOED INSIDE "\"
!		= N>0 IF THIS CHARACTER IS TO BE ECHOED INSIDE N "\"
!		= N<0 IF THIS CHARACTER SHOULD BE ERASED IF TERMINAL IS
!		  A SCOPE OR ECHOED INSIDE -N "\" IF NOT.
!
BEGIN
LOCAL
    CHAR,
    N;
CHAR=.CHARACTER;
N=.SLASH;
IF .N LSS 0 THEN N=-.N;
IF (.TTSCP GTR 0) AND (.SLASH LSS 0) THEN
	BEGIN
!
! IF SLASH FLAG IS SET THEN REPRINT THE LINE, ERASING THE \...\
!
	IF .HORPOS EQL 0 THEN CTRLR()	! IF ABOUT TO GO TO END OF THE
					! PREVIOUS LINE, RETYPE THE LINE
	ELSE IF .FSLSH GTR 0 AND	! IF A "\...\" SEQUENCE EXISTS
	    (.HORPOS LEQ .HSLSH		! AND WE JUST BACKED UP INTO IT
	    OR .NSLSH NEQ 0)		! OR WE ARE IN THE MIDDLE OF IT
		THEN CTRLR()		! THEN RETYPE THE LINE
	ELSE IF .CHAR GEQ ' ' AND .CHAR NEQ %O'177' THEN
!
! TAKE CARE OF ALL CHARACTERS BUT <DEL> AND THE CONTROL CHARACTERS
!
		BEGIN
		HORPOS=.HORPOS-1;
		PRINT(ERASE);
		END
	ELSE IF .CHAR EQL 'I'-64 THEN
!
! TABS ARE REALLY SPECIAL, FIGURE OUT HOW MANY BACKSPACES TO ISSUE.
! THIS CANNOT WORK IF THE LINE IS GARBLED AT ALL BY A /.../ SEQUENCE.
!
	    IF .FSLSH NEQ 0 THEN CTRLR()
	    ELSE
		BEGIN
		LOCAL
		    POS: REF VECTOR[,BYTE];
		LOCAL
		    N,
		    OLDPOS;
		OLDPOS=.HORPOS;
		IF (.SOSFLG AND NONUM) NEQ 0 THEN HORPOS=0 ELSE HORPOS=8;
		VERPOS=0;
		POS=NEWLNA[8];
		DECR I FROM (.NCHR[-1]-NEWLNA[7]) TO 1 DO
			BEGIN
			ALTUPDPOS(.POS[0],0);
			POS=.POS+1;
			END;
		N=.OLDPOS-.HORPOS;
		IF .N LEQ 0 THEN
			BEGIN
			VERPOS=.VERPOS+1;
			CTRLR();
			END
		ELSE DO	BEGIN
			PRINT(ERASE);
			END WHILE (N=.N-1) NEQ 0;
		END
	ELSE IF .INSFLG GEQ 0 THEN
!
! TAKE CARE OF <DEL> AND ALL CONTROLS EXCEPT <TAB> UNLESS INSERT COMMAND
!
		BEGIN
		LOCAL
		    CHRCNT,
		    POS		: REF VECTOR[,BYTE],
		    CHRSTR	: VECTOR[6,BYTE,UNSIGNED];
		POS=CHRSTR[0];
		CHRCNT=ECHCTL(.CHAR,.POS);
		IF .CHRCNT LEQ .HORPOS THEN
			BEGIN
			DECR I FROM .CHRCNT TO 1 DO
			    BEGIN
			    ALTTYPEC(.POS[0],.SLASH);
			    POS=.POS+1;
			    END;
			END
		ELSE	CTRLR();
		END
	ELSE CTRLR();
	END
ELSE
	BEGIN
	IF .N NEQ .NSLSH THEN
		BEGIN
		FSLSH=.FSLSH+1;
		DECR I FROM (.N+.NSLSH) TO 1 DO ALTUPDPOS('\',1);
		NSLSH=.N;
		IF .NSLSH EQL 0 THEN HSLSH=.HORPOS;
		END;
	ALTUPDPOS(.CHAR,1);
	END;
END;
GBLNVROUTINE (ALTBOL(DIRECT))=
IF .FSLSH GTR 0 AND .DIRECT LSS 0 AND .TTSCP GTR 0 THEN CTRLR();


END ELUDOM
