MODULE COPYXZ (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!
!	04	20-SEP-77	PETER H. LIPMAN
!
!	CORRECT DOT IF COPY COMMAND IS ABORTED (.ADR EQL 0)
!	CORRECT PAGHIG, 1 TOO BIG IF COPY TO END OF LAST PAGE
!		AND RANGE COPIED ENDED IN *
!
!	06	28-JUL-78	PETER H. LIPMAN
!
!	AFTER THE DELLINE LOOP, THE LAST LINE IS DELETED WITHOUT
!		CALLING DELLINE.  THE RESULTING NEW BUFLST MUST
!		HAVE FLGWRP SHUT OFF IF IT WAS SET.
!

!
!	COPYXZ - CLEAN UP COPY BUFFER AFTER COMPLETION
!
!	THIS ROUTINE FINISHES OFF THE COPY COMMAND, BY
!	CAUSING THE NORMAL INPUT FILE TO BE RESTORED AS INPUT,
!	LEAVING ALL THE LINES COPIED INTO THE FILE IN THE BUFFER.
!	THE NEXT LINE READ IS TO HAVE A PAGE NUMBERED BY THE
!	PARAMETER.

!	V02.02	09-JUN-76	WTM
!	V02.01	21-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	BUFINIT,	! INIT THE BUFFER AGAIN
	PRVLINE,	! BACK UP ONE LINE
	DELLINE,	! DELETE LINE AFTER END OF COPIED TEST
	CLOSE,		! CLOSE THE COPY FILE
	SETDOT,		! SET CURRENT LOCATION
	GETFSR,		! GET BACK FSR GIVE-UP AREA
	GETLINE;	! READ IN LINE FROM A FILE

EXTERNAL
    COPFLG,				! SAVED SOSFLG VALUE
    COPSFL,				! SAVED INPUT FILE FDB PTR
    COPLPG: VECTOR[5],			! RANGE SAVE AREA
    COPHIG,				! SAVED HIGHEST PAGE NUMBER
    COPERF,				! ERROR RECOVERY FLAG
    FILECOP;				! COPY FILE FDB

GBLNVROUTINE (COPYXZ(ADR,PGNO))=
BEGIN
COPERF=0;
IF .ADR EQL 0 THEN BUFINIT()
ELSE
	BEGIN
	LOCAL
	    ADR2,
	    LL;
	UNTIL .ADR EQL .BUFLST DO
		BEGIN
		ADR=DELLINE(.ADR);
		END;
	ADR2=PRVLINE(.ADR,1);
	LL=.LINLEN(.ADR)*2;
	IF .LL EQL 0 THEN LL=10;
	IF .BUFFIR EQL .BUFSTRT THEN
		BUFFR2=.BUFFR2+.LL
	ELSE
		BUFFR1=.BUFFR1+.LL;
	LINFLG(.ADR2)=.LINFLG(.ADR2) AND NOT FLGWRP;
	BUFLST=.ADR2;
	SETDOT(.BUFLST);
	BUFPG1=.LINPAG(.BUFFIR);
	BUFPG1+2=.LINLIN(.BUFFIR);
	END;
CLOSE(FILECOP);
GETFSR();
BUFPG2+2=0;
BUFPG2=.PGNO;
SOSFLG=(.SOSFLG AND NOT (NOLINS OR BASIC OR RONLY)) OR
	(.COPFLG AND (NOLINS OR BASIC));
IF .COPLPG[2] GEQU INF-1 THEN
	BEGIN
	COPHIG=.PGNO;
	IF .ADR NEQ 0 THEN
		IF .COPHIG GTRU .CURPAG THEN
			COPHIG=.COPHIG-1;
	PGNO=.COPLPG[2];
	END;
BUFPG2=LINPAG(GETLINE(.COPSFL))=.PGNO;
IF .ADR EQL 0 THEN
	BEGIN
	BUFPG1=.PGNO;
	SETDOT(COPLPG-LINPAG(0));
	END;
BUFWRP=.BUFWRP+1;
PAGHIG=.COPHIG;
IF .PAGHIG NEQ INF THEN
	IF .COPLPG[2] LSSU INF-1 AND .PGNO LSSU INF-1 THEN
		PAGHIG=.PAGHIG+.PGNO-.COPLPG[2];
END;

END ELUDOM

