MODULE ALTSHIFT (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!
!
!	05	4-MAR-78	PETER H. LIPMAN
!
!	DELETED UNUSED REFERENCE TO NEWLIN
!
!	06.07	6-SEP-78	PETER H. LIPMAN
!
!	ADDED SCOPE SUPPORT TO ALTER MODE
!
!	06.12	27-JUN-79	PETER H. LIPMAN
!
!	WHEN THE SHIFTING BACKWARDS AND THE BEGINNING OF THE LINE IS
!		ENCOUNTERED, CALL ALTBOL TO CLEAN UP A POSSIBLE \...\
!
!	06.13	16-OCT-79	PETER H. LIPMAN
!
!	MAKE ALTBOL CALL CONDITIONAL ON PTSW AVOIDING PROBLEM WITH
!		RECURSIVE CALL FROM ALTRTYPE TO ALTSHIFT
!		AND BACK THROUGH CTRLR().
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	ALTBOL,			! BACKED UP TO BEGINNING OF LINE
	ALTTYPEC;		! ALTER MODE TYPE A CHARACTER

EXTERNAL
    NCHR: M1TO1;
EXTERNAL
    OLINPT: REF VECTOR[,BYTE];
EXTERNAL
    NSLSH;

GBLNVROUTINE (ALTSHIFT(N,PTSW))=
BEGIN
LOCAL
    I,
    J;
LOCAL
    POS: REF VECTOR[,BYTE];
I=1; J=0;
IF .N NEQ 0 THEN
	BEGIN
	IF .N LSS 0 THEN
		BEGIN I=-.I; J=.J-1; END;
	DO	BEGIN
		POS=.NCHR[.I];
		IF .POS[0] EQL 0 THEN
			BEGIN
			IF .PTSW THEN ALTBOL(.I);
			EXITLOOP;
			END;
		(.NCHR[-.I]+.I)<0,8>=.POS[0];
		NCHR[.I]=.NCHR[.I]+.I;
		NCHR[-.I]=.NCHR[-.I]+.I;
		IF .PTSW THEN
			ALTTYPEC(.POS[0],.J);
		END WHILE (N=.N-.I) NEQ 0;
	END;
END;

END ELUDOM
