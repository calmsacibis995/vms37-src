	.TITLE	TXTSTR - TEXT OUTPUT TO TTY FILTER
	.IDENT	/V03000/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN	27-MAY-80
;

	CODE$	TXT

ECHTBL:
;	.ASCII	<0>/NUL/		;<NUL> - NULL
;	.ASCII	<7>/BEL/		;<BEL> - BELL
;	.ASCII	<10>/BS/<0>		;<BS>  - BACK SPACE
	.ASCII	<12>/LF/<0>		;<LF>  - LINE FEED
	.ASCII	<13>/VT/<0>		;<VT>  - VERTICAL TAB
	.ASCII	<14>/FF/<0>		;<FF>  - FORM FEED
	.ASCII	<15>/CR/<0>		;<CR>  - CARRIAGE RETURN
	.ASCII	<33>/ESC/		;<ESC> - ESCAPE
	.ASCII	<177>/DEL/		;<DEL> - DELETE
	.WORD	0			;END OF TABLE

ENTRY	TXTSTR			;TXTSTR(LEN,ADR)
	JSR	R1,$SAV3
	MOV	14(SP),R1		;DESIRED BYTE COUNT
	MOV	12(SP),R2		;STRING ADDRESS
	MOV	R2,R0			;FORM ADDRESS
	ADD	R1,R0			;OF LAST+1 BYTE
2$:	TSTB	-(R0)			;STRIP OFF TRAILING NULLS
	BNE	6$			;BRANCH IF NOT NULL
	SOB	R1,2$			;IF RUN OUT OF CHARACTERS
	RTS	PC			;THEN NOTHING TO OUTPUT
6$:	MOV	R2,R3			;COPY OF STARTING ADDRESS
10$:	BITB	#340,(R2)		;CONTROL CHARACTER?
	BNE	20$			;BRANCH IF NOT
	CMPB	(R2)+,#11		;IF TAB, TREAT NORMALLY
	BEQ	30$			;BRANCH IF YES
	CMPB	-1(R2),#15		;<CR>?
	BNE	24$			;BRANCH IF NOT
	CMP	R1,#1			;IF <CR> WAS LAST CHARACTER
	BEQ	24$			;PRINT IT AS "<CR>"
	CMPB	(R2),#12		;CHECK FOR FOLLOWING <LF>
	BNE	24$			;BRANCH IF NOT <CR><LF>
	DEC	R1			;INDICATE THAT <CR> IS PROCESSED
20$:	CMPB	(R2)+,#177		;MUST PROCESS DEL SPECIALLY
	BNE	30$			;BRANCH IF NOT DEL
24$:	DEC	R2			;UNDO THE AUTO-INCREMENT
	BR	50$			;AND STOP GATHERING NORMAL CHARACTERS
30$:	SOB	R1,10$			;GATHER CHARACTERS FOR TYPSTR CALL
50$:	MOV	R2,-(SP)		;FORM COUNT
	SUB	R3,(SP)			;OF CHARACTERS GATHERED
	BEQ	60$			;BRANCH IF NO CHARACTERS
	MOV	R3,-(SP)		;ADDRESS OF STRING
	JSR	PC,TYPSTR		;TYPE THE STRING
	TST	(SP)+			;CLEAN OFF ADDRESS
60$:	TST	(SP)+			;CLEAN OFF BYTE COUNT
;
; SEE IF THERE ARE ANY CHARACTERS LEFT, IF SO, MUST PROCESS THE
; NEXT ONE AS A SPECIAL, THEN BACK TO THE MAIN LOOP TO GATHER ANOTHER
; SET OF NORMAL CHARACTERS.
;
	DEC	R1			;ALL DONE?
	BLT	100$			;BRANCH IF YES
	SUB	#6,SP			;SPACE FOR STRING TO BE STORED
	MOV	SP,R0
	MOVB	(R2)+,-(SP)		;CHARACTER TO GET CONTROL STRING FOR
	MOV	R0,-(SP)		;ADDRESS TO STORE CONTROL STRING
	JSR	PC,ECHCTL		;GET CONTROL STRING, SIZE RETURNED IN R0
	MOV 	R0,2(SP)		;STORE SIZE OF STRING
	JSR	PC,TYPSTR		;OUTPUT THE CONTROL STRING
	ADD	#<6+4>,SP		;CLEAN UP STACK
	TST	R1			;ANY CHARACTERS LEFT TO PROCESS?
	BGT	6$			;BRANCH IF YES
100$:	RTS	PC			;ALL DONE


ENTRY	ECHCTL			;ECHCTL(CHAR,ADR)
	MOV	R1,-(SP)		;SAVE R1
	MOV	4(SP),R0		;ADDRESS TO STORE STRING
	MOV	#ECHTBL-3,R1		;ADDRESS OF ECHO TABLE
	CMPB	6(SP),#33		;IF THIS IS AN ESCAPE CHARACTER
	BNE	10$
	MOVB	ALTCHR,(R0)		;AND WE ARE ACCEPTING A SUBSTITUTE
	BEQ	10$
	INC	R0			;THEN PRINT THAT CHARACTER
	BR	50$
10$:	ADD	#3,R1			;ADDRESS OF NEXT ENTRY
	TST	(R1)			;END OF TABLE?
	BEQ	40$			;BRANCH IF YES
	CMPB	6(SP),(R1)+		;MATCH THIS ENTRY?
	BNE	10$			;BRANCH IF NOT, TRY THE NEXT
;
; FOUND AN ENTRY, MOVE IT IN TO DESTINATION STRING
;
	MOVB	#'<,(R0)+		;LEADING "<"
	MOVB	(R1)+,(R0)+		;MOVE CHARS
	MOVB	(R1)+,(R0)+		;FIRST 2 ARE ALWAYS THERE
	MOVB	(R1),(R0)		;LAST IS A MAYBE
	BEQ	20$			;BRANCH IF NOT THERE
	INC	R0			;IT WAS THERE, COUNT IT
20$:	MOVB	#'>,(R0)+		;PUT IN TRAILING ">"
	BR	50$
;
; USE STANDARD ^ CONVENTION FOR CONTROL CHARACTERS WHICH DO NOT HAVE
; SPECIAL STRINGS
;
40$:	MOVB	#'^,(R0)+		;LEADING "^"
	MOVB	6(SP),(R0)		;GET THE CHARACTER
	BISB	#100,(R0)+		;PRINT CORRESPONDING COLUMN 1 CHAR
50$:	SUB	4(SP),R0		;RETURN BYTE COUNT STORED
	MOV	(SP)+,R1		;RECOVER SAVED R1
	RTS	PC


	.END
