MODULE DELLIN (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!


!
!	DELLINE
!
!	THIS ROUTINE WILL DELETE A LINE FROM THE BUFFER.
!	THE ADDRESS IS PASSED AS THE PARAMETER, AND THE
!	BUFFER IS SHIFTED TO REMOVE THE OLD LINE.
!	
!	PARAMETERS -
!		BUF - ADDRESS OF BUFFER HEADER
!		OADR - ADDRESS OF LINE TO DELETE
!
!	RETURNS -
!		VALUE RETURNED IS ADDRESS OF NEXT LINE IN
!			THE BUFFER
!
!
!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	CMDABO,		! COMMAND ABORT
	SHIFTB,		! SHIFT BUFFER AREA
	NXTLINE;	! TO DELETE LAST LINE IN BUFFER


GBLROUTINE (DELLINE(OADR))=
BEGIN
LOCAL
    SLEN;
IF READONLY THEN CMDABO(INTERNAL);
BUFCHG=.BUFCHG+1;
IF .LINLEN(.OADR) EQL 0 THEN
	CMDABO(INTERNAL);
IF .OADR EQL .BUFLST THEN
	NXTLINE(.OADR,1);
SLEN=.LINPRV(.OADR);
IF .OADR EQL .BUFFIR AND (.LINFLG(.OADR) AND FLGWRP) THEN
	BEGIN
	BUFFIR=.BUFSTRT;
	BUFFR2=.BUFFR2+.BUFFR1+.LINLEN(.OADR)*2;
	BUFFR1=0;
	OADR= .BUFFIR;
	END
ELSE
IF .LINFLG(.OADR) AND FLGWRP THEN
	BEGIN
	SETFLG(.OADR-.LINPRV(.OADR)*2,FLGWRP);
	BUFFR2=.BUFFR2+.LINLEN(.OADR)*2;
	OADR= .BUFSTRT;
	END
ELSE
	OADR= SHIFTB(.OADR,-.LINLEN(.OADR)*2);
IF .OADR EQL .BUFFIR THEN
	BEGIN
	BUFPG1=.LINPAG(.OADR);
	BUFPG1+2=.LINLIN(.OADR);
	END;
LINPRV(.OADR)=.SLEN;
RETURN .OADR;
END;



END ELUDOM
