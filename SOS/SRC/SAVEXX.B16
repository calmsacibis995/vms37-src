MODULE SAVEXX (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!	020702	PHL0702		Peter H. Lipman		23-May-1980
!
!	If ERASE(FILEBAK) fails, then must assume backup copy has
!		already been produced.
!

!
!	SAVE
!
!	THIS ROUTINE PERFORMS THE AUTO-SAVE AND EXIT COMMAND
!	FUNCTIONS OF UPDATING THE FILE AS SPECIFIED BY THE
!	INITIAL COMMAND STRING.  IT ALSO HANDLES THE VARIOUS
!	OPTIONS ON THE 'E' COMMAND, AND THE CORRESPONDING
!	SWITCH SETTINGS.
!
!	PARAMETERS -
!		SOPT - OPTION TO UNSEQUENCE THE OUTPUT FILE
!		BOPT - NOBACK OPTION
!		DOPY - DELETE INPUT FILE OPTION
!		NEW - FILE ADR OF NEW FILE IF RENAME, OR ZERO
!		QOPT - QUIT OPTION FROM E COMMAND
!		REOPN - NON-ZERO IF FILE IS TO BE POSITIONED
!			BACK TO CURRENT SPOT.
!
!	RETURNS -
!		IF REOPEN, RETURNS NEW ADDRESS OF CURRENT LINE
!
!

!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	CLOSE,		! CLOSE A FILE SPEC
	ERASE,		! DELETE A FILE
	COPDEF,		! COPY FILE DESCRIPTION
	SWPFDB,		! SWAP THE FDB'S
	OPEN,		! OPEN INPUT FILE
	REOPEN,		! REPOSITION INPUT FILE TO FIRST RECORD
	REOPNW,		! REPOSITION OUTPUT FILE TO BEGINNING
	CLSOPN,		! CLOSE FOR OUTPUT, REOPEN FOR INPUT
	SETFIL,		! SETUP EXT FOR TMP FILE
	CRTFIL,		! OPEN NEW FILE FOR OUTPUT
	DOCAT;		! RENAME TO A SPECIFIED NAME

EXTERNAL
    FILUSE,				! FILE STATUS WORD
    FILEIN,				! PRIMARY INPUT FDB
    FILEOUT,				! PRIMARY OUTPUT FDB
    FILETMP,				! TEMP OUTPUT FDB
    FILEBAK;				! BACKUP FILE FDB

NVROUTINE (SETFIN(FILE,NOTBAK,NEW,DOPT))=
!
! SET UP FILEIN FROM THE SPECIFIED OUTPUT FILE
!	FILE	= THE OUTPUT FILE READY TO BE CLOSED AND RENAMED.
!	NOTBAK	= 1 IF NO BACKUP COPY OF THE INPUT FILE IS DESIRED
!		= 0 OTHERWISE
!	NEW	= 0 IF NO NEW FILE NAME TO RENAME TO
!		= FDB OF FILE NAME TO RENAME TO IF NEW NAME SPECIFIED
!	DOPT	= 1 IF DELETING FILEIN IN THE CASE OF A NEW NAME GIVEN
!		= 0 IF NOT
!
BEGIN
CLOSE(.FILE);
IF .NEW EQL 0 THEN
	BEGIN	!NO NEW FILE NAME SPECIFIED
	IF .NOTBAK EQL 0 THEN
		BEGIN		!PRODUCE A BACKUP COPY
		IF (ERASE(FILEBAK) EQL 0) THEN DOCAT(FILEIN,FILEBAK)
		ELSE ERASE(FILEIN);
		END
	ELSE		!DELETE PREVIOUS BACKUP COPY
		ERASE(FILEIN);
	DOCAT(.FILE,FILEIN);
	END
ELSE
	BEGIN	! NEW FILE NAME SPECIFIED
	DOCAT (.FILE,.NEW);
	IF .DOPT NEQ 0 THEN ERASE(FILEIN);
	COPDEF(FILEIN,.NEW);
	END;
END;

GBLROUTINE (SAVEXX(DOPT,NEW,REOPN))=
BEGIN

LOCAL
    NUSE,
    OPIN,
    OPOUT;
NUSE=3;
OPIN=OPOUT=.REOPN;	!NON ZERO IF SUPPOSED TO REOPEN

!
! FILUSE IS 1 OR 4
!	1 -  CREATING A NEW FILE VIA INPUT MODE.
!		FILEOUT IS THE NEW FILE WITH ITS CORRECT NAME
!		THERE IS NO INPUT FILE OPEN.
!	4 - TWO FILES SPECIFIED IN THE INITIAL SOS COMMAND
!		FILEOUT IS THE OUTPUT FILE WITH ITS CORRECT NAME
!		FILEIN IS THE INPUT SOURCE
!
IF .FILUSE EQL 1 OR .FILUSE EQL 4 THEN
	BEGIN	! FILEOUT IS THE GOOD FILE
	IF .FILUSE EQL 4 THEN
		BEGIN	! INPUT FILE IS BEING READ
		CLOSE(FILEIN);
		IF .DOPT NEQ 0 AND .NEW EQL 0 THEN ERASE(FILEIN);
		END;
	IF .NEW EQL 0 THEN
		BEGIN	! NO NEW FILE NAME SPECIFIED
		SWPFDB(FILEIN,FILEOUT);
		IF .OPIN NEQ 0 THEN
			BEGIN
			CLSOPN(FILEIN);
			OPIN=0;
			END
		ELSE
			CLOSE(FILEIN);
		END
	ELSE
		BEGIN	! NEW FILE NAME GIVEN, RENAME TO IT
		CLOSE(FILEOUT);
		DOCAT(FILEOUT,.NEW);
		COPDEF(FILEIN,.NEW);
		END;
	SETFIL(FILEOUT,.UPLIT (%RAD50_11 'TM1'));
	END

!
! FILUSE = 2 OR 3
!	FILEIN IS THE INPUT FILE AND CONTAINS THE CORRECT FILE
!		NAME UNLESS .NEW NEQ 0
!	FILEOUT IS THE OUTPUT FILE
!	FILUSE = 2 IF BACKUP HASN'T BEEN DONE YET
!	       = 3 IF BACKUP HAS ALREADY BEEN DONE OR IS NOT
!			SUPPOSED TO BE DONE
!
ELSE IF .FILUSE LEQ 3 THEN
	BEGIN	!FILUSE = 2 OR 3
	IF .BUFCHG EQL 0 AND .NEW EQL 0 THEN
		BEGIN	!FILEIN IS THE GOOD COPY, DISCARD FILEOUT
		IF .REOPN EQL 0 THEN
			BEGIN
			CLOSE(FILEIN);
			IF NOT READONLY THEN
				BEGIN
				CLOSE(FILEOUT);
				ERASE(FILEOUT);
				END;
			END
		ELSE
			BEGIN
			REOPEN(FILEIN);
			IF NOT READONLY THEN REOPNW(FILEOUT);
			OPIN=OPOUT=0;
			END;
		NUSE=.FILUSE;
		END
	ELSE
		BEGIN	!FILEOUT IS THE GOOD COPY
		CLOSE(FILEIN);
		SETFIN(FILEOUT,.FILUSE-2,.NEW,.DOPT);
		END;
	END

!
! FILUSE = 5 OR 6
!	FILETMP = INPUT FILE
!	FILEOUT = OUTPUT FILE
!	FILEIN = DESIRED DESTINATION FILE NAME UNLESS .NEW NEQ 0
!	FILUSE = 5 IF BACKUP NOT YET DONE (LIKE FILUSE = 2)
!	FILUSE = 6 IF BACKUP ALREADY DONE OR NOT SUPPOSED TO BE
!		DONE (LIKE FILUSE = 3).
!
ELSE
	BEGIN
	IF .BUFCHG EQL 0 THEN
		BUFCHG=.BUFCHG+1
	ELSE
		SWPFDB(FILETMP,FILEOUT);
!
! AT THIS POINT FILETMP IS THE GOOD FILE, FILEOUT IS TO BE DISCARDED
!
	SETFIN(FILETMP,.FILUSE-5,.NEW,.DOPT);
	IF .REOPN NEQ 0 THEN
		BEGIN
		REOPNW(FILEOUT);
		OPOUT=0;
		END
	ELSE
		BEGIN	!DISCARD THE OUTPUT FILE
		CLOSE(FILEOUT);
		ERASE(FILEOUT);
		END;
	END;
IF .OPIN NEQ 0 THEN OPEN(FILEIN);
BUFILE=FILEIN;
IF .OPOUT NEQ 0 THEN CRTFIL(FILEOUT);
RETURN .NUSE;
END;

END ELUDOM
