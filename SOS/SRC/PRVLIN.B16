MODULE PRVLIN (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!	020705	PHL33696	Peter H. Lipman		8-Nov-1980
!
!		Finding the previous line from page 1 line 1 was
!	occasionally causing a loop.  Add the check to eliminate this.
!

!
!	PRVLINE
!
!	THIS ROUTINE WILL RETURN THE ADDRESS OF THE N-TH PREVIOUS
!	LINE PRIOR TO THE ONE WHOSE ADDRESS IS PASSED.
!	IF NECESSARY, THE BUFFER WILL BE CLEARED AND
!	REREAD FROM AN EARLIER PART OF THE FILE (VIA 'FIND').
!	AN ATTEMPT TO READ BACK PAST THE START OF THE FILE
!	WILL RETURN A VALUE ZERO.
!
!	PARAMETERS -
!		ADRST - STARTING ADDRESS, OF FIRST LINE
!		NUM - NUMBER OF TIMES TO DO 'PREV' FUNCTION.
!
!	RETURNS -
!		VALUE IS ADDRESS OF LINE, OR ZERO IF PRIOR
!			TO START OF FILE
!
!
!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	FIND,		! IN CASE WRAPAROUND NEEDED
	NXTLINE;	! DITTO

GBLROUTINE (PRVLINE(ADRST,NUM))=
BEGIN
LOCAL
    ADR,
    J,
    AD2;
LOCAL
    FLIN: VECTOR[2],
    OLIN: VECTOR[2];
ADR=.ADRST;
INCR J FROM 1 TO .NUM DO
	IF .ADR EQL .BUFFIR THEN
		IF .ADR EQL .BUFSTRT AND .BUFWRP EQL 0 THEN
			RETURN 0
		ELSE
			BEGIN
			OLIN[0]=.LINPAG(.ADR);
			OLIN[1]=.LINLIN(.ADR);
			FLIN[1]=.OLIN[1]-1;
			IF .FLIN[1] NEQ 0 THEN
				FLIN[0]=.OLIN[0]
			ELSE
				BEGIN
				FLIN[0]=.OLIN[0]-1;
				IF .FLIN[0] EQL 0 THEN RETURN 0;
				FLIN[1]=INF;
				END;
			AD2=FIND(FLIN,-1);
				DO	BEGIN
					ADR=.AD2;
					AD2=NXTLINE(.BUF,.AD2,1);
					END UNTIL .OLIN[0] EQL .LINPAG(.AD2) AND
					          .OLIN[1] EQL .LINLIN(.AD2);
			END
	ELSE
	IF .ADR EQL .BUFSTRT THEN
		ADR=.BUFADR+.BUFLEN-.BUFFR2-.LINPRV(.ADR)*2
	ELSE
	IF .ADR NEQ 0 THEN
		ADR=.ADR-.LINPRV(.ADR)*2;
RETURN .ADR;
END;


END ELUDOM
