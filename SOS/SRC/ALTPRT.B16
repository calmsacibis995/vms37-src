MODULE ALTPRT (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!	020705	PHL0705		Peter H. Lipman		19-Oct-1980
!
!		Must set parity bit to send a real <CR> through
!	ALTTYPEC now that all we are displaying control characters.
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	PRTLIN,		! PRINT A LINE OF TEXT
	PRINT,		! PRINT A MESSAGE
	TYPE,		! TYPE A CHARACTER
	ALTSHIFT,
	ALTTYPEC;

EXTERNAL
    NCHR: M1TO1;
EXTERNAL
    OLINPT: REF VECTOR[,BYTE];
EXTERNAL
    NEWLNA: REF VECTOR[,BYTE];
EXTERNAL
    NSLSH,				! COUNT OF "\" CURRENTLY OUTPUT
    FSLSH,				! FLAG INDICATING THAT A \...\ HAS BEEN OUTPUT
    HSLSH,				! HORIZONTAL POSITION OF END OF \...\
    HORPOS,				! HORIZONTAL POSITION (FOR SCOPE RUBOUT)
    VERPOS,				! VERTICAL POSITION (FOR SCOPE RUBOUT)
    TTCUP,				! PLIT TO MOVE CURSOR UP ONE LINE
    TTERL;				! PLIT TO ERASE SCREEN TO END OF LINE
EXTERNAL
    TTSCP: BYTE;	! GTR 0 IF TERMINAL IS A SCOPE

GBLNVROUTINE (ALTPLINE(LIN))=
BEGIN
PRTLIN(.LIN,3);
IF (.SOSFLG AND NONUM) NEQ 0 THEN HORPOS=0 ELSE HORPOS=8;
VERPOS=0;
FSLSH=0;
HSLSH=-1;
END;

GBLNVROUTINE (ALTRTYPE(N,SCOPE))=
BEGIN
ALTTYPEC(%O'215',0);		! RETURN CARRIAGE, FORCE OUT ANY SLASHES
ALTSHIFT(-512,0);		! BACK TO BEGINNING OF THE LINE
IF .SCOPE EQL 0 OR .TTCUP EQL 0 THEN
	TYPE(%CHAR(10))		! NEW LINE
ELSE	BEGIN
	DO	BEGIN
		PRINT(TTERL);		! ERASE THE LINE
		IF .VERPOS EQL 0 THEN EXITLOOP;
		PRINT(TTCUP);		! BACKUP OVER LINE WRAPS
		VERPOS=.VERPOS-1;
		END WHILE 1;
	TYPE(%CHAR(13));
	END;
ALTPLINE(.OLINPT);		! REPRINT THE LINE NUMBER
ALTSHIFT(.N,1);			! PRINT TO DESIRED POSITION
END;

GBLNVROUTINE (ALTPRT(N))=
BEGIN
ALTSHIFT(512,1);
ALTRTYPE(.N,0);
END;

GBLNVROUTINE (CTRLR)=
BEGIN
IF .TTSCP GTR 0 AND .HORPOS EQL 0
	THEN PRINT (PLIT (%STRING(' ',%CHAR(8))));
ALTRTYPE((.NCHR[-1]-NEWLNA[7]),.TTSCP);
END;

END ELUDOM
