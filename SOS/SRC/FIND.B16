MODULE FIND (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!

!
!	04	7-SEP-77	PETER H. LIPMAN
!
!	IMPROVED FILE WRAPAROUND LOGIC SO THAT FILES ARE
!		REPOSITIONED INSTEAD OF DELETED, RENAMED,
!		OPENED, AND CREATED.
!	REMOVED LOGICAL UNIT NUMBER FROM OPEN, CRTFIL CALLS
!
!	05	16-FEB-78	PETER H. LIPMAN
!
!	TMP FILE NAMES ARE NOW .TM1 AND .TM2 SINCE THEY NOW
!	INTERCHANGE ROLES AND IT IS NEVER CLEAR WHICH IS
!	THE BEST COPY.
!
!	06	28-JUL-78	PETER H. LIPMAN
!
!	WHEN THE INPUT FILE HAS BEEN REPLACED WITH ONE WHICH
!	CLEARLY HAS SEQUENCE NUMBERS, IT IS CONSISTENT TO TURN OFF
!	THE NOLINS FLAG.  THIS FIXES A BUG IN THE COPY COMMAND WHEN
!	EDITING OUTPUT=INPUT AND THE INPUT FILE IS UNSEQUENCED.
!	THE NOLINS FLAG WAS BEING REMEMBERED AND WAS BEING BELIEVED
!	WHEN THE ALREADY SEQUENCED FILE WAS REOPENED.
!

!
!	FIND
!
!	THIS ROUTINE WILL LOCATE ANY PARTICULAR PAGE/LINE
!	IN THE FILE BEING EDITED.  IT WILL  GO FORWARD
!	OR BACKWARD AS NEEDED TO LOCATE THE DESIRED LINE,
!	OR THE LINE IMMEDIATELY PRECEEDING THE ONE
!	SPECIFIED.
!	IF BACKUP IS NEEDED, AND NO CHANGES HAVE BEEN MADE TO
!	THE FILE, THE INOUT AND OUTPUT FILES ARE MERELY
!	CLOSED AND REOPENED.  IF CHANGES HAVE BEEN MADE, THE
!	REMAINDER OF THE INPUT FILE IS COPIED OUT, THE OUTPUT
!	IS RENAMES TO THE SECONDARY INPUT NAME, AND IT IS THEN
!	USED FOR INPUT.  A BACKUP OF THE INPUT FILE IS ALSO
!	DONE AT THIS POINT IF REQUESTED.
!	IN ALL CASES, FILUSE IS KEPT CURRENT WITH THE FILE STATE
!
!	PARAMETERS -
!		PGLIN - POINTER TO TWO WORD AREA WHICH
!			CONTAINS PAGE NUM/LINE NUM TO FIND
!
!	RETURNS -
!		VALUE RETURNED IS THE ADDRESS OF THE REQUESTED
!			LINE (IF >0), OR THE ADDRESS OF THE
!			IMMEDIATELY PRECEEDING LINE (IF <0).
!			IF THE REQUESTED LINE IS PRIOR TO THE
!			START OF THE FILE, A ZERO IS RETURNED.
!
!
!
!	V02.02	09-JUN-76	WTM
!	V02.01	19-MAR-76	WTM


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	CLOSE,		! CLOSE INPUT/OUTPUT FILES
	CRTFIL,		! CREATE NEW TEMPFILE
	FINOUT,		! FINISH COPYING DATA
	BUFINIT,	! RE-INIT BUFFER HEADER
	GETLINE,	! READ INFIRST LINE OF FILES
	NXTLINE,	! SKIP FORWARD IN BUFFER
	REOPEN,		! REPOSITION AN INPUT FILE TO THE BEGINNING
	REOPNW,		! REPOSITION OUTPUT FILE TO BEGINNING
	SWPFDB,		! SWAP THE CONTENTS OF THE FDB'S
	CLSOPN,		! CLOSE FOR OUTPUT, OPEN FOR INPUT
	SETFIL,		! SET UP EXT FOR TEMP FILE
	CMDABO;		! COMMAND ABORT

EXTERNAL
    FILUSE,				! FILE STATUS FLAG
    FILEIN,				! INPUT FDB POINTER
    FILETMP,				! TEMPORARY FDB PTR
    FILEOUT;				! OUTPUT FDB POINTER

GBLROUTINE (FIND(PGLIN,NFFLG))=
BEGIN
MAP
    PGLIN: REF VECTOR[,WORD];
LOCAL
    ADR,
    ADR2,
    EOFLG;

IF LGEQ(.PGLIN,BUFPG1) THEN
	BEGIN
	ADR=.BUFFIR;
	IF LGEQ(.PGLIN,BUFPG2) THEN
		ADR=.BUFLST;
	END
ELSE
IF .BUFWRP EQL 0 THEN 
	IF .PGLIN[0] EQL 0 THEN
		BEGIN
		PGLIN[0]=.LINPAG(.BUFFIR);
		ADR=.BUFFIR;
		END
	ELSE
	IF .PGLIN[1] EQL 0 AND .PGLIN[0] EQL .BUFPG1 THEN
		BEGIN
		RETURN .BUFFIR;
		END
	ELSE
	IF .NFFLG EQL 1 THEN
		ADR=.BUFFIR
	ELSE
		RETURN 0
ELSE
	BEGIN
	IF READONLY THEN REOPEN(.BUFILE)
	ELSE IF (.FILUSE EQL 1) OR (.FILUSE EQL 4) THEN
		BEGIN			! .BUFILE EQL FILEIN
		FINOUT(FILEOUT);
		IF .FILUSE EQL 4 THEN
			BEGIN
			CLOSE(FILEIN);
			SOSFLG=.SOSFLG AND NOT NOLINS;
			END
		ELSE
			BUFILE=FILEIN;
		SWPFDB(FILEIN,FILEOUT);
		SETFIL(FILEOUT,.UPLIT (%RAD50_11 'TM1'));
		CLSOPN(FILEIN);
		CRTFIL(FILEOUT);
		FILUSE=3;
		END
	ELSE
		BEGIN	!.FILUSE EQL 2 OR 3, 5 OR 6
		IF .BUFCHG EQL 0 THEN
			BEGIN	! NO CHANGES, .BUFILE IS THE GOOD COPY
			REOPNW(FILEOUT);
			REOPEN(.BUFILE);
			END
		ELSE
			BEGIN	! FILE CHANGED, FILEOUT IS THE GOOD COPY
			FINOUT(FILEOUT);
			SOSFLG=.SOSFLG AND NOT NOLINS;
			SWPFDB(FILEOUT,FILETMP);
			REOPEN(FILETMP);
			BUFILE=FILETMP;
			IF .FILUSE GEQ 5 THEN
				REOPNW(FILEOUT)
			ELSE	! FILUSE EQL 2 OR 3, INPUT WAS FROM FILEIN
				BEGIN
				CLOSE(FILEIN);
				CRTFIL(FILEOUT);
				FILUSE=.FILUSE+3;
				END;
			END;
		END;
	BUFINIT();
	ADR=GETLINE(.BUFILE);
	END;
IF NOT LGEQ(.PGLIN,BUFPG1) THEN 
	IF .PGLIN[0] EQL 0 THEN
		BEGIN
		PGLIN[0]=.LINPAG(.BUFFIR);
		IF (IF .PGLIN[1] EQL 0 THEN .LINLIN(.BUFFIR)
				ELSE .PGLIN[1]) LSSU .(BUFPG1+2) THEN
			IF .NFFLG EQL 1 THEN
				ADR=.BUFFIR
			ELSE
				RETURN 0;
		END
	ELSE
	IF .PGLIN[1] EQL 0 AND .PGLIN[0] EQL .BUFPG1 THEN
		RETURN .BUFFIR
	ELSE
	IF .NFFLG EQL 1 THEN
		ADR=.BUFFIR
	ELSE
		RETURN 0;
EOFLG=0;
DO	BEGIN
	IF LGEQ(.ADR+4,.PGLIN) THEN RETURN .ADR;
	ADR2=NXTLINE(.ADR,1);
	IF .LINLEN(.ADR2) EQL 0 THEN
		IF .EOFLG THEN EXITLOOP
		ELSE
			EOFLG=1;
	IF .LINPAG(.ADR) NEQ .LINPAG(.ADR2) THEN
		IF .LINPAG(.ADR2) EQL .PGLIN[0] AND .PGLIN[1] EQL 0 THEN 
			RETURN .ADR2
		ELSE
		IF .LINPAG(.ADR) EQL .PGLIN[0] AND .PGLIN[1] EQL INF THEN
			RETURN .ADR;
	IF NOT LGEQ(.PGLIN,.ADR2+4) THEN 
		IF .NFFLG EQL -1 THEN
			RETURN .ADR
		ELSE
		IF .NFFLG EQL 0 THEN
			RETURN 0
		ELSE
			RETURN .ADR2;
	ADR=.ADR2;
	END WHILE 1;
!	ONLY GET HERE WHEN SEARCHING FOR LINE ON LAST PAGE
!	WHEN SPECIFIED AS XXX/*
IF .PGLIN[0] NEQ INF THEN CMDABO(INTERNAL);
PGLIN[0]=.PAGHIG;
RETURN FIND(.PGLIN,.NFFLG);
END;


END ELUDOM
