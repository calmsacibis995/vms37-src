MODULE CMDJ (
	IDENT = 'V03-000'
		) =

BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! WILLIAM T. MARSHALL	19-MAR-76
!
! MODIFIED BY:
!
!


!	03	29-JUL-77	BILL MARSHALL
!
!	FIXED PROBLEM OF NULLS IN MIDDLE OF LINE TEXT
!	LIMITED NUMBER OF NULLS AT END OF LINE TO 2
!	CHANGED TO USE FSR TEMP BUFFER TO BUILD NEW LINE
!

!
!	CMDJ - JOIN COMMAND
!
!
!	V02.02	09-JYN-76	WTM
!	V02.01	19-MAR-76	WTM
!


REQUIRE 'SRC$:SOSREQ.B16';

EXROUTINE
	RDCMD,		! READ IN COMMAND
	GETDOT,		! FIND LOC OF DOT
	GETLNP,		! PARSE LINE/PAGE
	CMDABO,		! ABORT COMMAND WITH SPECIFIED ERROR STATUS
	ILLNSL,		! NO SUCH LINE ERROR
	ILLCMD,		! BAD COMMAND ERROR
	ILLRO,		! ILLEGAL FOR READ ONLY FILE
	ILLLTL,		! LINE TOO LONG ERROR
	FIND,		! FIND LINE IN BUFFER
	NXTLINE,	! ADVANCE ONE LINE IN BUFFER
	DELLINE,	! DELETE LINE IN BUFFER
	CHLINE,		! CHANGE LINE IN BUFFER
	PRVLINE,	! BACK UP ONE LINE
	GETBUF,		! ALLOCATE TEMP BUFFER AREA
	RLSBUF,		! RELEASE THAT BUFFER
	SETDOT;		! MARK CURRENT LOC OF DOT

EXTERNAL 
    BUFPTR;			! PTR TO NEW LINE BUILD ARA

GBLNVROUTINE (CMDJ)=
	BEGIN		! JOIN TWO LINES TOGETHER
	LOCAL
	    ADR,
	    ADR2;
	RDCMD();
	BADIFRO;
	GETDOT(RANGE);
	GETLNP(RANGE);
	IF .SCTYP NEQ SCEOF THEN BADCOMMAND;
	ADR=FIND(RANGE,0);
	IF .ADR EQL 0 THEN NOSUCHLINE;
	ADR2=NXTLINE(.ADR,1);
	IF .LINLEN(.ADR2) EQL 0 THEN BADCOMMAND;
	IF (.LINLEN(.ADR)+.LINLEN(.ADR2)) GTR 259 THEN LINETOOLONG;
	GETBUF(512);
		BEGIN
		REGISTER
		    PTR1,
		    PTR2,
		    WCT;
		PTR1=.BUFPTR;
		PTR2=.ADR;
		WCT=.LINLEN(.ADR);
		DO	BEGIN
			.PTR1=..PTR2;
			PTR1=.PTR1+2;
			PTR2=.PTR2+2;
			END UNTIL (WCT=.WCT-1) EQL 0;
		WHILE .(.PTR1-1)<0,8> EQL 0 DO
			PTR1=.PTR1-1;
		PTR2=LINTXT(.ADR2);
		DO	BEGIN
			LOCAL
			    CHR: BYTE;
			CHR=(.PTR1)<0,8>=.(.PTR2)<0,8>;
			PTR1=.PTR1+1;
			PTR2=.PTR2+1;
			IF .CHR EQL 0 THEN EXITLOOP;
			END WHILE 1;
		(.PTR1)<0,8>=0;
		PTR1=.PTR1+1;
		LINLEN(.BUFPTR)=((.PTR1-.BUFPTR) AND NOT 1)/2;
		END;
	NXTLINE(.ADR2,1);
	DELLINE(.ADR2);
	ADR=FIND(RANGE,0);
	IF .ADR EQL 0 THEN CMDABO(INTERNAL);
	NXTLINE(.ADR,1);
	ADR=CHLINE(.BUFPTR,.ADR);
	SETDOT(PRVLINE(.ADR,1));
	RLSBUF();
	CMDCNT=.CMDCNT+1;
	END;


END ELUDOM
