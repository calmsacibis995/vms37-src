	.TITLE	SOSDAT - DATA AREA
	.IDENT	/V03001/
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; PETER H. LIPMAN 20-FEB-76
;
; MODIFIED BY:
;
;	V03001	PHL3001		Peter H. Lipman		11-Mar-1982
;		Update documentation ONLY for STRMIN byte.  Enhanced
;	for new VAX stream file formats.
;
;	020705	PHL0705		Peter H. Lipman		30-Jun-1981
;		CMDBUF starts 2 bytes before TTIBUF because RDCMD
;		wants to store a <CR> after an <ESC> in CMDBUF.
;		Content addressing logic in GETCON combined with
;		indirect command files causes this RDCMD logic to
;		overstore a good character that has not yet been
;		read via LISTEN.
;
;	020705	PHL34845	Peter H. Lipman		30-Jan-1981
;
;		VMS top level command files become an infinte source
;	of EOF's.  After too many in a row are seen turn them into <^C>.
;	This eliminates infinite input loops.
;
;	020705	PHL0705		Peter H. Lipman		21-Nov-1980
;
;		Preserve the file protection if producing a new version
;	of an existing file.
;
;	020702	PHL0702		Peter H. Lipman		21-May-1980
;
;		TRMNAM is now a separate string which no longer 
;	overlaps with OPTNAM.
;
;	020701	PHL0701		Peter H. Lipman		23-Apr-1980
;
;		Move CRT control strings, TTERL and TTCUP to CUSTOM.MAC.
;

HA.NAM	==	5			;ATTRIBUTE CODE FOR WRITE FILE NAME
HA.PRO	==	2			;ATTRIBUTE CODE FOR FILE PROTECTION

	.IF	DF,R$$STS
FD.PRN	==	4			;PRINT FILE CARRIAGE CONTROL BIT
	.ENDC

TTYLUN	==	10.			;LOGICAL UNIT FOR TTY TO INIT CHARACTERISTICS
TIOLUN	==	5			;LOGICAL UNIT FOR TERMINAL I/O
CMDLUN	==	4			;LOGICAL UNIT FOR COMMAND INPUT

;	SOSFLG BIT VALUES

BASIC	==	100000
NOBAK	==	40000
DECIDE	==	20000
DELETE	==	10000
EXPERT	==	4000
RMSFIL	==	2000
RONLY	==	1000
UNSEQ	==	400
EXACT	==	200
NOOPT	==	100
NOLINS	==	40
REQCPY	==	20
NOLOW	==	10
SEPARA	==	4
NONUM	==	2

;	SOSFLG PARAMETER VALUE LOCATIONS

STEPN	==	1
ISAVE	==	2
MAXLN	==	3
PLINES	==	4
SAVEN	==	5
STARTN	==	6
LENN	==	7
LMAR	==	8.
PMAR	==	9.
ISTEP	==	10.
SUBS	==	11.
FSFLG	==	12.		;FIND/SUBSTITUTE FLAGS
	NOMATCH	==	2	;NEGATION OF SEARCH FINDINGS
	EMATCH	==	1	;EXACT MATCH FOR ALPHA (SEARCH)
PRINTR	==	13.
BUFSZ	==	14.

;
; FLAGS FOR PUT ROUTINE
;
NOSEQF	==	2			;STRIP SEQUENCE NUMBERS
BASICF	==	10			;BASIC STYLE SEQUENCE NUMBERS
RMSF	==	20			;RSX STYLE FILE IN RSTS
;
; RSX SYSTEM CODES
;
SYS11D	==	1			;RSX11D
SYS11M	==	2			;RSX11M
SYS11S	==	4			;RSX11S
SYSIAS	==	10			;IAS
SYSRST	==	20			;RSTS
SYSCME	==	40			;CME
SYSMPL	==	100			;MPLUS
;
; OFFSETS INTO BUF, THE BUFFER DESCRIPTOR
;
BUFLEN	==	2			;SIZE OF BUFFER AREA (CORRECT NAME)
BUFFR1	==	10.			;SPACE FROM END OF LAST LINE
					;IN BUFFER TO BEGIN OF FIRST
BUFFR2	==	12.			;SPACE BETWEEN LINE WITH BUFWRP
					;SET AND THE END OF THE BUFFER
BUFILE	==	24.			;FDB ADR OF INPUT FILE
BUFCHG	==	26.			;BUFFER CHANGE FLAG

	.MACRO	FDBX NAM,INC=1
	NAM'FLX==CNT...
	NAM'X2==CNT...*256.+2
	CNT...=CNT...+INC
	.ENDM	FDBX

	.MCALL	QIOSY$,CSI$,FCSBT$

	QIOSY$
	CSI$
	FCSBT$

	.MCALL	FDBDF$,FDOP$A,FDRC$A,FDAT$A
	.MCALL	NMBLK$,QIO$,FSRSZ$,GCMLB$
;
	GLOBAL	<FILUSE>
	GLOBAL	<FILEIN,FILEOUT,FILETMP,FILELST>
	GLOBAL	<FILENEW,FILECOP,FILEBAK>
	GLOBAL	<TTOCTL,TTOBUF,TTOEND,TTIBUF,TTISIZ>

	GLOBAL	<IOSTS>

	.PSECT	AAAAA,D,RW	;FIRST TO BE LOADED

	.IF	DF,R$$STS
;
; ***** DO NOT REORDER TO FOLLOWING LINES
;
JOBNUM::.WORD	0			;CURRENT JOB NUMBER
SOSTNM::.WORD	0			;SOS TMP NAME FROM JOB NUMBER
;
; ***** DO NOT REORDER THE PRECEDING LINES
;
IOSTS	=	FIRQB

	.IFTF
TTOCTL:	.BLKB	4			;TTY OUTPUT BUFFER POINTER
TTOBUF:	.BLKB	132.			;TTY OUTPUT BUFFER
TTOEND:					;END OF TTOBUF
;
; ***** CMDBUF STARTS 2 BYTES BEFORE TTIBUF AND OVERLAPS IT.
;
CMDBUF::.BLKB	2			;***** OVERLAPS TTIBUF *****
TTISIZ=80.
TTIBUF:	.BLKB	TTISIZ+2		;COMMAND/TERMINAL INPUT BUFFER
	.IFF
IOSTS:					;QI/O STATUS BLOCK FOR QI/O
	.IFTF
.DYSIZ::.LIMIT				;TASK BUILD LIMITS
	.TOPAD==.DYSIZ+2		;TOP ADDRESS
	.ENDC

	.PSECT	AAAAB,D,RW,OVR
BUFAR::					;START OF SOS BUFFER AREA
	.PSECT	AAAAC,D,RW,OVR
BUF1::					;END OF SOS BUFFER AREA

	FSRSZ$	3,<3*512.+80.>		;3 FILES MAY BE OPEN
;		SPACE FOR 2 'REAL' FILES (FILEIN AND FILEOUT)
;		 + SPACE FOR KB: BUFFER (80.) -AND- 512. TEMP LINE BUF
;		          OR
;		   SPACE FOR ONE MORE FILE, SUCH AS FILELST OR INDIRECT CMD
;			(IF TEMP LINE BUF IS NEEDED, INDIRECT CMD CLOSED)

	DATA$	DAT

CSIBLK::.BLKB	C.SIZE			;COMMAND SCANNER BLOCK
FILPRO::.WORD	-1			;DESIRED FILE PROTECTION OF NEW FILE

	CNT...=1			;FDB COUNTER
;
; NOTE THAT FILEIN MUST BE THE FIRST FDB IN THE CHAIN OF FDB'S
;
	FDBX	IN			;FDB INDEX FOR "IN"

FILEIN::FDBDF$				;INPUT FILE BLOCK
	FDAT$A	R.VAR,FD.CR
	FDOP$A	1

FDBSIZ	==	S.FDB			;SIZE IN BYTES OF AN FDB


	FDBX	OUT			;FDB INDEX FOR "OUT"

FILEOUT::
	FDBDF$
	FDAT$A	R.VAR,FD.CR
	FDOP$A	2

	FDBX	TMP			;FDB INDEX FOR "TMP"

FILETMP::				;TEMP OUTPUT FILE
	FDBDF$
	FDAT$A	R.VAR,FD.CR
	FDOP$A	3

	FDBX	LST			;FDB INDEX FOR "LST"

FILELST::				;LIST FILE
	FDBDF$
	FDAT$A	R.VAR,FD.CR
	FDOP$A	6

	FDBX	NEW,0			;FDB INDEX FOR "NEW"
	FDBX	COP			;FDB INDEX FOR "COP"

FILENEW::				;NEW OUTPUT IN E CMD
FILECOP::				;COPY INPUT FILE C/T
	FDBDF$
	FDAT$A	R.VAR,FD.CR
	FDOP$A	8.

	FDBX	GCM			;FDB INDEX FOR "GCM"

GCMLB::	GCMLB$	3,SOS,TTIBUF,CMDLUN	;GET COMMAND LINE BLOCK

SOSFLG::.BLKW	15.			;SOS FLAG WORDS
	SOSFLL == <.-SOSFLG>/2		;NUMBER OF SOS FLAG WORDS

SAVIFL::.BLKW	5			;SAVE AREA FOR FDB ADR AND
					;POSIT INFO WHEN INPUT FILE IS
					;CLOSED DURING COPY AND
					;TRANSFER COMMANDS
SVSTRM::.BLKW	4			;CONTEXT FOR STREAM TYPE GET FOR
					;INTERNAL CARRIAGE CONTROL FILES
STRMBF::.BLKW	1			;GET STREAM MODE BUFFER ADDRESS
FILEBAK	==	-1			;SPECIAL BACKUP CODE

;
; ***** THE FOLLOWING LINES MUST NOT BE REORDERED OR SEPARATED
;
	.IF	NDF,R$$STS
SOSTNM::.BLKW	1			;2ND RAD50 WORD OF TEMP FILE NAME
DFDIR::	.BLKW	3			;DEFAULT DIRECTORY ID
	.ENDC

DFDEV::	.BLKW	1			;DEFAULT DEVICE
DFUNIT::.BLKW	1			;DEFAULT UNIT
;
; ***** THE PRECEDING LINES MUST NOT BE REORDERED OR SEPARATED
;

OPTNAM::.BLKB	8.			;OPTION NAME
TRMNAM::.BLKB	8.			;TERMINAL NAME
	TRMNSZ==.-1-TRMNAM		;MAX CHARACTERS IN TERMINAL NAME
GIVWRD::.WORD	0
GIVW2::	.WORD	0
FFREC::	.BYTE	14,0

TTICTL::.WORD	0,0			;TTY INPUT BUFFER CONTROL
FILUSE::.WORD	0			;FILE STATUS WORD
BUFPTR::.WORD	0,0			; TEMP BUFFER POINTER AND LEN
NEWLNA::.WORD	0			; POINTER TO NEWLIN AREA
					; INITIALIZED IN STARTUP LOGIC
TTSIZE::.BLKW	1			; SCREEN WIDTH OF INPUT TERMINAL

SYSTEM::.WORD	0			;RSX SYSTEM CODE, BIT DEFINITION ABOVE
	.IF	NDF,R$$STS
RAISLC::.BYTE	0			;IF BIT 1 = 1 RAISE LOWER 
					;CASE ALPHA TO UPPER CASE
ALTECO::.BYTE	'$			;ALTMODE ECHO CHARACTER FOR 11M, 11S
TOPTTY::.BYTE	1			;NON-ZERO IF TOP LEVEL COMMAND
					;FILE IS NOT A TERMINAL
					;ZERO IF TOP COMMAND FILE IS TTY
EOFCNT::.BYTE	3			;DOWN COUNTER FOR EOF'S SEEN
					;TURN INTO <^C> AFTER SEEN 
					;TOO MANY IN A ROW.

	.IFF	;RSTS ONLY
FFLAST::.BYTE	0			;FORM FEED ON LAST RCD

	.IFTF
SEQBAS::.BYTE	0			;FLAG FOR SEQUENCE # STYLE
					;0 = NOT DECIDED
					;BIT 0 SET = DECIDED
					;NOSEQF SET FOR STRIP SEQUENCE #'S
					;NOPAGF SET TO STRIP PAGE MARKS
					;BASICF SET FOR BASIC STYLE #'S
RSTFLG::.BYTE	0			;READ WITH SPECIAL TERMINATORS
					;SET TO 10 (OCTAL) TO ENABLE
					;USED IN ALTER INSERT MODE
NOECHO::.BYTE	0			;NON ZERO IF NO ECHO TO BE DONE
					;FROM ALTER INSERT MODE
ALTCHR::.BYTE	0			;ALTERNATE ALTMODE CHAR FOR INPUT
MATCHR::.BYTE	0			;SPECIAL MATCH CHAR FOR SEARCH
STRMIN::.BYTE	0			;0 IF NOT STREAM INPUT
					;1 IF STREAM FORMAT
					;2 IF STREAM_LF (VAX ONLY)
					;3 IF STREAM_CR (VAX ONLY)
TTSCP::	.BYTE	0			;0 IF TERMINAL IS NOT A SCOPE
					;1 IF DISPLAY TERMINAL
EXTFLG::.BYTE	0			;0 IF OUTPUT FILE DOES NOT NEED EXTENSION
					;>0 IF OUTPUT FILE MAY NEED EXTENSION
	.EVEN

	.ENDC

	GLOBAL	<CRLF>

	PLIT	CRLF,<<15><12>>

	.IF	DF,R$$DBG
	DATA$	DAT
EVTADR::.WORD	EVTBEG			;***** EVENT BUFFER POINTER
EVTBEG::.BLKW	15.			;***** EVENT BUFFER (DEBUG)
EVTEND::				;***** LAST + 1 WORD OF EVENT BUFFER
	.ENDC	;R$$DBG
;
	.END
