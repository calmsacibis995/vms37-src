	SUBROUTINE VAXPSL (LUN,ERROR_PSL)
C
C	Version 'V03-000'
C
C****************************************************************************
C*									    *
C*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
C*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
C*  ALL RIGHTS RESERVED.						    *
C* 									    *
C*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
C*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
C*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
C*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
C*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
C*  TRANSFERRED.							    *
C* 									    *
C*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
C*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
C*  CORPORATION.							    *
C* 									    *
C*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
C*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
C* 									    *
C*									    *
C****************************************************************************
C
C
C
C	AUTHOR	BRIAN PORTER		CREATION DATE	24-JUL-1979
C
C	Functional description:
C
C	This module is called to display the vax psl.
C
C	Modified by:
C
C	v02-002	BP0002		Brian Porter		11-MAY-1981
C		Added include statement and modified necessary code
C		to enable its use.
C	v02-001	BP0001		Brian Porter		11-FEB-1981
C		Removed call to UNUSED_BITS.  Added code to print a 32-bit
C		psl image.
C**



	include 'src$:modes.for /nolist'




	BYTE		LUN

	INTEGER*4	FIELD

	INTEGER*4	COMPRESSC

	INTEGER*4	ERROR_PSL

	CHARACTER*31	V1PSL(0:7)
	CHARACTER*16	V2PSL(26:27)
	CHARACTER*19	V3PSL(30:31)




	DATA	V1PSL(0)	/'C-BIT*'/

	DATA	V1PSL(1)	/'V-BIT*'/

	DATA	V1PSL(2)	/'Z-BIT*'/

	DATA	V1PSL(3)	/'N-BIT*'/

	DATA	V1PSL(4)	/'T-BIT*'/

	DATA	V1PSL(5)	/'INTEGER OVERFLOW TRAP ENABLE*'/

	DATA	V1PSL(6)	/'FLOATING UNDERFLOW TRAP ENABLE*'/

	DATA	V1PSL(7)	/'DECIMAL OVERFLOW TRAP ENABLE*'/




	DATA	V2PSL(26)	/'INTERRUPT STACK*'/

	DATA	V2PSL(27)	/'FIRST PART DONE*'/




	DATA	V3PSL(30)	/'TRACE PENDING*'/

	DATA	V3PSL(31)	/'COMPATABILITY MODE*'/




	CALL LINCHK (LUN,2)

	WRITE(LUN,50) ERROR_PSL
50	FORMAT('0',T8,'ERROR PSL',T24,Z8.8)

	CALL OUTPUT (LUN,ERROR_PSL,V1PSL,0,0,7,'0')

	FIELD = LIB$EXTZV(16,5,ERROR_PSL)

	CALL LINCHK (LUN,1)

	WRITE(LUN,100) FIELD
100	FORMAT(' ',T40,'INTERRUPT PRIORITY LEVEL = ',I2.2,'.')

	FIELD = LIB$EXTZV(22,2,ERROR_PSL)

	CALL LINCHK (LUN,1)

	WRITE(LUN,125) modes(FIELD)
125	FORMAT(' ',T40,'PREVIOUS MODE = ',
	1 A<COMPRESSC (modes(FIELD))>)

	FIELD = LIB$EXTZV(24,2,ERROR_PSL)

	CALL LINCHK (LUN,1)

	WRITE(LUN,150) modes(FIELD)
150	FORMAT(' ',T40,'CURRENT MODE  = ',
	1 A<COMPRESSC (modes(FIELD))>)

	CALL OUTPUT (LUN,ERROR_PSL,V2PSL,26,26,27,'0')

	CALL OUTPUT (LUN,ERROR_PSL,V3PSL,30,30,31,'0')

	RETURN

	END
