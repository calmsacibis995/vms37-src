;  LBRUSR.MDL
;	Version V02-014
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; MODIFIED BY:
;
;	V02-014		PCG0004		Peter George	07-Jan-1982
;		Add HELP flag to HLP.
;
;	V02-013		PCG0003		Peter George	09-Dec-1981
;		Add LIBLIST and NOTTERM flag to HLP.
;
;	V02-012		RPG0112		Bob Grosso	11-Aug-1981
;		Support lower cased keywords
;
;	V02-011		RPG0037		Bob Grosso	20-Jul-1981
;		Add cre$c_vmsv2.
;
;	V02-010		RPG0036		Bob Grosso	15-Jul-1981
;		Add lbr$l_oldhdrptr.
;
;	V02-009		RPG0035		Bob Grosso	1-Jul-1981
;		Change lhi$w_*luhrec to lhi$l_*luhrec.
;
;	V02-008		RPG0034		Bob Grosso	18-Jun-1981
;		Change lhi$l_*luhrec to lhi$w_*luhrec.
;		Change lbr$c_maxluhlen to lbr$c_maxluhrec = 32768.
;
;	V02-007		PCG0002		Peter George	19-May-1981
;		Add PMPTDEF flag to HLP.
;
;	V02-006		PCG0001		Peter George	08-May-1981
;		Add lbr$output_help stuff.
;
;	V02-005		RPG0033		Bob Grosso	10-Apr-1981
;		Add lbr$c_maxkeylen, lhi$l_maxluhrec, lhi$l_numluhrec,
;		lhi$l_libstatus and cre$l_luhmax.
;
;	V02-004		RPG0025		Bob Grosso	20-Mar-1981
;		Add lbr$c_maxidxrd
;
;	V02-003		RPG0016		Bob Grosso	25-Feb-1981
;		Rename lbr$c_mtcbufsiz to lbr$c_putbufsiz
;
;	V02-002		RPG0012		Bob Grosso	19-Jan-1981
;		Add lbr$flush operation codes, and sizes for the buffers to
;		empty the cache.
;
;	V02-001		BLS0029		Benn Schreiber	22-Dec-1980
;			Add shareable image symbol table type.
;
; Librarian control table
;

	$STRUCT	LBR,CTLTBL

	F	ID,B			; Control table ID
	C	<
		CTLTBLID,203		; Ident for control table
		>
	F	TBLSIZ,B		; Control table size
	F	TYPE,B			; Type of library opened
	F	FUNC,B			; Operation (function) requested
	F	,B,2			; Reserved extra bytes
	F	USRFLG,L		; Flags longword
	V	<M			; Define flag bits
		LOCATE			; Use "locate" rather than "move" mode
		OPEN			; Library open
		>
	F	HDRPTR,L		; Pointer to in-core header
	F	CTXPTR,L		; Pointer to context control block
	F	CURIDX,L		; Number of current index
	F	USRNAM,L		; Pointer to user NAM block
	F	OLDHDRPTR,L		; Pointer to unmodified in-core header block
	L	LENGTH

	E

;
; Module header
;

	$STRUCT	MHD

	F	LBRFLAG,B		; Librarian-controlled flag byte
	F	ID,B			; Ident
	C	<
		MHDID,173		; Value that must be in the ident
		>
	F	,W,1			; Reserved word
	F	REFCNT,L		; Reference count
	L	REFLNG			; Length of record to end of ref count
	L	INSTIME			; Label for start of insert time
	F	DATIM,L			; Date/time inserted
	F	,L			; ...
	L	USRDAT			; Start of user additional header data
	F	USRDAT,B,0		; Start of user additional header data
	L	MHDLEN			; Length of fixed part of MHD
	F	OBJSTAT,B,1		; Status of object module
	V	<M			; Status flags
		SELSRC			;   Selective search
		OBJTIR			;   Module contains TIR records
		>
	F	OBJIDLNG,B,1		; Length of ident
	F	OBJIDENT,T,0		; Object module ident
	L	OBJIDENT		;
	E


;
; Data structures for help processing
;

	$STRUCT	HLP

	M	1
	F	DESC,L			; Address of string descriptor for line
	F	FLAGS,L			; Flags
	V	<M
		NOHLPTXT		; Line is part of text due to no help found
		KEYNAMLIN		; Line contains keynames to be printed
		OTHERINFO		; Line is part of "other info available"
		>
	F	DATA,L			; Address of user data passed to GET_HELP
	F	LEVEL,L			; Level of this help
	P	1
	V	<M
		PROMPT			; Prompting enabled
		PROCESS			; Process logical name table searches enabled
		GROUP			; Group logical name table searches enabled
		SYSTEM			; System logical name table searched enabled
		LIBLIST			; Output list of default libraries
		HELP			; Display help on help before list of topics
		SPARE1
		SPARE2

		PAGE			; Page breaks enabled
		OUTPUT			; Output listing file enabled
		LIBRARY			; Main library specified by user
		ALL			; Some logical name table searches enabled
		PAGEDEF			; Page flag defaulting disabled
		PMPTDEF			; Prompt flag defaulting disabled
		NOTTERM			; Input device is not a terminal
		>
	E

;
; Types of libraries
;

	$STRUCT	LBR

	C	<,			; Define the library types
		TYP_UNK,0		; Unknown/unspecified library type
		TYP_OBJ,1		; Object/shareable image library
		TYP_MLB,2		; Macro library
		TYP_HLP,3		; Help file library
		TYP_TXT,4		; TEXT library
		TYP_SHSTB,5		; Shareable image symbol library
		TYP_DECMX,5		; Maximum Digital library type defined
		TYP_RDEC,127		; Types between DECMX and RDEC are
					;   reserved to Digital
		TYP_USRLW,128		; User library types range from 128
		TYP_USRHI,255		;  to 255.
		>

;
; Function codes for lbr$flush
;
	C	<,
		FLUSHDATA,1		; Flush data blocks from cache
		FLUSHALL,0		; Flush data blocks, then index blocks
		>

;
; Librarian fixed parameters
;
	C	<,
		MAXRECSIZ,2048		; Maximum record size allowed
		PAGESIZE,512		; Size of memory page
		HASHSIZE,512		; Size of hash table ** Must be power of 2 **
		TEXTPAGE,508		; No. of useable bytes on a text page
		DEXTQ,50		; Library default extend quantity
		MAXCTL,16		; Maximum number of open libraries
		MAXHDRSIZ,128		; Maximum length of module header
					;  (max user length is:
					;   lbr$c_maxhdrsiz-mhd$c_length)
		DEFENTALL,300		; Number of entries to allocate by default
		RETRYOPEN,30		; Number of times to retry open on RMS$_FLK
		RETRYWAIT,1		; Number of seconds to wait between retries
		MINREAD,2		; Minimum number of blocks to read
		MAXREAD,50		; Max blocks can ever read
		MEMXTRA,50		; Number blocks to expand region by above and beyond lbr$gl_maxread
		PUTBUFSIZ,30		; Block size of VM empty cache buffer 
		FLSHBFSIZ,1		; Block size of stack mt_cache buffer
		MAXIDXRD,20		; Maximum blocks in one index read
		MAXKEYLEN,128		; Maximum length of an ASCII keyword, at most N, where
					; 3*(N+7) < or = 506
		MAXLUHREC,32768		; maximum library update history record length
		>

;
; LBR$INI_CONTROL argument list
;

	M	1
	F	,L,1			; Argument count
	F	IC_CTLTBL,L		; Control index address
	F	IC_FUNC,L		; Function
	C	<
		CREATE,0		;  Create a new library
		READ,1			;  Read an existing library
		UPDATE,2		;  Update an exisiting library
		MAXFUNC,2		; Maximum legal function
		>
	F	IC_TYPE,L		; Type of library expected to open
	P	1

;
; LBR$OPEN argument list
;

	M	1
	F	,L,1			; Argument count
	F	OP_CTLTBL,L		; Control index address
	F	OP_FNS,L		; Address of string descriptor for filename
	F	OP_CREOPT,L		; Address of create options array
	F	OP_DNS,L		; Address of descriptor for default name string
	F	OP_RLFNA,L		; Address of NAM block for related file
	F	OP_RNS,L		; Address of descriptor for related filename string
	F	OP_RNSLEN,L		; Address of longword to store resultant filename string length
	P	1

;
; LBR$CLOSE argument list
;

	F	,L,1			; Argument count
	F	CL_CTLTBL,L		; Control index address
	P	1

;
; LBR$GET_HEADER argument list
;

	M	1
	F	,L,1			; Argument count
	F	GH_CTLTBL,L		; Address of Control index
	F	GH_RETARY,L		; Address of 128-longword array for return info
	P	1

;
; LBR$SET_INDEX argument list
;

	F	,L,1			; Argument count
	F	SI_CTLTBL,L		; Control index address
	F	SI_IDXNUM,L		; Address of index number
	P	1

;
; LBR$LOOKUP_KEY argument list
;

	F	,L,1			; Argument count
	F	LK_CTLTBL,L		; Control index address
	F	LK_KEYNAM,L		; Address of string descriptor or binary value
	F	LK_TXTRFA,L		; Address of quadword to return RFA if found
	P	1

;
; LBR$INSERT_KEY argument list
;

	F	,L,1			; Argument count
	F	IK_CTLTBL,L		; Control index address
	F	IK_KEYNAM,L		; Address of string descriptor or binary value
	F	IK_TXTRFA,L		; Address of RFA of text
	P	1

;
; LBR$REPLACE_MOD argument list
;

;	F	,L,1			; Argument count
;	F	RM_CTLTBL,L		; Control index address
;	F	RM_KEYNAM,L		; Address of string descriptor or binary value
;	F	RK_TXTRFA,L		; RFA of new text
;	P	1

;
; LBR$REPLACE_KEY argument list
;
	F	,L,1			; Argument count
	F	RK_CTLTBL,L		; Control index address
	F	RK_KEYNAM,L		; Address of string descriptor or binary value
	F	RK_OLDRFA,L		; Address of RFA of old text
	F	RK_NEWRFA,L		; Address of RFA of new text
	P	1
;
; LBR$DELETE_KEY argument list
;

	F	,L,1			; Argument count
	F	DK_CTLTBL,L		; Control index address
	F	DK_KEYNAM,L		; Address of string descriptor or binary value
	P	1

;
; LBR$DELETE_DATA argument list
;

	F	,L,1			; Argument count
	F	DD_CTLTBL,L		; Control index address
	F	DD_TXTRFA,L		; Address of RFA to delete from
	P	1

;
; LBR$GET_RECORD argument list
;

	F	,L,1			; Argument count
	F	GR_CTLTBL,L		; Control index address
	F	GR_BUFDES,L		; Address of descriptor of buffer
	F	GR_BUFLEN,L		; Address of longword to return record size
	P	1

;
; LBR$PUT_RECORD argument list
;

	F	,L,1			; Argument count
	F	PR_CTLTBL,L		; Control index address
	F	PR_BUFDES,L		; Address of descriptor of buffer to output
	F	PR_TXTRFA,L		; Address of quadword to return RFA
					;  of text record
	P	1

;
; LBR$PUT_END argument list
;

	F	,L,1			; Argument count
	F	PE_CTLTBL,L		; Control index address
	P	1

;
; LBR$SEARCH argument list
;

	F	,L,1			; Argument count
	F	SR_CTLTBL,L		; Control index address
	F	SR_IDXNUM,L		; Address of index number
	F	SR_RFA,L		; Address of RFA to search index for
	F	SR_USRTN,L		; User routine to call on match
	P	1

;
; Argument list for user routine called by LBR$SEARCH
;

	F	,L,1			; Argument count
	F	SU_KEYDES,L		; Address of string descriptor or binary value
	F	SU_TXTRFA,L		; Address of array containing rfa of module
	P	1

;
; LBR$GET_INDEX argument list
;

	F	,L,1			; Argument count
	F	GI_CTLTBL,L		; Control index address
	F	GI_IDXNUM,L		; Index number
	F	GI_USRTN,L		; User routine to call for each entry
	P	1
;
; Argument list for user routine called by LBR$GET_INDEX
;

	F	,L,1			; Argument count
	F	GU_KEYADR,L		; Address of descriptor or binary value
	F	GU_TXTRFA,L		; RFA of associated text
	P	1

;
; LBR$ADD_UPDATE argument list
;

	F	,L,1			; Argument count
	F	AU_CTLTBL,L		; Control index address
	F	AU_FLAGS,L		; Flags
	F	AU_KEYNAM,L		; Address of string descriptor or binary value
	C	<			; Types of operations logged
		ADDMOD,1		; Add module
		DELMOD,2		; Delete module
		REPMOD,3		; Replace module
		>
	P	1

;
; LBR$GET_UPDATES argument list
;

	F	,L,1			; Argument count
	F	GU_CTLTBL,L		; Control index address
	F	GU_USRTN,L		; User routine to call for each update
	P	1

;
; Argument list for user routine called by LBR$GET_UPDATES
;

	F	,L,1			; Argument list
	F	UU_UPDESC,L		; String descriptor for history line
	P	1

	E

;
; Library header information array offsets
;

	$STRUCT	LHI

	F	TYPE,L			; Library type
	F	NINDEX,L		; Number of indices
	F	MAJORID,L		; Library format major id
	F	MINORID,L		; Library format minor id
	F	LBRVER,T,32		; ASCIC version of librarian that created
	F	CREDAT,L		; Creation date/time
	F	,L,1			; ...
	F	UPDTIM,L		; Date/time of last update
	F	,L,1			; ...
	F	UPDHIS,L		; VBN of start of update history
	F	FREEVBN,L		; 1st logically deleted block
	F	FREEBLK,L		; Number of deleted blocks
	F	NEXTRFA,B,6		; RFA of end of library
	F	RFAXTR,W		; Spare word, zeroed
	F	NEXTVBN,L		; Next VBN to allocate at end of file
	F	FREIDXBLK,L		; Number of free pre-allocated index blocks
	F	FREEIDX,L		; Listhead for pre-allocated index blocks
	F	HIPREAL,L		; VBN of highest pre-allocated block
	F	IDXBLKS,L		; Number of index blocks in use
	F	IDXCNT,L		; Number of index entries (total)
	F	MODCNT,L		; Number of entries in index 1 (module names)
	F	MHDUSZ,L		; Length of user-maintained info in module header
	F	MAXLUHREC,L		; Maximum number of library update histories records maintained
	F	NUMLUHREC,L		; Number of LUH records in history
	F	LIBSTATUS,L		; False if there was an error closing lib
	E

;
; Create options table
;

	$STRUCT	CRE

	F	TYPE,L			; Type of library
					;  (library types defined in $LBRDEF)
	F	KEYLEN,L		; Length of keys in library
	F	ALLOC,L			; Initial file allocation
	F	IDXMAX,L		; Maximum number of indices
	F	UHDMAX,L		; Size of additional module header data
	F	ENTALL,L		; Number of index entries to pre-allocate
	F	LUHMAX,L		; Number of library update history records to store
	F	VERTYP,L		; Version type of library to create
	C	<			
		VMSV2,2			; VMS version 2 format
		VMSV3,3			; VMS version 3 format
		>
	F	IDXOPT,L		; Index options
	V	<M
		NOCASECMP		; Do not upper case the match key
		NOCASENTR		; Do not upper case the index key when comparing with a match key
		UPCASNTRY		; Upper case the index key when entering it into the library
		>
	C	<
		HLPCASING,6		; Treat upper casing as it is for HELP libs
		OBJCASING,3		; Treat upper casing as it is for OBJECT libs
		MACTXTCAS,0		; Treat upper casing as it is for MACRO and TEXT libs
		>
	F	,L,11			; Reserved 11 longwords
	L	LENGTH			;

	E
