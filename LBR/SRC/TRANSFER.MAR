
	.TITLE	LBR_TRANSFER	transfer vectors for library access procedures
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;   FACILITY:
;
;	Library access procedure set
;
;   ABSTRACT:
;
;	The library access procedure set provides a standard method
;	for accessing libraries.
;
;   ENVIRONMENT:
;
;	Native mode, user mode
;
;   AUTHOR:
;
;	Tim Halvorsen, Benn Schreiber  August 1979
;
;   MODIFIED BY:
;
;	V02-004		RPG0004		Bob Grosso	11-Nov-1981
;		Add lbr$set_locate, lbr$set_move and lbr$ret_rmsstv.
;
;	V02-003		RPG0003		Bob Grosso	14-Aug-1981
;		Remove lbr$remove_mod
;
;	V02-002		PCG0001		Peter George	08-May-1981
;		Add lbr$output_help.
;
;	V02-001		RPG0035		Bob Grosso	22-Apr-1981
;		Add LBR$GET_HISTORY and LBR$PUT_HISTORY and remove
;		LBR$DUMP_INDEX
;--

	.PSECT	$VECTOR_0_LBR, PIC, SHR, NOWRT, EXE

;
; Define macro to set up transfer vectors
;

	.MACRO	transfer entry_point
	.TRANSFER	entry_point
	.MASK		entry_point		;Entry point mask
	BRW		entry_point+2		;Go to main routine code
	.ENDM	transfer

LBR_TRANSFER:
	transfer	LBR$INI_CONTROL		; Initialize control
	transfer	LBR$OPEN		; Open library
	transfer	LBR$CLOSE		; Close library
	transfer	LBR$LOOKUP_KEY		; Lookup key
	transfer	LBR$INSERT_KEY		; Insert key
	.BLKB	5				; removed lbr$replace_mod
	transfer	LBR$GET_RECORD		; Read text record
	transfer	LBR$PUT_RECORD		; Write module text record
	transfer	LBR$PUT_END		; Terminate writing module text
	transfer	LBR$DELETE_KEY		; Delete key
	transfer	LBR$DELETE_DATA		; Delete data
	transfer	LBR$SEARCH		; Search index for given RFA
	transfer	LBR$GET_INDEX		; Return contents of an index
	transfer	LBR$SET_INDEX		; Set current index
	transfer	LBR$SET_MODULE		; Return / update module header
	transfer	LBR$GET_HEADER		; Return library header
	transfer	LBR$FIND		; Position to read module
	.BLKB	5				; removed lbr$dump
	transfer	LBR$GET_HELP		; Return help text from HELP library
	transfer	LBR$INSERT_TIME		; Set date/time into module header
	transfer	LBR$REPLACE_KEY		; Replace key in index and update module headers
        transfer	LBR$PUT_HISTORY		; Put a library update history record
	transfer	LBR$GET_HISTORY		; Get library update history records
	transfer	LBR$OUTPUT_HELP		; Prompting and library searching help function
	transfer	LBR$SET_LOCATE		; Set locate mode
	transfer	LBR$SET_MOVE		; Set move mode
	transfer	LBR$RET_RMSSTV		; Return the RMS status value

	.BLKB	512-<.-LBR_TRANSFER>		; Pad to full page
	.END
