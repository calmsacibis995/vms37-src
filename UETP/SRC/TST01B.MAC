	.TITLE	TST01B
	.IDENT	/V03000/
	.PSECT	TST01B
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION X01
;
; WRITTEN BY TOM MILLER, SEPTEMBER, 1974
;
; MODIFIED BY LARRY JONES, JUNE 1978 (VAX/VMS SUPPORT)
;+
;
; MODULE TST01B IS DESIGNED TO COOPERATE WITH TST01A IN THE TESTING OF
; THE QIO DIRECTIVE.  PLEASE REFER TO TST01A FOR A COMPLETE DESCRIPTION
; OF THE TEST.
;
;-
	.MCALL	CALL,QIO$,WTSE$,EXIT$S,SPND$S
;
; THIS PSECT WILL CONTAIN ONLY DPBS
;
QIODPB:	QIO$	IO.WVB,TI,48.,,,,<.OBUF,0,0>
WT48:	WTSE$	48.
;
; LOCAL DATA
;
	.PSECT	TST01B
	.NLIST	BEX
LEM:	.ASCII	/%NA TASK WAS ALLOWED TO OUTPUT TO A TERMINAL/
	.ASCIZ	/ ATTACHED BY ANOTHER TASK.%N/
	.LIST	BEX
	.EVEN
	.PAGE
;+
;
;IDENTIFY TEST
;
;-
	$$TEST	1,B
;+
;
; TST01A HAS ATTACHED TI AND REQUESTED THIS TASK.  IN THIS STEP AN ERROR
; MESSAGE WILL BE SENT TO TI, SAYING THAT A MESSAGE WAS ALLOWED TO BE
; PRINTED TO A TERMINAL ATTACHED TO ANOTHER ANOTHER TASK.  THE EVENT FLAG
; SPECIFIED IS EF48.  IF THE MESSAGE GETS THROUGH, IT WILL BE APPRORIATE.
; OTHERWISE, TST01A WILL SET EF48 AFTER A TEN SECOND WAIT AND THE ERROR
; WILL BE KILLED.
;
;-
	$$STEP
	SPND$S			; WAIT TO BE CALLED
	CALL	.IDOUT		;IDENTIFY STEP
	MOV	#LEM,R1		;SET ERROR MESSAGE POINTER
	CALL	$EDMSG		;FORMAT ERROR MESSAGE IN .OBUF
	SUB	#.OBUF,R0	;CALCULATE BYTE COUNT
	MOV	#QIODPB,R3	;GET DPB POINTER
	MOV	R0,Q.IOPL+2(R3)	;MOVE IN BYTE COUNT
	DIR$	R3,.RJCT	;SEND MESSAGE TO TI
	DIR$	#WT48,.RJCT	;WAIT
	MOV	#IO.KIL,Q.IOFN(R3) ;SET UP FOR I/O KILL
	DIR$	R3,.RJCT	;ISSUE I/O KILL
	DIR$	#WT48,.RJCT	;WAIT FOR KILL
;+
;
; TI IS STILL ATTACHED TO TST01A.  IN THIS STEP AN ATTACH WILL BE ISSUED
; FOR TI AND AND A WAIT FOR THE ATTACH.  ON RETURN FROM THE WAIT THE TASK
; SIMPLY EXITS. AT THE BEGINNING OF THIS STEP TST01A IS IN A 5 SECOND
; WAIT. IF AFTER THAT WAIT EF48 IS SET (THE ATTACH COMPLETED), AN
; APPRORIATE ERROR MESSAGE IS PRINTED.  IN EITHER CASE, TST01A DETACHES
; TI AND WAITS AGAIN FOR 5 SECONDS.  AFTER THIS WAIT, EF48 SHOULD BE
; SET INDICATING THAT TST01B WAS ALLOWED TO CONTINUE AFTER A SUCCESSFUL
; ATTACH.  IF THIS IS NOT TRUE, TST01A PRINTS ANOTHER ERROR MESSAGE AND
; SETS EF48 ALLOWING TST01B TO CONTINUE AND EXIT.
;
;-
	$$STEP
	MOV	#IO.ATT,Q.IOFN(R3) ;SET FOR ATTACH FUNCTION
	DIR$	R3,.RJCT	;ISSUE ATTACH
	DIR$	#WT48,.RJCT	;WAIT FOR ATTACH
	EXIT$S	.RJCT		;EXIT ALLOWING SYSTEM TO PERFORM DETACH
	.END	STP0
