	.TITLE	TST16A
	.IDENT	/V03000/
	.PSECT	TST16A
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION X01
;
; WRITTEN BY TREVOR W. KEMPSELL, FEBRUARY 1973
; MODIFIED BY TOM MILLER FOR RSX-11M, AUGUST, 1974
; MODIFIED BY LARRY JONES FOR VAX/VMS, JULY, 1978
;
;+
; MODULE 'TST16A' IS THE MAIN TASK OF TEST16.
; IT IS DESIGNED TO TEST THE FOLLOWING RSX-11M DIRECTIVE
;
;	CANCEL SCHEDULED REQUESTS
;
;-
;
	.PAGE
;	.MCALLS FOR THE FIRST DEPTH OF MACROS
;
	.MCALL	CALL,RETURN,CLEF$C,RUN$C,RQST$C,MRKT$C,WTSE$C,CSRQ$C
	.MCALL	EXIT$S,QIO$

;
;	EVENT FLAGS USED BY THIS TASK
;
	EVFL20=20.		;EVENT FLAG USED IN MARK TIME
	EVFGN=40.		;COMMUNICATION EVENT FLAG
;
;	BUFFER FOR ADDRESS OF ASCII STRING
;	FOR ERROR MESSAGE ROUTINE
;
BAASCI:	.WORD	0
;
;	MARK TIME MAGNITUDE 1ST AND 2ND
;	MARK TIME UNITS
;
	MKT14=14.
	SEC=2
	MKT5=5
	MKT6=6

;
;	THIS IS THE ASCII STRING FOR THE ERROR MESSAGE
;	CANCEL ALL SCHEDULED REQUESTS ERROR
;
	.NLIST	BEX
ER2NDL:	.ASCII	/FAILED!!!%NTASK TST16B RAN AFTER/
	.ASCIZ	/ CANCEL ALL SCHEDULED REQUESTS ISSUED/
	.LIST	BEX
	.EVEN
	.PAGE
;
;	THIS PSECT CONTAINS THE DPB FOR
;	THE QIO DIRECTIVE
;
	.PSECT	$DPB$$
;
MSGDPB:	QIO$	IO.WLB,TI,1,,,,<.OBUF,0,40>
;
;	THIS IS THE DPB OF INCORRECT SIZE
;	FOR CANCEL SCHEDULE REQUESTS DIRECTIVE
;
CNSRES:	.BYTE	25.,4
	.RAD50	/TST16B/
	.PAGE
;
;	BACK TO PSECT TST16A
;
	.PSECT	TST16A
;+
;
;	METHOD OF TESTING CANCEL SCHEDULED REQUESTS DIRECTIVE
;	(CANCEL ALL SCHEDULED REQUESTS FOR AN INDICATED TASK)
;
;	EVENT FLAG 40 IS USED TO COMMUNICATE BETWEEN
;	TST16A AND TST16B
;
;	THIS TASK FIRST CLEARS EVENT FLAG 40
;	AND THEN SCHEDULES TST16B TO BE RUN EVERY 5 SECONDS
;	2 SECONDS FROM NOW
;
;	IT ALSO REQUESTS THE EXECUTION OF TASK TST16C
;	TASK TST16C ALSO SCHEDULES TST16B EVERY 5 SECONDS
;	1 SECOND FROM NOW
;
;	THIS TASK THEN WAITS FOR 14 SECONDS ON EVENT FLAG 20
;	THIS ALLOWS TASK TST16B TO EXECUTE 4 TIMES
;	TWICE FROM TST16A SCHEDULING
;	TWICE FROM TST16C SCHEDULING
;	TASK TST16B JUST SETS EVENT FLAG 40 AND EXITS
;
;
;	THE CANCEL SCHEDULED REQUEST DIRECTIVE IS THEN ISSUED
;	(THIS SHOULD CANCEL ALL SCHEDULED REQUESTS FOR THE
;	INDICATED TASK TST16B)
;	EVENT FLAG 40 IS CLEARED
;	THIS TASK THEN WAITS FOR 14 SECONDS ON EVENT FLAG 20
;	THIS ALLOWS TASK TST16B TO BE ACTIVATED IF
;	THE CANCEL SCHEDULE DIRECTIVE HAS NOT FUNCTIONED CORRECTLY
;
;	EVENT FLAG 40 IS THEN TESTED
;	IT SHOULD STILL BE CLEAR
;	(TASK TST16B SHOULD NOT HAVE BEEN ACTIVATED
;	IF THE CANCEL SCHEDULE DIRECTIVE HAS FUNCTIONED CORRECTLY)
;-
	.PAGE
;+
;	SET TEST NUMBER 16
;	SUBTEST A
;	STEP 0
;	AND PRINT START MESSAGE
;-
	$$TEST	16,A		;TEST 16 SUBTEST A
	CALL	.STST		;PRINT START MESSAGE
;+
;	CLEAR EVENT FLAG 40 AND THEN SCHEDULE TST16B USING
;	RUN DIRECTIVE TO BE RUN EVERY 5 SECONDS 2 SECONDS
;	FROM NEXT TICK
;-
	$$STEP
	CLEF$C	EVFGN,TST16A,.RJCT	;CLEAR EVENT FLAG 40
	RUN$C	TST16B,,,,,2,SEC,5,SEC,TST16A,.RJCT
;+
;	REQUEST THE EXECUTION OF TASK TST16C
;	TASK TST16C ALSO SCHEDULES TST16B EVERY 5 SECONDS
;	1 SECOND FROM NOW
;-
	RQST$C	TST16C,,,,,TST16A,.RJCT

;+
;	WILL NOW WAIT FOR 14 SECONDS ON EVENT FLAG 20
;	THIS ALLOWS TASK TST16B TO EXECUTE 4 TIMES
;	TWICE FROM TST16A SCHEDULING
;	TWICE FROM TST16C SCHEDULING
;	TASK TST16B JUST SETS EVENT FLAG 40 AND EXITS
;-
	MRKT$C	EVFL20,MKT14,SEC,,TST16A,.RJCT	;MARK TIME FLAG 20
	WTSE$C	EVFL20,TST16A,.RJCT	;WAIT FLAG 20
	.PAGE
;+
;	THE CANCEL SCHEDULED REQUEST DIRECTIVE
;	IS NOW ISSUED WITH NO SCHEDULER TASK SPECIFIED
;	(THIS SHOULD CANCEL ALL SCHEDULED REQUESTS FOR TST16B)
;	EVENT FLAG 40 IS CLEARED
;-
	$$STEP
	CSRQ$C	TST16B,,TST16A,.RJCT	;INVOKE DIRECTIVE
	CALL	.SUCC		;CHECK FOR VALID RETURN CODE
	CLEF$C	EVFGN,TST16A,.RJCT	;CLEAR FLAG 40
;+
;	WAIT FOR 14 SECONDS ON EVENT FLAG 20
;	THIS ALLOWS TASK TST16B TO BE ACTIVATED IF
;	THE CANCEL SCHEDULE DIRECTIVE HAS NOT FUNCTIONED CORRECTLY
;-
	MRKT$C	EVFL20,MKT14,SEC,,TST16A,.RJCT	;MARK TIME FLAG 20
	WTSE$C	EVFL20,TST16A,.RJCT		;WAIT FLAG 20
;+
;	TEST EVENT FLAG 40
;	IT SHOULD STILL BE CLEAR
;	(TASK TST16B SHOULD NOT HAVE BEEN ACTIVATED
;	IF THE CANCEL SCHEDULE DIRECTIVE HAS FUNCTIONED CORRECTLY
;-
	CLEF$C	EVFGN,TST16A,.RJCT	;CLEAR FLAG TO GET POLARITY
	CMP	$DSW,#IS.CLR	;IF IT WAS CLEARED
	BEQ	OK1		  ; THEN OK
;+
;	ERROR EVENT FLAG 40 NOT CLEAR
;	CANCEL SCHEDULE DIRECTIVE WITH UNSPECIFIED
;	SCHEDULER HAS FAILED
;	CALL ERROR ROUTINE WHICH PRINTS
;	RESPECTIVE MESSAGE
;-
	MOV	#ER2NDL,BAASCI	;PUT ADDRESS OF ERROR
				;STRING ON TO THE STACK
	CALL	CANERR		;PRINT ERROR MESSAGE
	.PAGE
;+
;
;	THIS SECTION TESTS THE ERROR CONDITIONS
;	WILL NOW TRY TO CANCEL SCHEDULE REQUEST
;	FOR A TASK THAT IS NOT INSTALLED
;-
OK1:
	MOV	#IE.INS,R1		;MOVE EXPECTED ERR STATUS
	CSRQ$C	XXAAWW,,TST16A	;CANCEL FOR NON INS TASK
	CALL	.FAIL		;CHECK STATUS
;+
;
;	CANCEL SCHEDULED REQUESTS
;	WHEN TASK NOT SCHEDULED
;	SHOULD NOT GIVE ERROR
;
;-
	$$STEP
	CSRQ$C	TST16B,,TST16A,.RJCT		;CANCEL NO SCHEDULE
	CALL	.SUCC		;CHECK FOR VALID RETURN CODE
;+
;
;	WILL NOW TRY A CANCEL SCHEDULED REQUEST WITH A
;	DPB WHICH IS OF INCORRECT SIZE
;
;-
	$$STEP
	MOV	#IE.SDP,R1			;EXPECTED ERROR
	DIR$	#CNSRES			;INVOKE DIRECTIVE
	CALL	.FAIL		;CHECK STATUS
;+
;	THIS IS THE END OF TST16A
;	PRINT THE END MESSAGE THEN
;	EXIT VIA THE EXIT DIRECTIVE
;-
	$$STEP
	CALL	.ETST			;PRINT END MESSAGE
	EXIT$S	.RJCT			;EXIT
	.PAGE
;
;	THE FOLLOWING SUBROUTINE IS CALLED IF THE CANCEL
;	SCHEDULED REQUEST DIRECTIVE FAILS
;	IT PRINTS AN ERROR MESSAGE IN THE FOLLOWING FORMAT
;
;
;
CANERR:	MOV	R0,-(SP)		;SAVE R0
	MOV	R1,-(SP)		;     R1
	MOV	R2,-(SP)		;     R2
	CALL	.IDOUT			;CREATE OUTPUT OF STEP IDENTIFICATION
	MOV	BAASCI,R1		;PUT ADDRESS OF INPUT STRING R1
	CALL	$EDMSG			;CREATE NEXT STRING OF OUTPUT MESSAGE
	SUB	#.OBUF,R0		;DETERMINE OUTPUT LENGTH
	MOV	R0,MSGDPB+Q.IOPL+2	;PUT COUNT IN DPB
	DIR$	#MSGDPB,.RJCT		;INVOKE QIO
	WTSE$C	1,TST16A,.RJCT	;WAIT EVENT FLAG 1
	MOV	(SP)+,R2			;RESTORE R2
	MOV	(SP)+,R1			;        R1
	MOV	(SP)+,R0			;        R0
	RETURN				;RETURN
	.END	STP0

