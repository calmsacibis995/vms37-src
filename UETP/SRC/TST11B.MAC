	.TITLE	TST11B
	.IDENT	/V03000/
	.PSECT	TST11B
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION X01
;
; WRITTEN BY LOUIS REICH, JANUARY,1973
; MODIFIED BY TOM MILLER FOR RSX-11M, SEPTEMBER, 1974
; MODIFIED BY LARRY JONES FOR VAX/VMS, MAY, 1978
;
;+
;
; MODULE 'TST11B' IS DESIGNED TO RUN COOPERATIVELY WITH MODULE 'TST11A'
; TO TEST THE FOLLOWING RSX-11D SYSTEM DIRECTIVES:
;	SUSPEND
;	RESUME
;
; IT IS IMPORTANT TO NOTE THAT 'TST11A' IS BUILT WITH A PRIORITY OF
; 50, WHILE 'TST11B' IS BUILT WITH A PRIORITY OF 49.
;
;-
	.MCALL CALL,RSUM$,DECL$S,DIR$,EXIT$S,SETF$S,CLEF$S,SPND$S
;
;LOCAL DATA
;
TST11A:	.RAD50 /11A/
TST11B: .RAD50 /11B/
TST11X: .RAD50 /11X/
	.NLIST	BEX
LEM:	.ASCIZ /RESUME ERROR%N RESUME FAILED TO RESTART SUSPENDED MOD/

	.LIST	BEX
	.EVEN
	.PAGE
;
;THE NEXT PSECT CONTAINS ONLY DPB'S
;
	.PSECT	$DPB$$
RSDPB:	RSUM$	TST11A
	.PAGE
	.PSECT TST11B
;+
;
; 'TST11B' HAS BEEN ACTIVATED BY THE ISSUANCE OF A SUSPEND DIRECTIVE
; IN 'TST11A'. THIS STEP SETS EF50 AND ISSUES A RESUME DIRECTIVE
; TO RESTART 'TST11A'.
;
;-
	$$TEST 	11,B
	SPND$S			; WAIT FOR TST11A TO REQUEST
	MOV	#RSDPB,R2	; GET RESUME DPB ADR
;*****
	JMP	STP3		; PRIORITY IS NOT EFFECTIVE IN VMS
;*****
	SETF$S	#50.,.RJCT	;SET EF50
	DECL$S	,.RJCT		;DECLARE SIGNIFICANT EVENT
	DIR$	R2,.RJCT	;INVOKE RESUME
	CALL	.SUCC		;CHECK FOR VALID RETURN CODE
;+
;
; 'TST11A' SHOULD HAVE BEEN ACTIVE AND CLEARED EF50. THE NEXT STEP CHECKS
; THE POLARITY OF EF50. IF IT IS STILL SET, RESUME HAS FAILED AND AN
; APPROPRIATE ERROR MESSAGE IS SENT TO THE CONSOLE.
;
;-
	$$STEP
	CLEF$S	#50.,.RJCT	;USE CLEAR FLAG TO READ EF50
	CMP	$DSW,#IS.CLR	;WAS IT CLEAR?
	BEQ	STP2		;IF SO CONTINUE WITH TEST
	CALL	.IDOUT		;GET STEP ID
	MOV	#LEM,R1		;GET MESSAGE FORMAT ADDRESS
	CALL	.PRTMG		;OUTPUT MESSAGE
	.PAGE
;+
;
; THE NEXT STEPS ATTEMPT TO ISSUE INVALID RESUMES AND CHECK THE ERROR
; RETURN CODES. FIRST 'TST11B' ATTEMPTS TO RESUME ITSELF.
;
;-
	$$STEP
	MOV	TST11B,R.SUTN+2(R2) ;MOVE TASK NAME INTO DPB
	DIR$	R2		;INVOKE RESUME
	MOV	#IE.ITS,R1	;PUT EXPECTED ERROR CODE IN R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; NEXT TRY TO RESUME A NON-EXISTANT TASK
;
;-
	$$STEP
	MOV	TST11X,R.SUTN+2(R2) ;MOVE TASK NAME INTO DPB
	DIR$	R2		;INVOKE RESUME
	MOV	#IE.INS,R1	;MOVE EXPECTED ERROR CODE INTO R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; NEXT TRY TO RESUME 'TST11A' WHICH IS IN WAIT BUT NOT SUSPENDED
;
;-
	$$STEP
;*****
	JMP	STP5		;RETURN STATUS CODE WILL BE IS.SUC
;*****
	MOV 	TST11A,R.SUTN+2(R2) ;PUT TASK NAME INTO DPB
	DIR$	R2		;INVOKE RESUME
	MOV	#IE.ITS,R1		;PUT EXPECTED ERROR CODE IN R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; NEXT INVALID DPB SIZE
;
;-
	$$STEP
	MOVB	#1,1(R2)	;PUT INVALID SIZE INTO DPB
	DIR$	R2		;INVOKE RESUME
	MOV	#IE.SDP,R1	;PUT EXPECTED ERROR CODE IN R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; NOW IT IS TIME TO ALLOW 'TST11A' TO CONTINUE, SO THE 
; NEXT STEP SETS EF51 AND EXITS
;
;-
	$$STEP
	SETF$S	#50.,.RJCT	;INDICATE TST11A SHOULD BE RUNNING
	SETF$S	#51.,.RJCT	;SET EF51
	EXIT$S	.RJCT		;EXIT
	.END	STP0
