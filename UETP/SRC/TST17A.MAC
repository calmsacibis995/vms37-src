	.TITLE	TST17A
	.IDENT	/V03000/
	.PSECT	TST17A
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION X01
;
; WRITTEN BY TREVOR W. KEMPSELL, FEBRUARY 1973
; MODIFIED BY CLARK A. D'ELIA, APRIL 1973
; MODIFIED BY TOM MILLER FOR RSX-11M, SEPTEMBER, 1974
; MODIFIED BY LARRY JONES FOR VAX/VMS, AUGUST, 1978
; MODIFIED BY LARRY JONES FOR AME change in CMKT$ DIB size
;
;
;+
; MODULE 'TST17A' IS THE MAIN TASK OF TEST17
; IT IS DESIGNED TO TEST THE FOLLOWING RSX-11M DIRECTIVE
;
;	CANCEL MARK-TIME REQUESTS
;
;
;	METHOD OF TESTING CANCEL MARK TIME DIRECTIVE
;	PART 1 (CANCEL ALL MARK TIME REQUESTS)
;	EVENT FLAG 45 IS USED TO COMMUNICATE BETWEEN
;	TST17A AND TST17B
;
;	THIS TASK FIRST SETS EVENT FLAG 45
;	AND REQUESTS THE EXECUTION OF TASK TST17B
;	THE PROGRAM THEN WAITS FOR 15 SECONDS ON EVENT FLAG 20
;
;	DURING THIS PERIOD TASK TST17B
;	WILL EXECUTE
;	TASK TST17B SETS MARK TIME FOR 5 AND 10 SECONDS
;	USING EVENT FLAG 40 AND THEN CANCELS ALL ITS
;	MARK TIMES THEN WAITS ON EVENT FLAG 40
;	(IT SHOULD NOW WAIT INDEFINITELY ON EVENT FLAG 40)
;
;	THIS TASK CHECKS THAT EVENT FLAG 45 IS STILL
;	SET (IF THE CANCEL MARK TIME DIRECTIVE IN TST17B
;	HAS NOT FUNCTIONED CORRECTLY THE TASK WILL HAVE
;	RESUMED EXECUTION BY NOW AND WILL HAVE CLEARED
;	EVENT FLAG 45)
;
;	EVENT FLAG 40 IS THEN SET
;	TO LET TST17B RESUME EXECUTION AND EXIT
;-
	.PAGE

;
;	.MCALLS FOR THE FIRST DEPTH OF MACROS
;
	.MCALL CALL,RETURN,RQST$C,MRKT$C,WTSE$C,SETF$C,EXIT$S
	.MCALL CMKT$S,ASTX$S,QIO$,DECL$S

	;
;	THIS IS THE ASCII STRING FOR THE ERROR MESSAGE
;	CANCEL ALL MARK TIME REQUEST HAS FAILED
;
	.NLIST	BEX
ERRNDL:	.ASCII	/FAILED!!!%NCANCEL MARK TIME REQUEST /
	.ASCIZ	/ERROR HAS NOT CANCELED ALL MARK TIMES/

ERASTC:	.ASCII	/FAILED!!!%NCANCEL MARK TIME REQUEST /
	.ASCIZ	/ERROR ON CANCEL WITH SPECIFIED  'AST'/
	.LIST	BEX
	.EVEN
;
;	EVENT FLAGS USED BY THIS TASK
;
	NULLF=0			;USED IN ERROR CHECKING
	MKTMF=20.		;USED MARK TIME AND WAIT
	EVETF=45.		;COMMUNICATION FLAG
	EVT40=40.		;USED BY TST17B IN MARK TIME
	INVALF=70.		;USED IN ERROR CHECKING
;
;	MARK TIME MAGNITUDE
;	MARK TIME UNITS
;
	MKT20=20.		;20
;
;	THIS IS THE BUFFER FOR THE ERROR TEXT ADDRESS
;
BAASSI:	.WORD	0
	.PAGE
;
;	THIS PSECT CONTAINS THE DPB'S FOR
;	THE QIO AND WAIT DIRECTIVE
;
	.PSECT	$DPB$$
MSGDPB:	QIO$	IO.WLB,TI,1,,,,<.OBUF,0,40>
;
;	THIS IS A DPB FOR CANCEL MARK
;	TIME WITH AN INVALID DPB SIZE
;
CNMKTM:	.BYTE	27.,4
	.WORD	NULLF
	.WORD	NULLF
	.PAGE
;
;	BACK TO PSECT TST17A
;
	.PSECT	TST17A
;+
;	SET TEST NUMBER 17
;	SUBTEST A
;	STEP 0
;	AND PRINT START MESSAGE
;-
	$$TEST	17,A		;TEST 17 SUBTEST A
	CALL	.STST		;PRINT START MESSAGE

;+
;	SET EVENT FLAG 45, INVOKE MARK TIME FOR 20 SECONDS USING
;	FLAG 20, AND THEN REQUEST TST17B.
;-
	$$STEP
	SETF$C	EVETF,TST17A,.RJCT	;SET EVENT FLAG 45
	MRKT$C	MKTMF,MKT20,SECOND,,TST17A,.RJCT	;INVOKE MARK TIME
	RQST$C	TST17B,,,,,TST17A,.RJCT ;INVOKE REQUEST
;+
;	NOW WAIT FOR REMAINDER OF 20 SECOND PERIOD ON EVENT FLAG 20
;
;	DURING THIS PERIOD TASK TST17B
;	WILL EXECUTE
;	TASK TST17B SETS MARK TIME FOR 5 AND 10 SECONDS
;	USING EVENT FLAG 40 AND THEN CANCELS ALL ITS
;	MARK TIMES THEN WAITS ON EVENT FLAG 40
;	(IT SHOULD NOW WAIT INDEFINITELY ON EVENT FLAG 40)
;	THE MARK TIME INITIATED BY TST17A SHOULD NOT BE CANCELLED
;-
	$$STEP
	WTSE$C	MKTMF,TST17A,.RJCT		;WAIT ON FLAG 20
	.PAGE
;+
;
;	CHECK THAT EVENT FLAG 45 IS STILL SET
;	(IF THE CANCEL MARK TIME DIRECTIVE IN TST17B
;	HAS NOT FUNCTIONED CORRECTLY THE TASK WILL
;	HAVE RESUMED EXECUTION BY NOW AND WILL HAVE
;	CLEARED EVENT FLAG 45)
;
;-
	SETF$C	EVETF,TST17A,.RJCT	;SET FLAG TO GET ORIGINAL
					;POLARITY
	CMP	$DSW,#IS.SET		;CHECK IF FLAG WAS SET
	BEQ	NEXTS			;BRANCH IF EQUAL
;+
;
;	ERROR EVENT FLAG 45 IS NOT SET
;	TST17B HAS RESUMED EXECUTION
;	CANCEL MARK TIME IS NOT FUNCTIONING CORRECTLY
;	PRINT ERROR MESSAGE
;
;-
	MOV	#ERRNDL,BAASSI		;MOVE ADDRESS OF ERROR TEXT
	CALL	CMTERR			;PRINT ERROR MESSAGE
;+
;
;	SET EVENT FLAG 40 TO LET
;	TST17B RESUME EXECUTION AND EXIT
;
;-
NEXTS:	SETF$C	40.,TST17A,.RJCT	;SET EF54
	DECL$S	,.RJCT		;DECLARE SIGNIFICANT EVENT
	.PAGE
;+
;	WILL NOW TEST CANCEL MARK TIME REQUEST WITH A SPECIFIED
;	AST
;
;	TO DO THIS A MARK TIME REQUEST IS ISSUED
;	FOR 5 SECONDS WITH AN AST WHICH SETS EVENT FLAG 12 THEN EXITS
;
;	THE MARK TIME  IS THEN CANCELLED
;
;	THE PROGRAM THEN SETS MARK TIME FOR 10 SECONDS
;	ON EVENT FLAG 20 AND WAITS ON EVENT FLAG 20
;
;	WHEN EXECUTION IS RESUMED THE PROGRAM EXPECTS
;	TO FIND EVENT FLAG 12 CLEAR
;
;	AN ERROR HAS OCCURRED IN CANCEL MARK TIME REQUEST
;	WITH A SPECIFIED AST IF THIS IS NOT SO
;	AND THE RESPECTIVE ERROR MESSAGE IS PRINTED
;
;
;
;	MARK TIME AST 'F12AST' FOR 5 SECONDS
;-
	$$STEP
	MRKT$C	,5,2,F12AST,TST17A,.RJCT	;MARK TIME AST 1
;+
;	CANCEL MARK TIME REQUESTS
;-
	CMKT$S	,,.RJCT		;CANCEL
	CALL	.SUCC		;CHECK FOR VALID RETURN CODE
;+
;	NOW WAIT FOR 10 SECONDS ON FLAG 20
;-
	$$STEP
	MRKT$C	20.,10.,2,,TST17A,.RJCT		;MARK TIME 10 SEC FLAG 20
	WTSE$C	20.,TST17A,.RJCT		;WAIT FLAG 20
	.PAGE
;+
;
;	CHECK THAT EVENT FLAG 12 IS CLEAR
;	IF NOT,  ERROR IN CANCEL MARK TIME REQUEST
;	WITH A SPECIFIED AST
;
;-
	MOV	#ERASTC,BAASSI		;MOVE MESSAGE STRING ADDRESS
	SETF$C	12.,TST17A,.RJCT	;SET FLAG TO CHECK FORMER
					;POLARITY
	CMP	$DSW,#IS.CLR		;TEST IF IT WAS CLEAR
	BEQ	NEXT2			;OK IF SET
	CALL	CMTERR			;PRINT ERROR IF NOT
	JMP	NEXT2			;GO TO NEXT TEST
;
;	THIS IS THE AST FOR
;	THE ABOVE TEST
;
;	  SET EVENT FLAG 12 AND EXIT
;	VIA AST EXIT DIRECTIVE
;
F12AST:	SETF$C	12.,TST17A,.RJCT	;SET EVENT FLAG 12
	TST	(SP)+			;POP EVENT FLAG NUMBER
	ASTX$S	.RJCT			;EXIT FROM AST
	.PAGE
;
;
;
;+
;	THIS SECTION TESTS THE ERROR CONDITIONS
;	WILL NOW CANCEL MARK TIME WITH AN INVALID DPB SIZE
;
;-
	$$STEP
	MOV	#IE.SDP,R1		;MOVE EXPECTED ERROR
	DIR$	#CNMKTM		;INVOKE MACRO
	CALL	.FAIL		;CHECK STATUS
;+
;	THIS IS THE END OF TST17A
;	PRINT THE END MESSAGE THEN EXIT
;	VIA THE EXIT DIRECTIVE
;-
NEXT2:
	$$STEP
	CALL	.ETST			;PRINT END MESSAGE
	EXIT$S	.RJCT			;EXIT
	.PAGE
;
;	THE FOLLOWING SUBROUTINE IS CALLED IF THE CANCEL
;	MARK TIME DIRECTIVE FAILS
;	IT PRINTS AN ERROR MESSAGE IN THE FOLLOWING FORMAT
;
;
CMTERR:	MOV	R0,-(SP)		;SAVE R0
	MOV	R1,-(SP)		;SAVE R1
	MOV	R2,-(SP)		;SAVE R2
	CALL	.IDOUT			;CREATE OUTPUT OF STEP IDENTIFICATION
	MOV	BAASSI,R1		;PUT ADDRESS OF INPUT STRING R1
	CALL	$EDMSG			;CREATE NEXT STRING OF OUTPUT MESS
	SUB	#.OBUF,R0		;DETERMINE OUTPUT LENGTH
	MOV	R0,MSGDPB+Q.IOPL+2	;PUT COUNT IN DPB
	DIR$	#MSGDPB,.RJCT		;INVOKE QIO
	WTSE$C	1,TST17A,.RJCT		;WAIT ON EVENT FLAG 1
	MOV	(SP)+,R2		;RESTORE R2
	MOV	(SP)+,R1		;RESTORE R1
	MOV	(SP)+,R0		;RESTORE R0
	RETURN				;RETURN
	.END	STP0
