	.TITLE	TST12B
	.IDENT	/V03000/
	.PSECT	TST12B
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; VERSION X01
;
; WRITTEN BY LOUIS REICH, JANUARY,1973
; MODIFIED BY CLARK A. D'ELIA, MAY 1973
; MODIFIED BY TOM MILLER FOR RSX-11M, AUGUST, 1974
; MODIFIED BY LARRY JONES FOR VAX/VMS, JULY, 1978
;
;+
;
; MODULE TST12B IS REQUESTED BY TST12A AND PERFORMS TESTS ON
; THE EXITIF DIRECTIVE.
; TST12B IS REQUESTED TWICE AND PERFORMS DIFFERENT TESTS EACH TIME.
; BEFORE REQUESTING TST12B THE FIRST TIME, TST12A CLEARS EF54. TST12B
; SETS EF54 AND DECIDES WHICH SET OF TESTS TO PERFORM BY OBSERVIN WHETHER
; THE FLAG WAS ORIGINAL CLEAR OR SET.  THE FIRST TIME TST12B IS
; REQUESTED IT CHECKS OUT ALL ERROR CONDITIONS IN CALLS TO EXITIF
; IT THEN WAITS TO BE ABORTED BY TST12A.  THE SECOND TIME TST12B IS
; REQUESTED IT PERFORMS TWO VALID CALLS TO EXITIF.  ONE WITH THE
; SPECIFIED EVENT FLAG SET AND ONE IT CLEAR.  THE SECOND TIME IT SHOULD
; EXIT.
;
;-
;
;-
	.MCALL	CALL,EXIF$,EXIT$S,WTSE$S,CLEF$S,SETF$S,DECL$S,SPND$S
;
; THE NEXT PSECT CONTAINS ONLY DPB'S
;
	.PSECT	$DPB$$
XIFDPB:	EXIF$	10.
XIFERR:	EXIF$	95.		;INVALID EVENT FLAG NUMBER
	.NLIST	BEX
LEM:	.ASCIZ	/EXITIF FAILED TO EXIT FROM MODULE/
	.LIST	BEX
	.EVEN
	.PAGE
	.PSECT	TST12B
;+
;
; THIS STEP INITIATES THIS SUBTEST
;
;-
	$$TEST	12,B
	SPND$S			; WAIT TO BE CALLED
	SETF$S	#54.,.RJCT	;SET EF54
	CMP	$DSW,#IS.CLR	;WAS IT CLEAR?
	BNE	SET2		;IF NOT PERFORM SECOND SET OF TESTS
;+
;
; THIS TESTS THE EXITIF DIRECTIVE
; BY ATTEPTING TO ISSUE AN EXITIF DIRECTIVE WITH AN INVALID
; EVENT FLAG NUMBER SPECIFICATION.
;
;-
	$$STEP
	MOV	#XIFERR,R0	;GET ADDRESS OF EXITIF DPB
	DIR$	R0		;INVOKE EXITIF DIRECTIVE
	MOV	#IE.IEF,R1	;MOVE EXPECTED ERROR CODE TO R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; NEXT AN INVALID DPB SIZE
;
;-
	$$STEP
	MOVB	#5,1(R0)	;MOVE INVALID SIZE INTO DPB
	DIR$	R0		;INVOKE EXITIF DIRECTIVE
	MOV	#IE.SDP,R1	;MOVE EXPECTED ERROR CODE TO R1
	CALL	.FAIL		;CHECK ERROR CODE
;+
;
; THE NEXT STEP OUTPUTS THE END OF TEST MESSAGE AND 
; WAITS TO BE ABORTED.
;
;-
	$$STEP
	SETF$S	#53.,.RJCT	;SET EF53 TO ALLOW TST12A TO CONTINUE
	DECL$S	,.RJCT		;DECLARE SIGNIFICANT EVENT
	CLEF$S	#10.,.RJCT	;CLEAR FLAG FOR INDEFINATE WAIT
	WTSE$S	#10.,.RJCT	;WAIT TO BE ABORTED BY TST12A
	.PAGE
;+
;
; THIS GROUP OF TESTS PERFORMS VALID TESTS ON THE EXITIF DIRECTIVE.
; FIRST SET EF10 WHICH IS THE FLAG TO BE TESTED BEFORE EXITTING.
; THEN ATTEMPT TO EXIT WITH THE FLAG SET.
;
;-
SET2:
	$$STEP
	SETF$S	#10.,.RJCT	;SET EF10
	DIR$	#XIFDPB,.RJCT	;INVOKE EXITIF DIRECTIVE
	MOV	#IS.SET,R1	;MOVE EXPECTED ERROR CODE TO R1
	CALL	.STAT		;CHECK ERROR CODE
;+
;
; NEXT WE CLEAR EF10 AND THEN ATTEMPT A GOOD EXITIF ON TEST12A.
;
;-
	$$STEP
	CLEF$S	#10.,.RJCT	;CLEAR EF10
	DIR$	#XIFDPB.,.RJCT	;INVOKE EXITIF DIRECTIVE
;+
;
; THE NEXT STEP SHOULD NEVER EXECUTE IF IT DOES IT ISSUES AND ERROR
; MESSAGE AND EXITS VIA THE EXIT DIRECTIVE
;
;-
	$$STEP
	CALL	.IDOUT		;GET STEP ID
	MOV	#LEM,R1		;GET ERROR MESSAGE FORMAT ADDRESS
	CALL	.PRTMG		;OUTPUT MESSAGE
	EXIT$S	.RJCT
	.END	STP0
