!++
!
! UETP.COM  VAX/VMS UETP COMMAND FILE
!	.IDENT	'V03-009'
!
! CREATED BY: Larry Jones, 18-Mar-1981
!
! MODIFIED BY:
!
!	V03-009 LDJ0005		Larry D. Jones,		07-Apr-1982
!		Reduced WSEXTENT during the NATIVE_UTIL phase because SORT32
!		could not get fixed in time. Should be removed when SORT is fixed.
!
!	V03-008	RNH0003		Richard N. Holstein,	18-Jan-1982
!		Add edit history for V03-007.  Define SS phase logical names
!		to account for tailored systems.  Define CONVERT command to
!		deal with tailored systems.  Minor cleanup and commenting.
!		Simplify ERROR and CONTROLY handling.
!
!	V03-007 LDJ0004		Larry D. Jones,		29-Dec-1981
!		Don't do compatability mode utilities if SYS$SYSTEM:LBR.EXE is
!		missing.
!
!	V03-006 LDJ0003		Larry D. Jones,		22-Dec-1981
!		Added code to limit the PARCNT parameter in the device test
!		phase to the LOADS limit for the system.
!
!	V03-005	LDJ0002		Larry D. Jones,		04-Nov-1981
!		Added code to deallocate lines allocated to DECnet during
!		the UETINIT01 program execution and device test phase.
!
!	V03-004	RNH0002		Richard N. Holstein,	30-Sep-1981
!		Modified to make things easier to run just a single phase.
!
!	V03-003	LDJ0001 	Larry D. Jones,		29-Sep-1981
!		Fix UETP.LOG per pass error and delete LOAD
!		log file error.
!
!	V03-002	RNH0001		Richard N. Holstein,	21-Sep-1981
!		Add Native Mode Utilities phase.
!
!	V03-001	RNP0001		Robert N. Perron,	10-Sep-1981
!		Modified to handle log files correctly.
!
!**
!--
$!
$! Set up those things we need in order to start the UETP.
$!
$ DEFINE MODE NORMAL
$ ON ERROR THEN GOTO END
$ ON CONTROLY THEN GOTO CNTRLY
$ IF "''F$SEARCH("SYS$SYSTEM:CONVERT.EXE")'" .EQS. ""-	! Allow the UETP...
	.AND. "''F$LOGICAL("LIB$SYSTEM")'" .NES. ""-	! ...to live on a...
	THEN DEFINE/SYSTEM CONVERT LIB$SYSTEM:CONVERT	! ...tailored system
$!
$!	INITIALIZATION PHASE
$!
$ OPEN/ERR=SKIPREN UET UETP.LOG
$ CLOSE UET
$ OPEN/ERR=SKIPDEL UET OLDUETP.LOG
$ CLOSE UET
$ DELETE OLDUETP.LOG;*
$SKIPDEL:
$ RENAME UETP.LOG;* OLDUETP.LOG;*
$SKIPREN:
$!
$ RUN UETINIT00
$ IF '$SEVERITY' .NE. 1 THEN EXIT $STATUS
$!
$ DEFINE/USER SYS$OUTPUT NET.DAT 
$ SHOW DEV NET0:
$ OPEN/READ/ERROR=EARLY_END NETFILE NET.DAT
$ READ/ERROR=EARLY_END NETFILE RECORD
$ NET=1
$ IF "''F$EXTRACT(2,1,RECORD)".EQS."S" THEN NET=0
$ CLOSE NETFILE
$ DELETE NET.DAT;*
$ IF NET.NE.0 THEN GOTO A20
$ WRITE SYS$OUTPUT " "
$ WRITE SYS$OUTPUT "*** NOTE ***"
$ WRITE SYS$OUTPUT "No DECnet software available. No DECnet testing being done."
$ WRITE SYS$OUTPUT " "
$A20:
$!
$ IF "''F$LOGICAL("UETPPHASE")" .NES. "DEVICE" .AND.-
	"''F$LOGICAL("UETPPHASE")" .NES. "ALL" THEN GOTO SKIP_INIT01
$ IF NET.EQ.0 THEN GOTO NOININET
$!
$! Disable DECnet allocation of communication devices for the UETINIT01 program
$!
$ SET PROC/PRIV=OPER
$ MC NCP
SET KNOWN CIRCUITS STATE OFF
SET KNOWN LINES STATE OFF
CLEAR KNOWN LINES ALL
CLEAR KNOWN CIRCUITS ALL
EXIT
$ SET PROC/PRIV=NOOPER
$NOININET:
$!
$ RUN UETINIT01
$ IF $SEVERITY .NE. 1 THEN EXIT $STATUS
$ APPEND UETINIT01.LOG UETP.LOG
$ DELETE UETINIT01.LOG;*
$SKIP_INIT01:
$!
$!
$ PASS=0
$ SET NOON
$LOOP:
$ IF PASS.NE.0 THEN CREATE UETP.LOG
$ PASS=PASS+1
$ GOTO 'F$LOGICAL("UETPPHASE")
$!
$! The label ALL is a placeholder needed to run the entire UETP.
$ALL:
$!
$DEVICE:
$!
$!	DEVICE TEST PHASE
$!
$ IF NET.EQ.0 THEN GOTO DEV_SKIP
$!
$! Disable DECnet allocation of communication devices for device test phase.
$!
$ SET PROC/PRIV=OPER
$ MC NCP
SET KNOWN CIRCUITS STATE OFF
SET KNOWN LINES STATE OFF
CLEAR KNOWN LINES ALL
CLEAR KNOWN CIRCUITS ALL
EXIT
$ SET PROC/PRIV=NOOPER
$DEV_SKIP:
$!
$ DEFINE FILNAM UETCONT00.DAT
$ DEFINE PARCNT 'F$LOGICAL("TEST_COUNT")
$ IF 'F$LOGICAL("PARCNT") .GT. 'F$LOGICAL("LOADS") -
	THEN DEFINE PARCNT 'F$LOGICAL("LOADS")
$ RUN UETPHAS00
$ DEAS FILNAM
$ DEAS PARCNT
$ APPEND UETPDEV00.LOG UETP.LOG
$ DELETE UETPDEV00.LOG;*
$ IF NET.EQ.0 THEN GOTO DEV_SKIP1
$!
$! Enable DECnet for the rest of the UETP.
$!
$ SET PROC/PRIV=OPER
$ MC NCP
SET KNOWN LINES ALL
SET KNOWN CIRCUITS ALL
EXIT
$ SET PROC/PRIV=NOOPER
$DEV_SKIP1:
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "DEVICE" THEN GOTO ENDPASS
$!
$SYSTEM_SERVICE:
$!
$!	NATIVE MODE SYSTEM SERVICE TEST PHASE
$!
$ DEFINE/GROUP SYSTST$ABORT NO		! Assume no abort requested
$ DEFINE/GROUP SYSTST$ERRS 1		! Assume only 1 error (obsolete)
$ DEFINE/SYSTEM SYSTST$RES SYS$DISK:'F$DIRECT()	! Location of Sys. Svc. test images
$ DEFINE FILNAM UETNATV00.DAT
$ DEFINE PARCNT 1
$ RUN UETPHAS00
$ DEAS FILNAM
$ DEAS PARCNT
$ DEAS/GROUP SYSTST$ABORT
$ DEAS/GROUP SYSTST$ERRS
$ DEAS/SYSTEM SYSTST$RES
$ APPEND UETNATV00.LOG UETP.LOG
$ DELETE UETNATV00.LOG;*
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "SYSTEM_SERVICE" THEN GOTO ENDPASS
$!
$RMS32:
$!
$!	RMS-32 TEST PHASE
$!
$ DEFINE FILNAM UETNRMS00.DAT
$ DEFINE PARCNT 1
$ RUN UETPHAS00
$ DEAS FILNAM
$ DEAS PARCNT
$ CONVERT/APPEND UETNR0000.LOG UETP.LOG
$ DELETE UETNR0000.LOG;*
$ DELETE UETNRMS00.LOG;*
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "RMS32" THEN GOTO ENDPASS
$!
$LOAD:
$!
$!	LOAD TEST PHASE
$!
$ DEFINE FILNAM UETLOAD00.DAT
$ DEFINE PARCNT 'F$LOGICAL("LOADS")'
$ RUN UETPHAS00
$ DEAS FILNAM
$ DEAS PARCNT
$ APPEND UETLOAD00.LOG UETP.LOG
$ DELETE UETLO*.LOG;*
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "LOAD" THEN GOTO ENDPASS
$!
$RSX_UTILITY:
$!
$!	COMPATIBILITY MODE UTILITY TEST PHASE
$!
$ IF "''F$SEARCH("SYS$SYSTEM:LBR.EXE")'" .NES. "" THEN GOTO RSX_UTIL1
$ WRITE SYS$OUTPUT "SYS$SYSTEM:LBR.EXE not found. No RSX utility testing being done."
$ GOTO END_RSX_UTILITY
$RSX_UTIL1:
$ DEFINE FILNAM UETCOMP00.DAT
$ DEFINE PARCNT 1
$ RUN UETPHAS00
$ DEAS FILNAM
$ DEAS PARCNT
$ CONVERT/APPEND UETCO0000.LOG UETP.LOG
$ DELETE UETCO0000.LOG;*
$ DELETE UETCOMP00.LOG;*
$END_RSX_UTILITY:
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "RSX_UTILITY" THEN GOTO ENDPASS
$!
$RSX_EXEC_DIRECTIVE:
$!
$!	COMPATIBILITY MODE EXECUTIVE DIRECTIVE TEST PHASE
$!
$ @UETCOMP02
$ CONVERT/APPEND UETCOMP02.LOG UETP.LOG
$ DELETE UETCOMP02.LOG;*
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "RSX_EXEC_DIRECTIVE" THEN GOTO ENDPASS
$!
$NATIVE_UTILITY:
$!
$!	NATIVE MODE UTILITY TEST PHASE
$!
$ WSEXTENT = F$GETJPI(0,"WSEXTENT")
$ WSQUOTA = F$GETJPI(0,"WSQUOTA")
$ WSLIMIT = F$GETJPI(0,"DFWSCNT")
$ SET WORK/EXTENT=500
$ DEFINE FILNAM UETNUTL00.DAT
$ DEFINE PARCNT 1
$ RUN UETPHAS00
$ SET WORK/EXTENT='WSEXTENT/QUOTA='WSQUOTA/LIMIT='WSLIMIT
$ DEAS FILNAM
$ DEAS PARCNT
$ CONVERT/APPEND UETNU0000.LOG UETP.LOG
$ DELETE UETNU0000.LOG;*
$ DELETE UETNUTL00.LOG;*
$!
$ IF "''F$LOGICAL("UETPPHASE")" .EQS. "NATIVE_UTILITY" THEN GOTO ENDPASS
$!
$DECNET:
$ IF NET.EQ.0 THEN GOTO ENDNET
$!
$!	DECNET TEST PHASE
$!
$ DEFINE FILNAM UETDNET00.DAT
$ DEFINE PARCNT 1
$ RUN UETPHAS00
$ DEAS PARCNT					 ! Get rid of logical names
$ DEAS FILNAM
$ SUC_EXIT:
$ SET NOON
$ CONVERT/APPEND UETDN0000.LOG UETP.LOG		 ! Save the log file stuff
$ DELETE UETDN0000.LOG;*
$ DEL UETDNET00.LOG;*				 ! Clean up the mess
$ DEL UETNETS00.LOG;*
$ DEL UETDNET01.DAT;*
$ENDNET:
$!
$ENDPASS:
$ SET NOVERIFY
$ WRITE SYS$OUTPUT " ***********************************************"
$ WRITE SYS$OUTPUT " *                                             *"
$ WRITE SYS$OUTPUT "    END OF PASS ''PASS AT ''F$TIME()    "
$ WRITE SYS$OUTPUT " *                                             *"
$ WRITE SYS$OUTPUT " ***********************************************"
$ IF PASS .LT. F$LOGICAL("PASSCNT") THEN GOTO LOOP
$ GOTO END
$!
$!
$CNTRLY:
$ WRITE SYS$OUTPUT "UETP Aborted via CNTRL/Y."
$!
$END:
$ SET NOON
$ SET MESSAGE/NOFACILITY/NOIDENTIFICATION/NOSEVERITY/NOTEXT
$ DELETE UETCONT00.DAT;*
$ DEAS/GROUP TEST_COUNT
$ DEAS/GROUP LOADS
$ DEAS/GROUP PASSCNT
$ DEAS/GROUP REPORT
$ DEAS MODE
$ DEAS/GROUP MODE
$ DEAS/GROUP UETPPHASE
$ DEAS/GROUP UET$MAGTAP
$ DEAS/SYSTEM CONVERT
$ SET MESSAGE/FACILITY/IDENTIFICATION/SEVERITY/TEXT
$ EXIT
