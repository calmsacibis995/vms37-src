$!++
$! UETP VERSION 2.0 SORT UTILITY TEST COMMAND PROCEDURE
$! AUTHOR: JACK CHAO,     CREATION DATE: OCTOBER, 1979
$!
$! MODIFIED BY:
$!
$!           VERSION 2.00 : NOV-79
$!
$!--
$ SET NOVERIFY
$ WRITE SYS$ERROR ""
$ WRITE SYS$ERROR " ************ NATIVE MODE SORT TEST ************ "
$ IF UET$SAME .EQ. 0 THEN -
  WRITE SYS$OUTPUT " *********** NATIVE MODE SORT TEST ************ "
$ WRITE SYS$ERROR ""
$ WRITE SYS$ERROR "*** VAX-11 SORT TESTS BEGINNING AT ''F$TI() ***"
$ IF UET$SAME .EQ. 0 THEN -
  WRITE SYS$OUTPUT "*** VAX-11 SORT TESTS BEGINNING AT ''F$TI() ***"
$ WRITE SYS$ERROR ""
$          !
$          ! HANDLE CONTROL_Y AND ERROR CONDITIONS
$          !
$ ON CONTROL_Y THEN GOTO OUT
$ ON ERROR THEN GOTO FINI
$          !
$          ! PERFORM MAJOR SORT FUNCTIONAL TESTS
$          !
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST1
$ SORT/KEY:(POS:1,SIZE:3,CHARACTER,ASCENDING) SORT.DAT TEST2
$ SORT/KEY:(POS:1,SIZE:3,CHARACTER,DESCENDING) SORT.DAT TEST3
$ SORT/KEY:(POS:1,SIZE:3,NUMBER:1,ASCENDING) SORT.DAT TEST4
$ SORT/KEY:(POS:1,SIZE:4,BINARY, ASCENDING) SORT.DAT TEST5
$ SORT/KEY:(POS:1,SIZE:3)/PROCESS:RECORD SORT.DAT TEST6
$ SORT/KEY:(POS:1,SIZE:3)/PROCESS:TAG SORT.DAT TEST7
$ SORT/KEY:(POS:1,SIZE:3)/WORK_FILES:4 SORT.DAT TEST10
$ SORT/KEY:(POS:1,SIZE:3)/WORK_FILES:12 SORT.DAT TEST11
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT/FORMAT:(RECORD_SIZE:132) TEST12
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT/FORMAT:(FILE_SIZE:50) TEST13
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST14/FORMAT:(VARIABLE:132)
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST15/FORMAT:(CONT:80,SIZE:2)
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST16/SEQUENTIAL
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST17/RELATIVE/FORMAT:VAR:81
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT-
  TEST18/RELATIVE/BUCKET_SIZE:2/FORMAT:VAR:81
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST19/SEQ/ALLOCATE:50
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST20/ALLOCATE:50/CONT
$ SORT/KEY:(POS:1,SIZE:3) SORT.DAT TEST21/ALLOCATE:40
$          !
$          ! LINKING ALL SORTED FILES INTO ONE AND VERIFY IT'S RESULTS
$          !
$ APPEND TEST2.DAT;*,TEST3.DAT;*,TEST4.DAT;*,TEST5.DAT;*,-
  TEST6.DAT;*,TEST7.DAT;*,TEST10.DAT;*,TEST11.DAT;*,TEST12.DAT;*,-
  TEST13.DAT;*,TEST15.DAT;*,TEST16.DAT;*,TEST19.DAT;*,TEST20.DAT;*,-
  TEST21.DAT;* TEST1.DAT
$ DIF SMFILE1.DAT TEST1.DAT/OUTPUT=TEMP1.DAT
$ DIF SMFILE2.DAT TEST14.DAT/OUTPUT=TEMP2.DAT
$ MCR CNV TMP1.DAT=TEST17.DAT
$ DIF SMFILE3.DAT TMP1.DAT/OUTPUT=TEMP3.DAT
$ MCR CNV TMP2.DAT=TEST18.DAT
$ DIF SMFILE4.DAT TMP2.DAT/OUTPUT=TEMP4.DAT
$ DELETE TMP%.DAT;*
$          !
$          ! APPEND VERIFIED FILES AND CHECK TO REPORT THE RESULTS
$          !
$ COUNT=0
$ NUMBER=0
$ APPEND TEMP2.DAT;*,TEMP3.DAT;*,TEMP4.DAT;* TEMP1.DAT
$ OPEN/ERROR=FINI CHECK TEMP1.DAT
$INLOOP:
$ READ/END_OF_FILE=GETOFF CHECK DATA
$ WORD:='F$EXTRACT(25,8,DATA)
$ IF WORD .NES. "* DIF --" THEN GOTO INLOOP
$NEXT:
$ READ/END_OF_FILE=GETOFF CHECK DATA
$ NUMBER=NUMBER+1
$ IF NUMBER .NE. 9 THEN GOTO NEXT
$ STRING:='F$EXTRACT(16,4,DATA)
$ IF STRING .EQS. "NONE" THEN COUNT=COUNT+1
$ NUMBER=0
$ GOTO INLOOP
$GETOFF:
$ IF COUNT .EQ. 4 THEN GOTO OK
$ WRITE SYS$ERROR " VERIFICATION OF SORT TESTS FAIL AT CASE ''COUNT "
$ IF UET$SAME .EQ. 0 THEN -
  WRITE SYS$OUTPUT " VERIFICATION OF SORT TESTS FAIL AT CASE ''COUNT "
$ GOTO FINI
$OK:
$ WRITE SYS$ERROR "   VERIFICATION OF SORT TESTS SUCCESSFUL   "
$ IF UET$SAME .EQ. 0 THEN -
  WRITE SYS$OUTPUT "   VERIFICATION OF SORT TESTS SUCCESSFUL   "
$          !
$          ! CLEANUP RUN-TIME FILES AND PRINTS THE ENDING MESSAGE
$          !
$FINI:
$ CLOSE CHECK
$ DELETE TEST%.*;*,TEST%%.*;*,TEMP%.*;*
$OUT:
$ WRITE SYS$ERROR ""
$ WRITE SYS$ERROR "*** VAX-11 SORT TESTS ENDING AT ''F$TI() ***"
$ IF UET$SAME .EQ. 0 THEN -
  WRITE SYS$OUTPUT "*** VAX-11 SORT TESTS ENDING AT ''F$TI() ***"
$ WRITE SYS$ERROR ""
$          !
$          !------ END OF THIS COMMAND PROCEDURE ------
$          !
