$	ON WARNING THEN STOP	! STOP COM PROCEDURES ON ANY ERROR
$	INFO:= 3		! INFO SEVERITY CODE
$	RUN SYSTST$RES:SATSUT12	! RUN MODULE TO CHECK FOR ABORT REQUEST
$	IF $SEVERITY.NE.INFO THEN GOTO CONT ! IF NOT INFO, JUST CONTINUE
$	QUITSCAN == YES		! ABORT REQUESTED, INDICATE QUIT SCAN PHASE
$	QUITEXEQ == YES		! .... AND EXECUTE PHASE, TOO
$	DISP:== "ABORTED BY USER" ! SET UP ABORTION MESSAGE FOR LATER
$	EXIT			! ... AND GO BACK TO CALLER
$CONT:
$	IF PHASE.EQ.SCAN THEN GOTO CHEKARG
$	IF .NOT.F'GN THEN GOTO SK1 ! IF CURR. SYS. SERV. FLAG IS CLEAR, SKIP IT
$ ! EXECUTE THE "FAIL" AND "SUCCESSFUL" IMAGES FOR THE CURRENT SYSTEM SERVICE
$ !
$ !
$ ! NOTE -- LEADING ZERO MUST BE PRESENT IN STATUS SYMBOL
$ !           NAME FOR IMAGE NUMBERS LESS THAN 10
$ !
$ !
$ ! STATUS OF EACH TEST MODULE IMAGE IS INDICATED BELOW BY THE
$ ! VALUE ASSIGNED TO THE SYMBOL STXXX, WHERE XXX ARE THE LAST
$ ! 3 CHARACTERS OF THE TEST MODULE IMAGE NAME. THE STATUS CODES
$ ! ARE DEFINED IN THE GLOBALS2.COM FILE.
$ !
$ !
$	IF FAIL.EQ.01 THEN	STF01 = READY
$	IF FAIL.EQ.02 THEN	STF02 = READY
$	IF FAIL.EQ.03 THEN	STF03 = READY
$	IF FAIL.EQ.04 THEN	STF04 = READY
$	IF FAIL.EQ.05 THEN	STF05 = READY
$	IF FAIL.EQ.06 THEN	STF06 = READY
$	IF FAIL.EQ.07 THEN	STF07 = READY
$	IF FAIL.EQ.08 THEN	STF08 = READY
$	IF FAIL.EQ.09 THEN	STF09 = READY
$	IF FAIL.EQ.10 THEN	STF10 = READY
$	IF FAIL.EQ.11 THEN	STF11 = READY
$	IF FAIL.EQ.12 THEN	STF12 = READY
$	IF FAIL.EQ.13 THEN	STF13 = READY
$	IF FAIL.EQ.14 THEN	STF14 = READY
$	IF FAIL.EQ.15 THEN	STF15 = READY
$	IF FAIL.EQ.16 THEN	STF16 = READY
$	IF FAIL.EQ.17 THEN	STF17 = READY
$	IF FAIL.EQ.18 THEN	STF18 = READY
$	IF SUCC.EQ.01 THEN	STS01 = READY
$	IF SUCC.EQ.05 THEN	STS05 = NRTC
$	IF SUCC.EQ.07 THEN	STS07 = READY
$	IF SUCC.EQ.08 THEN	STS08 = READY
$	IF SUCC.EQ.09 THEN	STS09 = READY
$	IF SUCC.EQ.10 THEN	STS10 = READY
$	IF SUCC.EQ.22 THEN	STS22 = READY
$	IF SUCC.EQ.26 THEN	STS26 = READY
$	IF SUCC.EQ.30 THEN	STS30 = READY
$	IF SUCC.EQ.35 THEN	STS35 = READY
$	IF SUCC.EQ.36 THEN	STS36 = READY
$	IF SUCC.EQ.37 THEN	STS37 = READY
$	IF SUCC.EQ.38 THEN	STS38 = READY
$	IF SUCC.EQ.39 THEN	STS39 = READY
$	IF SUCC.EQ.40 THEN	STS40 = READY
$	IF SUCC.EQ.41 THEN	STS41 = READY
$	IF SUCC.EQ.42 THEN	STS42 = READY
$	IF SUCC.EQ.43 THEN	STS43 = READY
$	IF SUCC.EQ.44 THEN	STS44 = READY
$	IF SUCC.EQ.45 THEN	STS45 = READY
$	IF SUCC.EQ.46 THEN	STS46 = READY
$	IF SUCC.EQ.47 THEN	STS47 = READY
$	IF SUCC.EQ.50 THEN	STS50 = READY
$	IF SUCC.EQ.52 THEN	STS52 = READY
$	IF SUCC.EQ.53 THEN	STS53 = READY
$	IF SUCC.EQ.54 THEN	STS54 = READY
$	IF SUCC.EQ.55 THEN	STS55 = READY
$	IF SUCC.EQ.56 THEN	STS56 = READY
$	IF SUCC.EQ.60 THEN	STS60 = READY
$	IF SUCC.EQ.61 THEN	STS61 = READY
$	IF SUCC.EQ.70 THEN	STS70 = READY
$	IF SUCC.EQ.71 THEN	STS71 = READY
$	IF SUCC.EQ.72 THEN	STS72 = READY
$	IF SUCC.EQ.73 THEN	STS73 = READY
$	IF SUCC.EQ.74 THEN	STS74 = READYP
$	IF SUCC.EQ.78 THEN	STS78 = READY
$	IF SUCC.EQ.79 THEN	STS79 = READY
$	IF SUCC.EQ.80 THEN	STS80 = READY
$	IF SUCC.EQ.81 THEN	STS81 = READY
$	IF SUCC.EQ.82 THEN	STS82 = READY 
$	IF SUCC.EQ.83 THEN	STS83 = READY
$	IF SUCC.EQ.90 THEN	STS90 = READY
$	IF SUCC.EQ.91 THEN	STS91 = READY
$ !
$ !
$ !
$ !
$	STF:== 'Q'STF'FAIL	! GET QUOTED SYMBOL FOR STATUS
$	STF:== 'STF		! GET STATUS VALUE
$	IF "''F$EXT(FAIL,1,AVECF)'".EQS."A" THEN STF == ALEX
$				! IF MOD ALREADY EXECUTED, CHANGE STATUS
$	STS:== 'Q'STS'SUCC	! GET QUOTED SYMBOL FOR STATUS
$	STS:== 'STS		! GET STATUS VALUE
$	IF "''F$EXT(SUCC,1,AVECS)'".EQS."A" THEN STS == ALEX
$				! IF MOD ALREADY EXECUTED, CHANGE STATUS
$	IMSGA:= """      IMAGE"""
$	IMSGB:= """ WILL NOT BE RUN """
$	IMSG4:= """ EXECUTING......"""
$	IMSG5:= """ WILL PRODUCE TEST CASE FAILURE"""
$	IMSG6:= """ IS UNDER TEST"""
$	IMSG10:= """ PREVIOUSLY EXECUTED ABOVE"""
$	IMSG11:= """ TEST CASE NOT READY"""
$	IMSG12:= """ SUSPECTED VMS PROBLEM"""
$	IMNAMF:=" "		! INITIALIZE FAIL IMAGE NAME
$	IMNAMS:=" "		! INITIALIZE SUCCESS IMAGE NAME
$	IF FAIL.NE.ZEROES THEN IMNAMF:=SATSSF'FAIL ! GET IMAGE NAME
$	IF SUCC.NE.ZEROES THEN IMNAMS:=SATSSS'SUCC ! GET IMAGE NAME
$	_:=" "			! SKIP ....
$	SHOW SYM _		! .... A LINE
$	_:="*"			! PRINT ........
$	SHOW SYM _		! .. EYE-CATCHER
$	SHOW SYM _		! .... FOUR.....
$	SHOW SYM _		! ...... TIMES..
$	SHOW SYM _		! ..............
$	_:=" "			! SKIP ....
$	SHOW SYM _		! .... A LINE
$	_:="   SYSTEM SERVICE: "'S' ! FORMAT SERVICE NAME
$	SHOW SYM _		! ... AND PRINT IT
$	_:="   IMAGE(S): "'IMNAMF'"  "'IMNAMS' ! FORMAT IMAGE NAMES
$	SHOW SYM _		! ... AND PRINT THEM
$	X:=1			! INDICATE 1ST IMAGE FOR THIS SERVICE
$	IF FAIL.EQ.ZEROES THEN GOTO NXIM ! IF NO FAIL IMAGE, TRY SUCC
$	IMNUM:='FAIL		! ESTABLISH 1ST IMAGE NUMBER
$	IMNAM:='IMNAMF		! ESTABLISH 1ST IMAGE NAME
$	STAT=STF		! ESTABLISH STATUS VALUE FOR "FAIL" IMAGE
$	LTEMP=IMNUM+1		! USED IN LEXICAL FUNCTION BELOW
$	LTEMP1=50-IMNUM		! USED IN LEXICAL FUNCTION BELOW
$	IF STAT.LE.READY THEN -
	  AVECF:== 'F$EXT(0,IMNUM,AVECF)"A"'F$EXT(LTEMP,LTEMP1,AVECF)
$				! IF IMAGE IS READY, IND ALREADY-EXECUTED
$SELECT:
$	_:=" "			! SKIP .....
$	SHOW SYM _		! .... A LINE
$	IMMHD:="'IMSGA' 'IMNAM'" ! SAVE CONSTANT PART OF IMAGE MSG
$	IF STAT.LE.READY THEN GOTO RUN ! RUN IF READY
$	TEMP:='Q'IMSG'STAT	! GET QUOTED SYMBOL FOR MSG SEGMENT
$	IF STAT.GE.ALEX THEN GOTO NOTRUN ! DO NOT RUN IF NOT READY
$	_:= 'IMMHD''TEMP'	! DISPLAY QUALIFIED READY ...
$	SHOW SYM _		! ..... MESSAGE
$RUN:
$	_:= 'IMMHD''IMSG4'	! DISPLAY "EXECUTING" ...
$	SHOW SYM _		! ....... MESSAGE
$	_:=" "			! SKIP .....
$	SHOW SYM _		! .... A LINE
$	ON WARNING THEN ERRTOT==ERRTOT+1 ! TOTAL UP TEST ERRORS
$	RUN SYSTST$RES:'IMNAM	! RUN THE IMAGE
$	ON WARNING THEN STOP	! STOP COM PROCEDURES ON ANY ERROR
$	GOTO NXIM		! GO CHECK FOR MORE IMAGES
$NOTRUN:
$	_:='IMMHD''IMSGB'___'TEMP' ! PUT FULL MSG TOGETHER
$	SHOW SYM _		! PRINT NOT-RUN MSG
$NXIM:
$	X=X+1			! INCREMENT TO NEXT IMAGE
$	IF X.GT.2 THEN GOTO SK1 ! DONE IF BOTH IMAGES EXECUTED
$	IF SUCC.EQ.ZEROES THEN GOTO SK1 ! DONE IF NO SUCC IMAGE
$	IMNUM:='SUCC		! ESTABLISH 2ND IMAGE NUMBER
$	IMNAM:='IMNAMS		! ESTABLISH 2ND IMAGE NAME
$	STAT=STS		! ESTABLISH STATUS VALUE FOR "SUCCESSFUL" IMAGE
$	LTEMP=IMNUM+1		! USED IN LEXICAL FUNCTION BELOW
$	LTEMP1=150-IMNUM	! USED IN LEXICAL FUNCTION BELOW
$	IF STAT.LE.READY THEN -
	  AVECS:== 'F$EXT(0,IMNUM,AVECS)"A"'F$EXT(LTEMP,LTEMP1,AVECS)
$				! IF IMAGE IS READY, IND ALREADY-EXECUTED
$	GOTO SELECT		! GO PROCESS 2ND IMAGE
$ SK1:
$	F'GN == F'GN/2		! SHIFT ONE BIT TO RIGHT FOR NEXT SERVICE
$	EXIT
$ CHEKARG:
$	SP:= 'PR''S'
$	GP:= 'PR''G'
$	IF (P.NES.SP).AND.(P.NES.GP) THEN GOTO SK2
$				! IF NO MATCH, SKIP FLAG SETTING
$	QUITSCAN == YES		! INDICATE QUIT TO CALLING COM LEVEL
$	IF P.EQS.SP THEN GOTO SETFLG ! SET FLAG IF ARGUMENT IS SERV NAME
$	F'GN == R		! ARG IS GROUP NAME -- SET ALL ONES OR ZEROES
$	GOTO SK2		! ... AND GET OUT
$ SETFLG:
$ ! *********  SET OR CLEAR (BASED ON R) BIT # SN IN F'GN **********
$	X:=0			! INITIALIZE EXPONENT
$	TEMP:=1			! INIT MASK HOLDING POWER OF 2
$ LOOP:
$	IF X.GE.SN THEN GOTO ANDOR ! MASK IS COMPLETE WHEN EXP =  SERVICE NO.
$	TEMP=TEMP*2		! MOVE BIT TO LEFT BY GETTING NEXT 2 POWER
$	X=X+1			! GET NEXT EXPONENT
$	GOTO LOOP		! ... GO SEE IF DONE
$ ANDOR:			! CORRECT MASK IS IN TEMP
$	IF R.EQ.ZEROES THEN GOTO OFF ! IF R IS ZERO, TURN OFF BIT
$	F'GN == F'GN.OR.TEMP	! TURN ON BIT FOR THIS SERVICE
$	GOTO SK2		! ... AND PREPARE TO LEAVE
$ OFF:
$	F'GN == F'GN.AND.(.NOT.TEMP) ! TURN OFF BIT FOR THIS SERVICE
$ SK2:
$	SN == SN+1		! GET NEXT SERVICE NUMBER IN GROUP
