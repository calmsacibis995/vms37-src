	.TITLE	SHOWMAGTAPE - SHOW CHARACTERISTICS OF A MAGTAPE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	CLI UTILITY "SHOW"
;
; ABSTRACT:	SHOW THE CHARACTERISTICS OF A MAGTAPE
;
; AUTHOR:	LEN KAWELL 5-JUN-78
;
; MODIFIED BY:
;
;	V02-004	GAS0003		Gerry Smith		07-Aug-1981
;		Remove some W^ references.
;
;	V02-003	MIR0003		Michael I. Rosenblum	30-Jul-1981
;		Short literal offsets too small changed them to
;		PUSHAL using a word offset.
; 01	-
;
; 101	Gary W. Fowler	15-Mar-1979
;	 Issue an error message if device class returned in secondary
;	 characteristics is not DC$_TAPE.
;
; 102	Gary W. Fowler	20-AUG-79
;	 Added TS11 support
;
; 103	Gary W. Fowler	1-Nov-1979
;	Add TU78 type and density value of 6250
;--
;
; LOCAL MACROS
;
	.MACRO	CALLBAK	P1,P2
	.IF B <P2>
	PUSHAB	W^BITS			; ADDRESS OF BIT MASK
	.IFF
	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
	.ENDC
	PUSHAB	W^SHOW$A_CLIWORK	; COMMON WORK AREA
	PUSHAB	P1			; THE REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
	.ENDM				;
 
;
; EXTERNAL SYMBOLS
;
	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
	$DCDEF				; DEFINE DEVICE TYPES & CLASSES
	$MTDEF				; DEFINE MAGTAPE CHARACTERISTICS
;
; LOCAL STORAGE
;
	.PSECT	SHOW$RWDATA,NOEXE,LONG
 
;
; STORAGE
;
CHAN:		.LONG	0		; CHANNEL NUMBER
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK
UTIL_DESC:	.LONG	0,0		; UTILITY DESC
GET_SEC_INFO:	.LONG	48
		.LONG	SEC_INFO-4
		.LONG	0
SEC_INFO:	.BLKL	12
;
GET_CHAN_INFO:	.LONG	48
		.LONG	CHAN_INFO-4
		.LONG	0
CHAN_INFO:	.BLKL	12
;
CHAR_LIST:	.REPT	11
		.LONG	NULL_STR
		.ENDR
NULL_STR:	.BYTE	0
;
; READ ONLY DATA
;
	.PSECT	SHOW$RDATA,NOEXE,LONG
 
DEV_NAME:
	$CLIREQDESC	RQTYPE=CLI$K_INPUT1	; GET THE DEVICE NAME
;
; TYPE NAMES
;
TYPE_NAME:
	.LONG	1$,2$,3$,4$,5$,6$
1$:	.ASCIC	/UNKNOWN/
2$:	.ASCIC	/TE16/
3$:	.ASCIC	/TU45/
4$:	.ASCIC	/TU77/
5$:	.ASCIC	/TS11/
6$:	.ASCIC	/TU78/
;
; DENSITY VALUES
;
DENSITY:
	.LONG	1$,2$,3$
1$:	.ASCIC	/800/
2$:	.ASCIC	/1600/
3$:	.ASCIC	/6250/
;
; FORMAT TYPES
;
FORMAT:
	.LONG	1$,2$,3$
1$:	.ASCIC	/Normal-11/
2$:	.ASCIC	/Coredump-11/
3$:	.ASCIC	/Normal-15/
;
; STATUS VALUES
;
STATUS:
	.LONG	1$,2$,3$,4$,5$
1$:	.ASCIC	/Beginning-of-Tape /
2$:	.ASCIC	/End-of-File /
3$:	.ASCIC	/End-of-Tape /
4$:	.ASCIC	/Write-locked /
5$:	.ASCIC	/Position Lost /
;
DEFAULT:
	.ASCIC	/Default/
EVEN:
	.ASCIC	/Even/
ODD:
	.ASCIC	/Odd/

;
;
TAPE_MSG:
	.ASCIC	/TAPE/				; FOR ERROR MESSAGE
;
; TABLE DEFINING POSSIBLE DEVICE CLASSES
;
DEVICE_CLASS:
	.BYTE	DC$_DISK
	.BYTE	DC$_LP
	.BYTE	DC$_TERM
	.BYTE	DC$_CARD
	.BYTE	DC$_MAILBOX
	.BYTE	DC$_REALTIME
	.BYTE	DC$_SCOM
COUNT_CLASS = .-DEVICE_CLASS
;
;
CLASS_TXTADR:
	.LONG	1$,2$,3$,4$,5$,6$,7$,8$
1$:	.ASCIC	/DISK/
2$:	.ASCIC	/PRINTER/
3$:	.ASCIC	/TERMINAL/
4$:	.ASCIC	/CARDREADER/
5$:	.ASCIC	/MAILBOX/
6$:	.ASCIC	/REALTIME/
7$:	.ASCIC	/SCOM/
8$:	.ASCIC	/UNKNOWN/
;
;

	.PSECT	SHOW$CODE,NOWRT
;++
; SHOW$MAGTAPE - SHOW MAGTAPE CHARACTERISTICS
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SHOWS THE CHARACTERISTICS OF A SPECIFIED MAGTAPE.
; IT IS ENTERED AS A RESULT OF A DISPATCH FROM THE SHOW COMMAND PROCESSOR.
;
; INPUTS:
;
;	THE CLI DATA BASE IS SET UP. 
;
; OUTPUTS:
;
;	R0 = STATUS OF THE OPERATION
;--
SHOW$MAGTAPE::				; SHOW MAGTAPE COMMAND
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>
	MOVAB	W^DEV_NAME,R6		; ADDRESS QUAL DESC
	CALLBAK	(R6)			; CALL CLI FOR DEVICE NAME
	MOVAB	CLI$Q_RQDESC(R6),R6	; ADDRESS NAME DESC
	$GETDEV_S	(R6),,W^GET_CHAN_INFO,,GET_SEC_INFO
	BLBS	R0,SHOW
;
; ERROR IN GETTING CHARACTERISTICS
;
ERROR:
	MOVL	R0,W^SHOW$L_STATUS	; SAVE FOR EXIT STATUS
	RET				; RETURN
;
;
;
SHOW:					; 
	MOVAB	W^CHAR_LIST,R6		; ADDR. ARGLST
	MOVAB	W^SEC_INFO+8,R2		; ADDR. OF CHARACTERISTICS
	MOVZWL	(R2)+,R0		; UNIT NO. TO R0
	MOVZBL	(R2),R3			; GET OFFSET TO DEVICE NAME
	MOVAB	W^SEC_INFO-4[R3],(R6)+	; ADDR. OF DEVICE NAME
	MOVL	R0,(R6)+		; UNIT NO. TO ARGLST
;
; CHECK IF DEVICE CLASS IS TAPE
;
	MOVZBL	-10(R2),R2		; DEVICE CLASS TO R2
	CMPB	R2,#DC$_TAPE		; COMPARE CLASSES
	BEQL	SAMEAS			; BR IF SAME
;
; DEVICE DOES NOT HAVE CLASS=DC$_TAPE
;
	MOVAL	TAPE_MSG,(R6)+	; ADDR. OF "TAPE" TO ARGLST
	MOVZBL	#COUNT_CLASS,R3		; ASSUME CLASS IS UNKNOWN
	LOCC	R2,#COUNT_CLASS,W^DEVICE_CLASS	; FIND CLASS IN TABLE
	BEQL	20$			; BR IF NOT FOUND
	SUBL3	R0,#COUNT_CLASS,R3	; CALC. INDEX INTO MESS ADDR.
;
; OUTPUT "XXXX is not a TAPE   Device Class is: XXXX"
;
20$:	MOVL	W^CLASS_TXTADR[R3],(R6)+
	PUSHAL	SHOW$_NOTCLASS	; MESSAGE IDENTIFIER
	PUSHAB	W^CHAR_LIST		; ADDR. OF ARGLST
	CALLS	#2,SHOW$PRINT_MSG	; PRINT MESSAGE
	RET
;
; OUTPUT CHARACTERISTICS
;
SAMEAS:	PUSHAL	SHOW$_MAGT_L1		; SET UP TO PRINT
	PUSHAB	W^CHAR_LIST
	CLRL	R4			; ASSUME UNKNOWN
	CMPB	W^CHAN_INFO+1,#DT$_TE16	; IN RANGE?
	BLSSU	10$
	CMPB	W^CHAN_INFO+1,#DT$_TU78	; IN RANGE?
	BGTRU	10$
 	MOVZBL	W^CHAN_INFO+1,R4	; GET TYPE VALUE
10$:	MOVL	W^TYPE_NAME[R4],(R6)+	; ADDRESS TYPE

;
; DENSITY,
;
	MOVL	W^CHAN_INFO+4,R5	; GET DEVICE-DEPENDENT CHARACTERISTICS
	MOVAB	W^DEFAULT,(R6)		; ASSUME DEFAULT DENSITY
	EXTZV	#MT$V_DENSITY,#MT$S_DENSITY,R5,R4 ; GET DENSITY VALUE
	BEQL	20$			; BR IF DEFAULT
	CMPB	R4,#MT$K_GCR_6250	; IN RANGE?
	BGTRU	20$			; BR IF NO
	SUBL	#MT$K_NRZI_800,R4	; CONVERT TO TABLE INDEX
	BLSS	20$			; BR IF NOT IN RANGE
	MOVL	W^DENSITY[R4],(R6)	; SET DENSITY

;
; FORMAT,
;
20$:	TSTL	(R6)+			;
	MOVAB	W^DEFAULT,(R6)		; ASSUME DEFAULT FORMAT
	EXTZV	#MT$V_FORMAT,#MT$S_FORMAT,R5,R4 ; GET FORMAT VALUE
	BEQL	30$			; BR IF DEFAULT
	CMPB	R4,#MT$K_NORMAL15	; IN RANGE?
	BGTRU	30$			; BR IF NO
	SUBL	#MT$K_NORMAL11,R4	; CONVERT TO TABLE INDEX
	BLSS	30$			; BR IF NOT IN RANGE
	MOVL	W^FORMAT[R4],(R6)	; SET FORMAT

;
; STATUS,
;
30$:	MOVL	#MT$V_BOT,R3		; GET LOWEST VALUED STATUS BIT
	CLRL	R4			; INIT TABLE INDEX
40$:	TSTL	(R6)+			; INCREMENT ARGLIST POINTER
	BBC	R3,R5,50$		; BR IF STATUS NOT OCCURING
	MOVL	W^STATUS[R4],(R6)	; SET STATUS NAME
50$:	INCL	R4			; INCREMENT TABLE INDEX
	AOBLEQ	#MT$V_LOST,R3,40$	; CHECK NEXT BIT?

;
; AND PARITY
;
	TSTL	(R6)+			;
	MOVAB	W^ODD,(R6)		; ASSUME ODD PARITY
	BBC	#MT$V_PARITY,R5,60$	; BR IF IT IS ODD
	MOVAB	W^EVEN,(R6)		; ELSE SET TO EVEN

60$:	CALLS	#2,W^SHOW$PRINT_MSG
	RET
	.END
