	.TITLE	SETTIME - SET SYSTEM TIME
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	CLI UTILITY "SET"
;
; ABSTRACT:	SET THE SYSTEM TIME
;
; AUTHOR:	LEN KAWELL 28-FEB-1979
;
;	V002	TMH0002		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;--
;
; LOCAL MACROS
;
	.MACRO	CALLBAK	P1,P2
	.IF B <P2>
	PUSHAB	W^BITS			; ADDRESS OF BIT MASK
	.IFF
	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
	.ENDC
	PUSHAB	W^SET$A_CLIWORK	; COMMON WORK AREA
	PUSHAB	P1			; THE REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
	.ENDM				;
 
;
; LOCAL STORAGE
;
	.PSECT	SET$RWDATA,NOEXE,LONG
 
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK

TIME:					; TIME IN SYSTEM TIME FORMAT
	.QUAD	0

STRING_VAL:				; REQUEST FOR ASCII VALUE
	$CLIREQDESC	RQTYPE=CLI$K_ASCIIVAL

	.PAGE
	.PSECT	SET$CODE,NOWRT
;++
; SET$TIME - SET SYSTEM TIME
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SETS THE SYSTEM TIME.  IT IS ENTERED AS A RESULT OF A
; DISPATCH FROMT THE SET COMMAND PROCESSOR.
;
; INPUTS:
;
;	THE CLI DATA BASE IS SET UP. 
;
; OUTPUTS:
;
;	SET$L_STATUS = STATUS OF THE OPERATION
;--
SET$TIME::				; SET TIME COMMNAD
	.WORD	^M<R2,R3>
	MOVAB	W^STRING_VAL,R2		; GET ADDR OF REQUEST DESC
	MOVAB	W^SET$T_TIMEQUAL,R3	; GET ADDR OF TIME QUALIFIER DESC
	TSTW	CLI$W_QDVALSIZ(R3)	; WAS THERE A TIME VALUE?
	BEQL	10$			; BR IF NOT
	CALLBAK	(R2),(R3)		; CALL CLI FOR TIME
	PUSHAQ	TIME			; SET ADDR OF TIME BUFFER
	PUSHAQ	CLI$Q_RQDESC(R2)	; SET ADDR OF INPUT STRING DESC
	CALLS	#2,LIB$CVT_TIME		; CONVERT TO SYSTEM TIME FORMAT
	BLBC	R0,ERROR		; BR IF ERROR
10$:
	$SETIME_S TIME			; SET THE SYSTEM TIME
	BLBC	R0,ERROR		; BR IF ERROR
	RET				;

ERROR:	MOVL	R0,W^SET$L_STATUS	; SAVE FOR EXIT STATUS
	RET				; RETURN

	.END
