	.TITLE	SETPRINT - SET CHARACTERISTICS OF A PRINTER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;++
; FACILITY:	CLI UTILITY "SET"
;
; ABSTRACT:	SET THE CHARACTERISTICS OF A PRINTER
;
; AUTHOR:	R.HEINEN 21-NOV-1977
;
; MODIFIED BY:
;
;	V005	TMH0005		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;
;	V02-004	EAD0002		Elliott A. Drayton	 2-Jan-1982
;		Removed code for support of davfu.
;
;	V02-003	EAD0001		Elliott A. Drayton	24-Aug-1981
;		Added definitions for wrap, passall, printall and davfu.
;
; 02	Gary W. Fowler
;	Change to use secondary characteristics returned by $GETCHN
;
; 01	-
;--
;
; LOCAL MACROS
;
	.MACRO	CALLBAK	P1,P2
	.IF B <P2>
	PUSHAB	W^BITS			; ADDRESS OF BIT MASK
	.IFF
	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
	.ENDC
	PUSHAB	W^SET$A_CLIWORK	; COMMON WORK AREA
	PUSHAB	P1			; THE REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
	.ENDM				;
 
;
; EXTERNAL SYMBOLS
;
	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
	$LPDEF				; DEFINE PRINTER CHARACTERISTICS
	$DCDEF				; DEVICE CLASS DEFINITIONS
;
; LOCAL STORAGE
;
	.PSECT	SET$RWDATA,NOEXE,LONG
 
CHAN:		.LONG	0		; PRINTER CHANNEL NUMBER
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK
IOSTATUS:	.LONG	0,0		; IOSB FOR PRINTER GET CHARACTERISTICS
GET_CHAN_INFO:	.LONG	16
		.LONG	CHAN_INFO-4
		.LONG	0
CHAN_INFO:
CLASS:		.BLKB	1
LP_TYPE:	.BLKB	1
WIDTH:		.BLKW	1
LP_CHAR:	.BLKB	4
MASK:		.BLKB	3
PAGESIZ:	.BLKB	1
ENABLE:		.BLKL	1
;
QIO:	$QIO	FUNC=IO$_SETMODE,EFN=1,IOSB=IOSTATUS,P1=CHAN_INFO,P2=8
LP_NAME:
	$CLIREQDESC	RQTYPE=CLI$K_INPUT1	; GET THE INPUT OR PRINTER NAME
CHAR_QUAL:
	$CLIREQDESC	RQTYPE=CLI$K_GETQUAL,QUALST=QUALS
NUM_VAL:
	$CLIREQDESC	RQTYPE=CLI$K_NUMERVAL
QUALS:
	$CLIQUALDESC	QDCODE=CLI$K_STLP_LA11,TRUACT=LA11
	$CLIQUALDESC	QDCODE=CLI$K_STLP_LA18,TRUACT=LA18
	$CLIQUALDESC	QDCODE=CLI$K_STLP_LP11,TRUACT=LP11
	$CLIQUALDESC	QDCODE=CLI$K_STLP_UNKN,TRUACT=UNKN
CR_QUAL:$CLIQUALDESC	QDCODE=CLI$K_STLP_CR,TRUACT=CR,QDFLGS=<CLI$V_QDEXPA>,-
			FLSACT=NOCR
FF_QUAL:$CLIQUALDESC	QDCODE=CLI$K_STLP_FF,TRUACT=FF,FLSACT=NOFF,-
			QDFLGS=<CLI$V_QDEXPA>
	$CLIQUALDESC	QDCODE=CLI$K_STLP_LOWE,TRUACT=LOWE,FLSACT=UPPE,-
			QDFLGS=<CLI$V_QDEXPA>
PAGE_QUAL:$CLIQUALDESC	QDCODE=CLI$K_STLP_PAGE,TRUACT=PAGE
	$CLIQUALDESC	QDCODE=CLI$K_STLP_UPPE,TRUACT=UPPE,FLSACT=LOWE,-
			QDFLGS=<CLI$V_QDEXPA>
WIDT_QUAL:$CLIQUALDESC	QDCODE=CLI$K_STLP_WIDT,TRUACT=WIDT

PASS_QUA:$CLIQUALDESC	QDCODE=CLI$K_STLP_PASS,TRUACT=PASS,FLSACT=NOPA,-
			QDFLGS=<CLI$V_QDEXPA>

WRAP_QUA:$CLIQUALDESC	QDCODE=CLI$K_STLP_WRAP,TRUACT=WRAP,FLSACT=NOWR,-
			QDFLGS=<CLI$V_QDEXPA>

PRIN_QUA:$CLIQUALDESC	QDCODE=CLI$K_STLP_PRIN,TRUACT=PRIN,FLSACT=NOPR,-
			QDFLGS=<CLI$V_QDEXPA>

	$CLIQUALDESC	END_LIST

	.PSECT	SET$CODE,NOWRT
;++
; SET$PRINT - SET PRINTER CHARACTERISTICS
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SETS THE CHARACTERISTICS OF A SPECIFIED PRINTER.
; IT IS ENTERED AS A RESULT OF A DISPATCH FROM THE SET COMMAND PROCESSOR.
;
; INPUTS:
;
;	THE CLI DATA BASE IS SET UP. 
;
; OUTPUTS:
;
;	SET$L_STATUS = STATUS OF THE OPERATION
;--
SET$PRINT::				; SET PRINTER COMMAND
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>
	MOVAB	W^LP_NAME,R6		; ADDRESS QUAL DESC
	CALLBAK	(R6)			; CALL CLI FOR PRINTER NAME
	MOVAB	CLI$Q_RQDESC(R6),R6	; ADDRESS NAME DESC
20$:	$ASSIGN_S	(R6),W^QIO+8	; ASSIGN CHANNEL TO DEVICE
	BLBC	R0,ERROR		; IF LOW CLEAR THEN ERROR AND EXIT
	$GETCHN_S	CHAN=W^QIO+8,-
			SCDBUF=W^GET_CHAN_INFO
	BLBC	R0,ERROR		; IF LOW CLEAR THEN ERROR
	CMPB	W^CLASS,#DC$_LP		; IS DEVICE A PRINTER?
	BEQL	SET_CHAR		; IF EQL YES
	MOVZWL	#SS$_IVDEVNAM,R0	; ELSE INVALID DEVICE ERROR
;
; ERROR IN GETTING CHARACTERISTICS
;
ERROR:	MOVL	R0,W^SET$L_STATUS	; SAVE FOR EXIT STATUS
	RET				; RETURN
;
; PROCESS DATA
;
SET_CHAR:				; PROCESS DATA
	CLRQ	W^MASK			; ZERO MASK AND ENABLES
	MNEGB	#1,W^ENABLE+3		; SET PAGE MAGIC
	MOVB	W^CHAN_INFO+7,W^PAGESIZ	; SET UP OLD PAGE
	MOVZWL	#IO$_SETMODE,W^QIO+12	; ASSUME NO PRIVILEGE NEEDED
	MOVZWL	#SS$_NORMAL,W^SET$L_STATUS; ASSUME SUCCESS
	CALLBAK	W^CHAR_QUAL
	BLBC	W^SET$L_STATUS,100$
	BICL	W^ENABLE,W^CHAN_INFO+4
	BISL	W^MASK,W^CHAN_INFO+4
	CALLG	W^QIO,@#SYS$QIOW	; SET THE MODE OR CHARACTERISTICS
	MOVW	R0,W^SET$L_STATUS	; SAVE STATUS
	BLBC	R0,100$			; IF LOW CLEAR THEN ERROR
	MOVZWL	W^IOSTATUS,W^SET$L_STATUS; SAVE STATUS
100$:	$DASSGN_S	W^QIO+8		; DEASSIGN THE PRINTER
	RET				; RETURN
;
; ACTION ROUTINES
;
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_MECHFORM
;
FF:	.WORD	0
	BISW	#LP$M_MECHFORM,W^MASK
	BRB	10$
NOFF:	.WORD	0
10$:	BISW	#LP$M_MECHFORM,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_CR
;
CR:	.WORD	0
	BISW	#LP$M_CR,W^MASK
	BRB	10$
NOCR:	.WORD	0
10$:	BISW	#LP$M_CR,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_LOWER
;
LOWE:	.WORD	0
	BISB	#LP$M_LOWER,W^MASK
	BRB	10$
UPPE:	.WORD	0
10$:	BISB	#LP$M_LOWER,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_PASSALL
;
PASS:	.WORD	0
	BISW	#LP$M_PASSALL,W^MASK
	BRB	10$
NOPA:	.WORD	0
10$:	BISW	#LP$M_PASSALL,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_WRAP
;
WRAP:	.WORD	0
	BISB	#LP$M_WRAP,W^MASK
	BRB	10$
NOWR:	.WORD	0
10$:	BISB	#LP$M_WRAP,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR LP$M_PRINTALL
;
PRIN:	.WORD	0
	BISB	#LP$M_PRINTALL,W^MASK
	BRB	10$
NOPR:	.WORD	0
10$:	BISB	#LP$M_PRINTALL,W^ENABLE
	RET
	.DSABL	LSB
	.ENABL	LSB
;
; ACTION ROUTINE FOR PRINTER TYPES
;
LA11:	.WORD	0
	MOVB	#LP$_LA11,W^LP_TYPE	; SET TYPE
	BRB	10$
LP11:	.WORD	0
	MOVB	#LP$_LP11,W^LP_TYPE	; SET TYPE
	BRB	10$
LA18:	.WORD	0
	MOVB	#LP$_LA180,W^LP_TYPE	; SET TYPE
	BRB	10$
UNKN:	.WORD	0
	CLRB	W^LP_TYPE		; SET NO TYPE
10$:	MOVZWL	#IO$_SETCHAR,W^QIO+12	; SET PRIVILEGED REQUEST
	RET				; AND RETURN
	.DSABL	LSB
BADPARAM:
	MOVZWL	#SS$_BADPARAM,W^SET$L_STATUS
	RET
;
; ACTION ROUTINE FOR PAGE
;
PAGE:	.WORD	0
	TSTW	W^CLI$W_QDVALSIZ+PAGE_QUAL; VALUE PRESENT?
	BEQL	20$			; NO CHANGE IF EQL
	CALLBAK	W^NUM_VAL,W^PAGE_QUAL	; GET THE VALUE
	BITL	#^X0FFFFFF00,W^CLI$L_RQVALU+NUM_VAL
	BNEQ	BADPARAM
	MOVB	W^CLI$L_RQVALU+NUM_VAL,W^PAGESIZ; SET THE VALUE
20$:	RET
;
; ACTION ROUTINE FOR WIDTH
;
WIDT:	.WORD	0
	TSTW	W^CLI$W_QDVALSIZ+WIDT_QUAL; VALUE PRESENT?
	BEQL	20$			; NO CHANGE IF EQL
	CALLBAK	W^NUM_VAL,W^WIDT_QUAL	; GET THE VALUE
	BITL	#^X0FFFF0000,W^CLI$L_RQVALU+NUM_VAL
	BNEQ	BADPARAM
	MOVW	W^CLI$L_RQVALU+NUM_VAL,W^WIDTH; SET THE VALUE
20$:	RET
	.END	
