	.title	calcmax - calculate maximum retention period
	.sbttl	copyright notice
	.ident	'V03-001'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
	.page
	.sbttl	Program description
;++
;   Facility:	SET VOLUME
;
;   Abstract:	This module calculates the maximum retention period for files,
;		given the minimum retention period.
;
;   Environment:	Native mode, user mode
;
;   Author:	Gerry Smith		Creation Date:	01-Jan-1982
;
;   Modified by:
;
;	V03-001	GAS0077		Gerry Smith		23-Apr-1982
;		Instead of returning 7 days, return the minimum period
;		plus 7 days.
;
;--

	.sbttl	storage definitions
;
;	storage definitions
;
	.psect set$rodata,nowrt,noexe

bin_seven:
	.long	^XD71BC000,^XFFFFFA7F	; Delta time of 7 days

	.sbttl	calculate_max -- entry point for this module
;++
;
; The minimum retention period is doubled and compared against the
; 64-bit system time representing the minimum retention period plus
; 7 days.  Whichever value is smaller is used.
;
; Inputs:
;	4(ap) - address of RETMIN_VALUE, the minimum retention period,
;		expressed in 64-bit system time format
;	8(ap) - address of RETMAX_VALUE, the maximum retention period.
;
; Outputs:
;	RETMAX_VALUE is computed and returned.
;	
;--

	.entry	calculate_max,^m<r2,r3,r4,r5,r6,r7>

;
; Double the minimum retention period.  Since this is in quadword format,
; a little extra work is required.  First the low order longwords are added,
; and then the high order longwords, with the carry bit from the addition of 
; the low order addition.
;

	movq	@4(ap),r2		; Put minimum period in r2/r3
	movq	r2,r4			; Also put it in r4/r5
	addl2	r2,r4			; Add low half
	adwc	r3,r5			; Add high half including carry

;
; Now take the minimum value and add the seven-day value to it.
;

	movq	bin_seven,r6		; Get a copy of binary seven days
	addl2	r2,r6			; Add low half of minimum
	adwc	r3,r7			; Add high half

;
; Compare the doubled value to the minimum plus seven days.
;

	cmpl	r5,r7			; Compare high longwords
	bneq	5$
	cmpl	r4,r6			; Compare low longwords
5$:	bgtr	10$			; If less, then use twice the retention period

	movq	r6,@8(ap)		; Otherwise return minimum plus seven days
	brb	20$

10$:	movq	r4,@8(ap)		; Return the doubled minimum retention

20$:	ret
	.end
	
