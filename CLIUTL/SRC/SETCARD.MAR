	.TITLE	SETCARD - SET CHARACTERISTICS OF A CARD READER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	CLI UTILITY "SET"
;
; ABSTRACT:	SET THE CHARACTERISTICS OF A CARD READER
;
; AUTHOR:	LEN KAWELL 2-MAY-1978
;
; MODIFIED BY:
;
;	V002	TMH0002		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;--
;
; LOCAL MACROS
;
	.MACRO	CALLBAK	P1,P2
	.IF B <P2>
	PUSHAB	W^BITS			; ADDRESS OF BIT MASK
	.IFF
	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
	.ENDC
	PUSHAB	W^SET$A_CLIWORK	; COMMON WORK AREA
	PUSHAB	P1			; THE REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
	.ENDM				;
 
;
; EXTERNAL SYMBOLS
;
	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
	$CRDEF				; CARD READER CHARACTERISTICS
	$DCDEF				; DEVICE CLASS DEFINITIONS
;
; LOCAL STORAGE
;
	.PSECT	SET$RWDATA,NOEXE,LONG
 
CHAN:		.LONG	0		; CARD READER CHANNEL NUMBER
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK
IOSTATUS:	.LONG	0,0		; IOSB FOR GET CHARACTERISTICS
GET_CHAN_INFO:	.LONG	12
		.LONG	CHAN_INFO-4
		.LONG	0
CHAN_INFO:
CLASS:		.BLKB	1
CR_TYPE:	.BLKB	1
BUFF:		.BLKW	1
CR_CHAR:	.BLKB	4
;
QIO:	$QIO	FUNC=IO$_SETMODE,EFN=1,IOSB=IOSTATUS,P1=CHAN_INFO,P2=8
CR_NAME:
	$CLIREQDESC	RQTYPE=CLI$K_INPUT1	; GET THE INPUT OR READER NAME
CHAR_QUAL:
	$CLIREQDESC	RQTYPE=CLI$K_GETQUAL,QUALST=QUALS
QUALS:
	$CLIQUALDESC	QDCODE=CLI$K_STCR_026,TRUACT=T026,-
			QDFLGS=<CLI$V_QDEXPA>
	$CLIQUALDESC	QDCODE=CLI$K_STCR_029,TRUACT=T029,-
			QDFLGS=<CLI$V_QDEXPA>
	$CLIQUALDESC	END_LIST

	.PAGE
	.PSECT	SET$CODE,NOWRT
;++
; SET$CARD - SET CARD READER CHARACTERISTICS
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SETS THE CHARACTERISTICS OF A SPECIFIED CARD READER.
; IT IS ENTERED AS A RESULT OF A DISPATCH FROM THE SET COMMAND PROCESSOR.
;
; INPUTS:
;
;	THE CLI DATA BASE IS SET UP. 
;
; OUTPUTS:
;
;	SET$L_STATUS = STATUS OF THE OPERATION
;--
SET$CARD::				; SET CARD READER COMMAND
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>
	MOVAB	W^CR_NAME,R6		; ADDRESS QUAL DESC
	CALLBAK	(R6)			; CALL CLI FOR READER NAME
	MOVAB	CLI$Q_RQDESC(R6),R6	; ADDRESS NAME DESC
20$:	$ASSIGN_S	(R6),W^QIO+8	; ASSIGN CHANNEL TO DEVICE
	BLBC	R0,ERROR		; IF LOW CLEAR THEN ERROR AND EXIT
	$GETCHN_S	W^QIO+8,,W^GET_CHAN_INFO
	BLBC	R0,ERROR		; IF LOW CLEAR THEN ERROR
	CMPB	W^CLASS,#DC$_CARD	; IS DEVICE A CARD READER?
	BEQL	SET_CHAR		; IF EQL YES
	MOVZWL	#SS$_IVDEVNAM,R0	; ELSE INVALID DEVICE ERROR
;
; ERROR IN GETTING CHARACTERISTICS
;
ERROR:	MOVL	R0,W^SET$L_STATUS	; SAVE FOR EXIT STATUS
	RET				; RETURN
;
; PROCESS DATA
;
SET_CHAR:				; PROCESS DATA
	MOVZWL	#SS$_NORMAL,W^SET$L_STATUS; ASSUME SUCCESS
	CALLBAK	W^CHAR_QUAL
	BLBC	W^SET$L_STATUS,100$
	CALLG	W^QIO,@#SYS$QIOW	; SET THE MODE
	MOVW	R0,W^SET$L_STATUS	; SAVE STATUS
	BLBC	R0,100$			; IF LOW CLEAR THEN ERROR
	MOVZWL	W^IOSTATUS,W^SET$L_STATUS; SAVE STATUS
100$:	$DASSGN_S	W^QIO+8		; DEASSIGN THE CARD READER
	RET				; RETURN
;
; ACTION ROUTINES
;

;
; ACTION ROUTINE FOR CR$K_T026
;
T026:	.WORD	0
	INSV	#CR$K_T026,#CR$V_TMODE,#CR$S_TMODE,W^CR_CHAR
	RET

;
; ACTION ROUTINE FOR CR$K_T029
;
T029:	.WORD	0
	INSV	#CR$K_T029,#CR$V_TMODE,#CR$S_TMODE,W^CR_CHAR
	RET

	.END
