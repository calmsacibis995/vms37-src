	.TITLE	SHOWPRINT - SHOW CHARACTERISTICS OF A PRINTER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	CLI UTILITY "SHOW"
;
; ABSTRACT:	SHOW THE CHARACTERISTICS OF A PRINTER
;
; AUTHOR:	R.HEINEN 21-NOV-1977
;
; MODIFIED BY:
;
;	V02-005	JLV0187		Jake VanNoy		22-FEB-1982
;		Make CHAR_LIST table 12 long instead of 8.
;
;	V02-004 EAD0053		Elliott A. Drayton	24-Jan-1982
;		Remove davfu support.
;
;	V02-003	GAS0003		Gerry Smith		07-Aug-1981
;    		Removed some W^ references.
;
;	V02-002	MIR0004		Michael I. Rosenblum	30-Jul-1981
;		Short literal offsets to small changed them to
;		PUSHAL with a word offset
;
; 01	-
;
; 101	Gary W. Fowler	07-Mar-1979
;	 If GETDEV returns an error status,return with that status
;	 rather than issue "Unexpected error encountered" message.
;	 Issue an error message if device class returned in secondary
;	 characteristics is not DC$_LP.
;
;--
;
; LOCAL MACROS
;
	.MACRO	CALLBAK	P1,P2
	.IF B <P2>
	PUSHAB	W^BITS			; ADDRESS OF BIT MASK
	.IFF
	PUSHAB	P2			; ADDRESS OF THIRD ARGUEMENT
	.ENDC
	PUSHAB	W^SHOW$A_CLIWORK	; COMMON WORK AREA
	PUSHAB	P1			; THE REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST THE SERVICE OF THE CLI
	.ENDM				;
 
;
; EXTERNAL SYMBOLS
;
	$DEVDEF				; DEFINE DEVICE CHARACTERISTICS
	$LPDEF				; DEFINE TERMINAL CHARACTERISTICS
	$DCDEF				; DEFINE DEVICE CLASSES
;
; LOCAL STORAGE
;
	.PSECT	SHOW$RWDATA,NOEXE,LONG
 
;
; STORAGE
;
CHAN:		.LONG	0		; CHANNEL NUMBER
BITS:		.LONG	0		; STORAGE FOR CLI CALL BACK
UTIL_DESC:	.LONG	0,0		; UTILITY DESC
GET_CHAN_INFO:	.LONG	48
		.LONG	CHAN_INFO-4
		.LONG	0
CHAN_INFO:	.BLKL	12
;
CHAR_LIST:	.REPT	12
		.LONG	NULL_STR
		.ENDR
NULL_STR:	.BYTE	0
;
; POSSIBLE SPOOLED DEVICE CHARACTERISTICS
;
SPOOL_DEV:	.LONG	48
		.LONG	10$
10$:		.BLKL	16
;
; READ ONLY DATA
;
	.PSECT	SHOW$RDATA,NOEXE,LONG
 
LP_NAME:
	$CLIREQDESC	RQTYPE=CLI$K_INPUT1	; GET THE INPUT OR PRINTER NAME
;
; TYPE NAMES
;
TYPE_NAME:
	.LONG	1$,2$,3$,4$
1$:	.ASCIC	/UNKNOWN/
2$:	.ASCIC	/LP11/
3$:	.ASCIC	/LA11/
4$:	.ASCIC	/LA180/
;
; POSITIVE CHARACTERISTIC STRINGS
;
P_CR:	.ASCIC	/CR, /
P_FF:	.ASCIC	/FF, /
P_LOWE:	.ASCIC	/LOWERCASE,/
P_PASS:	.ASCIC	/PASSALL, /
P_WRAP:	.ASCIC	/WRAP, /
P_PRINT:.ASCIC	/PRINTALL/
;
; NEGITIVE CHARACTERISTIC STRINGS
;
N_CR:	.ASCIC	/NOCR, /
N_FF:	.ASCIC	/NOFF, /
N_LOWE:	.ASCIC	/UPPERCASE/
N_PASS:	.ASCIC	/NOPASSALL, /
N_WRAP:	.ASCIC	/NOWRAP, /
N_PRINT:.ASCIC	/NOPRINTALL/
;
;
LINE_MSG:
	.ASCIC	/PRINTER/		; FOR ERROR MESSAGE

;
; TABLE DEFINING POSSIBLE DEVICE CLASSES
;
DEVICE_CLASS:
	.BYTE	DC$_DISK
	.BYTE	DC$_TAPE
	.BYTE	DC$_TERM
	.BYTE	DC$_CARD
	.BYTE	DC$_MAILBOX
	.BYTE	DC$_REALTIME
	.BYTE	DC$_SCOM
COUNT_CLASS = .-DEVICE_CLASS		 ; NO. OF CLASSES
;
CLASS_TXTADR:
	.LONG	1$,2$,3$,4$,5$,6$,7$,8$
1$:	.ASCIC	/DISK/
2$:	.ASCIC	/TAPE/
3$:	.ASCIC	/TERMINAL/
4$:	.ASCIC	/CARDREADER/
5$:	.ASCIC	/MAILBOX/
6$:	.ASCIC	/REALTIME/
7$:	.ASCIC	/SCOM/
8$:	.ASCIC	/UNKNOWN/
;

	.PSECT	SHOW$CODE,NOWRT
;++
; SHOW$PRINT - SHOW PRINTER CHARACTERISTICS
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE SHOWS THE CHARACTERISTICS OF A SPECIFIED PRINTER.
; IT IS ENTERED AS A RESULT OF A DISPATCH FROM THE SHOW COMMAND PROCESSOR.
;
; INPUTS:
;
;	THE CLI DATA BASE IS SET UP. 
;
; OUTPUTS:
;
;	R0 = STATUS OF THE OPERATION
;--
SHOW$PRINT::				; SHOW PRINTER COMMAND
	.WORD	^M<R2,R3,R4,R5,R6,R7,R8,R9>
	MOVAB	W^LP_NAME,R6		; ADDRESS QUAL DESC
	CALLBAK	(R6)			; CALL CLI FOR TERMINAL NAME
	MOVAB	CLI$Q_RQDESC(R6),R6	; ADDRESS NAME DESC
	$GETDEV_S	(R6),,W^SPOOL_DEV,,W^GET_CHAN_INFO; GET THE DEVICE INFO
	BLBS	R0,PRINT
;
; ERROR IN GETTING CHARACTERISTICS
;
	MOVL	R0,SHOW$L_STATUS	; RETURN WITH ERROR STATUS
	RET
;
;
PRINT:	MOVAB	W^CHAR_LIST,R6		; ADDR. ARGLST FOR SHOW$PRINT_MSG
	MOVAB	W^CHAN_INFO+8,R2	; ADDR. OF CHARACTERISTICS
	MOVZWL	(R2)+,R0		; UNIT NO. TO R0
	MOVZBL	(R2),R3			; GET OFFSET TO DEVICE NAME
	MOVAB	W^CHAN_INFO-4[R3],(R6)+	; ADDR. OF NAME TO ARGLST
	MOVL	R0,(R6)+		; UNIT NO. TO ARGLST
;
; CHECK IF DEVICE CLASS IS PRINTER
;
	MOVZBL	-10(R2),R2		; DEVICE CLASS TO R2
	CMPB	R2,#DC$_LP		; COMPARE CLASSES
	BEQL	SAMEAS			; BR IF SAME
;
; DEVICE DOES NOT HAVE CLASS = DC$_LP
;
	MOVAL	LINE_MSG,(R6)+	; ADDR. OF "PRINTER" TO ARGLST
	MOVZBL	#COUNT_CLASS,R3		; ASSUME CLASS IS UNKNOWN
	LOCC	R2,#COUNT_CLASS,W^DEVICE_CLASS	; SEARCH FOR CLASS
	BEQL	20$			; BR IF NOT FOUND
	SUBL3	R0,#COUNT_CLASS,R3	; INDEX INTO ADDR. OF CLASS TXT
;
; OUTPUT "XXXX is not a PRINTER   Device Class is: XXXX"
;
20$:	MOVL	W^CLASS_TXTADR[R3],(R6)+	; ADDR. OF "CLASS"
	PUSHAL	SHOW$_NOTCLASS
	PUSHAB	W^CHAR_LIST		; ADDR. OF ARGLST
	CALLS	#2,W^SHOW$PRINT_MSG	; PRINT MESSAGE
	RET
;
;
;
; OUTPUT NAME, TYPE, WIDTH ,PAGE SIZE AND CHARACTERISTICS
;
SAMEAS:	PUSHAL	SHOW$_PRINT_L1	; SET UP TO PRINT
	PUSHAB	W^CHAR_LIST
	CLRL	R4			; ASSUME UNKNOWN
	CMPB	W^CHAN_INFO+1,#LP$_LA180; IN RANGE?
	BGTRU	10$
 	MOVZBL	W^CHAN_INFO+1,R4	; GET TYPE VALUE
10$:	MOVL	W^TYPE_NAME[R4],(R6)+	; ADDRESS TYPE
	MOVZWL	W^CHAN_INFO+2,(R6)+	; INSERT WIDTH
	MOVZBL	W^CHAN_INFO+7,(R6)+	; INSERT PAGE SIZE
	MOVAB	W^P_CR,(R6)		; ASSUME POSITIVE CR
	BBS	#LP$V_CR,W^CHAN_INFO+4,30$; BR IF TRUE
	MOVAB	W^N_CR,(R6)		;
30$:	TSTL	(R6)+
	MOVAB	W^P_FF,(R6)		; ASSUME POSITIVE FF
	BBS	#LP$V_MECHFORM,W^CHAN_INFO+4,40$; BR IF TRUE
	MOVAB	W^N_FF,(R6)		;
40$:	TSTL	(R6)+
	MOVAB	W^P_LOWE,(R6)		; ASSUME POSITIVE LOWE
	BBS	#LP$V_LOWER,W^CHAN_INFO+4,50$; BR IF TRUE
	MOVAB	W^N_LOWE,(R6)		;
50$:	TSTL	(R6)+
	MOVAB	W^P_PASS,(R6)		; ASSUME POSITIVE
	BBS	#LP$V_PASSALL,W^CHAN_INFO+4,60$
	MOVAB	W^N_PASS,(R6)		; 
60$:	TSTL	(R6)+
	MOVAB	W^P_WRAP,(R6)		; ASSUME POSITIVE
	BBS	#LP$V_WRAP,W^CHAN_INFO+4,70$
	MOVAB	W^N_WRAP,(R6)		; 
70$:	TSTL	(R6)+
	MOVAB	W^P_PRINT,(R6)
	BBS	#LP$V_PRINTALL,W^CHAN_INFO+4,80$
	MOVAB	W^N_PRINT,(R6)

80$:	CALLS	#2,W^SHOW$PRINT_MSG
	BBC	#DEV$V_SPL,W^CHAN_INFO-4,90$; BR IF NOT SPOOLED DEVICE
	MOVZWL	W^SPOOL_DEV+8+14,R0	; GET OFFSET TO NAME
	MOVAB	W^SPOOL_DEV+8[R0],R0	; INSERT ADDRESS OF NAME
	MOVZBL	(R0)+,W^CHAR_LIST	; INSERT NAME SIZE
	MOVL	R0,W^CHAR_LIST+4	; INSERT ADDRESS
	MOVZWL	W^SPOOL_DEV+8+12,W^CHAR_LIST+8; INSERT UNITNUMBER
	PUSHL	#SHOW$_TTLP_SPL		; OUTPUT MESSAGE
	PUSHAB	W^CHAR_LIST		;
	CALLS	#2,W^SHOW$PRINT_MSG
90$:	RET
	.END
