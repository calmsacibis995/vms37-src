	.TITLE	SHOW$USERS	LOGGED ON USERS LIST
	.IDENT	'V03-002'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	SHOWS A USERS LIST
;
; ABSTRACT:	SHOW A LIST OF LOGGED ON USERS
;
;
; ENVIRONMENT:	NATIVE/USER MODE, REQUIRES WORLD AND GROUP PRIVILEGES.
;
; AUTHOR:	LEN KAWELL, CREATION DATE: 15-AUG-78
;		Installed into Show CLI utilities 14-Dec-81
;		By Michael I. Rosenblum V03-001
;
; MODIFICATION HISTORY:
;
;	V03-002	GAS0075		Gerry Smith		19-Apr-1982
;		Fix GAS0062 to really work as intended.  The $SETPRV
;		system service does not allow privileges to be set
;		unless the process has SETPRV, even if the image is 
;		installed with SETPRV.  So, do a CMEXEC, check whether
;		the process has SETPRV (regardless of where it got
;		set), and if so, set WORLD privilege.
;
;	V03-001	GAS0062		Gerry Smith		16-Mar-1982
;		Attempt to turn on WORLD privilege.  If it fails, then
;		no error is signaled, and processes are displayed based
;		on the current process and image privileges.
;
;	V02-02	MIR0080		Michael I Rosenblum	24-Jan-1982
;		replace blank line that got lost in the shuffle
;
;	V02-01	JLV0020		Jake VanNoy		20-May-1981
;		Changed FAO to handle new terminal controller names.
;
;--
	.PAGE
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;
	$DSCDEF				;DESCRIPTOR DEFINITIONS
	$JPIDEF				;GET JOB/PROCESS INFO DEFINTIONS
	MAXUSERS = 128			;MAXIMUM NUMBER OF USERS

;	.PSECT	_SHOW$RWDATA	LONG,RD,WRT,NOEXE
;
; OWN STORAGE:
;

USER_NAME:
	$CLIREQDESC	-
		RQTYPE=CLI$K_INPUT1	; THE FIRST INPUT
					;  (IF AVAILABLE) IS THE USRENAME
BIT_LIST:.LONG	0			; A PLACE FOR THE CLI BITLIST

ARGLST:	.BLKL	10			; PLACE TO HOLD FAO ARGUMENTS FOR
					;OUTPUT


GETJPIITMLST:				; $GETJPI ITEM LIST
	.WORD	15			; LENGTH OF OUTPUT BUFFER
	.WORD	JPI$_USERNAME		; REQUEST USER NAME
ITMLST_USERNAME:			;
	.LONG	USERNAME		; ADDRESS OF OUTPUT BUFFER
ITMLST_USERLEN:				;
	.LONG	USERNAME_LEN		; ADDRESS OF OUTPUT LENGTH
	.WORD	8			; LENGTH OF OUTPUT BUFFER
	.WORD	JPI$_TERMINAL		; REQUEST TERMINAL NAME
ITMLST_TERMINAL:			;
	.LONG	TERMINAL		; ADDRESS OF OUTPUT BUFFER
ITMLST_TERMLEN:				;
	.LONG	TERMINAL_LEN		; ADDRESS OF OUTPUT LENGTH
	.WORD	4			; LENGTH OF OUTPUT BUFFER
	.WORD	JPI$_PID		; REQUEST ACTUAL PROCESS ID
ITMLST_ACTPID:				;
	.LONG	ACTUAL_PID		; ADDRESS OF OUTPUT BUFFER
	.LONG	0			; NO LENGTH ON THIS ONE
	.WORD	15			; 15 BYTES MAX
	.WORD	JPI$_PRCNAM		; FOR THE PROCESS NAME	
ITMLST_PRCNAM:
	.LONG	PROCNAM			;PLACE FOR THE NAME
ITMLST_PRCNLEN:
	.LONG	PROCNAM_LEN		;AND THE LENGTH SOMEWHERE
	.LONG	0			;  END OF LIST

PID:	.LONG	-1			;START WITH "WILDCARD" PROCESS ID

USERNAME_LEN:				;USER NAME LENGTH TABLE
	.BLKL	MAXUSERS
USERNAME:				;USER NAME TABLE
	.BLKB	MAXUSERS*12
TERMINAL_LEN:				;TERMINAL NAME LENGTH TABLE
	.BLKL	MAXUSERS
TERMINAL:				;TERMINAL NAME TABLE
	.BLKB	MAXUSERS*8
ACTUAL_PID:				;ACTUAL PID OF PROCESS TABLE
	.BLKL	MAXUSERS
PROCNAM:
	.BLKB	MAXUSERS*15		;THE ACTUAL PROCESS NAME
PROCNAM_LEN:
	.BLKL	MAXUSERS		;THE LENGTHS OF THE PROCESS NAME
	.PAGE
	.SBTTL	SHOW LIST OF USERS
;++
; FUNCTIONAL DESCRIPTION:
;	FOR EACH PROCESS ON THE SYSTEM, GET IT'S USERNAME AND LOGIN TERMINAL
;	NAME.  IF THE LOGIN TERMINAL NAME IS NOT NULL, IT'S AN INTERACTIVE
;	USER SO DISPLAY THE TERMINAL NAME AND USERNAME.
;
; CALLING SEQUENCE:
;	CALLED BY CLI.
;
; INPUT PARAMETERS:
;	NONE
;
; OUTPUT PARAMETERS:
;	NONE
;--
	.PSECT	$SHOW$CODE	BYTE,RD,NOWRT,EXE

	.ENTRY	SHOW$USER_SET,^M<R2,R3>
;
; THIS IS THE EXEC-MODE ENTRY POINT TO CHECK FOR SETPRV, AND IF SET, TO SET
; WORLD PRIVILEGE.  IF THE PROCESS DOES NOT HAVE SETPRV, THEN SIMPLY RETURN.
; OTHERWISE, TURN ON WORLD PRIVILEGE FOR THE DURATION OF THE IMAGE.
;
	MOVL	CTL$GL_PCB,R3		; GET THE PCB ADDRESS IN R3
	IFNPRIV	SETPRV,10$,R3		; IF NO SETPRV, THEN SIMPLY RETURN
	CLRQ	-(SP)			; MAKE SPACE ON STACK FOR PRIVS
	MOVL	SP,R2			; AND SAVE ITS ADDRESS
	BBSS	#PRV$V_WORLD,(R2),5$	; TURN ON world PRIV
5$:	$SETPRV_S	ENBFLG=#1,-	; DISABLE THE BITS THAT ARE SET
			PRVADR=(R2)	; IN THE NEW MASK
	CLRQ	(SP)+			; RETURN THE STACK SPACE
10$:	RET				; AND RETURN

	.ENTRY 	SHOW$USER,^M<R2,R3,R4,R5,R6,R7,R8,R9,R10,R11>;MAIN ENTRY POINT
;
; ATTEMPT TO TURN ON WORLD PRIVILEGE.  IF THE IMAGE IS NOT INSTALLED WITH
; SETPRV, THEN THIS WILL FAIL, IN WHICH CASE THE USER MAY ONLY SEE WHAT
; THE PROCESS PRIVILEGES (GROUP AND/OR WORLD) ALLOW.
;

	$CMKRNL_S	ROUTIN = SHOW$USER_SET

;
; GET PARAMETERS
;
	PUSHAL	BIT_LIST
	PUSHAL	SHOW$A_CLIWORK		; THE CLI WORK AREA
	PUSHAL	USER_NAME		;WE WANT THE USER NAME
	CALLS	#3,@CLI$A_UTILSERV(AP)	;AND TRY TO GET IT...

	CLRL	R6			;INIT USER TABLE INDEX
	CLRL	R7			;INIT DISPLAY USERNAME COUNT
;
; OUTPUT TITLE
;
	MOVZWL	G^SYS$GW_IJOBCNT,R1	;GET INTERACTIVE JOB COUNT

	PUSHAL	SHOW$_US_TTL1		;PRINT OUT THE TITLE (LINE 1)
	MOVL	R1,ARGLST		;PUT THIS INTO THE ARG LIST
	PUSHAL	ARGLST			;AND GIVE THE OUTPUT ROUTINE THE ARGLST
	MOVZWL	#SS$_NORMAL,R0		;SETUP A NORMAL RETURN FOR SHOW PRINT
	CALLS	#2,W^SHOW$PRINT_MSG	;NOW PRINT THE MESSAGE

	CLRL	ARGLST			;CLEAR THE FIRST ENTRY IN THE LIST
	PUSHAL	SHOW$_US_TTL2		;NOW OUTPUT THE SECOND LINE OF THE TITLE
	PUSHAL	ARGLST			;AND GIVE IT THE ARG LIST
	CALLS	#2,W^SHOW$PRINT_MSG	; SHOW THE MESSAGE

	PUSHAL	SHOW$GQ_OUT_DSC		;OUTPUT A BLANK LINE
	PUSHL	#0
	CALLS	#2,SHOW$PRINT_LINE	;...

	BLBS	R0,GET_LOOP		;BR IF SUCCESS
	MOVL	R0,W^SHOW$L_STATUS	;AND SHOW THE STATUS
	RET				;
;
; GET ALL THE PROCESS'S USERNAMES, TERMINAL NAMES, AND PID'S
;
GET_LOOP:
	$GETJPI_S PIDADR=PID,-		;GET THE PROCESS'S INFO
		  ITMLST=GETJPIITMLST,EFN=#0
	BLBS	R0,30$			;BR IF SUCCESS
	CMPW	R0,#SS$_NONEXPR		;PROCESS DELETED?
	BEQL	GET_LOOP		;BR IF YES
	CMPW	R0,#SS$_NOPRIV		;PRIVILEGE FAILURE?
	BEQL	GET_LOOP		;BR IF YES
	CMPW	R0,#SS$_SUSPENDED	;PROCESS SUSPENDED?
	BEQL	GET_LOOP		;BR IF YES
	CMPW	R0,#SS$_NOMOREPROC	;NO MORE PROCESSES?
	BNEQ	10$			;BR IF NO - SOME OTHER PROBLEM
	TSTL	R6			;ANY USERS FOUND?
	BNEQ	DISPLAY_LOOP		;BR IF YES - DISPLAY THE USERS
	BRW	DONE			;ELSE, DONE
10$:	RET				;...EXIT
;
; WAIT FOR THE INFO AND, INCREMENT THE USER TABLE INDEX AND SET THE
; ADDRESS OF THE NEXT TABLE ENTRIES IN THE $GETJPI ITEM LIST IF IT IS AN
; INTERACTIVE PROCESS
;
30$:
	$WAITFR_S EFN=#0		;WAIT FOR THE INFO
	TSTL	TERMINAL_LEN[R6]	;IS IT AN INTERACTIVE PROCESS?
	BEQL	GET_LOOP		;IF EQL NO - SKIP IT
	INCL	R6			;
	MOVAL	TERMINAL_LEN[R6],-	;SET TERMINAL LENGTH ENTRY ADDR IN LIST
		ITMLST_TERMLEN		;
	MOVAQ	TERMINAL[R6],-		;SET TERMINAL NAME ENTRY ADDR IN LIST
		ITMLST_TERMINAL		;
	MOVAL	USERNAME_LEN[R6],-	;SET USERNAME LENGTH ENTRY ADDR IN LIST
		ITMLST_USERLEN		;
	MULL3	#12,R6,R0		;COMPUTE USERNAME TABLE INDEX
	MOVAB	USERNAME[R0],-		;SET USERNAME ENTRY ADDR IN LIST
		ITMLST_USERNAME		;
	MOVAL	ACTUAL_PID[R6],-	;SET ACTUAL PID ENTRY ADDR IN LIST
		ITMLST_ACTPID		;
	BRW	GET_LOOP		;GET NEXT PROCESS INFO
;
; SCAN THE TABLE AND DISPLAY THE USERS IN TERMINAL NAME ORDER
;
DISPLAY_LOOP:
	CLRL	R4			;INIT LOWEST TERMINAL NAME INDEX
	CLRL	R5			;INIT TEST TERMINAL NAME INDEX
10$:	SUBL3	#1,TERMINAL_LEN[R5],R0	;GET TEST TERMINAL LENGTH LESS ':'
	MOVAQ	TERMINAL[R5],R1		;GET TEST TERMINAL NAME ADDRESS
	SUBL3	#1,TERMINAL_LEN[R4],R2	;GET LOWEST TERMINAL LENGTH LESS ':'
	MOVAQ	TERMINAL[R4],R3		;GET LOWEST TERMINAL NAME ADDRESS
	CMPC5	R0,(R1),#0,R2,(R3)	;TEST TERMINAL NAME LESS THAN LOWEST?
	BGEQU	20$			;BR IF NOT
	MOVL	R5,R4			;SET NEW LOWEST TERMINAL NAME INDEX
20$:	AOBLSS	R6,R5,10$		;INCREMENT TEST INDEX AND LOOP

	MOVL	ACTUAL_PID[R4],ARGLST+16;SET ADDRESS OF ACTUAL PID
	MULL3	#12,R4,R2		;COMPUTE USERNAME TABLE INDEX
	MOVAB	USERNAME[R2],ARGLST+12	;SET ADDRESS OF USERNAME
	MOVL	USERNAME_LEN[R4],ARGLST+8;SET ADDRESS OF USERNAME LENGTH
	MOVAQ	TERMINAL[R4],ARGLST+4	;SET ADDRESS OF TERMINAL NAME
	MOVL	TERMINAL_LEN[R4],ARGLST ;SET ADDRESS OF TERMINAL NAME LENGTH
TP:
	CMPC	USER_NAME+CLI$W_RQSIZE,@USER_NAME+CLI$A_RQADDR,- 
		USERNAME[R2]		;IS THIS USER DESIRED?
	BNEQ	30$			;BR IF NOT

	PUSHAL	SHOW$_US_USLN		;THIS ALL GOES TO THE USER LINE
	PUSHAL	ARGLST
	MOVZWL	#SS$_NORMAL,R0		;SETUP A NORMAL RETURN FOR SHOW PRINT
	CALLS	#2,SHOW$PRINT_MSG	;PRINT THIS MESSAGE

30$:	MOVQ	#-1,TERMINAL[R4]	;REMOVE DISPLAYED TERMINAL FROM LIST
	AOBLSS	R6,R7,40$		;INCREMENT USER COUNT AND LOOP
	BRB	DONE			;
40$:	BRW	DISPLAY_LOOP		;
;
; ALL DONE
;
DONE:
	MOVL	#1,R0			;SET SUCCESS
	RET				;

	.END

