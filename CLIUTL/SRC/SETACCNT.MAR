	.TITLE	SET$ACCNT - SET SYSTEM ACCOUNTING
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	DCL SET COMMAND
;
; ABSTRACT:
;	THIS MODULE IMPLEMENTS THE SET SYSTEM ACCOUNTING COMMAND
;
;
; ENVIRONMENT:
;
;	RUNS IN USER MODE
;
; AUTHOR : W. H. BROWN  CREATION DATE: 11-FEB-1978
;
; MODIFIED BY:
;
;	V004	TMH0004		Tim Halvorsen		04-Feb-1982
;		Remove reference to CLI$K_ symbols at assembly time.
;
;	V103	SPF0037		Steve Forgey	23-Sep-1981
;		Add new keywords to selective /ENABLE and /DISABLE.
;
;	V102	TMH0002		T. Halvorsen	30-Sep-1979
;		Change reference to CLI$_MULKEY to CLI$_ABKEYW
;
;	V101	TMH0001		Tim Halvorsen	03-Jan-1979
;		Fix /ENABLE, /DISABLE keyword matching (check was reversed)
;--

	.SBTTL	DECLARATIONS

;
; Include files:
;

	$CLIMSGDEF		; DEFINE CLI MESSAGES
	$ACCDEF			; ACCOUNTING DEFINITONS
	$STSDEF			; STATUS CODE DEFINITIONS

;
; EQUATED SYMBOLS:
;
	BUFSIZ	= 16			; TEMPORARY STACK BUFFER SIZE
	MBCHAN	= -4			; OFFSET TO MAILBOX CHANNEL FROM FP
	BUFFER	= MBCHAN-BUFSIZ		; OFFSET TO BUFFER FROM FP
	WRKSIZ	= -BUFFER		; SIZE OF THE WORK AREA
;
; OWN STORAGE:
;

	.PSECT	SET$RWDATA	LONG,RD,WRT,NOEXE

;
; DEFINE CLI CALL BACK STRUCTURES
;

ACCO_G_ASCIIVAL:			; REQUEST DESCRIPTOR
	$CLIREQDESC	-		;
		RQTYPE=CLI$K_ASCIIVAL	; GET ASCII VALUE
 
ACCO_G_GETQUAL:
	$CLIREQDESC	-		; REQUEST DESCRIPTOR
		RQTYPE=CLI$K_GETQUAL,-	; TO SET QUALIFIERS
		QUALST=QUEU_A_QUALST	; QUALIFIER LIST
QUEU_A_QUALST:				; QUALIFIER LIST
	$CLIQUALDEF	-		;
		QDCODE=CLI$K_STAC_DISA,-; DISABLE ACCOUNTING
		TRUACT=ACCO_DISA	; TRUE ACTION ROUTINE
 
	$CLIQUALDEF	-		;
		QDCODE=CLI$K_STAC_ENAB,-; ENABLE ACCOUNTING
		TRUACT=ACCO_ENAB	;
 
	$CLIQUALDEF	-		;
		QDCODE=CLI$K_STAC_NEW_,- ; CREATE A NEW FILE
		TRUACT=ACCO_NEWFILE	;
	$CLIQUALDEF	END_LIST	;
 
;
; DEFINE PURE DATA IN CODE PSECT TO IMPROVE LOCALITY
;
 
	.PSECT	SET$CODE	RD,NOWRT,EXE,BYTE
 
ACCO_G_KEYWORDS:			; KEY WORDS FOR SELECTIVE ENABLE/DISABLE
	.ASCIC	\BATC\			; BATCH JOB ACCOUNTING
	.ASCIC	\INTE\			; INTERACTIVE JOB ACCOUNTING
	.ASCIC	\LOGI\			; LOGIN FAILURES
	.ASCIC	\MESS\			; MESSAGES SENT TO ACCOUNTING MANAGER
	.ASCIC	\PRIN\			; PRINT JOB ACCOUNTING
	.ASCIC	\PROC\			; GENERAL PROCESS ACCOUNTING (DET,SUB,NET)
	.ASCIC	\IMAG\			; IMAGE ACCOUNTING
	.ASCIC	\SUBP\			; SUBPROCESS ACCOUNTING
	.ASCIC	\DETA\			; DETACHED PROCESS ACCOUNTING
	.ASCIC	\NETW\			; NETWORK PROCESS ACCOUNTING
	.BYTE	0			; END OF LIST
 
ACCO_G_VALS:				; CORRECPONDING VALUES FOR KEYWORDS
	.BYTE	ACC$K_BATTRM		; BATCH JOB ACCOUNTING
	.BYTE	ACC$K_INTTRM		; INTERACTIVE JOB ACCOUNTING
	.BYTE	ACC$K_LOGTRM		; LOGIN FAILURE TERMINATION
	.BYTE	ACC$K_INSMSG		; MESSAGES SENT BY USER PROCESS
	.BYTE	ACC$K_PRTJOB		; PRINT JOB ACCOUNTING
	.BYTE	ACC$K_PRCTRM		; PROCESS ACCOUNTING (SUB, DET, NET)
	.BYTE	ACC$K_IMGTRM		; IMAGE ACCOUNTING
	.BYTE	ACC$K_SUBTRM		; SUBPROCESS ACCOUNTING
	.BYTE	ACC$K_DETTRM		; DETACHED PROCESS ACCOUNTING
	.BYTE	ACC$K_NETTRM		; NETWORK PROCESS ACCOUNTING

	.SBTTL	SET ACCOUNTING
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE IS ENTERED BY THE SET COMMAND DISPATCHER WHEN
;	A SET ACCOUNTING COMMAND IS EXECUTED. ALL WORK IS PERFORMED
;	IN THE APPROPRAITE QUALIFER TRUE ACTION ROUTINES.
;
; CALLING SEQUENCE:	CALLS OR CALLG
;
; INPUT PARAMETERS:	NONE
;
; IMPLICIT INPUTS:	RESULT PARSE ADDRESS @ CLI$A_UTILSERV(AP)
;
; OUTPUT PARAMETERS:	NONE
;
; IMPLICIT OUTPUTS:	NONE
;
; SIDE EFFECTS:	NONE
;
; COMPLETION CODES:	SET$L_STATUS IS SET TO THE RESULT OF SEND MESSAGE
;			SYSTEM SERVICE OR CLI$_INVKEY IF KEYWORD INCORRECT.
;--

	.PSECT	SET$CODE	BYTE,RD,NOWRT,EXE

	.ENTRY	SET$ACCOUNTING,0
 
	CLRL	-(SP)			; GET DUMMY BIT LIST AREA
	PUSHAL	(SP)			; PUSH ADDRESS OF BIT LIST
	PUSHAB	W^SET$A_CLIWORK		; ADDRESS OF WORK AREA
	PUSHAB	ACCO_G_GETQUAL		; ADDRESS OF REQUEST DESCRIPTOR
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST QUALIFIERS
	RET
 
;+
; ACCO_DISA - DISABLE ACCOUNTING
;
; PROCESS REQUEST FOR DISABLE OF ALL OR SELECTIVE ACCOUNTING
;-
 
	.ENTRY	ACCO_DISA,^M<R2,R3>	;
 
	MOVZBL	#ACC$K_DISAACC,R0	; SET DEFAULT FUNCTION CODE
	BRB	ENAB_DISA		; ENTER COMMON ROUTINE
 
;+
; ACCO_ENAB - ENABLE ACCOUNTING
;
; PROCESS REQUSET FOR ENABLE OF ALL OR SELECTIVE ACCOUNTING
;-
 
	.ENTRY	ACCO_ENAB,^M<R2,R3>	; 
 
	MOVZBL	#ACC$K_ENABACC,R0	; SET DEFAULT REQUEST CODE
	BRB	ENAB_DISA		; ENTER COMMAND ROUTINE
 
;+
; DISA_ENAB - DIABLE OR ENABLE ACCOUNTING
;
; THIS ROUTINE PERFORMS THE ENABLE OR DISABLE ACCOUNTING COMMANDS.
; THIS ROUTINE IS SUPPLIED THE REQUEST CODE FOR ENABLE OR DISABLE ACCOUNTING.
; IF THE COMMAND HAS ASSOCIATED VALUES, THE COMMAND IS A SELECTIVE OPERATION.
; IN THIS CASE THE REQUEST CODE IS MODIFIED TO THE SELECTIVE OPERATION
; AND THE KEYWORD VALUES ARE PARSED.
;-
 
ENAB_DISA:				;
	SUBL	#WRKSIZ,SP		; ALLOCATE SCRATCH BUFFER IN STACK
	MOVL	SP,R2			; SET ADDRESS OF BUFFER
	MOVW	R0,(R2)+		; SET REQUEST CODE INTO MESSAGE BUFFER
	MOVL	4(AP),R3		; GET ADDRESS OF QUALIFIER DESCRIPTOR
	TSTW	CLI$W_QDVALSIZ(R3)	; ANY VALUE PRESENT?
	BEQL	40$			; WHEN NO VALUE, SEND THE MESSAGE
	ASSUME	<ACC$K_DISASEL-ACC$K_DISAACC> - ; CHECK FOR ASSUMED REALATIVE
	  EQ	<ACC$K_ENABSEL-ACC$K_ENABACC>   ; VALUE DIFFERENCES
	ADDW	#<ACC$K_ENABSEL-ACC$K_ENABACC>,-; MODIFY THE REQUEST CODE
		-2(R2)			; TO THE SELECTIVE OPERATION
10$:	PUSHL	R3			; PUSH ADDRESS OF QUALIFIER DESCRIPTOR
	PUSHAB	W^SET$A_CLIWORK		; THE COMMAND INTERPRETER WORK AREA
	PUSHAB	W^ACCO_G_ASCIIVAL	; THE REQUEST DESCRIPTOR ADDRESS
	CALLS	#3,@CLI$A_UTILSERV(AP)	; REQUEST AN ASCII VALUE
	PUSHAQ	W^ACCO_G_ASCIIVAL+CLI$Q_RQDESC ; ADDRESS OF STRING DESCRIPTOR
	PUSHAB	ACCO_G_KEYWORDS		; ADDRESS OF KEYWORD LIST
	CALLS	#2,W^LIB$MATCHKEY	; LOOK FOR KEYWORD MATCH
	TSTL	R0			; CHECK RESULT
	BLSS	60$			; BR IF AMBIGUOUS MATCH
	BEQL	50$			; BR IF NO MATCH
	MOVB	ACCO_G_VALS-1[R0],(R2)+	; INSERT OPTION CODE IN MESSAGE
	TSTW	CLI$W_QDVALSIZ(R3)	; ANY VALUES REMAIN
	BNEQ	10$			; BR IF YES
	CLRB	(R2)+			; MARK END OF LIST
40$:	BRB	SENDMSG			; SEND THE MESSAGE
50$:	MOVL	#CLI$_INVKEY,R0		; SET ERROR CODE - INVALID KEYWORD
	BRB	70$			;
60$:	MOVL	#CLI$_ABKEYW,R0		; SET ERROR CODE - AMBIGUOUS KEYWORD
70$:	BRB	EXIT			;
 
;+
; NEWFILE - REQUEST A NEW ACCOUNTING FILE
;
; -
 
	.ENTRY	ACCO_NEWFILE,^M<R2>	;
 
	SUBL	#WRKSIZ,SP		; ALLOCATE WORK BUUFER IN THE STACK
	MOVL	SP,R2			; SET ADDRESS OF BUFFER
	MOVW	#ACC$K_NEWFILE,(R2)+	; INSERT REQUEST CODE IN MESSAGE
					; FALL INTO SEND MESSAGE
 
;+
; SENDMSG - SEND A MESSAGE TO THE ACCOUNTING MANAGER
;
; INPUT: R2 POINTS AT END OF MESSAGE THIS IS IN THE STACK
;
; OUTPUT: THE MESSAGE IS SENT
;-
 
SENDMSG:SUBL	SP,R2			; FIND LENGTH OF MESSAGE
	PUSHAL	(SP)			; PUSH ADDRESS OF MESSAGE
	PUSHL	R2			; NOW FORM QUAD WORD DESCRIPTOR
	$CREMBX_S	-		; CREATE A MAILBOX
		MAXMSG=#BUFSIZ,-	; LARGEST MESSAGE
		BUFQUO=#BUFSIZ,-	; ALLOCATE QUOTA FOR 1 MESSAGE
		CHAN  =MBCHAN(FP)	; PLACE TO STORE CHANNEL NUMBER
	BLBC	R0,EXIT			; BR IF ERROR CREATING MAILBOX
	MOVZWL	MBCHAN(FP),-(SP)	; CHANNEL FOR RESPONCE
	PUSHAQ	4(SP)			; ADDRESS OF MESSAGE DESCRIPTOR
	CALLS	#2,@#SYS$SNDACC		; SEND THE MESSAGE
	BLBC	R0,EXIT			; BR IF ERROR SENDING MESSAGE
	$QIOW_S	CHAN=MBCHAN(FP),-	; READ RESPONCE
		FUNC=#IO$_READVBLK,-	; FUNCTION CODE
		P1  =BUFFER(FP),-	; ADDRESS OF BUFFER
		P2  =#BUFSIZ		; AND COUNT
	BLBC	R0,EXIT			; BR IF QIO ERROR
	MOVL	BUFFER+4(FP),R0		; GET RESPONCE
EXIT:	MOVL	R0,W^SET$L_STATUS	; SET FINAL STATUS
	$DASSGN_S MBCHAN(FP)		; DEASSIGN THE MAILBOX
	RET				; GET OUT
 
	.END
