	.TITLE	SHOW$OPT_DISP - SHOW OPTION DISPATCHER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	SHOW COMMAND
;
; ABSTRACT:	SHOW COMMAND OPTION DISPACTHER :
;			THIS MODULE DECODES THE OPTION SPECIFIED IN THE
;			COMMAND LINE AND DISPATCHES TO THE APPROPRIATE
;			ROUTINE TO PROCESS THE OPTION.
;			SEE FUNCTIONAL DESCRIPTION BELOW FOR A SPECIFICATION
;			OF THE CALLING INTERFACE.
;
;
; ENVIRONMENT:
;
;	RUNS IN USER MODE BUT REQUIRES PRIVILEGE TO CHANGE MODE TO KERNEL
;	FOR CERTAIN SHOW COMMAND OPTIONS.
;
;
;	AUTHOR: BEATRICE U. WALTHER,	CREATION DATE 10-OCT-1977
;
; MODIFIED BY:
;
;	V004	TMH0004		Tim Halvorsen		04-Feb-1982
;		Remove reference to macro defining qualifier numbers
;		and use global symbols to satisfy the references.
;
;	V02-003	HRJ0042		Herb Jacobs		01-Jan-1982
;		Add SHOW ERROR command.
;
;	V02-002	MIR0056		Michael I. Rosenblum	14-Dec-1981
;		Make Users part of show.
;
;	V02-001	TSC0006		Thomas S. Clark		28-Aug-1980
;		Added SHOW MEMORY.
;
;	, : VERSION
; 01	- 
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	$CLIDEF				; CLI DEFINITIONS
;
; OWN STORAGE :
;
	.PSECT	SHOW$RWDATA	LONG,RD,WRT,NOEXE
;
; DEFINE CLI CALL BACK DATA STRUCTURES
;
SHOW$A_CLIWORK::				; CLI RESULT PARSE WORK AREA
	.BLKB	CLI$K_WORKAREA
	.ALIGN	LONG
SHOW_INITPRS:				; CLI REQUEST DESCRIPTOR BLOCK
	$CLIREQDESC	-		; FOR INIT PARSE
		RQTYPE=CLI$K_INITPRS
SHOW_OPTDESC:				; CLI REQUEST DESCRIPTOR BLOCK
	$CLIREQDESC	-		; FOR GET OPTION
		RQTYPE=CLI$K_GETOPT,-	;
		QUALST=SHOW_OPTQUAL	; POINT TO LIST OF OPTIONS
SHOW_OPTQUAL:				; DEFINE LIST OF OPTIONS
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_WORK,-	; SHOW WORKING_SET
		TRUACT=SHOW$WORKING_S		;
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_DEVI	-	; SHOW DEVICES
		TRUACT=SHOW$DEVI_CLI		;
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_QUEU,-	; SHOW QUEUE
		TRUACT=SHOW$QUEUE		;
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_LOGI,-	; SHOW LOGICAL
		TRUACT=SHOW$LOGI_CLI		;
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_PROC,-	; SHOW PROCESS
		TRUACT=SHOW$PROCESS
	$CLIQUALDEF	-			;
		QDCODE=CLI$K_SHOW_SYST,-	; SHOW SYSTEM
		TRUACT=SHOW$SYSTEM
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_TERM,-
		TRUACT=SHOW$TERM		; SHOW TERMINAL
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_PRIN,-	;
		TRUACT=SHOW$PRINT		; SHOW PRINT
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_MAGT,-	;
		TRUACT=SHOW$MAGTAPE		; SHOW MAGTAPE
	$CLIQUALDEF	-	
		QDCODE=CLI$K_SHOW_RMS_,-	;
		TRUACT=SHOW$RMS			; SHOW RMS
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_NETW,-	;
		TRUACT=SHOW$NETWORK		; SHOW NETWORK
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_MEMO,-	;
		TRUACT=SHOW$MEMORY		; SHOW MEMORY
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_USER,-	;
		TRUACT=SHOW$USER		; SHOW USERS
	$CLIQUALDEF	-
		QDCODE=CLI$K_SHOW_ERRO,-	;
		TRUACT=SHOW$ERRORS		; SHOW ERRORS

	$CLIQUALDEF	END_LIST		; END OF OPTION LIST

;
; global storage for SHOW command
;
SHOW$L_STATUS::
	.BLKL	1				; space for saving status

;
;
; end of storage declaration
;



		.SBTTL	SHOW$OPT_DISP	- SHOW COMMAND OPTION DISPATCHER
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE DECODES THE SHOW OPTION AND DISPATCHES DIRECTLY
;	TO THE SPECIFIC ROUTINE.
;
; CALLING SEQUENCE:
;
;	THIS ROUTINE IS CALLED BY THE CLI AS A RESULT OF THE DCL SHOW COMMAND
;
; INPUT PARAMETERS:
;
;	CLI$A_UTILSERV(AP)	=	CALL BACK ADDRESS FOR RESULT PARSER
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	DISPATCHES TO THE APPROPRIATE MODULE TO PROCESS THE OPTION.
;
; CALLING INTERFACE WITH THE OPTION PROCESSING MODULES:
;
;	A ROUTINE DISPATCHED TO BY THIS DISPATCHER IS PASSED THE
;	ADDRESS OF THE CLI UTILITY SERVICE ROUTINE EXACTLY IN THE SAME WAY
;	AS A ROUTINE CALLED DIRECTLY BY THE CLI. (CLI$A_UTILSERV(AP))
;	THEREFORE THE RETURN CALL TO THE CLI TO REQUEST ADDITIONAL PARSING
;	CAN BE DONE BY THE OPTION PROCESSING MODULE IN THE SAME WAY.
;
;	HOWEVER:
;		- THE CLI WORKING AREA HAS ALREADY BEEN DEFINED IN THE
;		   DISPATCHER AND HAS TO BE REFERENCED BY GLOBAL SYMBOL :
;			 	SHOW$A_CLIWORK
;		- THE OPTION PROCESSING MODULE SHOULD NOT REQUEST PARSE
;		  INITIALIZATION (INITPRS) AS THIS HAS ALREADY BEEN DONE
;		   IN THE DISPATCHER
;
; MESSAGE HANDLING FACILITY:
;
;	ALL SHOW OPTION PROCESSING MODULES SHOULD USE THE COMMON OUTPUT
;	FACILITIES PROVIDED IN MODULE SHOW$MSG_UTIL.
;
;	CALLABLE ENTRY POINTS ARE:
;		SHOW$PRINT_MSG = FORMATS AND PRINTS A MESSAGE, GIVEN A MESSAGE
;				 ID AND AN ARGUMENT LIST
;		SHOW$PRINT_LINE = PRINTS A LINE ON SYS$OUTPUT:
;
;	IT IS ALSO RECOMENDED TO USE THE COMMON OUTPUT LINE BUFFER WHERE APPLICABLE,
;	THE DESCRIPTOR OF WHICH IS ADDRESSED BY GLOBAL SYMBOL:
;		SHOW$GQ_OUT_DSC
;
; COMPLETION CODES:
;
;	R0 	=  set to completion code of option processing module called
;		   ( note = R0 has to be reloaded from SHOW$L_STATUS, since
;		    the CLI interface does not preserve R0)
;
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.PSECT	SHOW$CODE BYTE,RD,NOWRT,EXE

	.ENTRY	SHOW$OPT_DISP,0

;
; request parse initialization
;

	MOVL	#SS$_NORMAL,W^SHOW$L_STATUS	; ASSUME SUCCESS
	PUSHAB	W^SHOW$A_CLIWORK		; ADDRESS OF CLI WORK AREA
	PUSHAB	W^SHOW_INITPRS		; REQUEST INIT PARSE
	CALLS 	#2,@CLI$A_UTILSERV(AP)	; AND CALL THE CLI SERVICE ROUTINE

;
; get command option and dispatch to option processing module
;


	PUSHAB	W^SHOW$A_CLIWORK		; CLI WORK AREA
	PUSHAB	W^SHOW_OPTDESC		; REQUEST PARSING OF COMMAND OPTION
	CALLS 	#2,@CLI$A_UTILSERV(AP)	; CALL CLI

;
; exit
;


	MOVL	W^SHOW$L_STATUS,R0	; return status stored by option
					; processing module
	RET				; ALL DONE
	.END	SHOW$OPT_DISP
