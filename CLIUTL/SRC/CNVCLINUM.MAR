	.TITLE	CNVCLINUM - CONVERT ASCII TO BINARY
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: RUN-DETACHED CLI UTILITY
;
; ABSTRACT:
;
; THIS ROUTINE CONVERTS AN ASCII NUMERIC STRING TO BINARY USING THE RADIX SPECI-
; FIED BY THE USER (OCTAL, DECIMAL OR HEXIDECIMAL).
;
; ENVIRONMENT: USER MODE
;
; AUTHOR: C. A. MONIA	, CREATION DATE: 15-AUG-1977
;
; MODIFIED BY:
;
;	, : VERSION
; 01	- 
;
; 101	T. Halvorsen	27-Jun-1979
;	Change PSECT name to avoid conflicting psects with RTL
;--
	.PAGE
	.SBTTL	DECLARATIONS
 
;
; INCLUDE FILES
;
 
	$CLIMSGDEF			; DEFINE CLI ERROR CODES
	$SSDEF				; DEFINE SYSTEM STATUS CODES
 
 
;
; MACROS
;
; BUILD DISPATCH TABLE FOR CASE INSTRUCTION
;
 
	.MACRO	CASE,SRC,DISPLIST,TYPE=W,BASE=#0,NMODE=S^#,?START,?MAX
	CASE'TYPE	SRC,BASE,NMODE'<<MAX-START>/2>-1
START:
	.IRP	EP,<DISPLIST>
	.WORD	EP-START
	.ENDR
MAX:
	.ENDM
 
;
; DEFINE DATA STRUCTURE
;
 
	.MACRO	$DSECT
	.PSECT	$ABS$,ABS
	.ENDM
 
;
; EQUATED SYMBOLS:
;
; OFFSET TO LOCAL VARIABLE FOR NUMERIC RESULT
;
 
RESULT=-4				;
 
;
; ARGUMENT OFFSETS
;
 
	$DSECT
$$$=.
 
	.BLKL	1			; ARGUMENT COUNT
STRNG:	.BLKL	1			; ADDRESS OF ASCII STRING DESCRIPTOR
VALUE:	.BLKL	1			; ADDRESS TO RECEIVE CONVERTED VALUE
 
;
; OWN STORAGE:
;
; CONVERSION RADIX SPECIFIERS
;
 
	.PSECT	CNVCLINUM,EXE,RD,NOWRT
 
CVRAD:					;
	.ASCII	/D/			; DECIMAL RADIX
	.ASCII	/O/			; OCTAL RADIX
	.ASCII	/X/			; HEXADECIMAL RADIX
CVRADSIZ=.-CVRAD			; SIZE OF RADIX SPECIFIER TABLE
 
;
; ASCII TO BINARY CONVERSION DISPATCH TABLE
;
 
TABL:					;
	.WORD	LIB$CVTCLIHTB-LIB$CVTCLIDTB	; CONVERT HEX TO BINARY
	.WORD	LIB$CVTCLIOTB-LIB$CVTCLIDTB	; CONVERT OCTAL TO BINARY
	.WORD	LIB$CVTCLIDTB-LIB$CVTCLIDTB	; CONVERT DECIMAL TO BINARY

;++
; LIB$CVT_DECBIN - CONVERT NUMERIC STRING TO BINARY (ASSUMES DECIMAL DEFAULT)
; LIB$CVT_OCTBIN - CONVERT NUMERIC STRING TO BINARY (ASSUMES OCTAL DEFAULT)
; LIB$CVT_HEXBIN CLI CONVERT NUMERIC STRING TO BINARY (ASSUMES HEX. DEFAULT)
;
; THESE PROCEDURES ARE CALLED TO CONVERT AN ASCII NUMERIC STRING TO BINARY. THE
; CONVERSION RADIX IS IMPLIED OR CAN BE EXPLICITELY SPECIFIED IN THE STRING
; AS FOLLOWS:
;
;		NO RADIX SPECIFICATION - AS DETERMINED BY ENTRY POINT
;
;		STRING TERMINATED BY DECIMAL POINT = DECIMAL RADIX
;
;		%D PREFIX = DECIMAL RADIX
;
;		%O PREFIX = OCTAL RADIX
;
;		%X PREFIX = HEXADECIMAL PREFIX
;
; THE DECIMAL POINT IS ILLEGAL IF USED IN CONJUNCTION WITH OTHER RADIX SPECI-
; FIERS.
;
; CALLING SEQUENCE:
;
;	CALL LIB$CVT_XXX (DESCR[,VALUE])
;
;
; INPUT PARAMETERS:
;
;	DESCR = QUADWORD STRING DESCRIPTOR OF THE STRING TO BE CONVERTED
;
;	VALUE = OPTIONAL LONGWORD TO RECEIVE THE RESULT
;
; OUTPUTS:
;
;	R0 = CLI$_NORMAL, SUCCESS
;
;	R1 = CONVERTED VALUE
;
;		THE CONVERTED VALUE IS RETURNED TO THE RESULT ARGUMENT (IF
;		SPECIFIED).
;
;	R0 = CLI$_IVCHAR, INVALID CHARACTER IN NUMERIC STRING
;	R0 = CLI$_NUMBER, INCORRECT NUMERIC FORMAT
;
;		ONE OF THE FOLLOWING ERROR CONDITIONS HAS BEEN DETECTED:
;
;			ILLEGAL RADIX SPECIFIER
;			ILLEGAL CHARACTER
;			DECIMAL POINT INCLUDED WITH RADIX SPECIFIER
;
;--
 
	.ENABL	LSB
 

LIB$CVT_DECBIN::			;
	.WORD	^M<R2,R3,R4,R5,R6>	; SAVE R2 - R6
	MOVL	#3,R0			; SET FOR DEFAULT DECIMAL CONVERSION
	BRB	5$			;
 
;
; CONVERT TO BINARY WITH OCTAL AS DEFAULT
;
 
LIB$CVT_OCTBIN::			;
	.WORD	^M<R2,R3,R4,R5,R6>	 ; SAVE R2 - R6
	MOVL	#2,R0			; SET FOR DEFAULT OCTAL CONVERSION
	BRB	5$			;
 
;
; CONVERT TO BINARY WITH HEXADECIMAL AS DEFAULT
;
 
LIB$CVT_HEXBIN::			;
	.WORD	^M<R2,R3,R4,R5,R6>	 ; SAVE R2 - R6
	MOVL	#1,R0			; SET FOR DEFAULT HEX CONVERSION
5$:					;
	MOVQ	@STRNG(AP),R2		; GET COUNT AND ADDRESS OF STRING
	MOVZWL	R2,R2			; EXTEND BYTE COUNT
	BEQL	20$			; IF EQL, NULL FIELD
	CLRL	R5			; ASSUME POSITIVE VALUE RETURNED
	CMPB	(R3),#^A/+/		; PLUS SIGN SPECIFIED?
	BEQL	7$			; IF EQL YES
	CMPB	(R3),#^A/-/		; NEGATION SPECIFIED?
	BNEQ	9$			; IF NEQ NO
	DECL	R5			; SET SIGN SPECIFIER NEGATIVE
7$:					;
	INCL	R3			; STRIP SIGN FROM STRING
	DECL	R2			; ...
	BEQL	20$			; IF EQL, NULL RESULT
9$:					;
	CMPB	(R3),#^A/%/		; RADIX SPECIFIED?
	BEQL	10$			; IF EQL YES
	CMPB	-1(R3)[R2],#^A/./	; STRING TERMINATED IN DECIMAL POINT?
	BNEQ	20$			; IF NEQ NO ASSUME DEFAULT
	MOVL	#3,R0			; SET DECIMAL RADIX
	DECW	R2			; TRUNCATE STRING TO REMOVE DECIMAL POINT
	BRB	20$			;
10$:					;
	INCL	R3			; POINT PAST RADIX SPECIFIER
	SUBW	#2,R2			; STRIP RADIX SPECIFIER FROM STRING
	BLSSU	15$			; IF LSSU ERROR
	LOCC	(R3)+,#CVRADSIZ,CVRAD	; SCAN RADIX SPECIFIERS
	BNEQ	20$			; IF NEQ HAVE MATCH
15$:					;
	MOVL	#CLI$_NUMBER,R0		; ASSUME SYNTAX ERROR
	BRB	40$			; TAKE ERROR EXIT
20$:					;
	CVTWL	TABL-2[R0],R0		; GET ADDRESS OF ENTRY POINT OFFSET
	JSB	LIB$CVTCLIDTB[R0]	; ENTER CONVERSION ROUTINE
	BLBC	R0,40$			; IF LBC, ERROR
30$:					;
	TSTL	R5			; TEST SIGN FLAG
	BGEQ	35$			; IF GEQ, RETURN RESULT UNCHANGED
	MNEGL	R1,R1			; NEGATE RESULT
35$:					;
	CMPB	(AP),#2			; ENOUGH ARGUMENTS SUPPLIED?
	BLSSU	40$			; IF LSSU NO
	PUSHL	VALUE(AP)		; PUSH ADDRESS TO RECEIVE RESULT
	BEQL	40$			; IF EQL NONE
	MOVL	R1,@(SP)+		; RETURN RESULT
40$:					;
	RET				;
 
	.END
