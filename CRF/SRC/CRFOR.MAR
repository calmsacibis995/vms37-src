	.TITLE	CRFOR	FORTRAN-CALLABLE CRF INTERFACE ROUTINES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:  CROSS REFERENCE PROGRAM
;
; ABSTRACT:  THIS MODULE CONTAINS INTERFACE ROUTINES TO CRF FOR FORTRAN
;
;
; ENVIRONMENT:  IT IS PART OF A LINKABLE IMAGE.
;
; AUTHOR:  BENN SCHREIBER,	CREATION DATE:	19-SEP-1979
;
; MODIFIED BY:
;
;--

	.SBTTL	DECLARATIONS
;
; MACROS:
;
	$CRFDEF					; DEFINE CRF GLOBALS

	.SBTTL	LIB$CRF_INS_KEY	INSERT A KEY
;++
; FUNCTIONAL DESCRIPTION:
;
;	(SEE CRFINSKEY.MAR)
;
; CALLING SEQUENCE:
;
;	CALLS	#4,LIB$CRF_INS_KEY
;
; INPUT PARAMETERS:
;
;	CRF$L_IK_CTLTBL(AP)	ADDRESS OF THE OUTPUT FORMAT TABLE
;	CRF$L_IK_KEYADR(AP)	ADDRESS OF KEY
;	CRF$L_IK_VALADR(AP)	ADDRESS OF THE VALUE
;	CRF$W_IK_VALFLG(AP)	ADDRESS OF THE VALUE FLAGS
;
;--

	.PSECT	$CODE$, EXE, NOWRT

	.ENTRY	LIB$CRF_INS_KEY, ^M<>

	MOVZWL	@CRF$W_IK_VALFLG(AP),-(SP)	; EXTRACT THE VALUE FLAGS AND STACK
	PUSHL	CRF$L_IK_VALADR(AP)		; STACK ADDRESS OF VALUE
	PUSHL	CRF$L_IK_KEYADR(AP)		; STACK KEY ADDRESS
	PUSHL	CRF$L_IK_CTLTBL(AP)		; STACK CONTROL TABLE ADDRESS
	CALLS	#4,W^CRF$INSRTKEY		; INSERT KEY

	RET					; ALL DONE

	.SBTTL	LIB$CRF_INS_REF	INSERT REFERENCE
;++
; FUNCTIONAL DESCRIPTION:
;
;	(SEE CRFINSREF.MAR)
;
; CALLING SEQUENCE:
;
;	CALLS	#5, LIB$CRF_INS_REF
;
; INPUT PARAMETERS:
;
;	CRF$L_IR_CTLTBL(AP)	ADDRESS OF THE OUTPUT FORMAT TABLE
;	CRF$L_IR_KEYADR(AP)	ADDRESS OF KEY
;	CRF$L_IR_REFADR(AP)	ADDRESS OF THE REFERENCE INDICATOR
;	CRF$W_IR_REFLAG(AP)	ADDRESS OF THE REFERENCE FLAGS
;	CRF$B_IR_DEFIND(AP)	ADDRESS OF DEF/REF INDICATOR
;
;--

	.ENTRY	LIB$CRF_INS_REF, ^M<>

	MOVZBL	@CRF$B_IR_DEFIND(AP),-(SP)	; STACK DEF/REF INDICATOR
	MOVZWL	@CRF$W_IR_REFLAG(AP),-(SP)	; STACK REFERENCE FLAGS
	PUSHL	CRF$L_IR_REFADR(AP)		; STACK ADDRESS OF REFERENCE INDICATOR
	PUSHL	CRF$L_IR_KEYADR(AP)		; STACK ADDRESS OF KEY
	PUSHL	CRF$L_IR_CTLTBL(AP)		; STACK CONTROL TABLE ADDRESS
	CALLS	#5,W^CRF$INSRTREF		; INSERT REFERENCE
	RET

	.SBTTL	LIB$CRF_OUTPUT	OUTPUT THE CROSS REFERENCE LISTING

;++
; FUNCTIONAL DESCRIPTION:
;
;	(SEE CRFOUT.MAR)
;
; CALLING SEQUENCE:
;
;	CALLS	#6,LIB$CRF_OUTPUT
;
; INPUTS PARAMETERS:
;
;	CRF$L_OU_CTLTBL(AP)	ADDRESS OF THE OUTPUT FORMAT TABLE
;	CRF$L_OU_LINWID(AP)	ADDRESS OF THE LINE WIDTH
;	CRF$B_OU_PAG1(AP)	ADDRESS OF NUMBER OF LINES ON FIRST PAGE
;	CRF$B_OU_SUCPAG(AP)	ADDRESS OF NUMBER OF LINES ON SUCCESSIVE PAGES
;	CRF$B_OU_PRTIND(AP)	ADDRESS OF THE PRINT INDICATOR
;					CRF$K_VALUES	PRINT VALUES
;					CRF$K_DEFS_REFS PRINT VALUES, DEFS AND REFS
;					CRF$K_VALS_REFS	PRINT VALUES AND REFS
;	CRF$B_OU_SAVIND(AP)	ADDRESS OF THE SAVE/DELETE INDICATOR
;					CRF$K_SAVE	SAVE THE CRF TABLE
;					CRF$K_DELETE	DELETE THE CRF TABLE
;
;--

	.ENTRY	LIB$CRF_OUTPUT, ^M<>

	MOVZBL	@CRF$B_OU_SAVIND(AP),-(SP)	; STACK SAVE/DELETE INDICATOR
	MOVZBL	@CRF$B_OU_PRTIND(AP),-(SP)	; STACK PRINT INDICATOR
	MOVZBL	@CRF$B_OU_SUCPAG(AP),-(SP)	; STACK # LINES ON SUCCESSIVE PAGES
	MOVZBL	@CRF$B_OU_PAG1(AP),-(SP)	; STACK # LINES ON FIRST PAGE
	PUSHL	@CRF$L_OU_LINWID(AP)		; STACK THE LINE WIDTH
	PUSHL	CRF$L_OU_CTLTBL(AP)		; STACK CONTROL TABLE ADDRESS
	CALLS	#6,W^CRF$OUT			; OUTPUT THE CROSS REFERENCE
	RET

	.END	
