$ !	This procedure analyzes the file MASD$:[SYSBLDCOM]VMSNEWBLD.DAT
$ !	and produces a listing of each facility and its relative phase
$ !	numbers.  By using parameters, it can also be specialized to list
$ !	only certain facilities.
$ !
$ !	P1 = Comma seperated list of facilities to list.  If not
$ !	     specified then all facilities are listed.
$ !
$ !	P2 = File name, if specified the output list will be written
$ !	     to this file.  By default the output is written to SYS$OUTPUT.
$
$
$ BEGIN:
$	IF P2 .EQS. "" THEN P2 = "SYS$OUTPUT:VMSBLDMAP.LIS"
$	IF F$LOGICAL (P2) .NES. "" THEN P2 = F$LOGICAL (P2)
$	IF F$LOCATE (".", P2) .EQ. F$LENGTH (P2) THEN P2 := 'P2'.LIS
$	CLOSE OUTFILE /ERROR = NL10
$ NL10:	DIRECTORY	/NOHEADER /NOTRAILER /DATE /VER=1 -
			/OUTPUT=SYS$SCRATCH:VMSBLDMAP.TMP -
			SYSBLDCOM$:VMSNEWBLD.DAT
$	DIRREC = ""
$	OPEN /READ DIRFILE SYS$SCRATCH:VMSBLDMAP.TMP /ERROR=NO_DIR
$	READ DIRFILE DIRREC /ERROR=NO_DIR
$	CLOSE DIRFILE /ERROR=NO_DIR
$ NO_DIR:
$	
$	OPEN /WRITE OUTFILE 'P2 /ERROR=OPEN_OUT_ERR
$
$	IF P1 .NES. "" THEN P1 = ","+P1+","
$	WRITEOUT = "WRITE OUTFILE"
$	WRITESORT = "!"
$
$	DO_SORT = "FALSE"
$	IF F$LOC ("SORT", P3) .EQ. F$LEN (P3) THEN GOTO NOSORT
$	DO_SORT = "TRUE"
$	WRITESORT = "WRITE SORTFILE"
$	CLOSE SORTFILE /ERROR=NL20
$ NL20:	OPEN /WRITE SORTFILE SYS$SCRATCH:VMSBLDMAP.TMP /ERROR=OPEN_OUT_ERR
$
$NOSORT:
$	INIT	= 1
$	UPDATE	= 1
$	SRCLIB	= 1
$	ASSEM	= 1
$	OBJLIB	= 1
$	LNKLIB	= 1
$	LINK	= 1
$	RESULT	= 1
$	FACNUM = 0
$	TOT_FACNAM = 0
$
$	HDR1 = F$FAO ("--FACILITY--      !25*-PHASES!24*-")
$	HDR2 = F$FAO ("!2(7AS)!4* !8(7AS)", "Number", "Name", -
		"Init", "Update", "Srclib", "Assem", -
		"Objlib", "Lnklib", "Link", "Result")
$	HDR3 = F$FAO ("------------      !25*-------!24*-")
$	WRITEOUT DIRREC
$	WRITEOUT ""
$	WRITEOUT HDR1
$	WRITEOUT HDR2
$	WRITEOUT HDR3
$
$	CLOSE DATAFILE /ERROR = NL30
$ NL30:	OPEN DATAFILE SYSBLDCOM$:VMSNEWBLD.DAT
$
$ RESET:
$	PHASE_CHANGE = "FALSE"
$
$ MAIN_LOOP:
$	READ DATAFILE DATAREC /END_OF_FILE = END_OF_FILE
$	IF 'F$LOCATE ("!", DATAREC) .EQ. 0 THEN GOTO PROCESS_COMMENT_LINE
$
$ PROCESS_DATA_LINE:
$	FACNUM = FACNUM + 1
$	FACNAM = F$EXTRACT (0, F$LOC ("	", DATAREC), DATAREC)
$
$	IF P1 .NES. "" .AND. F$LOC (","+FACNAM+",", P1) .EQ. F$LEN (P1) -
		THEN GOTO MAIN_LOOP
$
$	DET1 = F$FAO ("!4SL!3* !7AS!8(7SL)", FACNUM, FACNAM, INIT, -
		UPDATE, SRCLIB, ASSEM, OBJLIB, LNKLIB, LINK, RESULT)
$	WRITEOUT DET1
$	WRITESORT DET1
$	TOT_FACNAM = TOT_FACNAM + 1
$	P1 = P1 - "''FACNAM',"
$	IF P1 .EQS. "," THEN GOTO END_OF_FILE
$	IF .NOT. PHASE_CHANGE THEN GOTO MAIN_LOOP
$	IF INIT		.LT. 0 THEN INIT	= INIT		* -1
$	IF UPDATE	.LT. 0 THEN UPDATE	= UPDATE	* -1
$	IF SRCLIB	.LT. 0 THEN SRCLIB	= SRCLIB	* -1
$	IF ASSEM	.LT. 0 THEN ASSEM	= ASSEM		* -1
$	IF OBJLIB	.LT. 0 THEN OBJLIB	= OBJLIB	* -1
$	IF LNKLIB	.LT. 0 THEN LNKLIB	= LNKLIB	* -1
$	IF LINK		.LT. 0 THEN LINK	= LINK		* -1
$	IF RESULT	.LT. 0 THEN RESULT	= RESULT	* -1
$	GOTO RESET
$
$ PROCESS_COMMENT_LINE:
$	IF 'F$LOCATE ("!SPLIT",	DATAREC) .NE. 0 THEN GOTO MAIN_LOOP
$	L		= 'F$LENGTH (DATAREC)
$	IF 'F$LOC ("SPLIT INIT",  DATAREC) .NE. L THEN INIT	= (INIT   + 1)*-1
$	IF 'F$LOC ("SPLIT UPDATE",DATAREC) .NE. L THEN UPDATE = (UPDATE + 1)*-1
$	IF 'F$LOC ("SPLIT SRCLIB",DATAREC) .NE. L THEN SRCLIB = (SRCLIB + 1)*-1
$	IF 'F$LOC ("SPLIT ASSEM", DATAREC) .NE. L THEN ASSEM  = (ASSEM  + 1)*-1
$	IF 'F$LOC ("SPLIT OBJLIB",DATAREC) .NE. L THEN OBJLIB = (OBJLIB + 1)*-1
$	IF 'F$LOC ("SPLIT LNKLIB",DATAREC) .NE. L THEN LNKLIB = (LNKLIB + 1)*-1
$	IF 'F$LOC ("SPLIT LINK",  DATAREC) .NE. L THEN LINK   = (LINK   + 1)*-1
$	IF 'F$LOC ("SPLIT RESULT",DATAREC) .NE. L THEN RESULT = (RESULT + 1)*-1
$	PHASE_CHANGE = "TRUE"
$	GOTO MAIN_LOOP
$
$ END_OF_FILE:
$	WRITEOUT ""
$	WRITEOUT "Total facilities = ''TOT_FACNAM'"
$	IF .NOT. DO_SORT THEN GOTO OPEN_OUT_ERROR
$	CLOSE SORTFILE /ERROR=NL80
$ NL80:	DEFINE /USER SYS$OUTPUT NL:	! Sort statistics begone!
$	SORT	/KEY=(POS:8, SIZE:7) -
	SYS$SCRATCH:VMSBLDMAP.TMP SYS$SCRATCH:VMSBLDMAP.TMP
$	WRITEOUT ""
$	WRITEOUT DIRREC
$	WRITEOUT ""
$	WRITEOUT HDR1
$	WRITEOUT HDR2
$	WRITEOUT HDR3
$	CLOSE OUTFILE /ERROR = NL85
$ NL85:	APPEND SYS$SCRATCH:VMSBLDMAP.TMP 'P2
$	DELETE /NOLOG SYS$SCRATCH:VMSBLDMAP.TMP;*
$
$ OPEN_OUT_ERROR:
$	CLOSE OUTFILE /ERROR = NL90
$ NL90:	CLOSE DATAFILE /ERROR = NL95
$ NL95:	EXIT
$
