	.TITLE	dif$format_hex_octal format one line

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:	DCL Differences command
;
; ABSTRACT:	The DCL DIFFERENCES command compares the contents of
;		two files.
;
; ENVIRONMENT:	VAX native, user mode
;
;--
;
; AUTHOR: Peter George, Benn Schreiber		CREATION DATE:	1-August-1981
;
; MODIFIED BY:
;
;--

	.psect	$code,exe,nowrt

;
; Format one line of hex or octal listing
;
; Inputs:
;
;	4(ap)		start of buffer to dump
;	8(ap)		number of entries per line
;	12(ap)		size of one entry
;	16(ap)		current index into buffer	(used to print on side of line only)
;	20(ap)		number of entries left in buffer
;	24(ap)		0>>longword, 1>>word, 2>>byte
;	28(ap)		fao control string descriptor
;	32(ap)		address of string descriptor for output buffer
;

	.entry	dif$format_hex_octal,^M<R2,R3,R4,R5>

	movq	8(ap),r3			;get entries per line in r3, size of entry in r4
	mull2	r3,r4				;compute number of bytes this line

	pushl	16(ap)				;stack index to print on right hand side
	pushl	4(ap)				;stack buffer address
	pushl	r4				;stack number of bytes
	movl	20(ap),r2			;get number of entries in line
	cmpl	r2,8(ap)			;see if more than one line's worth
	bleq	10$				;if leq no
	movl	8(ap),r2			;yes...use max for one line
10$:	movl	4(ap),r1			;copy input data pointer
	movl	24(ap),r0			;get/test field width
	beql	longwords			;if eql then longwords
	blbs	r0,words			;branch if words
;
; push bytes onto stack
;
bytes:
	movzbl	(r1)+,-(sp)			;stack one
	sobgtr	r2,bytes
	brb	call_fao
;
; push the words onto the stack
;
words:
	movzwl	(r1)+,-(sp)			;push one word
	sobgtr	r2,words			;do them all
	brb	call_fao			;go call fao
;
; push longwords onto the stack
;
longwords:
	pushl	(r1)+				;push one
	sobgtr	r2,longwords
;
; call $FAO
;
call_fao:
	pushab	(sp)				;stack address of arg list
	pushl	32(ap)				;stack output buffer descr. addr
	pushl	(sp)				;also for output width
	pushl	28(ap)				;stack fao control string addr
	calls	#4,g^sys$faol			;call sys$faol to format string
	ret

	.end
