	.TITLE	MONDAT - Data Structures For MONITOR utility
	.IDENT	'V03-002'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:  VAX/VMS MONITOR Utility
;
; ABSTRACT:
;
;	This module is a collection of data structures used by the
;	various executable modules of the Monitor utility.
;
;	Included are the CDB Table, the IDB table and the
;	CLASSTABLE. The CDB Table is a set of contiguous Class
;	Descriptor Blocks, one for each class, in order by class
;	number. The IDB table (PERFTABLE) is a set of contiguous
;	Item Descriptor Blocks, one for each Monitor data item,
;	in an order determined by the $PMSDEF macro. The CLASSTABLE
;	is a set of contiguous longword pairs, one pair for each
;	class; each pair consists of a pointer to a counted ASCII
;	string naming the class, followed by a longword class number.
;
; ENVIRONMENT:  Non-executable data structures.
;
; AUTHOR: H. M. Levy	, CREATION DATE: 2-May-1977
;
; MODIFIED BY:
;
;	V03-002	TLC1015		Thomas L. Cafarella	01-Apr-1982	16:00
;		Change .PSECT options in order to group image sections.
;
;	V03-001	TLC1004		Thomas L. Cafarella	25-Mar-1982	17:00
;		Correct wording of MODES Interrupt Stack label.
;
;		Eliminate unused labels and add form-feeds for readability.
;
;--

	.SBTTL	DECLARATIONS
	.PSECT	DSPDATA,QUAD,NOEXE
;
; INCLUDE FILES:
;

	$CDBDEF				; Class Descriptor Block definitions
	$IDBDEF				; Item Descriptor Block definitions
	$PFNDEF				; Page frame data base
	$PHDDEF				; Define process header
	$PMSDEF				; Define data items
	$MONDEF				; Monitor Recording File definitions

;
; MACROS:
;

;
; Local Macro Definitions
;

;
; CSTRING Macro - Construct a counted ascii string
;

	.MACRO	CSTRING STRING,?LAA,?LBB
	.BYTE	LBB-LAA
LAA:	.ASCII	\STRING\
LBB:	
	.ENDM	CSTRING

;
; BLDIDB Macro - Build Item Descriptor Block.  Blocks are indexed in
; PERFTABLE by the item number times the length of each block.
;

	.MACRO	BLDIDB	NAME,SSTRING,LSTRING,SIZE=LONG,TYPE,ADDR,?LAA,?LBB
	.SAVE
	.PSECT	$$STRINGS,NOEXE
LAA:	CSTRING	<SSTRING>
LBB:	CSTRING	<LSTRING>
	.RESTORE
	$$T1 = .
	$$VAL=IDB$K_ILENGTH*PMS$C_'NAME
	.=PERFTABLE+$$VAL
	.LONG	LAA
	.LONG	LBB
	.WORD	SIZE'_SIZE
	.WORD	TYPE'_TYPE
	.LONG	ADDR
	.=$$T1
	.ENDM	BLDIDB

;
; EQUATED SYMBOLS:
;


;
; The following size indicators specify how many bits should be
; fetched for each data item.
; The types specify what transformations should be performed on the
; data once it is fetched.  For example, if the data is an accumulated
; time, it is usually subtracted from the previous value to compute
; the time spent during the interval.  
;

	BYTE_SIZE == 0 			; Indicator for BYTE datum
	WORD_SIZE == 1			; Indicator for WORD datum
	LONG_SIZE == 2			; Indicator for LONG datum

	OWN_TYPE == 0			; Do nothing with value
	COUNT_TYPE == 1			; Indicates data item is a count
	LEVEL_TYPE == 2			; Indicates data item is a level

	ALL_STAT == 0 			; Code for ALL statistics
	CUR_STAT == 1 			; Code for CURRENT statistic
	AVE_STAT == 2 			; Code for AVERAGE statistic
	MIN_STAT == 3 			; Code for MINIMUM statistic
	MAX_STAT == 4 			; Code for MAXIMUM statistic

	REG_PROC == 0 			; Code for regular PROCESSES display
	TOPC_PROC == 1 			; Code for TOPCPU PROCESSES display
	TOPD_PROC == 2 			; Code for TOPDIO PROCESSES display
	TOPB_PROC == 3 			; Code for TOPBIO PROCESSES display
	TOPF_PROC == 4 			; Code for TOPFAULT PROCESSES display

	PROCS_CLSNO == 0		; Class number for PROCESSES class
	MODES_CLSNO == 2		; Class number for MODES class

	TOP_RANGE == 20			; Range for TOP bar displays (exc. TOPCPU

;
; Write a BLDCDB macro which builds a CDB for each class and
; builds the CLASSTABLE (which is hard-coded below). Include ASSUME
; macros to verify at assembly time that the CDB structure definition
; is in sync with the BLDCDB macro (particularly CDB$K_SIZE).
;

CDBHEAD::				; head of CDB table

; 
; CDB for PROCESSES class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	REGTITLE		; title string
	.LONG	8			; number of items for TOP displays
	.LONG	0			; no item string
	.WORD	MNR_PRO$K_DSIZE		; data block length
	.LONG	PROC_PRE		; pre-collection routine
	.LONG	0			; no post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,TOP_RANGE		; min and max values for TOP displays
	.BLKB	1			; active PROCESSES display type
	.BYTE	REG_PROC		; default PROCESSES display type
	.LONG	0			; flags
;
; CDB for STATES class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	STATETITLE		; title string
	.LONG	14			; number of items
	.LONG	STATESTR		; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	STATES_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,40			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	CUR_STAT		; default statistic
	.LONG	CDB$M_UNIFORM+CDB$M_STD	; flags

;
; CDB for MODES class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	MODETITLE		; title string
	.LONG	7			; number of items to display
	.LONG	MODESTR			; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	MODES_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,100			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	CUR_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_UNIFORM+CDB$M_STD+CDB$M_CPU_DEF
					; flags
;
; CDB for PAGE class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	PAGETITLE		; title string
	.LONG	13			; number of items
	.LONG	PAGESTR			; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	PAGE_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,80			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags

;
; CDB for IO class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	IORATETITLE		; title string
	.LONG	14			; number of items
	.LONG	IORATESTR		; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	0			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,80			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags
;
; CDB for FCP (File Control Primitives) class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	FCPTITLE		; title string address
	.LONG	10			; number of items
	.LONG	FCPSTR			; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	FCP_PRE			; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,20			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags

;
; CDB for POOL class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	POOLTITLE		; title string
	.LONG	8			; number of items
	.LONG	POOLSTR			; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	POOL_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,100000		; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_STD+CDB$M_KUNITS	; flags
;
; CDB for LOCK (Lock Management statistics) class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	LOCKTITLE		; title string
	.LONG	9			; number of items
	.LONG	LOCKSTR			; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	LOCK_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,20			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags

;
; CDB for DECnet class
;

	.BLKL	2			; FAO control string descriptor
	.LONG	DECNETTITLE		; title string
	.LONG	6			; number of items
	.LONG	DECNETSTR		; item string
	.BLKW	1			; block length (calc at run time)
	.LONG	DECNET_PRE		; pre-collection routine
	.LONG	0			; post-collection routine
	.BLKL	2			; collection buffer block string descriptor
	.LONG	0,20			; expected min and max values
	.BLKB	1			; active statistic
	.BYTE	ALL_STAT		; default statistic
	.LONG	CDB$M_CTPRES+CDB$M_STD	; flags

;
; End of CDB Table
;

;
; Title strings and item identifier strings
;

MODETITLE::
	CSTRING	<TIME IN PROCESSOR MODES>
MODESTR::
	.BYTE	PMS$C_PINTERRUPT
	.BYTE	PMS$C_PKERNEL
	.BYTE	PMS$C_PEXEC
	.BYTE	PMS$C_PSUPER
	.BYTE	PMS$C_PUSER
	.BYTE	PMS$C_PCOMPAT
	.BYTE	PMS$C_PIDLE
	.BYTE	PMS$C_SINTERRUPT
	.BYTE	PMS$C_SKERNEL
	.BYTE	PMS$C_SEXEC
	.BYTE	PMS$C_SSUPER
	.BYTE	PMS$C_SUSER
	.BYTE	PMS$C_SCOMPAT
	.BYTE	PMS$C_SIDLE

PROCTITLE::
	.LONG	REGTITLE
	.LONG	TOPCTITLE
	.LONG	TOPDTITLE
	.LONG	TOPBTITLE
	.LONG	TOPFTITLE

REGTITLE:	CSTRING <PROCESSES>
TOPCTITLE:	CSTRING <TOP CPU TIME PROCESSES>
TOPDTITLE:	CSTRING <TOP DIRECT I/O RATE PROCESSES>
TOPBTITLE:	CSTRING <TOP BUFFERED I/O RATE PROCESSES>
TOPFTITLE:	CSTRING <TOP PAGE FAULT RATE PROCESSES>

FCPTITLE:
	CSTRING <FILE PRIMITIVE STATISTICS>
FCPSTR:
	.BYTE	PMS$C_FCPCALLS
	.BYTE	PMS$C_ALLOC
	.BYTE	PMS$C_FCPCREATE
	.BYTE	PMS$C_FCPREAD
	.BYTE	PMS$C_FCPWRITE
	.BYTE	PMS$C_FCPCACHE
	.BYTE	PMS$C_FCPCPU
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_ACCESS
	.BYTE	PMS$C_OPENS

PAGESTR:
	.BYTE	PMS$C_FAULTS		
	.BYTE	PMS$C_PREADS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_PWRITES
	.BYTE	PMS$C_PWRITIO
	.BYTE	PMS$C_FREFLTS
	.BYTE	PMS$C_MFYFLTS
	.BYTE	PMS$C_DZROFLTS
	.BYTE	PMS$C_GVALFLTS
	.BYTE	PMS$C_WRTINPROG
	.BYTE	PMS$C_SYSFAULTS
	.BYTE	PMS$C_FRLIST		
	.BYTE	PMS$C_MODLIST
PAGETITLE:
	CSTRING	<PAGE MANAGEMENT STATISTICS>

POOLSTR:
	.BYTE	PMS$C_SRPCNT		
	.BYTE	PMS$C_IRPCNT		
	.BYTE	PMS$C_LRPCNT
	.BYTE	PMS$C_HOLESUM
	.BYTE	PMS$C_HOLECNT
	.BYTE	PMS$C_BIGHOLE
	.BYTE	PMS$C_SMALLHOLE
	.BYTE	PMS$C_SMALLCNT
POOLTITLE:
	CSTRING	<NONPAGED POOL STATISTICS>

LOCKSTR:
	.BYTE	PMS$C_ENQNEW
	.BYTE	PMS$C_ENQCVT
	.BYTE	PMS$C_DEQ
	.BYTE	PMS$C_ENQWAIT
	.BYTE	PMS$C_ENQNOTQD
	.BYTE	PMS$C_DLCKSRCH
	.BYTE	PMS$C_DLCKFND
	.BYTE	PMS$C_NUMLOCKS
	.BYTE	PMS$C_NUMRES
LOCKTITLE:
	CSTRING	<LOCK MANAGEMENT STATISTICS>

DECNETSTR:
	.BYTE	PMS$C_ARRLOCPK
	.BYTE	PMS$C_DEPLOCPK
	.BYTE	PMS$C_ARRTRAPK
	.BYTE	PMS$C_TRCNGLOS
	.BYTE	PMS$C_RCVBUFFL
	.BYTE	PMS$C_LRPCNT
DECNETTITLE:
	CSTRING	<DECNET STATISTICS>

STATETITLE:
	CSTRING	<PROCESS STATES>
STATESTR:
	.BYTE	PMS$C_COLPG		
	.BYTE	PMS$C_MWAIT
	.BYTE	PMS$C_CEF
	.BYTE	PMS$C_PFW
	.BYTE	PMS$C_LEF
	.BYTE	PMS$C_LEFO
	.BYTE	PMS$C_HIB
	.BYTE	PMS$C_HIBO
	.BYTE	PMS$C_SUSP
	.BYTE	PMS$C_SUSPO
	.BYTE	PMS$C_FPG
	.BYTE	PMS$C_COM
	.BYTE	PMS$C_COMO
	.BYTE	PMS$C_CUR

IORATETITLE:
	CSTRING	<I/O SYSTEM STATISTICS>

IORATESTR:
	.BYTE	PMS$C_DIRIO
	.BYTE	PMS$C_BUFIO
	.BYTE	PMS$C_MBWRITES
	.BYTE	PMS$C_FCPTURN
	.BYTE	PMS$C_LOGNAM
	.BYTE	PMS$C_OPENS
	.BYTE	PMS$C_FAULTS
	.BYTE	PMS$C_PREADS
	.BYTE	PMS$C_PREADIO
	.BYTE	PMS$C_PWRITES
	.BYTE	PMS$C_PWRITIO
	.BYTE	PMS$C_ISWPCNT
	.BYTE	PMS$C_FRLIST		
	.BYTE	PMS$C_MODLIST

;
; The following table contains one item descriptor block for
; each possible piece of data.  The blocks are indexed by 
; data key values.
;

PERFTABLE::
	.BLKB	PMS$C_TABLESIZE*IDB$K_ILENGTH	; allocate table space

;
; Define the entries in the table.
;

;
; Entries for MODES class
;

	BLDIDB	NAME=PINTERRUPT,-
		SSTRING=<INTER>,-
		LSTRING=<Interrupt Stack   PRIMARY>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PKERNEL,-
		SSTRING=<KERNEL>,-
		LSTRING=<Kernel Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PEXEC,-
		SSTRING=<EXEC>,-
		LSTRING=<Executive Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PSUPER,-
		SSTRING=<SUPER>,-
		LSTRING=<Supervisor Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PUSER,-
		SSTRING=<USER>,-
		LSTRING=<User Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=PCOMPAT,-
		SSTRING=<COMPAT>,-
		LSTRING=<Compatibility Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=PIDLE,-
		SSTRING=<IDLE>,-
		LSTRING=<Idle Time>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=SINTERRUPT,-
		SSTRING=<INTER>,-
		LSTRING=<Interrupt Stack   ATTACHED>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SKERNEL,-
		SSTRING=<KERNEL>,-
		LSTRING=<Kernel Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SEXEC,-
		SSTRING=<EXEC>,-
		LSTRING=<Executive Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SSUPER,-
		SSTRING=<SUPER>,-
		LSTRING=<Supervisor Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SUSER,-
		SSTRING=<USER>,-
		LSTRING=<User Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0
	
	BLDIDB	NAME=SCOMPAT,-
		SSTRING=<COMPAT>,-
		LSTRING=<Compatibility Mode>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

	BLDIDB	NAME=SIDLE,-
		SSTRING=<IDLE>,-
		LSTRING=<Idle Time>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=0

;
; Entries for state display
;

	BLDIDB 	NAME=COLPG,-
		SSTRING=<COLPG>,-
		LSTRING=<Collided Page Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=MWAIT,-
		SSTRING=<MWAIT>,-
		LSTRING=<Mutex & Misc Resource Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=CEF,-
		SSTRING=<CEF>,-
		LSTRING=<Common Event Flag Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB 	NAME=PFW,-
		SSTRING=<PFW>,-
		LSTRING=<Page Fault Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB 	NAME=LEF,-
		SSTRING=<LEF>,-
		LSTRING=<Local Event Flag Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=LEFO,-
		SSTRING=<LEFO>,-
		LSTRING=<Local Evt Flag (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=HIB,-
		SSTRING=<HIB>,-
		LSTRING=<Hibernate>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=HIBO,-
		SSTRING=<HIBO>,-
		LSTRING=<Hibernate (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=SUSP,-
		SSTRING=<SUSP>,-
		LSTRING=<Suspended>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=SUSPO,-
		SSTRING=<SUSPO>,-
		LSTRING=<Suspended (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=FPG,-
		SSTRING=<FPG>,-
		LSTRING=<Free Page Wait>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=COM,-
		SSTRING=<COM>,-
		LSTRING=<Compute>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=COMO,-
		SSTRING=<COMO>,-
		LSTRING=<Compute (Outswapped)>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

	BLDIDB	NAME=CUR,-
		SSTRING=<CUR>,-
		LSTRING=<Current Process>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=0

;
; Entries for page statistics display
;

	BLDIDB	NAME=FRLIST,-
		SSTRING=<FR LIST SIZE>,-
		LSTRING=<Free List Size>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SCH$GL_FREECNT

	BLDIDB	NAME=MODLIST,-
		SSTRING=<MOD LST SIZE>,-
		LSTRING=<Modified List Size>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SCH$GL_MFYCNT

	BLDIDB	NAME=FAULTS,-
		SSTRING=<FAULTS>,-
		LSTRING=<Page Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FAULTS

	BLDIDB	NAME=PREADS,-
		SSTRING=<RDFLTS>,-
		LSTRING=<Page Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RDFLTS

	BLDIDB	NAME=PWRITES,-
		SSTRING=<PWRITES>,-
		LSTRING=<Page Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PWRITES

	BLDIDB 	NAME=FREFLTS,-
		SSTRING=<FREFLTS>,-
		LSTRING=<Free List Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_FREPAGLST>

	BLDIDB	NAME=MFYFLTS,-
		SSTRING=<MFYLST>,-
		LSTRING=<Modified List Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_MFYPAGLST>

	BLDIDB	NAME=DZROFLTS,-
		SSTRING=<DZRO>,-
		LSTRING=<Demand Zero Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DZROFLTS

	BLDIDB	NAME=GVALFLTS,-
		SSTRING=<GVAL>,-
		LSTRING=<Global Valid Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_GVALID

	BLDIDB	NAME=WRTINPROG,-
		SSTRING=<WRTINPRG>,-
		LSTRING=<Wrt In Progress Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$AL_TRANSFLT+<4*PFN$C_WRTINPROG>

	BLDIDB	NAME=PWRITIO,-
		SSTRING=<PWRITIO>,-
		LSTRING=<Page Write I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PWRITIO

	BLDIDB	NAME=PREADIO,-
		SSTRING=<PREADIO>,-
		LSTRING=<Page Read I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_PREADIO

	BLDIDB	NAME=SYSFAULTS,-
		SSTRING=<SYSFLTS>,-
		LSTRING=<System Fault Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=SYSFAULTS

;
; Entries for Pool display
;

	BLDIDB	NAME=SRPCNT,-
		SSTRING=<SRPCNT>,-
		LSTRING=<SRPs Left>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SRPCNT

	BLDIDB	NAME=IRPCNT,-
		SSTRING=<IRPCNT>,-
		LSTRING=<IRPs Left>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=IRPCNT

	BLDIDB	NAME=LRPCNT,-
		SSTRING=<LRPCNT>,-
		LSTRING=<LRPs Left>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=LRPCNT

	BLDIDB	NAME=HOLECNT,-
		SSTRING=<HOLES>,-
		LSTRING=<Holes In Pool>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=HOLECNT

	BLDIDB	NAME=HOLESUM,-
		SSTRING=<SPACE>,-
		LSTRING=<Total Space Left>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=HOLESUM

	BLDIDB	NAME=BIGHOLE,-
		SSTRING=<LARGEST>,-
		LSTRING=<Largest Block>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=BIGHOLE

	BLDIDB	NAME=SMALLHOLE,-
		SSTRING=<SMALLEST>,-
		LSTRING=<Smallest Block>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SMALLHOLE

	BLDIDB	NAME=SMALLCNT,-
		SSTRING=<# LEQ 32>,-
		LSTRING=<Blocks Less or Eq 32 Bytes>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=SMALLCNT




;
; Entries for I/O rates display
;

	BLDIDB	NAME=ISWPCNT,-
		SSTRING=<INSWAP>,-
		LSTRING=<Inswap Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=SWP$GL_ISWPCNT

	BLDIDB	NAME=DIRIO,-
		SSTRING=<DIRIO>,-
		LSTRING=<Direct I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DIRIO

	BLDIDB	NAME=BUFIO,-
		SSTRING=<BUFIO>,-
		LSTRING=<Buffered I/O Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_BUFIO

	BLDIDB	NAME=MBREADS,-
		SSTRING=<MBREADS>,-
		LSTRING=<Mailbox Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_MBREADS

	BLDIDB	NAME=MBWRITES,-
		SSTRING=<MBWRITES>,-
		LSTRING=<Mailbox Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_MBWRITES

	BLDIDB	NAME=LOGNAM,-
		SSTRING=<LOGNAM>,-
		LSTRING=<Log Name Translation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_LOGNAM

	BLDIDB	NAME=ACCESS,-
		SSTRING=<ACCESS>,-
		LSTRING=<File Lookup Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2

;
; IDBs for FCP display
;

	BLDIDB	NAME=FCPCALLS,-
		SSTRING=<CALLS>,-
		LSTRING=<FCP Call Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCALLS

	BLDIDB	NAME=ALLOC,-
		SSTRING=<ALLOC>,-
		LSTRING=<Allocation Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2+<4*8>

	BLDIDB	NAME=FCPCREATE,-
		SSTRING=<CREATES>,-
		LSTRING=<Create Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_FCP2+44


	BLDIDB	NAME=FCPREAD,-
		SSTRING=<READS>,-
		LSTRING=<Disk Read Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPREAD

	BLDIDB	NAME=FCPWRITE,-
		SSTRING=<WRITES>,-
		LSTRING=<Disk Write Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPWRITE

	BLDIDB	NAME=FCPCACHE,-
		SSTRING=<CACHE>,-
		LSTRING=<Cache Hit Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCACHE

	BLDIDB	NAME=FCPCPU,-
		SSTRING=<CPUTIM>,-
		LSTRING=<CPU Tick Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=FCPCPU

	BLDIDB	NAME=FCPTURN,-
		SSTRING=<TURNS>,-
		LSTRING=<Window Turn Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_TURN

	BLDIDB	NAME=FCPSPLIT,-
		SSTRING=<SPLIT TRANS.>,-
		LSTRING=<Split Transfers>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_SPLIT

	BLDIDB	NAME=FCPHIT,-
		SSTRING=<HITS>,-
		LSTRING=<Window Hits>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_HIT

	BLDIDB	NAME=OPENS,-
		SSTRING=<OPENS>,-
		LSTRING=<File Open Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_OPENS

;
; IDB's for the LOCK class
;

	BLDIDB	NAME=ENQNEW,-
		SSTRING=<ENQ NEWS>,-
		LSTRING=<New ENQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNEW

	BLDIDB	NAME=ENQCVT,-
		SSTRING=<ENQ CVTS>,-
		LSTRING=<Converted ENQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQCVT

	BLDIDB	NAME=DEQ,-
		SSTRING=<DEQs>,-
		LSTRING=<DEQ Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEQ

	BLDIDB	NAME=ENQWAIT,-
		SSTRING=<FWAITs>,-
		LSTRING=<ENQs Forced To Wait Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQWAIT

	BLDIDB	NAME=ENQNOTQD,-
		SSTRING=<ENQNOTQs>,-
		LSTRING=<ENQs Not Queued Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ENQNOTQD

	BLDIDB	NAME=DLCKSRCH,-
		SSTRING=<DLCK SRCH>,-
		LSTRING=<Deadlock Search Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DLCKSRCH

	BLDIDB	NAME=DLCKFND,-
		SSTRING=<DLCK FIND>,-
		LSTRING=<Deadlock Find Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DLCKFND

	BLDIDB	NAME=NUMLOCKS,-
		SSTRING=<TOT LOCKS>,-
		LSTRING=<Total Locks>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=LOCKCNT

	BLDIDB	NAME=NUMRES,-
		SSTRING=<RESOURCES>,-
		LSTRING=<Total Resources>,-
		SIZE=LONG,-
		TYPE=LEVEL,-
		ADDR=RESCNT

;
; IDB's for the DECNET class
;

	BLDIDB	NAME=ARRLOCPK,-
		SSTRING=<ARR L PK>,-
		LSTRING=<Arriving Local Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ARRLOCPK

	BLDIDB	NAME=DEPLOCPK,-
		SSTRING=<DEP L PK>,-
		LSTRING=<Departing Local Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_DEPLOCPK

	BLDIDB	NAME=ARRTRAPK,-
		SSTRING=<ARR T PK>,-
		LSTRING=<Arriving Trans Packet Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_ARRTRAPK

	BLDIDB	NAME=TRCNGLOS,-
		SSTRING=<T CNG LS>,-
		LSTRING=<Trans Congestion Loss Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_TRCNGLOS

	BLDIDB	NAME=RCVBUFFL,-
		SSTRING=<RCVBFFLs>,-
		LSTRING=<Receiver Buff Failure Rate>,-
		SIZE=LONG,-
		TYPE=COUNT,-
		ADDR=PMS$GL_RCVBUFFL


;
; The CLASSTABLE will ultimately be generated by the BLDCDB macro; it is
; temporarily being hard-coded here.
;

classtable::
	
	.long	18
	.long	10$
	.long	0
	.long	20$
	.long	1
	.long	30$
	.long	2
	.long	40$
	.long	3
	.long	50$
	.long	4
	.long	60$
	.long	5
	.long	70$
	.long	6
	.long	80$
	.long	7
	.long	90$
	.long	8

max_class_no == 8			; maximum class number

10$:	.ascic	\PROCESSES\
20$:	.ascic	\STATES\
30$:	.ascic	\MODES\
40$:	.ascic	\PAGE\
50$:	.ascic	\IO\
60$:	.ascic	\FCP\
70$:	.ascic	\POOL\
80$:	.ascic	\LOCK\
90$:	.ascic	\DECNET\

.END
