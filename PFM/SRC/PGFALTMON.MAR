	.title	pgfaltmon	set page fault monitor
	.ident	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;   FACILITY
;
;	Page fault monitor
;
;   ABSTRACT
;
;	This routine initializes the page fault monitor.  It is activated
;	by linking with this routine as the debugger.
;
;   ENVIRONMENT
;
;	Native mode, user mode
;
;   AUTHOR
;
;	Benn Schreiber, 30-Nov-1979
;
;   MODIFIED BY
;
;--

	.sbttl	data

;
; local data
;
	.psect	__lib$data, pic, usr, con, rel, lcl, noshr, noexe, rd, wrt, novec

exit_block:					;exit block for exit handler
	.long	0				;
	.address lib$pfm_exit			;address of exit handler
	.long	1				;return one argument
	.address exit_status			; which is the exit status
exit_status:
	.long	0				;store reason for exit here
exit_flag:
	.long	0				;set to 1 when exit handler called

	.psect	__lib$code, pic, usr, rel, lcl, shr, exe, rd, nowrt, novec

	.default displacement, long

	.sbttl	lib$set_pfm	initialize page fault monitor

;++
;	This routine is called by the image activator to initialize the page
;	fault monitor.
;
; Inputs:
;
;	NONE
;
; Outputs:
;
;	NONE
;
; Implicit outputs:
;
;	The page fault monitor is initialized, and an exit handler is set up.
;
;--

	.entry	lib$set_pfm, ^m<>		;entry mask

	$dclexh_s	desblk = exit_block	;declare the exit handler
	blbc	r0,10$				;branch if error
	$setpfm_s	#1			;enable page fault monitoring
10$:	addl2	#4,4(ap)			;step to next entry point
	movl	@4(ap),r0			;get user address
	callg	(ap),(r0)			;call user program
	pushl	r0				;save user exit status
	calls	#0,lib$pfm_exit			;clean up
	popl	r0				;restore user exit status
	ret

;++
;	This routine is the exit handler for the page fault monitor.  It merely
;	disables the page fault monitor.
;
; Inputs:
;
;	NONE
;
; Outputs:
;
;	NONE
;
; Implicit outputs:
;
;	Page fault monitoring is turned off
;
;--

	.entry	lib$pfm_exit, ^m<>

	bbss	#0,exit_flag,10$		;branch if we've been here
	$setpfm_s	#0			;disable the page fault monitor
10$:	ret					;and exit

	.end	lib$set_pfm			;Set start address for /DEBUG=
