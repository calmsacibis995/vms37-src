	.TITLE	JBCSYMCRE - SYMBIONT CREATE
	.IDENT	'V03-001'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	STARLET JOB CONTROLLER/SYMBIONT MANAGER
;
; ABSTRACT:	SYMBIONT CREATE SUBROUTINE
;
;
; ENVIRONMENT:	NATIVE NON-PRIVLEGED USER MODE CODE
;
; AUTHOR:  W.H.BROWN, CREATION DATE: 15-MAR-77
;
; MODIFIED BY:
;
;	V03-001	MLJ0082		Martin L. Jack,	15-Mar-1982  19:34
;		Tighten security by changing image name parameter to
;		explicitly include "SYS$SYSTEM:image.EXE".
;
;	V04	GWF0001		Gary Fowler	30-NOV-1979
;		Add support for multiple symbiont types.  Add error
;		messages for various reasons why symbiont create fails.
;
;	V03	LMK0001		Len Kawell	05-OCT-1979
;		Add LOG_IO privilege to print symbiont's privileges.
;		This is required to perform logical I/O to a spooled
;		device.
;
;	V02	RTM0003		R T Martin	21 May 1979
;		Fix problem in handling ascii stream files
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:	[235,10]J/ML
;
;
; MACROS:
;
	.MACRO	$QUOTA	NAME=LISTEND,VALUE=0
	.BYTE	PQL$_'NAME
	.LONG	VALUE
	.ENDM	$QUOTA

;
; EQUATED SYMBOLS:
;
	$PQLDEF				; DEFINE PROCESS QUOTA CODES
	$PRVDEF				; DEFINE PRIVILEGE BITS
	JBCPARDEF			; DEFINE JOB CONTROLLER PARAMETERS
	JBCSCTDEF			; SYMBIONT CONTROL TABLE DEFINITIONS
	JBCQUEDEF			; DEFINE QUEUE OFFSETS
;
; OWN STORAGE:
;
	PURE_SECTION
 
 
SYM$Q_SYMBPRIV:				; PRIVILEGE MASK FOR THE PRINT SYMBIONT
	.LONG	<<1@PRV$V_CMKRNL>!-	; CHANGE MODE TO KERNAL
		 <1@PRV$V_LOG_IO>!-	; LOGICAL I/O (TO SPOOLED DEV)
		 <1@PRV$V_ALLSPOOL>!-	; ALLOCATE SPOOLED DEVICE
		 <1@PRV$V_TMPMBX>>	; CREATE TEMPORARY MAILBOX
	.LONG	0			;
 
	.ENABL	LSB
 
SYM$Q_PRCNAM:				;
	.LONG	20$-10$			; LENGTH
	.LONG	10$			; START
 
;
;	QUOTA LIST FOR SYMBIONT SUBPROCESS
;
SYM$QUOTA:				; 
	$QUOTA	CPULM,0			; INIFINITE CPU
	$QUOTA	BYTLM,4096		; BYTE LIMIT FOR BUFFERED I/O
	$QUOTA	FILLM,3			; OPEN FILE COUNT LIMIT
	$QUOTA	PGFLQUOTA,256		; PAGING FILE QUOTA
	$QUOTA	PRCLM,0			; NO SUBPROCESS QUOTA
	$QUOTA	TQELM,1			; TIMER QUEUE ENTRY QUOTA
	$QUOTA	LISTEND			; END OF LIST
	IMPURE_DATA
 
10$:	.ASCII	\PRTSYMB\
SYMBNUM:.BLKB	1
20$:
	.DSABL	LSB
SYM$Q_SYMNAME:
		.LONG	0
		.LONG	SYM_T_NAM
SYM_T_NAM:	.BLKB	30


	.SBTTL	CREATE PRINT SYMBIONT
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE IS CALLED TO INITIATE AN OUTPUT SYMBIONT.
;	THE CURRENT NUMBER OF ACTIVE DEVICE PRINT QUEUES,
;	THE CURRENT NUMBER OF PRINT SYMBIONTS, AND THE
;	MAXIMUM NUMBER OF SYMBIONTS PERMITED TO DECIDE
;	IF A CREATE SHOULD BE PERFORMED.
;
; CALLING SEQUENCE:
;
;	JSB/BSB	SYM$CREPRTSYM
;
; INPUT PARAMETERS:
;
;	SYM$B_CURPRTDEV	CONTAINS THE CURRENT NUMBER OF ACTIVE DESPOOLED DEVICES
;	SYM$B_CURPRTSYM CONTAINS THE CURRENT NUMBER OF PRINT SYMBIONTS
;	SYS$GB_MXPRTSYM CONTAINS THE MAXIMUM NUMBER OF PRINT SYMBIONTS ALLOWED
;
; OUTPUT PARAMETERS:
;
;	IF A CREATE SHOULD BE PERFORMED, A SLOT IN THE SYMBIONT
;	CONTROL TABLE IS ALLOCATED, A CREATE PROCESS IS REQUESTED.
;	IF THE CREATE IS SUCESSFUL, THE SYMBIONT STATE IS SET TO 1
;	INDICATING THAT THE SYMBIONT IS IN THE INIT STATE.
;
; COMPLETION CODES:	NONE
;
; SIDE EFFECTS:		NONE
;--
	PURE_SECTION
 
SYM$CREPRTSYM::				; CREATE PRINT SYMBIONT
	MOVL	SMQ$L_PNMTAB(R6),R0	; GET ADDR. OF CONTROL TABLE	
	CMPB	CURSYMB(R0),CURPDEV(R0)	; MORE SYMBIONTS THAN DEVICES?
	BLSSU	1$			; BR IF NOT
	RSB				; !! RETURN !!
1$:	CMPB	JCD_B_CURSYMB(R11),-	; NOW CHECK THE CURRENT NUMBER
		@#SYS$GB_MXPRTSYM	; AGAINSTTHE MAXIMUM EVER ALLOWED
	BLSSU	2$			; BR IF NOT ENOUGH
	SETSTAT	MAXSYMEXD		; SET ERROR TYPE
	RET				; RETURN TO TOP LEVEL
2$:	CLRL	R1			; SET A COUNTER
	PUSHAB	W^SYM$NXTSYMCTL		; INIT CO-ROUTINE ADDRESS
10$:	JSB	@(SP)+			; CO-ROUTINE LINK
	BLBS	R0,15$			; BR IF ROOM IN CONTROL TABLES
	SETSTAT	SCTTABFUL		; SET ERROR TYPE
	RET				; RETURN TO TOP LEVEL
15$:	INCL	R1			; COUNT SCT INDEX
	TSTB	SCT_B_STATE(R5)		; SLOT FREE?
	BNEQ	10$			; BR IF NOT FREE
	TSTL	(SP)+			; CLEAR CO-ROUTINE LINK
	CMPB	R1,#10			; MORE THAN 9?
	BLSSU	20$			; BR IF NO
	ADDB	#<^A/A/-^A/0/-10>,R1	; FIX UP NAME TO ALHABETIC
20$:	ADDB	#^A/0/,R1		; ADD IN ASCII BIAS
	MOVB	R1,W^SYMBNUM		; SET SYMBIONT NUMBER
	PUSHR	#^M<R2,R3,R4,R5>	; SAVE REGS. DESTROYED BY MOVC3
	ADDB3	#15,SMQ$T_SMBNAME(R6),W^SYM$Q_SYMNAME ; Set length
	MOVC3	#11,W^100$,W^SYM_T_NAM	; Generate "SYS$SYSTEM:"
	MOVZBL	SMQ$T_SMBNAME(R6),R0	; GET CHAR. COUNT FOR NAME
	MOVC3	R0,SMQ$T_SMBNAME+1(R6),(R3) ; Append file name
	MOVL	#^A".EXE",(R3)		; Append file type
	POPR	#^M<R2,R3,R4,R5>	; RESTORE REGS.
	$CREPRC_S	-		; CREATE A PROCESS
		PIDADR = SCT_L_PROCID(R5),-; PLACE TO STORE PROCESS ID
		PRCNAM = SYM$Q_PRCNAM,-	; THE PROCESS NAME DESCRIPTOR
		BASPRI = #8,-		; BASE PRIORITY
		IMAGE  = W^SYM$Q_SYMNAME,- ; NAME OF IMAGE TO RUN
		PRVADR = SYM$Q_SYMBPRIV,-; PRIVILEGE TO PASS
		QUOTA  = SYM$QUOTA	; QUOTAS FOR SYMBIONT PROCESS
	BLBS	R0,30$			; BR IF SERVICE WAS ACCEPTED
	SETSTAT	CREPRCFAL		; SET ERROR TYPE
	RET				; RETURN TO TOP LEVEL
30$:	INCB	SCT_B_STATE(R5)		; SET STATE TO INIT IN PROGRESS
	INCB	JCD_B_CURSYMB(R11)	; ADD 1 TO NUMBER OF PRINT SYMBIONTS
	MOVL	SMQ$L_PNMTAB(R6),R0	; GET POINTER TO NAME TABLE
	MOVL	R0,SCT_L_PNMTAB(R5)	; PUT IN SCT TABLE
	INCB	CURSYMB(R0)		; INCR. NO. OF SYMBIONTS
90$:	RSB				; RETURN TO CALLER
 
100$:	.ASCII	"SYS$SYSTEM:"

	.END
