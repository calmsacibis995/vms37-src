	.TITLE	JBCPRCDEL - JOB CONTROLLER PROCESS DELETE MODULE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:	JOB CONTROLLER
;
; ABSTRACT:	MODULE TO WRITE JOB ACCOUNTING STATISTICS
;		WHEN A PROCESS EXITS.
;
; ENVIRONMENT:	USER MODE NATIVE CODE
;
; AUTHOR:	W.H.BROWN, CREATION DATE:21-JAN-77
;
; MODIFIED BY:
;
;	V02-012	MLJ0081		Martin L. Jack,	1-Mar-1982  16:33
;		Correct off-by-one in interactive job vector overflow test.
;		Delete unreferenced global symbols.
;
;	V02-011	SPF0066		Steve Forgey		22-Jan-1981
;		Additional checks for V02-010.
;
;	V02-010	SPF0048		Steve Forgey		31-Dec-1981
;		Clear batch bit in accounting if job not found in queue.
;
;	V02-009	SPF0026		Steve Forgey		14-Sep-1981
;		Fix login failure bug.
;
;	V02-008	SPF0012		Steve Forgey		28-Jul-1981
;		Update process delete logic to handle the new accounting
;		message formats.
;
;	V02-007	GWF0075		Gary Fowler		16-Jul-1981
;		Change job name to ASCIC string.
;
;	V02-006	GWF0026		Gary Fowler		16-Apr-1981
;		Move process's final status into job header record.  If process
;		has been aborted, set status in account record as JBC$_JOBABORT
;
;	V02-005	GWF0005		Gary Fowler		22-Jan-1980
;		decrement count of current symbionts when unexpected symbiont
;		delete ocurrs.
;
;	V02-004	GWF0004		Gary Fowler		4-Jan-1980
;		Output final status from accounting record when "symbiont
;		delete error" occurs.
;
;	V02-003	GWF0003		Gary Fowler		30-Nov-1979
;		Add support for multiple symbiont types.  Remove entry from
;		symbiont name table if all of one symbiont type is deleted.
;
;	V02-002	GWF0002		Gary Fowler		1-Nov-1979
;		Add deassign of mailbox when a symbiont delete occurs.
;
;	V02-001	-
;--
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:	IN PREFIX FILE
;
; MACROS:
;
; EQUATED SYMBOLS:
;
	$ACMDEF				; DEFINE ACCOUNTING MESSAGE OFFSETS
	JBCPARDEF			; DEFINE JOB CONTROLLER PARAMETERS
	JBCSCTDEF			; SYMBIONT CONTROL TABLE DEFINITIONS
	JBCQUEDEF			; DEFINE QUEUE OFFSETS
	$MSGDEF				; MAILBOX MESSAGE DEFINITIONS
	$PCBDEF				; DEFINE PROCESS CONTROL BLOCK OFFSETS
;
; OWN STORAGE:
;

	.SBTTL	DELETE PROCESS MESSAGES ROUTINE
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS MODULE IS ENTERED WHEN A PROCESS DELETE OCCURS.
;	THE ACCOUNTING DATA IS WRITTEN, AND AUTHORIZATION FILE
;	IS UPDATED AS TO QUOTAS USED.
;
; CALLING SEQUENCE:
;
;	JSB/BSB	JBC$DELPRC
;
; INPUT PARAMETERS:
;
;	R2 CONTAINS THE ADDRESS OF THE DELETE PROCESS MESSAGE
;	R11 POINTS AT THE IMPURE DATA AREA
;
; OUTPUT PARAMETERS:	NONE
;
; COMPLETION CODES:	NONE
;
; SIDE EFFECTS:		NONE
;--
	PURE_SECTION

JBC$PRCDEL::
	MOVAB	JCM_T_MSGDATA(R2),R9	; ADDRESS OF PROCESS DELETE RECORD
	CMPW	#MSG$_DELPROC,ACM$W_TYPE(R9); DELETE PROCESS MESSAGE ?
	BEQL	5$			; IF EQL, YES
	BRW	70$
5$:
	MOVL	ACM$L_PID(R9),R1	; GET PROCESS ID FOR DELETED PROCESS
	TSTL	R10			; IS THERE A QUEUE?
	BEQL	10$			; BR IF NO
	BSBW	SYM$FINDPROCJOB		; CK FOR OPEN QUEUE JOB FOR THIS PROCESS
	BLBC	R0,10$			; BR IF NO SUCH JOB
	MOVL	SJH$L_NEXTJOB(R7),(R2)	; UNLINK THE JOB
	SYM_QUECHANGE			; INDICATE THAT THE QUEUE HAS CHANGED
	BSBW	SYM$FREEJOB		; RELEASE THE JOB
10$:	MOVZWL	ACM$L_PID(R9),R0	; GET PROCESS INDEX
	CMPW	R0,#<<JBC$G_INTJOBEND-JBC$G_INTJOBFLG>*8> ; INDEX TOO BIG
	BGEQU	20$			; BR IF INDEX OUT OF TABLE PROVIDED
	BBCC	R0,W^JBC$G_INTJOBFLG,20$; BR IF JOB IS NOT INTERACTIVE
15$:	$CMKRNL_S W^DECINT		; DECREMENT COUNT OF INTERACTIVE JOBS
	BRW	70$			; GO WRITE THE ACCOUNTING RECORD
20$:	MOVL	ACM$L_PID(R9),R1	; GET PROCESS ID FOR DELETED PROCESS
	BSBW	SYM$GETSYMCTL		; SEARCH FOR SYMBIONT
	BLBC	R0,40$			; BR IF NOT A SYMBIONT
	CMPB	#SCT_K_MRKDEL,SCT_B_STATE(R5) ; DELETE PENDING?
	BEQL	30$			; BR IF YES-ALL IS WELL
	SHOW_ERROR	UNX_SYM_DEL	; UN-EXPECTED SYMBIONT DELETE
	MOVL	ACM$L_FINALSTS(R9),R0	; GET FINAL STATUS
	BSBW	JBC$SYSMSG		; SEND MESS. TO OPERATOR
	MOVL	SCT_L_PNMTAB(R5),R0	; GET ADDR. OF SYMBIONT NAME TABLE
	DECB	CURSYMB(R0)		; DECREMENT COUNT OF SYMBIONTS
	MOVZWL	SCT_W_QINDEX(R5),R6	; GET THE INDEX TO THE ASSOCIATED QUEUE
	ADDL	R10,R6			; FIND THE ADDRESS
	CMPL	SMQ$L_ASNSCT(R6),R5	; WAS THIS SYMBIONT STILL WORKING HERE?
	BNEQ	30$			; BR IF NO
	MOVL	SMQ$L_CURRENT(R6),R7	; GET OFFSET TO CURRENT JOB
	BEQL	30$			; BR IF THERE IS NO CURRENT JOB
	ADDL	R10,R7			; FIND ADDRESS OF THE JOB
	CLRL	SMQ$L_CURRENT(R6)	; MARK NO CURRENT JOB
	BSBW	SYM$JOBINSQUE		; INSERT THE JOB BACK INTO THE QUEUE
30$:	DECB	JCD_B_CURSYMB(R11)	; COUNT DOWN NUMBER OF SYMBIONTS
	CLRB	SCT_B_STATE(R5)		; INDICATE SLOT FREE
	MOVL	SCT_L_PNMTAB(R5),R0	; GET POINTER TO SYMB. NAME TABLE
	TSTB	CURSYMB(R0)		; ALL OF THESE SYMBIONTS GONE?
	BNEQ	32$			; BR IF NOT ALL DELETED
	CLRB	(R0)			; REMOVE ENTRY FROM TABLE
32$:	$DASSGN_S	SCT_W_MBCHAN(R5)	; DEASSIGN MAILBOX CHANNEL
	BRB	70$			; DON'T CHECK FOR DETECHED JOB
40$:	TSTL	R10			; IS THERE A QUEUE?
	BEQL	70$			; BR IF NO - CAN'T HAVE BATCH THEN
	MOVL	ACM$L_PID(R9),R1	; RESET PROCESS ID FOR DELETED PROCESS
;
; NOTE:	THE FOLLOWING SUBROUTINE WILL POTENTIALLY CHANGE
;	REGISTER R0-R8.
;
	BSBW	SYM$FINDETJOB		; SEE IF THIS IS AN ACTIVE DETACHED JOB
50$:	BLBC	R0,70$			; BR IF NO, THIS IS NOT A BATCH JOB
	BSBW	70$			; WRITE ACCOUNTING RECORD
	MOVL	SJH$L_NEXTJOB(R7),(R5)	; REMOVE JOB FROM ACTIVE JOB LIST
	DECB	SMQ$B_JOBCNT(R6)	; DECREMENT JOBS IN PROGRESS
	CLRBIT	SMQ$V_CREPND,SMQ$B_FLAGS(R6) ; CLEAR CREATE PENDING ON THIS QUE
	SYM_QUECHANGE			; INDICATE THE QUEUE CHANGED
	MOVL	ACM$L_FINALSTS(R9),R0	; GET TERMINAL STATUS OF THE JOB
	BBC	#SJH$V_JOBABORT,SJH$B_FLAGS(R7),60$ ; BR IF JOB NOT ABORTED
	MOVL	#JBC$_JOBABORT,R0	; SET PROPER STATUS
60$:	MOVL	R0,ACM$L_FINALSTS(R9)	; SET STATUS IN ACCOUNTING RECORD
	MOVL	R0,SJH$L_FINALSTS(R7)	; SET STATUS IN JOB HEADER RECORD
	BSBW	SYM$FREEJOB		; RELEASE THE JOB TO THE FREE LIST
	SETBIT	JBC_V_CREJOBREQ,JCD_W_FLAGS(R11) ; FLAG CREATE DUE
	$CMKRNL_S B^DECBAT		; DECREMENT COUNT OF BATCH JOBS
	RSB
;
; TIME TO WRITE ACCOUNTING RECORD
;
70$:
	PUSHR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8>
	BBCC	#PCB$V_BATCH,ACM$L_STS(R9),90$; IF BC, NOT A BATCH JOB
	TSTL	R10			; IS THERE A QUEUE ?
	BEQL	90$			; IF EQL, NO
	MOVL	ACM$L_PID(R9),R1	; PROCESS ID
	BSBW	SYM$FINDETJOB		; GET SMQ AND SJH ADDRESSES
	BLBC	R0,90$			; IF LBC, JOB NOT FOUND
	MOVQ	R6,R4			; COPY SMQ AND SJH ADDRESSES
	BBSS	#PCB$V_BATCH,ACM$L_STS(R9),90$; SET BATCH INDICATOR
90$:	MOVL	R9,R6			; ACCOUNTING MESSAGE ADDRESS
	BSBW	ACM$PROCESS		; BUILD AND WRITE PROCESS/IMAGE ACCOUNTING RECORD
	INSQUE	-JCM_T_MSGDATA(R6), -	; RELEASE RECORD FOR RE-USE
		@JCD_Q_FREEBUFR+4(R11)	; TO THE FREE LIST
	POPR	#^M<R0,R1,R2,R3,R4,R5,R6,R7,R8>
	RSB				;

;
; KERNEL MODE ROUTINE TO REDUCE THE COUNT OF INTERACTIVE JOBS BY 1
;
DECINT:	.WORD	0
	DECW	@#SYS$GW_IJOBCNT	; COUNT DOWN NUMBER OF INTERACTIVE JOBS
	RET				;

;
; KERNAL MODE ROUTINE TO REDUCE THE COUNT OF BATCH JOBS BY 1
;
DECBAT:	.WORD	0
	DECW	@#SYS$GW_BJOBCNT	; COUNT DOWN NUMBER OF BATCH JOBS
	RET				;
 
	.END
