MODULE JBCINIQUE(%TITLE	'Queue file initialization'
		IDENT = 'V03-001'
		) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1982                                                      *
!*  BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.			    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
!*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
!*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
!*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:
!	Job controller.
!
! ABSTRACT:
!	This module contains the routine that initializes and maps the
!	queue file.
!
! ENVIRONMENT:
!	VAX/VMS user mode.
!--
!
! AUTHOR: M. Jack, CREATION DATE: 03-Apr-1982
!
! MODIFIED BY:
!
!	V03-001	MLJ0087		Martin L. Jack,	7-Apr-1982  18:03
!		Consider any error on the CIF try fatal, not just FNF.
!
!**

LIBRARY 'SYS$LIBRARY:LIB';


LITERAL
	TRUE=		1,
	FALSE=		0;


STRUCTURE
	BBLOCK[O,P,S,E;N]=
	    [N]
	    (BBLOCK + O)<P,S,E>;


PSECT
	CODE=		JBC$INIT,
	PLIT=		JBC$INIT,
	OWN=		IMPURE_DATA,
	GLOBAL=		IMPURE_DATA;


FORWARD ROUTINE
	INITQUEUE:			NOVALUE;


LINKAGE
	SYSMSG_LINKAGE=	JSB(REGISTER=0);


EXTERNAL ROUTINE
	JBC$SYSMSG:	SYSMSG_LINKAGE NOVALUE;


EXTERNAL
	EXE$GL_FLAGS:	BITVECTOR	ADDRESSING_MODE(GENERAL),
	JBC$Q_RETADR:	VECTOR;		! Queue address array


EXTERNAL LITERAL
	EXE$V_JOBQUEUES:UNSIGNED(6),	! Job queue should be created
	EXE$V_REINITQUE:UNSIGNED(6),	! Job queue should be reinitialized
	JBC$_CREQERR,
	JBC$_NEWQUEUE,
	JBC$_QUEERR;


LITERAL
	JBC$K_NUMQUEUE=		64,
	JBC$K_NUMREC=		1024;

GLOBAL ROUTINE INITQUEUE: NOVALUE=

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine initializes the system queue file and the associated
!	global section.
!
! INPUT PARAMETERS:
!	NONE
!
! IMPLICIT INPUTS:
!	NONE
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	JBC$Q_RETADR	- Address array describing mapped section.
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	NONE
!
!--

BEGIN
LOCAL
	FAB:		$FAB_DECL,	! FAB for queue file
	XAB:		$XABPRO_DECL,	! Protection XAB for queue file
	SQH:		REF BBLOCK,	! Pointer to queue section
	STATUS;				! Status return
LITERAL
	FILE_BYTES =			! Required file size in bytes
	    SQH$K_SIZE +
	    SMQ$K_SIZE * JBC$K_NUMQUEUE +
	    SYM$K_RECSIZE * JBC$K_NUMREC,
	FILE_BLOCKS =			! Required file size in blocks
	    (FILE_BYTES + 511) / 512;
BIND
	SECTION_NAME_DESC = $DESCRIPTOR('JBCSYSQUE');


! Try to delete the global section.  The job controller should have done this
! on the way down, if this is a crash restart, but do it again just to be safe.
!
$DGBLSC(
    FLAGS=SEC$M_SYSGBL,
    GSDNAM=SECTION_NAME_DESC);


! If the SYSGEN parameter JOBQUEUES is clear, exit now.
!
IF NOT .EXE$GL_FLAGS[EXE$V_JOBQUEUES]
THEN
    RETURN;


! The following loop is executed once if the file is created or if it already
! exists and has satisfactory attributes.  Otherwise it is executed twice to
! unconditionally create the file.  However, if the SYSGEN parameter REINITQUE
! is set, only execute the loop once to unconditionally create the file.
!
DECR I FROM (IF .EXE$GL_FLAGS[EXE$V_REINITQUE] THEN 0 ELSE 1) TO 0 DO
    BEGIN
    $FAB_INIT(FAB=FAB,
	ALQ=FILE_BLOCKS,
	FNA=UPLIT BYTE('SYS$SYSTEM:JBCSYSQUE.EXE'),
	FNS=%CHARCOUNT('SYS$SYSTEM:JBCSYSQUE.EXE'),
	FOP=<CBT,UFO>,
	MRS=512,
	ORG=SEQ,
	RFM=FIX,
	XAB=XAB);
    $XABPRO_INIT(XAB=XAB,
	PRO=<RWED,RWED,RE,RE>,
	UIC=[1,4]);
    FAB[FAB$V_CIF] = .I;


    ! Create the queue file or open an existing queue file.
    !
    IF NOT $CREATE(FAB=FAB)
    THEN
	BEGIN
	IF .I EQL 0
	THEN
	    BEGIN
	    JBC$SYSMSG(JBC$_CREQERR + STS$K_ERROR);
	    JBC$SYSMSG(.FAB[FAB$L_STS]);
	    RETURN;
	    END;
	FAB[FAB$L_ALQ] = 0;
	END;


    ! Check the file attributes to ensure that the file is suitable.
    !
    IF .FAB[FAB$L_ALQ] GEQU FILE_BLOCKS
    AND .FAB[FAB$W_MRS] EQL 512
    AND .FAB[FAB$B_ORG] EQL FAB$C_SEQ
    AND .FAB[FAB$B_RAT] EQL 0
    AND .FAB[FAB$B_RFM] EQL FAB$C_FIX
    THEN
	EXITLOOP;


    ! Deassign the channel and loop to unconditionally create a new file.
    !
    $DASSGN(CHAN=.FAB[FAB$L_STV]);
    END;


! Map the file as a global section.
!
STATUS = $CRMPSC(
    INADR=UPLIT(0, 0),
    RETADR=JBC$Q_RETADR,
    FLAGS=SEC$M_GBL OR SEC$M_EXPREG OR SEC$M_WRT OR SEC$M_PERM OR SEC$M_SYSGBL,
    GSDNAM=SECTION_NAME_DESC,
    CHAN=.FAB[FAB$L_STV]);
IF NOT .STATUS
THEN
    BEGIN
    JBC$SYSMSG(JBC$_QUEERR + STS$K_ERROR);
    JBC$SYSMSG(.STATUS);
    JBC$Q_RETADR[0] = JBC$Q_RETADR[1] = 0;
    RETURN;
    END;


! Initialize the file if it was created.
!
SQH = .JBC$Q_RETADR[0];
IF .FAB[FAB$L_STS] EQL RMS$_CREATED OR NOT .FAB[FAB$V_CIF]
THEN
    BEGIN
    JBC$SYSMSG(JBC$_NEWQUEUE + STS$K_INFO);
    INCRA X FROM .JBC$Q_RETADR[0] TO .JBC$Q_RETADR[1] BY 512 DO
	CH$FILL(0, 512, .X);
    SQH[SQH$B_MAXQUE] = JBC$K_NUMQUEUE;
    SQH[SQH$L_FIRSTREC] = SQH$K_SIZE + JBC$K_NUMQUEUE * SMQ$K_SIZE;
    SQH[SQH$L_NEXTREC] =  SQH$K_SIZE + JBC$K_NUMQUEUE * SMQ$K_SIZE;
    END;


! Initialize SQH area.
!
SQH[SQH$L_FREEREC] = 0;
SQH[SQH$L_OPENJOB] = 0;
SQH[SQH$L_TIMQUE] = 0;
SQH[SQH$B_NUMQUE] = 0;
SQH[SQH$L_LASTREC] = FILE_BYTES;
END;

END
ELUDOM
