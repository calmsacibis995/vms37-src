!!	PARSTAB.TBL
!!
!!	This file contains the parse tables which define the EDT line mode
!!	commands.
!!
!!****************************************************************************
!!*									    *
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!!*									    *
!!****************************************************************************
!!
!! Dan Szymanski, 21-JUL-80, 01
!!
!!	Syntax of GET_KEY expanded to allow definition of GOLD letter,
!!	GOLD CONTROL letter, etc.
!!
!! Dan Szymanski, 21-JUL-80, 02
!!
!!	Syntax for SET HELP removed to simplify synchronization of
!!	EDT V2.0 sources.
!!
!! Dan Szymanski, 14-AUG-80, 03
!!
!!	Definition of keywords K_ADJUST and K_NOWRAP corrected.
!!
!! Dan Szymanski, 23-SEP-80, 04
!!
!!	VERIFY command deleted from the COMMAND syntax.  If this is ever
!!	re-implemented, the command should be at the end of the list of
!!	command definitions.
!
!! Definition of the keywords and other tokens used in EDT.
!
!		TOKEN	K_CHAN,1,6,CHANGE
!		TOKEN	K_COPY,2,4,COPY
!		TOKEN	K_DEFINE,3,6,DEFINE
!		TOKEN	K_DELE,1,6,DELETE
!		TOKEN	K_EXIT,2,4,EXIT
!		TOKEN	K_FIND,1,4,FIND
!		TOKEN	K_FOR,3,3,%FOR
!		TOKEN	K_HELP,1,4,HELP
!		TOKEN	K_INCL,3,7,INCLUDE
!		TOKEN	K_INSE,1,6,INSERT
!		TOKEN	K_KEY,1,6,KEYPAD
!		TOKEN   K_NOKEY,3,8,NOKEYPAD
!		TOKEN	K_MOVE,1,4,MOVE
!		TOKEN	K_PRIN,1,5,PRINT
!		TOKEN	K_QUIT,4,4,QUIT
!		TOKEN	K_REPL,1,7,REPLACE
!		TOKEN	K_RESQ,3,10,RESEQUENCE
!		TOKEN	K_SET,2,3,SET
!		TOKEN	K_SHOW,2,4,SHOW
!		TOKEN	K_SUBS,1,10,SUBSTITUTE
!		TOKEN	K_TYPE,1,4,TYPE
!		TOKEN	K_WRIT,2,5,WRITE
!		TOKEN	K_VERIFY,1,6,VERIFY
!		TOKEN	T_POUND,1,1,#
!		TOKEN	K_TO,2,2,%TO
!		TOKEN	K_THRU,4,4,%THRU
!		TOKEN	T_MINUS,1,1,-
!		TOKEN	T_COMMA,1,1,,
!		TOKEN	K_NEXT,1,4,NEXT
!		TOKEN	K_AND,3,3,%AND
!		TOKEN	T_PLUS,1,1,+
!		TOKEN	T_EQL,1,1,=
!		TOKEN	T_DOT,1,1,.
!		TOKEN	K_BUF,2,6,%BUFFER
!		TOKEN	K_END,1,3,%END
!		TOKEN	K_BEG,1,5,%BEGIN
!		TOKEN	K_LAS,1,4,%LAST
!		TOKEN	T_STR,1,0,'
!		TOKEN	K_ALL,1,3,%ALL
!		TOKEN	T_COLON,1,1,:
!		TOKEN	K_REST,1,4,%REST
!		TOKEN	K_BEF,3,6,%BEFORE
!		TOKEN	K_WHOL,1,5,%WHOLE
!		TOKEN	T_NUM,1,0,
!		TOKEN	T_EOL,0,0,!
!		TOKEN	T_SLASH,1,1,/
!		TOKEN	K_QUERY,1,5,QUERY
!		TOKEN	K_BRIEF,1,5,BRIEF
!		TOKEN	K_SEQ,3,8,SEQUENCE
!		TOKEN	K_DUPL,1,9,DUPLICATE
!		TOKEN	K_NOTYP,3,6,NOTYPE
!		TOKEN	K_SAVE,2,4,SAVE
!		TOKEN	K_STAY,2,4,STAY
!		TOKEN	K_NUMBERS,2,7,NUMBERS
!		TOKEN	K_NONUM,3,9,NONUMBERS
!		TOKEN	K_CASE,2,4,CASE
!		TOKEN	K_EXACT,2,5,EXACT
!		TOKEN	K_SEARCH,2,6,SEARCH
!		TOKEN	K_GEN,1,7,GENERAL
!		TOKEN	K_BOUND,2,7,BOUNDED
!		TOKEN	K_UNBOUND,1,9,UNBOUNDED
!		TOKEN	K_TERM,2,8,TERMINAL
!		TOKEN	K_UPPER,1,5,UPPER
!		TOKEN	K_LOWER,1,5,LOWER
!		TOKEN	K_NONE,1,4,NONE
!		TOKEN	K_VT52,4,4,VT52
!		TOKEN	K_VT100,5,5,VT100
!		TOKEN	K_HCPY,4,4,HCPY
!		TOKEN	K_CURSOR,1,6,CURSOR
!		TOKEN	K_GOLD,1,4,GOLD
!		TOKEN	K_CONTROL,3,7,CONTROL
!		TOKEN	K_AS,2,2,AS
!		TOKEN	K_NOVER,3,8,NOVERIFY
!		TOKEN   K_TRUNCATE,2,8,TRUNCATE
!		TOKEN	K_NOTRUNCATE,4,10,NOTRUNCATE
!		TOKEN	K_VER,2,7,VERSION
!		TOKEN	K_WRAP,1,4,WRAP
!		TOKEN	K_WORD,1,4,WORD
!		TOKEN	K_NOWRAP,3,6,NOWRAP
!		TOKEN	K_SCREEN,2,6,SCREEN
!		TOKEN   K_LINES,1,5,LINES
!		TOKEN	K_MODE,1,4,MODE
!		TOKEN	K_MACRO,1,5,MACRO
!		TOKEN	K_ENTITY,2,6,ENTITY
!		TOKEN	K_PAGE,3,4,PAGE
!		TOKEN	K_SENT,1,8,SENTENCE
!		TOKEN	K_PARA,3,9,PARAGRAPH
!		TOKEN	K_CLEAR,2,5,CLEAR
!		TOKEN	K_ORIG,1,8,ORIGINAL
!		TOKEN	K_QUIET,1,5,QUIET
!		TOKEN	K_NOQUIET,3,7,NOQUIET
!		TOKEN	K_SEL,1,6,SELECT
!		TOKEN	K_TAB,2,3,TAB
!		TOKEN	K_NOTAB,3,5,NOTAB
!		TOKEN	K_FILL,3,4,FILL
!		TOKEN	K_ADJUST,1,6,ADJUST
!		TOKEN	K_DELETE,3,6,DELETE
!
!! This is the highest level of the table, the parser enters here to
!! attempt to parse an EDT command
!
!COMMAND		SELECT	23,INI_COM
!			K_CHAN		COM_1
!			K_COPY		COM_2
!			K_DEFINE	DEF_COM
!			K_DELE		COM_1
!			K_EXIT		COM_5
!			K_FIND		COM_1
!			K_INCL		COM_3
!			K_INSE		COM_1
!			K_MOVE		COM_2
!			K_PRIN		COM_3
!			K_QUIT		SWITCH
!			K_REPL		COM_1
!			K_RESQ		COM_1
!			K_SET		SET_COM
!			K_SHOW		SHOW_COM
!			K_SUBS		COM_4
!			K_TYPE		COM_1
!			K_WRIT		COM_3
!			K_NEXT		S_NEXT
!			K_HELP		HELP_COM
!			K_CLEAR		CLEAR_COM
!			K_TAB		TAB_COM
!			K_FILL		COM_1
!!			K_VERIFY	SWITCH
!
!!		
!! Implied type command, check to make sure first
!! character is non-alphabetic
!!
!		ACTION	CHKALPHA
!
!! Commands having range and switches go here
!
!COM_1		CALL	RANGE
!		ACTION	RAN1
!		GOTO	SWITCH
!
!COM_2		CALL	RANGE
!		ACTION	RAN2
!		REQUIRE	K_TO	
!		GOTO	COM_1
!
!COM_3		ACTION	FILSPC
!		GOTO	COM_1
!
!COM_4		SELECT	1,WHICHSUBS
!			K_NEXT	S_NEXT
!		ACTION	STRINGS
!		GOTO	COM_1
!
!S_NEXT	OPTION	T_EOL,GETSTRING
!		RETURN
!
!GETSTRING	ACTION	STRINGS
!		RETURN
!
!COM_5		ACTION	FILSPC
!		GOTO	SWITCH
!
!HELP_COM	ACTION	HELPSTR
!		RETURN
!
!CLEAR_COM	ACTION	BUF_RAN
!                ACTION	RAN1
!		RETURN
!
!TAB_COM		REQUIRE	K_ADJUST
!		ACTION	TABCOUNT
!		GOTO	COM_1
!
!SET_COM		SELECT	22,SETTYPE
!			K_NUMBERS	DONE
!			K_NONUM		DONE
!			K_CASE		SETCASE
!			K_SEARCH	SETSEARCH
!			K_TERM		SETTERM
!			K_VERIFY	DONE
!			K_NOVER		DONE
!			K_TRUNCATE	DONE
!			K_NOTRUNCATE	DONE
!			K_KEY		DONE
!			K_NOKEY		DONE
!			K_WRAP		NUM_SET
!			K_NOWRAP	DONE
!			K_CURSOR	SET_CURSOR
!			K_SCREEN	NUM_SET
!			K_MODE		SET_MODE
!			K_LINES		NUM_SET
!			K_ENTITY	SET_ENT
!			K_QUIET		DONE
!			K_NOQUIET	DONE
!			K_TAB		NUM_SET
!			K_NOTAB		DONE
!!			K_HELP		COM_5
!                ACTION	BAD_PARAM
!		ABORT
!
!SETCASE		SELECT	3,SETVAL
!			K_NONE	DONE
!			K_UPPER	DONE
!			K_LOWER	DONE
!BAD_VAL         ACTION	BAD_VALUE
!		ABORT
!
!SET_MODE	SELECT	2,SETVAL
!			K_CHAN 	DONE
!			K_LINES	DONE
!		GOTO	BAD_VAL
!
!SETSEARCH	SELECT	6,SETVAL
!			K_GEN	DONE
!			K_EXACT	DONE
!			K_END	DONE
!			K_BEG	DONE
!			K_UNBOUND DONE
!			K_BOUND DONE
!		GOTO	BAD_VAL
!
!SETTERM		ACTION	APP_NUM
!		SELECT	3,SETVAL
!			K_VT52	DONE
!			K_VT100	DONE
!			K_HCPY	DONE
!		GOTO	BAD_VAL
!
!SET_CURSOR	ACTION	REQ_NUM
!		REQUIRE	T_NUM
!		ACTION	SET_ARG1
!		ACTION	REQ_COLON
!		REQUIRE	T_COLON
!
!NUM_SET		ACTION	REQ_NUM
!		REQUIRE	T_NUM
!		ACTION	SET_ARG
!		RETURN
!
!SET_ENT		SELECT	4,SETVAL
!			K_WORD	STRING_VAL
!			K_SENT  STRING_VAL
!			K_PARA	STRING_VAL
!			K_PAGE	STRING_VAL
!		ACTION	ENTITY_ERR
!		ABORT
!
!SHOW_COM        SELECT  9,SETTYPE
!			K_BUF		DONE
!			K_CASE		DONE
!			K_SEARCH	DONE
!			K_TERM		DONE
!			K_VER		DONE
!			K_ENTITY	GET_ENT
!			K_KEY   	GET_KEY
!			K_CURSOR	DONE
!			K_SCREEN	DONE
!		ACTION	BAD_PARAM
!		ABORT
!
!GET_KEY		SELECT	4,DEF_KEY
!    			T_NUM		D_NUM
!			K_GOLD		D_GOLD_KEY
!			K_CONTROL	D_CONT_KEY
!    			K_DELETE	D_DELETE
!
!D_KEY		ACTION	DEF_CHAR
!    		RETURN
!
!D_NUM		ACTION	KEY_NUM
!		RETURN
!
!D_CONT_KEY	ACTION	CONT_CHAR
!		RETURN
!
!D_DELETE	ACTION  DEF_DELETE
!    		RETURN
!
!D_GOLD_KEY	SELECT	3,DEF_GOLD_KEY
!    			T_NUM		D_NUM
!    			K_CONTROL	D_GOLD_CONT
!    			K_DELETE	D_GOLD_DEL
!    		ACTION  DEF_GOLD_CHAR
!    		RETURN
!
!D_GOLD_CONT	ACTION	DEF_GOLD_CONT
!    		RETURN
!
!D_GOLD_DEL	ACTION	DEF_GOLD_DEL
!    		RETURN
!
!GET_ENT		SELECT	4,SETVAL
!			K_WORD	DONE
!			K_SENT	DONE
!			K_PARA	DONE
!			K_PAGE	DONE
!		ACTION	ENTITY_ERR
!		ABORT
!
!DEF_COM		SELECT	2,NO_ACTION
!			K_MACRO		DEF_MAC_COM
!			K_KEY		DEF_KEY_COM
!		ACTION	MACORKEY
!		ABORT
!
!DEF_KEY_COM	CALL	GET_KEY
!		ACTION	REQ_AS
!		REQUIRE	K_AS
!STRING_VAL      ACTION	REQ_STRING
!		REQUIRE	T_STR
!		ACTION	AS_STRING
!		RETURN
!
!DEF_MAC_COM	ACTION  BUF_RAN
!		ACTION	DEF_MAC
!		RETURN
!
!! This sub_table contains the grammar for range expressions.
!!
!RANGE		ACTION	BAD_RANGE
!		OPTION	T_EQL,TRY_BUF
!		GOTO	GET_BUF
!TRY_BUF		OPTION	K_BUF,NOBUF
!
!GET_BUF		ACTION	BUF_RAN
!		CALL	NOBUF
!		ACTION	BUF_RAN2
!		RETURN
!
!NOBUF		SELECT  5,START_RANGE
!			K_LAS	DONE
!			K_BEF	GET_ALL
!			K_REST	GET_ALL
!			K_WHOL	GET_ALL
!			K_SEL	DONE
!                CALL    SLR
!
!COMPOUND	SELECT	6,NO_ACTION
!			T_COLON	THRURAN
!			K_THRU	THRURAN
!			T_POUND	FOR_RAN
!			K_FOR	FOR_RAN
!			T_COMMA	ANDRAN
!			K_AND	ANDRAN
!
!GET_ALL        OPTION	K_ALL,DONE
!			ACTION	ALLRAN
!			RETURN
!
!SLR			SELECT	6,INIRAN
!			T_NUM	NUMRAN
!			T_DOT	OFFSET
!			T_STR	STRRAN
!			K_BEG	OFFSET
!			K_END	OFFSET
!			K_ORIG	OPT_NUM
!
!OFFSET		SELECT	2,NO_ACTION
!			T_PLUS	PLUS_RAN
!			T_MINUS	MINUS_RAN
!		RETURN
!
!NUMRAN		ACTION	LINE_NUM
!		ACTION	LINE_NUM_RANGE
!		GOTO	OFFSET
!
!FOR_RAN		ACTION	FORRAN
!		ACTION	REQ_NUM
!		REQUIRE	T_NUM
!		ACTION	RANNUM
!		GOTO    GET_ALL
!
!PLUS_RAN	ACTION 	PLUSRAN
!OPT_NUM		OPTION	T_NUM,OFFSET
!		ACTION	RANNUM
!		GOTO	OFFSET
!
!MINUS_RAN	ACTION	MINUSRAN
!		OPTION	T_STR,OPT_NUM
!
!STRRAN		ACTION	GETSTR
!		GOTO 	OFFSET
!
!THRURAN		ACTION	BIN_RANGE
!		CALL	SLR
!		ACTION	THRU_RAN
!		GOTO    GET_ALL
!
!ANDRAN		ACTION	AND_HEAD
!ANDNEXT		CALL    SLR
!                ACTION  AND_NEXT
!		OPTION	K_AND,TRY_COMMA
!                GOTO    ANDRAN
!TRY_COMMA	OPTION	T_COMMA,GET_ALL
!		GOTO	ANDNEXT
!
!
!! Process option switches.  All options are processed here,
!! validity checking is done by the execute processor.
!
!SWITCH	OPTION	T_SLASH,DONE
!                ACTION	BAD_OPTION
!		SELECT	7,A_SWITCH
!			K_QUERY	SWITCH
!			K_BRIEF	ONE_VAL
!			K_NOTYP NO_VAL
!			K_SEQ	TWO_VAL
!			K_DUPL	ONE_VAL
!			K_SAVE	SWITCH
!			K_STAY	SWITCH
!                ACTION	UNREC_OPTION
!		ABORT
!
!TWO_VAL		ACTION  REQ_NUM
!		ACTION	INIT_SEQ
!		OPTION	T_COLON,SWITCH
!		REQUIRE	T_NUM
!		ACTION	LINE_NUM
!		ACTION	SWITCH_1
!		OPTION  T_COLON,SWITCH
!		REQUIRE	T_NUM
!		ACTION	LINE_NUM
!		ACTION	SWITCH_2
!		GOTO	SWITCH
!
!ONE_VAL		OPTION	T_COLON,SWITCH
!		ACTION	REQ_NUM
!		REQUIRE	T_NUM
!		ACTION	SWITCH_1
!		GOTO	SWITCH
!
!DONE		RETURN
!
!!LET_COM		CALL	VARIABLE
!!		ACTION	COM_VAR
!!		REQUIRE	T_COLEQ
!!
!!DIS_COM		CALL	EXPRESSION
!!		ACTION 	COM_EXP
!!		RETURN
!!
!!EXPRESSION	ACTION	EXP_ERROR
!!E1		CALL	PRIMARY
!!		OPTION	T_LP,GET_OP
!!		ACTION	SUBSTRING
!!		CALL	EXPRESSION
!!                ACTION	SUBSTRING1
!!                OPTION	T_COMMA,LEN1
!!                ACTION	SUBSTRING2
!!		CALL	EXPRESSION
!!                ACTION	SUBSTRING3
!!LEN1		REQUIRE T_RP
!!GET_OP		SELECT	13,OPERATOR
!!			T_PLUS	E1
!!			T_MINUS	E1
!!			T_STAR	E1
!!			T_SLASH	E1
!!			K_AND	E1
!!			K_OR	E1
!!			T_LSS	E1
!!			T_LEQ	E1
!!			T_EQL	E1
!!			T_GEQ	E1
!!			T_GTR	E1
!!			T_NEQ	E1
!!			T_AMP	E1
!!		RETURN
!!
!!PRIMARY		SELECT	5,UNARY1
!!			T_MINUS	UNARY
!!			K_NOT	UNARY
!!			K_LEN	UNARY
!!			K_SIZE	UNARY
!!			K_FIND	FIND_OP
!!
!!		OPTION	T_STR,P1
!!		ACTION	P_STRING
!!		RETURN
!!P1		OPTION	T_NUM,P2
!!		ACTION	P_NUM
!!		RETURN
!!P2		OPTION	K_POS,P3
!!		ACTION	P_POS
!!		RETURN
!!P3		OPTION	T_LP,V1
!!		ACTION 	START_PAREN
!!		CALL	EXPRESSION
!!		ACTION	END_PAREN
!!		REQUIRE	T_RP
!!		RETURN
!!
!!UNARY		CALL	PRIMARY
!!		ACTION	UNARY2
!!		RETURN
!!
!!VARIABLE	ACTION	VAR_ERROR
!!V1		OPTION	T_DOT,V2
!!		ACTION	VAR_DOT
!!		RETURN
!!V2		REQUIRE	T_DOLLAR
!!		ACTION	VAR_REF
!!		RETURN
!!
!!LEAVE_COM	OPTION	K_IF,DONE
!!		GOTO	DIS_COM
!!
!!IF_COM		CALL	EXPRESSION
!!		ACTION	COM_EXP
!!		REQUIRE	K_THEN
!!		RETURN
!!
!!FIND_OP		CALL	RANGE
!!		ACTION	FINDOP
!!		RETURN


LITERAL ! Parse table label defs
    DONE	=   1,	! 42
    COM_1	=   2,	! 13
    SWITCH	=   3,	! 12
    OFFSET	=   4,	! 8
    GET_ALL	=   5,	! 7
    NUM_SET	=   6,	! 5
    STRING_VAL	=   7,	! 5
    BAD_VAL	=   8,	! 4
    SLR	=   9,	! 4
    ANDRAN	=   10,	! 4
    COM_3	=   11,	! 4
    D_NUM	=   12,	! 3
    FOR_RAN	=   13,	! 3
    S_NEXT	=   14,	! 3
    THRURAN	=   15,	! 3
    NOBUF	=   16,	! 3
    RANGE	=   17,	! 3
    ONE_VAL	=   18,	! 3
    COM_2	=   19,	! 3
    GET_KEY	=   20,	! 3
    OPT_NUM	=   21,	! 3
    D_GOLD_DEL	=   22,	! 2
    DEF_MAC_COM	=   23,	! 2
    D_GOLD_KEY	=   24,	! 2
    D_CONT_KEY	=   25,	! 2
    D_GOLD_CONT	=   26,	! 2
    D_DELETE	=   27,	! 2
    DEF_KEY_COM	=   28,	! 2
    COM_5	=   29,	! 2
    SET_COM	=   30,	! 2
    DEF_COM	=   31,	! 2
    GETSTRING	=   32,	! 2
    COM_4	=   33,	! 2
    HELP_COM	=   34,	! 2
    SHOW_COM	=   35,	! 2
    CLEAR_COM	=   36,	! 2
    SET_MODE	=   37,	! 2
    SET_CURSOR	=   38,	! 2
    SET_ENT	=   39,	! 2
    GET_ENT	=   40,	! 2
    SETSEARCH	=   41,	! 2
    SETCASE	=   42,	! 2
    SETTERM	=   43,	! 2
    TAB_COM	=   44,	! 2
    GET_BUF	=   45,	! 2
    STRRAN	=   46,	! 2
    PLUS_RAN	=   47,	! 2
    TRY_BUF	=   48,	! 2
    MINUS_RAN	=   49,	! 2
    ANDNEXT	=   50,	! 2
    NUMRAN	=   51,	! 2
    TRY_COMMA	=   52,	! 2
    TWO_VAL	=   53,	! 2
    D_KEY	=   54,	! 1
    NO_VAL	=   55,	! 1
    COMMAND	=   56,	! 1
    COMPOUND	=   57;	! 1

LITERAL ! Parse table action routine defs
    SETVAL	=   1,	! 6
    REQ_NUM	=   2,	! 5
    BUF_RAN	=   3,	! 3
    NO_ACTION	=   4,	! 3
    LINE_NUM	=   5,	! 3
    FILSPC	=   6,	! 2
    RAN1	=   7,	! 2
    SETTYPE	=   8,	! 2
    BAD_PARAM	=   9,	! 2
    RANNUM	=   10,	! 2
    STRINGS	=   11,	! 2
    SWITCH_1	=   12,	! 2
    ENTITY_ERR	=   13,	! 2
    DEF_GOLD_CONT	=   14,	! 1
    BIN_RANGE	=   15,	! 1
    CHKALPHA	=   16,	! 1
    THRU_RAN	=   17,	! 1
    RAN2	=   18,	! 1
    DEF_MAC	=   19,	! 1
    WHICHSUBS	=   20,	! 1
    GETSTR	=   21,	! 1
    DEF_GOLD_CHAR	=   22,	! 1
    BAD_RANGE	=   23,	! 1
    REQ_STRING	=   24,	! 1
    A_SWITCH	=   25,	! 1
    UNREC_OPTION	=   26,	! 1
    MACORKEY	=   27,	! 1
    INIT_SEQ	=   28,	! 1
    AND_NEXT	=   29,	! 1
    DEF_GOLD_DEL	=   30,	! 1
    AND_HEAD	=   31,	! 1
    BAD_OPTION	=   32,	! 1
    AS_STRING	=   33,	! 1
    REQ_AS	=   34,	! 1
    DEF_KEY	=   35,	! 1
    ALLRAN	=   36,	! 1
    BUF_RAN2	=   37,	! 1
    START_RANGE	=   38,	! 1
    DEF_CHAR	=   39,	! 1
    INIRAN	=   40,	! 1
    SET_ARG1	=   41,	! 1
    REQ_COLON	=   42,	! 1
    BAD_VALUE	=   43,	! 1
    APP_NUM	=   44,	! 1
    SET_ARG	=   45,	! 1
    TABCOUNT	=   46,	! 1
    DEF_DELETE	=   47,	! 1
    HELPSTR	=   48,	! 1
    DEF_GOLD_KEY	=   49,	! 1
    MINUSRAN	=   50,	! 1
    FORRAN	=   51,	! 1
    LINE_NUM_RANGE	=   52,	! 1
    KEY_NUM	=   53,	! 1
    PLUSRAN	=   54,	! 1
    CONT_CHAR	=   55,	! 1
    SWITCH_2	=   56,	! 1
    INI_COM	=   57,
    NUM_SEM	=   57;	! 1

LITERAL ! Parse table token number defs O
    T_NUM	=   1,	! 11
    T_COLON	=   2,	! 6
    T_STR	=   3,	! 4
    K_KEY	=   4,	! 4
    K_CURSOR	=   5,	! 3
    K_CONTROL	=   6,	! 3
    K_WORD	=   7,	! 3
    K_SEARCH	=   8,	! 3
    K_TERM	=   9,	! 3
    K_CASE	=   10,	! 3
    K_SCREEN	=   11,	! 3
    K_AND	=   12,	! 3
    K_NEXT	=   13,	! 3
    T_COMMA	=   14,	! 3
    K_END	=   15,	! 3
    K_BEG	=   16,	! 3
    K_BUF	=   17,	! 3
    K_CHAN	=   18,	! 3
    K_SENT	=   19,	! 3
    K_PAGE	=   20,	! 3
    K_ENTITY	=   21,	! 3
    K_TAB	=   22,	! 3
    K_PARA	=   23,	! 3
    K_DELETE	=   24,	! 3
    K_LINES	=   25,	! 3
    K_TO	=   26,	! 2
    K_THRU	=   27,	! 2
    T_MINUS	=   28,	! 2
    K_WRIT	=   29,	! 2
    K_TYPE	=   30,	! 2
    T_POUND	=   31,	! 2
    K_VERIFY	=   32,	! 2
    K_SUBS	=   33,	! 2
    K_SEL	=   34,	! 2
    T_DOT	=   35,	! 2
    K_NOQUIET	=   36,	! 2
    K_QUIET	=   37,	! 2
    K_NOTAB	=   38,	! 2
    K_FILL	=   39,	! 2
    T_EQL	=   40,	! 2
    T_PLUS	=   41,	! 2
    K_LAS	=   42,	! 2
    K_HELP	=   43,	! 2
    K_FOR	=   44,	! 2
    K_INCL	=   45,	! 2
    K_INSE	=   46,	! 2
    K_DELE	=   47,	! 2
    K_DEFINE	=   48,	! 2
    K_FIND	=   49,	! 2
    K_EXIT	=   50,	! 2
    K_COPY	=   51,	! 2
    K_REPL	=   52,	! 2
    K_QUIT	=   53,	! 2
    K_SET	=   54,	! 2
    K_RESQ	=   55,	! 2
    K_SHOW	=   56,	! 2
    K_NOKEY	=   57,	! 2
    K_ADJUST	=   58,	! 2
    K_PRIN	=   59,	! 2
    K_MOVE	=   60,	! 2
    K_NOWRAP	=   61,	! 2
    K_TRUNCATE	=   62,	! 2
    K_UNBOUND	=   63,	! 2
    K_UPPER	=   64,	! 2
    K_LOWER	=   65,	! 2
    K_NOTRUNCATE	=   66,	! 2
    K_EXACT	=   67,	! 2
    K_BOUND	=   68,	! 2
    K_GEN	=   69,	! 2
    K_VER	=   70,	! 2
    K_GOLD	=   71,	! 2
    K_MACRO	=   72,	! 2
    K_MODE	=   73,	! 2
    K_AS	=   74,	! 2
    K_VT52	=   75,	! 2
    K_NONE	=   76,	! 2
    K_HCPY	=   77,	! 2
    K_VT100	=   78,	! 2
    K_NOVER	=   79,	! 2
    K_WRAP	=   80,	! 2
    K_WHOL	=   81,	! 2
    T_EOL	=   82,	! 2
    T_SLASH	=   83,	! 2
    K_CLEAR	=   84,	! 2
    K_ALL	=   85,	! 2
    K_BEF	=   86,	! 2
    K_REST	=   87,	! 2
    K_ORIG	=   88,	! 2
    K_SAVE	=   89,	! 2
    K_NOTYP	=   90,	! 2
    K_NUMBERS	=   91,	! 2
    K_STAY	=   92,	! 2
    K_NONUM	=   93,	! 2
    K_BRIEF	=   94,	! 2
    K_QUERY	=   95,	! 2
    K_DUPL	=   96,	! 2
    K_SEQ	=   97;	! 2

BIND	TOKEN_TABLE = UPLIT(BYTE(
















































	97,'CHANGE',
	66,'COPY',
	99,'DEFINE',
	97,'DELETE',
	66,'EXIT',
	65,'FIND',
	59,'FOR',
	65,'HELP',
	115,'INCLUDE',
	97,'INSERT',
	97,'KEYPAD',
	131,'NOKEYPAD',
	65,'MOVE',
	81,'PRINT',
	68,'QUIT',
	113,'REPLACE',
	163,'RESEQUENCE',
	50,'SET',
	66,'SHOW',
	161,'SUBSTITUTE',
	65,'TYPE',
	82,'WRITE',
	97,'VERIFY',
	17,'#',
	42,'TO',
	76,'THRU',
	17,'-',
	17,',',
	65,'NEXT',
	59,'AND',
	17,'+',
	17,'=',
	17,'.',
	106,'BUFFER',
	57,'END',
	89,'BEGIN',
	73,'LAST',
	1,'',
	57,'ALL',
	17,':',
	73,'REST',
	107,'BEFORE',
	89,'WHOLE',
	1,'',
	0,'',
	17,'/',
	81,'QUERY',
	81,'BRIEF',
	131,'SEQUENCE',
	145,'DUPLICATE',
	99,'NOTYPE',
	66,'SAVE',
	66,'STAY',
	114,'NUMBERS',
	147,'NONUMBERS',
	66,'CASE',
	82,'EXACT',
	98,'SEARCH',
	113,'GENERAL',
	114,'BOUNDED',
	145,'UNBOUNDED',
	130,'TERMINAL',
	81,'UPPER',
	81,'LOWER',
	65,'NONE',
	68,'VT52',
	85,'VT100',
	68,'HCPY',
	97,'CURSOR',
	65,'GOLD',
	115,'CONTROL',
	34,'AS',
	131,'NOVERIFY',
	130,'TRUNCATE',
	164,'NOTRUNCATE',
	114,'VERSION',
	65,'WRAP',
	65,'WORD',
	99,'NOWRAP',
	98,'SCREEN',
	81,'LINES',
	65,'MODE',
	81,'MACRO',
	98,'ENTITY',
	67,'PAGE',
	129,'SENTENCE',
	147,'PARAGRAPH',
	82,'CLEAR',
	129,'ORIGINAL',
	81,'QUIET',
	115,'NOQUIET',
	97,'SELECT',
	50,'TAB',
	83,'NOTAB',
	67,'FILL',
	97,'ADJUST',
	99,'DELETE',




!COMMAND
	0)) : VECTOR[578,BYTE];

BIND PARSE_TABLE = UPLIT(BYTE(OP_SELECT+23,INI_COM,		K_CHAN,	COM_1,
		K_COPY,	COM_2,
		K_DEFINE,	DEF_COM,
		K_DELE,	COM_1,
		K_EXIT,	COM_5,
		K_FIND,	COM_1,
		K_INCL,	COM_3,
		K_INSE,	COM_1,
		K_MOVE,	COM_2,
		K_PRIN,	COM_3,
		K_QUIT,	SWITCH,
		K_REPL,	COM_1,
		K_RESQ,	COM_1,
		K_SET,	SET_COM,
		K_SHOW,	SHOW_COM,
		K_SUBS,	COM_4,
		K_TYPE,	COM_1,
		K_WRIT,	COM_3,
		K_NEXT,	S_NEXT,
		K_HELP,	HELP_COM,
		K_CLEAR,	CLEAR_COM,
		K_TAB,	TAB_COM,
		K_FILL,	COM_1,






	OP_ACTION+	CHKALPHA,



!COM_1
	OP_CALL+	RANGE,
	OP_ACTION+	RAN1,
	OP_GOTO+	SWITCH,

!COM_2
	OP_CALL+	RANGE,
	OP_ACTION+	RAN2,
	OP_REQUIRE+	K_TO,
	OP_GOTO+	COM_1,

!COM_3
	OP_ACTION+	FILSPC,
	OP_GOTO+	COM_1,

!COM_4
	OP_SELECT+1,WHICHSUBS,		K_NEXT,	S_NEXT,
	OP_ACTION+	STRINGS,
	OP_GOTO+	COM_1,

!S_NEXT
	OP_OPTION,	T_EOL,	GETSTRING,
	OP_RETURN,

!GETSTRING
	OP_ACTION+	STRINGS,
	OP_RETURN,

!COM_5
	OP_ACTION+	FILSPC,
	OP_GOTO+	SWITCH,

!HELP_COM
	OP_ACTION,	HELPSTR,
	OP_RETURN,

!CLEAR_COM
	OP_ACTION+	BUF_RAN,
	OP_ACTION+	RAN1,
	OP_RETURN,

!TAB_COM
	OP_REQUIRE,	K_ADJUST,
	OP_ACTION,	TABCOUNT,
	OP_GOTO+	COM_1,

!SET_COM
	OP_SELECT+22,SETTYPE,		K_NUMBERS,	DONE,
		K_NONUM,	DONE,
		K_CASE,	SETCASE,
		K_SEARCH,	SETSEARCH,
		K_TERM,	SETTERM,
		K_VERIFY,	DONE,
		K_NOVER,	DONE,
		K_TRUNCATE,	DONE,
		K_NOTRUNCATE,	DONE,
		K_KEY,	DONE,
		K_NOKEY,	DONE,
		K_WRAP,	NUM_SET,
		K_NOWRAP,	DONE,
		K_CURSOR,	SET_CURSOR,
		K_SCREEN,	NUM_SET,
		K_MODE,	SET_MODE,
		K_LINES,	NUM_SET,
		K_ENTITY,	SET_ENT,
		K_QUIET,	DONE,
		K_NOQUIET,	DONE,
		K_TAB,	NUM_SET,
		K_NOTAB,	DONE,

	OP_ACTION+	BAD_PARAM,
	OP_ABORT,

!SETCASE
	OP_SELECT+3,SETVAL,		K_NONE,	DONE,
		K_UPPER,	DONE,
		K_LOWER,	DONE,
!BAD_VAL
	OP_ACTION,	BAD_VALUE,
	OP_ABORT,

!SET_MODE
	OP_SELECT+2,SETVAL,		K_CHAN,	DONE,
		K_LINES,	DONE,
	OP_GOTO+	BAD_VAL,

!SETSEARCH
	OP_SELECT+6,SETVAL,		K_GEN,	DONE,
		K_EXACT,	DONE,
		K_END,	DONE,
		K_BEG,	DONE,
		K_UNBOUND,	DONE,
		K_BOUND,	DONE,
	OP_GOTO+	BAD_VAL,

!SETTERM
	OP_ACTION,	APP_NUM,
	OP_SELECT+3,SETVAL,		K_VT52,	DONE,
		K_VT100,	DONE,
		K_HCPY,	DONE,
	OP_GOTO+	BAD_VAL,

!SET_CURSOR
	OP_ACTION+	REQ_NUM,
	OP_REQUIRE+	T_NUM,
	OP_ACTION,	SET_ARG1,
	OP_ACTION,	REQ_COLON,
	OP_REQUIRE+	T_COLON,

!NUM_SET
	OP_ACTION+	REQ_NUM,
	OP_REQUIRE+	T_NUM,
	OP_ACTION,	SET_ARG,
	OP_RETURN,

!SET_ENT
	OP_SELECT+4,SETVAL,		K_WORD,	STRING_VAL,
		K_SENT,	STRING_VAL,
		K_PARA,	STRING_VAL,
		K_PAGE,	STRING_VAL,
	OP_ACTION+	ENTITY_ERR,
	OP_ABORT,

!SHOW_COM
	OP_SELECT+9,SETTYPE,		K_BUF,	DONE,
		K_CASE,	DONE,
		K_SEARCH,	DONE,
		K_TERM,	DONE,
		K_VER,	DONE,
		K_ENTITY,	GET_ENT,
		K_KEY,	GET_KEY,
		K_CURSOR,	DONE,
		K_SCREEN,	DONE,
	OP_ACTION+	BAD_PARAM,
	OP_ABORT,

!GET_KEY
	OP_SELECT+4,DEF_KEY,		T_NUM,	D_NUM,
		K_GOLD,	D_GOLD_KEY,
		K_CONTROL,	D_CONT_KEY,
		K_DELETE,	D_DELETE,

!D_KEY
	OP_ACTION,	DEF_CHAR,
	OP_RETURN,

!D_NUM
	OP_ACTION,	KEY_NUM,
	OP_RETURN,

!D_CONT_KEY
	OP_ACTION,	CONT_CHAR,
	OP_RETURN,

!D_DELETE
	OP_ACTION,	DEF_DELETE,
	OP_RETURN,

!D_GOLD_KEY
	OP_SELECT+3,DEF_GOLD_KEY,		T_NUM,	D_NUM,
		K_CONTROL,	D_GOLD_CONT,
		K_DELETE,	D_GOLD_DEL,
	OP_ACTION+	DEF_GOLD_CHAR,
	OP_RETURN,

!D_GOLD_CONT
	OP_ACTION+	DEF_GOLD_CONT,
	OP_RETURN,

!D_GOLD_DEL
	OP_ACTION+	DEF_GOLD_DEL,
	OP_RETURN,

!GET_ENT
	OP_SELECT+4,SETVAL,		K_WORD,	DONE,
		K_SENT,	DONE,
		K_PARA,	DONE,
		K_PAGE,	DONE,
	OP_ACTION+	ENTITY_ERR,
	OP_ABORT,

!DEF_COM
	OP_SELECT+2,NO_ACTION,		K_MACRO,	DEF_MAC_COM,
		K_KEY,	DEF_KEY_COM,
	OP_ACTION+	MACORKEY,
	OP_ABORT,

!DEF_KEY_COM
	OP_CALL+	GET_KEY,
	OP_ACTION,	REQ_AS,
	OP_REQUIRE,	K_AS,
!STRING_VAL
	OP_ACTION+	REQ_STRING,
	OP_REQUIRE+	T_STR,
	OP_ACTION,	AS_STRING,
	OP_RETURN,

!DEF_MAC_COM
	OP_ACTION+	BUF_RAN,
	OP_ACTION+	DEF_MAC,
	OP_RETURN,



!RANGE
	OP_ACTION+	BAD_RANGE,
	OP_OPTION,	T_EQL,	TRY_BUF,
	OP_GOTO,	GET_BUF,
!TRY_BUF
	OP_OPTION+	K_BUF,	NOBUF,

!GET_BUF
	OP_ACTION+	BUF_RAN,
	OP_CALL+	NOBUF,
	OP_ACTION,	BUF_RAN2,
	OP_RETURN,

!NOBUF
	OP_SELECT+5,START_RANGE,		K_LAS,	DONE,
		K_BEF,	GET_ALL,
		K_REST,	GET_ALL,
		K_WHOL,	GET_ALL,
		K_SEL,	DONE,
	OP_CALL+	SLR,

!COMPOUND
	OP_SELECT+6,NO_ACTION,		T_COLON,	THRURAN,
		K_THRU,	THRURAN,
		T_POUND,	FOR_RAN,
		K_FOR,	FOR_RAN,
		T_COMMA,	ANDRAN,
		K_AND,	ANDRAN,

!GET_ALL
	OP_OPTION,	K_ALL,	DONE,
	OP_ACTION,	ALLRAN,
	OP_RETURN,

!SLR
	OP_SELECT+6,INIRAN,		T_NUM,	NUMRAN,
		T_DOT,	OFFSET,
		T_STR,	STRRAN,
		K_BEG,	OFFSET,
		K_END,	OFFSET,
		K_ORIG,	OPT_NUM,

!OFFSET
	OP_SELECT+2,NO_ACTION,		T_PLUS,	PLUS_RAN,
		T_MINUS,	MINUS_RAN,
	OP_RETURN,

!NUMRAN
	OP_ACTION+	LINE_NUM,
	OP_ACTION,	LINE_NUM_RANGE,
	OP_GOTO+	OFFSET,

!FOR_RAN
	OP_ACTION,	FORRAN,
	OP_ACTION+	REQ_NUM,
	OP_REQUIRE+	T_NUM,
	OP_ACTION+	RANNUM,
	OP_GOTO+	GET_ALL,

!PLUS_RAN
	OP_ACTION,	PLUSRAN,
!OPT_NUM
	OP_OPTION+	T_NUM,	OFFSET,
	OP_ACTION+	RANNUM,
	OP_GOTO+	OFFSET,

!MINUS_RAN
	OP_ACTION,	MINUSRAN,
	OP_OPTION+	T_STR,	OPT_NUM,

!STRRAN
	OP_ACTION+	GETSTR,
	OP_GOTO+	OFFSET,

!THRURAN
	OP_ACTION+	BIN_RANGE,
	OP_CALL+	SLR,
	OP_ACTION+	THRU_RAN,
	OP_GOTO+	GET_ALL,

!ANDRAN
	OP_ACTION+	AND_HEAD,
!ANDNEXT
	OP_CALL+	SLR,
	OP_ACTION+	AND_NEXT,
	OP_OPTION+	K_AND,	TRY_COMMA,
	OP_GOTO+	ANDRAN,
!TRY_COMMA
	OP_OPTION+	T_COMMA,	GET_ALL,
	OP_GOTO,	ANDNEXT,





!SWITCH
	OP_OPTION,	T_SLASH,	DONE,
	OP_ACTION,	BAD_OPTION,
	OP_SELECT+7,A_SWITCH,		K_QUERY,	SWITCH,
		K_BRIEF,	ONE_VAL,
		K_NOTYP,	NO_VAL,
		K_SEQ,	TWO_VAL,
		K_DUPL,	ONE_VAL,
		K_SAVE,	SWITCH,
		K_STAY,	SWITCH,
	OP_ACTION+	UNREC_OPTION,
	OP_ABORT,

!TWO_VAL
	OP_ACTION+	REQ_NUM,
	OP_ACTION+	INIT_SEQ,
	OP_OPTION+	T_COLON,	SWITCH,
	OP_REQUIRE+	T_NUM,
	OP_ACTION+	LINE_NUM,
	OP_ACTION+	SWITCH_1,
	OP_OPTION+	T_COLON,	SWITCH,
	OP_REQUIRE+	T_NUM,
	OP_ACTION+	LINE_NUM,
	OP_ACTION,	SWITCH_2,
	OP_GOTO+	SWITCH,

!ONE_VAL
	OP_OPTION+	T_COLON,	SWITCH,
	OP_ACTION+	REQ_NUM,
	OP_REQUIRE+	T_NUM,
	OP_ACTION+	SWITCH_1,
	OP_GOTO+	SWITCH,

!DONE
	OP_RETURN,


















































































	0)) : VECTOR[437,BYTE];

BIND LAB_TAB = UPLIT(WORD(
	436,49,393,350,330,182,282,139,336,383,56,234,361,
	64,379,303,290,430,52,221,369,255,287,243,237,253,
	240,277,70,83,269,68,58,72,199,75,142,175,187,257,
	149,131,164,78,298,377,367,296,373,384,357,389,416,
	231,0,578,316)) : VECTOR[57,WORD];

BIND TOK_INDX = UPLIT(WORD(
	225,205,200,60,381,393,446,306,339,295,458,168,163,
	161,185,189,178,0,494,489,482,549,503,571,465,151,
	154,159,136,131,149,142,120,542,176,534,528,553,559,
	174,172,195,40,36,45,53,19,12,31,26,7,92,87,111,100,
	115,67,564,81,76,451,413,329,348,354,422,300,321,313,
	433,388,476,471,401,365,360,376,370,404,441,219,226,
	227,513,201,212,207,519,267,260,277,272,285,235,229,
	250,241)) : VECTOR[97,WORD];
