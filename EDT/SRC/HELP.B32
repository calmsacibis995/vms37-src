MODULE HELP(IDENT='V03-000') =
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: EDT version 2
!
! FUNCTIONAL DESCRIPTION:
!
!	This module contains the help processor.  Help entries are read
!	
!	
!	The format is as follows:
!	
!	A header line is included for each topic in the following format:
!	
!	level topic
!	
!	Where level is an integer digit telling what level of topic follows
!	and topic is the name of the topic.  The information for each topic
!	is terminated by the next '*' in column 1 of a record.  All subtopics
!	must immediately follow a topic and have a level number of 1 higher
!	than the topic.
!
! ENVIRONMENT: User mode, sharable.
!
! AUTHOR: Bob Kushlis, CREATION DATE: 13-OCT-1979
!
! MODIFIED BY:
!
!--

BEGIN

LIBRARY 'EDT';
LIBRARY 'SYS$LIBRARY:STARLET';

PSECTS


LITERAL
    TAB	= 9;

EXTERNAL ROUTINE
    U_CVTCASE,
    F_CHAR,
    F_PUT,
    F_STRING,
    F_LITERAL,
    F_CRLF,
    F_PUT_MESS,
    IO_OI,
    IO_GET,
    IO_CLO,
    IO_WTU,
    LBR$INI_CONTROL : ADDRESSING_MODE(GENERAL),
    LBR$OPEN : ADDRESSING_MODE(GENERAL),
    LBR$GET_HELP : ADDRESSING_MODE(GENERAL),
    LBR$CLOSE : ADDRESSING_MODE(GENERAL);

EXTERNAL
    E_T_TYPE,
    F_CUR,
    F_BUF,
    SY_H_NAME,
    SY_ALT_RAB;

MACRO
    TOP_LEN 	= 0,0,32,0 %,
    TOP_ADDR 	= 1,0,32,0 %;

FORWARD ROUTINE
    OUTPUT_HELP;

OWN
    LBR_INDEX,				! LBR control table index.
    TOPICS : BLOCKVECTOR[5,2],		! Topic descriptors.
    NUMARGS,				! Number of args for call to GET_HELP.
    INDEX : INITIAL(LBR_INDEX), 	! Control table index.
    WIDTH : INITIAL(0),			! Terminal width.
    ROUT : INITIAL(OUTPUT_HELP),	! Routine to put out line.
    DATA,				! Data word to be passed back.
    D1 : INITIAL(TOPICS[0,TOP_LEN]),	! Pointers to topic descriptors.
    D2 : INITIAL(TOPICS[1,TOP_LEN]),
    D3 : INITIAL(TOPICS[2,TOP_LEN]),
    D4 : INITIAL(TOPICS[3,TOP_LEN]),
    D5 : INITIAL(TOPICS[4,TOP_LEN]),

    HELP_NAME : BLOCK[CH$ALLOCATION(64)]! Name of help library.
	INITIAL('EDTHELP'),
    HELP_DESC : VECTOR[2] 		! Descriptor for help name.
	INITIAL(7,HELP_NAME);

BIND
    HELP_DEF = UPLIT('SYS$HELP:.HLB'),
    HELP_DEF_DESC = UPLIT(13,HELP_DEF);
BUILTIN
    CALLG;


GLOBAL ROUTINE H_LINE(STRING,LENG,ADDITIONAL) : NOVALUE =
BEGIN
LOCAL
    POINTER,
    E_POINT,
    NUM_TOPICS;
!
! Attempt to open the help library.
!
IF NOT LBR$INI_CONTROL(LBR_INDEX,%REF(1)) OR
   NOT LBR$OPEN(LBR_INDEX,HELP_DESC,0,HELP_DEF_DESC) THEN
    BEGIN
    F_PUT_MESS(ERR_NOHLPAVL);
    RETURN
    END;
!
! Isolate all the topic strings in the command.
!
POINTER = .STRING;
E_POINT = CH$PTR(.POINTER,.LENG);
U_CVTCASE(.POINTER,.LENG);
INCR I FROM 0 TO 4 DO
    BEGIN
    WHILE CH$DIFF(.POINTER,.E_POINT) LSS 0 AND
          CH$RCHAR(.POINTER) EQL ' ' OR
          CH$RCHAR(.POINTER) EQL TAB DO
        POINTER = CH$PLUS(.POINTER,1);
    IF CH$DIFF(.POINTER,.E_POINT) EQL 0 THEN
        BEGIN
        NUM_TOPICS = .I;
        EXITLOOP;
        END;
    TOPICS[.I,TOP_ADDR] = .POINTER;
    IF CH$RCHAR(.POINTER) EQL '/' THEN
        POINTER = CH$PLUS(.POINTER,1);
    WHILE CH$DIFF(.POINTER,.E_POINT) LSS 0 AND
          CH$RCHAR(.POINTER) NEQ ' ' AND
          CH$RCHAR(.POINTER) NEQ TAB AND
          CH$RCHAR(.POINTER) NEQ '/' DO
        POINTER = CH$PLUS(.POINTER,1);
    TOPICS[.I,TOP_LEN] = CH$DIFF(.POINTER,.TOPICS[.I,TOP_ADDR]);
    END;
!
! If no topics found, then default to help.
!
IF .NUM_TOPICS EQL 0 THEN
    BEGIN
    NUM_TOPICS = 1;
    TOPICS[0,TOP_LEN] = 4;
    TOPICS[0,TOP_ADDR] = UPLIT BYTE('HELP');
    END;
!
! Now, ask for help!
!
NUMARGS = .NUM_TOPICS + 4;
DATA = ADDITIONAL;
CALLG(NUMARGS,LBR$GET_HELP);
!
! And output any remaining characters.
!
IF .F_CUR NEQ F_BUF THEN F_PUT();
LBR$CLOSE(LBR_INDEX);
END;

ROUTINE OUTPUT_HELP(DESC,FLAGS,ADDITIONAL) =
BEGIN
MAP DESC : REF VECTOR[2];
IF ..ADDITIONAL NEQ 0 OR
   ..FLAGS EQL 0 THEN
    BEGIN
    F_LITERAL(.DESC[1],.DESC[0]);
    F_CRLF();
    END;
RETURN 1;
END;

!+
! This routine sets the help library name to the string passed.
!-

GLOBAL ROUTINE H_SET_NAME(ADDR,LEN) : NOVALUE =
BEGIN
HELP_DESC[0] = MIN(.LEN,64);
CH$MOVE(.HELP_DESC[0],.ADDR,HELP_NAME);
END;

END
ELUDOM
