MODULE INPUT(IDENT='V03-000') =
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: EDT Version 2
!
! FUNCTIONAL DESCRIPTION:
!
!	This module is called whenever an input line is required for a
!	command or an insert.  This module handles fetching of lines
!	from macros, and expanding their parameters so it is tranparent
!	to the rest of the editor.
!
! ENVIRONMENT: User mode, sharable
!
! AUTHOR: Bob Kushlis, CREATION DATE: 4-Feb-1979
!
! MODIFIED BY:
!
! Dan Szymanski, 17-NOV-80, 02
!	Change to INP_GET_LINE so that a line of input from the terminal
!	which consists of only the two characters ^z or ^Z are not
!	considered to be an end-of-file.
!--
BEGIN

LIBRARY	'EDT';

PSECTS


EXTERNAL
    C_BUF,
    C_LEN,
    C_END,
    C_POINT,
    E_SAVE_COUNT,
    E_RECOVER,
    E_I_SOURCE,
    E_MACRO,
    E_TBCB,
    E_VERIFY,
    SY_COM_RAB,
    SY_AUDIT_RAB,
    W_LINE : REF LIN_BLOCK;

EXTERNAL ROUTINE
    IO_FLU,
    IO_PUT,
    IO_GET,
    IO_WT,
    IO_COM,
    WF_EOB,
    WF_R_CURRENT,
    WF_R_FORWARD,
    E_PUT_AUDIT;

GLOBAL ROUTINE INP_GET_LINE(PROMPT,PR_LEN) =
!++
! FUNCTIONAL DESCRIPTION:
!
!	This routine returns a line from the current macro or from the
!	terminal.
!	
!
! FORMAL PARAMETERS:
!
!	PROMPT		- The address of a promt string for terminal input
!	
!	PR_LEN		- The len of the prompt
!
!
! IMPLICIT INPUTS:
!
!	E_I_SOURCE   - 	tells where the input line will come from.
!			0 - terminal
!			1 - a macro
!			2 - a command file.
!	
! IMPLICIT OUTPUTS:
!
!	none
!
! COMPLETION CODES:
!
!	0	-	No eof occured on this line
!	1	-	An eof did occur
!	
! SIDE EFFECTS:
!
!	none
!
!--

BEGIN
LOCAL
    EOF;
EOF = 0;
CASE .E_I_SOURCE FROM INP_TERM TO INP_FILE OF
SET
[INP_TERM]:
    !
    ! Input is coming from the terminal (or command procedure)
    !
    BEGIN
    EOF = IO_COM(.PROMPT,.PR_LEN,C_BUF,C_LEN,255);
    IF .EOF THEN
        E_PUT_AUDIT(UPLIT('^Z'),2)
    ELSE
        E_PUT_AUDIT(C_BUF,.C_LEN);
    END;

[INP_FILE]:
    !
    ! Input is coming from a file.  Read a line from 
    ! the file.
    !
    BEGIN
    LOCAL
	INP_LINE;
    IF IO_GET(SY_COM_RAB,INP_LINE,C_LEN) THEN
	BEGIN
        CH$MOVE(.C_LEN,.INP_LINE,C_BUF);
	IF .E_RECOVER THEN
	    IO_WT(C_BUF,.C_LEN);
	END
    ELSE
	BEGIN
        EOF = 1;
	C_LEN = 0;
	END
    END;

[INP_MACRO]:
    BEGIN
    LOCAL
	SAVE_TBCB;
    SAVE_TBCB = .E_TBCB;
    E_TBCB = .E_MACRO;
    WF_R_CURRENT();
    IF NOT WF_EOB() THEN
        BEGIN
        CH$MOVE(.W_LINE[LIN_LENGTH],W_LINE[LIN_TEXT],C_BUF);
        C_LEN = .W_LINE[LIN_LENGTH];
        WF_R_FORWARD()
        END
    ELSE
        BEGIN
        EOF = 1;
        C_LEN = 0;
        END;
    E_TBCB = .SAVE_TBCB;
    WF_R_CURRENT();
    END;
TES;

IF .E_I_SOURCE NEQ INP_TERM THEN
    IF CH$EQL(.C_LEN,C_BUF,2,UPLIT BYTE('^Z')) THEN
	BEGIN
	C_LEN = 0;
	EOF = 1;
	END;

IF .E_I_SOURCE NEQ INP_TERM AND
   .E_VERIFY THEN
    IO_WT(C_BUF,.C_LEN);
C_END = CH$PTR(C_BUF,.C_LEN);
C_POINT = C_BUF;
CH$WCHAR('!',.C_END);
.EOF
END;

END
ELUDOM
