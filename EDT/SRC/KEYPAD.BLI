MODULE KEYPAD (IDENT='V03-000') =
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: EDT version 2
!
! FUNCTIONAL DESCRIPTION:
!
!	This routine will contain the routines to initialize the keypad
!	translation table.  It also contains the default definitions for
!	for the keys.
!
! ENVIRONMENT: user mode, sharable
!
! AUTHOR: T. Mitchell
!
!
! MODIFIED BY:
!
! Dan Szymanski, 30-JUL-80, 01
!
!	VT52_TAB and VT100_TAB modified so that the default definitions
!	for GOLD A, D, E, T, U, W, and Z are the same as corresponding
!	CONTROL char.  Definitions for accent and grave removed.
!--

BEGIN

LIBRARY 'EDT' ;
PSECTS


FORWARD ROUTINE
    C_DEFKEYS:		NOVALUE;

EXTERNAL ROUTINE
    C_MESSAGE,
    E_K_CLR,
    E_K_DEF;

EXTERNAL
    C_TRAN,
    MAX_KEY_DEF,
    MAX_DEF_KEYS,
    TRAN_TAB:		VECTOR;

!
! Define the default translations for the editing keys.
!
GLOBAL BIND
    T_WORD 	= UPLIT BYTE(2,'W.'),
    T_BL 	= UPLIT BYTE(3,'BL.'),
    T_EOL 	= UPLIT BYTE(3,'EL.'),
    T_LINE 	= UPLIT BYTE(2,'L.'),
    T_CHAR 	= UPLIT BYTE(2,'C.'),
    T_UNDC	= UPLIT BYTE(5,'UNDC.'),
    T_UNDW	= UPLIT BYTE(5,'UNDW.'),
    T_UNDL	= UPLIT BYTE(5,'UNDL.'),
    T_EXIT	= UPLIT BYTE(3,'EX.'),
    T_BR	= UPLIT BYTE(3,'BR.'),
    T_ER	= UPLIT BYTE(3,'ER.'),
    T_CUT	= UPLIT BYTE(6,'CUTSR.'),
    T_PASTE	= UPLIT BYTE(6,'PASTE.'),
    T_REPLACE	= UPLIT BYTE(19,'CUTSR=DELETE PASTE.'),
    T_APPEND	= UPLIT BYTE(9,'APPENDSR.'),
    T_FIND	= UPLIT BYTE(18,0,'?''Search for: ''',0,'.'),
    T_NEXT	= UPLIT BYTE(3,'"".'),
    T_ADV	= UPLIT BYTE(4,'ADV.'),
    T_BACK	= UPLIT BYTE(5,'BACK.'),
    T_UP	= UPLIT BYTE(3,'-V.'),
    T_DOWN	= UPLIT BYTE(3,'+V.'),
    T_RIGHT	= UPLIT BYTE(3,'+C.'),
    T_LEFT	= UPLIT BYTE(3,'-C.'),
    T_SEL	= UPLIT BYTE(4,'SEL.'),
    T_DEL	= UPLIT BYTE(5,'D+NL.'),
    T_DELW	= UPLIT BYTE(4,'DEW.'),
    T_DELC	= UPLIT BYTE(4,'D+C.'),
    T_OPEN	= UPLIT BYTE(7,'(^M-C).'),
    T_DEOL	= UPLIT BYTE(5,'D+EL.'),
    T_DBL	= UPLIT BYTE(4,'DBL.'),
    T_DBW	= UPLIT BYTE(4,'DBW.'),
    T_PAGE	= UPLIT BYTE(8,'PAGETOP.'),
    T_SECT	= UPLIT BYTE(6,'(16L).'),
    T_RUBC	= UPLIT BYTE(4,'D-C.'),
    T_ITAB	= UPLIT BYTE(4,'TAB.'),
    T_TD	= UPLIT BYTE(3,'TD.'),
    T_TI	= UPLIT BYTE(3,'TI.'),
    T_TC	= UPLIT BYTE(3,'TC.'),
    T_ICR	= UPLIT BYTE(3,'^M.'),
    T_IFF	= UPLIT BYTE(3,'^L.'),
    T_IACNT	= UPLIT BYTE(5,'I`^Z.'),
    T_IGRAV	= UPLIT BYTE(5,'I~^Z.'),
    T_COM       = UPLIT BYTE(21,'EXT     ?''Command: ''.'),
    T_REF       = UPLIT BYTE(4,'REF.'),
    T_SUBS	= UPLIT BYTE(25,'(CUTSR=DELETE PASTEKS"").'),
    T_RESET     = UPLIT BYTE(5,'RESET'),
    T_ENTER     = UPLIT BYTE(1,'.'),
    T_ASC	= UPLIT BYTE(4,'ASC.'),
    T_CHGC	= UPLIT BYTE(7,'CHGCSR.'),
    T_HELP	= UPLIT BYTE(5,'HELP.'),
    T_SHR	= UPLIT BYTE(4,'SHR.'),
    T_SHL	= UPLIT BYTE(4,'SHL.'),
    T_FILL	= UPLIT BYTE(7,'FILLSR.'),
    T_DEF	= UPLIT BYTE(5,'DEFK.'),
    T_TADJ	= UPLIT BYTE(7,'TADJSR.');

!
! These are the default keypad definitions for the vt100.
!
GLOBAL
    VT100_TAB : VECTOR[202]
        INITIAL(
        T_RUBC - VT100_TAB,		! DEL key
	T_LINE - VT100_TAB,		! 0
	T_WORD - VT100_TAB,		! 1
	T_EOL - VT100_TAB,		! 2
	T_CHAR - VT100_TAB,		! 3
	T_ADV - VT100_TAB,		! 4
	T_BACK - VT100_TAB,		! 5
	T_CUT - VT100_TAB,		! 6
	T_PAGE - VT100_TAB,		! 7
	T_SECT - VT100_TAB,		! 8
	T_APPEND - VT100_TAB,		! 9
	T_HELP - VT100_TAB,		! PF2 (RED)
	T_NEXT - VT100_TAB,		! PF3 (GREY)
	T_UP - VT100_TAB,		! UP ARROW
	T_DOWN - VT100_TAB,		! DOWN ARROW
	T_RIGHT - VT100_TAB,		! RIGHT ARROW
	T_LEFT - VT100_TAB,		! LEFT ARROW
	T_SEL - VT100_TAB,		! .
	T_DEL - VT100_TAB,		! PF4
	T_DELW - VT100_TAB,		! -
	T_DELC - VT100_TAB,		! ,
    	0,				! PF1 (BLUE)
	T_ENTER - VT100_TAB,		! ENTER
	T_OPEN - VT100_TAB,		! SHFT 0 
	T_CHGC - VT100_TAB,		! SHFT 1
	T_DEOL - VT100_TAB,		! SHFT 2
	T_ASC - VT100_TAB,		! SHFT 3
	T_ER - VT100_TAB,		! SHFT 4
	T_BR - VT100_TAB,		! SHFT 5
	T_PASTE - VT100_TAB,		! SHFT 6
	T_COM - VT100_TAB,		! SHFT 7
	T_FILL - VT100_TAB,		! SHFT 8
	T_REPLACE - VT100_TAB,		! SHFT 9
	T_HELP - VT100_TAB,		! SHFT PF2 (RED)
	T_FIND - VT100_TAB,		! SHFT PF3 (GREY)
	0,				! SHFT UP
	0,				! SHFT DOWN
	T_SHR - VT100_TAB,		! SHFT RIGHT
	T_SHL - VT100_TAB,		! SHFT LEFT
	T_RESET - VT100_TAB,		! SHFT .
	T_UNDL - VT100_TAB,		! SHFT PF4
	T_UNDW - VT100_TAB,		! SHFT -
	T_UNDC - VT100_TAB,		! SHFT ,
	0,				! SHFT PF1 (BLUE)
	T_SUBS - VT100_TAB,		! SHFT ENTER
	0,				! CNTRL AT
	T_TC - VT100_TAB,		! CNTRL A
	0,				! CNTRL B
	0,				! CNTRL	C
	T_TD - VT100_TAB,		! CNTRL	D
	T_TI - VT100_TAB,		! CNTRL E
	0,				! CNTRL	F
	0,				! CNTRL	G
	T_BL - VT100_TAB,		! CNTRL H
	T_ITAB - VT100_TAB,		! CNTRL	I
	T_DBW - VT100_TAB,		! CNTRL J
	T_DEF - VT100_TAB,		! CNTRL K
	T_IFF - VT100_TAB,		! CNTRL L
	T_ICR - VT100_TAB,		! CNTRL M
	0,				! CNTRL N
	0,				! CNTRL O
	0,				! CNTRL P
	0,				! CNTRL Q
	T_REF - VT100_TAB, 		! CNTRL R
	0,				! CNTRL S
	T_TADJ - VT100_TAB,		! CNTRL T
	T_DBL - VT100_TAB,		! CNTRL U
	0,				! CNTRL V
	T_REF - VT100_TAB,		! CNTRL W
	0,				! CNTRL X
	0,				! CNTRL Y
	T_EXIT - VT100_TAB,   		! CNTRL Z
	REP 64 OF (0),			! GOLD NUL thru GOLD ?
	0,				! GOLD @
	T_TC - VT100_TAB,		! GOLD A
	0,				! GOLD B
	0,				! GOLD C
	T_TD - VT100_TAB,		! GOLD D
	T_TI - VT100_TAB,		! GOLD E
	0,				! GOLD F
	0,				! GOLD G
	0,				! GOLD H
	0,				! GOLD I
	0,				! GOLD J
	0,				! GOLD K
	0,				! GOLD L
	0,				! GOLD M
	0,				! GOLD N
	0,				! GOLD O
	0,				! GOLD P
	0,				! GOLD Q
	0,				! GOLD R
	0,				! GOLD S
	T_TADJ - VT100_TAB,		! GOLD T
	T_DBL - VT100_TAB,		! GOLD U
	0,				! GOLD V
	T_REF - VT100_TAB,		! GOLD W
	0,				! GOLD X
	0,				! GOLD Y
	T_EXIT - VT100_TAB,		! GOLD Z
	REP 5 OF (0),			! GOLD [ thru GOLD _
	REP 32 OF (0),			! GOLD ` thru GOLD DEL
    	0,				! ` was T_IACNT - VT100_TAB
    	0);				! ~ was T_IGRAV - VT100_TAB

!
! Default key definitions for vt52.
!
GLOBAL
    VT52_TAB : VECTOR[202]
        INITIAL(
        T_RUBC - VT52_TAB,		! DEL key
	T_LINE - VT52_TAB,		! 0
	T_WORD - VT52_TAB,		! 1
	T_EOL - VT52_TAB,		! 2
	T_CUT - VT52_TAB,		! 3
	T_ADV - VT52_TAB,		! 4
	T_BACK - VT52_TAB,		! 5
	T_DELC - VT52_TAB,		! 6
	T_PAGE - VT52_TAB,		! 7
	T_NEXT - VT52_TAB,		! 8
	T_DELW - VT52_TAB,		! 9
	T_HELP - VT52_TAB,		! PF2 (RED)
	T_DEL - VT52_TAB,		! PF3 (GREY)
	T_UP - VT52_TAB,		! UP ARROW
	T_DOWN - VT52_TAB,		! DOWN ARROW
	T_RIGHT - VT52_TAB,		! RIGHT ARROW
	T_LEFT - VT52_TAB,		! LEFT ARROW
	T_SEL - VT52_TAB,		! .
	0,				! PF4
	0,				! -
	0,				! ,
	0,				! PF1 (BLUE)
	T_ENTER - VT52_TAB,		! ENTER
	T_OPEN - VT52_TAB,		! SHFT 0 
	T_CHGC - VT52_TAB,		! SHFT 1
	T_DEOL - VT52_TAB,		! SHFT 2
	T_PASTE - VT52_TAB,		! SHFT 3
	T_ER - VT52_TAB,		! SHFT 4
	T_BR - VT52_TAB,		! SHFT 5
	T_UNDC - VT52_TAB,		! SHFT 6
	T_COM - VT52_TAB,		! SHFT 7
	T_FIND - VT52_TAB,		! SHFT 8
	T_UNDW - VT52_TAB,		! SHFT 9
	T_HELP - VT52_TAB,		! SHFT PF2 (RED)
	T_UNDL - VT52_TAB,		! SHFT PF3 (GREY)
	T_REPLACE - VT52_TAB,		! SHFT UP
	T_SECT - VT52_TAB,		! SHFT DOWN
	T_ASC - VT52_TAB,		! SHFT RIGHT
	T_APPEND - VT52_TAB,		! SHFT LEFT
	T_RESET - VT52_TAB,		! SHFT .
	0,				! SHFT PF4
	0,				! SHFT -
	0,				! SHFT ,
	0,				! SHFT PF1 (BLUE)
	T_SUBS - VT52_TAB,		! SHFT ENTER
	0,				! CNTRL AT
	T_TC - VT52_TAB,		! CNTRL A
	0,				! CNTRL B
	0,				! CNTRL	C
	T_TD - VT52_TAB,		! CNTRL	D
	T_TI - VT52_TAB,		! CNTRL E
	T_FILL - VT52_TAB,		! CNTRL	F
	0,				! CNTRL	G
	T_BL - VT52_TAB,		! CNTRL H
	T_ITAB - VT52_TAB,		! CNTRL	I
	T_DBW - VT52_TAB,		! CNTRL J
	T_DEF - VT52_TAB,		! CNTRL K
	T_IFF - VT52_TAB,		! CNTRL L
	T_ICR - VT52_TAB,		! CNTRL M
	0,				! CNTRL N
	0,				! CNTRL O
	0,				! CNTRL P
	0,				! CNTRL Q
	T_REF - VT52_TAB, 		! CNTRL R
	0,				! CNTRL S
	T_TADJ - VT52_TAB,		! CNTRL T
	T_DBL - VT52_TAB,		! CNTRL U
	0,				! CNTRL V
	T_REF - VT52_TAB,		! CNTRL W
	0,				! CNTRL X
	0,				! CNTRL Y
	T_EXIT - VT52_TAB,		! CNTRL Z
	REP 64 OF (0),			! GOLD NUL thru GOLD ?
	0,				! GOLD @
	T_TC - VT52_TAB,		! GOLD A
	0,				! GOLD B
	0,				! GOLD C
	T_TD - VT52_TAB,		! GOLD D
	T_TI - VT52_TAB,		! GOLD E
	0,				! GOLD F
	0,				! GOLD G
	0,				! GOLD H
	0,				! GOLD I
	0,				! GOLD J
	0,				! GOLD K
	0,				! GOLD L
	0,				! GOLD M
	0,				! GOLD N
	0,				! GOLD O
	0,				! GOLD P
	0,				! GOLD Q
	0,				! GOLD R
	0,				! GOLD S
	T_TADJ - VT52_TAB,		! GOLD T
	T_DBL - VT52_TAB,		! GOLD U
	0,				! GOLD V
	T_REF - VT52_TAB,		! GOLD W
	0,				! GOLD X
	0,				! GOLD Y
	T_EXIT - VT52_TAB,		! GOLD Z
	REP 5 OF (0),			! GOLD [ thru GOLD _
	REP 32 OF (0),			! GOLD ` thru GOLD DEL
    	0,				! ` was T_IACNT - VT52_TAB
    	0);				! ~ was T_IGRAV - VT52_TAB

GLOBAL ROUTINE C_DEFKEYS(TBL,LEN,FLAG): NOVALUE =
!
! TAB - address of table of key definitions. The table contains an entry
!	for each key to be defined.  This entry is the relative address of the
!	 character string of change mode commands. Look in this module at the 
!	vt100 and vt52 table for example.
! LEN - address of (long)word with number of items in the table 
!	to be used for definitions.  Define the first LEN keys.
! FLAG- if TRUE the zero out the remainder of the table following the keys that
!	you defined.  If FALSE leave them as they are.
!
!  If the number of keys to be defined is greater than the number that can be
!  defined, only the max number is defined and the item with the number of 
!  definitions is set to that number.
!
    BEGIN
    MAP
    	TBL : REF VECTOR;
    C_TRAN = 1;
    IF ..LEN GTRU .MAX_DEF_KEYS THEN .LEN = .MAX_DEF_KEYS ;
    INCR I FROM 0 TO ..LEN -1 DO
	BEGIN
	IF .TBL[.I] NEQ 0 AND .TRAN_TAB[.I] EQL 0
	THEN
	    BEGIN
	    LOCAL A;
	    A = CH$PTR(.TBL[.I]+.TBL);
	    IF NOT E_K_DEF((.I+256),CH$PLUS(.A,1),CH$RCHAR(.A))
	    THEN
		C_MESSAGE(ERR_INSMEM);
	    END;
	END;
    IF .FLAG
    THEN
    	INCR I FROM ..LEN TO .MAX_KEY_DEF DO
	    E_K_CLR(.I+256);
    END;

END 
ELUDOM
