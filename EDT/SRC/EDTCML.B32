MODULE EDTCML(IDENT='V03-000') =
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: EDT Version 2.
!
! FUNCTIONAL DESCRIPTION:
!
!	This module does the result parsing of the EDIT/EDT DCL command.
!
! ENVIRONMENT: User mode.
!
! AUTHOR: Bob Kushlis, CREATION DATE: 12-OCT-1979
!
! MODIFIED BY:
!
!
!--

BEGIN

LIBRARY	'SYS$LIBRARY:STARLET';
LIBRARY 'SYS$LIBRARY:CLIMAC';
LIBRARY 'EDT';

EXTERNAL
    E_I_NAME,	! Input file name
    E_I_LEN,	! lenght of input file name
    E_O_NAME,	! Output file name
    E_O_LEN,	! Output file name length
    E_C_NAME,	! Command file name
    E_C_LEN,	! Command file name length
    E_J_NAME,	! Journal file name
    E_J_LEN,    ! Journal file name length
    E_JOURNAL,	! Journal indicator.
    E_COMMAND,	! Explicit command qualifier.
    E_RECOVER;  ! Recover switch.

FORWARD ROUTINE
    RECOVER	: NOVALUE,	! Action routine for /RECOVER 
    COMMAND	: NOVALUE,	! Action routine for /COMMAND 
    NOCOMMAND	: NOVALUE,	! Action routine for /NOCOMMAND
    JOURNAL	: NOVALUE,	! Action routine for /JOURNAL
    NOJOURNAL	: NOVALUE,	! Action routine for /NOJOURNAL
    READ	: NOVALUE;	! Action routine for /READ
!
! Define qualifier names.
!
$CLIQUALCODES(EDIT,COMM,RECO,JOUR,READ);
!
! Define CLI data structures.
!
OWN
    BITVEC,
    CLIWRK 	: BLOCK[CLI$K_WORKAREA,BYTE],
    CLIREQ	: $CLIREQDESC(RQTYPE=INITPRS,RQFLGS=ABSADR),
    COMAQUAL	: $CLIQUALDESC(QDCODE=COMM,TRUACT=COMMAND,FLSACT=NOCOMMAND),
    JOURQUAL	: $CLIQUALDESC(QDCODE=JOUR,TRUACT=JOURNAL,FLSACT=NOJOURNAL),
    RECOQUAL	: $CLIQUALDESC(QDCODE=RECO,TRUACT=RECOVER),
    READQUAL	: $CLIQUALDESC(QDCODE=READ,TRUACT=READ),
    QUALEND	: $CLIQUALEND;
        
EXTERNAL ROUTINE
    SYS$CLI : ADDRESSING_MODE(GENERAL);

!+
! This routine parses the EDT command line returning the following information:
!
!	The input file name.
!
!	The output file name.
!
!	Whether or not journalling is specified and the explicit name if given.
!
!	Whether or not a command file was specified and the explicit name if giben.
!-

GLOBAL ROUTINE SY_GCOM : NOVALUE =
BEGIN
!
! Initialize result parsing.
!
CLIREQ[CLI$B_RQTYPE] = CLI$K_INITPRS;
SYS$CLI(CLIREQ,CLIWRK,BITVEC);
!
! Get the input file spec.
!
CLIREQ[CLI$B_RQTYPE] = CLI$K_INPUT1;
SYS$CLI(CLIREQ,CLIWRK,BITVEC);
E_I_NAME = .CLIREQ[CLI$L_RQVALU];
E_I_LEN = .CLIREQ[CLI$W_RQSIZE];
!
! Default the output file spec.
!
E_O_NAME = .E_I_NAME;
E_O_LEN = .E_I_LEN;
!
! Check for output file.
!
CLIREQ[CLI$B_RQTYPE] = CLI$K_OUTPUT1;
BITVEC = 0;
SYS$CLI(CLIREQ,CLIWRK,BITVEC);
IF .BITVEC NEQ 0 THEN
    BEGIN
    E_O_NAME = .CLIREQ[CLI$L_RQVALU];
    E_O_LEN = .CLIREQ[CLI$W_RQSIZE];
    END;
!
! Get the other qualifiers.
!
CLIREQ[CLI$B_RQTYPE] = CLI$K_GETQUAL;
CLIREQ[CLI$A_QUALST] = COMAQUAL;
SYS$CLI(CLIREQ,CLIWRK,BITVEC);
END;

!+
! Routine to process the command qualifier.
!-

ROUTINE COMMAND : NOVALUE =
!
! Determine if qualifier was explicit.
!
IF .COMAQUAL[CLI$V_QUALEXP] THEN
    BEGIN
    E_C_NAME = .COMAQUAL[CLI$A_QDVALADR];
    E_C_LEN = .COMAQUAL[CLI$W_QDVALSIZ];
    E_COMMAND = 2;
    END
ELSE
    E_COMMAND = 1;

ROUTINE NOCOMMAND : NOVALUE =
E_COMMAND = 0;

!+
! Action routines for /JOURNAL qualifier.
!-

ROUTINE JOURNAL : NOVALUE =
!
! Determine if qualifier was explicit.
!
IF .JOURQUAL[CLI$V_QUALEXP] THEN
    BEGIN
    E_J_NAME = .JOURQUAL[CLI$A_QDVALADR];
    E_J_LEN = .JOURQUAL[CLI$W_QDVALSIZ];
    E_JOURNAL = 2;
    END
ELSE
    E_JOURNAL = 1;

ROUTINE NOJOURNAL : NOVALUE =
E_JOURNAL = 0;

ROUTINE RECOVER : NOVALUE =
E_RECOVER = 1;

ROUTINE READ : NOVALUE =
BEGIN
E_JOURNAL = 0;
E_O_LEN = 0;
END;

END
ELUDOM
