MODULE EDTINIT(IDENT='V03-000') =
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!++
! FACILITY: EDT Version 2
!
! FUNCTIONAL DESCRIPTION:
!
!	This module contains the initialization and termination processing
!	for EDT.
!
! ENVIRONMENT: 
!
! AUTHOR: Bob Kushlis, CREATION DATE:  6-AUG-1979
!
! MODIFIED BY:
!
! Dan Szymanski, 14-NOV-80, 01
!	IF_FINAL change: test changed to IF .E_JOURNAL NEQ 0 so that 
!	journal file is deleted after a recovery.
!--

BEGIN
LIBRARY 'EDT';

PSECTS


EXTERNAL ROUTINE
    F_PUT_MESS,
    IO_ERR,
    IO_OT,
    IO_OI,
    IO_WTU,
    IO_OWF,
    IO_WT,
    IO_GAT,
    IO_CLO,
    IO_CAT,
    SY_GCOM,
    SY_EXIT,
    U_G_BUFFER,
    U_F_BUFFER,
    WF_OPEN_BUFFER;

EXTERNAL
    E_AUD_IFI,				! IFI for audit trail rab.
    E_I_NAME,				! Name of input file.
    E_I_LEN,				! Length of input file name.
    E_T_TYPE,				! Terminal type.
    E_TBCB	: REF TBCB_BLOCK,	! Current text buffer control block.
    E_LAST_TBCB,			! Previous tbcb.
    E_PASTE_TBCB,			! Paste buffer tbcb.
    E_EXITED,				! Editor exit flag.
    E_O_NAME,				! Pointer to output file name string.
    E_O_LEN,				! Length of output file name string.
    E_JOURNAL,				! journal enable flag
    IO_STS,				! Status of last io operation.
    SY_AUDIT_RAB,			! Audit trail rab.
    SY_PRIMARY_RAB,			! primary input file rab.
    WF_IFI,				! Work file IFI.
    IO_WF_RAB;				! Work file RAB.

EXTERNAL LITERAL
    IO_FNF;				! File not found status.

GLOBAL ROUTINE IF_INIT =
BEGIN
LOCAL
    NEW;
!
! Open the terminal. (actually sys$input), if it fails, abort.
!
IO_OT();
!
! Process the command line.
!
SY_GCOM();
!
! open the workfile, if it fails, abort.
!
IO_OWF();
!
! Open the paste text buffer.
!
U_F_BUFFER(UPLIT BYTE('PASTE'),5);
!
! And the MAIN text buffer.
!
E_PASTE_TBCB = .E_TBCB;
U_G_BUFFER(UPLIT BYTE('MAIN'),4,E_TBCB,NEW);
E_LAST_TBCB = .E_TBCB;
!
! Open the input file.
!
IF IO_OI(SY_PRIMARY_RAB,.E_I_NAME,.E_I_LEN) EQL 0 THEN
    BEGIN
    IF .IO_STS EQL IO_FNF THEN
        F_PUT_MESS(ERR_INPFILNEX)
    ELSE
        BEGIN
        F_PUT_MESS(ERR_INPFILOPN);
        IO_ERR();
        SY_EXIT(1);
        END;
    END
ELSE
    BEGIN
    E_TBCB[TBCB_INPUT_RAB] = SY_PRIMARY_RAB;
    IO_GAT();
    END;
WF_OPEN_BUFFER();
!
! Save the file attributes for use on the output file.
!
RETURN 1
END;

GLOBAL ROUTINE IF_FINAL =
BEGIN
IO_CLO(.WF_IFI,IO_WF_RAB);
!
! Close the audit trail, deleting it iff e_exited is 1.
!
IF .E_JOURNAL NEQ 0 THEN IO_CAT(.E_EXITED EQL 1);
SY_EXIT(1)
END;

END
ELUDOM
