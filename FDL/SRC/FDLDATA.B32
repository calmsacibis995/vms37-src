%TITLE	'FDL$PARSE'
%SBTTL	'Data Declarations'
MODULE	FDLDATA		( IDENT='V03-001'
			) =

BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! Facility:	VAX-11 FDL Utilities
!
! Abstract:	FDL global data declarations
!
! Environment:
!
!		VAX/VMS Operating System
!
!--

!
! Author:	Keith B Thompson	Creation date:	June-1980
!
!
! Modified by:
!
!	V03-001	KBT0028		Keith Thompson		30-Mar-1982
!		Add upcase descriptor and date_time structure also
!		consoladate the globals into a block
!
!****



PSECT
	OWN	= _FDL$OWN	(PIC),
	GLOBAL	= _FDL$GLOBAL	(PIC),
	PLIT	= _FDL$PLIT	(SHARE,PIC),
	CODE	= _FDL$CODE	(SHARE,PIC);

LIBRARY	'SYS$LIBRARY:STARLET';
REQUIRE	'SRC$:FDLUTIL';
REQUIRE	'SRC$:FDLPARDEF';

GLOBAL
!	General Variables
!
	FDL$AB_DESC_BUF	: VECTOR [ FDL$K_MAXLINE,BYTE ],	! GP buffer

!	T-Parse Varables
!
	FDL$AB_TPARSE_BLOCK	: BLOCK [ TPA$K_LENGTH0,BYTE ]
					INITIAL (TPA$K_COUNT0,TPA$M_ABBREV),

!	Parse data stuff
!
!	These structures must be contiguous so that edf can access them from
!	one point.  If they need to be changed consult with the owner of edf
!
!			-------------------------
!	FDL$AL_BLOCK:	|	 ctrl		|	0
!			|-----------------------|
!			|	pcall		|	1
!			|-----------------------|
!			|	primary		|	2
!			|-----------------------|
!			|	prinum		|	3
!			|-----------------------|
!			|	prictrl		|	4
!			|-----------------------|
!			|	secondary	|	5
!			|-----------------------|
!			|	secnum		|	6
!			|-----------------------|
!			|	secctrl		|	7
!			|-----------------------|
!			|	qualifier	|	8
!			|-----------------------|
!			|	number		|	9
!			|-----------------------|
!			|	numtype		|	10
!			|-----------------------|
!			|	switch		|	11
!			|-----------------------|
!			|      uic group	|	12
!			|-----------------------|
!			|      uic member	|	13
!			|-----------------------|
!			|     protection	|	14
!			|-----------------------|
!			|	fid 1		|	15
!			|-----------------------|
!			|	fid 2		|	16
!			|-----------------------|
!			|	fid 3		|	17
!			|-----------------------|
!			|			|	18
!			|-  date/time quadword -|
!			|			|
!			|-----------------------|
!			|			|	20
!			|---  string desc  -----|
!			|			|
!			|-----------------------|
!			|			|	22
!			|---  comment desc  ----|
!			|			|
!			|-----------------------|
!			|			|	24
!			|----  line desc   -----|
!			|			|
!			|-----------------------|
!			|			|	26
!			|---  upcased desc  ----|
!			|			|
!			|-----------------------|
!			|	line count	|	28
!			-------------------------
!
!
	FDL$AL_BLOCK		: VECTOR [ 29,LONG ];

GLOBAL BIND
	FDL$AB_CTRL		= FDL$AL_BLOCK [ 0 ],	! Parse control flags
	FDL$GL_PCALL		= FDL$AL_BLOCK [ 1 ],	! Editdef Parse routine address
	FDL$GL_PRIMARY		= FDL$AL_BLOCK [ 2 ],	! Primary Code
	FDL$GL_PRINUM		= FDL$AL_BLOCK [ 3 ],	! Primary Number
	FDL$AB_PRICTRL		= FDL$AL_BLOCK [ 4 ],	! Primary Control Flags
	FDL$GL_SECONDARY	= FDL$AL_BLOCK [ 5 ],	! Secondary Code
	FDL$GL_SECNUM		= FDL$AL_BLOCK [ 6 ],	! Secondary Number
	FDL$AB_SECCTRL		= FDL$AL_BLOCK [ 7 ],	! Secondary Control Flags
	FDL$GL_QUALIFIER	= FDL$AL_BLOCK [ 8 ],	! Secondary Qualifier
	FDL$GL_NUMBER		= FDL$AL_BLOCK [ 9 ],	! Numeric Value
	FDL$GL_NUMTYPE		= FDL$AL_BLOCK [ 10 ],	! Qualifier for number
	FDL$GL_SWITCH		= FDL$AL_BLOCK [ 11 ],	! Switch value
	FDL$GL_UIC_GROUP	= FDL$AL_BLOCK [ 12 ],	! UIC Group
	FDL$GL_UIC_MEMBER	= FDL$AL_BLOCK [ 13 ],	! UIC Member
	FDL$GL_PROTECTION	= FDL$AL_BLOCK [ 14 ],	! File protection mask
	FDL$GL_FID1		= FDL$AL_BLOCK [ 15 ],	! File ID for positiong (part 1)
	FDL$GL_FID2		= FDL$AL_BLOCK [ 16 ],	! File ID (part 2)
	FDL$GL_FID3		= FDL$AL_BLOCK [ 17 ],	! File ID (part 3)
	FDL$AL_DATE_TIME	= FDL$AL_BLOCK [ 18 ],	! Date/time quadword
	FDL$AB_STRING		= FDL$AL_BLOCK [ 20 ],	! String descriptor block
	FDL$AB_COMMENT		= FDL$AL_BLOCK [ 22 ],	! Secondary comment
							! descriptor block
	FDL$AB_LINE		= FDL$AL_BLOCK [ 24 ],	! Descriptor of the fdl line
	FDL$AB_UPCASED		= FDL$AL_BLOCK [ 26 ],	! DITTO- after upcasing
	FDL$GL_LINECNT		= FDL$AL_BLOCK [ 28 ];	! Line counter


! 	Shared messages
!
	$SHR_MSGDEF	( FDL,180,GLOBAL,
			( BADLOGIC,ERROR ),
			( CLOSEIN,ERROR ),
			( CLOSEOUT,ERROR ),
			( CREATED,INFO ),
			( CREATEDSTM,INFO ),
			( INSVIRMEM,ERROR ),
			( OPENIN,ERROR ),
			( OPENOUT,ERROR ),
			( READERR,ERROR ),
			( VALERR,ERROR ),
			( WRITEERR,ERROR ) );

END ELUDOM
