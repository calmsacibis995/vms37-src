%TITLE	'VAX-11 RMS Utilities'
%SBTTL	'CREATEFDL - CREATE/FDL'
MODULE	CREATEFDL	( IDENT='V03-001',
			MAIN=START
			) =

BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! Facility:	VAX-11 RMS Utilities
!
! Abstract:	DCL image for the CREATE/FDL command
!
!
! Environment:
!
!		VAX/VMS Operating System
!
!--

!
! Author:	Keith B Thompson	Creation date:	June-1981
!
!
! Modified by:
!
!	V03-001	KBT0035		Keith Thompson		31-Mar-1982
!		Change the ref. ctrl through fdl$al_block
!
!****


LIBRARY	'SYS$LIBRARY:STARLET';
REQUIRE	'SRC$:FDLPARDEF';
REQUIRE	'SRC$:FDLUTIL.REQ';

DEFINE_ERROR_CODES;

EXTERNAL ROUTINE
	FDL$CREATE	: ADDRESSING_MODE( GENERAL ),
	CLI$GET_VALUE	: ADDRESSING_MODE( GENERAL ),
	CLI$PRESENT	: ADDRESSING_MODE( GENERAL );

EXTERNAL
	FDL$AL_BLOCK	: VECTOR [ ,LONG ] ADDRESSING_MODE( GENERAL );


%SBTTL	'Main Routine'
ROUTINE	START	=
!++
!
! Functional Description:
!
! Calling Sequence:
!
!	DCL CREATE/FDL command
!
! Input Parameters:
!
!	FDL file	  - Required
!	Created file name - Optional
!
! Implicit Inputs:
!	none
!
! Output Parameters:
!	none
!
! Implicit Outputs:
!	none
!
! Routine Value:
!	none
!
! Side Effects:
!	none
!
!--

    BEGIN

    OWN
	FDL_FILE_NAM	: DESC_BLK PRESET( [ DSC$B_CLASS ] = DSC$K_CLASS_D ),
	FILE_NAM	: DESC_BLK PRESET( [ DSC$B_CLASS ] = DSC$K_CLASS_D ),
	RESULT_NAM	: DESC_BLK PRESET( [ DSC$B_CLASS ] = DSC$K_CLASS_D );

    LOCAL
	STATUS,
	LOG;

    BIND
	FDL_CTRL = FDL$AL_BLOCK [ 0 ] + .FDL$AL_BLOCK [ 0 ] : BLOCK [ ,BYTE ];

    ! Indicate that this is beging called from a dcl utility
    !
    FDL_CTRL [ FDL$V_DCL ] = 1;

    ! Check for the log qualifier
    !
    LOG = CLI$PRESENT ( DESCRIPTOR( 'LOG' ) );

    ! Get the FDL file name
    !
    CLI$GET_VALUE( DESCRIPTOR( 'FDL_FILE' ),FDL_FILE_NAM );

    ! If there was an output file name given pass it to create
    !
    IF CLI$GET_VALUE( DESCRIPTOR( 'FILE_NAME' ),FILE_NAM )
    THEN
	STATUS = FDL$CREATE ( FDL_FILE_NAM,FILE_NAM,0,RESULT_NAM )
    ELSE
	STATUS = FDL$CREATE ( FDL_FILE_NAM,0,0,RESULT_NAM );

    IF .LOG AND .STATUS
    THEN
	SIGNAL( FDL$_CREATED,1,RESULT_NAM );

    RETURN .STATUS

    END;

END	ELUDOM
