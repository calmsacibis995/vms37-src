	.TITLE	RSXMAIN - RSX AME COMMAND PROCESSOR
	.IDENT	'V03-002'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;++
;
; FACILITY:
;
;	VAX/VMS RSX-11M AME
;
; ABSTRACT:
;
;	RSX-11M AME COMMAND PROCESSOR
;
; AUTHOR: R.HEINEN 4-MAY-77
;
; PREVIOUSLY MODIFIED BY:
;
;	Tim Halvorsen
;
; MODIFIED BY:
;
;	V001	MSH026		Michael S. Harvey	23-Mar-82
;		Eliminate dependencies on VMS Executive symbols.
;
;	V002	MSH002		Michael S. Harvey	22-Apr-82
;		Always get command with verb intact, without the
;		'MCR ' from DCL.
;
;--

	.SBTTL	DEFINITIONS
;
; CLI COMMAND PARSE DATA
;
CLIDAT:	$CLIREQDESC	CLI$K_GETLINE	;CALLBACK TO GET COMMAND LINE
	.MDELETE	$CLIREQDESC
;
; EXTERNAL DEFINITIONS
;
	$FABDEF				; DEFINE FAB
	$RABDEF				; DEFINE RAB
	$IFDDEF				; DEFINE IFD BLOCK FROM IMAGE ACTIVATOR
	$RSXMSGDEF			; DEFINE RSX MESSAGES
;
; LOCAL STORAGE
;
	.PSECT	RSXMAINIMP,EXE,LONG

GCML:	.BLKL	2			; DESCRIPTOR OF COMMAND LINE

INFAB:	$FAB	FNM=<SYS$INPUT>,-
		FOP=INP,-
		RFM=VAR
 
INRAB:	$RAB	FAB=INFAB,-		; FOR TERMINAL COMMAND PROMPTING
		RAC=SEQ,-
		ROP=<PMT,CVT>,-
		UBF=UTLBUF,-
		USZ=128,-
		PBF=PROMPT,-
		PSZ=PROMPT_SIZ

UTLBUF:	.BLKB	128
 
PROMPT:	.ASCII	<10><13>'MCR>'
PROMPT_SIZ=.-PROMPT

	.SBTTL	RSXMAIN - RSX AME COMMAND PROCESSOR

	.PSECT	RSXMAINCODE,NOWRT
;++
; RSXMAIN - RSX AME COMMAND PROCESSOR
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE IS THE ENTRY FOR THE "RSX" IMAGE. IT PROCESSES COMMANDS
; AND STARTS THE RSX-11M AME IN AN APPROPRIATE FASHION.
;
; INPUTS:
;
;	16(AP) = ADDRESS OF IMAGE FILE DESCRIPTOR BUFFER (IFD)
;	IMAGE ACTIVATION STACK SET UP.
;
; OUTPUTS:
;
;	IMAGE EXIT WITH APPROPRAITE STATUS.
;--
RSX$MAIN::
	.WORD	0

	CLRQ	W^GCML			; SET NO COMMAND LINE
	MOVL	16(AP),R2		; GET ADDRESS OF IFD BUFFER
	TSTW	IFD$W_CMCHAN(R2)	; ANY CHANNEL OPEN FOR IMAGE?
	BEQL	OPEN_INPUT		; IF ZERO, THEN PROMPT
;
; GET POSSIBLE COMMAND LINE FROM THE CLI. THE FOLLOWING TWO SPECIAL
; CASES FOR DCL MUST BE HANDLED:
;
;	IF THE COMMAND LINE BEGINS WITH A 'RUN' VERB, THEN THE
;	COMMAND LINE IS NOT MADE AVAILABLE TO THE IMAGE. THIS CAN
;	ONLY OCCUR FROM DCL BECAUSE MCR WILL NOT RETURN A COMMAND LINE
;	IF THE TASK WAS INVOKED WITH A RUN COMMAND. NOTHING IS LOST
;	BY THIS SINCE DCL WOULD NOT HAVE ALLOWED AN IMAGE COMMAND
;	TO BE ISSUED FROM A DCL RUN COMMAND ANYWAY. FOR EXAMPLE:
;
;		$ RUN PIP	!THESE TWO COMMANDS ARE SIMILAR IN
;		> PIP		!THAT THE GMCR$ DIRECTIVE WILL NOT
;				!RETURN ANY COMMAND. THIS IS HANDLED
;				!DIRECTLY BY MCR, BUT THE CODE BELOW
;				!IMPLEMENTS THIS FOR THE DCL CASE.
;
;	IF THE COMMAND LINE BEGINS WITH THE 'MCR ' VERB, THEN STRIP
;	THAT VERB FROM THE COMMAND LINE AND MAKE THE REMAINDER
;	AVAILABLE TO THE GMCR$ DIRECTIVE. THUS, THE FOLLOWING TWO
;	COMMANDS:
;
;		$ MCR PIP /LI
;		> PIP /LI
;
;	OR, THE FOLLOWING SEQUENCE:
;
;		$ PIP :== $PIP
;		$ PIP /LI
;
;	WILL ALL RESULT IN MAKING THE FOLLOWING COMMAND LINE
;	AVAILABLE TO THE IMAGE VIA THE GMCR$ DIRECTIVE:
;
;		PIP /LI
;
;	A VARIATION OF THE LATTER CASE ILLUSTRATES DCL'S TRANSLATION,
;	AS SHOWN HERE:
;
;		$ PIP :== $SYS$SYSTEM:PIP
;		$ PIP /LI
;
;	THIS SEQUENCE WILL CAUSE THE FOLLOWING STRING TO BE RETURNED
;	FOR THE GMCR$ DIRECTIVE:
;
;		SYS$SYSTEM:PIP/LI
;
	MOVL	CLI$A_UTILSERV(AP),R1	; ADDRESS CLI UTILITY ROUTINE
	BEQL	20$			; IF EQL THEN NO CLI, RUN IMAGE
	MOVAB	W^CLIDAT,R3		; ADDRESS OF CLI PARAM. BLOCK
	PUSHL	R3			; PARAMETER BLOCK
	CALLS	#1,(R1)			; CALL CLI
	BLBC	R0,20$			; BR ON NO CLI OR COMMAND
	MOVQ	CLI$Q_RQDESC(R3),R0	; GET DESCRIPTOR OF LINE (MINUS VERB)
	MOVQ	R0,W^GCML		; ASSUME 'MCR ' OR 'RUN' NOT THERE
	CMPW	#^A/MC/,(R1)+		; PARSE FOR 'MC'
	BNEQ	5$			; IF NEQ, NOT 'MCR ' VERB
	SUBL2	#2,R0			; DON'T COUNT 'MC' CHARACTERS
	CMPB	#^A/R/,(R1)		; IS OPTIONAL 'R' THERE?
	BNEQ	3$			; IF NEQ NO, NO BIG DEAL
	INCL	R1			; SKIP PAST 'R' CHARACTER
	DECL	R0			; DON'T COUNT IT
3$:	CMPB	#^A/ /,(R1)+		; SPACE THERE?
	BNEQ	5$			; IF NEQ NO, NOT 'MCR ' VERB
	DECL	R0			; DON'T COUNT THE SPACE
	MOVQ	R0,W^GCML		; UPDATE COMMAND LINE DESCRIPTOR
	BRB	20$			; MCR VERB NOW STRIPPED

5$:	MOVQ	CLI$Q_RQDESC(R3),R0	; GET COMMAND LINE DESCRIPTOR
	CMPB	#^A/R/,(R1)+		; BEGINNING OF RUN COMMAND?
	BNEQ	20$			; IF NEQ NO
	DECL	R0			; DON'T COUNT THE 'R'
	CMPB	#^A/U/,(R1)		; IS IT STILL THE RUN COMMAND?
	BNEQ	15$			; MAYBE, MIGHT BE ABBREVIATED
	INCL	R1			; POINT PAST THE 'U'
	DECL	R0			; DON'T COUNT THE 'U'
	CMPB	#^A/N/,(R1)		; IS IT STILL THE RUN COMMAND?
	BNEQ	15$			; MAYBE, MIGHT BE ABBREVIATED
	INCL	R1			; SKIP THE 'N'
	DECL	R0			; DON'T COUNT THE 'N'
15$:	CMPB	#^A/ /,(R1)+		; IS IT THE RUN COMMAND?
	BNEQ	20$			; IF NEQ NO
	CLRQ	W^GCML			; NO COMMAND FOR TASK IMAGE
20$:	PUSHL	AP			; PROVIDE CLI AP ARGUMENT
	PUSHL	IFD$L_CMKFIADR(R2)	; PASS KNOWN FILE DATA
	CLRL	-(SP)			; CLI FLAGS (1=DCL,0=MCR)
	PUSHAB	W^GET_CMD		; CLI CALLBACK ROUTINE
	MOVZWL	IFD$W_CMCHAN(R2),-(SP)	; CHANNEL FOR OPEN IMAGE FILE
	CALLS	#5,W^RSX$RUNIMAGE	; RUN THE IMAGE
EXIT:	RET				; EXIT WITH ANY ERRORS
;
; PROMPT FOR MCR COMMAND LINE
;
OPEN_INPUT:
	MOVAB	W^INFAB,R6		; GET FAB ADDRESS
	$OPEN	(R6)			; OPEN SYS$INPUT
	BLBC	R0,EXIT			; BRANCH IF ERROR
GETNEXT:				; PROMPT FOR COMMANDS
	MOVAB	W^INRAB,R7		; SET RAB ADDRESS
	$CONNECT (R7)			; CONNECT SYS$INPUT
	BLBC	R0,EXIT
	$GET	(R7)			; GET THE COMMAND LINE
	BLBS	R0,30$			; BR IF SUCCESSFUL
	CMPW	R0,#RMS$_EOF&^XFFFF	; ERROR OK?
	BNEQ	EXIT			; IF NEQ THEN NO
	MOVZBL	#1,R0			; SET SUCCESS
	BRB	EXIT			; AND EXIT

30$:	MOVZWL	RAB$W_RSZ(R7),R4	; INSERT RECORD SIZE 
	BEQL	70$			; IF EQL THEN NULL AND GET AGAIN
	MOVL	RAB$L_RBF(R7),R5	; SAVE ADDRESS
;
;	ECHO THE COMMAND LINE IF CLI VERIFY OPTION SELECTED
;
	BBS	S^#DEV$V_TRM,FAB$L_DEV(R6),60$ ; INPUT A TERMINAL?
	CMPB	(AP),#<CLI$L_CLIFLAG/4>	; ENOUGH ARGS?
	BLSSU	60$			; IF LSSU THEN NO
	BBC	#CLI$V_VFYINP,CLI$L_CLIFLAG(AP),60$; BR IF VERIFY NOT ON
	MOVQ	R4,-(SP)		; OUTPUT VERIFY COMMAND
	INCL	(SP)			; SET UP FOR PROPER MESSAGE
	DECL	4(SP)			;
	PUSHL	#2			;
	PUSHL	#RSX$_VERIFYCMD+1	; MESSAGE TYPE FORCE SUCCESS
	PUSHL	#4+<1@16>		
	CLRQ	-(SP)
	PUSHAB	8(SP)
	CALLS	#3+5,@#SYS$PUTMSG	; ECHO THE COMMAND LINE
;
;	IGNORE COMMAND LINES WITH LEADING ';' AND STRIP ALL
;	'!' COMMENTS BEFORE HANDING TO COMPATIBILITY MODE IMAGE.
;
60$:	CMPB	#^A';',(R5)		; FIRST CHARACTER ;?
	BEQL	70$			; IF EQL THEN NO DATA COMMENT
	LOCC	#^A'!',R4,(R5)		; LOOK FOR ! COMMENTS
	SUBL	R0,R4			; ADJUST DATA SIZE
	BEQL	70$			; IF EQL THEN NONE LEFT
;
;	TAKE THE FIRST "WORD" OF THE COMMAND LINE AS THE NAME
;	OF THE IMAGE TO EXECUTE AND CALL THE AME.  SAVE THE
;	DESCRIPTOR OF THE FULL COMMAND LINE SO THAT IT CAN BE
;	RETURNED WHEN THE IMAGE ASKS FOR IT.
;
	MOVQ	R4,W^GCML		; SAVE COMMAND LINE FOR GET_CMD
	LOCC	#^A' ',R4,(R5)		; SPACE DELINIATES FILE NAME
	SUBL	R0,R4			; STRIP OFF ' ' AND FOLLOWING
	LOCC	#^A'/',R4,(R5)		; '/' ALSO DELINIATES FILE NAME
	SUBL	R0,R4			; STRIP OFF '/' AND FOLLOWING
	PUSHL	AP			; PROVIDE CLI AP ARGUMENT
	CLRL	-(SP)			; CLI = MCR
	PUSHAB	B^GET_CMD		; CLI CALLBACK ROUTINE
	MOVQ	R4,-(SP)		; DESCRIPTOR OF FILE NAME
	CALLS	#5,W^RSX$ACTIVATE	; ACTIVATE THE IMAGE
70$:	BRW	GETNEXT			; GET NEXT COMMAND

	.SBTTL	GET_CMD - GET MCR COMMAND ROUTINE
;++
;
;	THIS ROUTINE IS CALLED BY THE RSX-11M AME WHEN A
;	COMMAND LINE IS NEEDED.
;
; INPUTS:
;
;	AP =	.LONG	1
;		.LONG	ADDRESS OF DESCRIPTOR OF RETURN BUFFER
;
; OUTPUTS:
;
;	THE DESCRIPTOR IS FILLED IN
;	R0 = 1 IF COMMAND AVAILABLE, ELSE 0
;--
GET_CMD:
	.WORD	0
	MOVQ	W^GCML,@4(AP)		; DEPOSIT COMMAND DATA
	MOVZBL	W^GCML,R0		; INSERT 0 FOR NULL COMMAND 
	BEQL	20$			; IF EQL THEN NO COMMAND
	CLRQ	W^GCML			; SET NO COMMAND
	MOVL	#1,R0			; SET SUCCESS
20$:	RET				; RETURN

 
	.END	RSX$MAIN
