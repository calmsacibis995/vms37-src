	.TITLE	RSXINFO - RSX-11M INFORMATIONAL DIRECTIVES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:
;
;	VAX/VMS RSX11M AME
;
; ABSTRACT:
;
;	RSX-11M INFORMATIONAL DIRECTIVES
;
; AUTHOR:
;
;	R.HEINEN 4-NOV-76
;
; PREVIOUSLY MODIFIED BY:
;
;	T. HALVORSEN
;
; MODIFIED BY:
;
;	V001	Michael S. Harvey	22-Jan-1982
;		Correctly return 'driver resident' bit in word 1
;		of Get LUN Information buffer.
;--
;
; EXTERNAL SYMBOLS
;
	$RSXDEF			; DEFINE RSX SYMBOLS
	DRERR$			; DEFINE RSX11M DIRECTIVE STATUS CODES
 
	.PSECT	RSXCODE,NOWRT,SHR,PIC

	.SBTTL	RSX$GLUN - RSX11M GLUN$ DIRECTIVE
;++
; RSX$GLUN - RSX11M GET LUN IMFORMATION DIRECTIVE
;
; FUNCTIONAL DESCRIPTION:
;
; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
; "GLUN$" DIRECTIVE.
;
; INPUT PARAMETERS:
;
;	R5 = ADDRESS OF DPB+2
;	R6 = CM IMAGE STACK ADDRESS
;	R10 = ADDRESS OF CM IMAGE DATA BASE
;	R11 = ADDRESS OF IMAGE HEADER
;
; OUTPUT PARAMETERS:
;
;	R10,R11 ARE PRESERVED
;
; IMPLICIT OUTPUTS:
;
;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
;
; DSW RETURN CODES
;
;	IS.SUC	SUCCESSFUL
;	IE.ULN	UNASSIGNED LUN
;	IE.ILU	INVALID LOGICAL UNIT NUMBER
;	IE.ADP	BUFFER ACCESS VIOLATION
;--
RSX$GLUN::				; GET LUN IMFORMATION DIRECTIVE
;
; GET THE LUN NUMBER OF INTREST
;
	MOVZWL	(R5)+,R1		; 
	BLEQ	110$			; IF LEQ THEN ERROR
	CMPW	R1,I_NLUN(R10)		; IN RANGE?
	BGTRU	110$			; IF GTRU THEN ERROR
;
; GET THE LUT ENTRY FOR THE LUN NUMBER
;
	MOVL	@I_LUT(R10)[R1],R8	; ADDRESS THE LUT TABLE ENTRY
	BEQL	100$			; IF EQL THEN ERROR
	MOVZWL	(R5),R5			; COPY ADDRESS OF BUFFER
	BLBS	R5,90$			; IF LOW SET THEN ERROR
;
; COPY DATA TO USER BUFFER
;
	MOVW	LUT_INFONAME(R8),(R5)+	; INSERT INFO NAME
	MOVB	LUT_INFOUNIT(R8),(R5)+	; INSERT INFO UNIT
	MOVB	#^X080,(R5)+		; INSERT LOADED DRIVER FLAG
	BISW3	#^X08000,LUT_CHAR(R8),(R5)+; INSERT CHARACTERISTICS
;
;	IF THE DEVICE IS A DISK DEVICE, THEN RETURN THE MAXIMUM
;	BLOCKS ON THE DISK RATHER THAN THE DEVICE GEOMETRY.  THIS
;	OVERRIDES THE DEVICE DEPENDENT LONGWORD WHICH IS RETURNED
;	FOR ALL OTHER DEVICES.
;
	CMPB	LUT_TYPE(R8),#LUTC_DISK	; CHECK IF DISK DEVICE
	BNEQ	5$			; BRANCH IF NOT
	MOVZBW	LUT_MAXBLOCK+2(R8),(R5)+ ; MAXBLOCKS (MIDDLE BYTE)
					; HIGH BYTE IS FLAGS (ZERO)
	MOVW	LUT_MAXBLOCK(R8),(R5)+	; MAXBLOCKS (LOW WORD)
	BRB	10$
5$:
	MOVL	LUT_CHAR+8(R8),(R5)+	; INSERT DEVICE DEPENDENT WORDS
10$:
	MOVW	LUT_CHAR+6(R8),(R5)	; INSERT STANDARD BUFFER SIZE
	RSB				; RETURN TO CALLER
;
; BAD BUFFER
;
90$:	$DSW	#IE.ADP			; INVALID BUFFER
;
; UNASSIGNED LUN ERROR
;
100$:	$DSW	#IE.ULN			; ERROR FOR UNASSIGNED LUN
;
; ILLEGAL LUN NUMBER
;
110$:	$DSW	#IE.ILU			; SET ERROR

	.SBTTL	RSX$GPRT - RSX11M GPRT$ DIRECTIVE
;++
; RSX$GPRT - RSX11M GET PARTITION PARAMETERS DIRECTIVE
;
; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
; "GPRT$" DIRECTIVE.
;
; INPUT PARAMETERS:
;
;	R5 = ADDRESS OF DPB+2
;	R6 = CM IMAGE STACK ADDRESS
;	R10 = ADDRESS OF CM IMAGE DATA BASE
;	R11 = ADDRESS OF IMAGE HEADER
;
; OUTPUT PARAMETERS:
;
;	R10,R11 ARE PRESERVED
;
; IMPLICIT OUTPUTS:
;
;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
;
; DSW RETURN CODES:
;
;	IS.SUC	SUCCESSFUL
;	IE.ADP	BUFFER ACCESS VIOLATION
;
;--
RSX$GPRT::				; GET PARTITION PARAMETERS DIRECTIVE
	MOVZWL	4(R5),R4		; GET BUFFER ADDRESS SPECIFIED
	BLBS	R4,10$			; BR IF BAD BUFFER
	MOVW	#^X100,(R4)+		; INSERT PARTITION BASE ADDRESS
	EXTZV	#6,#10,I_ADR0+ADR_HIGHLIM(R10),R3; INSERT TASK SIZE IN 32 WORD BLOCKS
	MOVW	R3,(R4)+		;
					; SYSTEM CONTROLED PARTITION
	CLRW	H.DSW(R11)		; SET PARTITION BASE ADDRESS
	RSB				; AND RETURN
10$:	$DSW	#IE.ADP			; INVALID BUFFER

	.SBTTL	RSX$GTSK - RSX11M GTSK$ DIRECTIVE
;++
; RSX$GTSK - RSX11M GET TASK PARAMETERS DIRECTIVE
;
; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
; "GTSK$" DIRECTIVE.
;
; INPUT PARAMETERS:
;
;	R5 = ADDRESS OF DPB+2
;	R6 = CM IMAGE STACK ADDRESS
;	R10 = ADDRESS OF CM IMAGE DATA BASE
;	R11 = ADDRESS OF IMAGE HEADER
;
; OUTPUT PARAMETERS:
;
;	R10,R11 ARE PRESERVED
;
; IMPLICIT OUTPUTS:
;
;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
;
; DSW RETURN CODES:
;
;	IS.SUC	SUCCESSFUL
;	IE.ADP	BUFFER ACCESS VIOLATION
;--
RSX$GTSK::				; GET TASK PARAMETERS DIRECTIVE
	MOVZWL	(R5),R4			; ADDRESS BUFFER
	BLBS	R4,20$			; BR IF BAD BUFFER
	MOVL	I_RAD50NAME(R10),(R4)+	; INSERT TASK NAME
	MOVZWL	#^O026217,(R4)+		; INSERT "GEN   " AS PARTITION
	MOVW	#^O0105633,(R4)+	; INSERT VMS OWNER
	MOVZWL	#^O050712,R0		; ASSUME MCR 
	BBC	#SV_DCL,I_STATE(R10),10$; BR IF NOT DCL
	MOVZWL	#^O014604,R0		;
10$:	MOVW	R0,(R4)+		; INSERT TO COMPLETE OWNER WORD
	MOVW	H.SPRI(R11),(R4)+	; INSERT PRIORITY
	MOVW	H.CUIC(R11),(R4)+	; INSERT UIC
	MOVW	I_NLUN(R10),(R4)+	; INSERT NUMBER OF LUNS
	CLRL	(R4)+			; INSERT UNDEFINED WORDS
	MOVW	I_SSTVEC(R10),(R4)+	; INSERT SST VECTOR DATA
	MOVW	I_SSTVECL(R10),(R4)+	;
	MOVW	I_ADR0+ADR_HIGHLIM(R10),(R4)+; INSERT SIZE IN BYTES
	MOVW	#5,(R4)+		; TELL ITS THE RSX!!!!!
	MOVB	I_UIC+1(R10),(R4)+	; INSERT UIC REMAINDER
	MOVB	I_UIC+3(R10),(R4)	;
	RSB				; AND RETURN
20$:	$DSW	#IE.ADP			; BAD BUFFER

	.SBTTL	RSX$GTIM - RSX11M GTIM$ DIRECTIVE
;++
; RSX$GTIM - RSX11M GET TIME DIRECTIVE
;
; FUNCTIONAL DESCRIPTION:
;
; THIS IS A RSX DIRECTIVE HANDLER WHICH IMPLEMENTS AN RSX11M
; "GTIM$" DIRECTIVE.
;
; INPUT PARAMETERS:
;
;	R5 = ADDRESS OF DPB+2
;	R6 = CM IMAGE STACK ADDRESS
;	R10 = ADDRESS OF CM IMAGE DATA BASE
;	R11 = ADDRESS OF IMAGE HEADER
;
; OUTPUT PARAMETERS:
;
;	R10,R11 ARE PRESERVED
;
; IMPLICIT OUTPUTS:
;
;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
;
; DSW RETURN CODES:
;
;	IS.SUC	SUCCESSFUL
;	IE.ADP	BUFFER ACCESS VIOLATION
;--
RSX$GTIM::				; GET TIME DIRECTIVE
	MOVZWL	(R5),R4			; ADDRESS BUFFER
	BLBS	R4,10$			; IF BAD BUFFER THEN BR
	$NUMTIM_S	(R4)		; INSERT TIME IN BUFFER
	BLBC	R0,10$			; IF LOW CLEAR THEN ACCESS VIOLATION
	SUBW	#1900,(R4)		; TAKE OUT YEAR SINCE 0
	MOVW	#100,14(R4)		; INSERT TICKS PER SECOND
	RSB				; RETURN
10$:	$DSW	#IE.ADP			; SET STATUS AND RETURN

	.SBTTL	RSX$GEOM - VMS DIRECTIVE TO RETURN DISK GEOMETRY
;++
;
;	THIS IS A VMS ONLY ELEPHANT DIRECTIVE WHICH RETURNS THE DISK
;	GEOMETRY FOR A GIVEN LUN.
;
; INPUTS:
;
;	R5 = ADDRESS OF DPB+2
;	R6 = CM IMAGE STACK ADDRESS
;	R10 = ADDRESS OF CM IMAGE DATA BASE
;	R11 = ADDRESS OF IMAGE HEADER
;
;	DPB FORMAT:
;
;	DPB+2	.WORD	5		; MODE WORD
;	DPB+4	.WORD	LUN
;	DPB+6	.WORD	ADDRESS OF LONGWORD TO RECEIVE GEOMETRY
;
; OUTPUTS:
;
;	R10,R11 ARE PRESERVED
;
;	THE PROPER DIRECTIVE STATUS IS PLACED IN THE IMAGE DSW
;	ALONG WITH THE PROPER SETTING OF THE C-BIT.
;
; DSW RETURN CODES
;
;	IS.SUC	SUCCESSFUL
;	IE.ULN	UNASSIGNED LUN
;	IE.ILU	INVALID LOGICAL UNIT NUMBER
;	IE.ADP	BUFFER ACCESS VIOLATION
;--
RSX$GEOM::
	ADDL	#2,R5			; SKIP MODE WORD
;
; GET THE LUN NUMBER OF INTREST
;
	MOVZWL	(R5)+,R1		; 
	BLEQ	110$			; IF LEQ THEN ERROR
	CMPW	R1,I_NLUN(R10)		; IN RANGE?
	BGTRU	110$			; IF GTRU THEN ERROR
;
; GET THE LUT ENTRY FOR THE LUN NUMBER
;
	MOVL	@I_LUT(R10)[R1],R8	; ADDRESS THE LUT TABLE ENTRY
	BEQL	100$			; IF EQL THEN ERROR
	CMPB	LUT_TYPE(R8),#LUTC_DISK	; CHECK IF DISK DEVICE
	BNEQ	100$			; ERROR IF NOT
;
; COPY DATA TO USER BUFFER
;
	MOVZWL	(R5),R5			; COPY ADDRESS OF BUFFER
	BLBS	R5,90$			; IF LOW SET THEN ERROR
	IFNOWRT	#4,(R5),90$		; ERROR IF NOT WRITABLE
	MOVL	LUT_CHAR+8(R8),(R5)+	; INSERT DEVICE DEPENDENT WORDS
	RSB				; RETURN TO CALLER
;
; BAD BUFFER
;
90$:	$DSW	#IE.ADP			; INVALID BUFFER
;
; ILLEGAL LUN NUMBER
;
110$:	$DSW	#IE.ILU			; SET ERROR
;
; UNASSIGNED LUN ERROR
;
100$:	$DSW	#IE.ULN			; ERROR FOR UNASSIGNED LUN

;
	.END
