	.TITLE	RSXCRDRV - VAX/VMS RSX11M AME CARD READER DRIVER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:
;
;	VAX/VMS RSX11M AME
;
; ABSTRACT:
;
;	CARD READER DRIVER
;
; AUTHOR: R.HEINEN 4-NOV-76
;
; MODIFIED BY:
;
;	V02-001	PCG0001		Peter George		23-Mar-1981
;		Correct test for IO.RDB.
;
;--
;
; EXTERNAL SYMBOLS
;
	$RSXDEF			; DEFINE RSX SYMBOLS
	SPCIO$			; DEFINE SPECIAL I/O FUNCTIONS
	FILIO$			;

	.SBTTL	RSX$CR_DRV - RSX11M AME CARD READER DRIVER
 
;++
	.PSECT	RSXCODE,NOWRT,SHR,PIC
; RSX$CR_DRV - RSX11M AME CARD READER DRIVER 
;
; FUNCTIONAL DESCRIPTION:
;
; THIS ROUTINE PROCESSES I/O DIRECTED TO A CARD READER.
;
; INPUTS:
;
;	R2 = ADDRESS OF THE QIO CONTEXT BLOCK
;	R3 = MAJOR FUNCTION CODE
;	R5 = ADDRESS OF THE DPB AREA
;	R6 = ADDRESS OF THE IMAGE STACK
;	R8 = ADDRESS OF THE LUT
;	R10 = ADDRESS OF THE IMAGE IMPURE SECTION
;	R11 = ADDRESS OF THE IMAGE
;
; OUTPUTS:
;
;	R2,R6,R8,R10,R11 ARE PRESERVED
;--
RSX$CR_DRV::				; CARD READER DRIVER
	CASE	R3,<-			;
		RSX$IOKILL,-		; I/O KILL
		RSX$IEIFC,-		; WRITE LOGICAL BLOCK
		CR_RLB,-		; READ LOGICAL BLOCK
		RSX$DLVRQIOAST,-	; ATTACH DEVICE
		RSX$DLVRQIOAST,-	; DETACH DEVICE
		RSX$IEIFC,-		; FUNCTION CODE 5
		RSX$IEIFC,-		; FUNCTION CODE 6
		RSX$IEIFC,-		; ILLEGAL
		RSX$IEIFC,-		; ILLEGAL
		RSX$DLVRQIOAST,-	; FUNCTION CODE 9
		RSX$IEIFC,-		; ILLEGAL
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		CR_RLB,-		; READ VIRTUAL BLOCK
		RSX$IEIFC,-		; WRITE VIRTUAL BLOCK
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		RSX$DLVRQIOAST,-	; ACP FUNCTIONS
		>
	BRW	RSX$IEIFC		; ERROR EXIT

	.SBTTL	CR_RVB AND CR_RLB FUNCTIONS
;
; READ VIRTUAL BLOCK
;
CR_RVB:					; READ VIRTUAL BLOCK
	MOVZWL	#IO$_READVBLK,I_SCRATCH+12(R10); SET FUNCTION CODE
	BRW	RSX$ISSUQIO		; PERFORM THE I/O
;
; READ LOGICAL BLOCK
;
CR_RLB:					; READ LOGICAL BLOCK
	MOVZWL	#IO$_READLBLK,I_SCRATCH+12(R10); SET THE FUNCTION CODE
	BITW	#<IO.RDB&^X0FF>,R7	; IO.RDB?
	BEQL	10$			; IF EQL THEN NO
	BISW	#IO$M_BINARY,I_SCRATCH+12(R10); SET READ BINARY
10$:	BRW	RSX$ISSUQIO		; PERFORM THE FUNCTION
	.END
