	.TITLE	RSXSYMBOL - RSX11M/AME SYMBOL DEFINITION FILE
	.IDENT	'V03-003'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;++
; FACILITY: VAX/VMS RSX11M AME
;
; ABSTRACT: MACRO DEFINITION FILE
;
; AUTHOR: R.HEINEN  6-OCT-1976
;
; PREVIOUSLY MODIFIED BY:
;
;	Tim Halvorsen
;	Peter H. Lipman
;	Michael S. Harvey
;
; MODIFIED BY:
;
;	V001	MSH020		Michael S. Harvey	25-Feb-82
;		Add space for ANSI 'a' file names. Add space for
;		ANSI 'a' file name string for the ATR$C_ASCNAME
;		attribute.
;
;	V002	MSH025		Michael S. Harvey	16-Mar-82
;		Add some control bits so that unsolicited AST
;		handling can work correctly.
;
;	V003	MSH021		Michael S. Harvey	7-Mar-82
;		Reduce compatibility mode context page mapping back
;		down to 1 page, thus preventing corruption of the
;		first word of the next page.
;
;--
;
; DEFINE MACROS USED BY THE RSX11M MACRO SOURCE FILES
;
	.MACRO	DEFIN$	SYM,VAL
	SYM=VAL
	.ENDM	DEFIN$
;
	.MACRO	.WORD.	SYM,LO,HI
	SYM=<HI*256>+LO
	.ENDM	.WORD.
;
	.MACRO	.ASECT
	.PSECT	..ABS.,ABS
	.ENDM	.ASECT
;
	.MACRO	.QIOE.	SYM,VAL
	SYM=VAL
	.ENDM	.QIOE.
;
	.MACRO	.IOER.	SYM,VAL
	SYM=VAL
	.ENDM	.IOER.
;
; DEFINE EXECUTION MACROS
;
	.MACRO	$IMAGEABORT	A
	MOVL	A,R0	
	BRW	RSX$ABORT
	.ENDM	$IMAGEABORT
	.MACRO	$ABORT	A
	MOVL	A,R0	
	BRW	RSX$INTERNEXIT
	.ENDM	$ABORT
	.MACRO	$DSW	A
	CVTBW	A,H.DSW(R11)	
	BISB	#1@PSL_CC,I_PS(R10)
	RSB
	.ENDM	$DSW
	.MACRO	$DSWIO	A
	MOVZBW	A,H.DSW(R11)	
	BISB	#1@PSL_CC,I_PS(R10)
	RSB
	.ENDM	$DSWIO
;
; DEFINE THE AME INTERNAL SYMBOLS
;
	.MACRO	$RSXDEF
;
; DEFINE RSX11M SYMBOLS FOR ALL MODULES
;
	HDRDF$				; DEFINE RSX11M HEADER
	IOERR$				; DEFINE I/O ERRORS
;
; DEFINE RSX11M/AME MESSAGES
;
	$RSXMSGDEF			; DEFINE ERROR MESSEGES AND CODES
	$FIBDEF				; GET LENGTH OF FIB FOR FCB STRUCTURE
;
	.PSECT	RSXDEF,ABS
;
; DEFINITIONS
;
RSX$C_SUBSYSTEM=6
;
; STATE VECTOR BIT DEFINITIONS
;
.=0
SV_RESTORE:	.BLKB	1		; RESTORE OF IMAGE STATE IN PROGRESS
SV_TRANSLATE:	.BLKB	1		; TRANSLATION OF LOGICAL NAME FALG
SV_DCL:		.BLKB	1		; DCL COMMAND PARSING
;
; AST STATE BITS
;
SV_NOAST:	.BLKB	1		; AST'S ARE DISABLED
SV_ASTLVL:	.BLKB	1		; AST IN PROGRESS
SV_PENDWAIT:	.BLKB	1		; WAIT PENDED FOR AST DELIVERY
SV_WAIT:	.BLKB	1		; WAIT IN PROGRESS
SV_RCVAST:	.BLKB	1		; RECEIVE AST ENABLED
SV_PWRAST:	.BLKB	1		; POWERFAIL AST ENABLED
SV_FLOATAST:	.BLKB	1		; FLOATING AST ENABLED
SV_UNSOLAST:	.BLKB	1		; UNSOLICITED CHAR AST ENABLED
SV_LOG:		.BLKB	1		; ACTION LOGGING ENABLED
SV_HIBER:	.BLKB	1		; HIBERNATE IN PROGRESS
SV_PENDHIBER:	.BLKB	1		; SKIP ALL HIBERNATES TO DELIVER AN AST
SV_RESTARTHIBER:.BLKB	1		; HIBERNATE WAS ABORTED TO DELIVER
					; AN AST AND SHOULD BE RESTARTED
;
; RSX PER IMAGE DATA STORAGE OFFSETS
;
.=0
;
; DIRECTIVE PROCESSING CONTEXT SAVE AREA
;
; (ON ENTRY TO THE AME, THE IMAGE ACTIVATOR HAS PLACED THE FILE NAME
;  OF THE TASK BEING INVOKED AS A COUNTED STRING AT OFFSET 0).
;
I_R0:		.BLKL	1		; SAVE AREA FOR R0-R6
I_R1:		.BLKL	1		
I_R2:		.BLKL	1		
I_R3:		.BLKL	1		
I_R4:		.BLKL	1		
I_R5:		.BLKL	1		
I_R6:		.BLKL	1		
I_TYPE:		.BLKL	1		;
I_PC:		.BLKL	1		; SAVE AREA FOR PC
I_PS:		.BLKL	1		; SAVE AREA FOR PS
;
; SCRATCH AREA FOR AME ACTIVITY
;
I_SCRATCH:	.BLKL	40		; SCRATCH
I_QIOSCRATCH=	<4*12>+4		; LENGTH OF QIO SCRATCH AREA
;
; LIST HEADS FOR AST QUEUES AND LISTS
;
I_ASTQUEUE:	.BLKL	2		; AST QUEUE
I_ASTPOOL:	.BLKL	2		; AST CONTEXT BLOCK POOL
I_FCBPOOL:	.BLKL	2		; FCB POOL
I_LOGNAME:	.BLKL	2		; LOGICAL NAME LIST
I_CMDROUT:	.BLKL	1		; COMMAND CALL BACK ADDRESS
;
; IMAGE ADDRESS DATA
;
I_GARD:		.BLKL	1		; ADDRESS OF THE HEADER GUARD WORD
I_INISIZE:	.BLKL	1		; SIZE OF IMAGE INITIALLY
I_HIGHSIZE:	.BLKL	1		; HIGHEST ADR0 ADDRESS
I_IMAGEVBN:	.BLKL	1		; VBN OF IMAGE FILE
I_ADR0:					; START OF ADDRESS DESC
	.REPT	8			;
	.BLKL	2
	.ENDR
	.BLKL	0			; LIST END
;
; NAME DATA
;
I_UIC:		.BLKL	1		; UIC FOR PROCESS
I_ASCIINAME:	.BLKL	2		; NAME OF TASK IN ASCII
I_RAD50NAME:	.BLKL	1		; NAME IN RAD 50
I_PROCNAME:	.BLKL	1		; ADDRESS OF SAVED PROCESS NAME (ASCIC)
I_OVERLAYS:	.BLKL	1		; ADDRESS OF COPY OF IMAGE FOR OVERLAYS
I_OVERLEN:	.BLKL	1		; LENGTH OF OVERLAY SECTION
I_MRKTQUEUE:	.BLKL	2		; LISTHEAD FOR TIMER REQUESTS
;
; MAILBOX CHANNELS
;
I_RCVMAIL:	.BLKW	1		; MAILBOX FOR RECEIVE DATA
I_PPFINDEX:	.BLKW	1		; PPF INDEX
;
; LOGICAL UNIT TO CHANNEL TABLE DATA
;
I_NLUN:		.BLKL	1		; NUMBER OF LUT ENTRIES
I_LUT:		.BLKL	1		; POINTER TO LUT TABLE
;
; STATE AND WAIT FOR DATA STORAGE
;
I_HIGHEFN:	.BLKL	1		; HIGHEST EFN
I_STATE:	.BLKL	1		; STATE VECTOR FOR IMAGE
		.BLKL	1		; FIRST LONG WORD OF WAIT ARG LIST
I_WAIT:		.BLKL	2		; WAIT FOR CONTEXT
I_WAITSAVE:	.BLKL	2		; SAVE AREA FOR WAIT FOR DATA
;
; SAVE STORAGE FOR EXIT BAILOUT
;
I_BAILOUTFP:	.BLKL	1		; FP OF CALLER
I_RUNFLAGS:	.BLKL	1		; RUN FLAGS FOR THE RSX
I_L$BXLN:				; LABEL BLOCK 1 REFERENCE CONSTANT
I_DEBVEC:	.BLKW	1		; TASK DEBUG VECTOR
I_DEBVECL:	.BLKW	1		; TASK DEBUG VECTOR SIZE
I_SSTVEC:	.BLKW	1		; TASK SST VECTOR
I_SSTVECL:	.BLKW	1		; TASK SST VECTOR
;
; AST CONTEXT BLOCKS
;
I_CURAST:	.BLKL	1		; AST CONTEXT BLOCK OF CURRENT AST
I_RCVAST:	.BLKL	1		; ADDRESS OF THE RCVAST CONTEXT
I_PWRAST:	.BLKL	1		; ADDRESS OF THE POWERFAIL AST CONTEXT
I_UNSOLAST:	.BLKL	1		; ADDRESS OF UNSOL. AST BLOCK
I_UNSOLMBX:	.BLKL	1		; UNSOLICITED MAILBOX CHANNEL
I_LOGBUF:	.BLKL	1		; ACTION LOGGING BUFFER
;
; PDP-11 FLOATING POINT INSTRUCTION CONTEXT AREA
;
I_FLOATAST:	.BLKL	1		; ADDRESS OF THE FLOATING EXCEPTION ACB
I_FLOATCSR:	.BLKL	1		; PSEUDO FLOATING POINT CSR
I_FLOATERR:	.BLKL	1		; ERROR SUMMARY REGISTER
I_FLOATADR:	.BLKL	1		; ADDRESS 
I_FCC:		.BLKL	1		; FLOATING CONDITION CODES
I_FLOATTMP:	.BLKQ	1		;
I_FLOATA0:	.BLKQ	1		; ACCUM 1 ETC.
I_FLOATA1:	.BLKQ	1
I_FLOATA2:	.BLKQ	1
I_FLOATA3:	.BLKQ	1
I_FLOATA4:	.BLKQ	1
I_FLOATA5:	.BLKQ	1
;
; LIST HEAD FOR NATIVE MODE IMAGE DESCRIPTORS.  EACH DESCRIPTOR IS:
;	(R1)	= LINK TO NEXT ENTRY, 0 = END OF LIST
;	4(R1)	= ADDRESS OF IMAGE START ADDRESS
;	8(R1)	= COUNTED STRING OF IMAGE FILE NAME (GIVEN IN DIRECTIVE)
;
I_SECTION:	.BLKL	1		; LISTHEAD OF ABOVE LIST
I_LENGTH:
;
; OFFSETS IN SIGNAL ARGUMENTS FOR EXCEPTIONS
;
; DURING EXCEPTION PROCESSING, AP IS DIRECTED HERE
;
.=4
AP_NAME:	.BLKL	1		; EXCEPTION NAME
;
; OFFSETS IN AST ARG LIST
;
.=4
AST_PARAM:	.BLKL	1		; AST PARAMETER
AST_R0:		.BLKL	1		; R0 AT AST
AST_R1:		.BLKL	1		; R1 AS AST
AST_PC:		.BLKL	1		; AST PC
AST_PSL:	.BLKL	1		; AST PSL
;
; ACB CONTROL BLOCK
;
.=0
ACB_LINK:	.BLKL	2		; LINK WORDS
ACB_UPRM:	.BLKW	1		; USER PARAMETER
ACB_UPC:	.BLKW	1		; USER AST PC
ACB_FLAGS:	.BLKW	1		; AST TYPE
	ACBV_PERM=0			; PERMANENT CONTEXT BLOCK
	ACBV_INPROG=1			; AST IN PROGRESS
	ACBV_OLD_ACB=2			; PERM AST NO LONGER PERMANENT
	ACBV_TYPE=8			; AST TYPE ( HIGH BYTE )
	ACBC_PWRAST=0			; POWER TYPE
	ACBC_RCVAST=1			; RECEIVE DATA TYPE
	ACBC_CTLRCAST=2			; CTRLC AST TYPE
	ACBC_FLOATAST=3			; FLOATING AST TYPE
	ACBC_UNSOLAST=4			; UNSOLICITED CHARACTER AST TYPE
ACB_IOSB:	.BLKL	2		; I/O STATUS BLOCK
ACB_LUT:	.BLKL	1		; ADDRESS OF LUT ENTRY
;
; QIO AST CONTROL BLOCK
;
.=ACB_IOSB
QIO_IOSB:	.BLKL	2		; IOSB FOR OPERATION
QIO_LUT:	.BLKL	1		; ADDRESS OF THE LUT CONTROL BLOCK
QIO_FLAGS:	.BLKW	1		; FLAGS WORD
	QIOV_FILES = 0			; FILES I/O
	QIOV_READ = 1			; READ I/O FUNCTION
	
QIO_SECONDBLK:	.BLKL	1		; POINTER TO FCB ETC
QIO_SIZE:				; SIZE OF AST CONTROL BLOCKS
;
; OCB - OFFSPRING CONTROL BLOCK (SPAWN DIRECTIVE)
;
.=0
OCB_AST:	.BLKW	1		; TERMINATION AST ADDRESS
OCB_EFN:	.BLKW	1		; TERMINATION EVENT FLAG
OCB_ESB:	.BLKW	1		; EXIT STATUS BLOCK ADDRESS
OCB_CHAN:	.BLKW	1		; TERMINATION MAILBOX CHANNEL
OCB_LENGTH:				; LENGTH OF BLOCK
;
; OFFSETS ON CF FOR ALL CALLS
;
.=4
FP_PSL:		.BLKL	1		; PSW AT CALL
FP_AP:		.BLKL	1		; AP AT CALL
FP_FP:		.BLKL	1		; PRIOR CF
FP_PC:		.BLKL	1		; RETURN PC
FP_REGISTERS:	.BLKL	1		; REGISTERS IF ANY
;
; PSL BIT NAMES
;
PSL_CC	= 0				; CONDITION CODES
PSL_TBIT= 4				; T-BIT
PSL_FU=   6				; FLOATING UNDERFLOW
PSL_FPD = 27				; FIRST PART DONE
PSL_CM	= 31				; COMPATIBILITY MODE
;
; CM PSL
;
RSX$_RCVMBXSIZ = 300			; QUOTA FOR RECEIVE MAILBOXES
C_CANONPS	= <1@31>!<3@22>!<3@24>
;
; STRING FOR "RCVD"
;
C_RCVDSTR	= <82>+<67*256>+<86*256*256>+<68*256*256*256>
;
; FILE I/O CONTROL BLOCK
;
.=0
FCB_FID:	.BLKW	1
FCB_FNB:	.BLKW	1
FCB_RESULTDESC:	.BLKL	2
FCB_FNAMEDESC:	.BLKL	2
FCB_FNAME:	.BLKL	12
FCB_RESULT:	.BLKL	12
FCB_FIB:	.BLKB	FIB$C_LENGTH
FCB_PC:		.BLKL	1
FCB_ATTRIBS:	.BLKL	14
FCB_ASCNAM:	.BLKL	5
FCB_SIZE:	
;
; LUT CONTROL BLOCK
;
.=0
LUT_LINK:	.BLKL	2		; LINK TO NEXT LUT ENTRY
LUT_REF:	.BLKW	1		; REFERENCE COUNT
LUT_FLAGS:	.BLKW	1		; FLAGS
	LUTV_CTRLO=0			; CONTROL O CANCEL FLAG
	LUTV_ATTACHED=1			; DEVICE ATTACHED (VIA IO.ATT)
	LUTV_CTRLC=2			; CONTROL C ENABLED
	LUTV_PRM = 3			; PERMANENT ENTRY
	LUTV_UNSOL=4			; LUT ATTACHED FOR UNSOLICITED ASTS
LUT_CHAN:	.BLKL	1		; INPUT CHANNEL NUMBER
LUT_RSXNAME:	.BLKW	1		; RSX NAME
LUT_CHAR:	.BLKL	1		; THREE LONG WORDS OF CHARACTERISTICS
LUT_TYPE:	.BLKB	2		; 
	LUTC_RMS=0			; RMS TYPE
	LUTC_TRM=1			; TERMINAL
	LUTC_DISK=2			; DISK
	LUTC_TAPE=3			; TAPE
	LUTC_LP=4			; LINE PRINTER
	LUTC_CR=5			; CARD READER
		.BLKW	1		; BUFFER SIZE
		.BLKL	1		; CHARACTERISTICS
LUT_REALNAME:	.BLKB	16		; EVENTUAL REAL DEVICE NAME
LUT_INFONAME:	.BLKW	1		; RSX INFORMATIONAL NAME
LUT_INFOUNIT:	.BLKW	1		; RSX INFORMATIONAL UNIT NUMBER
LUT_CTRLC:	.BLKL	1		; CONTROL/C AST CONTROL BLOCK
LUT_MAXBLOCK:	.BLKL	1		; MAXBLOCK FOR DISK DEVICES
LUT_ROOT_DEVNAM:.BLKW	1		; RSX DEVICE NAME IF ROOTED DEVICE
LUT_ROOT_UNIT:	.BLKW	1		; RSX UNIT NUMBER IF ROOTED DEVICE
LUT_ROOT_DID:	.BLKW	3		; DIRECTORY ID OF ROOT DIRECTORY
LUT_SIZE:				; SIZE OF LUT IN BYTES
;
; ADDRESS REGION CONTROL BLOCK
;
.=0	
ADR_LOWLIM:	.BLKL	1		; LOW LIMIT
ADR_HIGHLIM:	.BLKL	1		; HIGH LIMIT
ADR_SIZE:
	.PSECT
;
; END OF $RSXDEF MACRO
;
	.ENDM	$RSXDEF
