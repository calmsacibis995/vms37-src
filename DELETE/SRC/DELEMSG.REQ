!
! REQUIRE file for DELETE utility, DELEMSG.REQ
!
!	Version 'V03-000'
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
! Created by Carol Peters, 03 May 1978, 10:46:00
!

!
! External declarations
!

EXTERNAL ROUTINE
    del$msg_number;					! Determines the numeric value of an error message

!
! Macros
!

MACRO

    !
    ! The PUT_MESSAGE macro SIGNALs an error to the catchall handler.
    !
    put_message (msg_symbol) =				! Send fixed message to the user
        %IF msg_symbol MOD 8 NEQ sts$k_severe		!    If this is not a severe error message,
            %THEN SIGNAL				!    then just signal the error;
            %ELSE SIGNAL_STOP %FI			!    otherwise, signal a fatal error.
							! Use as arguments to the SIGNAL,
                (del$msg_number (msg_symbol)		!    the number of the message,
                %IF %LENGTH GTR 1			!    and if more than one parameter to the macro,
                    %THEN , %REMAINING %FI)		!    the remaining parameters as well.
        %,

    put_messagex (msg_value) =				! Send variable message to user
	IF del$msg_number (msg_value) MOD 8 NEQ sts$k_severe
	THEN
	    SIGNAL (del$msg_number (msg_value)
        	    %IF %LENGTH GTR 1
                    %THEN , %REMAINING %FI)
	ELSE
	    SIGNAL_STOP (del$msg_number (msg_value)
                            %IF %LENGTH GTR 1
                            %THEN , %REMAINING %FI)
        %;

!
! End of REQUIRE file, DELEMSG.REQ
!
