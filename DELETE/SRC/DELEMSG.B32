MODULE delemsg (    ! Module for generation of message numbers
                    LANGUAGE (BLISS32),
                    IDENT = 'V03-000'
                    ) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:	DELETE Command
!
! ABSTRACT:
!
!	This module contains a routine that generates message numbers for the DELETE utility.
!
! ENVIRONMENT:
!
!	VAX/VMS operating system, unprivileged user mode utility,
!	operates at non-AST level.
!
!--
!++
!
! AUTHOR:	Carol Peters,	CREATION DATE:	04 May 1978 10:41
!
! REVISION HISTORY:
!
!--

!
! Table of contents
!

FORWARD ROUTINE
    del$msg_number;					! DELETE utility error message number generator

!
! Include files
!

LIBRARY 'SYS$LIBRARY:STARLET.L32';			! System definitions

REQUIRE 'SRC$:DELETE.REQ';				! Common DELETE definitions and macros

!
! Macros
!

!
! Equated symbols
!

!
! OWN storage
!

!
! External declarations
!

EXTERNAL
    del$cli_status	: BITVECTOR,			! Status word for DELETE utility
    del$severe_err	: BLOCK [, BYTE];		! Holds most severe error message encountered

GLOBAL ROUTINE del$msg_number (msg_id) =		! DELETE utility message number generator

!++
! Functional description
!
!	This routine adds a phony facility code to the message code so that
!	PUTMSG will not consider the message a system message. It also records
!	the highest severity message encountered.
!
! Calling sequence
!
!	del$msg_number (msg_id.rlu.v)
!
! Input parameters
!
!	msg_id	 - Message id
!
! Implicit inputs
!
!	DEL$SEVERE_ERR	- Current most severe error id
!
! Output parameters
!
!	none
!
! Implicit outputs
!
!	DEL$SEVERE_ERR	- Most severe error id may be updated
!
! Routine value
!
!	Altered message id
!
! Side effects
!
!	none
!
!--

    BEGIN

    MAP
	msg_id		: BLOCK [, BYTE];

    LOCAL
        new_msg_id	: BLOCK [1];			! Holds altered message ID.

!
! OR in a phony facility ID with the message code. This causes PUTMSG to
! regard the message as a nonsystem message, and to use the prefix passed as
! an argument to PUTMSG as the prefix for the output message.
!

    new_msg_id = .msg_id OR (3 ^ 16);			! Add the facility code. Three is a random
							! small number. It happens to be CLI's ID.

!
! Update the "most severe error" if the current error is more severe.
!

    IF NOT .new_msg_id AND				! If the current message is not a success message and
	(.del$severe_err OR				! either this is the first error message
	.new_msg_id [sts$v_severity] GTRU		! or the current message severity
        .del$severe_err [sts$v_severity])		! is greater than the previous severity,
    THEN
	del$severe_err = .new_msg_id OR			! update the most severe message id
				sts$m_inhib_msg;	! and turn on the "suppress message" indicator.

!
! Return the message id to the caller.
!

    RETURN .new_msg_id;					! Return the actual message id to the caller.

    END;

END
ELUDOM
