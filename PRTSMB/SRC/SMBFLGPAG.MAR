	.TITLE	SMBFLGPAG - FLAG PAGE ROUTINE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: VAX/VMS PRINT SYMBIONT
;
; ABSTRACT: PRINTS THE FLAG/BURST PAGE THAT PRECEDES PRINTOUTS
;
; ENVIRONMENT: NATIVE/USER NON-PRIVILEGED CODE.

;
; AUTHOR:	H.B. BOSWELL + LEN KAWELL, CREATION DATE: 21-APR-77
;
; MODIFIED BY:
;
;	V02-004	MLJ0068		Martin L. Jack,	8-Jan-1982  13:56
;		Recover from failure of LIB$FID_TO_NAME.  Take advantage of
;		new directory ID parameter.  Use !AF directive to guard
;		against bad input.
;
;	V02-003	GWF0084		Gary W. Fowler		17-Jul-1981
;		Change job name to ASCIC string.
;
;	V02-002	GWF0046		Gary W. Fowler		18-May-1981
;		Add call to LIB$FID_TO_NAME to provide full file spec on header
;		page.  Remove call to and routine GET_DIR.
;
;	V02-001	- 
;--
	.PAGE
	.SBTTL	DECLARATIONS


;
; INCLUDE FILES:
;


;
; MACROS:
;


;
; EQUATED SYMBOLS:
;


;
; OWN STORAGE:
;
	IMPURE_DATA

LEN_STRING = 100
DIR_NAME:				;DIRECTORY NAME STRING
	.BLKQ
DEVICE_DESC:				; DESCRIPTOR OF DEVICE NAME
	.BLKQ
F_STRING:
	.BLKB	LEN_STRING		; BUFFER FOR STRING


	PURE_SECTION

HDRSTRING:				;FAO STRING FOR HEADER LINE
	.WORD	7$-5$,0
	.LONG	5$
5$:
	.ASCII	\!123<\			;Set up region
	.ASCII	\VAX/VMS  \		;FILLER
	.ASCII	\!AF \			;USER NAME
	.ASCII	\!AF \			;ACCOUNT NAME
	.ASCII	\!17%D   \		;TIME FILE QUEUED
	.ASCII	\!AC: \			;PRINTER NAME
	.ASCII	\!17%D   \		;TIME FILE PRINTED
	.ASCII	\!AF \			;File specification
	.ASCII	\!>\			;End region
	.ASCII	\  VAX/VMS\		;FILLER
7$:
	.PAGE
	.SBTTL	FLAG PAGE ROUTINE
;++
; FUNCTIONAL DESCRIPTION: ROUTINE TO PRINT THE FLAG/BURST PAGE(S)
; FOR THE SYMBIONT.  PAPER IS ASSUMED TO BE AT TOP OF FORM.
;
;
; CALLING SEQUENCE:
;
;	BSB/JSB		SMB$FLAGPAGE
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	R11 - ADDRESS OF IMPURE DATA BLOCK
;	INIT PRINT MESSAGE TEXT
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	FLAG/BURST PAGE(S) PRINTED
;	I/O COMPLETION STATUS IN R0
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	R2,R3,R4,R5,R6,R7,R10 DESTROYED
;
;--



SMB$FLAGPAGE::				;PRINT HEADER PAGE
	MOVL	#LEN_STRING,DIR_NAME	;MAX LENGTH OF STRING
	MOVAB	F_STRING,DIR_NAME+4	;ADDRES OF STRING
	MOVL	SP,R10			;SAVE STACK POINTER FOR CLEANUP
	MOVAL	SD_T_MSGDATA(R11),R6	;SET ADDRESS OF DATA BLOCK
	MOVZBL	SIM$B_FLAGS(R6),R7	;COPY FLAGS
	PUSHAL	SIM$G_DIRID(R6)		; Directory ID
	PUSHAL	DIR_NAME		;GETS RETURNED LENGTH OF STRING
	PUSHAL	DIR_NAME		;ADDRESS OF DESCRIPTOR OF STRING
	PUSHAL	SIM$G_FILEID(R6)	;FILE ID
	MOVAB	DEVICE_DESC,R0		;SET ADDRESS OF DEVICE DESCRIPTOR
	PUSHL	R0			;ONTO STACK FOR CALL
	MOVZBL	SIM$T_VOLNAM(R6),(R0)+	;SET LENGTH OF DEVICE NAME
	MOVAB	SIM$T_VOLNAM+1(R6),(R0)	;SET ADDRESS
	CALLS	#5,LIB$FID_TO_NAME	;CONVERT TO FILE NAME STRING
	BLBS	R0,5$			; Br if successful
	MOVZBL	SIM$T_FILNAM(R6),DIR_NAME ; Set descriptor for name.typ;ver
	MOVAB	SIM$T_FILNAM+1(R6),DIR_NAME+4
5$:	PUSHL	DIR_NAME+4		;ADDRESS OF STRING
	PUSHL	DIR_NAME		;LENGTH OF STRING
	PUSHAL	SD_Q_PTIME(R11)		;TIME FILE WAS PRINTED
	PUSHAL	SIM$T_PRTNAM(R6)	;PRINTER NAME
	PUSHAL	SIM$Q_QTIME(R6)		;TIME FILE WAS QUEUED
	PUSHAB	SIM$T_ACNTNAM+1(R6)	;ADDRESS OF ACCOUNT NAME STRING
	MOVZBL	SIM$T_ACNTNAM(R6),-(SP)	;SIZE OF JOB NAME
	PUSHAB	SIM$T_USERNAM(R6)	;ADDRESS OF USER NAME
	PUSHL	#SMB$K_USERNAMSZ	;SIZE OF USER NAME
	MOVW	SD_W_TBUFSIZ(R11),-	;SET THE ORIGINAL SIZE OF BUFFER
		SD_W_TBUFCNT(R11)	;  AS CURRENT COUNT
	PUSHAQ	SD_Q_TBUFDES(R11)	;ADDRESS OF BUFFER DESCRIPTOR
	PUSHL	(SP)			;COPY THAT ADDRESS FOR RESULTANT LENGTH
	PUSHAL	HDRSTRING		;PUSH FORMAT STRING ADDRESS
	CALLS	#12,@#SYS$FAO		;FORMAT THE STRING
	MOVZWL	SD_W_TBUFCNT(R11),R0	;GET SIZE OF STRING
	ADDL3	#3,R0,R1		;LONG WORD ALLIGN
	BICB	#3,R1			;  THE STACK
	SUBL	R1,SP			;MAKE ROOM FOR THE DATA
	PUSHL	R0			;AND THE LENGTH
	MOVC3	R0,@SD_A_TBUFADR(R11),4(SP); COPY STRING INTO THE STACK
10$:
	BSBB	100$			;PRINT HEADER LINES
	BSBW	140$			;MOVE DOWN PAGE 2 LINES
	MOVL	#SMB$K_USERNAMSZ,R2	;SIZE OF USER NAME
	MOVAL	SIM$T_USERNAM(R6),R3	;ADDRESS OF USER NAME
	MOVL	#<2*256+1*256+1*256+25>,-; SET WIDE PRINTING PARAMETERS
		R4			;SPACOUT=25,WIDTH=1,HEIGTH=1,SPACING=2
	BSBW	SMB$CHRGEN		;PRINT USER NAME
	BLBC	R0,30$			;BR IF ERROR
	BSBB	140$			;POSITION PAPER
	MOVAL	SIM$T_FILNAM(R6),R3	;ADDRESS OF FILENAME STRING
	MOVL	#<2*256+2*256+2*256+4>,-; SET MAGIC CONSTANT FOR WIDLINE
		R4			;SPACOUT=4,WIDTH=2,HEIGTH=2,SPACING=2
	PUSHL	R4			;SAVE THAT VALUE FOR TYPE/VERSION PRINT
	LOCC	#^A/./,#10,1(R3)	;TRY TO LOCATE THE END OF NAME
	BEQL	20$			;BR IF WENT TO END AND DOT NOT FOUND
	INCL	R1			;ADJ POINTER OF NAME/TYPE SEPARATOR
20$:
	PUSHL	R1			;SAVE ADDRESS OF FIRST BYTE IN TYPE
	MOVZBL	(R3)+,-(SP)		;PUSH LENGTH OF ENTIRE NAME STRING
	SUBL3	R3,R1,R2		;FIND LENGTH OF FILENAME PART
	SUBL	R2,(SP)			;NOW LENGTH OF TYPE AND VERSION
	BSBW	SMB$CHRGEN		;PRINT FILE NAME
	BLBC	R0,30$			;BR IF ERROR
	BSBB	140$			;SPACE DOWN THE PAGE 2 LINES
	POPR	#^M<R2,R3,R4>		;GET TYPE/VERSION INFORMATION
	BSBW	SMB$CHRGEN		;AND PRINT THAT
	BLBC	R0,30$			;BR IF ERROR
	BSBB	140$			;MAKE SOME BLANK LINES
	MOVL	#SMB$K_USERNAMSZ,R2	;SIZE OF USER NAME
	MOVAL	SIM$T_USERNAM(R6),R3	;ADDRESS OF USER NAME
	MOVL	#<2*256+1*256+1*256+25>,-; SET WIDE PRINTING PARAMETERS
		R4			;SPACOUT=25,WIDTH=1,HEIGTH=1,SPACING=2
	BSBW	SMB$CHRGEN		;PRINT USER NAME
	BLBC	R0,30$			;BR IF ERROR
	BSBB	140$			;POSITION PAPER
	BSBB	100$			;PRINT TRAILER
	BBCC	#PQR$V_BRSTPAG,R7,30$	;BR IF NO BURST INDICATOR
	BSBB	140$			;PRINT 2 BLANK LINES
	BSBB	100$			;PRINT BURST INDICATOR
	BSBB	100$			;PRINT BURST INDICATOR AGAIN
	BSBB	140$			;PRINT 2 BLANK LINES
	BRW	10$			;PRINT FLAG PAGE AGAIN
30$:
	MOVL	R10,SP			;RESET THE STACK POINTER
	RSB				;RETURN
;
; LOCAL SUBROUTINE FOR HEADER/TRAILER PRINTING
;
100$:
	MOVL	#3,R3			;LOOP COUNT
110$:
	MOVL	4(SP),R0		;LENGTH OF STRING
	MOVAL	8(SP),R1		;ADDRESS OF THE STRING
	CLRL	R2			;SET I/O STATUS INDEX
	BSBW	SMB$WRITELINN		;WRITE WITH NORMAL SPACING
	BLBC	R0,30$			;BR IF ERROR
	SOBGTR	R3,110$			;PRINT 4 TIMES
	RSB

;
; LOCAL SUBROUTINE FOR SPACING DOWN THE PAGE
;
140$:
	MOVZBL	#^A\0\,SD_G_QIOBLK+QIO$_P4(R11) ;PUT CC IN QIO BLOCK
	MOVL	SD_A_TBUFADR(R11),R1	;TEMP BUFFER ADDRESS (DUMMY ADDRESS)
	CLRL	R0			;NUMBER OF BYTE TO PRINT IS 0
	CLRL	R2			;SET I/O STATUS INDEX
	BSBW	SMB$WRITELINS		;OUTPUT THE DATA
	BLBC	R0,30$			;BR IF ERROR
	RSB

	.END
