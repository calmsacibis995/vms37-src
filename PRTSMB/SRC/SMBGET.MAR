	.TITLE	SMBGET - GET RECORD FROM FILE AND PRINT IT
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: VAX/VMS PRINT SYMBIONT
;
; ABSTRACT: GET A RECORD FROM THE INPUT FILE
;
; ENVIRONMENT: NATIVE/USER NON-PRIVILEGED CODE.

;
; AUTHOR:	H.B. BOSWELL + LEN KAWELL, CREATION DATE: 21-APR-77
;
; MODIFIED BY:
;
;	V02-002	MLJ42329	Martin L. Jack,	5-Jan-1982  19:07
;		Correct problem with FORTRAN no-advance carriage control.  Move
;		setting of RAB$L_UBF to correct problem with buffer corruption
;		on first line of file.
;
; 01	- 
;--
	.PAGE
	.SBTTL	DECLARATIONS

	PURE_SECTION

;
; INCLUDE FILES:
;

;	[PRTSMB.SRC]SMBPRE.MAR


;
; MACROS:
;


;
; EQUATED SYMBOLS:
;

	$SHRDEF				;SHARED MESSAGE DEFINTIONS
LF=10					;LINE FEED
FF=12					;FORM FEED

;
; OWN STORAGE:
;

SEQNODESC:
	STRING_DESC	<!5UW!_>	;SEQ NO. CONVERSION STRING FOR FAO
	.PAGE
	.SBTTL	GET AND QUEUE LINE
;++
; FUNCTIONAL DESCRIPTION: ROUTINE TO GET A LINE FROM THE FILE
; AND QUEUE IT TO THE PRINTER.  
;
;
; CALLING SEQUENCE:
;
;	BSB/JSB		SMB$GET
;
; INPUT PARAMETERS:
;
;	R2 - I/O STATUS INDEX
;
; IMPLICIT INPUTS:
;
;	R11 - ADDRESS OF IMPURE DATA BLOCK
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	IF EOF OCCURED - STATE CHANGED TO EOF_CLOSE
;
; COMPLETION CODES:
;
;	IF GET ERROR - R0 = RMS STATUS
;			GETERR FLAG SET
;
; SIDE EFFECTS:
;
;	NONE
;
;--


	.ENABL	LSB

SMB$GET::
	PUSHR	#^M<R3>			;SAVE R3

;
; CHECK IF OVER PAGE COUNT
;

	TSTW	SD_T_MSGDATA+SIM$W_PAGCNT(R11) ;ANY PAGE LIMIT SPECIFIED?
	BEQL	20$			;IF NO - PRINT ENTIRE FILE
	MOVL	#RMS$_EOF,R0		;ASSUME OVER PAGE COUNT
	CMPW	SD_W_PAGE(R11),-	;IS IT OVER PAGE COUNT?
		SD_T_MSGDATA+SIM$W_PAGCNT(R11) 
	BLEQU	20$			;BR IF NO
10$:
	BRW	130$			;BR IF YES - FAKE EOF

;
; DO THE GET
;

20$:	MOVAL	SD_G_RAB(R11),R3	;GET ADDR OF RAB
	MOVL	SD_Q_BUFPNT(R11)[R2],RAB$L_UBF(R3)
	$GET	RAB=(R3)		;GET A RECORD
	INCL	SD_L_GETCNT(R11)	;ADD 1 TO GET COUNT
	BLBC	R0,10$			;BR IF ERROR - PROBABLY EOF

;
; SET BUFFER ADDRESS AND LENGTH
;

30$:
	MOVL	RAB$L_RBF(R3),R1	;GET ADDR OF RECORD

; *** NOTE *** MOVZWL SETS COND CODES. CHECKED AT FTN CC AND AT 100$

	MOVZWL	RAB$W_RSZ(R3),R0	;GET LENGTH OF RECORD

;
; CHECK FOR FORTRAN CARRIAGE CONTROL
;

	BBC	#FAB$V_FTN,SD_G_FAB+FAB$B_RAT(R11),90$ ;BR IF NOT FTN CC
	BNEQ	40$			;BR IF NOT NULL (COND CODE SET ON MOVZWL)
	MOVB	#^A\ \,R3		;SET BLANK CC - LENGTH ALREADY ZERO
	BRB	80$			;BR TO SET CARRIAGE CONTROL
40$:	DECL	R0			;ADJUST COUNT FOR CARRAIGE CONTROL BYTE
	MOVB	(R1)+,R3		;GET CARRIAGE CONTROL BYTE
	CMPB	#^A\1\,R3		;WILL THIS BE A FORM FEED
	BNEQ	80$			;BR IF NO
	SETBIT	SD_V_FFREQ,SD_B_GEN_FLAGS(R11) ;SET FORM FEED REQUIRED FLAG
	MOVB	#^A\ \,R3		;FORM FEED HANDLED BY FFREQ FLAG
80$:
	MOVZBL	R3,SD_G_QIOBLK+QIO$_P4(R11) ;SET UP CARRIAGE CONTROL
	BRB	110$

;
; CHECK FOR PRINT FILE CARRIAGE CONTROL
;

90$:	BBC	#FAB$V_PRN,SD_G_FAB+FAB$B_RAT(R11),95$ ; BR IF NOT PRINT FILE
	CMPB	SD_T_SQBUF(R11),#FF!128	;IS PREFIX A FORM FEED?
	BNEQ	93$			;BR IF NOT
	SETBIT	SD_V_FFREQ,SD_B_GEN_FLAGS(R11) ;SET FORM FEED REQUIRED FLAG
	CLRB	SD_T_SQBUF(R11)		;FORM FEED HANDLED BY FFREQ FLAG
93$:	ASHL	#16,SD_T_SQBUF(R11),-	;SET CARRIAGE CONTROL
		SD_G_QIOBLK+QIO$_P4(R11)
	TSTL	R0			;SET Z BIT FOR BYTE COUNT

;
; CHECK FOR INTERNAL CARRIAGE CONTROL
;

95$:	BBS	#SD_V_INTRNLCC,SD_B_GEN_FLAGS(R11),120$ ;BR IF INTERNAL CARRIAGE CONTROL

;
; CHECK FOR FORM FEED IN IMPLIED CARRIAGE CONTROL
;

100$:
	BEQL	110$			;BR IF NULL (COND CODE SET ON MOVZWL)
	CMPB	#FF,(R1)		;IS IT A FF
	BNEQ	110$			;BR IF NO
	SETBIT	SD_V_FFREQ,SD_B_GEN_FLAGS(R11) ;SET FORM FEED REQUIRED FLAG
	DECL	R0			;SUBTRACT 1 FOR FORM_FEED
	BEQL	20$			;IF NUL LINE - GET ANOTHER
	INCL	R1			;ADJUST PAST CARRAIGE CONTROL FIELD
110$:					;
	BBS	#FAB$V_PRN,SD_G_FAB+FAB$B_RAT(R11),120$ ;BR IF PRINT FILE
;
; CHECK FOR SEQUENCE NUMBERS
;

	CMPB	#FAB$C_VFC,SD_G_FAB+FAB$B_RFM(R11) ;IS IT SEQUENCED
	BNEQ	120$			;BR IF NO
	SUBL	#6,R1			;MOVE ADDR BACK TO SEQ BUF
	ADDL	#6,R0			;ADD 6 FOR SEQ NO AND TAB
	PUSHR	#^M<R0,R1>		;SAVE REGS - MAKES STRING DESC FOR FAO
	MOVL	SP,R3			;GET ADDR OF STRING DESC
	$FAO_S	SEQNODESC,,(R3),-	;CONVERT SEQ NO TO ASCII
		SD_T_SQBUF(R11)
	POPR	#^M<R0,R1>		;RESTORE REGS
	BRB	120$			;PRINT THE LINE
 

;
; PRINT THE LINE
;

120$:
	BBC	#PQR$V_DOUBLE,SD_T_MSGDATA+SIM$B_FLAGS(R11),125$ ;BR IF NO DBL SPACE
	MOVZBL	#^A\0\,SD_G_QIOBLK+QIO$_P4(R11) ;SET DOUBLE SPACE
125$:	BSBW	SMB$WRITELINE		;PRINT THE LINE
	BRB	150$			;RETURN

;
; GET ERROR - CHECK IT
;

130$:
	CMPL	#RMS$_RTB,R0		;WAS THE RECORD TOO BIG
	BNEQ	140$			;BR IF NO
	BRW	30$			;BR IF YES - PRINT TRUNCATED
140$:
	MOVB	#STATE$_EOF_CLOS,SD_B_STATE(R11) ;SET EOF
	CMPL	#RMS$_EOF,R0		;WAS IT EOF
	BEQL	150$			;BR IF YES
	SETBIT	SD_V_GETERR,SD_B_ERR_FLAGS(R11) ;SET GET ERROR
	PUSHL	SD_G_RAB+RAB$L_STV(R11)	;RMS STATUS VALUE
	PUSHL	R0			;RMS STATUS CODE
	PUSHAL	SD_Q_FILENAME(R11)	;ADDR OF FILENAME DESC
	PUSHL	#1			;1 FAO ARG
	PUSHL	#<4@16>!SHR$_READERR!4	;CONDITION CODE
	CALLS	#5,W^LIB$SIGNAL		;SIGNAL THE ERROR
150$:
	POPR	#^M<R3>			;RESTORE REGS
	RSB				;RETURN

	.DSABL	LSB

	.END
