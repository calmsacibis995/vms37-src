	.TITLE	SMBHANDLE - PRINT SYMBIONT CONDITION HANDLER
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	VAX/VMS PRINT SYMBIONT
;
; ABSTRACT:	CONDITION HANDLER
;
;
; ENVIRONMENT:	USER MODE NON-PRIVILEGED CODE
;
; AUTHOR:	LEN KAWELL, CREATION DATE:19-MAY-78
;
; MODIFIED BY:
;
;	, : VERSION
; 01	- 
;--
	.PAGE
	.SBTTL	DECLARATIONS


;
; INCLUDE FILES:
;
;	[PRTSMB.SRC]SMBPRE.MAR

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;
	SPACE	= ^A\ \			;ASCII SPACE
	$CHFDEF				;CONDTION HANDLER DEFINTIONS
	$OPCDEF				;OPCOM DEFINTIONS
	$SHRDEF				;SHARED MESSAGE DEFINITIONS

;
; OWN STORAGE:
;

	IMPURE_DATA

;
; FACILITY NAME
;
FACILITY_DESC:
	.BLKL	1
	.LONG	10$
10$:	.ASCII	/PRTSMB_/
FACILITY_LEN=.-10$
LP_NAME:
	.BLKB	16

;
; SIGNAL NAME
;
SIG_NAM:
	.BLKL	1

	.PAGE
	.SBTTL	CONDTITION HANDLER

	PURE_SECTION	NAME=SMB_HANDLER
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE IS THE CONDITION HANDLER FOR THE PRINT
;	SYMBIONT.
;
; CALLING SEQUENCE:
;
;	CALLED BY SIGNALING OR AN EXCEPTION
;
; INPUT PARAMETERS:
;
;	CHF$L_SIGARGLST(AP) IS ADDR OF SIGNAL ARGUMENT LIST
;	CHF$L_MCHARGLST(AP) IS ADDR OF MECHANISM ARGUMENT LIST
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	IF CONDITION WAS AN EXCEPTION, IMAGE IS EXITED
;
;--
SMB$HANDLER::
	.WORD	^M<R2,R3,R4,R5,R11>
	MOVAL	W^SMB$G_DATA,R11	;GET ADDR OF GLOBAL DATA
	MOVL	CHF$L_SIGARGLST(AP),R2	;GET ADDR OF SIGNAL ARGUMENTS
	SUBW	#2,CHF$L_SIG_ARGS(R2)	;DON'T PASS PC & PSL
	MOVL	CHF$L_SIG_NAME(R2),W^SIG_NAM ;SAVE SIGNAL NAME
	MOVAL	SD_T_MSGDATA+SIM$T_PRTNAM(R11),R0 ;GET ADDR OF PRINTER NAME
	MOVZBL	(R0)+,R1		;GET PRINTER NAME LENGTH
	ADDB3	#FACILITY_LEN,R1,W^FACILITY_DESC ;SET FACILITY/PRINTER LENGTH
	MOVC3	R1,(R0),W^LP_NAME	;CONCATENATE FACILITY AND PRINTER
	PUSHAQ	W^FACILITY_DESC		;SET FACILITY NAME DESC ADDR
	PUSHAW	W^ACTION		;SET ACTION ROUTINE ADDR
	PUSHL	CHF$L_SIGARGLST(AP)	;SET ADDR OF SIGNAL ARG LIST
	CALLS	#3,SYS$PUTMSG		;OUTPUT THE MESSAGE
	TSTW	W^SIG_NAM+2		;SYSTEM EXCEPTION?
	BNEQ	10$			;BR IF NOT
	$EXIT_S				;ELSE - EXIT
10$:
	RET

;
; SYS$PUTMSG ACTION ROUTINE
;
ACTION:	.WORD	^M<R2,R3,R4,R5,R6,R11>
	MOVL	4(AP),R2		;GET ADDR OF STRING DESC
	CMPW	#<SHR$_OPENIN!4>&^XFFFF,- ;OPEN ERROR?
		W^SIG_NAM
	BEQLU	10$			;BR IF YES
	CMPW	#<SHR$_READERR!4>&^XFFFF,- ;READ ERROR?
		W^SIG_NAM
	BEQLU	10$			;BR IF YES

	MOVZBL	#128,R6			;ASSUME MESSAGE LENGTH
	CMPW	(R2),R6			;IS MESSAGE LONGER?
	BGEQ	5$			;BR IF YES
	MOVZWL	(R2),R6			;ELSE - USE ACTUAL LENGTH
5$:	SUBL	R6,SP			;MAKE OPCOM MESSAGE BUFFER
	MOVC3	R6,@4(R2),(SP)		;MOVE MESSAGE TO THE BUFFER
	PUSHL	#0			;NO REQUEST NUMBER
					;CREATE REQUEST HEADER
	MOVZWL	#OPC$_RQ_RQST!<-	; REQUEST TYPE
		<OPC$M_NM_CENTRL!-	; OPERATORS TO BE SENT MESSAGE
		 OPC$M_NM_DEVICE!-
		 OPC$M_NM_PRINT>@8>,-(SP)
	PUSHL	SP			;CREATE OPCOM MESSAGE DESC
	ADDL3	R6,#4+4,-(SP)		;...
	MOVL	SP,R0			;GET ADDR OF MESSAGE DESC
	$SNDOPR_S (R0)			;SEND THE MESSAGE TO THE OPS
	BRB	20$

10$:	MOVAL	W^SMB$G_DATA,R11	;GET ADDR OF GLOBAL DATA
	$QIOW_S	CHAN=SD_G_QIOBLK+QIO$_CHAN(R11),- ;PRINT MESSAGE
		FUNC=#IO$_WRITELBLK,-
		P1=@4(R2),-
		P2=(R2),-
		P4=#SPACE
20$:	CLRL	R0			;DON'T PUT MESSAGE ELSEWHERE
	RET

	.END
