	.NLIST
	.TITLE	SMBPRE - PRINT SYMBIONT PREFIX FILE
	.IDENT	'V03-001'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:	VAX/VMS PRINT SYMBIONT PROCESS
;
; ABSTRACT:	ASSEMBLER PREFIX FILE
;
; ENVIRONMENT:
;
; AUTHOR:	H.B.BOSWELL + LEN KAWELL, CREATION DATE: 21-APR-77
;
; MODIFIED BY:
;
;	V03-001	MLJ0082		Martin L. Jack,	15-Mar-1982  16:10
;		Add completion status for open failure.
;
;	V02-002	GWF0002		Gary W. Fowler		11-Sep-1980
;		Double the size of the print symbiont's input buffer.
;
;	V02-002	GWF0090		Gary W. Fowler		23-Jul-1981
;		Add second user buffer.
;--
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	.LIBRARY	\EXECML$\

;
; MACROS:
;
 
;
; MACRO TO SET OR CLEAR A BIT BY BIT NUMBER
;
;CALL:
;	SETBIT	BITNUM,FLAGWORD
; OR:
;	CLRBIT	BITNUM,FLAGWORD
;
; WHERE:
;	BITNUM IS ANY VALID SOURCE OPERAND SECIFYING THE BIT
;		OFFSET FROM THE FLAG BASE TO SET/CLEAR
;
;	FLAGWORD IS ANY VALID DESTINATION OPERAND
;
	.MACRO	SETBIT	VAL,FLAG
	.NTYPE	_$$_	VAL
	.IF EQ	<_$$_-^X0EF>
	.IF NDF	VAL
	BBSS	S^#VAL,FLAG,.+1
	.IFF
	.IF LT <VAL-8>
	BISB	#<1@VAL>,FLAG
	.IFF
	BBSS	#VAL,FLAG,.+1
	.ENDC
	.ENDC
	.IFF
	BBSS	VAL,FLAG,.+1
	.ENDC
	.ENDM	SETBIT
;
	.MACRO	CLRBIT	VAL,FLAG
	.NTYPE	_$$_	VAL
	.IF EQ	<_$$_-^X0EF>
	.IF NDF	VAL
	BBCC	S^#VAL,FLAG,.+1
	.IFF
	.IF LT <VAL-8>
	BICB	#<1@VAL>,FLAG
	.IFF
	BBCC	#VAL,FLAG,.+1
	.ENDC
	.ENDC
	.IFF
	BBCC	VAL,FLAG,.+1
	.ENDC
	.ENDM	CLRBIT
 
;
; PROGRAM SECTION DEFINITION MACROS
;	ARGUMENTS ARE:
;		1) SECTION NAME (KEY WORD IS NAME)
;		2) ALIGNMENT    (KEY WORD IS ALIGN)
;
;	IN ALL CASE, ARGUMENTS ARE OPTIONAL
;
; MACRO TO GENERATE A PURE SECTION - CODE AND DATA - FOR LOCALITY
;
	.MACRO	PURE_SECTION	NAME=SMB_PURE,ALIGN=LONG

	.PSECT	NAME	EXE,RD,NOWRT,ALIGN

	.ENDM	PURE_SECTION
;
; MACRO TO GENERATE IMPURE DATA SEGMENT
;
	.MACRO	IMPURE_DATA  NAME=SMB_RWDATA,ALIGN=LONG
 
	.PSECT	NAME	NOEXE,WRT,RD,ALIGN
 
	.ENDM	IMPURE_DATA
;
; MACRO TO GENERATE A STRING WITH DESCRIPTOR
;
;	STRING_DESC <STRING> 
;
; WHERE:
;	<STRING> IS THE STRING TO BE USED
;
	.MACRO	STRING_DESC ST,?L1,?L2
 
	.WORD	L2-L1,0
	.LONG	L1
L1:
	.ASCII	\ST\
L2:
	.ENDM
;
; MACRO TO SIGNAL AN ERROR IF R0 DOESN'T CONTAIN SUCCESS
;
	.MACRO	IF_ERROR CONDITION,P1,P2,P3,P4,P5,P6,P7,P8,?L1

	BLBS	R0,L1
	$$ARGS$$=1
	.IRP	ARG,<P8,P7,P6,P5,P4,P3,P2,P1>
	.IF NB	ARG
	PUSHL	ARG
	$$ARGS$$=$$ARGS$$+1
	.ENDC
	.ENDR
	PUSHL	#CONDITION
	CALLS	#$$ARGS$$,W^LIB$SIGNAL
L1:
	.ENDM	IF_ERROR

;
; MACRO TO SIGNAL A CONDITON
;
	.MACRO	SIGNAL CONDITION,P1,P2,P3,P4,P5,P6,P7,P8

	$$ARGS$$=1
	.IRP	ARG,<P8,P7,P6,P5,P4,P3,P2,P1>
	.IF NB	ARG
	PUSHL	ARG
	$$ARGS$$=$$ARGS$$+1
	.ENDC
	.ENDR
	PUSHL	#CONDITION
	CALLS	#$$ARGS$$,W^LIB$SIGNAL

	.ENDM	SIGNAL

;
; DEFINE THE SMB MGR FLAGS
;
	$GBLINI
	$VIELD	PQR,0,<-
		<DELETE,,M>,-
		<FLAGPAG,,M>,-
		<BRSTPAG,,M>,-
		<DOUBLE,,M>,-
		<NOFEED,,M>,-
		<PAGHDR,,M>,-
		>
;
; DEFINE SOME CONSTANT VALUES
;
;
; DEFINE DONE MESSAGE MODIFIERS
;
	$DEFINI	MOD			;DEFINE DONE MSG MODIFIERS

$EQULST	MOD$_,,1,8,<-
	<SUCCESS>-			;FILE PRINTED SUCCESSFULLY
	>
$EQULST	MOD$_,,4,8,<-			;UNSUCESSFUL CODES
	<ABORT>-			;PRINTING WAS ABORTED
	<INPERR>-			; $GET error on input file
	<PRTERR>-			;PRINTER RELATED ERROR
	<OPNERR>-			; $OPEN error on input file
	>

	$DEFEND	MOD

	$MSGDEF				;SYSTEM WIDE MESSAGE CODE

SMB$K_GENEFN=0				;GENERAL EVENT FLAG
; *** NOTE *** ADJANCENCY OF PRINTER EVENT FLAGS ASSUMED
SMB$K_LPEFN0=1				;PRINTER EVENT FLAGS
SMB$K_LPEFN1=2				;
SMB$K_MBEFN=3				;MAILBOX EVENT FLAG
SMB$K_TOFEFN=4				;TOP OF FORMS EVENT FLAG
SMB$K_TIMEFN=5				;EVENT FLAG FOR TIMER OPERATION
SMB$K_LBUFSIZ=512			;LINE BUFFER SIZE
SMB$K_TBUFSIZ=SMB$K_LBUFSIZ		;TEMP BUFFER SIZE 
SMB$K_USERNAMSZ=12			;SIZE OF USER NAME
SMB$K_ACNTNAMSZ= 8			;SIZE OF ACCOUNT NAME FIELD
SMB$K_HEADERSZ=	52			;SIZE OF PAGE HEADER BUFFER

	$FABDEF				;DEFINE FAB OFFSETS
	$RABDEF				;DEFINE RAB OFFSETS
	$NAMDEF				;DEFINE NAME BLOCK OFFSETS
	$QIODEF				;DEFINE QIO BLOCK OFFSETS

;
; DEFINE SYMBIONT STATES
;
	$DEFINI	STATE

$EQULST	STATE$_,,0,1,<-
	<IDLE>-				;SYMBIONT IDLE
	<ASNDEV>-			;ASSIGNING DEVICE
	<OPEN>-				;FILE OPEN
	<FLAGPAGE>-			;PRINTING FLAG PAGE
	<GET_PRIN>-			;DOING I/O
	<EOF_CLOS>-			;EOF THRU CLOSE
	<SUSPEND>-			;SUSPENDED
	>

	$DEFEND	STATE
;
; DEFINE SYMBIONT INITIATE MESSAGE FORMAT
;
	$DEFINI	SIM
 
$DEF	SIM$W_MSGTYP	.BLKW	1	;SYMBIONT MANAGER MESSAGE TYPE CODE
$DEF	SIM$W_REST	.BLKW	1	;REST OF SHORT MSGS (ANY BUT INIT PRINT)
$DEF	SIM$L_UIC	.BLKL	1	;UIC OF THE REQUESTING PROCESS
$DEF	SIM$T_USERNAM	.BLKB	SMB$K_USERNAMSZ ;USER NAME - NOT COUNTED - BLANK FILLED
$DEF	SIM$Q_QTIME	.BLKL	2	;TIME JOB WAS QUEUED FOR PRINTING
$DEF	SIM$T_VOLNAM	.BLKB	16	;DEVICE ID FIELD - COUNTED STRING
$DEF	SIM$G_FILEID	.BLKW	3	;FILE ID FIELD
$DEF	SIM$G_DIRID	.BLKW	3	;DIR ID FIELD
$DEF	SIM$B_FLAGS	.BLKB	1	;FILE PRINT FLAGS
$DEF	SIM$B_FILCOPY	.BLKB	1	;NUMBER OF COPIES OF THIS FILE
$DEF	SIM$W_PAGCNT	.BLKW	1	;MAXIMUM NUMBER OF PAGES TO PRINT
$DEF	SIM$T_PRTNAM	.BLKB	16	;DEV NAME FOR PRINTING - COUNTED STRING
$DEF	SIM$T_FILNAM	.BLKB	20	;FILE NAME TO PRINT - COUNTED STRING
$DEF	SIM$T_ACNTNAM	.BLKB	16	;USERS ACCOUNT NAME
$DEF	SIM$K_SIZE			;SIZE OF THIS STRUCTURE
 
	$DEFEND	SIM
;
; DEFINE SYMBIONT DATA VECTOR
;
	$DEFINI	SD
 
$DEF	SD_W_MBCHAN	.BLKW	1	;MAIL BOX INPUT CHANNEL
; *** NOTE *** ADJACENCY OF ERR_FLAGS AND GEN_FLAGS ASSUMED
$DEF	SD_B_ERR_FLAGS	.BLKB	1	;ERROR FLAGS INCLUDING ABORT
	_VIELD	SD,0,<-
		<ABORT,,M>,-		;ABORT PRINTING THE FILE
		<GETERR,,M>,-		;ERROR ON INPUT FILE
		<OPENERR,,M>,-		;ERROR ON OPEN
		<PRINTERR,,M>,-		;ERROR ON LINE PRINTER
		>
$DEF	SD_B_GEN_FLAGS	.BLKB	1	;GENERAL FLAGS
	_VIELD	SD,0,<-
		FLGPAGDONE,-		;FLAG PAGE IS DONE
		GOOD_WAKE,-		;'GOOD WAKE' FLAG FOR MAIN CODE
		INTRNLCC,-		;INTERNAL CARRIAGE CONTROL FILE
		FFREQ,-			;FORM FEED REQUIRED BEFORE PRINTING
		>
$DEF	SD_B_STATE	.BLKB	1	;SYMBIONT STATE
$DEF	SD_Q_MIOSB	.BLKQ	1	;MESSAGE I/O STATUS BLOCK
$DEF	SD_W_MBREADLEN	.BLKW	1	;MAIL BOX READ LENGTH
$DEF	SD_Q_TOFIOSB	.BLKQ	1	;TOP OF FORMS I/O STATUS BLOCK
; *** NOTE *** ADJACENCY OF IOSB0 AND IOSB1 ASSUMED
$DEF	SD_Q_IOSB0	.BLKQ	1	;I/O STATUS BLOCK 0
$DEF	SD_Q_IOSB1	.BLKQ	1	;I/O STATUS BLOCK 1
$DEF	SD_Q_TBUFDES			;TEMP BUFFER DESCRIPTOR
$DEF	SD_W_TBUFCNT	.BLKW	1	;NUMBER OF BYTES IN THE BUFFER
$DEF	SD_W_TBUFSIZ	.BLKW	1	;SIZE OF THE BUFFER
$DEF	SD_A_TBUFADR	.BLKL	1	;ADDRESS OF THE TEMP BUFFER (LBUF)
$DEF	SD_Q_PTIME	.BLKQ	1	;TIME FILE WAS PRINTED
$DEF	SD_W_JBCCHAN	.BLKW	1	;CHANNEL TO THE JOB CONTROLLER
$DEF	SD_W_MBUNIT	.BLKW	1	;MAILBOX UNIT - FOR $DELMBX
$DEF	SD_L_GETCNT	.BLKL	1	;TOTAL $GET COUNT
$DEF	SD_L_QIOCNT	.BLKL	1	;TOTAL QIO COUNT
$DEF	SD_B_LTPCNT	.BLKB	1	;LINES THIS PAGE COUNT
$DEF	SD_B_MAXLTP	.BLKB	1	;MAX LINES THIS PAGE
$DEF	SD_L_LINECNT	.BLKL	1	;TOTAL LINE COUNT
$DEF	SD_B_PAGELEN	.BLKB	1	;PRINTER PAGE LENGTH
$DEF	SD_B_PAGEWIDTH	.BLKB	1	;PRINTER PAGE WIDTH
$DEF	SD_Q_TOP_FORMS	.BLKQ	1	;TOP OF LAST PAGE RECORD FILE ADDR
$DEF	SD_T_MSGDATA	.BLKB	SIM$K_SIZE ;THE MESSAGE BUFFER
.=<.+3>&-4		;LONG WORD ALIGN
$DEF	SD_G_QIOBLK	.BLKL	13	;QIO ARGUMENT BLOCK
$DEF	SD_G_FAB	.BLKB	FAB$C_BLN ;FILE FAB
$DEF	SD_G_RAB	.BLKB	RAB$C_BLN ;FILE RAB
$DEF	SD_G_NAM	.BLKB	NAM$C_BLN ;FILE NAME BLOCK
; *** NOTE *** ADJACENCY OF SQBUF AND LBUF ASSUMED
$DEF	SD_T_SQBUF	.BLKB	6	;BUFFER FOR SEQUENCE NUMBER AND TAB
$DEF	SD_G_MSGTOMGR			;SYMBIONT MSG TO MGR BUFFER
$DEF	SD_T_TBUF			;TEMP BUFFER ADDRESS
$DEF	SD_T_LBUF	.BLKB	SMB$K_LBUFSIZ ;PRINTER BUFFER 
$DEF	SD_T_HDBUF	.BLKB	SMB$K_HEADERSZ ;PAGE HEADER BUFFER
$DEF	SD_W_HEAD_L	.BLKW	1	;ACTUAL HEADER LENGTH
$DEF	SD_W_PAGE	.BLKW	1	;PAGE NUMBER
$DEF	SD_Q_FILENAME	.BLKQ	1	;FILE NAME DESCRIPTOR
$DEF	SD_T_LBUF1	.BLKB	SMB$K_LBUFSIZ ; SECOND PRINT BUFFER
$DEF	SD_Q_BUFPNT	.BLKQ	1	; ADDRESSES OF PRINT BUFFERS
$DEF	SD_K_SIZE			;SIZE OF THIS DATA STRUCTURE
 
	$DEFEND	SD
	.LIST
