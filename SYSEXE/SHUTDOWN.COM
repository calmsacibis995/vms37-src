$ ! SHUTDOWN.COM -- Orderly system shutdown command procedure.
$ !
$ ! INPUTS:
$ !	P1 - Number of minutes until shutdown
$ !	P2 - Reason for shutdown
$ !	P3 - "Spin down the disks?" flag (Yes/No)
$ !	P4 - "Invoke SYSHUTDWN.COM?" flag (Yes/No)
$ !	P5 - Expected uptime
$ !	P6 - "Enable automatic reboot?" flag (Yes/No)
$ !
$ MESSAGE_SENT = "FALSE"
$ REQPRIVS = "CMKRNL,SYSNAM,OPER,WORLD,SYSPRV,EXQUOTA"
$ PREVDIR = F$LOGICAL("SYS$DISK")+F$DIRECTORY()
$ PREVPRIVS = F$SETPRV(REQPRIVS)
$ ON CONTROL_Y THEN GOTO CLEANUP
$ IF .NOT. F$PRIVILEGE(REQPRIVS) THEN GOTO NOPRIV
$ SET DEFAULT SYS$SYSTEM
$ SET NOON
$ WRITE SYS$OUTPUT ""
$ WRITE SYS$OUTPUT "	System shutdown command procedure."
$ WRITE SYS$OUTPUT ""
$
$GET_MINUTES:
$ TOGO = P1
$GET_MIN:
$ IF TOGO .EQS. "" -
	THEN INQUIRE/NOPUNCTUATION TOGO "How many minutes until shutdown [0]? "
$ TOGO = F$INTEGER(TOGO)
$ IF $STATUS THEN GOTO GET_REASON
$ TOGO = ""
$ GOTO GET_MIN
$
$GET_REASON:
$ WHY = P2
$ IF WHY .EQS. "" -
	THEN READ/PROMPT="Reason? " SYS$COMMAND WHY
$
$GET_UNLOAD:
$ UNLOAD = P3
$ IF UNLOAD .EQS. "" -
	THEN INQUIRE/NOPUNCTUATION UNLOAD "Do you want to spin down the disks [No]? "
$ IF UNLOAD THEN GOTO 10
$ UNLOAD := /NOUNLOAD
$ DEFINE OPC$UNLOAD N
$ GOTO 20
$10:
$ UNLOAD := /UNLOAD
$ DEFINE OPC$UNLOAD Y
$20:
$
$ UPTIME = P5
$ IF UPTIME .EQS. "" THEN -
	READ/PROMPT="Expected uptime (<RET> if not known)? " SYS$COMMAND UPTIME
$
$GET_REBOOT:
$ REBOOT = P6
$ IF REBOOT .EQS. "" -
	THEN INQUIRE/NOPUNCTUATION REBOOT "Enable automatic reboot [No]? "
$ IF REBOOT THEN GOTO 30
$ DEFINE OPC$REBOOT N
$ GOTO 40
$30:
$ DEFINE OPC$REBOOT Y
$40:
$
$ REPLY/ENABLE
$ DESTINATION = "/ALL"
$ BATCH_DISABLED = "FALSE"
$LOOP:
$ IF TOGO .GT. 4 .OR. BATCH_DISABLED THEN GOTO NOTIFY
$ BATCH_DISABLED = "TRUE"
$ SET LOGIN/INTERACTIVE=0
$ IF F$LOGICAL("SYS$NODE") .NES. "" THEN MCR NCP SET EXECUTOR STATE SHUT
$ WRITE SYS$OUTPUT "	Non-operator logins are disabled."
$ DEFINE/USER SYS$OUTPUT QUEUE.SXX
$ SHOW QUEUE /BATCH /DEVICE
$ OPEN/ERROR=NOTIFY QDATA QUEUE.SXX
$ DELETE /NOLOG QUEUE.SXX;*
$GNQ:	READ/END=WAITL QDATA RECORD
$	FQUOTE=F$LOCATE("""",RECORD)+1
$	IF FQUOTE .GT. F$LENGTH(RECORD) THEN GOTO GNQ
$	QNAME=F$EXTRACT(FQUOTE,F$LOCATE(""" ",RECORD)-FQUOTE,RECORD)
$	STOP /QUEUE/NEXT 'QNAME'
$	GOTO GNQ
$WAITL:
$ CLOSE QDATA
$ REPLY/USER "Batch and device queues have been stopped."
$
$NOTIFY:
$ MESSAGE = F$FAO("System shutdown in !UL minute!%S.", TOGO)
$ IF UPTIME .NES. "" THEN -
	MESSAGE = MESSAGE - "." + "; up " + UPTIME + "."
$ IF TOGO .LE. 4 THEN -
	MESSAGE = MESSAGE + "  Logins are disabled; please log out."
$ IF WHY .NES. "" THEN -
	MESSAGE = F$FAO("!AS!/!AS", MESSAGE, WHY)
$ MESSAGE_SENT = "TRUE"
$ REPLY 'DESTINATION' /BELL "''MESSAGE'"
$ DESTINATION = "/USER"
$ IF TOGO .EQ. 0 THEN GOTO FINISH
$ NEXT_STOP = TOGO/2
$ IF NEXT_STOP .LT. 4 .AND. TOGO .GT. 4 THEN NEXT_STOP = 4
$ DURAT = TOGO - NEXT_STOP
$ TOGO = NEXT_STOP
$ WAIT 00:'DURAT'
$ GOTO LOOP
$
$FINISH:
$ SITE_SHUTDOWN = P4
$ IF SITE_SHUTDOWN .NES. "" .AND. .NOT. SITE_SHUTDOWN THEN GOTO STOP_USERS
$ WRITE SYS$OUTPUT "	Invoke installation dependent shutdown procedure."
$ @SYS$MANAGER:SYSHUTDWN
$
$STOP_USERS:
$ WRITE SYS$OUTPUT "	Stop all user processes."
$GNP:
$ PID = F$PID(CONTEXT)
$ IF PID .EQS. "" THEN GOTO GNP_DONE
$ PRCNAM = F$GETJPI(PID,"PRCNAM")
$ IF F$GETJPI(PID,"STATE") .EQS. "CUR" -
	.OR (F$LOCATE("ACP",PRCNAM) .NE. F$LENGTH(PRCNAM) -
		.AND. F$GETJPI(PID, "GRP") .EQ. 1) -
	.OR (F$LOCATE("PRTSYMB",PRCNAM) .NE. F$LENGTH(PRCNAM) -
		.AND. F$GETJPI(PID, "GRP") .EQ. 1) -
	.OR. PRCNAM .EQS. "NULL" .OR. PRCNAM .EQS. "SWAPPER" -
	.OR. PRCNAM .EQS. "JOB_CONTROL" .OR. PRCNAM .EQS. "OPCOM" -
	.OR. PRCNAM .EQS. "ERRFMT" THEN GOTO GNP
$ STOP/IDENT='PID'
$ GOTO GNP
$GNP_DONE:
$ WRITE SYS$OUTPUT "	Remove installed images."
$ !
$ ! Remove all installed files.  This is necessary for images installed /OPEN
$ !
$ @SYS$MANAGER:VMSIMAGES REMOVE VMSIMAGES
$ WRITE SYS$OUTPUT "	Dismount all mounted volumes."
$ DEFINE/USER SYS$OUTPUT MDATA.SXX
$ SHOW DEVICE/MOUNTED
$ OPEN/ERROR=GND_ERROR MDATA MDATA.SXX
$ DELETE /NOLOG MDATA.SXX;*
$ SYSDEVNAM = F$GETDVI("SYS$SYSDEVICE","DEVNAM")
$GND:	READ/END=GND_DONE MDATA RECORD
$	IF F$LOCATE("mnt",RECORD) .EQ. F$LENGTH(RECORD) THEN GOTO GND
$	DEVNAM="_"+F$EXTRACT(2,F$LOCATE(":",RECORD)-1,RECORD)
$	IF DEVNAM .EQS. SYSDEVNAM THEN GOTO GND
$	DISMOUNT 'DEVNAM' 'UNLOAD' /UNIT
$	GOTO GND
$GND_DONE:
$ CLOSE MDATA
$GND_ERROR:
$ REQUEST "Operator requested shutdown"
$ REPLY/NOLOG
$ WAIT 00:00:08
$ SET UIC [1,4]
$ STOP ERRFMT
$ RUN SYS$SYSTEM:OPCCRASH
$ EXIT
$
$NOPRIV:
$ WRITE SYS$OUTPUT "You have insufficient privileges to run this procedure."
$ WRITE SYS$OUTPUT "You need ",REQPRIVS,"."
$
$CLEANUP:
$ IF MESSAGE_SENT THEN REPLY /ALL /BELL "Shutdown cancelled."
$ IF F$LOGICAL("OPC$UNLOAD") .NES. "" THEN DEASSIGN OPC$UNLOAD
$ IF F$LOGICAL("OPC$REBOOT") .NES. "" THEN DEASSIGN OPC$REBOOT
$ IF F$LOGICAL("QDATA") .NES. "" THEN CLOSE QDATA
$ IF F$LOGICAL("MDATA") .NES. "" THEN CLOSE MDATA
$ IF F$SEARCH("*.SXX;*") .NES. "" THEN DELETE /NOLOG *.SXX;*
$ PREVPRIVS = F$SETPRV(PREVPRIVS)
$ SET DEFAULT 'PREVDIR'
