$ SET NOVER
$ !
$ !	This command procedure may be entered in one of two ways:
$ !
$ !		1) Invoked from STARTUP.UP3
$ !		2) As the startup procedure during reboot
$ !
$ !	In order to eliminate error messages incurred by re-executing
$ !	the initialization parts of the startup procedure, STARTUP.UP3
$ !	specifies an input parameter, while the reboot does not.
$ !
$ !		P1 - "CONTINUE", a label in this command procedure
$ !		     where the upgrade should continue if coming
$ !		     directly from STARTUP.UP3 without a reboot
$ !
$ SET NOON
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "Continuing with VAX/VMS V3.0 Upgrade Procedure"
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "	Upgrade Phase 4"
$	WRITE SYS$OUTPUT ""
$ P1:="''P1'"	! Make sure P1 is defined
$ IF P1 .NES. "" THEN GOTO 'P1
$ @SYS$SYSTEM:STARTUP.COM UPGRADE
$ !
$ ! Install only those protected shareable images that will be used.
$ !
$ RUN SYS$SYSTEM:INSTALL
SYS$SHARE:DISMNTSHR	/OPEN /SHARED /PROTECT /HEADER
SYS$SHARE:MOUNTSHR	/OPEN /SHARED /PROTECT /HEADER
$	SET DEFAULT SYS$SYSTEM
$	SET UIC [1,4]
$	SET /PROTECTION=(S:RWED,G:RWED,O:RWED,W:RE) /DEFAULT
$	DEFDIR := "SYSUPD.VMS300"
$	FILEOPEN:=""
$	SET ON
$	SET MESSAGE /FACILITY/SEVERITY/TEXT/IDENTIFICATION
$	ON ERROR THEN GOTO 7000
$	ON CONTROL_Y THEN GOTO 7000
$	ON CONTROL_C THEN GOTO 7000
$	SET PROCESS /PRIV=(CMK,SYSP,LOG,VOLPRO,BYPASS)
$	SET PROTECTION=(S:RWED,G:RWED,O:RWED,W:RE)/DEFAULT
$	COPY :== COPY
$	DELETE /SYMBOL /GLOBAL COPY
$	NEW_ROOT := "SYSF"
$
$	SYSDEV := 'F$LOGICAL("SYS$SYSROOT")
$	SYSDEV = SYSDEV - "_"
$25:
$	L = 'F$LOCATE(":",SYSDEV) + 1
$	TARGET := 'F$EXT(0,L,SYSDEV)
$	L = 'F$LOCATE("[",SYSDEV)
$	M = 'F$LOCATE(".",SYSDEV)
$	IF M .EQ. 'F$LENGTH(SYSDEV) THEN GOTO NO_TOPSYS
$	N = M - L + 1
$	TARGET_TOPSYS_DOT := 'F$EXT(L,N,SYSDEV)
$	GOTO 30
$NO_TOPSYS:
$	TARGET_TOPSYS_DOT := ""
$ !
$ ! Determine type of cpu
$ !
$30:
$	CPUTYPE = F$GETSYI("CPU")
$	IF (CPUTYPE .EQ. 1).OR. (CPUTYPE .EQ. 2) THEN GOTO GOT_CPUTYPE
$	IF (CPUTYPE .EQ. 3) THEN -
	WRITE SYS$OUTPUT "Upgrade procedure not supported for cpu type "'cputype'"."
$	GOTO 7000
$GOT_CPUTYPE:
$	SET DEFAULT 'TARGET'['NEW_ROOT'.SYSEXE]
$	ON ERROR THEN GOTO 7000
$	WRITE SYS$OUTPUT ""
$	SYSVER:="V3.0"
$	@'TARGET'['NEW_ROOT'.'DEFDIR']DIRCLENUP.COM 'TARGET' 'SYSVER'
$	SET PROC/PRIV=BYPASS
$	STOP JOB_CONTROL
$	STOP OPCOM
$	SET UIC [1,6]
$	STOP ERRFMT
$	SET UIC [1,4]
$	SET DEFAULT ['DEFDIR']
$CONTINUE:
$	SET ON
$	ON ERROR THEN GOTO 7000
$	ON CONTROL_Y THEN GOTO 7000
$	ON CONTROL_C THEN GOTO 7000
$	SET DEFAULT 'TARGET'['NEW_ROOT'.SYSEXE]
$	SET PROC/PRIV=BYPASS
$	IF F$SEARCH("[0,0]SYS0.DIR;1") .EQS. "" THEN -
		CREATE/DIRECTORY/OWNER=[1,4]/PROT=(S:RWE,O:RWE,G:RE,W:RE) -
		'TARGET'[SYS0]
$	ON ERROR THEN CONTINUE
$	SET FILE /ENTER='TARGET'[SYS0]SYSEXE.DIR;1 'TARGET'[SYSF]SYSEXE.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSLIB.DIR;1 'TARGET'[SYSF]SYSLIB.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSTEST.DIR;1 'TARGET'[SYSF]SYSTEST.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSMAINT.DIR;1 'TARGET'[SYSF]SYSMAINT.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSMGR.DIR;1 'TARGET'[SYSF]SYSMGR.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSHLP.DIR;1 'TARGET'[SYSF]SYSHLP.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSUPD.DIR;1 'TARGET'[SYSF]SYSUPD.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSMSG.DIR;1 'TARGET'[SYSF]SYSMSG.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSERR.DIR;1 'TARGET'[SYSF]SYSERR.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]SYSCBI.DIR;1 'TARGET'[SYSF]SYSCBI.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]001001.DIR;1 'TARGET'[SYSF]001001.DIR;1
$	SET FILE /ENTER='TARGET'[SYS0]001002.DIR;1 'TARGET'[SYSF]001002.DIR;1
$ !
$ ! Set up console floppy to boot from a SYS0 system.
$ !
$	SET PROC/PRIV=(CMEXEC,CMKRNL,LOG_IO,SYSNAM,VOLPRO)
$	FILES11_DEVICE := 'TARGET'['NEW_ROOT'.'DEFDIR']
$	FLX_DEVICE := "CS1:"
$	IF (CPUTYPE .EQ. 1) THEN GOTO SET_780_PARMS
$	IF (CPUTYPE .EQ. 2) THEN GOTO SET_750_PARMS
$	IF (CPUTYPE .EQ. 3) THEN GOTO SET_730_PARMS
$	WRITE SYS$OUTPUT "Unrecognized cpu type "'cputype'"."
$	GOTO 7000
$SET_780_PARMS:
$	BOOT_CS := "YES"
$	MEDIUM := "floppy"
$	FILES11_FLX_SWITCH := /RS/IM
$	RT_FLX_SWITCH := /RT
$	BOOTFILE := CONSOL.SYS
$	GOTO END_SET_PARMS
$
$SET_750_PARMS:
$	TEMP = FILES11_DEVICE + "DEFBOO.SIT;1"
$	BOOT_CS := "NO"
$	IF F$SEARCH(TEMP) .EQS. "" THEN GOTO NO_TU58
$	BOOT_CS := "YES"
$	MEDIUM := "TU58"
$	FILES11_FLX_SWITCH := /RS/IM
$	RT_FLX_SWITCH := /RT
$	BOOTFILE := BOOT58.EXE
$	GOTO END_SET_PARMS
$
$SET_730_PARMS:
$	BOOT_CS := "YES"
$	FLX_DEVICE := "CS2:"
$	MEDIUM := "TU58"
$	FILES11_FLX_SWITCH := /RS/IM
$	RT_FLX_SWITCH := /RT/IM
$	BOOTFILE := BOOT.EXE
$
$END_SET_PARMS:
$	WRITE SYS$OUTPUT ""
$ 	WRITE SYS$OUTPUT "Now the new site-specific ''MEDIUM' must be modified"
$	WRITE SYS$OUTPUT "to allow reboot of the complete VAX/VMS V3.0 system."
$	RUN SYS$SYSTEM:SYSGEN
CONNECT CONSOLE
$	WRITE SYS$OUTPUT -
"The new site-specific console ''MEDIUM' should already be in ''FLX_DEVICE'."
$	MOUNT/FOREIGN 'FLX_DEVICE'
$	DEVICE_MOUNTED := TRUE
$
$	SET DEFAULT 'FILES11_DEVICE'
$	MCR FLX 'FLX_DEVICE'UPGGEN.CMD/RT/DE
$	MCR FLX 'FLX_DEVICE'DEFBOO.CMD/RT/DE
$	RENAME DEFBOO.SIT;1 DEFBOO.CMD
$	MCR FLX 'FLX_DEVICE'/RT=DEFBOO.CMD/RS
$	DISMOUNT 'FLX_DEVICE'
$NO_TU58:
$ !
$ ! Re-set the sysgen parameter that causes the time/date to be requested
$ ! at boot-time.
$ !
$	RUN SYS$SYSTEM:SYSGEN
USE DEFAULT
SET /STARTUP SYS$SYSTEM:STARTUP.UP5
SET SWPFILCNT 0
WRITE CURRENT
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "System shutting down to boot the complete V3.0 system."
$	WRITE SYS$OUTPUT "(Please ignore possible no known file error messages"
$	WRITE SYS$OUTPUT " during the shutdown.)"
$	WRITE SYS$OUTPUT ""
$	IF BOOT_CS THEN -
	WRITE SYS$OUTPUT "Leave the newly created site-specific console"
$	IF BOOT_CS THEN -
	WRITE SYS$OUTPUT "''MEDIUM' in the console drive."
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "The system disk must remain on ''TARGET' in order"
$	WRITE SYS$OUTPUT "to procede to next phase of the upgrade."
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "The system will automatically reboot after the"
$	WRITE SYS$OUTPUT "shutdown and continue the upgrade procedure.  If"
$ 	WRITE SYS$OUTPUT "for any reason you should have to restart the upgrade"
$	WRITE SYS$OUTPUT "procedure by rebooting by hand, from now on type only:"
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "		B"
$	WRITE SYS$OUTPUT ""
$	!
$	! Now shut down the system.
$	!
$	@SYS$SYSTEM:SHUTDOWN "0" "Reboot during upgrade procedure" "N" -
		 "N" "soon" "Y"
$
$	!
$	! On error, exit from the upgrade procedure here.
$	!
$7000:
$	ON ERROR THEN CONTINUE
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "Upgrade to VAX/VMS Version 3.0 incomplete."
$	WRITE SYS$OUTPUT ""
$	WRITE SYS$OUTPUT "Error exit from upgrade procedure."
$	WRITE SYS$OUTPUT "Restart upgrade from last boot of system."
$	WRITE SYS$OUTPUT ""
$	IF FILEOPEN .NES. "" THEN CLOSE DATAF
$	ON CONTROL_Y THEN CONTINUE
$	ON CONTROL_C THEN CONTINUE
$	ON ERROR THEN CONTINUE
$	SET DEF SYS$SYSTEM
$	EXIT
