	.TITLE	TST$DTRAST - DTR AST ROUTINES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: DTS/DTR DECNET TEST PACKAGE
;
; ABSTRACT: THIS MODULE CONTAINS QIO AND TIMER AST ROUTINES FOR DTR.
;
; ENVIRONMENT: DTR RUNS IN USER MODE AND REQUIRES NETWORK PRIVILEGE.
;
; AUTHOR: JAMES A. KRYCKA,	CREATION DATE: 7-DEC-77
;
; MODIFICATIONS:
;
;--

	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
	$DTSDEF
	CMDDEF				; DEFINE COMMAND LANGUAGE SYMBOLS
	EFNDEF				; DEFINE EFN'S AND FUNCTION CODES
	$MSGDEF				; DEFINE MAILBOX MESSAGE ID CODES
	.IIF NE	K_LIST_MEB, .LIST MEB	; DEFINED IN DTPREFIX.MAR
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE

	.SBTTL	TST$RECVAST_DTR - RECEIVE DATA MESSAGE AST ROUTINE
	.PSECT	TST$CODE	NOWRT
RA::					; SYMBOL FOR DEBUGGING PURPOSES

;++
; FUNCTIONAL DESCRIPTION:
;
;	NONE
;
; CALLING SEQUENCE:
;
;	CALL	#5,TST$RECVAST_DTR	(INVOKED BY VAX/VMS AS AN AST)
;
; INPUT PARAMETERS:
;
;	4(AP)	ADDRESS OF QIO PARAMETER BLOCK
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	TST$RECVAST_DTR,^M<R2,R3,R4,R5> ; ENTRY POINT
	CHECK_IOSB W^TST$GQ_RECVIOSB	; CHECK I/O STATUS CODE
	BLBC	R1,40$			; BRANCH ON FAILURE
	INCL	W^TST$GL_RECVDATA	; INCREMENT COUNTER
	$CASEB	SELECTOR=W^TST$GB_TYPE,DISPL=<-	;
		30$-			;  NO ACTION REQUIRED
		20$-			;  SEQUENCE CHECK
		10$-			;  SEQUENCE AND PATTERN CHECK
	>				;  ECHO MESSAGE
	INCL	W^TST$GB_XMITBUF	; UDPATE MESSAGE SEQUENCE NUMBER
	MOVZWL	W^TST$GQ_RECVIOSB+2,-
		W^TST$QBR_XMTDATA+TST$QB_BUFLEN;SET SIZE TO ECHO
	INSQUE	W^TST$QBR_XMTDATA,-
		@W^TST$QB_QHEAD+4		;QUEUE XMT REQUEST
	BRB	30$			; JOIN COMMON CODE
10$:	MOVZWL	W^TST$GW_SIZE,R0	; GET MESSAGE SIZE
	SUBL2	#4,R0			; CALCULATE SIZE LESS SEQUENCE #
	CMPC3	R0,W^TST$GB_XMITBUF+4,-	; COMPARE EXPECTED PATTERN
		W^TST$GB_RECVBUF+4	;  AGAINST ACTUAL PATTERN
	BNEQ	RECVAST_ERROR2		; BRANCH ON PATTERN ERROR
20$:	CMPL	W^TST$GL_RECVDATA,-	; COMPARE EXPECTED SEQUENCE #
		W^TST$GB_RECVBUF	;  AGAINST ACTUAL SEQUENCE #
	BNEQ	RECVAST_ERROR1		; BRANCH ON SEQUENCE ERROR
30$:	
	MOVZWL	W^TST$GW_SIZE,-
		W^TST$QBR_RCVDATA+TST$QB_BUFLEN	;SAVE SIZE OF READ
	INSQUE	W^TST$QBR_RCVDATA,-
		@W^TST$QB_QHEAD+4		;QUEUE NEW READ
	$WAKE_S				;WAKE USER LEVEL
	CHECK_SS			; CHECK STATUS CODE
40$:	RET				; EXIT
RECVAST_ERROR2:				; PATTERN CHECK ERROR
	MOVL	#DTS$_BADPAT,W^TST$GL_STATUS	
	RET				; EXIT
RECVAST_ERROR1:				; SEQUENCE CHECK ERROR
	MOVL	#DTS$_BADSEQNUM,W^TST$GL_STATUS
	RET				; EXIT

	.SBTTL	TST$XMITAST_DTR - TRANSMIT DATA MESSAGE AST ROUTINE
	.PSECT	TST$CODE	NOWRT

;++
; FUNCTIONAL DESCRIPTION:
;
;	NONE
;
; CALLING SEQUENCE:
;
;	CALL	#5,TST$XMITAST_DTR	(INVOKED BY VAX/VMS AS AN AST)
;
; INPUT PARAMETERS:
;
;	4(AP)	ADDRESS OF QIO PARAMETER BLOCK
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	TST$XMITAST_DTR,^M<R2>	; ENTRY POINT
	CHECK_IOSB W^TST$GQ_XMITIOSB	; CHECK I/O STATUS CODE
	BLBC	R1,10$			; BRANCH ON FAILURE
	INCL	W^TST$GL_XMITDATA	; INCREMENT COUNTER
10$:	RET				; EXIT

	.SBTTL	TST$MAILAST_DTR - READ MAILBOX AST ROUTINE
	.PSECT	TST$CODE	NOWRT

;++
; FUNCTIONAL DESCRIPTION:
;
;	NONE
;
; CALLING SEQUENCE:
;
;	CALL	#5,TST$MAILAST_DTR	(INVOKED BY VAX/VMS AS AN AST)
;
; INPUT PARAMETERS:
;
;	4(AP)	ADDRESS OF QIO PARAMETER BLOCK
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	TST$MAILAST_DTR,^M<R2,R3,R4,R5,R6,R7> ; ENTRY POINT
	BSBW	TST$EXAM_MAIL		; EXAMINE THE MESSAGE
	CMPW	R6,#MSG$_INTMSG		; IS IT AN INTERRUPT MESSAGE?
	BNEQU	NOT_INTE_MSG		; NO
	INCL	W^TST$GL_RECVINTE	; YES, INCREMENT COUNTER
	$CASEB	SELECTOR=W^TST$GB_TYPE,DISPL=<-	;
		30$-			;  NO ACTION REQUIRED
		20$-			;  SEQUENCE CHECK
		10$-			;  SEQUENCE AND PATTERN CHECK
	>				;  ECHO MESSAGE
	INCL	W^TST$GB_INTEBUF	; UDPATE MESSAGE SEQUENCE NUMBER
	MOVZBL	(R7),W^TST$QBR_XMTINT+-
		TST$QB_BUFLEN		;SAVE SIZE OF INTERRUPT MESSAGE
	INSQUE	W^TST$QBR_XMTINT,-
		@W^TST$QB_QHEAD+4		;QUEUE UP INTERRUPT XMT REQUEST
	BRB	30$			; JOIN COMMON CODE
10$:	MOVZBL	(R7),R0			; GET INTERRUPT MESSAGE SIZE
	SUBL2	#4,R0			; CALCULATE SIZE LESS SEQUENCE #
	CMPC3	R0,W^TST$GB_INTEBUF+4,-	; COMPARE EXPECTED PATTERN
		5(R7)			;  AGAINST ACTUAL PATTERN
	BNEQ	MAILAST_ERROR2		; BRANCH ON PATTERN ERROR
20$:	CMPL	W^TST$GL_RECVINTE,-	; COMPARE EXPECTED SEQUENCE #
		1(R7)			;  AGAINST ACTUAL SEQUENCE #
	BNEQ	MAILAST_ERROR1		; BRANCH ON SEQUENCE ERROR
30$:
	MOVL	#TST$K_MAILBUF,-
		W^TST$QBR_RCVMAIL+TST$QB_BUFLEN	;SET READ SIZE
	INSQUE	W^TST$QBR_RCVMAIL,-
		@W^TST$QB_QHEAD+4		;QUEUE MAILBOX READ
	$WAKE_S				;WAKE USER LEVEL
	CHECK_SS			; CHECK STATUS CODE
	RET				; EXIT
NOT_INTE_MSG:				;
	$CANCEL_S CHAN=W^TST$GW_LINKCHAN ; CANCEL ALL PENDING LINK I/O REQUESTS
	CHECK_SS			; CHECK STATUS CODE
	INCB	W^TST$GB_ASTFLAGS	;NOTE END OF TEST
	$WAKE_S				;WAKE USER LEVEL
	CHECK_SS			; CHECK STATUS CODE
	RET				; EXIT
MAILAST_ERROR2:				; PATTERN CHECK ERROR
	MOVL	#DTS$_BADPAT,W^TST$GL_STATUS
	RET				; EXIT
MAILAST_ERROR1:				; SEQUENCE CHECK ERROR
	MOVL	#DTS$_BADSEQNUM,W^TST$GL_STATUS
	RET				; EXIT

	.SBTTL	TST$INTEAST_DTR - TRANSMIT INTERRUPT MESSAGE AST ROUTINE
	.PSECT	TST$CODE	NOWRT

;++
; FUNCTIONAL DESCRIPTION:
;
;	NONE
;
; CALLING SEQUENCE:
;
;	CALL	#5,TST$INTEAST_DTR	(INVOKED BY VAX/VMS AS AN AST)
;
; INPUT PARAMETERS:
;
;	4(AP)	ADDRESS OF QIO PARAMETER BLOCK
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

	.ENTRY	TST$INTEAST_DTR,^M<R2>	; ENTRY POINT
	CMPW	#SS$_NOSOLICIT,-
		TST$GQ_INTEIOSB		;CHECK FOR REFUSAL DUE TO NO SOLICIT
	BNEQU	5$			;SKIP IF NOT THE CASE
	INSQUE	W^TST$QBR_XMTINT,-
		@W^TST$QB_QHEAD+4	;REQUEUE REQUEST
	$WAKE_S				;TELL MAINLINE ABOUT IT
	CHECK_SS
	RET
5$:
	CHECK_IOSB W^TST$GQ_INTEIOSB	; CHECK I/O STATUS CODE
	BLBC	R1,10$			; BRANCH ON FAILURE
	INCL	W^TST$GL_XMITINTE	; INCREMENT COUNTER
10$:	RET				; EXIT
	.END
