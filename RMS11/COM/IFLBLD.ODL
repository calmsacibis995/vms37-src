;
;***** IFLBLD.ODL *****
;	FOR THE RMS INDEX FILE LOAD UTILITY - IFL
;
	.ROOT	RMSROT-IFLR-BRNCHB-LS-*(FLDN,ETX),*COTRE1,CODYN
IFLR:	.FCTR	LIB$:RMSIFL/LB:Z1IFL:Z1FLTX:Z1PSS:Z1SC:Z1EXF
;	LIB$:RMSIFL/LB:Z1SC IS SORT COMMON DATA STORAGE 
;	- USUALLY NEEDED, ALWAYS READY
;	LIB$:RMSIFL/LB:Z1PSS IS CALLED BY MAINLINE AND Z1SAS 
;	- USUALLY NEEDED, ALWAYS READY
;		IT HAS FAB AND RAB BLOCKS
;	LIB$:RMSIFL/LB:Z1EXF IS EXCEPTION FILE FAB RAB ETC.
;
;	IFL CONSISTS OF 3 CO-TREES:
;		IFL OVERLAY STRUCTURE
;		RMS TREE OF NEEDED RMS ACCESS MODULES
;		IFL DYNAMIC MEMORY - UNDER IFL CONTROL
;
; ORG FOR SORT MUST BE IN ROOT; BUT NOT NEEDED, SINCE IFL HAS SAME
;
; IFL MAKES USE OF SOME RMS ROUTINES WHICH ARE IN RMSROT:
;	R0MDAT - $MDATA	FOR MOVING BYTES
;	R0CKSM - $MKSUM FOR UPDATING PROLOGUE CHECK SUM
; IFL HAS IT'S OWN ROUTINE TO COMPUTE BUCKET CHECK SUM
;	R0BCS  - NAMED BECAUSE OF THE POSSIBILITY OF ITS 
;		  BECOMING A FUTURE RMS MODULE
;
; BRANCHB
	.NAME	GCMLFS
BRNCHB:	.FCTR	GCMLFS-RMSGCM
RMSGCM:	.FCTR	SYS$LIBRARY:RMSLIB/LB:R0CLOS:R0CONN:R0FIND:R0GET:R0OPEN:R0GCML
; FAST LOAD OVERLAYS:
;	OTHER MAINLINE SUBS
;	LIB$:RMSIFL/LB:Z1BTS IS TREE BUILD DATA STORAGE - ALWAYS NEEDED
;	LIB$:RMSIFL/LB:Z1BTC IS ALWAYS ON LONGEST PATH
FLDN:	.FCTR	LIB$:RMSIFL/LB:Z1BTS:Z1BTC:Z1MKEY-RWR-AM-FCBT-FBT0-OVRL
;
; AREA MANIPULATION SUBS - NEEDED BY BTC AND ITC 
;  - LIB$:RMSIFL/LB:Z1AM CALLS DIVID
AM:	.FCTR	LIB$:RMSIFL/LB:Z1AM-DIVID
DIVID:	.FCTR	LIB$:RMSUTL/LB:DIVID
;
; READ WRITE BLOCKS/BUCKETS
RWR:	.FCTR	LIB$:RMSIFL/LB:Z1RWB:R0BCS
;
; FAST LOAD OVERLAYS
OVRL:	.FCTR	*(*LIB$:RMSIFL/LB:Z1OIOO,*SOS,*FITC,*BT)
;
;	SORT STUFF
SOS:	.FCTR	(LIB$:RMSIFL/LB:Z1SI,LIB$:RMSIFL/LB:Z1SAS)
;
;	THE SORTS ROUTINES FROM THE SORTS PACKAGE
LS:	.FCTR	LIB$:RMSIFL/LB:SORTS-LS2
LS2:	.FCTR	LIB$:RMSIFL/LB:SIORMS
;
;	INIT TREE COMMON
FITC:	.FCTR	LIB$:RMSIFL/LB:Z1ITC
;
;	COMMON BUILD TREE
FCBT:	.FCTR	LIB$:RMSIFL/LB:Z1ALOC:Z1KM-FEXT-FIR
; AREA EXTENSION ROUTINE
FEXT:	.FCTR	LIB$:RMSIFL/LB:Z1AEXT
; INDEX ROUTINES
FIR:	.FCTR	LIB$:RMSIFL/LB:Z1MI:Z1BIDR:Z1RPC
;	BUILD TREE - MAINLINE
FBT0:	.FCTR	LIB$:RMSIFL/LB:Z1BT0
BT:	.FCTR	(FST0,FABT)
;	BUILD TREE OVERLAYS
;	SUBS NEEDED WHILE BUILDING TREE 0 - PRIMARY KEY
FST0:	.FCTR	LIB$:RMSIFL/LB:Z1BUDR:Z1BPT:Z1BSOR
;	ALTERNATE TREE BUILD MODULES
FABT:	.FCTR	LIB$:RMSIFL/LB:Z1BADR:Z1GBID
;
;
;	GCML CALL
ETX:	.FCTR	LIB$:RMSIFL/LB:Z1FLIO-LTP-SPC-FLER
LTP:	.FCTR	SYS$LIBRARY:SYSLIB/LB:.TPARS-LIB$:RMSUTL/LB:LUNCHK
;	COMMAND LINE PARSING
SPC:	.FCTR	LIB$:RMSIFL/LB:Z1FLST:Z1FLSA
;	ERROR ROUTINES
FLER:	.FCTR	LIB$:RMSIFL/LB:Z1IFER:Z1ERTX
;
; USE BEST RMS ODL
@COM$:IFLVMS
	.NAME	COTREE
COTRE1:	.FCTR	COTREE-RMSALL
;
; DYNAMIC AREA AT END OF TASK
	.NAME	COTRDY
CODYN:	.FCTR	COTRDY-LIB$:RMSIFL/LB:Z1DYNM:Z1MAXM
	.END
