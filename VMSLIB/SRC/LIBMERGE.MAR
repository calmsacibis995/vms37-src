	.TITLE LIB$MERGE - Merge Image Activate an Image
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	VMS-specific library
;
; ABSTRACT:	The routines in this module merge an image into P0 or P1 space.
;
; ENVIRONMENT:
;
; AUTHOR: Kathleen D. Morse , CREATION DATE: 10-Jan-80
;
; MODIFIED BY:
;
;	V02-004	LJK0072		Lawrence J. Kenah	1-Oct-1981
;		Fix bug introduced by LJK0063. IAC$M_EXPREG must be turned
;		off before second call to the image activator.
;
;	V02-003	LJK0063		Lawrence J. Kenah	10-Sep-1981
;		Minor rewrite to add merge into P0 space, change name of entry 
;		points to conform to RTL standards, and minor cleanup.
;
;	V02-002	LJK0015		Lawrence J. Kenah	22-Jul-1981
;		Add P1 merge flag to call to image activator so that new 
;		shareable image code works correctly.
;
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

	$IACDEF				;IMAGE ACTIVATION FLAGS
	$PHDDEF				;PROCESS HEADER DEFINITIONS
	$SSDEF				;SYSTEM SERVICE STATUS CODES

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OFFSETS (FROM AP) FOR INPUT ARGUMENT LIST FOR LIB$Px_MERGE 
;

FILNAM=4				; Address of image file name descriptor
DFLTNAM=8				; Address of default file name descriptor
HDRBUF=12				; Address of image header buffer
RETADR=16				; Address of quadword for range of
					;  virtual addresses actually mapped

;
; OWN STORAGE:
;

	.SBTTL LIB$Px_MERGE - Merge an Image into P0 or P1 Space
;++
; FUNCTIONAL DESCRIPTION:
;
; This routine merges an image into P0 or P1 space. 
;
; If called at LIB$P0_MERGE, a simple merged image activation is performed,
; placing the designated image at the high address end of P0 space.
;
; A more complicated sequence of events is required to merge an image into
; the low address end of P1 space. Because the image activator must know the
; exact amount of P1 space needed for the image being merged, LIB$P1_MERGE
; first merges the image into P0 space with the expand region option.  After
; this merge is completed, the routine computes the P1 range that will hold
; the image.  This is done by finding the first free P1 page and computing
; the number of pages just mapped into P0 space.  A P1 virtual address range
; is then computed.  The pages mapped into P0 space are deleted and second
; merge image activate is done.  This time the expand region option is turned
; off and the exact P1 range needed is specified. 
;
; CALLING SEQUENCE:
;
;	CALLS	#4,LIB$Px_MERGE
;
; INPUT PARAMETERS:
;
;	FILNAM(AP)  = Address of image file name descriptor
;	DFLTNAM(AP) = Address of default file name descriptor
;	HDRBUF(AP)  = Address of 512-byte image header buffer
;	RETADR(AP)  = Address of quadword for range of virtual addresses mapped
;
; IMPLICIT INPUT:
;
;	none
;
; OUTPUT PARAMETERS:
;
;	none
;
; IMPLICIT OUTPUT:
;
;	The address range actually mapped is returned in the RETADR quadword
;	provided as an input parameter.
;
;	The first block of the image header is copied to the 512-byte buffer
;	provided as an input parameter.
;
; COMPLETION CODES:
;
;	R0 low bit set => Image successfully merged
;
;		SS$_NORMAL
;
;	R0 low bit clear => Error occurred while activating image
;
;		SS$_NOPRIV	Entry was as LIB$P1_MERGE and process
;				does not have CMKRNL privilege.
;
;		Various errors returned by $IMGACT and $DELTVA
;
; SIDE EFFECTS:
;
;	If entry is at LIB$P1_MERGE, the permanent portion of P1 space is
;	expanded to accommodate the merged image. 
;
;--

	.ENABL		LOCAL_BLOCK

	.PSECT	_LIB$CODE PIC,SHR,BYTE,RD,EXE,NOWRT

LIB$P0_MERGE::
	.WORD	^M<R2,R3,R4,R5,R6,R7>	;REGISTER SAVE MASK
	MOVL	#<IAC$M_MERGE!IAC$M_EXPREG>,R7 ;IMAGE ACTIVATION FLAGS
	BRB	10$			;JOIN COMMON CODE PATH

LIB$P1_MERGE::
	.WORD	^M<R2,R3,R4,R5,R6,R7>	;REGISTER SAVE MASK
	MOVL	#<IAC$M_MERGE!IAC$M_EXPREG!IAC$M_P1MERGE>,R7
10$:	MOVZWL	#^X3FF,-(SP)		;END VA FOR BLUEPRINT P0 VA RANGE
	MOVZWL	#^X200,-(SP)		;START VA FOR BLUEPRINT P0 VA RANGE
	MOVL	SP,R4			;ADR OF INPUT VA RANGE
	CLRQ	-(SP)			;RETURN VA RANGE
	MOVL	SP,R5			;ADR OF RETURN VA RANGE
	CLRQ	-(SP)			;PLACE TO HOLD IDENT
	MOVL	SP,R6			;ADR OF IDENT QUADWORD
	$IMGACT_S	-		;P0 MERGE IMAGE ACTIVATE CALL
		NAME=@FILNAM(AP),-	;FILE NAME
		DFLNAM=@DFLTNAM(AP),-	;DEFAULT FILE NAME
		HDRBUF=@HDRBUF(AP),-	;IMAGE HEADER BUFFER ADDRESS
		IMGCTL=R7,-		;IMAGE ACTIVATION FLAGS
		INADR=(R4),-		;INPUT BLUEPRINT P0 RANGE
		RETADR=(R5),-		;RETURN VA RANGE
		IDENT=(R6)		;NO IDENT PARAMETER
	BLBC	R0,IMGACT_ERR		;BR IF ERROR IN $IMGACT
	BBC	#IAC$V_P1MERGE,R7,50$	;ALL DONE IF P0 MERGE
	MOVQ	(R5),R2			;R2=START VA, R3=END VA  (MAPPED)
	SUBL2	R2,R3			;GET # OF BYTES MAPPED
	MOVL	@#CTL$GL_PHD,R0		;GET ADR OF PROCESS HEADER
	ADDL3	#^X1FF,PHD$L_FREP1VA(R0),4(R4) ;GET END VA IN P1 SPACE
	SUBL3	R3,4(R4),(R4)		;GET START VA IN P1 SPACE
	$DELTVA_S	-		;DELETE P0 VIRTUAL ADDRESS RANGE MAPPED
		INADR=(R5)		;VA RANGE RETURNED BY $IMGACT
	BLBC	R0,100$			;BRANCH IF ERROR IN $DELTVA
	ASSUME	IAC$V_EXPREG LE 7	;BIT MUST BE IN LOW-ORDER BYTE
	BICB2	#IAC$M_EXPREG,R7	;TURN OFF EXPREG BIT BEFORE P1 ACTIVATE
	$IMGACT_S	-		;NOW ACTIVATE IMAGE INTO P1 SPACE
		NAME=@FILNAM(AP),-	;FILE NAME
		DFLNAM=@DFLTNAM(AP),-	;DEFAULT FILE NAME
		HDRBUF=@HDRBUF(AP),-	;IMAGE HEADER BUFFER ADDRESS
		IMGCTL=R7,-		;IMAGE ACTIVATION FLAGS
		INADR=(R4),-		;INPUT EXACT P1 RANGE
		RETADR=(R5),-		;RETURN VA RANGE
		IDENT=(R6)		;NO IDENT PARAMETER
	BLBC	R0,IMGACT_ERR		;BRANCH IF ERROR IN $IMGACT
	PUSHL	(R5)			;GET NEW BASE OF CONTROL REGION
	PUSHL	#1			;ONE ARGUMENT FOR ROUTINE
	$CMKRNL_S SET_NEWCTLBAS,(SP)	;SET A NEW CONTROL REGION BASE
50$:	$IMGFIX_S			;PERFORM ADDRESS RELOCATION
	BLBC	R0,IMGACT_ERR		;QUIT IF ERROR OCCURS
	MOVQ	(R5),@RETADR(AP)	;SET RETURN VA RANGE ACTUALLY MAPPED
	MOVZBL	#SS$_NORMAL,R0		;REPORT SUCCESSFUL MERGE IMAGE ACTIVATE
100$:	RET				; AND RETURN TO CALLER

IMGACT_ERR:
	ADDL3	#1,(R5),R1		;ANYTHING AT ALL MAPPED?
	BEQL	100$			;BR IF NOTHING MAPPED (SKIP $DELTVA)
	PUSHL	R0			;REMEMBER RETURN STATUS CODE
	$DELTVA_S	-		;DELETE P0 VIRTUAL ADDRESS RANGE MAPPED
		INADR=(R5)		;VA RANGE RETURNED BY $IMGACT
	MOVL	(SP)+,R0		;RESTORE ORIGINAL ERROR CODE
	BRB	100$			;JOIN COMMON CODE
	.DSABL	LSB


SET_NEWCTLBAS:
	.WORD	0			;NO REGISTERS TO SAVE
	MOVL	4(AP),G^CTL$GL_CTLBASVA	;SET A NEW CONTROL REGION BASE
	MOVZBL	#SS$_NORMAL,R0		;SET STATUS CODE 
	RET				;CONTINUE

	.END
