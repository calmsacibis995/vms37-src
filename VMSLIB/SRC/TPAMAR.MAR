	.NLIST

.TITLE	TPAMAC - MACROS TO GENERATE STATE AND KEYWORD TABLES FOR TPARSE

; VERSION 'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; ANDREW C. GOLDSTEIN  9-JUN-78  13:43
;
; MODIFIED BY:
;
;	 0010	MTR0001		Michael T. Rhodes,    24-Nov-1981  09:15
;	Remove angle brackets from .IDN tests of the LABEL argument to
;	TPA$_EXIT and TPA$_FAIL (which would not check both upper and lower
;	case text).
;
;	 0009	ACG0048		Andrew C. Goldstein,  20-Jun-1979  14:20
;	Change PSECT attributes to EXE
;
;	 0008	ACG0043		Andrew C. Goldstein,  23-May-1979  21:47
;	Change PSECTs to PIC
;
;	 0007	ACG0032		Andrew C. Goldstein,  27-Mar-1979  13:12
;	Circumvent assembler string truncation in IRPC
;
;	 0006	ACG0024		Andrew C. Goldstein,  27-Feb-1979  16:52
;	Fix PSECTs for new RTL standards
;
;**

; INITIALIZE TABLE GENERATION - CALL ONCE AT START OF EACH
; FINITE STATE MACHINE DESCRIPTION. USER MUST SUPPLY LABELS
; FOR THE STATE AND KEYWORD TABLES.

.MACRO	$INIT_STATE	STTBL,KEYTBL

	.SAVE
	.PSECT	_LIB$STATE$,SHR,PIC,NOWRT,EXE,BYTE
STTBL::

	.PSECT	_LIB$KEY0$,SHR,PIC,NOWRT,EXE,WORD
KEYTBL::
$$KEYTAB=.

	.PSECT	_LIB$KEY1$,SHR,PIC,NOWRT,EXE,BYTE
	$$$KEY = -1
	$$$FLG = -1
	$$$KFG = -1

	TPA$_EXIT	= -1
	TPA$_FAIL	= -2
	TPA$_MAXKEY	= 220
	TPA$_KEYWORD	= 256
	TPA$_ANY	= 493
	TPA$_ALPHA	= 494
	TPA$_DIGIT	= 495
	TPA$_STRING	= 496
	TPA$_SYMBOL	= 497
	TPA$_BLANK	= 498
	TPA$_DECIMAL	= 499
	TPA$_OCTAL	= 500
	TPA$_HEX	= 501
	TPA$_LAMBDA	= 502
	TPA$_EOS	= 503
	TPA$_SUBXPR	= 504

	.RESTORE
.ENDM	$INIT_STATE

; DECLARE A STATE

.MACRO	$STATE	LABEL
	.SAVE
	.PSECT	_LIB$STATE$

	$$$FLG = $$$FLG!4
	TPA$MTRAN

	.IF	NB	LABEL
LABEL:
	.ENDC

	.IF	EQ	$$$KFG
	.PSECT	_LIB$KEY1$
	.BYTE	255
	.ENDC

	$$$FLG = -1
	$$$KFG = -1

	.RESTORE
.ENDM	$STATE

; SPECIFY A STATE TRANSITION

.MACRO	$TRAN	TYPE,LABEL,ACTION,MASK,ADDR,PARAM
	.SAVE
	.PSECT	_LIB$STATE$

	TPA$MTRAN

	.IF	NB	ACTION
	$$$FLG = $$$FLG!128
	.MACRO	$$$ACT
	.LONG	ACTION-.-4
	.ENDM	$$$ACT
	.ENDC

	.IF	NB	MASK
	$$$FLG = $$$FLG!32
	.IF	B	ADDR
	.ERROR	MASK	; MASK ADDRESS NOT PRESENT
	.ENDC
	.MACRO	$$$BIT
	.LONG	MASK
	.ENDM	$$$BIT
	.ENDC

	.IF	NB	ADDR
	$$$FLG = $$$FLG!64
	.MACRO	$$$ADR
	.LONG	ADDR-.-4
	.ENDM	$$$ADR
	.ENDC

	.IF	NB	PARAM
	$$$FLG = $$$FLG!256!2
	.MACRO	$$$PRM
	.LONG	PARAM
	.ENDM	$$$PRM
	.ENDC

	.IF	NB	LABEL
	$$$FLG = $$$FLG!16
	.IF	IDN	LABEL,TPA$_EXIT
	.MACRO	$$$STA
	.WORD	LABEL
	.ENDM	$$$STA
	.IFF
	.IF	IDN	LABEL,TPA$_FAIL
	.MACRO	$$$STA
	.WORD	LABEL
	.ENDM	$$$STA
	.IFF
	.MACRO	$$$STA
	.WORD	LABEL-.-2
	.ENDM	$$$STA
	.ENDC
	.ENDC
	.ENDC

	$$$MOD = 0
	.IRPC	$$$X,<TYPE>
	.IF	IDN	<$$$X>,<'>
	$$$MOD = 1
	.ENDC
	.IF	IDN	<$$$X>,<!>
	$$$MOD = 2
	.ENDC
	.MEXIT
	.ENDR

	.IF	EQ	$$$MOD-1
	.NCHR	$$$CNT,<TYPE>
	.IF	GT	3-$$$CNT
	.ERROR		; INVALID CHARACTER TYPE
	.ENDC
	.IF	EQ	3-$$$CNT
	.MACRO	$$$TYP
	.ASCII	TYPE
	.ENDM	$$$TYP

	.IFF

	$$$FLG = $$$FLG!1
	.PSECT	_LIB$KEY1$
	$$$TMP = .
	$$$KFG = 0
	.ASCII	TYPE

	.IF	EQ	4-$$$CNT
	$$$AST = 0
	.IRPC	$$$Y,<TYPE>
	.IF	IDN	<$$$Y>,<*>
	$$$AST = 1
	.ENDC
	.ENDR
	.IF	NE	$$$AST
	. = .-1
	.ENDC
	.ENDC
	.BYTE	255

	.PSECT	_LIB$KEY0$
	.WORD	$$$TMP-$$KEYTAB

	.MACRO	$$$TYP
	.BYTE	$$$KEY
	.ENDM	$$$TYP

	$$$KEY = $$$KEY+1
	.IF	GE	$$$KEY-TPA$_MAXKEY
	.ERROR		; TPARSE - TOO MANY KEYWORDS
	.ENDC

	.ENDC
	.IFF

	.IF	EQ	$$$MOD-2

	$$$FLG = $$$FLG!8!1
	.MACRO	$$$EXT
	.WORD	0'TYPE-.-2
	.ENDM	$$$EXT

	.MACRO	$$$TYP
	.BYTE	TPA$_SUBXPR&255
	.ENDM	$$$TYP

	.IFF

	.IF	DF	TYPE
	.IF	GE	TYPE-256
	$$$FLG = $$$FLG!1
	.ENDC
	.ENDC

	.MACRO	$$$TYP
	.BYTE	TYPE&255
	.ENDM	$$$TYP

	.ENDC
	.ENDC

	.RESTORE
.ENDM	$TRAN

; FINISH STATE TABLE

.MACRO	$END_STATE
	.SAVE
	$$$FLG = $$$FLG!4
	TPA$MTRAN
	.IF	EQ	$$$KFG
	.PSECT	_LIB$KEY1$
	.BYTE	255
	.ENDC

	$$$FLG = -1
	$$$KFG = -1
	.RESTORE
.ENDM	$END_STATE

; OUTPUT LAST TRANSITION ENTRY

.MACRO	TPA$MTRAN

	.PSECT	_LIB$STATE$

	.IF	EQ	$$$FLG+1
	$$$FLG = 0
	.MEXIT
	.ENDC

	$$$TYP
	.BYTE	$$$FLG&255

	.IF	NE	$$$FLG&2
	.BYTE	<$$$FLG/256>&255
	.ENDC

	.IF	NE	$$$FLG&8
	$$$EXT
	.ENDC

	.IF	NE	$$$FLG&256
	$$$PRM
	.ENDC

	.IF	NE	$$$FLG&128
	$$$ACT
	.ENDC

	.IF	NE	$$$FLG&64
	$$$ADR
	.ENDC

	.IF	NE	$$$FLG&32
	$$$BIT
	.ENDC

	.IF	NE	$$$FLG&16
	$$$STA
	.ENDC

	$$$FLG = 0

.ENDM	TPA$MTRAN

	.LIST
