; STARDEFAE.MDL - system user interface definitions
;
;	Version	'V03-003'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL source for all user visible operating
;	system interfaces from A to E.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-003	RLRV3A2		Robert L. Rappaport	5-Apr-1982
;		Added DEV$M_RCT.
;
;	V03-002	PHL0040		Peter H. Lipman		23-Mar-1982
;		Added EMPTY flag to $DMPDEF flags word.
;
;	V03-001	RLRV3A1		Robert L. Rappaport	23-Mar-1982
;		Added device types to $DTDEF.
;
;	V02-031	EAD0061		Elliott A. Drayton	16-Feb-1982
;		Add device codes to $dcdef.
;
;	V02-030	MLJ34580	Martin L. Jack,	1-Feb-1982  0:34
;		Extend DJT structure to support SUBMIT/NAME improvements.
;
;	V02-029 EAD0054		Elliott A. Drayton	24-Jan-1982
;		Added definition for dual ported device and removed
;		old definition of PCL11.
;
;	V02-028	PHL0028		Peter H. Lipman		19-Jan-1982
;		Take out DIB$L_DEVDEPND2 shortening DIB to V2 size.
;
;	V02-027 DMW0011		David Michael Walp	 7-Jan-1981
;		Added ATR$?_HDR1_ACC
;
;	V02-026	SPF0052		Steve Forgey		02-Jan-1981
;		Add remote node fields to ACRDEF.
;
;	V02-025	TMH0025		Tim Halvorsen		28-Dec-1981
;		Add more arguments to the spawn callback request block.
;
;	V02-024	TMH0024		Tim Halvorsen		21-Dec-1981
;		Add changes to CLIDEF and CLISERVDEF to support spawn
;		and attach DCL callbacks.
;
;	V02-023	MIR0050		MICHAEL I. ROSENBLUM	2-DEC-1981
;		Add the terminals LQP02 and LA100.
;
;	V02-022	ACG0229		Andrew C. Goldstein,	1-Dec-1981  0:35
;		Extend statistics block
;
;	V02-021	ROW0051		Ralph O. Weber		24-NOV-1981
;		Add CLI$L_NEW_MASK and CLI$L_OLD_MASK which overlay part of 
;		the current CLI request descriptor block and two new CLI 
;		service codes, CLI$K_DISAOOB and CLI$K_ENABOOB, for disable 
;		and enable out-of-band character(s) AST processing by CLI.
;
;	V02-020	PHL0024		Peter H. Lipman		13-Nov-1981
;		Add items to $DVIDEF
;
;	V02-019	RNG0002		Rod N. Gamache		10-Nov-1981
;		Add device type for UNA11.
;
;	V02-018 PHL0022		Peter H. Lipman,	1-Nov-1981
;		Fix $ATRDEF, needed angle brackets rather than parens.
;		Error from V02-016.
;
;	V02-017	MLJ0057		Martin L. Jack,	31-Oct-1981  19:51
;		Correct typo (misplaced "E") in V02-014.
;
;	V02-016	ACG0221		Andrew C. Goldstein,	30-Oct-1981  17:57
;		Add journal control file attribute
;
;	V02-015	GWF0121		Gary W. Fowler		30-Oct-1981
;		Add items for WS extent to DJIDEF.
;
;	V02-014	PCG0001		Peter George		30-Oct-1981
;		Add new CLI callback codes.
;
;	V02-013 DMW0010		David Michael Walp	26-Oct-1981
;		Add MAX_CODE to the ATR$ def.
;
;	V02-012	PHL0020		Peter H. Lipman		23-Oct-1981
;		Add $DVIDEF macro to define item codes for the new
;		$GETDVI (get device/volume information) system service.
;
;	V02-011	SPF0042		Steve Forgey		01-Oct-1981
;		Add version vield to ACR$W_TYPE and make all type
;		codes nonzero.
;
;	V02-010	SPF0041		Steve Forgey		28-Sep-1981
;		Add image accounting selective enable/disable flags to
;		$ACCDEF.
;
;	V02-009	MIR0044		MICHAEL I. ROSENBLUM	28-SEP-1981
;		ADD NEW TERMINAL TYPES TO $DCDEF.
;
;	V02-008	EAD0001		Elliott A. Drayton	10-SEP-1981
;		Added device type codes DT$_PCL11R and DT$_PCL11T to $DCDEF.
;
;	V02-007 ROW0031		Ralph O. Weber		 8-SEP-1981
;		Add three new CLI service request codes.  Define CLI request
;		block format for symbol/logical name manipulation.  Define
;		local/global symbol flag value returned by CLI when getting
;		symbol's value.
;
;	V02-006 RNG0001		Rod N. Gamache		31-Aug-1981
;		Add new device types to $DCDEF.
;
;	V02-005	SPF0022		Steve Forgey		29-Aug-1981
;		Add $ACRDEF.
;
;	V02-004	JLV0068		Jake VanNoy		25-Aug-1981
;		Added DIB$L_DEVDEPND2.
;
;	V02-003 RIH0071		Richard I. Hustvedt 	31-Jul-1981
;		Added DT$_UDA50 for UDA disk controller.
;
;	V02-002	GWF0095		Gary W. Fowler		29-Jul-1981
;		Modify DJIDEF to increase job name to 10 characters.
;
;----


;
; ACCOUNTING AND TERMINATION MESSAGE FORMAT
; THIS IS THE STRUCTURE OF THE MESSAGE SENT TO THE TERMINATION MAILBOX
; AND TO THE JOB CONTROLLER.
;
	$STRUCT	ACC

	F MSGTYP,W		; MESSAGE TYPE CODE
	F MSGSIZ,W		; LENGTH OF DATA MESSAGE (VALID ONLY IN ACCLOG)
	F FINALSTS,L		; FINAL EXIT STATUS
	F PID,L			; PROCESS ID
	F JOBID,L		; JOB IDENTIFICATION (VALID ONLY IN ACCLOG)
	F TERMTIME,Q		; TERMINATION TIME (100NS UNITS)
	F ACCOUNT,T,8		; ACCOUNT NAME STRING (BLANK FILLED)
	F USERNAME,T,12		; USER NAME STRING (BLANK FILLED)
	M	1		; END OF FIXED AREA
	F CPUTIM,L		; CPUTIM IN 10MS UNITS
	M	2		; MARK START PRINT JOB VARIATION
	F PAGEFLTS,L		; TOTAL PAGE FAULTS
	F PGFLPEAK,L		; PEAK PAGING FILE USAGE
	F WSPEAK,L		; PEAK WORKING SET SIZE
	F BIOCNT,L		; COUNT OF BUFFERED I/O OPERATIONS
	F DIOCNT,L		; COUNT OF DIRECT I/O OPERATIONS
	F VOLUMES,L		; COUNT OF VOLUMES MOUNTED
	F LOGIN,Q		; LOGIN TIME (100NS UNITS)
	F OWNER,L		; PID OF SUBPROCESS OWNER
	L TERMLEN		; TERMINATION MESSAGE LENGTH
				; AND ACCOUNTING RECORD FOR NON BATCH JOBS
				; END OF TERMINATION MESSAGE
	F JOB_NAME,T,8		; JOB NAME (BLANK FILLED)
	F JOB_QUE,T,16		; QUEUE NAME (.ASCIC)
	L JOB_LEN		; LENGTH OF BATCH JOB ACCOUNTING RECORD

	P	2		; POINT AT PRINT JOB VARIABLE AREA
	F PAGCNT,L		; SYMBIONT PAGE COUNT
	F QIOCNT,L		; SYMBIONT QIO COUNT
	F GETCNT,L		; SYMBIONT GET COUNT
	F QUETIME,Q		; TIME JOB WAS QUEUED
	F PRT_NAME,T,8		; NAME OF PRINT JOB
	F PRT_QUE,T,12		; NAME OF PRINT QUEUE
	L PRT_LEN		; LENGTH OF PRINT ACCOUNTING RECORD
 
;
; DEFINE USER ACCOUNTING MESSAGE DATA AREA
;
	P	1		; POINT AT START OF MESSAGE DEPENDENT AREA
	F USER_DATA,T,132	; ALLOW UP TO 132 BYTES OF USER DATA
	L INS_LEN		; LENGTH OF INSERT MESSAGE
;
; ASSIGN RECORD TYPE CODES FOR RECORDS IN THE ACCOUNT LOG FILE
;
 
	K	<ACC,$K_,1,1		; PROCESS ACCOUNTING RECORDS
		PRCTRM			; JOB TERMINATION
		BATTRM			; BATCH JOB TERMINATION
		INTTRM			; INTERACTIVE JOB TERMINATION
		LOGTRM			; LOGIN FAILURE PROCESS TERMINATION
		IMGTRM			; IMAGE TERMINATION
		SUBTRM			; SUBPROCESS TERMINATION
		DETTRM			; DETACHED PROCESS TERMINATION
		NETTRM			; NETWORK PROCESS TERMINATION
		>
 
	K	<ACC,$K_,16,1		; MISC ACCOUNTING RECORDS
		PRTJOB			; PRINT JOB ACCOUNTING
		INSMSG			; INSERTED MESSAGE
		>
 
;
; DEFINE ACCOUNTING MANAGER MESSAGE CODES
;
 
 
	K	<ACC,$K_,1,1		;
		INSMESG			; INSERT MESSAGE INTO ACCOUNTING FILE
		NEWFILE			; CREATE A NEW ACCOUNT FILE
		ENABACC			; ENABLE ACCOUNTING
		DISAACC			; DISABLE ACCOUNTING
		ENABSEL			; ENABLE SELECTIVE ACCOUNTING
		DISASEL			; DISABLE SELECTIVE ACCOUNTING
		>
 
	E

;+
; ACRDEF - ACCOUNTING RECORD DEFINITIONS
;
;**********************************************************************
; NOTE:  IF ANY FIELDS CHANGE, A NEW VERSION NUMBER MUST BE ADDED AND *
;	 "ACR$K_CURVER" EQUATED TO IT.				      *
;**********************************************************************
;
;-

	$STRUCT	ACR

	C	<,$K_,0,1	; RECORD/PACKET VERSIONS (ACR$V_VERSION)
		VERSION2		; VMS VERSION 2 ACCOUNTING FORMAT
		VERSION3T		; VMS VERSION 3 FIELD TEST
		VERSION3		; VMS VERSION 3 ACCOUNTING FORMAT
		>
	C	<,$K_,ACR$K_VERSION3,0
		CURVER			; CURRENT FORMAT VERSION NUMBER
		>

	F	TYPE,W		; RECORD/PACKET TYPE

	V	<M		; RECORD/PACKET TYPE FIELDS
		PACKET,1		; RECORD(0)/PACKET(1)
		TYPE,7			; RECORD/PACKET TYPE
		SUBTYPE,4		; RECORD/PACKET SUBTYPE
		VERSION,3		; RECORD/PACKET VERSION NUMBER
		CUSTOMER,1		; DIGITAL(0)/CUSTOMER(1)
		>

		C	<,$K_,1,1	; RECORD TYPE (ACR$V_TYPE) CONSTANTS
			PRCDEL,			; PROCESS DELETE
			PRCPUR,			; PROCESS PURGE
			IMGDEL,			; IMAGE DELETE
			IMGPUR,			; IMAGE PURGE
			SYSINIT,		; SYSTEM INITIALIZATION
			SETTIME,		; SET SYSTEM TIME
			LOGFAIL,		; LOGIN VALIDATION FAILURE
			PRINT			; PRINT JOB
			USER,			; USER SUPPLIED DATA
			ENABLE,			; ACC. MANG. FUNCTION ENABLE
			DISABLE,		; ACC. MANG. FUNCTION DISABLE
			ALTACM,			; DECLARE ALTERNATE ACC. MANG.
			FILE_FL			; ACCOUNTING FILE - FORWARD LINK
			FILE_BL			; ACCOUNTING FILE - BACKWARD LINK
			>

		C	<,$K_,1,1	; RECORD SUBTYPE (ACR$V_SUBTYPE) CONSTANTS
			INTERACTIVE		; INTERACTIVE PROCESS
			SUBPROCESS		; SUBPROCESS
			DETACHED		; DETACHED PROCESS
			BATCH			; BATCH PROCESS
			NETWORK			; NETWORK PROCESS
			>

		C	<,$K_,1,1	; PACKET TYPE (ACR$V_TYPE) CONSTANTS
			ID			; IDENTIFICATION PACKET
			RESOURCE		; RESOURCE USAGE PACKET
			IMAGENAME		; IMAGENAME PACKET
			FILENAME		; FILENAME PACKET
			USER_DATA		; USER DATA PACKET
			>

	F	LENGTH,W	; RECORD OR PACKET LENGTH
	M	1		; MARK END OF RECORD/PACKET COMMON PART
;
; RECORD HEADER
;
	P	1
	F	SYSTIME,Q	; EVENT SYSTEM TIME
	L	HDRLEN		; RECORD HEADER LENGTH

;
; IDENTIFICATION PACKET
;
	P	1
	F	PID,L		; PROCESS ID
	F	OWNER,L		; OWNER PROCES ID
	F	UIC,L		; PROCESS UIC
	S	MEM,,W		; 	MEMBER UIC
	S	GRP,,W		;	GROUP UIC
	F	PRIV,Q		; PROCESS PRIV
	F	PRI,B		; PROCESS PRIORITY
	F	,B		; SPARE
	F	USERNAME,W	; USERNAME OFFSET
	F	ACCOUNT,W	; ACCOUNT NAME OFFSET
	F	NODENAME,W	; NODE NAME OFFSET
	F	TERMINAL,W	; TERMINAL NAME OFFSET
	F	JOBNAME,W	; JOB NAME OFFSET
	F	JOBID,L		; JOB ID
	F	QUEUE,W		; QUEUE NAME OFFSET
	F	NODEADDR,W	; REMOTE NODE ADDRESS
	F	REMOTEID,W	; REMOTE ID OFFSET
	L	IDVAR		; BEGINNING OF VARIABLE STORAGE AREA
;
; RESOURCE PACKET
;
	P	1
	F	LOGIN,Q		; PROCESS/IMAGE START TIME
	F	STATUS,L	; PROCESS/IMAGE FINAL STATUS
	F	IMGCNT,L	; IMAGE EXECUTION COUNT/SEQUENCE NUMBER
	F	CPUTIME,L	; PROCESS/IMAGE CPU TIME
	F	FAULTS,L	; PROCESS/IMAGE PAGE FAULT COUNT
	F	FAULTIO,L	; PROCESS/IMAGE PAGE FAULT I/O COUNT
	F	WSPEAK,L	; PROCESS/IMAGE WORKING SET PEAK
	F	PAGEFL,L	; PROCESS/IMAGE PEAK PAGE FILE USAGE
	F	DIOCNT,L	; PROCESS/IMAGE DIRECT I/O COUNT
	F	BIOCNT,L	; PROCESS/IMAGE BUFFERED I/O COUNT
	F	VOLUMES,L	; PROCESS/IMAGE VOLUME MOUNT COUNT

;
; IMAGENAME PACKET
;
	P	1
	F	IMAGENAME,T,256	; IMAGENAME
;
; PRINT RESOURCE PACKET
;
	P	1
	F	PRINTSTS,L	; JOB STATUS
	F	QUETIME,Q	; TIME JOB WAS QUEUED
	F	BEGTIME,Q	; TIME JOB WAS BEGUN
	F	SYMCPUTIM,L	; SYMBIONT CPU TIME
	F	PAGECNT,L	; TOTAL PAGES PRINTED
	F	QIOCNT,L	; TOTAL QIOS ISSUED
	F	GETCNT,L	; TOTAL GETS ISSUED
;
; FILENAME PACKET
;
	P	1
	F	FILENAME,T,256	; FILENAME
;
; USER DATA PACKET
;
	P	1
	F	USER_DATA,T,256	; USER DATA
	E

; ATTRIBUTE LIST DESCRIPTION. THE ATTRIBUTE CONTROL LIST IS USED TO READ AND
; WRITE FILE ATTRIBUTES. IT CONSISTS OF CONCATENATED ATTRIBUTE CONTROL BLOCKS
; TERMINATED BY A SINGLE ZERO LONGWORD.
;

	$STRUCT	ATR

	F SIZE,W			; SIZE OF ATTRIBUTE IN BYTES
	F TYPE,W			; ATTRIBUTE TYPE CODE
	F ADDR				; ADDRESS OF ATTRIBUTE TEXT

	C<,,3				; ATTRIBUTE CODES
	UCHAR				; 4 BYTE USER FILE CHARACTERISTICS
	RECATTR				; 32 BYTES RECORD ATTRIBUTES
	FILNAM				; 6 BYTE RAD-50 FILE NAME
	FILTYP				; 2 BYTE RAD-50 FILE TYPE
	FILVER				; 2 BYTE BINARY FILE VERSION
	EXPDAT				; 7 BYTE ASCII EXPIRATION DATE
	STATBLK				; 32 BYTE STATISTICS BLOCK
	HEADER				; 512 BYTE FILE HEADER
	BLOCKSIZE			; MAGTAPE BLOCK SIZE
	USERLABEL			; USER FILE LABEL
	ASCDATES			; REVISION COUNT THRU EXP DATE IN ASCII
	ALCONTROL			; COMPATIBILITY MODE ALLOCATION DATA
	ENDLBLAST			; END OF MAGTAPE LABEL PROCESSING AND SUPPLY AST CONTROL BLOCK
	ASCNAME				; FILE NAME, TYPE & VERSION IN ASCII
	CREDATE				; 64 BIT CREATION DATE
	REVDATE				; 64 BIT REVISION DATE
	EXPDATE				; 64 BIT EXPIRATION DATE
	BAKDATE				; 64 BIT BACKUP DATE
	UIC				; 4 BYTE FILE OWNER UIC
	FPRO				; 2 BYTE FILE PROTECTION
	RPRO				; 2 BYTE RECORD PROTECTION
	ACLEVEL				; 1 BYTE FILE ACCESS LEVEL
	SEMASK				; FILE SECURITY MASK AND LIMIT
	UIC_RO				; READ ONLY UIC
	DIRSEQ				; DIRECTORY UPDATE SEQUENCE COUNT
	BACKLINK			; FILE BACK LINK POINTER
	JOURNAL				; JOURNAL CONTROL FLAGS
	HDR1_ACC			; ANSI TAPE HEADER 1 ACCESSIBILITY
					;  CHARACTER

					; All new attributes should be
					;  added here before MAX_PLUS1
					
	MAX_PLUS1			; Maximum code plus one
	>

	C MAX_CODE, <ATR$C_MAX_PLUS1 - 1>

	C<,$S_,				; ATTRIBUTE MAXIMUM LENGTHS
	UCHAR,4				; 4 BYTE USER FILE CHARACTERISTICS
	RECATTR,32			; 32 BYTES RECORD ATTRIBUTES
	FILNAM,6			; 6 BYTE RAD-50 FILE NAME
	FILTYP,2			; 2 BYTE RAD-50 FILE TYPE
	FILVER,2			; 2 BYTE BINARY FILE VERSION
	EXPDAT,7			; 7 BYTE ASCII EXPIRATION DATE
	STATBLK,32			; 32 BYTE STATISTICS BLOCK
	HEADER,512			; 512 BYTE FILE HEADER
	BLOCKSIZE,2			; MAGTAPE BLOCK SIZE
	USERLABEL,80			; USER FILE LABEL
	ASCDATES,35			; REVISION COUNT THRU EXP DATE IN ASCII
	ALCONTROL,14			; COMPATIBILITY MODE ALLOCATION DATA
	ENDLBLAST,4			; END OF MAGTAPE LABEL PROCESSING AND SUPPLY AST CONTROL BLOCK
	ASCNAME,20			; FILE NAME, TYPE & VERSION IN ASCII
	CREDATE,8			; 64 BIT CREATION DATE
	REVDATE,8			; 64 BIT REVISION DATE
	EXPDATE,8			; 64 BIT EXPIRATION DATE
	BAKDATE,8			; 64 BIT BACKUP DATE
	UIC,4				; 4 BYTE FILE OWNER UIC
	FPRO,2				; 2 BYTE FILE PROTECTION
	RPRO,2				; 2 BYTE RECORD PROTECTION
	ACLEVEL,1			; 1 BYTE FILE ACCESS LEVEL
	SEMASK,8			; FILE SECURITY MASK AND LIMIT
	UIC_RO,4			; READ ONLY UIC
	DIRSEQ,2			; DIRECTORY UPDATE SEQUENCE COUNT
	BACKLINK,6			; FILE BACK LINK POINTER
	JOURNAL,2			; JOURNAL CONTROL FLAGS
	HDR1_ACC,1			; ANSI TAPE HEADER 1 ACCESSIBILITY
					;  CHARACTER
	>

	E

;
; CONDITION HANDLING ARGUMENT LIST OFFSETS
; THERE ARE THREE CONDITIONAL HANDLING STRUCTURES: THE PRIMARY ARGUMENT
; LIST, AND THE SIGNAL AND MECHANISM ARRAYS. ALL ARE IDENTIFIED BY THE SAME
; BLOCK PREFIX.
;
 
	$STRUCT	CHF
 
	M 1				;PRIMARY ARGUMENT LIST
	F				;PRIMARY ARGUMENT COUNT
	F SIGARGLST			;ADDRESS OF SIGNAL ARGUMENTS
	F MCHARGLST			;ADDRESS OF MECHANISM ARGUMENTS

	P 1				;SIGNAL ARRAY
	F SIG_ARGS			;NUMBER OF SIGNAL ARGUMENTS
	F SIG_NAME			;SIGNAL NAME
	F SIG_ARG1			;FIRST SIGNAL SPECIFIC ARGUMENT

	P 1				;MECHANISM ARRAY
	F MCH_ARGS			;NUMBER OF MECHANISM ARGUMENTS
	F MCH_FRAME			;ESTABLISHER FRAME ADDRESS
	F MCH_DEPTH			;FRAME DEPTH OF ESTABLISHER
	F MCH_SAVR0			;SAVED REGISTER R0
	F MCH_SAVR1			;SAVED REGISTER R1
 
	E

;++
;
; $CLIDEF --- COMMAND LAGUAGE INTERFACE DEFINITIONS
;
; THIS MODULE DEFINES THE OFFSET VALUES FOR THE DATA STRUCTURES
; USED TO COMMUNICATED COMMAND INFORMATION BETWEEN THE CLI AND
; THE UTILITY THAT WAS REQUESTED TO PERFORM THE OPERATION.
;
;--
	$STRUCT	CLI
 
	M	1
	F	INIARGCNT		; INITIAL ARG COUNT
	F	PROGXFER,A		; PROGRAM TRANSFER VECTOR ADDRESS
	F	UTILSERV,A		; ADDRESS OF CLI UTILITY SERVICE
	F	IMGHDADR,A		; ADDRESS OF IMAGE HEADER
	F	IMGFILED,A		; ADDRESS OF IMAGE FILE DATA
	F	LINKFLAG		; LINK FLAG LONGWORD
	F	CLIFLAG			; CLI FLAG LONGWORD
	V<M				; DEFINE CLI FLAGS
		DEBUG			; DEBUG QUALIFIER SEEN
		DBGTRU			; DEBUG WAS TRUE
		VERIFY			; VERIFY IS ON
		BATCH			; THIS PROCESS IS A BATCH JOB
		INDIRECT		; INDIRECT LEVEL NOT EQUAL TO ZERO
		VFYINP			; UTILITY SHOULD VERFIY INPUT
		,2			; ROUND UP TO NEXT BYTE
		TRMVRBLV,2		; TERMINAL VERBOSITY LEVEL
		,6			; ROUND UP TO NEXT BYTE
		DBGEXCP			; DEBUGGER CALLED VIA "DEBUG" EXCEPTION
		>
;	THE FOLLOWING ARGUMENTS ARE OPTIONAL DEPENDING ON INIARGCNT
	F	ARGLIST			; ADDRESS OF APPLICATION ARGUMENT LIST
					; (USED FOR MERGED IMAGE ARG. PASSING)

;
;	DEFINE CLI COMMAND INTERFACE REQUEST BLOCK
;
 
	P	1
 
	F	,L			; DUMMY ARG
	M	2
	S	RQTYPE,,B		; TYPE OF REQUEST BEING MADE
	V <				; VIELD DEFINITIONS
		SUBTYP,4		; SUB TYPE VIELD
		PRITYP,4		; PRIMARY TYPYE
		>
	S	SERVCOD,,W		; CLI SERVICE CODE
	S	RQINDX,1,B		; OFFSET FOR VALUE KEYWORD INDEX
	S	BITNUM,1,B		; BIT TO SET IF REQUEST IS SUCESSFUL
	S	RQFLGS,,B		; INPUT FLAGS CONCERNING REQUEST
	V <M				; FLAGS FOR PARAMETER PARSING
		PARMREQ			; PARAMATER IS REQUIRED
		ABSADR			; ALL ADDRESS ARE ABSOLUTE
		EXPNAM			; RETURN EXPLICIT NAMES ONLY
		>
 
	V <M				; FLAGS FOR VALUE PARSING
		LASTVAL			; LAST VALUE ALLOWED
		DUMMY			; *** SAVE PLACE FOR ABS ADR ***
		>
 
	S	RQSTAT,,B		; OUTPUT STATUS FLAGS
 
	V <M				; STATUS FLAGS FOR PARAMETER PARSING
		PARMPRS			; PARAMETER IS PRESENT
		CONCATINP		; INPUT CONCATONATION EXISTS
		MOREINP			; ANOTHER SET OF INPUT PARAMETERS
		PARMDEF			; PARAMETER WAS DEFAULTED PRESENT
		>
	V <M				; FLAGS FROM VALUE PARSING
		MOREVALS		; UNPROCESSED VALUES REMAIN
		KEYVALU			; SUBSEQUENT TOKEN IS VALUE FOR KEY
		>
 
	F	ERRACT,A		; ADDRESS OF ERROR ACTION ROUTINE
	F	RQDESC,Q		; QUADWORD REQUEST DESCRIPTOR
	S	RQSIZE,,W		; RESULTANT SIZE OF PARAMETER
	S	,,W			; SPARE WORD IN DESCRIPTOR
	S	RQVALU,,L		; ACTUAL VALUE IN VALUE CONVERSTION
	S	RQADDR,4,A		; ADDRESS OF RESULTANT PARAMETER
	F	PRSACT,A		; PARAMETER PRESENT ACTION ROUTINE
	F	ABSACT,A		; PARAMETER ABSENT ACTION ROUTINE
	F	QUALST,A		; ADDRESS OF QUALIFIERS
	L	REQDESC			; SIZE OF THE STRUCTURE

;
; Define the Descriptor Used by Symbol and Logical-name Callbacks
;
	P	2
	F	NAMDESC,Q		; Logical name or symbol name
	F	VALDESC,Q		; Equivalence name or symbol value

;
; Define the Descriptor Locations Used for the Old/New
; Out-of-Band Character(s) Masks
;
	P	2
	F	NEW_MASK,L		; Enable/disable mask
	F	OLD_MASK,L		; Previous enabled values mask

;
; Define the descriptor used for ATTACH callback
;

	P	2
	F	PID,L			; PID of "destination" process

;
; Define the descriptor used for SPAWN callback
;
	P	2
	F	FLAGS,B			; Flags byte
	V	<M
		NOWAIT			; Do not wait for subprocess completion
		NOCLISYM		; Do not copy CLI symbols to subprocess
		NOLOGNAM		; Do not copy logical names to subprocess
		>
	F	,B,3			; Unused
	F	OUTPID,L		; PID of subprocess on return
	F	LSTSTATUS,L		; Address to store final subprocess status
	F	CMDSTR,Q		; Descriptor of command string
	F	INPUT,Q			; Descriptor of input filespec
	F	OUTPUT,Q		; Descriptor of output filespec
	F	PRCNAM,Q		; Descriptor of name for subprocess
	F	ASTADR,L		; Address of termination AST routine
	F	ASTPRM,L		; Address of AST routine parameter
	F	EFN,B			; Event flag to set on termination
	F	,B,3			; Unused

;
; Define the length of the longest "supervisor-mode service" request block,
; so that programs can allocate a fixed amount of space for the block.
;

	L	SRVDESC			; Length of longest "service" callback

;
; DEFINE THE PARAMETER QUALIFIER DESCRIPTOR
;

	P	1
 
	F	QDBLKSIZ,B		; SIZE OF THE FINAL BLOCK
	F	QDCODE,B		; ID CODE FOR THE QUALIFIER
	F	QDFLGS,B		; FLAGS BYTE
	V <M				;
		ALLOCCUR		; TAKE ACTION ON ALL OCCURANCES
		QDUSRV			; USER CONTEX VALUE IS PRESENT
		QDEXPA			; TAKE ACTION ON EXPLICIT OCCURANCES
		>
	F	QDSTAT,B		; QUALIFIER STATUS
	V <M				; DEFINE QUALIFIER STATUS BITS
		QUALTRU			; QUALIFIER IS TRUE
		QUALEXP			; QUALIFIER EXPLICITLY STATED
		>
 
	F	QDVALDESC,Q		; QUALIFIER VALUE DESCRIPTOR
	S	QDVALSIZ,,W		; SIZE OF VALUE
	S	,,W			; SPARE WORD
	S	QDVALADR,,A		; ADDRESS OF VALUE STRING
	F	TRUACT,A		; QUALIFIER TRUE ACTION ROUTINE
	F	FLSACT,A		; QUALIFIER FALSE ACTION ROUTINE
	L	QUALDEF			; SIZE OF FIXED PART OF STRUCTURE
	L	QDBITS			; START OF BIT LISTS(VARIALBLE LENGTH)
	F	USRVAL			; OPTION USER VALUE IF PRESENT

;
; DEFINE SPACE FOR THE RESULT PARSE WORK AREA
;
 
	P	1

	F	WORKAREA,L,32		; ALLOCATE 32 LONG WORDS
	L	WORKAREA		; SIZE OF HEADER
 
 
;
; DEFINE CLI UTILITY REQUEST CODES
;
;	CODES ARE 8 BITS, CONSISTING OF 2 4 BIT FIELDS
;	THE LEAST 4 BITS ARE SUBFUCTION DEFINITONS
;	AND THE MOST SIGNIFICANT 4 BITS ARE REQUEST TYPE
;
	K	<CLI,$K_,0,1		; DEFINE REQUEST TYPE CODES
		UTILOPR			; UTILITY OPERATIONS
		INPSPEC			; REQUEST FOR AN INPUT SPECIFICATION
		OUTSPEC			; AN OUTPUT FILE SPECIFICATION
		PARDONE			; PARAMETER DONE REQUEST
		VALCONV			; REQUEST A VALUE CONVERSION
		CLINT			; CLINT OPERATIONS
		>
;
; DEFINE COMPLETE CODES FOR UTILITY OPERATIONS
;
	K	<,$K_,<CLI$K_UTILOPR@4>,1
		INITPRS			; REQUEST INITIALIZATION OF PARSE
		GETCMD			; GET COMMAND BUFFER LIMITS
		GETQUAL			; OPTAIN STATE OF QUALIFIERS
		GETOPT			; DECODE COMMAND OPTION
		GETLINE			; GET COMMAND LINE
;
; THE CLISERV REQUEST TYPE APPEARS HERE, INSTEAD OF WITH THE OTHER REQUEST
; TYPES, BECAUSE IT HAS NO SUBFUNCTIONS ASSOCIATED WITH IT, AND BECAUSE A
; DAY 1 CODING ERROR CAUSES DCL TO EXPECT THAT THIS REQUEST NUMBER WILL
; APPEAR IN THE SUBFUNCTION BITS.  THIS MEANS THAT NO UTILITY OPERATION
; CAN BE DEFINED WITH THE SUBFUNCTION NUMBER 5.
;
		CLISERV			; REQUEST A SERVICE FROM THE CLI
		>
 
;
; DEFINE COMPLETE CODES FOR INPUT SPECIFICATIONS
;
	K	<,$K_,<CLI$K_INPSPEC@4>,1
		INPUT1			; PRIMARY INPUT
		INPUT2			; SECONDARY INPUT
		INPUT3			; THIRD,
		INPUT4			; ETC,ETC,ETC
		>
;
; DEFINE COMPLETE CODES FOR OUTPUT SPECIFICATIONS
;
	K	<,$K_,<CLI$K_OUTSPEC@4>,1
		OUTPUT1			; FIRST OUTPUT
		OUTPUT2			; SECOND OUTPUT
		OUTPUT3			; THIRD,-
		OUTPUT4			; ETC,ETC,ETC
		>
;
; DEFINE CODES FOR RESULT PARSE PARAMETER COMPLETION
;
	K	<,$K_,<CLI$K_PARDONE@4>,1
		ENDPRM1			; COMPLETED PARAMETER SET 1
		ENDPRM2			; COMPLETED PARAMETER SET 2
		ENDPRM3			; COMPLETED PARAMETER SET 3
		ENDPRM4			; COMPLETED PARAMETER SET 4
		>
;
; DEFINE CODES FOR VALUE CONVERSION REQUESTS
;
	K	<,$K_,<CLI$K_VALCONV@4>,1
		NUMERVAL		; NUMBERIC VALUE
		ASCIIVAL		; ASCII VALUE
		KEYWORD			; KEYWORD VALUE
		KEYVAL			; KEYWORD WITH VALUE
		FILSPEC			; VALUE IS A FILESPEC
		>
;
; DEFINE COMPLETE CODES FOR UTILITY OPERATIONS
;
	K	<,$K_,<CLI$K_CLINT@4>,1
		PRESENT			; DETERMINE IF ENTITY IS PRESENT
		GETVALUE		; GET VALUE OF ENTITY
		ENDPARSE		; CLEAN UP AFTER PARSING COMMAND
		DCLPARSE		; PARSE USER COMMAND LINE
		DISPATCH		; DISPATCH TO ACTION ROUTINE
		>
	E

;
; DEFINE CLI SERVICE REQUEST CODES
;
 
	$STRUCT	CLISERV
	K	<CLI,$K_,1,1		; DEFINE CLI SERVICE CODES
		PAUSE			; PAUSE THE IMAGE
		DEFLOCAL		; DEFINE A SYMBOL IN THE LOCAL TABLE
		DEFGLOBAL		; DEFINE A SYMBOL IN THE GLOBAL TABLE
		CHAIN			; PASS AN IMAGE TO RUN AFTER THIS ONE
		COMMAND			; PASS A COMMAND LINE TO LATER EXECUTE
		CREALOG			; DEFINE A PROCESS LOGICAL NAME
		DELELOG			; DELETE A PROCESS LOGICAL NAME
		DISACTRLY		; DISABLE DCL CONTROL Y PROCESSING
		ENABCTRLY		; ENABLE DCL CONTROL Y PROCESSING
		GETSYM			; RETURN VALUE OF A SYMBOL
		DELELCL			; DELETE A LOCAL SYMBOL
		DELEGBL			; DELETE A GLOBAL SYMBOL
		DISAOOB			; DISABLE OUT-OF-BAND CHARACTER(S)
		ENABOOB			; RE-ENABLE OUT-OF-BAND CHARACTER(S)
		SPAWN			; SPAWN A SUBPROCESS
		ATTACH			; ATTACH TO A PROCESS
	>
;
; Define local/global symbol flag returned by GETSYM
;
	K	<CLI,$K_,1,1
		LOCAL_SYM		; Local symbol
		GLOBAL_SYM		; Global symbol
	>
	E
;
; DEFINE GENERIC CODES FOR VERBS
;
 
	$STRUCT	CLIVERB
	K	<CLI,$K_VERB_,1,1	; DEFINE VERB QENERIC CODES
		ALLO			; ALLOCATE
		ANAL			; ANALIZE
		ASSI			; ASSIGN
		BASI			; BASIC
		BLIS			; BLISS
		COBO			; COBOL
		CONT			; CONTINUE
		COPY			; COPY
		CREA			; CREATE
		DATA			; DATA
		DEAL			; DEALLOCATE
		DEAS			; DEASSIGN
		DEBU			; DEBUG
		DEFI			; DEFINE
		DELE			; DELETE
		DEPO			; DEPOSIT
		DIFF			; DIFFERENCE COMMAND
		DIRE			; DIRECTORY
		DISM			; DISMOUNT
		EDIT			; EDIT
		EOD			; EOD
		EXAM			; EXAMINE
		EXIT			; EXIT
		FORT			; FORTRAN
		GOTO			; GOTO
		HELP			; HELP
		IF			; IF
		INIT			; INITIALIZE
		INQU			; INQUIRE
		LINK			; LINK
		LOGO			; LOGOUT
		MACR			; MACRO
		MCR			; MCR
		ON			; ON
		PRIN			; PRINT
		RUN			; RUN
		SET			; SET
		SHOW			; SHOW
		STAR			; START
		STOP			; STOP
		SUBM			; SUBMIT
		TYPE			; TYPE
		MOUN			; MOUNT
		PATC			; PATCH
		REPL			; REPLAY
		UNLO			; UNLOCK
		APPE			; APPEND COMMAND
		DUMP			; DUMP
		PURG			; PURGE
		RENA			; RENAME
		CANC			; CANCEL
		LIBR			; LIBRARY
		SORT			; SORT
		REQU			; REQUEST
		SYNC			; SYNCRONIZE
		CORA			; CORAL
		PASC			; PASCAL
		PLI			; PL/1
		MESS			; MESSAGE
		>
	K	<CLI,$K_VERB_,255,-1	; DEFINE VERB QENERIC CODES
		FORE			; FOREIGN COMMAND
		>
	E

;+
; CARD READER STATUS BITS
;-
 
	$STRUCT	CR
 
	V<				;CARD READ CHARACTERISTICS DEFINITIONS
		TMODE,4,,M		; TRANSLATION MODE
	>				;
 
;
; TRANSLATION MODE DEFINITIONS
;
 
	K<,$K_				;
		T026,0			;026 PUNCH CODE TRANSLATION
		T029,1			;029 PUNCH CODE TRANSLATION
	>				;
 
	E

;
; DEVICE ADAPTER, CLASS, AND TYPE DEFINITIONS
;
	$STRUCT	DC

;
; DEFINE ADAPTER TYPES
;
	K<AT,$_				;DEFINE ADAPTER TYPES
		MBA,0			; MASSBUS ADAPTER
		UBA,1			; UNIBUS ADAPTER
		DR,2			; DR32 ADAPTER
		MPM,3			; MULTI-PORT MEMORY
		CI,4			; CI BUS
		NULL,5			; NULL (SOFTWARE) ADAPTER
	>
;
; DEFINE DEVICE CLASSES
;
	K<DC,$_				;DEFINE DEVICE CLASSES
		DISK,1			; DISK
		TAPE,2			; TAPES
		SCOM,32			; SYNCHRONOUS COMMUNICATIONS DEVICES
		CARD,65			; CARD READER
		TERM,66			; TERMINAL
		LP,67			; LINE PRINTER
		REALTIME,96		; REAL-TIME
		BUS,128			; BUSES, E.G, CI
		MAILBOX,160		; MAILBOX
		JOURNAL,161		; JOURNAL
		MISC,200		; MISCELLANEOUS DEVICES
	>
 
;
; DEFINE DEVICE TYPES
;
 
	K<DT,$_				;
 
;
; DISK DEVICES
;
 
		RK06,1			;RK06 DISK
		RK07,2			;RK07 DISK
		RP04,3			;RP04 DISK
		RP05,4			;RP05 DISK
		RP06,5			;RP06 DISK
		RM03,6			;RM03 DISK
		RP07,7			;RP07 DISK
		RP07HT,8		;RP07 DISK WITH HEAD/TRACK
		RL01,9			;RL01 DISK
		RL02,10			;RL02 DISK
		RX02,11			;RX02 DISK
		RX04,12			;RX04 DISK
		RM80,13			;RM80 DISK
		TU58,14			;TU58
		RM05,15			;RM05 DISK
		RX01,16			;RX01 DISK
		ML11,17			;ML11 disk
		RB02,18			;R02 ON RB730
		RB80,19			;R80 ON RB730
		RA80,20			;R80 ON INTELLIGENT CONTROLLER
		RA81,21			;R81 ON INTELLIGENT CONTROLLER
		RA60,22			;PINON ON INTELLIGENT CONTROLLER
		RZ01,23			;AZTEC REMOVABLE
		RZF01,24		;AZTEC FIXED
 
;
; TAPE DEVICES
;
 
		TE16,1			;TE16 MAGTAPE
		TU45,2			;TU45 MAGTAPE
		TU77,3			;TU77 MAGTAPE
		TS11,4			;TS11 MAGTAPE
		TU78,5			;TU78 MAGTAPE
	>				;
;
; TERMINAL DEVICE TYPES
;
	C<DT,$_,0,1			; **** MATCHES $TTDEF *****
	TTYUNKN,0			; UNKNOWN TERMINAL
	VT05,1				; VT05
	FT1,16				; FOREIGN TERMINAL TYPES
	FT2,17
	FT3,18
	FT4,19
	FT5,20
	FT6,21
	FT7,22
	FT8,23				; END OF FOREIGN TYPES
					; RESERVE REST UP TO 32 FOR EXTENSIONS
	LAX,32				; LA TYPE TERMINAL
	LA36,32				; LA36
	LA120,33
	VT5X,64				; VT5X TYPE
	VT52,64				; VT52
	VT55,65				; VT55
	VT100,96			; VT100
	VK100,2
	VT173,3
	LA34,34
	LA38,35
	LA12,36
	LA24,37
	LA100,37
	LQP02,38
	VT101,97
	VT102,98
	VT105,99
	VT125,100
	VT131,101
	VT132,102
	>				; ******
	C<DT,$_,0,1
	DZ11,66				; DZ11 CONTROLLER
	DZ32,67				; DZ32 CONTROLLER
	DZ730,68			; DZ730 (COMBO) CONTROLLER
	>
;
; SYNCHRONOUS COMMUNICATIONS DEVICE TYPES
;
	C<DT,$_,0,1			
	DMC11,1				; DMC11
	DMR11,2				; DMR11
	XK_3271,3			; DUP-11 FOR 3271 PROTOCOL EMULATOR
	XJ_2780,4			; DUP-11 FOR 2780    "        "
	NW_X25,5			; X25 PROTOCOL EMULATOR
	NV_X29,6			; X29   "         "
	SB_ISB11,7			; ISB-11 DEC dataway
	MX_MUX200,8			; MUX-200 PROTOCOL EMULATOR
	DMP11,9				; DMP11
	DMF32,10			; DMF32
	XV_3271,11			; DV-11 3271 PROTOCOL EMULATOR
	CI,12				; CI - Computer Interconnect
	NI,13				; NI - Network Interconnect
	UNA11,14			; UNIBUS to NI adapter
	YN_X25,15			; KMS11 X.25 P. E.
	YO_X25,16			;   "    "     "
	YP_ADCCP,17			;   "   ADCCP P.E.
	YQ_3271,18			;   "    "    "
	YR_DDCMP,19			;   "   DDCMP
	YS_SDLC,20			;   "   SDLC
	>
;
; LINE PRINTER AND CARD READER DEVICE TYPES
;
	C<DT,$_,0,1			
	LP11,1				; LP11
	LA11,2				; LA11
	LA180,3				; LA180
	>

	C<DT,$_,0,1			
	CR11,1				; CR11 CARD READER
	>

	C<DT,$_,0,1			
	MBX,1				; GENERIC MAILBOX
	>
;
; REALTIME DEVICE TYPES
;
	C<DT,$_,0,1
	LPA11,1				; LPA-11
	DR780,2				; DR780
	DR750,3				; DR750
	DR11W,4				; DR11W
	PCL11R,5			; PCL11 RECEIVER (CSS)
	PCL11T,6			; PCL11 TRANSMTTER (CSS)
	DR11C,7				; DR11C PARALLEL INTERFACE
	XI_DR11C,8			; PARALLEL INTERFACE ON DMF-32
	>

;
; BUS CLASS DEVICES
;

	C<DT,$_
	CI780,1				; CI780
	CI750,2				; CI750
	UDA50,3				; UDA50
	>

;
; JOURNAL DEVICES
;
	C<DT,$_,0,1
	UNKNJNL,0			; UNKNOWN JOURNAL TYPE (ONLY IN TEMPLATE)
	RUJNL,1				; RECOVERY UNIT JOURNAL
	BIJNL,2				; BEFORE IMAGE JOURNAL
	AIJNL,3				; AFTER IMAGE JOURNAL
	ATJNL,4				; AUDIT TRAIL JOURNAL
	>

;
; MISCELLANEOUS DEVICES
;
	C<DT,$_,0,1
	DN11,1				; AUTODIALER
	>

	E

;
;  THE FOLLOWING BITS DEFINE THE DEVICE CHARACTERISTICS FOR
;  BOTH THE UCBS AND RMS.
;
	$STRUCT	DEV
	V <M
	REC		; DEVICE RECORD ORIENTED
	CCL		; CARRIAGE CONTROL DEVICE
	TRM		; DEVICE IS A TERMINAL
	DIR		; DEVICE IS DIRECTORY STRUCTURED
	SDI		; DEVICE IS SINGLE DIRECTORY STRUCTURED
	SQD		; SEQUENTIAL BLOCK-ORIENTED DEVICE (I.E., MAGTAPE)
	SPL		; DEVICE BEING SPOOLED
	OPR		; DEVICE IS AN OPERATOR
	RCT		; DISK CONTAINS RCT (DEC STANDARD 166 DISK)
	,4				; SPARES TO CORRESPOND WITH RSX11M
	NET		; NETWORK DEVICE
	FOD		; FILES-ORIENTED DEVICE (I.E., DISK AND MT)
	DUA		; DEVICE IS DUAL PORTED
	SHR		; DEVICE SHAREABLE
	GEN		; DEVICE IS A GENERIC DEVICE
	AVL		; DEVICE AVAILABLE FOR USE
	MNT		; DEVICE IS MOUNTED
	MBX		; DEVICE IS A MAILBOX
	DMT		; DEVICE MARKED FOR DISMOUNT
	ELG		; DEVICE HAS ERROR LOGGING ENABLED
	ALL		; DEVICE IS ALLOCATED
	FOR		; DEVICE IS MOUNTED FOREIGN (I.E., NON-FILE STRUCTURED)
	SWL		; DEVICE IS SOFTWARE WRITE LOCKED
	IDV		; DEVICE CAPABLE OF PROVIDING INPUT
	ODV		; DEVICE CAPABLE OF PROVIDING OUTPUT
	RND		; DEVICE ALLOWS RANDOM ACCESS
	RTM		; DEVICE IS REALTIME IN NATURE
	RCK		; DEVICE HAS READ CHECKING ENABLED
	WCK		; DEVICE HAS WRITE CHECKING ENABLED
	>
	E

;+
; DEVICE INFORMATION BLOCK DEFINITIONS
;-
 
	$STRUCT	DIB
 
	F	DEVCHAR,L		;DEVICE CHARACTERISTICS
	F	DEVCLASS,B		;DEVICE CLASS
	F	DEVTYPE,B		;DEVICE TYPE
	F	DEVBUFSIZ,W		;DEVICE BUFFER SIZE
	F	DEVDEPEND,L		;DEVICE DEPENDENT INFORMATION
	    S	SECTORS,,B		;(DISK ONLY) SECTORS PER TRACK
	    S	TRACKS,,B		;    "       TRACKS PER CYLINDER
	    S	CYLINDERS,,W		;    "       NUMBER OF CYLINDERS
	F	UNIT,W			;DEVICE UNIT NUMBER
	F	DEVNAMOFF,W		;OFFSET TO DEVICE NAME COUNTED STRING
	F	PID,L			;DEVICE OWNER PROCESS IDENTIFICATION
	F	OWNUIC,L		;DEVICE OWNER USER IDENTIFICATION CODE
	F	VPROT,W			;DEVICE PROTECTION MASK
	F	ERRCNT,W		;DEVICE ERROR COUNT
	F	OPCNT,L			;DEVICE OPERATIONS COUNT
	F	VOLNAMOFF,W		;OFFSET TO VOLUME LABEL COUNTED STRING
	F	RECSIZ,W		;BLOCKED RECORD SIZE
	F	DEVNAME,T,76		;SPACE FOR DEVNAME AND LABEL (64+12)
	F	MAXBLOCK,L		;DISK VOLUME SIZE IN BLOCKS
	L	LENGTH			;LENGTH OF TOTAL BUFFER
 
	E


;
; DETACHED JOB INITIATION MESSAGE FROM JOBCTL TO LOGIN
;

	$STRUCT	DJI			; DETACHED JOB INITIATE MESSAGE
 
	F	MSGTYP,W		; THE MESSAGE FROM SYMBIONT MANAGER
	F	FLAGS,B			; CONTROL FLAGS
	F	,B			; SPARE
	F	UIC			; USERS USER IDENTIFICATION CODE
	F	USERNAM,T,12		; USERS NAME
	F	ACNTNAM,T,8		; ACCOUNT TO RUN JOB
	F	VOLNAM,T,16		; DISK UPON WHICH RESIDES THE FILE
	F	FILEID,W,3		; THE FILE ID OF THE FILE
	F	DIRID,W,3		; DIRECTORY ID FOR FILE
	F	JOBNAME,T,10		; JOB NAME FOR LOG
	F	QUOFLG,W		; QUOTA PRESENT FLAG
	V <M
		WSQPRS			; WS QUOTA PRESENT
		USEWSQ			; USE WS QUOTA IN MSG.
		WSDPRS			; WS DEFAULT PRESENT IN MSG.
		USEWSD			; USE WS QUOTA IN MSG.
		TIMPRS			; CPU TIME LIMIT PRESENT
		USETIM			; USE CPU TIME IN MSG.
		WSEPRS			; WS EXTENT PRESENT
		USEWSE			; USE WS EXTENT IN MSG.
		>
	F	WSQUTA,W		; VALUE OF WS QUOTA
	F	WSDFLT,W		; VALUE OF WS DEFAULT
	F	WSEXTNT,W		; VALUE OF WS EXTENT
	F	CPUTIM,L		; VALUE OF CPU TIME LIMIT
	F	PARMS,T,120		; COMMAND PARAMETERS
	F	GFLAGS			; GENERAL FLAGS WORD
	F	LOGNAM,T,112		; LOG FILE NAME
	L	SIZE			; SIZE OF THE STRUCTURE
 
	E

;
;	DETACHED JOB TERMINATION MESSAGE
;

	$STRUCT	DJT
	F	MSGTYP,W		; SYMBIONT MANAGER MESSAGE TYPE
	F	,B,2
	F	FLAGS,L			; FLAGS
	V	<M
		QNMPRES			; QUEUE NAME IS PRESENT
		NOSPOOL			; DON'T SPOOL LOG FILE
		NODELET			; DON'T DELETE AFTER SPOOLING
		,1			; SPARE (LFSPRES BIT IN SJH RECORD)
		NOLOG			; NO LOG FILE
		DELCLOS			; DELETE LOG FILE ON CLOSE
		,25			; Spare
		NOTIFY			; Notify on completion of print job
		>
	F	QNAME,T,16		; ASCIC QUEUE NAME FOR LOG FILE
	F	JOBNAME,T,10		; ASCIC job name for print job
	E


;
; LAYOUT OF THE HEADER BLOCK OF THE SYSTEM DUMP FILE
; (WHICH IS THE FIRST DISK BLOCK OF SYS$SYSTEM:SYSDUMP.DMP)
;
	$STRUCT	DMP

	F	ERRSEQ		; LAST ERROR LOG SEQ. NUMBER
	F	FLAGS		; DUMP FILE FLAGS
	V	<
		OLDDUMP		; SET IF DUMP ALREADY ANALYZED
		EMPTY		; SET IF DUMP HAS NO DATA BLOCKS
		>
	S	FLAGS,,W	; NEW FORMAT DUMP:  DUMP FILE FLAGS
	S	DUMPVER,,W	; NEW FORMAT DUMP:  DUMP FILE VERSION NUMBER
				; NEW FORMAT DUMP:    0 = PRE-RELEASE 2 FORMAT
				; NEW FORMAT DUMP:    1 = RELEASE 2.0 FORMAT
	F	SBR		; SYSTEM BASE REGISTER
	F	SLR		; SYSTEM LENGTH REGISTER
	F	KSP		; KERNEL STACK POINTER
	F	ESP		; EXECUTIVE STACK POINTER
	F	SSP		; SUPERVISOR STACK POINTER
	F	USP		; USER STACK POINTER
	F	ISP		; INTERRUPT STACK POINTER
	F	REGS,,14	; OLD FORMAT DUMP:  R0 - R13
	S	MEMDSC,,L	; NEW FORMAT DUMP:  8 MEMORY DESCRIPTORS
	V	<		; NEW FORMAT DUMP:  FIELDS IN ONE MEM DESC
		PAGCNT,24	; NEW FORMAT DUMP:    # OF PAGES IN MEMORY
		TR,8		; NEW FORMAT DUMP:    TR # FOR MEMORY
		BASEPFN,32	; NEW FORMAT DUMP:    BASE PFN FOR MEMORY
		>		; NEW FORMAT DUMP:  END OF MEMORY DESC FIELDS
	C	MEMDSCSIZ,8	; NEW FORMAT DUMP:  SIZE OF ONE MEMORY DESCRPTR
	C	NMEMDSC,8	; NEW FORMAT DUMP:  NUMBER OF MEMORY DESCRIPTORS
	F	SP		; OLD FORMAT DUMP:  STACK POINTER
	F	PC		; OLD FORMAT DUMP:  PROGRAM COUNTER
	F	SYSVER,L	; NEW FORMAT DUMP:  SYSTEM VERSION NUMBER
	S	PSL		; OLD FORMAT DUMP:  PROGRAM STATUS LONGWORD
	F	CHECK,L		; NEW FORMAT DUMP:  ONES COMPLEMENT OF SYSVER
	L	LENGTH		; LENGTH OF FILE HEADER
	F	CRASHERL,L	; NEW FORMAT DUMP:  SYSTEM CRASH ERR LOG ENTRY

	E

;
; FLAG BITS FOR THE $DISMOU (DISMOUNT) SYSTEM SERVICE.
;

	$STRUCT	DMT
	V<M
		NOUNLOAD	; DO NOT UNLOAD (SPIN DOWN) THE VOLUME
		UNIT		; DISMOUNT ONLY THE SPECIFIED VOLUME
	 >

	E


;+
;
; Get Device and Volume Information Data Identifier Definitions
;
; **** NOTE ****
;
;	New items must always be added at the END of the list so that
;	users will not have to relink.
;
;-


	$STRUCT	DVI

	C<,$_,2,2
		DEVCHAR		; Device characteristics - VALUE - 4 bytes
		DEVCLASS	; Device class - VALUE - 1 byte
		DEVTYPE		; Device type - VALUE - 1 byte
		DEVBUFSIZ	; Device buffer size - VALUE - 2 bytes
		DEVDEPEND	; Device dependent information - VALUE - 4 bytes
		UNIT		; Unit number - VALUE - 2 bytes
		PID		; Process identification of device owner - VALUE - 4 bytes
		OWNUIC		; UIC of device owner - VALUE - 4 bytes
		VPROT		; Volume protection mask - VALUE - 2 bytes
		ERRCNT		; Error count - VALUE - 2 bytes
		OPCNT		; Operation count - VALUE - 4 bytes
		RECSIZ		; Blocked record size - VALUE - 2 bytes
		MAXBLOCK	; Number of logical blocks on the volume (disk) - VALUE - 4 bytes
		DEVDEPEND2	; Additional device dependent data - VALUE - 4 bytes
		REFCNT		; Reference count of processes - VALUE - 2 bytes
		DEVNAM		; Device name - STRING - 64 bytes
		VOLNAM		; Volume name - STRING - 12 bytes
		SECTORS		; Number of sectors per track (disk) - VALUE - 1 byte
		TRACKS		; Number of tracks per cylinder (disk) - VALUE - 1 byte
		CYLINDERS	; Number of cylinders on the volume (disk) - VALUE - 2 bytes
		FREEBLOCKS	; Number of free blocks on the volume (disk) - VALUE - 4 bytes
		LOGVOLNAM	; Logical volume name - STRING - 64 bytes
		VOLNUMBER	; Number of this volume in volume set (disk) - VALUE - 4 byte
		VOLCOUNT	; Count of volumes in volume set (disk) - VALUE - 4 byte
		ROOTDEVNAM	; Device name of root volume in volume set (disk) - STRING - 64 bytes
		NEXTDEVNAM	; Device name of next volume in volume set (disk) - STRING - 64 bytes
		TRANSCNT	; Volume Transaction Count - VALUE - 2 bytes
		MOUNTCNT	; Mount count - VALUE - 2 bytes
		CLUSTER		; Volume Cluster Size (disk) - VALUE - 2 bytes
		MAXFILES	; Maximum Files on Volume (disk) - VALUE - 4 bytes
		SERIALNUM	; Volume Serial Number (disk) - VALUE - 4 bytes
		ACPPID		; ACP Process ID - VALUE - 4 bytes
		ACPTYPE		; ACP type code - VALUE - 1 byte
	>
;
; DVI$_item_code retrieves the item for the primary device
; DVI$_item_code ! DVI$C_SECONDARY retrieves the item for the secondary device
;
	C	SECONDARY,1		; Get item for secondary device
;
; The following ACP type codes are formally defined in $AQBDEF
; These synonyms are available to user programs and they are
; guaranteed to be consistent by ASSUME's in SYSGETDEV.  Additions
; to the ACP type codes in $AQBDEF should be reflected here and
; in the ASSUMES in SYSGETDEV.
;
	C<,,1,1
	    ACP_F11V1		; FILES-11 STRUCTURE LEVEL 1
	    ACP_F11V2		; FILES-11 STRUCTURE LEVEL 2
	    ACP_MTA		; MAGTAPE
	    ACP_NET		; NETWORKS
	    ACP_REM		; REMOTE I/O
	    ACP_JNL		; JOURNAL
	>
	E
