	.TITLE	GETCMD
	.IDENT	'V03-001'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;
;++
;
; Facility:
;
;	SUMSLP utility
;
; Environment:
;
;	User mode
;
; Author:
;
;	R. Newland	18-Apr-1979
;
; Modified By:
;
;	V03-001	BLS0158		Benn Schreiber		16-Mar-1982
;		Remove $CLIDEFQUALEDIT, get values globally.
;--

	.SBTTL	DECLARATIONS
;
;
	$CLIDEF				; Define CLI offsets
	DEFSSLGEN			; Define SUMSLP general values
	$FABDEF				; FAB block definitions
	DEFSSLFLG			; SUMSLP flag definitions

	.SBTTL	DATA
	.PSECT	SUM$RO_DATA, NOEXE, NOWRT, LONG
;
;
GETCMD_ARGS:				; Argument list to get command line
	$ARGLST	2,GETCMD,CLIWORK
;
INITPRS_ARGS:				; Argument list to perform initial
	$ARGLST	2,INITPRS,CLIWORK	; command line parse
;
GETQUAL_ARGS:				; Argument list to get command qualifiers
	$ARGLST	3,GETQUAL,CLIWORK,SUM$GL_FLAGS
;
INPUT1_ARGS:				; Argument list to get input file name
	$ARGLST	3,INPUT1,CLIWORK,SUM$GL_FLAGS
;
OUTPUT1_ARGS:				; Argument list to get output file name
	$ARGLST	3,OUTPUT1,CLIWORK,SUM$GL_FLAGS
;
OUTPUT2_ARGS:				; Argument list to get list file name
	$ARGLST	3,OUTPUT2,CLIWORK,SUM$GL_FLAGS
;
;
;
;
	.PSECT	SUM$RW_DATA, NOEXE, LONG
;
;
CLIWORK:				; CLI work area
	.BLKB	CLI$K_WORKAREA
;
GETCMD:					; Request descriptor block to get
	$CLIREQDESC -			; command line
	RQTYPE = CLI$K_GETCMD
;
INITPRS:				; Request descriptor block to perform
	$CLIREQDESC -			; initial command line parse
	RQTYPE = CLI$K_INITPRS
;
GETQUAL:				; Request descriptor block to get
	$CLIREQDESC -			; command qualifiers
	RQTYPE = CLI$K_GETQUAL -
	QUALST = CMDQUAL
;
CMDQUAL:
	$CLIQUALDESC -			; Qualifier descriptor block for
	QDCODE = CLI$K_EDIT_SUM -	; /SUM
	CLRLST = SSL_V_MODE
;
	.LONG	0			; End of qualifier list
;
INPUT1:					; Request descriptor block to get
	$CLIREQDESC -			; input file
	RQTYPE = CLI$K_INPUT1 -
	PRSACT = INPUT_FILE -
	QUALST = INQUAL
;
INQUAL:
	$CLIQUALDESC -			; Qualifier request block for
	QDCODE = CLI$K_EDIT_UPDA -	; /UPDATE
	TRUACT = UPDA_QUAL
	.LONG	0			; End of qualifier list
;
OUTPUT1:				; Request descriptor block to get
	$CLIREQDESC -			; output file name
	RQTYPE = CLI$K_OUTPUT1 -
	BITNUM = SSL_V_OUTPUT -
	PRSACT = OUTPUT_FILE -
	QUALST = OUTQUAL
;
OUTQUAL:
	$CLIQUALDESC -			; Qualifier request block for
	QDCODE = CLI$K_EDIT_HEAD -	; /HEAD
	SETLST = SSL_V_HEADER -
	TRUACT = HEAD_QUAL
;
	.LONG	0			; End of qualifier list
;
OUTPUT2:				; Request descriptor block to get
	$CLIREQDESC -			; listing file name
	RQTYPE = CLI$K_OUTPUT2 -
	BITNUM = SSL_V_LIST -
	PRSACT = LIST_FILE

	.SBTTL	GETCMD
;
; Subroutine to get command line information from the CLI and
; set up control variables appropriately
;
; Calling sequence:
;
;	BSB	SUM$GETCMD
;
; Inputs:
;
;	None
;
; Implicit inputs
;
;	The CLI data base
;
; Outputs:
;
;	xxx
;
; Implicit outputs
;
;	None
;
; Side effects:
;
;	None
;
;--
;
	.PSECT	SUM$CODE, EXE, NOWRT
;
SUM$GETCMD::
	CALLG	W^GETCMD_ARGS, -	; Call CLI to get command line
		@W^SUM$GL_CLIADDR
	MOVQ	W^GETCMD+CLI$W_RQSIZE, - ; Save command line size
		W^SUM$GQ_CMDLINE	; and address
;
	CALLG	W^INITPRS_ARGS, -	; Call CLI to perform initial
		@W^SUM$GL_CLIADDR	; parse of command line
;
	CALLG	W^GETQUAL_ARGS, -	; Call CLI to get command qualifiers
		@W^SUM$GL_CLIADDR
;
	BBS	#SSL_V_MODE, -		; Branch if command mode
		W^SUM$GL_FLAGS,90$
;
; Edit mode
;
	CALLG	W^INPUT1_ARGS, -	; Call CLI to get input file name
		@W^SUM$GL_CLIADDR
;
	BISL	#SSL_M_OUTPUT, -	; Output is written bu default
		W^SUM$GL_FLAGS
	CALLG	W^OUTPUT1_ARGS, -	; Call CLI to get output file name
		@W^SUM$GL_CLIADDR
;
	CALLG	W^OUTPUT2_ARGS, -	; Call CLI to get listing file name
		@W^SUM$GL_CLIADDR
;
90$:
	RSB

	.SBTTL	PARSE ACTIONS ROUTINES
;
; These routines are called when a parameter is present to extract
; the file name descriptor and fill the appropriate FAB block.
;
;
INPUT_FILE:
	.WORD	0
	MOVAB	W^SUM$AX_INPUTFAB,R0	; Get address of input FAB
	BRB	FILE
;
OUTPUT_FILE:
	.WORD	0
	MOVAB	W^SUM$AX_OUTPUFAB,R0	; Get address of output FAB
	BRB	FILE
;
LIST_FILE:
	.WORD	0
	MOVAB	W^SUM$AX_LISTFAB,R0	; Get address of list FAB
;
FILE:
	MOVL	4(AP),R1		; Get the parameter descriptor address
	MOVL	CLI$A_RQADDR(R1), -	; Move file name address into FAB
		FAB$L_FNA(R0)
	MOVB	CLI$W_RQSIZE(R1), -	; and file name length
		FAB$B_FNS(R0)
	RET

	.SBTTL	QUALIFIER ACTION ROUTINES
;
; This routine is called if the /HEADER qualifier is seen
;
;
HEAD_QUAL:
	.WORD	0
	MOVB	#FAB$C_VFC, -		; Set record format to variable
		W^SUM$AX_OUTPUFAB+FAB$B_RFM ; with fixed control record
	MOVB	#SSL$RHBSZE, -		; Set output file FAB block to
		W^SUM$AX_OUTPUFAB+FAB$B_FSZ ; write record header buffer
	MOVAB	W^SUM$AX_RHB, -		; and RAB block with record header
		W^SUM$AX_OUTPURAB+RAB$L_RHB ; buffer address
	RET
;
;
; This routine is called if the /UPDATE qualifier is called
;
;
UPDA_QUAL:
	.WORD	0
	PUSHAB	W^SUM$GL_UPDATES	; Call SUM procedure to get
	PUSHAB	W^CLIWORK		; update files list
	PUSHL	4(AP)
	PUSHL	8(AP)
	CALLS	#4,G^SUM$LIST_QUAL
	RET
;
	.END
