 ! 
 !	DCL Command Language Interpreter internal structure definitions 
 ! 
 ! IDENT	V03-025 
 ! 
  
 ! 
 !**************************************************************************** 
 !*									    * 
 !*  COPYRIGHT (c) 1978, 1980, 1982 BY					    * 
 !*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    * 
 !*  ALL RIGHTS RESERVED.						    * 
 !* 									    * 
 !*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   * 
 !*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   * 
 !*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   * 
 !*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   * 
 !*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   * 
 !*  TRANSFERRED.							    * 
 !* 									    * 
 !*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   * 
 !*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   * 
 !*  CORPORATION.							    * 
 !* 									    * 
 !*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   * 
 !*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    * 
 !* 									    * 
 !*									    * 
 !**************************************************************************** 
 ! 
  
 !++ 
 ! FACILITY:  DCL Command Language Interpreter 
 ! 
 ! ABSTRACT: 
 ! 
 !	These are the structure definitions used by the DCL 
 !	command interpreter. 
 ! 
 ! ENVIRONMENT: 
 ! 
 !	VAX/VMS operating system. supervisor mode. 
 ! 
 ! AUTHOR:  Tim Halvorsen, Feb 1980 
 ! 
 ! Modified by: 
 ! 
 !	V025	PHL0045		Peter H. Lipman	15-Apr-1982 
 !		Add PRC_Q_SAVEPRIV 
 ! 
 !	V024	PCG0008		Peter George	07-Apr-1982 
 !		Add SPWN_L_IMAGCNT. 
 ! 
 !	V023	PCG0007		Peter George	05-Mar-1982 
 !		Add definitions for termination mailbox linked list. 
 !		Add DCL_L_VERB to CLINT own storage.  Remove DCL_B_SEEN. 
 ! 
 !	V022	PCG0006		Peter George	16-Feb-1982 
 !		Add PRC_V_ONEXIT. Add expanded input buffer to 
 !		WRK for DCL$DCL_PARSE.  Remove WRK_K_PREINPLEN 
 !		and WRK_G_INPBUFEND (which proved to be unneeded.) 
 ! 
 !	V021	PCG0005		Peter George	09-Feb-1982 
 !		Add WRK_K_PREINPLEN and WRK_G_INPBUFEND. 
 ! 
 !	V020	PCG0004		Peter George	02-Feb-1982 
 !		Move WRK_L_TAB_VEC to bottom of data structure. 
 ! 
 !	V019	PCG0003		Peter George 	25-Jan-1982 
 !		Add WRK_L_TAB_VEC. 
 ! 
 !	V018	PCG0002		Peter George	13-Jan-1982 
 !		Add CTX_L_OUTOFBAND and SPWN_L_OUTOFBAND. 
 ! 
 !	V017	TMH0017		Tim Halvorsen	02-Jan-1982 
 !		Replace WRK_L_PROMPTRTN with WRK_L_ERRORRTN cell. 
 ! 
 !	V016	TMH0016		Tim Halvorsen	28-Dec-1981 
 !		Add cells to hold ASTADR, ASTPRM and EFN parameters 
 !		as well as flags to control copying of symbols/lognames 
 !		to spawn parameter block, so that the spawn supervisor 
 !		mode service can be used more flexibly by user-mode 
 !		programs. 
 !		Make PRC_L_SPWN be the listhead of a list of SPWN blocks 
 !		corresponding to all the subprocesses currently active. 
 !		Add a link longword to SPWN for this list. 
 ! 
 !	V015	TMH0015		Tim Halvorsen	22-Dec-1981 
 !		Add verification flag to spawn context record. 
 !		Move autologout flag to header record from cmdstr record. 
 !		Add base priority longword to spawn parameter block. 
 !		Add address of "current" SPWN block to PRC storage 
 !		in order for the subprocess termination AST to access it. 
 !		Add EOF silent logout flag to PRC, CTX and SPWN blocks. 
 ! 
 !	V014	TMH0014		Tim Halvorsen	22-Dec-1981 
 !		Add STATUS field to SPWN block and remove INPUT flag. 
 ! 
 !	V013	TMH0013		Tim Halvorsen	30-Nov-1981 
 !		Add listhead for F$SEARCH context blocks into 
 !		indirect frame block. 
 ! 
 !	V012	TMH0012		Tim Halvorsen	17-Nov-1981 
 !		Create this file from all the structures in CLIDEF.MDL 
 !		which are specific to DCL only, and do not necessarily 
 !		have to be the same as the MCR structures.  The definition 
 !		of the command tables format (only) is left in CLIDEF.MDL. 
 !		Remove MCR specific structures, such as BLK, SUB & MCR. 
 !		Add cell to PRC to hold current out-of-band enable bitmask 
 !		and remove now obsolete NOCTLY flag. 
 ! 
 !	V011	TMH0011		Tim Halvorsen	08-Nov-1981 
 !		Add bit indicating if terminal is detached or not. 
 !		Add bit indicating that implied automatic logout should 
 !		occur when we next attempt to read a command line from 
 !		the input stream (for SPAWN command). 
 !		Add word to contain channel to re-attach mailbox. 
 !		Remove obsolete USRDET and GOEOF flags from PRC area. 
 !		Add SPWN and CTX structures for SPAWN/ATTACH commands. 
 ! 
 !	V010	PCG0001		Peter George	29-Oct-1981 
 !		Add DCL and MCR data structures. 
 ! 
 !	V009	BLS0089		Benn Schreiber	15-Oct-1981 
 !		Add cli field and spares to vec.  tables level is now 4 
 !		Add mcrparse flag to cmd flags 
 ! 
 !	V008	TMH0008		Tim Halvorsen	31-Aug-1981 
 !		Add cells for SPAWN and ATTACH commands. 
 ! 
 !	V007	TMH0007		Tim Halvorsen	25-Aug-1981 
 !		Add ENT$C_RESTOFLINE as value type which indicates that 
 !		the rest of the line should be gobbled as the value. 
 !		Add cell to hold the qualifier number which caused the 
 !		first command syntax transition.  This is for the GETOPT 
 !		callback used by the SET and SHOW commands for compatibility. 
 !		Re-number the value type codes to start at 1, rather than 0, 
 !		so that zero can be used as the default (STRING). 
 ! 
 !	V006	TMH0006		Tim Halvorsen	13-Jun-1981 
 !		Document format of symbol table values 
 ! 
 !	V005	TMH0005		Tim Halvorsen	27-Apr-1981 
 !		Add PRC_L_INDCLOCK, and change meaning of PRC_L_INDEPTH. 
 !		Remove obsolete QUA and PRM structures. 
 !		Remove PRC_L_CLIWRK0-3, and add PRC_L_PPFLIST. 
 !		Increase size of NAM block to account for new extensions. 
 ! 
 !	V004	TMH0004		Tim Halvorsen	26-Mar-1981 
 !		Add PRD_T_OUTDVI field for batch job login initialization. 
 ! 
 !	V003	TMH0003		Tim Halvorsen	11-Feb-1981 
 !		Add flag to mark that we are within the comment 
 !		string during symbol substitution, to avoid issuing 
 !		error messages during substitution in comments. 
 !		Add 3 cells to WRK to support caller callback entry 
 !		points during parsing.  Add pointer into expansion 
 !		buffer (rather than R9).  Add pointer into expansion 
 !		buffer which points to the current token being parsed 
 !		for error reporting (rather than R6). 
 !		Remove unused cells CMDOUT, IOSB and flag IMCHNG. 
 !		Rename SYM_B_NESTLEVEL to SYM_B_UNIQUEPT 
 !		Add UIC to list of value types. 
 ! 
 !	V002	TMH0002		Tim Halvorsen	03-Feb-1981 
 !		Add flag to mark input record substitution pass 
 !		and flag to prevent upcasing during GETCHAR. 
 ! 
 !	V001	TMH0001		Tim Halvorsen	14-Nov-1980 
 !		Add symbol for length of tables vector area. 
 !-- 
  
 ! 
 !	DEFINE PROCESS WORK AREA (BASED AT R11=CTL$AG_CLIDATA) 
 ! 
  
 !...$PRCDEF	
 MACRO		PRC_L_SAVAP	= 0,0,32,0%; 		! SAVED ARGUMENT POINTER 
 MACRO		PRC_L_SAVFP	= 4,0,32,0%; 		! SAVED FRAME POINTER 
 MACRO		PRC_L_INPRAB	= 8,0,32,0%; 		! ADDRESS OF INPUT RAB 
 MACRO		PRC_L_OUTRAB	= 12,0,32,0%; 		! ADDRESS OF OUTPUT RAB 
 MACRO		PRC_L_ERRRAB	= 16,0,32,0%; 		! ADDRESS OF ERROR RAB 
 MACRO		PRC_L_INDINPRAB	= 20,0,32,0%; 	! ADDRESS OF INDIRECT INPUT RAB 
 MACRO		PRC_L_INDOUTRAB	= 24,0,32,0%; 	! ADDRESS OF INDIRECT OUTPUT RAB 
 MACRO		PRC_L_INDFAB	= 28,0,32,0%; 		! ADDRESS OF INDIRECT FAB 
 MACRO		PRC_Q_ALLOCREG	= 32,0,0,0%; 	! SYMBOL ALLOCATION REGION LISTHEAD 
 LITERAL	PRC_S_ALLOCREG	= 8; 
 MACRO		PRC_Q_GLOBAL	= 40,0,0,0%; 	! GLOBAL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_GLOBAL	= 8; 
 MACRO		PRC_Q_LABEL	= 48,0,0,0%; 		! LABEL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_LABEL	= 8; 
 MACRO		PRC_Q_LOCAL	= 56,0,0,0%; 		! LOCAL SYMBOL TABLE LISTHEAD 
 LITERAL	PRC_S_LOCAL	= 8; 
 MACRO		PRC_L_SEVERITY	= 64,0,32,0%; 	! ADDRESS OF ERROR SEVERITY SYMBOL VALUE 
 MACRO		PRC_L_STATUS	= 68,0,32,0%; 		! ADDRESS OF COMPLETION STATUS VALUE 
 MACRO		PRC_L_INDEPTH	= 72,0,32,0%; 		! INDIRECT STACK DEPTH (# LEVELS DEEP) 
 MACRO		PRC_L_SYMBOL	= 76,0,32,0%; 		! ADDRESS OF GOTO LABEL TABLE ENTRY 
 MACRO		PRC_W_INPCHAN	= 80,0,16,0%; 	! INPUT CHANNEL FOR INTERACTIVE JOBS 
 MACRO		PRC_W_ERRIFI	= 82,0,16,0%; 	! SYS$ERROR RMS IFI NUMBER 
 MACRO		PRC_W_FLAGS	= 84,0,16,0%; 		! PROCESS LEVEL FLAGS 
 			 
 				 
 MACRO		PRC_V_CNTRLY	= 84,1,1,0%; 		! SUPERVISOR CONTROL Y/C LEVEL REQUEST 
 LITERAL	PRC_M_CNTRLY	= 1^2 - 1^1; 
 MACRO		PRC_V_DISABL	= 84,2,1,0%; 		! DISABLE CONTROL Y AST'S 
 LITERAL	PRC_M_DISABL	= 1^3 - 1^2; 
 MACRO		PRC_V_EXIT	= 84,3,1,0%; 		! EXIT HANDLER ESTABLISHED 
 LITERAL	PRC_M_EXIT	= 1^4 - 1^3; 
 MACRO		PRC_V_GOTO	= 84,4,1,0%; 		! FORWARD GOTO IN PROGRESS 
 LITERAL	PRC_M_GOTO	= 1^5 - 1^4; 
 MACRO		PRC_V_IND	= 84,5,1,0%; 		! PROCESSING INDIRECT FILE 
 LITERAL	PRC_M_IND	= 1^6 - 1^5; 
 MACRO		PRC_V_MODE	= 84,6,1,0%; 		! COMMAND PROCESSING MODE (BATCH=1, INTER=0) 
 LITERAL	PRC_M_MODE	= 1^7 - 1^6; 
 MACRO		PRC_V_VERIFY	= 84,7,1,0%; 		! VERIFY LINES OF INDIRECT COMMAND FILES 
 LITERAL	PRC_M_VERIFY	= 1^8 - 1^7; 
 MACRO		PRC_V_AUTOLOGO	= 84,8,1,0%; 	! SILENT LOGOUT ($DELPRC) ON NEXT LEVEL 0 $GET 
 LITERAL	PRC_M_AUTOLOGO	= 1^9 - 1^8; 
 MACRO		PRC_V_DBGQUAL	= 84,9,1,0%; 		! DEBUG QUALIFIER SEEN ON COMMAND 
 LITERAL	PRC_M_DBGQUAL	= 1^10 - 1^9; 
 MACRO		PRC_V_DBGTRUE	= 84,10,1,0%; 		! STATE OF DEBUG WAS TRUE 
 LITERAL	PRC_M_DBGTRUE	= 1^11 - 1^10; 
 MACRO		PRC_V_YLEVEL	= 84,11,1,0%; 		! RUNNING AT CONTROL Y LEVEL 
 LITERAL	PRC_M_YLEVEL	= 1^12 - 1^11; 
 MACRO		PRC_V_HANGUP	= 84,12,1,0%; 		! TERMINAL HANGUP PENDING 
 LITERAL	PRC_M_HANGUP	= 1^13 - 1^12; 
 MACRO		PRC_V_PAUSE	= 84,13,1,0%; 		! CLI PAUSE STATE ACTIVE 
 LITERAL	PRC_M_PAUSE	= 1^14 - 1^13; 
 MACRO		PRC_V_EOFLOGO	= 84,14,1,0%; 		! SILENT LOGOUT ($DELPRC) ON LEVEL 0 EOF 
 LITERAL	PRC_M_EOFLOGO	= 1^15 - 1^14; 
 MACRO		PRC_V_DETACHED	= 84,15,1,0%; 	! TERMINAL IS DETACHED FROM THIS PROCESS 
 LITERAL	PRC_M_DETACHED	= 1^16 - 1^15; 
 			
 MACRO		PRC_W_ONLEVEL	= 86,0,16,0%; 	! ON ERROR LEVEL NUMBER 
 MACRO		PRC_L_ONERROR	= 88,0,32,0%; 		! ADDRESS OF ON CONDITION COMMAND TEXT 
 MACRO		PRC_L_PPFLIST	= 92,0,32,0%; 		! LISTHEAD OF OPEN PPF RAB'S (VIA OPEN COMMAND) 
 MACRO		PRC_L_TMBX	= 96,0,32,0%; 		! LISTHEAD OF TERMINATION MAILBOX STORAGE 
 				! BLOCKS! FOR EACH TERMINATION MAILBOX CREATED 
 MACRO		PRC_W_ATTMBX	= 102,0,16,0%; 	! CHANNEL TO MAILBOX FOR RE-ATTACH REQUESTS 
 MACRO		PRC_L_INDCLOCK	= 104,0,32,0%; 	! TOTAL INDIRECT STACKS & UNSTACKS 
 MACRO		PRC_L_TAB_VEC	= 108,0,32,0%; 		! ADDRESS OF COMMAND TABLE VECTOR 
 MACRO		PRC_L_EXTBLK	= 112,0,32,0%; 		! EXIT HANDLER CONTROL BLOCK 
 MACRO		PRC_L_EXTHND	= 116,0,32,0%; 		! EXIT HANDLER ADDRESS 
 MACRO		PRC_L_EXTARG	= 120,0,32,0%; 		! NUMBER OF EXIT HANDLER ARGUMENTS 
 MACRO		PRC_L_EXTPRM	= 124,0,32,0%; 		! ADDRESS OF REASON FOR EXIT (BELOW) 
 MACRO		PRC_L_EXTCOD	= 128,0,32,0%; 		! REASON FOR EXIT 
 MACRO		PRC_L_STACKPT	= 132,0,32,0%; 		! INDIRECT STACK POINTER 
 MACRO		PRC_L_STACKLM	= 136,0,32,0%; 		! INDIRECT STACK LIMIT 
 MACRO		PRC_L_EXMDEPADR	= 140,0,32,0%; 	! "DOT" FOR EXAMINE/DEPOSIT 
 MACRO		PRC_B_EXMDEPWID	= 144,0,8,0%; 	! WIDTH DEFAULT, IE: BYTE,WORD,LONGWORD 
 MACRO		PRC_B_EXMDEPMOD	= 145,0,8,0%; 	! MODE DEFAULT, IE: ASCII,HEX,OCTAL 
 MACRO		PRC_B_DEFRADIX	= 146,0,8,0%; 	! CURRENT DEFAULT RADIX 
 LITERAL	
 $EQULST (PRC_K_,GBL,0,1 		! PROCESS RADIX TYPES 
 	,(HEX,) 			! HEXIDECIMAL 
 	,(DEC,) 			! DECIMAL 
 	,(OCT,) 			! OCTAL 
 	); 
 MACRO		PRC_B_FLAGS2	= 147,0,8,0%; 	! PROCESS LEVEL FLAGS (MORE OF THEM) 
 			 
 MACRO		PRC_V_CMD	= 147,0,1,0%; 		! COMMAND CALLBACK HAS BEEN DONE 
 LITERAL	PRC_M_CMD	= 1^1 - 1^0; 
 MACRO		PRC_V_CHAIN	= 147,1,1,0%; 		! CHAIN CALLBACK HAS BEEN DONE 
 LITERAL	PRC_M_CHAIN	= 1^2 - 1^1; 
 MACRO		PRC_V_RUNDEF	= 147,2,1,0%; 		! USE RUN DEFAULT (NOT EXTERNAL) 
 LITERAL	PRC_M_RUNDEF	= 1^3 - 1^2; 
 MACRO		PRC_V_EXEONLY	= 147,3,1,0%; 		! IMAGE IS EXECUTE ONLY 
 LITERAL	PRC_M_EXEONLY	= 1^4 - 1^3; 
 MACRO		PRC_V_PRIV	= 147,4,1,0%; 		! IMAGE IS PRIVILEGED 
 LITERAL	PRC_M_PRIV	= 1^5 - 1^4; 
 MACRO		PRC_V_ONEXIT	= 147,5,1,0%; 		! EXIT ALREADY PERFORMED 
 LITERAL	PRC_M_ONEXIT	= 1^6 - 1^5; 
 			
 MACRO		PRC_L_LSTSTATUS	= 148,0,32,0%; 	! LAST STATUS SET (LONGWORD VALUE) 
 MACRO		PRC_L_OUTOFBAND	= 152,0,32,0%; 	! OUT OF BAND AST ENABLE BITMASK 
 			 
 						! SKIP UNUSED CHARACTERS 
 MACRO		PRC_V_CTRLT	= 152,20,1,0%; 		! CONTROL T 
 LITERAL	PRC_M_CTRLT	= 1^21 - 1^20; 
 						! SKIP UNUSED CHARACTERS 
 MACRO		PRC_V_CTRLY	= 152,25,1,0%; 		! CONTROL Y 
 LITERAL	PRC_M_CTRLY	= 1^26 - 1^25; 
 			
 MACRO		PRC_L_ONCTLY	= 156,0,32,0%; 		! ADDRESS OF ON CONTROL/Y COMMAND TEXT 
 MACRO		PRC_L_IDFLNK	= 160,0,32,0%; 		! POINTER TO INDIRECT FILE FRAMES 
 MACRO		PRC_L_SPWN	= 164,0,32,0%; 		! LISTHEAD OF SPAWN STORAGE BLOCKS FOR EACH 
 				! SUBPROCESS CREATED! SPAWN STORAGE FOR PROCESS 
 				! CURRENTLY BEING SPAWNED IS FIRST, IF ANY. 
 MACRO		PRC_Q_IMAGENAME	= 180,0,0,0%; 	! DESCRIPTOR OF CHAIN IMAGE FILE SPECIFICATION 
 LITERAL	PRC_S_IMAGENAME	= 8; 
 MACRO		PRC_Q_COMMAND	= 188,0,0,0%; 	! DESCRIPTOR OF CHAIN COMMAND LINE FOR LATER 
 LITERAL	PRC_S_COMMAND	= 8; 
 MACRO		PRC_Q_SAVEPRIV	= 196,0,0,0%; 	! SAVED PRIVILEGED IMAGE PRIVILEGES 
 LITERAL	PRC_S_SAVEPRIV	= 8; 
 LITERAL	PRC_C_LENGTH	= 204; 
 LITERAL	PRC_K_LENGTH	= 204; 			! LENGTH OF PROCESS WORK AREA 

  
 ! 
 !	DEFINE PROCESS RMS DATA AREA 
 ! 
  
 !...$PRDDEF	
 MACRO		PRD_G_FAB	= 0,0,0,0%; 		! PROCESS FAB 
 LITERAL	PRD_S_FAB	= 80; 
 MACRO		PRD_G_NAM	= 80,0,0,0%; 		! PROCESS NAME BLOCK 
 LITERAL	PRD_S_NAM	= 96; 
 MACRO		PRD_G_INPRAB	= 176,0,0,0%; 		! INPUT RAB 
 LITERAL	PRD_S_INPRAB	= 68; 
 MACRO		PRD_G_ALTINPRAB	= 244,0,0,0%; 		! ALTERNATE INPUT RAB 
 LITERAL	PRD_S_ALTINPRAB	= 68; 
 MACRO		PRD_G_ALTOUTRAB	= 312,0,0,0%; 		! ALTERNATE OUTPUT RAB 
 LITERAL	PRD_S_ALTOUTRAB	= 68; 
 MACRO		PRD_G_OUTRAB	= 380,0,0,0%; 		! OUTPUT RAB 
 LITERAL	PRD_S_OUTRAB	= 68; 
 LITERAL	PRD_C_LENGTH	= 448; 
 LITERAL	PRD_K_LENGTH	= 448; 				! NORMAL LENGTH 
 ! FOLLOWING EXTENSION USED ON LEVEL 0 TO STORE FID/DID/FNM FOR QUEUING 
 ! THE JOB LOG FILE TO THE JOB CONTROLLER. 
 MACRO		PRD_T_OUTDVI	= 448,0,0,0%; 		! DEVICE FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTDVI	= 16; 
 MACRO		PRD_W_OUTFID	= 464,0,0,0%; 		! FILE ID FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTFID	= 6; 
 MACRO		PRD_W_OUTDID	= 470,0,0,0%; 		! DIRECTORY ID FOR OUTPUT FILE 
 LITERAL	PRD_S_OUTDID	= 6; 
 MACRO		PRD_T_OUTFNM	= 476,0,0,0%; 		! OUTPUT FILE NAME 
 LITERAL	PRD_S_OUTFNM	= 20; 
 LITERAL	PRD_C_XLENGTH	= 496; 
 LITERAL	PRD_K_XLENGTH	= 496; 				! LENGTH OF EXTENDED BLOCK 

  
 ! 
 !	DEFINE COMMAND WORK AREA (BASED AT R10) 
 ! 
  
 !...$WRKDEF	
 LITERAL	
 $EQULST (WRK_C_,GBL,0,1  
 	,(DCLBUFSIZ,508) 		! DCL_PARSE INPUT BUFFER SIZE IN BYTES 
 	,(CMDBUFSIZ,508) 		! EXPANDED COMMAND BUFFER SIZE IN BYTES 
 	,(INPBUFSIZ,132) 		! INPUT BUFFER SIZE IN BYTES 
 	,(MSGBUFSIZ,132) 		! OUTPUT MESSAGE BUFFER SIZE IN BYTES 
 	,(RSLBUFSIZ,96*4) 		! RESULT PARSE BUFFER SIZE IN BYTES (96 MAX) 
 	); 
 				! (NEEDED TO OBTAIN LENGTH DEFINITION) 
 LITERAL	WRK_C_LENGTH	= -1628; 
 LITERAL	WRK_K_LENGTH	= -1628; 			! LENGTH OF COMMAND PARSING WORK AREA 
 MACRO		WRK_G_DCLPRSBUF	= -1624,0,0,0%; 	! INPUT BUFFER FOR DCL_PARSE 
 LITERAL	WRK_S_DCLPRSBUF	= 508; 
 MACRO		WRK_L_TAB_VEC	= -1112,0,32,0%; 		! ADDRESS OF COMMAND TABLE VECTOR 
 MACRO		WRK_L_MARKPTR	= -1108,0,32,0%; 		! POINTER INTO EXPANSION BUFFER OF THE CURRENT 
 				! SEGMENT BEING PARSED 
 MACRO		WRK_L_EXPANDPTR	= -1104,0,32,0%; 	! EXPANSION BUFFER CHARACTER POINTER 
 MACRO		WRK_G_RESULT	= -1100,0,0,0%; 	! RESULT PARSE DESCRIPTOR AREA (96 MAX) 
 LITERAL	WRK_S_RESULT	= 380; 
 MACRO		WRK_L_RSLEND	= -720,0,32,0%; 	! ADDRESS OF LAST TOKEN DESCRIPTOR 
 MACRO		WRK_L_RSLNXT	= -716,0,32,0%; 	! ADDRESS OF NEXT FREE TOKEN DESCRIPTOR 
 MACRO		WRK_G_BUFFER	= -712,0,0,0%; 	! COMMAND EXPANSION BUFFER 
 LITERAL	WRK_S_BUFFER	= 508; 
 MACRO		WRK_G_RECORD	= -457,0,8,0%; 	! INPUT RECORD BUFFER FOR FILE I/O COMMANDS 
 MACRO		WRK_G_INPBUF	= -200,0,0,0%; 	! COMMAND INPUT BUFFER FOLLOWS EXPANSION BUFFER 
 LITERAL	WRK_S_INPBUF	= 132; 
 MACRO		WRK_L_SPECRTN	= -68,0,32,0%; 		! ADDRESS OF SPECIAL CHARACTER PROCESSING RTN 
 MACRO		WRK_B_VERBTYP	= -64,0,8,0%; 	! COMMAND VERB TYPE (SEE $CLIVERBDEF) 
 MACRO		WRK_B_CMDOPT	= -63,0,8,0%; 	! QUALIFIER # CAUSING THE FIRST SYNTAX CHANGE 
 MACRO		WRK_L_SAVSP	= -60,0,32,0%; 		! SAVED STACK POINTER 
 MACRO		WRK_L_SAVAP	= -56,0,32,0%; 		! SAVED ARGUMENT POINTER 
 MACRO		WRK_L_SAVFP	= -52,0,32,0%; 		! SAVED INITIAL FRAME POINTER 
 MACRO		WRK_L_PROMPT	= -48,0,32,0%; 		! ADDRESS OF CURRENT PROMPT STRING 
 MACRO		WRK_L_ERRORRTN	= -44,0,32,0%; 	! ADDRESS OF CHARACTER INPUT ERROR ROUTINE 
 MACRO		WRK_L_READRTN	= -40,0,32,0%; 		! ADDRESS OF CONTINUATION INPUT ROUTINE 
 MACRO		WRK_L_PROPTR	= -36,0,32,0%; 		! ADDRESS OF PROMPT DESCRIPTORS 
 MACRO		WRK_L_QUABLK	= -32,0,32,0%; 		! ADDRESS OF QUALIFIER DESCRIPTORS 
 MACRO		WRK_L_MAXPARM	= -28,0,32,0%; 		! MAXIMUM NUMBER OF PARAMETERS ALLOWED 
 MACRO		WRK_L_MINPARM	= -24,0,32,0%; 		! MINIMUM NUMBER OF PARAMETERS REQUIRED 
 MACRO		WRK_L_IMAGE	= -20,0,32,0%; 		! ADDRESS OF IMAGE NAME STRING! OR TABLE INDEX 
 MACRO		WRK_L_PARMCNT	= -16,0,32,0%; 		! CURRENT PARAMETER COUNT 
 MACRO		WRK_L_PAROUT	= -12,0,32,0%; 		! ADDRESS OF LISTS OF OUTPUTS 
 MACRO		WRK_W_IMGCHAN	= -8,0,16,0%; 	! IMAGE ACTIVATION CHANNEL NUMBER 
 MACRO		WRK_W_FLAGS	= -6,0,16,0%; 		! COMMAND LEVEL FLAGS 
 			 
 MACRO		WRK_V_RUNDWN	= -6,0,1,0%; 		! RUNDOWN HAS BEEN DONE 
 LITERAL	WRK_M_RUNDWN	= 1^1 - 1^0; 
 MACRO		WRK_V_COMMAND	= -6,1,1,0%; 		! COMMAND (IMAGE) EXECUTION IN PROGRESS 
 LITERAL	WRK_M_COMMAND	= 1^2 - 1^1; 
 				! (SO, AVOID PRINTING ERROR SEGMENT TEXT) 
 MACRO		WRK_V_PROMPT	= -6,2,1,0%; 		! PROMPTING IN PROGRESS 
 LITERAL	WRK_M_PROMPT	= 1^3 - 1^2; 
 MACRO		WRK_V_QUAL	= -6,3,1,0%; 		! PROCESSING QUALIFIER 
 LITERAL	WRK_M_QUAL	= 1^4 - 1^3; 
 MACRO		WRK_V_QUOTE	= -6,4,1,0%; 		! PROCESSING QUOTED STRING 
 LITERAL	WRK_M_QUOTE	= 1^5 - 1^4; 
 MACRO		WRK_V_STAR	= -6,5,1,0%; 		! ASTERISK IS TERMINATOR 
 LITERAL	WRK_M_STAR	= 1^6 - 1^5; 
 MACRO		WRK_V_VERB	= -6,6,1,0%; 		! PROCESSING VERB 
 LITERAL	WRK_M_VERB	= 1^7 - 1^6; 
 MACRO		WRK_V_INQUIRE	= -6,7,1,0%; 		! INQUIRE COMMAND - READ REQUIRED 
 LITERAL	WRK_M_INQUIRE	= 1^8 - 1^7; 
 MACRO		WRK_V_NOSTAT	= -6,8,1,0%; 		! DON'T STORE SUCCESS STATUS ON COMPLETION 
 LITERAL	WRK_M_NOSTAT	= 1^9 - 1^8; 
 MACRO		WRK_V_TRAILSPC	= -6,9,1,0%; 	! TRAILING SPACES IN CONTINUED LINE 
 LITERAL	WRK_M_TRAILSPC	= 1^10 - 1^9; 
 MACRO		WRK_V_INPSUBST	= -6,10,1,0%; 	! CURRENTLY SUBSTITUTING INPUT RECORD SYMBOLS 
 LITERAL	WRK_M_INPSUBST	= 1^11 - 1^10; 
 MACRO		WRK_V_NOUPCASE	= -6,11,1,0%; 	! DON'T UPCASE CHARACTERS FROM INPUT BUFFER 
 LITERAL	WRK_M_NOUPCASE	= 1^12 - 1^11; 
 MACRO		WRK_V_COMMENT	= -6,12,1,0%; 		! WE ARE WITHIN A COMMENT DURING "INPSUBST" 
 LITERAL	WRK_M_COMMENT	= 1^13 - 1^12; 
 				! (SO, SUPPRESS ANY ERRORS DURING SUBSTITUTION) 
 			
 MACRO		WRK_L_CHARPTR	= -4,0,32,0%; 		! INPUT BUFFER CHARACTER POINTER 

  
 ! 
 !	DEFINE RESULT PARSE POINTERS.  EACH POINTER DESCRIBES 
 !	A TOKEN ON THE COMMAND LINE FROM LEFT TO RIGHT. 
 ! 
  
 !...$PTRDEF	
 MACRO		PTR_L_DESCR	= 0,0,32,0%; 		! EACH POINTER IS 1 LONGWORD 
 MACRO		PTR_B_VALUE	= 0,0,8,0%; 	! LOW BYTE IS VALUE (QUALIFIER #, ETC) 
 			 
 MACRO		PTR_V_VALUE	= 0,0,8,0%; 		! ITEM VALUE 
 MACRO		PTR_V_OFFSET	= 0,8,12,0%; 	! ITEM OFFSET IN BUFFER 
 MACRO		PTR_V_FLAGS	= 0,20,4,0%; 		! ITEM FLAGS 
 MACRO		PTR_V_TERM	= 0,24,4,0%; 		! ITEM TERMINATOR CLASS NUMBER 
 MACRO		PTR_V_TYPE	= 0,28,4,0%; 		! ITEM TYPE 
 			
 					! FLAG BIT DEFINITIONS 
 				 
 MACRO		PTR_V_NEGATE	= 0,20,1,0%; 		! QUALIFIER WAS NEGATED 
 			
 LITERAL	
 $EQULST (PTR_K_,GBL,1,1 		! DEFINE TERMINATOR CLASSES, STARTING AT 1 
 	,(BLANK,) 			! BLANK 
 	,(COLON,) 			! COLON 
 	,(SLASH,) 			! SLASH 
 	,(PLUS,) 			! PLUS SIGN 
 	,(COMMA,) 			! COMMA 
 	,(RPAREN,) 			! RIGHT PARENTHESIS 
 	,(LPAREN,) 			! LEFT PARENTHESIS 
 	); 
 LITERAL	
 $EQULST (PTR_K_,GBL,0,1 		! DEFINE TYPE NUMBERS, STARTING AT 0 
 	,(COMDQUAL,) 		! COMMAND QUALIFIER 
 	,(PARMQUAL,) 		! PARAMETER QUALIFIER 
 	,(QUALVALU,) 		! QUALIFIER VALUE 
 	,(PARAMETR,) 		! PARAMETER 
 	,(ENDLINE,) 			! END OF LINE 
 	); 
 LITERAL	PTR_C_LENGTH	= 4; 
 LITERAL	PTR_K_LENGTH	= 4; 			! FIXED LENGTH OF DESCRIPTOR 

  
 ! 
 !	DEFINE PARAMETER LIST MARKER.  EACH MARKER DESCRIBES 
 !	THE STARTING THRU ENDING POINTERS WHICH DESCRIBE A 
 !	GIVEN PARAMETER (INCLUDING QUALIFIERS AND VALUES). 
 ! 
  
 !...$PLMDEF	
 MACRO		PLM_B_NXTDESC	= 0,0,8,0%; 	! NEXT DESCRIPTOR TO BE EXAMINED IN CURRENT LIST 
 MACRO		PLM_B_FSTDESC	= 1,0,8,0%; 	! FIRST DESCRIPTOR IN LIST 
 MACRO		PLM_B_LSTDESC	= 2,0,8,0%; 	! LAST DESCRIPTOR IN LIST 
 MACRO		PLM_B_TRMDESC	= 3,0,8,0%; 	! TERMINATOR DESCRIPTOR 
 LITERAL	PLM_C_SIZE	= 4; 
 LITERAL	PLM_K_SIZE	= 4; 			! SIZE OF EACH ENTRY 

  
 ! 
 !	DEFINE STORAGE USED BY OLD CLI INTERFACE. 
 ! 
 !	THE MEMORY FOR THIS AREA IS SUPPLIED BY THE CALLING PROGRAM. 
 ! 
  
 !...$RPWDEF		! RESULT PARSE WORK AREA 
 MACRO		RPW_L_USERCTX	= 0,0,32,0%; 		! USER CONTEXT LONGWORD 
 MACRO		RPW_L_DCLWRK	= 4,0,32,0%; 		! ADDRESS OF COMMAND WORK AREA 
 MACRO		RPW_B_STRPARM	= 8,0,8,0%; 	! INDEX TO FIRST PARAMETER DESCRIPTOR 
 MACRO		RPW_B_LSTDESC	= 9,0,8,0%; 	! INDEX TO LAST PARAMETER DESCRIPTOR 
 MACRO		RPW_G_BITS	= 32,0,0,0%; 	! 256 BITS, 1 IF PLM PROCESSED BY RESULT PARSE 
 LITERAL	RPW_S_BITS	= 32; 
 LITERAL	RPW_C_HDRSIZ	= 64; 
 LITERAL	RPW_K_HDRSIZ	= 64; 			! SIZE OF FIXED PORTION 
 MACRO		RPW_G_PRMLIM	= 64,0,0,0%; 	! UP TO 16 PARAMETER LIMIT DESCRIPTORS (PLM) 
 LITERAL	RPW_S_PRMLIM	= 64; 
 LITERAL	RPW_C_LENGTH	= 128; 
 LITERAL	RPW_K_LENGTH	= 128; 			! LENGTH OF MAXIMUM SIZE 

  
 ! 
 !	DEFINE STORAGE USED BY NEW CLI INTERFACE 
 ! 
  
 !...$DCLDEF	
 MACRO		DCL_L_PRMLIM	= 0,0,0,0%; 		! Parameter limit descriptors 
 LITERAL	DCL_S_PRMLIM	= 64; 
 MACRO		DCL_L_ENTITY	= 64,0,32,0%; 			! Last entity processed (block address) 
 MACRO		DCL_L_TOKEN	= 68,0,32,0%; 			! Last value token returned 
 MACRO		DCL_L_VERB	= 72,0,32,0%; 			! The four character verb string 
 MACRO		DCL_B_PARAM	= 76,0,8,0%; 			! Last parameter # requested 
 MACRO		DCL_B_FLAGS	= 77,0,8,0%; 			! Flags byte 
 			 
 MACRO		DCL_V_NOWRKAREA	= 77,0,1,0%; 		! True if invalid WRK area pointer 
 			
 LITERAL	DCL_C_SIZE	= 78; 
 LITERAL	DCL_K_SIZE	= 78; 	 

  
 ! 
 !	DEFINE SYMBOL TABLE ENTRY 
 ! 
  
 !...$SYMDEF	
 MACRO		SYM_L_FL	= 0,0,32,0%; 		! SYMBOL ENTRY FORWARD LINK 
 MACRO		SYM_L_BL	= 4,0,32,0%; 		! SYMBOL ENTRY BACKWARD LINK 
 MACRO		SYM_W_SIZE	= 8,0,16,0%; 		! SIZE OF SYMBOL TABLE ENTRY 
 MACRO		SYM_B_TYPE	= 10,0,8,0%; 		! TYPE OF SYMBOL 
 LITERAL	
 $EQULST (SYM_K_,GBL,0,1  
 	,(STRING,) 			! VALUE IS VARIABLE LENGTH STRING 
 	,(PERM,) 			! PERMANENT SYMBOL, STRING 
 	,(BINARY,) 			! VALUE IS BINARY LONGWORD VALUE 
 	,(LABEL,) 			! VALUE IS RFA OF LINE WITH LABEL 
 	); 
 MACRO		SYM_B_NONUNIQUE	= 11,0,8,0%; 	! LENGTH OF NAME PORTION WHICH IS NONUNIQUE 
 				! (THAT IS, # CHARS AFTER UNIQUENESS POINT) 
 MACRO		SYM_T_SYMBOL	= 12,0,8,0%; 	! ASCIC SYMBOL NAME 
 				! SYMBOL VALUE DIRECTLY FOLLOWS: 
 				!   FOR STRING: WORD-COUNTED STRING 
 				!   FOR BINARY: LONGWORD 
 				!   FOR LABELS: WORD OF 6, FOLLOWED BY 6 BYTE RFA 

  
 ! 
 !	DEFINE INDIRECT STACK FRAME 
 ! 
  
 !...$IDFDEF	
 MACRO		IDF_L_LNK	= 0,0,32,0%; 		! POINTER TO NEXT INDIRECT FILE FRAME 
 MACRO		IDF_W_INPIFI	= 4,0,16,0%; 	! IFI FOR INPUT 
 MACRO		IDF_W_OUTIFI	= 6,0,16,0%; 	! IFI FOR OUTPUT 
 MACRO		IDF_W_OUTISI	= 8,0,16,0%; 	! ISI FOR OUTPUT 
 MACRO		IDF_W_ONLEVEL	= 10,0,16,0%; 	! ON ERROR LEVEL NUMBER 
 MACRO		IDF_L_ONERROR	= 12,0,32,0%; 		! ADDRESS OF ON ERROR COMMAND TEXT 
 MACRO		IDF_L_INPRABCTX	= 16,0,32,0%; 	! CONTENTS OF INPUT RAB CTX LONGWORD 
 MACRO		IDF_L_OUTRABCTX	= 20,0,32,0%; 	! CONTENTS OF OUTPUT RAB CTX LONGWORD 
 MACRO		IDF_Q_LOCAL	= 24,0,0,0%; 		! LOCAL SYMBOL TABLE LISTHEAD 
 LITERAL	IDF_S_LOCAL	= 8; 
 MACRO		IDF_Q_LABEL	= 32,0,0,0%; 		! LABEL SYMBOL TABLE LISTHEAD 
 LITERAL	IDF_S_LABEL	= 8; 
 MACRO		IDF_T_OUTDVI	= 40,0,0,0%; 	! INDIRECT OUTPUT DEVICE (ASCIC) 
 LITERAL	IDF_S_OUTDVI	= 16; 
 MACRO		IDF_T_INPDVI	= 56,0,0,0%; 	! INDIRECT INPUT DEVICE (ASCIC) 
 LITERAL	IDF_S_INPDVI	= 16; 
 MACRO		IDF_W_INPFID	= 72,0,0,0%; 	! FILE ID FOR INPUT FILE 
 LITERAL	IDF_S_INPFID	= 6; 
 MACRO		IDF_W_INPDID	= 78,0,0,0%; 	! DIRECTORY ID FOR INPUT FILE 
 LITERAL	IDF_S_INPDID	= 6; 
 MACRO		IDF_W_INPRFA	= 84,0,0,0%; 	! RECORD FILE ADDRESS FOR INPUT 
 LITERAL	IDF_S_INPRFA	= 6; 
 MACRO		IDF_W_FLAG	= 90,0,16,0%; 		! INDIRECT FLAGS 
 			 
 MACRO		IDF_V_INPOPN	= 90,0,1,0%; 		! THIS INPUT OPEN IS REQUIRED 
 			
 MACRO		IDF_L_ONCTLY	= 92,0,32,0%; 		! SAVED ADDRESS OF ON CONTROL/Y COMMAND 
 MACRO		IDF_L_SEARCHCTX	= 96,0,32,0%; 	! LISTHEAD OF F$SEARCH CONTEXT BLOCKS: 
 				!   1ST LONGWORD = LINK POINTER, 0 TO END 
 				!   2ND LONGWORD = SIZE OF BLOCK IN BYTES 
 LITERAL	IDF_C_LENGTH	= 112; 
 LITERAL	IDF_K_LENGTH	= 112; 			! LENGTH OF INDIRECT FRAME 

  
 ! 
 ! TEMPORARY STORAGE USED FOR SPAWNING SUBPROCESSES 
 ! 
  
 !...$SPWNDEF	
  
 MACRO		SPWN_L_LINK	= 0,0,32,0%; 		! POINTER TO NEXT IN CHAIN 
 MACRO		SPWN_W_SIZE	= 4,0,16,0%; 		! SIZE OF BLOCK 
 MACRO		SPWN_W_UNIT	= 8,0,16,0%; 		! TERMINATION MAILBOX UNIT NUMBER 
 MACRO		SPWN_W_CHAN	= 10,0,16,0%; 		! CONTEXT MAILBOX CHANNEL 
 MACRO		SPWN_W_FLAGS	= 12,0,16,0%; 		! FLAGS 
 			 
 MACRO		SPWN_V_LOG	= 12,0,1,0%; 		! /LOG SPECIFIED 
 LITERAL	SPWN_M_LOG	= 1^1 - 1^0; 
 MACRO		SPWN_V_PRCNAM	= 12,1,1,0%; 		! /PROCESS_NAME SPECIFIED 
 LITERAL	SPWN_M_PRCNAM	= 1^2 - 1^1; 
 MACRO		SPWN_V_WAIT	= 12,2,1,0%; 		! /WAIT SPECIFIED 
 LITERAL	SPWN_M_WAIT	= 1^3 - 1^2; 
 MACRO		SPWN_V_AUTOLOGO	= 12,3,1,0%; 	! SILENT LOGOUT AFTER CMDSTR EXECUTED 
 LITERAL	SPWN_M_AUTOLOGO	= 1^4 - 1^3; 
 MACRO		SPWN_V_EOFLOGO	= 12,4,1,0%; 		! SILENT LOGOUT AFTER INPUT FILESPEC EXECUTED 
 LITERAL	SPWN_M_EOFLOGO	= 1^5 - 1^4; 
 MACRO		SPWN_V_CLISYM	= 12,5,1,0%; 		! COPY CLI SYMBOLS TO SUBPROCESS 
 LITERAL	SPWN_M_CLISYM	= 1^6 - 1^5; 
 MACRO		SPWN_V_LOGNAM	= 12,6,1,0%; 		! COPY LOGICAL NAMES TO SUBPROCESS 
 LITERAL	SPWN_M_LOGNAM	= 1^7 - 1^6; 
 MACRO		SPWN_V_ACTIVE	= 12,7,1,0%; 		! PROCESS CURRENTLY BEING SPAWNED 
 LITERAL	SPWN_M_ACTIVE	= 1^8 - 1^7; 
 			
 MACRO		SPWN_B_ACMODE	= 14,0,8,0%; 	! ACCESS MODE TO CALL ASTADR AST ROUTINE 
 				! OR TO PROBE STSADR LONGWORD 
 MACRO		SPWN_B_EFN	= 15,0,8,0%; 		! EVENT FLAG TO SET WHEN SUBPROCESS COMPLETES 
 				! (-1 IF NONE) 
 MACRO		SPWN_Q_MBXNAM	= 16,0,0,0%; 	! DESCRIPTOR OF CONTEXT MAILBOX NAME 
 LITERAL	SPWN_S_MBXNAM	= 8; 
 MACRO		SPWN_Q_PRCNAM	= 24,0,0,0%; 	! DESCRIPTOR OF PROCESS NAME 
 LITERAL	SPWN_S_PRCNAM	= 8; 
 MACRO		SPWN_Q_INPUT	= 32,0,0,0%; 		! DESCRIPTOR OF SUBPROCESS INPUT FILESPEC 
 LITERAL	SPWN_S_INPUT	= 8; 
 MACRO		SPWN_Q_OUTPUT	= 40,0,0,0%; 	! DESCRIPTOR OF SUBPROCESS OUTPUT FILESPEC 
 LITERAL	SPWN_S_OUTPUT	= 8; 
 MACRO		SPWN_Q_CMDSTR	= 48,0,0,0%; 	! DESCRIPTOR OF COMMAND STRING TO BE EXECUTED 
 LITERAL	SPWN_S_CMDSTR	= 8; 
 MACRO		SPWN_Q_IOSB	= 56,0,0,0%; 		! I/O STATUS BLOCK FOR QIO REQUESTS 
 LITERAL	SPWN_S_IOSB	= 8; 
 MACRO		SPWN_L_SUBPID	= 64,0,32,0%; 	! PID OF NEWLY CREATED SUBPROCESS 
 MACRO		SPWN_L_STATUS	= 68,0,32,0%; 	! FINAL STATUS FROM COMPLETED SUBPROCESS 
 MACRO		SPWN_L_PRIB	= 72,0,32,0%; 		! BASE PRIORITY OF SUBPROCESS 
 MACRO		SPWN_L_ASTADR	= 76,0,32,0%; 	! AST ROUTINE TO CALL ON SUBPROCESS 
 				! TERMINATION (ZERO IF NONE) 
 MACRO		SPWN_L_ASTPRM	= 80,0,32,0%; 	! PARAMETER TO AST ROUTINE 
 MACRO		SPWN_L_STSADR	= 84,0,32,0%; 	! ADDRESS OF LONGWORD TO RECEIVE 
 				! TERMINATION STATUS (ZERO IF NONE) 
 MACRO		SPWN_L_OUTOFBAND	= 88,0,32,0%; 	! OUT-OF-BAND AST CHARACTER MASK 
 MACRO		SPWN_L_IMAGCNT	= 92,0,32,0%; 	! PROCESS IMAGE COUNT 
 MACRO		SPWN_G_QUOTAS	= 96,0,0,0%; 	! SPACE FOR SUBPROCESS QUOTA LIST 
 LITERAL	SPWN_S_QUOTAS	= 50; 
 LITERAL	SPWN_C_LENGTH	= 146; 
 LITERAL	SPWN_K_LENGTH	= 146; 	 

  
 ! 
 ! FORMAT OF THE CONTEXT MESSAGES WHICH ARE TRANSMITTED FROM THE SPAWN 
 ! COMMAND TO THE SUBPROCESS INITIALIZATION. 
 ! 
  
 !...$CTXDEF	
  
 LITERAL	CTX_C_MAXLEN	= 256; 		! MAXIMUM RECORD SIZE 
  
 MACRO		CTX_W_TYPE	= 0,0,16,0%; 		! MESSAGE TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(HEADER,) 			! HEADER RECORD 
 	,(CMDSTR,) 			! COMMAND STRING 
 	,(LOGNAM,) 			! LOGICAL NAMES 
 	,(CLISYM,) 			! CLI SYMBOLS 
 	); 
 			 
  
 	! FOR HEADER RECORDS 
  
 MACRO		CTX_Q_PROCPRIV	= 2,0,0,0%; 	! PROCESS PRIVILEGES 
 LITERAL	CTX_S_PROCPRIV	= 8; 
 MACRO		CTX_L_OUTOFBAND	= 10,0,32,0%; 	! OUT-OF-BAND AST CHARACTER MASK 
 MACRO		CTX_B_FLAGS	= 14,0,8,0%; 		! FLAGS BYTE 
 			 
 MACRO		CTX_V_AUTOLOGO	= 14,0,1,0%; 	! SILENT LOGOUT AFTER COMMAND STRING EXECUTED 
 LITERAL	CTX_M_AUTOLOGO	= 1^1 - 1^0; 
 				! (IF OFF, REVERT TO SYS$INPUT AFTER EXECUTION) 
 MACRO		CTX_V_EOFLOGO	= 14,1,1,0%; 		! SILENT LOGOUT AFTER LEVEL 0 INPUT EOF 
 LITERAL	CTX_M_EOFLOGO	= 1^2 - 1^1; 
 MACRO		CTX_V_VERIFY	= 14,2,1,0%; 		! VERIFICATION FLAG 
 LITERAL	CTX_M_VERIFY	= 1^3 - 1^2; 
 			
 LITERAL	CTX_C_HDRLEN	= 15; 
 LITERAL	CTX_K_HDRLEN	= 15; 			! FIXED SIZE OF HEADER RECORD 
  
  
 	! FOR COMMAND STRING RECORDS 
  
 			 
 MACRO		CTX_T_CMDSTR	= 2,0,8,0%; 	! ASCII COMMAND STRING (NO COUNT) 
  
 	! FOR LOGICAL NAME RECORDS 
  
 			 
 MACRO		CTX_W_ENTSIZE	= 2,0,16,0%; 	! SIZE OF ENTRY 
 MACRO		CTX_B_ACMODE	= 4,0,8,0%; 	! ACCESS MODE OF LOGICAL NAME 
 MACRO		CTX_T_LOGNAM	= 5,0,8,0%; 	! ASCIC LOGICAL NAME 
 				! WORD-COUNTED VALUE STRING FOLLOWS 
  
 	! FOR CLI SYMBOL RECORDS 
  
 			 
 MACRO		CTX_B_SYMTAB	= 4,0,8,0%; 	! SYMBOL TABLE TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(GLOBAL,) 	 
 	,(LOCAL,) 	 
 	); 
 MACRO		CTX_B_SYMTYPE	= 5,0,8,0%; 	! SYMBOL TYPE 
 LITERAL	
 $EQULST (CTX_C_,GBL,0,1  
 	,(STRING,) 			! VALUE IS VARIABLE LENGTH STRING 
 	,(PERM,) 			! PERMANENT SYMBOL, STRING 
 	,(BINARY,) 			! VALUE IS BINARY LONGWORD VALUE 
 	); 
 MACRO		CTX_B_NONUNIQUE	= 6,0,8,0%; 	! LENGTH OF NON-UNIQUE PORTION OF NAME 
 				! (I.E. # CHARS AFTER UNIQUENESS POINT) 
 MACRO		CTX_T_SYMBOL	= 7,0,8,0%; 	! ASCIC SYMBOL NAME 
 				! SYMBOL VALUE DIRECTLY FOLLOWS: 
 				!   FOR STRING: WORD-COUNTED STRING 
 				!   FOR BINARY: LONGWORD 

  
  
 ! 
 ! TERMINATION MAILBOX LIST ITEM 
 ! 
  
 !...$TMBXDEF	
  
 LITERAL	TMBX_C_MAXREFS	= 4; 		! MAXIMUM NUMBER OF SUBPROCESSES USING A 
 				!   SINGLE TERMINATION MAILBOX 
 MACRO		TMBX_L_LINK	= 0,0,32,0%; 		! POINTER TO NEXT ITEM 
 MACRO		TMBX_W_UNIT	= 4,0,16,0%; 		! MAILBOX UNIT NUMBER 
 MACRO		TMBX_W_CHANNEL	= 6,0,16,0%; 	! MAILBOX CHANNEL NUMBER 
 MACRO		TMBX_B_REFS	= 8,0,8,0%; 		! NUMBER OF SUBPROCESSES CURRENTLY USING 
 				!   THIS MAILBOX 
 MACRO		TMBX_L_PRC	= 12,0,32,0%; 		! ADDRESS OF PROCESS WORK AREA 
 LITERAL	TMBX_C_LENGTH	= 16; 
 LITERAL	TMBX_K_LENGTH	= 16; 			! SIZE OF STRUCTURE 

