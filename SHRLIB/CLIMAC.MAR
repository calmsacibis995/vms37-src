;	Version 'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; INTERMNAL MACRO TO ALLOCATE SPACE FOR A STRUCTURE
;
	.MACRO	$CLIALO	SIZE
$CLI. = .
	.BLKB	SIZE
$CLI.. = .
	.ENDM
 
;
; MACRO TO END THE STRUCTURE-RESTORE LOCATION BEYOND THE END
;
	.MACRO	$CLIEND
	. = $CLI..
	.ENDM
;
; MACRO TO GENERATE A MASK FROM A LIST OF BITS
;
	.MACRO	$MASK	LIST,TYPE=BYTE,?L1
$$$. = 0
	.IF NB	<LIST>
	.IRP	$$$,<LIST>
	$$$.=$$$.!<1@$$$>
	.ENDR
	.ENDC
	.'TYPE	$$$.
	.ENDM
;
; MACRO TO LOAD A VALUE INTO A STRUCTURE
;
	.MACRO	$CLISET	SYM,VAL,TYPE=B,IDX
 
	.IF NB	<VAL>
 
	  .IF  B <IDX>
	. = $CLI.+CLI$'TYPE'SYM
	  .IFF
	. = $CLI.+CLI$'IDX'SYM
	  .ENDC
 
	  .IF IDN <TYPE><B>
	  .BYTE	VAL
	  .IFF
	    .IF IDN	<TYPE><A>
	    .LONG	<VAL-$CLI.>
	    .IFF
	      .IF IDN	<TYPE><W>
	      .WORD	VAL
	      .IFF
		.IF IDN	<TYPE><M>
		$MASK	<VAL>
		.IFF
		  .IF IDN	<TYPE><L>
		  .LONG	VAL
		  .IFF
		  .ERROR	; INVALID DATA TYPE;
		  .ENDC
		.ENDC
 
	      .ENDC
 
	    .ENDC
 
	  .ENDC
	.ENDC
 
 
	.ENDM
 
;
; MACRO TO SET UP VARIABLE LENGHT BIT LIST
;
	.MACRO	$BITLST	LIST,?L1
. = $CLI..
	.IF B	<LIST>
	.BYTE	0
	.IFF
	.BYTE	L1-.-1
	.IRP	$$$,<LIST>
	.BYTE	$$$
	.ENDR
L1:
	.ENDC
$CLI.. = .
	.ENDM
;
; MACRO TO GENERATE A CLI CALL BACK REQUEST DESCRIPTOR
;
	.MACRO	$CLIREQDESC  RQTYPE,BITNUM,RQFLGS,ERRACT,RQSIZE,RQADR,-
			QUALST,PRSACT,ABSACT
 
	.NLIST
	$CLIDEF				; DEFINE VALUES FOR CLI
	.LIST
	$CLIALO	CLI$C_REQDESC
 
	$CLISET	_RQTYPE,RQTYPE
	$CLISET	_BITNUM,BITNUM
	$CLISET	_RQFLGS,<RQFLGS>,M,B
	$CLISET	_ERRACT,ERRACT,A
	$CLISET	_RQSIZE,RQSIZE,W
	$CLISET	_RQADR, RQADR, A
	$CLISET	_QUALST,QUALST,A
	$CLISET	_PRSACT,PRSACT,A
	$CLISET	_ABSACT,ABSACT,A
 
	$CLIEND
	.ENDM
 
;
; *** TEMP *** OLD NAME OF MACRO
;
 
	.MACRO	$CLIQUALDEF QDCODE,QDFLGS,TRUACT,FLSACT,TSTLST,SETLST,CLRLST
	$CLIQUALDESC QDCODE,QDFLGS,TRUACT,FLSACT,TSTLST,SETLST,CLRLST
	.ENDM
;
; MACRO TO GENERATE A QUALIFIER DESCRIPTOR
;
	.MACRO	$CLIQUALDESC QDCODE,QDFLGS,TRUACT,FLSACT,TSTLST,SETLST,CLRLST,?Z
 
	.IF IDN	<QDCODE><END_LIST>
	.BYTE	0
	.IFF
	$CLIALO	CLI$C_QUALDEF
 
	$CLISET	_QDBLKSIZ,<Z-.>
	$CLISET	_QDCODE,QDCODE
	$CLISET	_QDFLGS,<QDFLGS>,M,B
	$CLISET	_TRUACT,TRUACT,A
	$CLISET	_FLSACT,FLSACT,A
	$BITLST	<TSTLST>
	$BITLST	<SETLST>
	$BITLST	<CLRLST>
 
	$CLIEND
Z:
 
	.ENDC
	.ENDM
;
; MACRO TO GENERATED A COUNTED STRING FOR THE MATCHKEY SUBROUTINE
;
	.MACRO	$KEYWORD	ST,?L1
	.BYTE	L1-.-1
	.ASCII	\ST\
L1:
	.ENDM
