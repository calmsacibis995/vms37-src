;
;	Version	'V03-004'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from A to E.  That is, all control blocks from AAA to EZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-004	RLRV3A3		Robert L. Rappaport	15-Apr-1982
;		Add EMB$C_ACPTH to log Attention messages.
;
;	V03-003	RLRV3A2		Robert L. Rappaport	6-Apr-1982
;		Add EMB$C_AVATN, EMB$C_DUPUN so as to log Attention
;		messages from MSCP controllers. Also add EMB$C_IVCMD.
;
;	V03-002	KTA0090		Kerbey T. Altmann	29-Mar-1982
;		Add new field to BOOT QIO vector for microcode address.
;
;	V03-001	RLRV3A1		Robert L. Rappaport	23-Mar-1982
;		Add two state bits to CDDB definition and add field
;		to EMBSPDEF (Error Log Software Parameter block).
;
;	V02-040	ADE0003		Alan D. Eldridge	2-Mar-1982
;		Extend CXB$C_DLL to 32 bytes.  Move CXB$L_ENDACTION into
;		the CXB$C_DLL area in order to keep start of the datalink
;		impure area quadword aligned.
;
;	V02-039	ADE0002		Alan D. Eldridge	9-Nov-1982
;		Quadword align the data are within a CXB by shortening
;		the datalink scratch area (CXB$C_DLL) to 28 bytes.
;
;	V02-038	RLRUEMB		Robert L. Rappaport	5-Feb-1982
;		Added fields to EMBDEF to support error logging on
;		UDA50.
;
;	V02-037	JLV0177		Jake VanNoy		2-Feb-1982
;		Change name of BRD$L_ANSDATA and BRD$W_ANSLENGTH
;		to BRD$L_SCRDATA and BRD$W_SCRLENGTH. Change name of
;		DPT$Q_LINKDATE to DPT$Q_LINKTIME to coincide with
;		$IHIDEF symbol.
;
;	V02-036	RLRUBARS	Robert L. Rappaport	25-Jan-1982
;		Added CDRP$L_UBARSRCE to end of Class Driver extension of
;		CDRP definition.
;
;	V02-035	RLRCDDBY	Robert L. Rappaport	13-Jan-1982
;		Corrected spelling of CDDB$L_CONNQBL.
;
;	V02-034	JLV0156		Jake VanNoy		13-Jan-1982
;		Add DPT$Q_LINKDATE and DPT$L_ECOLEVEL to allow 
;		verification of drivers received in dumps. Move
;		length definition of ACB to end.
;
;	V02-033	RLRCDDBX	Robert L. Rappaport	4-Jan-1982
;		Added CDDB$L_CONNQFL and CDDB$L_CONNQBL.
;
;	V02-032	SPF0051		Steve Forgey		02-Jan-1982
;		Add remote node fields to ACMDEF.
;
;	V02-031	KTA0058		Kerbey T. Altmann	29-Dec-1981
;		Add some new fields to CDT.  Add new DYN subcode.
;
;	V02-030	SPF0045		Steve Forgey		28-Dec-1981
;		Add FLAGS field to ERL structure.
;
;	V02-029	ROW0061		Ralph O. Weber		23-DEC-1981
;		Add ACF$L_DLVR_SCRH to autoconfigure control block.  Also move 
;		ACF$B_CNUMVEC so that longword control block entries are 
;		longword aligned (so that the map in the driver guide will 
;		look better).
;
;	V02-028	PHL0025		Peter H. Lipman		30-Nov-1981
;		Comment changes only!  Document in $AQBDEF the fact
;		that the ACPTYPE fields are replicated in $DVIDEF.
;
;	V02-027	RLREMB		Robert L. Rappaport	24-Nov-1981
;		Added two new types of errorlog message buffer: EMBSPDEF,
;		a buffer used by the disk class driver to store software
;		parameters after a device error, and EMBLMDEF, a buffer
;		used to log a device dependent message.
;
;	V02-026	RLRADPB		Robert L. Rappaport	23-Nov-1981
;		Make UNIBUS ADP length an integer multiple of longwords.
;
;	V02-025	ADE0001		Alan D. Eldridge	16-Nov-1981
;		Added CXB$W_UQUO, CXB$W_JQUO, CXB$B_ASTCNT, CXB$L_IRP, 	
;		CXB$L_ENDACTION, CXB$T_DLL, CXB$C_DLL, CXB$C_HEADER, 
;		CXB$C_TRAILER, and CXB$C_OVERHEAD.   Removed CXB$C_DDCCON, 
;		CXB$C_DDCDAT, CXB$C_DDCRCV, CXB$C_DDCERR, and CXB$C_NSPSTART.
;		Moved the position of CXB$L_IRP down 4 bytes.
;
;	V02-024	RLR0007		Robert L. Rappaport	12-Nov-1981
;		Eliminated ADP$W_MRBITMAP and shifted ADP$W_DPBITMAP
;		down to UBA extension of ADP.
;
;	V02-023	RLR0006		Robert L. Rappaport	2-Nov-1981
;		Added EMB$C_DA as an error log record type.
;
;	V02-022	RLR0005		Robert L. Rappaport	30-Oct-1981
;		Added fields to ADP for new UBA map register allocation
;		scheme.
;
;	V02-021	KTA0039		Kerbey T. Altmann	28-Oct-1981
;		Added new structure BQO for offsets into IO vector of the
;		boot QIO driver.
;
;	V02-020	RLR0004		Robert L. Rappaport	23-Oct-1981
;		1. DYNDEF changes:
;			a) Added CLASSDRV subtypable major code.  Under this
;			   coded added subtypes CDDB and BBRPG (Bad Block
;			   Replacement PaGe).  Also eliminated CDDB simple code.
;		2. CDDB changes:
;			a) Eliminated CDDB$x_CDRPTRCKL status bit.
;			b) Added CDDB$x_INITING and CDDB$x_RECONNECT status bits.
;			c) Eliminated CDDB$W_TOTCDRP field.
;			d) Changed CDDB$W_OLDCMDSTS back to CDDB$L_OLDCMDSTS.
;			e) Moved CDDB$B_RETRYCNT to make room for CDDB$B_SUBTYPE.
;
;	V02-019	JLV0090		Jake VanNoy		22-Oct-1981
;		Add DPT flag for SCS code needed. Increment DPT$C_VERSION
;		to 3 and add a spare longword to make mods easier.
;
;	V02-018	KTA0036		Kerbey T. Altmann	08-Oct-1981
;		Added DYN$C_BOOTCB for boot control block.
;
;	V017	SPF0041		Steve Forgey		28-Sep-1981
;		Added LOGFAIL enable/disable type to $ACMDEF.
;
;	V016	CAS0034		C. A. Samuelson		14-Sep-1981
;		Added field to $ACFDEF specifying number of units to configure.
;
;	V015	SPF0021		Steve Forgey		29-Aug-1981
;		Added fields to $ACMDEF.
;
;	V014	RLR0003		Robert L. Rappaport	28-Aug-1981
;		Changed CDDB$L_OLDCMDSTS to CDDB$W_OLDCMDSTS and moved
;		CDDB$B_CNTRLTYP.
;
;	V013	TMH0013		Tim Halvorsen		26-Aug-1981
;		Add $CANDEF
;
;	V02-012	SRB0031		Steve Beckhardt		20-Aug-1981
;		Added subtype code for process bitmap (DYN$C_PRCMAP).
;
;	V02-011	HRJ0026		Herb Jacobs		12-Aug-1981
;		Replaced DYN$C_SFT with DYN$C_UNUSED in DYN structure.
;
;	V02-010	JLV0066		Jake VanNoy		12-Aug-1981
;		Added mailbox prefix block to BRD block.
;
;	V02-009	NPK2008		N. Kronenberg		04-Aug-1981
;		Renamed CDT$L_AUXCDT to CDT$L_AUXSTRUC.  Removed
;		CDRP from CDT.  Added DGHDRSZ and MSGHDRSZ to CDT.
;
;	V02-008	KDM0063		Kathleen D. Morse	03-Aug-1981
;		Add process name and id to bugcheck and crash/restart
;		error log messages.
;
;	V02-007	KTA0028		Kerbey T. Altmann	31-Jul-1981
;		Add some new DYN$ values.
;
;	V02-006	SPF0014		Steven Forgey		30-Jul-1981
;		Moved $ACMDEF from job controller and added accounting message
;		offsets.
;
;	V02-005	RLR0002		Robert L. Rappaport	30-July-1981
;		Added CDDB$B_CNTRLTYP field.
;
;	V02-004	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Change all "7ZZ"s to "730"s.
;
;	V02-003	RLR0001		Robert L. Rappaport	29-July-1981
;		Added CDDB$L_SAVED_PC field and CDDB$V_IMPEND bit.
;
;	V02-002	KDM0062		Kathleen D. Morse	29-Jul-1981
;		Remove PCB from the crash-restart and bugcheck error
;		log messages.
;
;**

;+
; ACMDEF - ACCOUNTING MANAGER DEFINITIONS
;-

	$STRUCT	ACM

	V	<	; ACCOUNTING MANAGER FLAGS (EXE$GL_ACMFLAGS)
		PROCESS		; PROCESS ACCOUNTING ENABLED
		IMAGE		; IMAGE ACCOUNTING ENABLED
		INTERACTIVE	; INTERACTIVE ACCOUNTING ENABLED
		LOGFAIL		; LOGIN FAILURE ACCOUNTING ENABLED
		SUBPROCESS	; SUBPROCESS ACCOUNTING ENABLED
		DETACHED	; DETACHED PROCESS ACCOUNTING ENABLED
		BATCH		; BATCH ACCOUNTING ENABLED
		NETWORK		; NETWORK PROCESS ACCOUNTING ENABLED
		PRINT		; PRINT JOB ACCOUNTING ENABLED
		USER_DATA	; USER_DATA ACCOUNTING ENABLED
		ACM_FUNC	; ACM FUNCTION ACCOUNTING ENABLED
		SYS_FUNC	; SYSTEM FUNCTION ACCOUNTING ENABLED
		>

       -F	MSGSTS,W	; MSG STATUS IN MAILBOX IOSB (JOBCTL SPECIFIC)
       -F	MSGLEN,W	; MSG LENGTH IN MAILBOX IOSB (JOBCTL SPECIFIC)
       -F	PROCID,L	; PROCESS ID IN MAILBOX IOSB (JOBCTL SPECIFIC)
	F	TYPE,W		; MESSAGE TYPE
	F	MAILBOX,W	; MAILBOX UNIT NUMBER
	F	PRVMSK,Q	; PROCESS PRIV MASK
	F	UIC,L		; PROCESS UIC
	S	MEM,,W		; 	MEMBER UIC
	S	GRP,,W		;	GROUP UIC
	F	USERNAME,T,12	; USERNAME
	F	ACCOUNT,T,8	; ACCOUNT NAME
	F	PROCPRI,B	; PROCESS BASE PRIORITY
	F	,B,3		; SPARE BYTES (LONGWORD ALIGNMENT)
	F	PID,L		; PROCESS ID
	F	STS,L		; PROCESS STATUS
	F	OWNER,L		; OWNER PROCESS ID (0 => NONE)
	F	TERMINAL,T,8	; TERMINAL NAME (COUNTED ASCII STRING)
	F	SYSTIME,Q	; CURRENT SYSTEM TIME
	M	1
;
; SEND TO ACCOUNTING MANAGER FIELDS
;
	P	1
	F	USERREQ,W	; USER REQUEST TYPE
	F	DATA,T,256	; USER DATA
;
; PROCESS/IMAGE DELETE/PURGE FIELDS
;
	P	1
	F	LOGIN,Q		; PROCESS/IMAGE START TIME
	F	FINALSTS,L	; PROCESS FINAL STATUS
	F	IMGCNT,L	; IMAGE EXECUTION COUNT
	F	CPUTIME,L	; CPU USAGE
	F	PAGEFLTS,L	; PAGEFAULT COUNT
	F	PGFLTIO,L	; PAGEFAULT I/O
	F	WSPEAK,L	; WORKING SET PEAK
	F	PGFLPEAK,L	; PAGE FILE PEAK
	F	DIOCNT,L	; DIRECT I/O COUNT
	F	BIOCNT,L	; BUFFERED I/O COUNT
	F	VOLUMES,L	; VOLUME MOUNT COUNT
	F	NODEADDR,W	; MESSAGE OFFSET TO REMOTE NODE ADDRESS
	F	NODENAME,W	; MESSAGE OFFSET TO REMOTE NODE NAME
	F	REMOTEID,W	; MESSAGE OFFSET TO REMOTE ID
	F	IMAGENAME,W	; MESSAGE OFFSET TO IMAGE NAME
	L	PROCLEN		; MIN. PROCESS/IMAGE TERMINATION MESSAGE LENGTH
	E

;+
; AST CONTROL BLOCK DEFINITIONS
;
; AST CONTROL BLOCKS EXIST AS SEPARATE STRUCTURES AND AS SUBSTRUCTURES
; WITHIN LARGER CONTROL BLOCKS SUCH AS I/O REQUEST PACKETS AND TIMER
; QUEUE ENTRIES.
;
;-
 
	$STRUCT	ACB

	F	ASTQFL,L		;AST QUEUE FORWARD LINK
	F	ASTQBL,L		;AST QUEUE BACKWARD LINK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	RMOD,B			;REQUEST ACCESS MODE
		V<			;RMOD FLAG DEFINITIONS
		MODE,2			;MODE FOR FINAL DELIVERY
		  ,2			;SPARE
		PKAST,,,M		;PIGGY BACK SPECIAL KERNEL AST
		NODELETE,,,M		;DON'T DELETE ACB ON DELIVERY
		QUOTA,,,M		;ACCOUNT FOR QUOTA
		KAST,,,M		;SPECIAL KERNEL AST
		>
	F	PID,L			;PROCESS ID OF REQUEST
	F	AST,L			;AST ROUTINE ADDRESS
	F	ASTPRM,L		;AST PARAMETER
	F	KAST,L			;INTERNAL KERNEL MODE XFER ADDRESS
	L	LENGTH			; Length of block.

	E

;
; CONFIGURATION CONTROL BLOCK OFFSET DEFINITIONS
;
 
	$STRUCT	ACF
 
	F	ADAPTER,L		;ADDRESS OF ADAPTER CONTROL BLOCK
	F	CONFIGREG,L		;ADDRESS OF CONFIGURATION STATUS REGISTER
	F	AVECTOR,W		;OFFSET TO ADAPTER INTERRUPT VECTOR (SCB)
	F	AUNIT,B			;ADAPTER UNIT NUMBER
	F	AFLAG,B			;ADAPTER GENERATION CONTROL FLAGS
	V <M				;FLAG VALUES
		RELOAD			; RELOAD DRIVER
		CRBBLT			; CRB AND IDB ARE BUILT
		SCBVEC			; CVECTOR IS OFFSET INTO SCB
		NOLOAD_DB		; DON'T LOAD DATABASE, ONLY LOAD DRIVER
		SUPPORT			; DEVICE IS SUPPORTED
		>
	F	CONTRLREG,L		;ADDRESS OF CONTROL REGISTER
	F	CVECTOR,W		;OFFSET TO CONTROLLER INTERRUPT VECTOR (TABLE)
	F	CUNIT,B			;CONTROLLER UNIT NUMBER
	F	NUMUNIT,B		;NUMBER OF UNITS TO CONFIGURE
	F	DEVNAME,L		;ADDRESS OF DEVICE NAME COUNTED STRING
	F	DRVNAME,L		;ADDRESS OF DRIVER NAME COUNTED STRING
	F	MAXUNITS,W		;MAXIMUM UNITS THAT CAN BE CONNECTED
	F	CNUMVEC,B		;NUMBER OF CONTROLLER VECTORS
	F	,B			;(SPARE)
	F	DLVR_SCRH,L		;SCRATCH FOR DELIVER ROUTINES
	L	LENGTH			;LENGTH OF DEVICE DESCRIPTOR ARGUMENT LIST
 
	E
 

;+
; ADAPTER CONTROL BLOCK DEFINITIONS
;
; THERE IS ONE ADP FOR EACH SYSTEM INTERCONNECT ADAPTER THAT IS
; USED FOR ANY TYPE OF I/O.  FOR EXAMPLE: MASBUSS ADAPTER, UNIBUS
; ADAPTER.  THERE IS NO ADAPTER CONTROL BLOCK FOR MAIN MEMORY ADAPTERS.
;-
 
	$STRUCT	ADP
 
	F	CSR,L		 	;ADAPTER CONFIGURATION STATUS REGISTER ADDRESS
	F	LINK,L			;ADDRESS OF NEXT ADAPTER CONTROL BLOCK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	NUMBER,B		;ORDINAL ADAPTER NUMBER
	F	TR,W			;CONFIGURATION TR NUMBER
	F	ADPTYPE,W		;SOFTWARE ADAPTER TYPE
	F	VECTOR,L		;UBA - ADDRESS OF VECTOR JUMP TABLE
	S	CRB,0,L			;MBA OR DR32 - ADDRESS OF ADAPTER'S CRB
	F	DPQFL,L			;UBA - DATAPATH WAIT QUEUE FORWARD LINK
	S	PRQQFL,0,L		;MPM - INTER-PROCESSOR REQUEST WAIT QUEUE FLINK
	S	MBASCB,0,L		;MBA - SCB VECTOR VALUE FOR MBA NEXUS
	F	DPQBL,L			;UBA - DATAPATH WAIT QUEUE BACKWARD LINK
	S	PRQQBL,0,L		;MPM - INTER-PROCESSOR REQUEST WAIT QUEUE BLINK
	S	MBASPTE,0,L		;MBA - SPTE VALUE WHICH MAPS MBA ADDRESS SPACE
	L	MBAADPLEN		;LENGTH OF ADP FOR MASSBUS ADAPTER
	L	DRADPLEN		;LENGTH OF ADP FOR DR32
	L	CIADPLEN		;LENGTH OF ADP FOR CI
	F	MRQFL,L			;UBA - MAP REGISTER WAIT QUEUE FORWARD LINK
	S	SHB,0,L			;MPM - SHARED MEMORY CONTROL BLOCK ADDR
	F	MRQBL,L			;UBA - MAP REGISTER WAIT QUEUE BACKWARD LINK
	S	PORT,0,B		;MPM - PORT NUMBER
	F	INTD,L,3		;UBA - INTERRUPT TRANSFER VECTOR
	L	MPMADPLEN		;LENGTH OF ADP FOR MULTI-PORT MEMORY
	F	UBASCB,L,4		;UBA - SCB VECTOR VALUE FOR 4 UBA VECTORS
	F	UBASPTE,L,2		;UBA - SPTE VALUES FOR MAPPING UBA ADDRESSES
	F	MRACTMDRS,L		; UBA - # active map register descriptors
	F	DPBITMAP,W		; UBA - Datapath Allocation Bitmap
	F	MRNFENCE,W		; Fence preceeding array. Init'ed to -1
	F	MRNREGARY,W,124		; # map regs in an extent array
	F	MRFFENCE,W		; Fence precedding array. Init'ed to -1
	F	MRFREGARY,W,124		; 1st reg in extent array.
	F	UMR_DIS,W		; Num of Map Registers to disable
					; NOTE** - UNIBUS ADP must be integral
					;  number of longwords long so that 780
					;  interrupt vectors are longword aligned.
	L	UBAADPLEN		;LENGTH OF ADP FOR UNIBUS ADAPTER
	C	NUMDATAP,16		;UBA - NUMBER OF DATAPATHS
 
	E

;+
; FORMAT OF ACP I/O BUFFER PACKET. THIS PACKET CONTAINS ALL THE DATA
; TRANSMITTED FROM THE USER TO THE ACP AND BACK FOR AN ACP FUNCTION.
; NOTE THAT THE DESCRIPTORS IN THE PACKET ARE TREATED BY BLISS CODE
; AS A BLOCKVECTOR.
;-

	$STRUCT	AIB		; MAIN PACKET BODY
 
	F DESCRIPT		; ADDRESS OF START OF DESCRIPTORS
	F			; SPARE LONGWORD
	F SIZE,W		; SIZE OF PACKET
	F TYPE,B		; PACKET TYPE CODE
	F ,B			; SPARE
	L LENGTH		; LENGTH OF PACKET HEADER
 
	E


	$STRUCT	ABD		; DESCRIPTOR FORMAT
 
	F TEXT,W		; WORD OFFSET TO DATA TEXT
	F COUNT,W		; BYTE COUNT OF TEXT
	F USERVA		; USER VIRTUAL ADDRESS OF TEXT
	L LENGTH		; SIZE OF DESCRIPTOR
	C WINDOW,0		; DESCRIPTOR FOR WINDOW ADDRESS
	C FIB,1			; DESCRIPTOR FOR FIB
	C NAME,2		; DESCRIPTOR FOR NAME STRING
	C RESL,3		; DESCRIPTOR FOR RESULT LENGTH
	C RES,4			; DESCRIPTOR FOR RESULT STRING
	C ATTRIB,5		; FIRST ATTRIBUTE DESCRIPTOR
 
	E

;+
; DEFINITION OF ACP QUEUE HEADER
;-
 
	$STRUCT	AQB		; ACP QUEUE HEADER BLOCK
 
	F ACPQFL		; QUEUE FORWARD LINK
	F ACPQBL		; QUEUE BACK LINK
	F SIZE,W		; CONTROL BLOCK SIZE IN BYTES
	F TYPE,B		; BLOCK TYPE CODE
	F MNTCNT,B		; ACP MOUNT COUNT
	F ACPPID		; ACP PROCESS PID
	F LINK			; AQB LIST LINKAGE
	F STATUS,B		; STATUS BYTE
	V<M
	    UNIQUE		; ACP IS UNIQUE TO THIS DEVICE
	    DEFCLASS		; ACP IS DEFAULT FOR THIS CLASS
	    DEFSYS		; ACP IS DEFAULT FOR THE SYSTEM
	    CREATING		; ACP IS CURRENTLY BEING CREATED
	>
	F ACPTYPE,B		; ACP TYPE CODE
;
; ***** The following ACP type codes are now a user visible interface
; ***** and the values may not be changed.  There are parallel definitions
; ***** in the $DVIDEF macro that define symbols of the form:
; *****
; *****		DVI$C_ACP_F11V1
; *****		DVI$C_ACP_F11V2
; *****		DVI$C_ACP_MTA
; *****		...
; *****
; ***** All new ACP type values must be added at the end and the names
; ***** must be 5 characters or less to keep the DVI form of the name
; ***** 15 characters or less.  Any additions must also be made in $DVIDEF
; ***** and in the list of ASSUMES in the module SYSGETDEV in [SYS.SRC]
;
	K<,,0,1
	    UNDEFINED		; UNDEFINED ACP
	    F11V1		; FILES-11 STRUCTURE LEVEL 1
	    F11V2		; FILES-11 STRUCTURE LEVEL 2
	    MTA			; MAGTAPE
	    NET			; NETWORKS
	    REM			; REMOTE I/O
	    JNL			; JOURNAL

	>
	F CLASS,B		; ACP CLASS CODE
	F ,B			; RESERVED
	L LENGTH		; SIZE OF AQB
 
	E

;+
;
; Access Rights Block - structure defining process access rights and
;			privileges. Presently part of the PCB.
;
;-
	$STRUCT	ARB
	F PRIV,Q			; Privilege mask
	F ,L				; Spare to allow for JIB type,size
	F UIC,L				; User identification code.
	L LENGTH			; Structure length
	E				;

;+
;
; Structure of message from disk ACP to bad block scan utility.
;
;-

	$STRUCT	BBS

	F MSGTYPE,B			; message type code (MSG$C_SCANBAD)
	F ,B,3				; unused
	F SEQUENCE,W			; message sequence number
	F ,W				; unused
	F UCB				; UCB address of device
	F FID,W,3			; file ID of file
	L LENGTH

	E

;+
; BOO - Boot Control Block
;
; A boot control block is produced by SYSBOOT and placed in non-paged
; pool.  It is pointed to by the cell EXE$GL_BOOTCB and contains
; the mapping information for SYS.EXE, SYSDUMP.DMP, SYSPARAM portion
; of SYS.EXE, and non-resident BUGCHECK code.
;-
	$STRUCT	BOO
	F CHECKSUM,L		; Checksum
	F PARAM_MAP,L		; Address of map for SYSPARAM
	F SIZE,W		; Size of fixed portion of BOOTCB
	F TYPE,B		; Type of control block
	F SUBTYP,B		; Sub-type
	F SYS_VBN,L		; SYS.EXE starting VBN
	F SYS_SIZE,L		; SYS.EXE size in blocks
				; from starting VBN to end of executable image
	F SYS_MAP,L		; Adr of map for SYS.EXE
	F DMP_VBN,L		; Starting VBN for dump file
	F DMP_SIZE,L		; Size in blocks of dump file
				; from starting VBN to end of file
	F DMP_MAP,L		; Adr of map for SYSDUMP.DMP
	F BUG_MAP,L		; Adr of map for non-resident BUGCHECK code
	L LENGTH		
	E

;+
;
; Offsets into the IO vector of the BOOT driver.
;
;-

	$STRUCT	BQO

	F	QIO		; QIO entry
	F	MAP		; Mapping entry
	F	SELECT		; Selection entry
	F	DRIVRNAME	; Offset to driver name
	F	VERSION,W	; Version number of VMB
	F	VERCHECK,W	; Check field
	F	RESELECT	; Reselection entry
	F	MOVE		; Move driver entry
	F	UNIT_INIT	; Unit initialization entry
	F	AUXDRNAME	; Offset to auxiliary driver name
	F	UMR_DIS		; UNIBUS Map Registers to disable
	F	UCODE		; Absolute address of booting microcode
	E


;+
;
; Structure of broadcast message descriptor block.
;
;-

	$STRUCT	BRD

	F FLINK,L		; Broadcast queue forward link.
	F BLINK,L		; Broadcast queue backward link.
	F SIZE,W		; Size of block.
	F TYPE,B		; Type of block.
	F ,B			; Spare byte.
	F PCB,L			; PCB of requestor.
	F PID,L			; PID of requestor.
	F REFC,W		; Terminals outputting message now.
	F SCRLENGTH,W		; SCREEN message length.
	F SCRDATA,L		; SCREEN data pointer.
	F CARCON,L		; Carriage control parameter.
	F TRMMSG,W		; Terminal broadcast mail message
	F TRMUNIT,W		; Terminal unit number
	F TRMNAME,T,1		; Terminal name
	F ,B,15			; Space for name
	F MSGLENGTH,W		; Length of message in bytes.
	F DATA,L		; Data area.
	L LENGTH		; Length of descriptor block.

	E

;+
;
; Boot device codes
;
;-

	$STRUCT	BTD

	K< ,$K_				; "$K_" added, 8/30/79, CHP
	MB,0				; Massbus device
					; Types 1-31. reserved for unibus
					; devices
	DM,1				; RK06/7
	DL,2				; RL02
	DQ,3				; RB02/RB80
	UDA,17				; UDA
					; End of unibus devices
	HSCCI,32			; HSC on CI
	CONSOLE,64			; Console block storage device
	>
	E


;+
; CONDITIONAL ASSEMBLY PARAMETER DEFINITIONS
;
;	A NONZERO PARAMETER VALUE INDICATES PRESENCE OF THE FEATURE.
;	A ZERO PARAMETER VALUE INDICATES ABSENCE OF THE FEATURE
;
;	ALL PARAMETERS MUST BE DEFINED
;-

	$STRUCT	CA

	C <CA,$_
		SIMULATOR,1		;INCLUDE SIMULATOR SUPPORT CODE
		MEASURE,2		;INCLUDE PERFORMANCE MEASUREMENT HOOKS
		MEASURE_IOT,4		;INCLUDE I/O TRANSACTION DATA COLLECTION
	>
 
	E


;+
; CAN - DEFINE DRIVER CANCEL ROUTINE REASON CODES
;
; THESE CODES ARE PASSED TO THE CANCEL ROUTINE OF A DRIVER SO THAT
; THE ROUTINE CAN DISTINGUISH BETWEEN CALLS FROM $DASSGN AND $CANCEL.
;
;-

	$STRUCT	CAN

	C	<
		CANCEL		;CANCEL INVOKED DUE TO $CANCEL SERVICE
		DASSGN		;CANCEL INVOKED DUE TO $DASSGN SERVICE
		>
	E

;+
; CDRP - CLASS DRIVER I/O REQUEST PACKET
;
; This structure contains within it, at negative offsets, a full IRP.
; For this reason all IRP fields must be at the same relative offsets
; as the corresponding fields in the IRP.
;
;-
 
	$STRUCT	CDRP
 
	-F	IOQFL,L			;I/O QUEUE FORWARD LINK
	-F	IOQBL,L			;I/O QUEUE BACKWARD LINK
	-F	IRP_SIZE,W		;SIZE OF IRP IN BYTES
	-F	IRP_TYPE,B		;STRUCTURE TYPE FOR IRP
	-F	RMOD,B			;ACCESS MODE OF REQUEST
;		V<
;		MODE,2			; MODE SUBFIELD
;		>
	-F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	-F	AST,L			;ADDRESS OF AST ROUTINE
	-F	ASTPRM,L		;AST PARAMETER
	-F	WIND,L			;ADDRESS OF WINDOW BLOCK
	-F	UCB,L			;ADDRESS OF DEVICE UCB
	-F	FUNC,W			;I/O FUNCTION CODE AND MODIFIERS
;		V<			; I/O FUNCTION CODE FIELD DEFINITIONS
;		FCODE,6,,M		; FUNCTION CODE FIELD
;		FMOD,10			; FUNCTION MODIFIER FIELD
;	>
	-F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	-F	PRI,B			;BASE PRIORITY OF REQUESTING PROCESS
	-F	IOSB,L			;ADDRESS OF I/O STATUS DOUBLE LONGWORD
	-F	CHAN,W			;PROCESS I/O CHANNEL NUMBER
	-F	STS,W			;REQUEST STATUS
;		V <			; BIT DEFINITIONS
;		BUFIO,,,M 		; BUFFERED I/O FLAG   ;THESE BITS
;		FUNC,,,M		; 1=>READ FUNCTION    ;MUST BE ADJACENT
;		PAGIO,,,M		; PAGING I/O FLAG     ;AND IN ORDER
;		COMPLX,,,M		; COMPLEX BUFFERED I/O
;		VIRTUAL,,,M		; VIRTUAL I/O FUNCTION
;		CHAINED,,,M		; CHAINED BUFFERED I/O OPERATION
;		SWAPIO,,,M		; SWAP I/O OPERATION
;		DIAGBUF,,,M		; DIAGNOSTIC BUFFER ALLOCATED
;		PHYSIO,,,M		; PHYSICAL I/O
;		TERMIO,,,M		; TERMINAL I/O (FOR SELECTING PRIORITY INC)
;		MBXIO,,,M		; MAILBOX BUFFERED READ
;		EXTEND,,,M		; AN IRPE IS LINKED TO THIS IRP
;		FILACP,,,M		; FILE ACP I/O (BOTH DIOCNT AND BIOCNT)
;		MVIRP,,,M		; MOUNT VERIFICATION IRP
;		>			; END OF BIT DEFINITIONS
	-F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF FIRST PTE
	-F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	-F	BCNT,L			;BYTE COUNT OF TRANSFER
	S	BCNT,0,W		; OLD WORD DEFINITION FOR COMPATIBILITY
	-F	,W			; ROUND UP TO NEXT LONGWORD
	-F	IOST1			;FIRST I/O STATUS LONGWORD (FOR I/O POST)
	S	MEDIA,,L		;MEDIA ADDRESS
	-F	IOST2			;SECOND I/O STATUS LONGWORD
	S	TT_TERM,0,L		;ADDRESS OF READ TERMINATORS MASK
	S	CARCON,0,B		;CARRIAGE CONTROL
	-F	NT_PRVMSK,Q		; PRIVILEGE MASK FOR DECNET
	S	ABCNT,0,L		; ACCUMULATED BYTES TRANSFERED
	S	ABCNT,0,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	S	TT_PRMPT,0,W		; PROMPT SIZE
	S	OBCNT,4,L		; ORIGINAL TRANSFER BYTE COUNT
	S	OBCNT,4,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	-F	SEGVBN,L		;VIRTUAL BLOCK NUMBER OF CURRENT SEGMENT
	S	JNL_SEQNO,0,L		; SEQUENCE NUMBER IN JOURNAL
	-F	DIAGBUF,L		; DIAGNOSTIC BUFFER ADDRESS
	-F	SEQNUM,L		; SEQUENCE NUMBER
	-F	EXTEND,L		; ADDRESS OF IRPE
	-F	ARB,L			; ACCESS RIGHTS BLOCK ADDRESS


	L	CDRPBASE
	F	FQFL,L			; Fork Queue FLINK
	F	FQBL,L			; Fork Queue Blink
	F	CDRPSIZE,W		; Size field for positive section only
	F	CD_TYPE,B		; Type, always of interest
	F	FIPL,B			; Fork IPL
	F	FPC,L			; Fork PC
	F	FR3,L			; Fork R3
	F	FR4,L			; Fork R4
	F	SAVD_RTN,L		; Saved return address from level 1 JSB
	F	MSG_BUF,L		; Address of allocated MSCP buffer
	F	RSPID,L			; Allocated Request ID
	F	CDT,L			; Address of Connection Descriptor Table
	F	RWCPTR,L		; RWAITCNT pointer
	L	LENGTH
	M	1

; Block Transfer Extension

	P	1
	F	LBUFH_AD,L		; Local BUFfer Handle ADress
	M	2
	F	LBOFF,L			; Local Byte OFFset
	F	RBUFH_AD,L		; Remote BUFfer Handle ADress
	F	RBOFF,L			; Remote Byte OFFset
	F	XCT_LEN,L		; Transfer length in bytes
	L	BT_LEN


; Class Driver Extension

	P	2
	F	LBUFHNDL,T,12		; Local buffer handle
	F	UBARSRCE,L		; UNIBUS mapping resources allocated
	L	CD_LEN
	E

;+
;
; Connect to interrupt definitions for QIO parameters
;
;-

	$STRUCT	CIN

	M	1

	F INIDEV			; Offset to device init routine.
	F START				; Offset to start device routine.
	F ISR				; Offset to interrupt service routine.
	F CANCEL			; Offset to cancel I/O routine.

	P	1

	F SPTCOUNT			; Number of SPTs allocated.
	F STARTVPN			; Starting VPN allocated.
	S STARTBIT			; Starting bit in bitmap.

	P	1

	V <				; Flag bits.
		EFN,,,M			; Set event flag on interrupt.
		USECAL,,,M		; Use CALL interface.
		REPEAT,,,M		; Do repeated interrupt service.
		AST,,,M			; Queue AST on interrupt.
		INIDEV,,,M		; Device initialization to do.
		START,,,M		; Start I/O routine.
		ISR,,,M			; ISR to execute.
		CANCEL,,,M		; Cancel I/O routine.
		,8			; Spare bits.
		EFNUM,16,,M		; Event flag number.
	>

	E



;+
; CCB - CHANNEL CONTROL BLOCK
;
; THERE IS ONE CHANNEL CONTROL BLOCK FOR EACH SOFTWARE CHANNEL THAT A
; PROCESS MAY INITIATE I/O REQUESTS ON. THE NUMBER OF SUCH I/O CHANNELS
; IS DETERMINED BY THE FIXED NUMBER ASSIGNED TO A PROCESS PLUS ANY
; ADDITIONAL CHANNELS REQUIRED BY THE IMAGE CURRENTLY BEING EXECUTED
; BY THE PROCESS.
;
; **** WARNING ****
;	THE CHANNEL CONTROL BLOCK IS ASSUMED TO BE FOUR LONG WORDS
; THROUGHOUT THE EXEC.  ITS SIZE MAY BE CHANGED BUT ONLY BY POWERS OF 2.
;-
 
	$STRUCT	CCB

	F	UCB,L		;ADDRESS OF ASSIGNED DEVICE UCB
	F	WIND,L		;ADDRESS OF WINDOW BLOCK
	F	STS,B		;CHANNEL STATUS
	V	<			; CHANNEL STATUS FLAGS
		AMB,,,M			;  MAILBOX ASSOCIATED WITH CHANNEL
		>			;
	F	AMOD,B		;ACCESS MODE THAT ASSIGNED CHANNEL
	F	IOC,W		;NUMBER OF OUTSTANDING I/O REQUESTS ON CHANNEL
	F	DIRP,L		;DEACCESS I/O REQUEST PACKET ADDRESS
	L	LENGTH		;LENGTH OF CCB
	E

;+
; CDDB - Class Driver Data Block
;
; Auxiliary data block pointed at by the CRB$L_AUXSTRUC of an MSCP speaking
; intelligent disk or tape controller.  There is one CDDB per such intelligent
; controller.
;
;-

	$STRUCT	CDDB

	F	CDRPQFL,L	;Active CDRP Q FLINK
	F	CDRPQBL,L	;Active CDRP Q BLINK
	F	SIZE,W		;Size of CDDB in bytes
	F	TYPE,B		;Major structure type for Class Driver
	F	SUBTYPE,B	; CDDB structure subtype field
	F	SYSTEMID,B,6	;48 bit system ID.
	F	STATUS,W	;Status word
		V <		; Bit definitions
		SNGLSTRM,,,M	; Single stream mode after VC crash
		IMPEND,,,M	; IMmediate command PENDing
		INITING,,,M	; Currently initializing CONNECTION
		RECONNECT,,,M	; Currently re-CONNECTING to MSCP server
		RESYNCH,,,M	; re_CONNECT initiated by Class Driver
		>
	F	PDT,L		;Port Descriptor Table address
	F	CRB,L		;CRB address
	F	DDB,L		;DDB address
	F	CNTRLID,Q	;Controller ID returned by MSCP END PACKET
	S	CNTRLMDL,6,B	; Controller model # (byte 6 of controller id)
	S	CNTRLCLS,7,B	; Controller class (byte 7 of controller id)
	F	CNTRLFLGS,W	;Controller flags also returned by END PACKET
	F	CNTRLTMO,W	;Controller timeout also returned by END PACKET
	F	OLDRSPID,L	;RSPID of oldest outstanding MSCP command
	F	OLDCMDSTS,L	;Latest MSCP command status for this command
	F	RSTRTCDRP,L	;Addr of only active CDRP after VC re-establish
	F	RETRYCNT,B	;# retries remaining for CDRP after VC reset
	F	,B,1		;Reserved byte
	F	RSTRTCNT,W	;# CDRP's on following Q awaiting VC re-establish
	F	RSTRTQFL,L	;Queue wherein we accumulate, sort and select
	F	RSTRTQBL,L	; for re-submission following VC re-establish
	F	CONNQFL		;Queue header used for permanent CDRP
	F	CONNQBL		;Queue tail used for permanent CDRP
	F	SAVED_PC,L	;Saved PC on internal subroutine calls
	L	LENGTH		;Standard length of CDDB
	F	PERMCDRP,L	;Beginning of a permanent CDRP allocated
				;  contiguous to CDDB

	E

;+
; CDL - SCS CONNECTION DESCRIPTOR LIST
;
; THERE IS A SYSTEM WIDE LIST OF CONNECTION DESCRIPTORS POINTED
; TO BY THE CDL.
;-

	$STRUCT	CDL

	-F	MAXCONIDX,W		;MAXIMUM # OF CDT'S
	-F	,W			;RESERVED WORD
	-F	FREECDT,L		;ADDR OF 1ST FREE CDT
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;SCS STRUCTURE TYPE
	-F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR CDL
	-F	,L,1			;RESERVED LONGWORD
	F	BASE,L			;BASE OF THE TABLE
	C	LENGTH,16		;LENGTH OF NEG PORTION OF STRUCTURE

	E

;+
; CDT - SCS CONNECTION DESCRIPTOR TABLE
;
; THESE DESCRIPTORS ARE POINTED TO BY THE SYSTEM WIDE CONNECTION
; DESCRIPTOR LIST (CDL).  ONE CDT IS USED PER SCS VIRTUAL CIRCUIT
; OR LISTENING CONNECTION.
;-

	$STRUCT	CDT

	F	MSGINPUT,L		;ADDR OF MSG INPUT DISPATCHER
	S	LINK,,L			; OR LINK TO NEXT FREE CDT
	F	DGINPUT,L		;ADDR TO CALL ON DG RECEIVED
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR CDT
	F	ERRADDR,L		;ADDR TO CALL FOR ERROR NOTIFICATION
	F	PDT,L			;ADDR OF ASSOC PORT DESC TABLE
	F	RCONID,L		;REMOTE CONNECTION ID
	F	LCONID,L		;LOCAL CONNECTION ID
	F	PB,L			;ADDR OF ASSOC PATH BLOCK
	F	RSTATION,B,6		;REMOTE STATION ADDR
	F	REASON,W		;REJECT/DISCONNECT REASON
	F	STATE,W			;CONNECTION STATE
					;STATE VALUES:
	C	<CDT,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1:
		CLOSED			; CLOSED
		LISTEN			; LISTENING FOR CONNX REQUESTS
		OPEN			; OPEN
		DISC_ACK		; DISCONNECT ACKNOWLEDGED
		DISC_REC		; DISCONNECT REQ RECEIVED
		DISC_SENT		; DISCONNECT SENT
		DISC_MTCH		; DISCONNECT MATCH
		CON_SENT		; CONNECT REQ SENT
		CON_ACK			; CONNECT REQ SENT AND ACK'ED
		CON_REC			; CONNECT REQ RECEIVED
		ACCP_SENT		; ACCEPT REQ SENT
		REJ_SENT		; REJECT SENT
		VC_FAIL			; VIRTUAL CIRCUIT FAILED
		>			;
	F	BLKSTATE,W		;SCS SEND BLOCKED STATE
					;STATE VALUES:
	C	<CDT,$C_,1,1		; 1 ORIGIN, INCREMENTS OF 1:
		CON_PEND		; WAITING TO SEND CONNECT REQ
		ACCP_PEND		; WAITING TO SEND ACCEPT REQ
		REJ_PEND		; WAITING TO SEND REJECT REQ
		DISC_PEND		; WAITING TO SEND DISCONNECT REQ
		CR_PEND			; WAITING TO SEND CREDIT
		DCR_PEND		; WAITING TO SEND CREDIT IN
					;  PREPARATION FOR DISCONNECT
		>			;
	F	SCSMSG,L		;ADDR OF SCS RECEIVE BUFFER
	F	WAITQFL,L		;SEND SCS MSG WAIT QUEUE FLINK
	F	WAITQBL,L		;SEND SCS MSG WAIT QUEUE BLINK
	F	CRWAITQFL,L		;SEND CREDIT WAIT QUEUE FLINK
	F	CRWAITQBL,L		;SEND CREDIT WAIT QUEUE BLINK
	F	SEND,W			;CURRENT SEND CREDIT
	F	REC,W			;RECEIVE CREDIT (SEND CREDIT
					; HELD BY REMOTE
	F	MINREC,W		;MINIMUM RECEIVE CREDIT (MIN
					; SEND REQUIRED BY REMOTE)
	F	PENDREC,W		;RECEIVE CREDIT NOT YET EXTENDED
					; TO REMOTE
	F	INITLREC,W		;INITIAL RECEIVE CREDIT
	F	MINSEND,W		;MINIMUM SEND CREDIT
	F	DGREC,W			;# DATAGRAMS QUEUED FOR RECEIVE
	F	PRIORITY,B		;BLOCK TRANSFER PRIORIY
	F	,B			;RESERVED
	F	RPROCNAM,L		;ADDR OF REMOTE PROCESS NAME
	F	LPROCNAM,L		;ADDR OF LOCAL PROCESS NAME
	F	CONDAT,L		;ADDR OF CONNECT DATA
	F	AUXSTRUC,L		;ADDR OF AUXILARY DATA STRUCTURE
	F	BADRSP,L		;ADDR IN SYSAP TO CALL WITH BAD RESPONSE
	F	FPC,L			;SAVED FORK PROCESS PC
	F	FR5,L			;SAVED FORK PROCESS R5
	F	CDTLST,L		;LINK FOR CDT LIST FROM PB
	L	LENGTH			;LENGTH OF CDT

	E

;+
; COMMON EVENT BLOCK
;-
	$STRUCT	CEB

	F	CEBFL,L			;POINTER TO NEXT COMMON EVENT BLOCK
	V	<			;SHARED MEMORY FLAGS IN CEBFL
		VALID,,,M		;SHMEM MASTER CEB, SET IF VALID ENTRY
		LOCKED,,,M		;SHMEM MASTER CEB, SET IF ENTRY LOCKED
		REFCNTLCK,,,M		;SHMEM MASTER CEB, LOCKED FOR REFCNT CHG
		>			;END OF SHARED MEMORY FLAGS
	F	CEBBL,L			;POINTER TO PREVIOUS COMMON EVENT BLOCK
	F	SIZE,W			;SIZE OF COMMON EVENT BLOCK IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR CEB
	F	STS,B			;STATUS FLAGS FOR CEB
		V <			;FLAG DEFINITIONS
		NOQUOTA			;NO QUOTA UPDATE
		PERM			;PERMANENT CLUSTER
		>			;
	F	PID,L			;PID OF CREATOR
	F	EFC,L			;EVENT FLAGS (32 BIT VECTOR)
	F	WQFL,L			;HEAD OF WAIT QUEUE
	F	WQBL,L			;TAIL OF WAIT QUEUE
	F	WQCNT,W			;WAIT QUEUE COUNT(LENGTH)
					;SHMEM FIELDS IN THIS WORD
	S	LOCK,0,B		;SHMEM MASTER CEB, # OF PORT OWNING LOCK
	S	PROCCNT,1,B		;SHMEM MASTER CEB, MAX # OF PROCESSORS
	F	STATE,W			;CEF WAIT STATE NUMBER
					;SHMEM FIELDS IN THIS WORD
	S	CREATPORT,0,B		;SHMEM MASTER CEB, # OF CREATOR PORT
	S	DELETPORT,1,B		;SHMEM MASTER CEB, # OF DELETER PORT
	F	UIC,L			;USER IDENT OF CEB CREATOR
	S	GRP,2,W			;GROUP NUMBER OF OWNER
	F	PROT,W			;PROTECTION MASK
	F	REFC,W			;REFERENCE COUNT FOR CEB
	F	EFCNAM,T,16		;EVENT CLUSTER TEXT NAME
	L	LENGTH			;LENGTH OF NORMAL COMMON EVENT BLOCK

;
; THE FOLLOWING FIELDS ARE DEFINED FOR SHARED MEMORY COMMON EVENT BLOCKS.
; CEB$L_SHB, CEB$W_INDX, AND CEB$L_MASTER ARE CONTAINED IN THE SLAVE CEB WHILE
; CEB$L_VASLAVE1 IS THE OFFSET IN THE MASTER CEB TO THE FIRST SLAVE CEB.
;
	F	SHB,L			;SHMEM SLAVE CEB, SHMEM CTL BLK ADR
	S	VASLAVE1,0,L		;SHMEM MASTER CEB, PTR TO 1ST SLAVE CEB
	F	INDX,W			;SHMEM SLAVE CEB, INDEX TO MASTER CEB
	F	,W			;SHMEM SLAVE CEB,
					;SHMEM MASTER CEB, FIELDS IN NEXT N
					; LONGWORDS ARE PROCESSOR REFCNTS
					; (ONE WORD FOR EACH PROCESSOR)
					; (OFFSET IS COMPUTED AT RUN-TIME)
	F	MASTER,L		;SHMEM SLAVE CEB, VA OF MASTER CEB
	L	SLAVLNG			;LENGTH OF SHMEM SLAVE COMMON EVENT BLK

	E

;+
; CIBDT - CI BUFFER DESCRIPTOR TABLE
;
; THIS TABLE IS SHARABLE AMONG ALL CI PORTS ON A SYSTEM.  BUFFER
; DESCRIPTORS (BD'S) ARE ALLOCATED FOR CI BLOCK TRANSFERS.
;-

	$STRUCT	CIBDT

	-F	WAITFL,L		;BD WAIT QUEUE FWD LINK
	-F	WAITBL,L		;BD WAIT QUEUE BACK LINK
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;CI STRUCTURE TYPE
	-F	SUBTYP,B		;CI STRUCT SUBTYPE FOR CI BDT
	-F	FREEBD,L		;ADDR OF FIRST FREE BD
	-F	MAXIDX,L		;MAX INDEX INTO BUFFER DESCRIPTORS
	-F	,L,1			;RESERVED LONGWORD
	L	BDLIST			;START OF BUFFER DESCRIPTORS
	C	LENGTH,24		;LENGTH OF NEGATIVE PORTION OF STRUCT

	E

;+
; BD - CI BUFFER DESCRIPTOR FORMAT
;-

	$STRUCT	CIBD

	F	FLAGS,W			;FLAGS WORD
		V <			;DEFINE FLAG BITS AND FIELDS:
		BOFF,9			; BYTE OFFSET OF START OF BUFFER
		,3			; 3 SPARE BITS
		AC,,,M			; ACCESS MODE CHECK ENABLED IF SET
		ACMOD,2			; ACCESS MODE REQ'D IN PTE'S
		V,,,M			; VALID BIT
		>
	F	KEY,W			;SEQUENCE NUMBER
	F	BLEN,L			;LENGTH OF MAPPED BUFFER
	F	SVAPTE,L		;SVA OF PTE MAPPING START OF BUFFER
	F	CDRP,L			;ADDR OF ASSOCIATED CDRP
	S	LINK,,L			; OR ADDR OF NEXT FREE DESCRIPTOR
	L	LENGTH			;LENGTH OF A BUFFER DESCRIPTOR

	E

;+
; CIBHAN - CI BUFFER HANDLE FORMAT
;-

	$STRUCT	CIBHAN

	F	BOFF,L			;BYTE OFFSET IN LOCAL BUFFER
	F	BNAME,L			;NAME OF LOCAL BUFFER
	F	RCONID,L		;REMOTE CONNECTION ID
	L	LENGTH			;LENGTH OF CI BUFFER HANDLE

	E

;+
; CIFQDT - CI FREE MESSAGE/DATAGRAM QUEUE DESCRIPTOR TABLE
;
; THIS DATA STRUCTURE AND THE QUEUES IT HAS HEADERS FOR MAY BE 
; SHARED AMONG ALL CI'S ON THE SYSTEM.
;-

	$STRUCT	CIFQDT

	F	DGSIZ,W			;DATAGRAM SIZE (INCL PORT HEADER)
	F	MSGSIZ,W		;MESSAGE SIZE (INCL PORT HEADER)
	F	,L,1			;RESERVED LONGWORD
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;CI STRUCTURE TYPE
	F	SUBTYP,B		;CI STRUCT SUBTYPE FOR CI FQDT
	F	DGCNT,W			;SUM OF INITL DG CREDITS FOR ALL CONNX
	F	MSGCNT,W		;SUM OF INITL MSG CREDITS FOR ALL CONNX
	F	DGFL,L			;DG FREE QUEUE FWD LINK
	F	DGBL,L			;DG FREE QUEUE BACK LINK
	F	MSGFL,L			;MSG FREE QUEUE FWD LINK
	F	MSGBL,L			;MSG FREE QUEUE BACK LINK
	L	LENGTH			;LENGTH OF CI FQDT

	E

;+
; CRB - CHANNEL REQUEST BLOCK
;
; THERE IS ONE CHANNEL REQUEST BLOCK FOR EACH SET OF DEVICES WHOSE
; ACCESS TO A SET OF CONTROLLERS MUST BE SYNCHRONIZED. EACH CHANNEL
; CONTROL BLOCK ALLOWS UP TO FOUR CONTROLLERS TO WHICH THE INDIVIDUAL
; DEVICES CAN BE ATTACHED.
;-
 
	$STRUCT	CRB

	F	WQFL,L			;WAIT QUEUE FORWARD LINK
	F	WQBL,L			;WAIT QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF CRB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR CRB
	F	,B			;UNUSED
	F	REFC,W			;REFERENCE COUNT OF UCB'S
	F	MASK,B			;CHANNEL ALLOCATION MASK
		V <			; MASK BIT DEFINITIONS
		BSY,,,M			; CHANNEL IS BUSY (1=YES)
	>				; END OF BIT DEFINITIONS
	F	,B			;SPARE UNUSED BYTE
	F	AUXSTRUC,L		;Auxiliary structure addr (CDDB for class driver)
	F	TIMELINK,L		;Thread of CRB's for periodic wakeup
	F	DUETIME,L		;Due time for periodic wakeup
	F	TOUTROUT,L		;Address of periodic wakeup routine
	F	LINK,L			;ADDRESS OF SECONDARY CRB
	F	INTD,L,9		;INTERRUPT TRANSFER VECTOR
	L	LENGTH			;LENGTH OF STANDARD CRB
	F	INTD2,L,9		;SECOND INTERRUPT VECTOR
	E

 
;+
; CRB INTERRUPT TRANSFER VECTOR STRUCTURE DEFINITIONS
;-
 
	$STRUCT	VEC
 
	F	DISPATCH,Q		;REGISTER SAVE AND DISPATCH INSTRUCTIONS
	F	IDB,L			;ADDRESS OF ASSOCIATED IDB
	F	INITIAL,L		;CONTROLLER INITIALIZATION ENTRY ADDRESS
	F	MAPREG,W		;STARTING MAP REGISTER ALLOCATED
		V <			; MAP REGISTER FIELD BIT DEFINITIONS
		MAPREG,15		; MAP REGISTER NUMBER
		MAPLOCK,,,M		; MAP REGISTER ALLOCATION PERMANENT
		>			;
	F	NUMREG,B		;NUMBER OF MAP REGISTERS ALLOCATED
	F	DATAPATH,B		;BUFFERED DATAPATH ALLOCATED
		V <			; DATAPATH FIELD BIT DEFINITIONS
		DATAPATH,5		; DATAPATH NUMBER
		LWAE,,,M		; LONGWORD ACCESS ENABLED
		,1			; SPARE BIT
		PATHLOCK,,,M		; DATAPATH PERMANENT
		>			;
	F	ADP,L			;ADDRESS OF ADP
	F	UNITINIT,L		;ADDRESS OF UNIT INITIALIZE
	F	START,L			;ADDRESS OF UNIT START
	F	UNITDISC,L		;ADDRESS OF UNIT DISCONNECT
	L	LENGTH			;LENGTH OF STANDARD DISPATCHER
	E

;+
; CXB - COMPLEX CHAINED BUFFER
;
; THESE OFFSETS ARE USED IN THE HEADER OF DISJOINT SEGMENTS
; WHICH ARE TO BE PRESENTED TO THE USER AS A UNIT.
;
;-

	$STRUCT	CXB
	;
	;
	;  The DECnet Datalink Functional Spec specifies that CXB$C_DLL is at
	;  least 32, CXB$C_HEADER is at least 56, CXB$C_TRAILER is at least 4,
	;  and CXB$C_OVERHEAD is 60.
	;
	;
	F	FL,L			;FORWARD QUEUE LINK
	F	BL,L			;BACKWARD QUEUE LINK
	S	UQUO,0,W		;PREALLOCATED UCB QUOATED TAKEN FOR I/O
	S	JQUO,2,W		;USER JIB BYTCNT QUOTA TAKEN FOR I/O
	F	SIZE,W			;BLOCK SIZE
	F	TYPE,B			;BLOCK TYPE
	F	CODE,B			;BUFFER CODE
	S	ASTCNT,0,B		;OUTSTANDING I/O COUNT
	F	LENGTH,W		;LENGTH OF DATA
	F	OFFSET,W		; OFFSET TO START OF NSP MESSAGE
	F	LINK,L			;LINK WORD FOR CHAINED DATA MESSAGE
	S	CHANNEL,0,W		; STORE CHANNEL NUMBER FOR AST
	F	IRP,L,,S		;IRP ADDRESS FOR TRANSMITS 
	S	SSB,0,L			;ADDR OF SSB FOR DECREMENTING TIPC
	L	LENGTH			;LENGTH OF A STANDARD CXB
	F	DLL,T,32		;SCRATCH AREA FOR DATALINK LAYER
	S	ENDACTION,0,L		;ADDR OF I/O COMPLETION ACTION ROUTINE
	C	DLL,32			;SIZE OF CXB$T_DLL
	;
	;
	;   The DECnet Datalink Functional Spec specifies that the message
	;   presented to the datalink layer (i.e., the message not including
	;   the datalink protocol envelope) must be quadword aligned.  Hence,
	;   CXB$C_HEADER must be a multiple of 8.
	;
	;
	L	HEADER			;CXB SIZE UP TO THIS POINT
	C	TRAILER,4		;SPACE AFTER CXB DATA FOR CRC CODE
	F	,L			;THIS REPRESENTS THE SPACE TAKEN FOR
					;THE CRC TRAILER
	L	OVERHEAD		;CXB$C_HEADER + CXB$C_TRAILER
	E

;+
; DDB - DEVICE DATA BLOCK
;
; THERE IS ONE DEVICE DATA BLOCK FOR EACH CONTROLLER IN A SYSTEM.
;+
 
	$STRUCT	DDB
 
	F	LINK,L			;ADDRESS OF NEXT DDB IN LIST (0=LAST)
	F	UCB,L			;ADDRESS OF FIRST UCB FOR THIS DDB
	F	SIZE,W			;SIZE OF DDB IN BYTES
	F	TYPE,B			;TYPE OF DATA STRUCTURE FOR DDB
	F	,B			;SPARE UNUSED BYTE
	F	DDT,L			;ADDRESS OF THE DRIVER DISPATCH TABLE
	F	ACPD,L			;NAME OF DEFAULT ACP FOR DEVICE UNITS
	    S	ACPCLASS,3,B		;CLASS CODE OF DEFAULT ACP
		K<,,1,1			;ACP CLASS CODE FOR DISKS
		PACK			;LARGE DISK PACKS
		CART			;DISK CARTRIDGES
		SLOW			;SLOW (CHEAP) DISKS (E.G., FLOPPY)
		TAPE			;BLOCK STRUCTURED TAPE (E.G., TU58)
		>
	F	NAME,T,1		;GENERIC PATHNAME OF DEVICE
	F	,B,15			;SPACE FOR NAME
	F	DRVNAME,T,1		;DRIVERNAME
	F	,B,15			;SPACE FOR DRIVER NAME
	L	LENGTH			;LENGTH OF STANDARD DDB
	E

;+
; DDT - DRIVER DISPATCH TABLE
;
; EACH DEVICE DRIVER HAS A DRIVER DISPATCH TABLE.
;-
 
	$STRUCT	DDT
 
	F	START,L			;ADDRESS OF DRIVER START I/O ROUTINE
	F	UNSOLINT,L		;ADDRESS OF UNSOLICITED INTERRUPT ROUTINE
	F	FDT,L			;ADDRESS OF FUNCTION DECISION TABLE
	F	CANCEL,L		;ADDRESS OF CANCEL I/O ENTRY POINT
	F	REGDUMP,L		;ADDRESS OF DEVICE REGISTER DUMP ROUTINE
	F	DIAGBUF,W		;SIZE OF DIAGNOSTIC BUFFER IN BYTES
	F	ERRORBUF,W		;SIZE OF ERROR LOG BUFFER IN BYTES
	F	UNITINIT,L		;UNIT INITIALIZATION ENTRY POINT
	F	ALTSTART,L		;ALTERNATE START I/O ENTRY POINT
 	F	MNTVER,L		;ADDRESS OF MOUNT VERIFICATION ROUTINE
	F	FDTSIZE,W		;SIZE OF FDT IN BYTES
	L	LENGTH			;LENGTH OF DDT

	E

;+
; DPT - DRIVER PROLOGUE TABLE
;
; EACH DEVICE DRIVER HAS A DRIVER PROLOGUE TABLE.
;-
 
	$STRUCT	DPT
 
	F	FLINK,L			;FORWARD LINK TO NEXT DPT
	F	BLINK,L			;BACKWARD LINK TO PREVIOUS DPT
	F	SIZE,W			;SIZE OF DRIVER
	F	TYPE,B			;STRUCTURE TYPE
	F	REFC,B			;COUNT OF DDB'S THAT REFERENCE DRIVER
	F	ADPTYPE,B		;ADAPTER TYPE CODE
	F	FLAGS,B			;DRIVER LOADER FLAGS
	V <M				;
		SUBCNTRL		;DEVICE IS A SUB-CONTROLLER
		SVP			;DEVICE REQUIRES A SYSTEM PAGE
		NOUNLOAD		;DRIVER IS NOT TO BE UNLOADED
		SCS			;SCS CODE MUST BE LOADER WITH DRIVER
		>
	F	UCBSIZE,W		;SIZE OF UCB
	F	INITTAB,W		;OFFSET TO INIT TABLE
	F	REINITTAB,W		;OFFSET TO RE-INIT TABLE
	F	UNLOAD,W		;OFFSET TO UNLOAD ACTION ROUTINE
	F	MAXUNITS,W		;MAXIMUM UNITS THAT CAN BE CONNECTED
	F	VERSION,W		;DRIVER PROLOGUE VERSION NUMBER
	C	VERSION,3		;CURRENT VERSION NUMBER
	F	DEFUNITS,W		;DEFAULT NUMBER OF UNITS
	F	DELIVER,W		;OFFSET TO DRIVER UNIT DELIVERY ROUTINE
	F	VECTOR,W		;OFFSET TO VECTOR TABLE (IN TTDRIVER)
	F	NAME,T,12		;DRIVER NAME (COUNTED STRING)
	F	LINKTIME,Q		;LINK DATE AND TIME FROM IMAGE HEADER
	F	ECOLEVEL,L		;ECO LEVEL FROM IMAGE HEADER
	L	LENGTH			;LENGTH OF PROLOGUE TABLE
 
	E


;+
; DATA STRUCTURE TYPE DEFINITIONS
;
; EACH DATA STRUCTURE THAT IS ALLOCATED FROM THE DYNAMIC MEMORY
; POOL SHOULD HAVE A VALID TYPE IN ITS 11TH BYTE.
;-
 
	$STRUCT	DYN

	C <,,1,1			;BASE AND OFFSET OF 1

	ADP				;UNIBUS ADAPTER CONTROL BLOCK
	ACB  				;AST CONTROL BLOCK
	AQB  				;ACP QUEUE BLOCK
	CEB  				;COMMON EVENT BLOCK
	CRB  				;CHANNEL REQUEST BLOCK
	DDB  				;DEVICE DESCRIPTOR BLOCK
	FCB  				;FILE CONTROL BLOCK
	FRK  				;FORK BLOCK
	IDB  				;INTERRUPT DISPATCH BLOCK
	IRP  				;I/O REQUEST PACKET
	LOG  				;LOGICAL NAME BLOCK
	PCB  				;PROCESS CONTROL BLOCK
	PQB  				;PROCESS QUOTA BLOCK
	RVT  				;RELATIVE VOLUME TABLE
	TQE  				;TIMER QUEUE ENTRY
	UCB  				;UNIT CONTROL BLOCK
	VCB  				;VOLUME CONTROL BLOCK
	WCB				;WINDOW CONTROL BLOCK
	BUFIO				;BUFFERED I/O BLOCK
	TYPAHD				;TERMINAL TYPEAHEAD BUFFER
	GSD				;GLOBAL SECTION DESCRIPTOR BLOCK
	MVL				;MAGNETIC TAPE VOLUME LIST
	NET				;NETWORK MESSAGE BLOCK
	KFI				;KNOWN FILE ENTRY
	MTL				;MOUNTED VOLUME LIST ENTRY
	BRDCST				;BROADCAST MESSAGE BLOCK
	CXB				;COMPLEX CHAINED BUFFER
	NDB				; NETWORK NODE DESCRIPTOR BLOCK
	SSB				; LOGICAL LINK SUBCHANNEL STATUS BLOCK
	DPT				; DRIVER PROLOGUE TABLE
	JPB				; JOB PARAMETER BLOCK
	PBH				; PERFORMANCE BUFFER HEADER
	PDB				; PERFORMANCE DATA BLOCK
	PIB				; PERFORMANCE INFORMATION BLOCK
	PFL				; PAGE FILE CONTROL BLOCK
	UNUSED				; UNUSED
	PTR				; POINTER CONTROL BLOCK
	KFH				; KNOWN FILE IMAGE HEADER
	RVX				; RELATIVE VOLUME TABLE EXTENSION
	EXTGSD				;EXTENDED GLOBAL SECTION DESCRIPTOR
	SHMGSD				;SHARED MEMORY GLOBAL SECTION DESCRIPTOR
	SHB				;SHARED MEMORY CONTROL BLOCK
	MBX				;MAILBOX CONTROL BLOCK
	IRPE				;I/O REQUEST PACKET EXTENSION
	SLAVCEB				;SLAVE COMMON EVENT BLOCK
	SHMCEB				;SHARED MEMORY MASTER COMMON EVENT BLOCK
	JIB				;JOB INFORMATION BLOCK
	TWP				; Terminal driver write packet
	RBM				; Realtime SPT bit map
	VCA				; Disk volume cache block
	BCB				;JOURNALING BUFFER CONTROL BLOCK
	CDB				;X25 LES CHANNEL DATA BLOCK
	LPD				;X25 LES PROCESS DESCRIPTOR
	JMT				;JOURNAL MERGE TABLE
	LKB				;LOCK BLOCK
	RSB				;RESOURCE BLOCK
	LKID				;LOCK ID TABLE
	RSHT				;RESOURCE HASH TABLE
	CDRP				;CLASS DRIVER REQUEST PACKET
	RUL				;RECOVERY UNIT LIST
	ERP				; ERRORLOG PACKET
	CIDG				;DATAGRAM BUFFER FOR CI PORT
	CIMSG				;MESSAGE BUFFER FOR CI PORT
	>
;
; THE FOLLOWING CODES ARE SUBTYPABLE, THAT IS EACH CODE REFERS TO A GENERIC
; FUNCTION AND WITHIN THAT FUNCTION THERE MAY BE MANY DIFFERENT SUB-TYPES
; OF BLOCKS.  THIS SCHEME WAS ADOPTED TO PRESERVE TYPES.  THE SUB-TYPE IS
; IN THE 12TH BYTE.
;
	C SUBTYPE,96			; START OF SUBTYPABLES
	C SCS,96			; SYSTEM COMMUNICATION SERVICES
	C <,,1,1
		SCS_CDL			; CONNECT DISPATCH LIST
		SCS_CDT			; CONNECT DISPATCH TABLE
		SCS_DIR			; DIRECTORY BLOCK
		SCS_PB			; PATH BLOCK
		SCS_PDT			; PORT DESCRIPTOR TABLE
		SCS_RDT			; REQUEST DESCRIPTOR TABLE
		SCS_SB			; SYSTEM BLOCK
	>
	C CI,97				; CI PORT SPECIFIC
	C <,,1,1
		CI_BDT			; BUFFER DESCRIPTOR TABLE
		CI_FQDT			; FREE QUE DESCRIPTOR TABLE
	>
	C LOADCODE,98			; LOADABLE CODE
	C <,,1,1
		LC_MP			; MULITPROCESSOR CODE
		LC_SCS			; SCS CODE
	>
	C INIT,99			; STRUCTURES SET UP BY INIT
	C <,,1,1
		PCBVEC			; PROCESS CONTROL BLOCK VECTOR
		PHVEC			; PROCESS HEADER VECTOR
		SWPMAP			; SWAPPER MAP
		MPWMAP			; MODIFIED PAGE WRITER MAP
		PRCMAP			; PROCESS BITMAP
		BOOTCB			; BOOT CONTROL BLOCK
		CONF			; CONFIGURATION ARRAYS
	>
	C CLASSDRV,100			; CLASS DRIVER MAJOR STRUCTURE TYPE CODE
	C <,,1,1
		CD_CDDB			;  CLASS DRIVER DATA BLOCK
		CD_BBRPG		;  BAD BLOCK REPLACEMENT PAGE
	>
;
; SPECIAL DYNAMIC MEMORY TYPES.  THESE ARE HANDLED SPECIALLY BY
; EXE$DALONONPAGED.
;
	C SPECIAL,128			; START OF SPECIAL TYPES
	C <,,128,1			; BASE OF 128 AND OFFSET OF 1

	SHRBUFIO			; SHARED MEMORY BUFFERED I/O
	>
	E


;
; ERROR MESSAGE BUFFER HEADER
;
;		******	CAUTION  ******
;
;	ALL OF THE EMBxxDEF STRUCTURES ASSUME THAT THE HEADER IS
;	EXACTLY ONE LONGWORD IN LENGTH.  IF THIS FIELD CHANGES,
;	IF EFFECTS ALL OF THE OTHER STRUCTURES.
;	ALL MESSAGES HAVE TYPE, TIME, SYSTEM ID, AND ERROR SEQUENCE IN THE
;	SAME RELATIVE LOCATIONS.
;
 
	$STRUCT	EMB,HDDEF
 
	-F	SIZE,W			;SIZE OF ERROR MESSAGE IN BYTES
	-F	BUFIND,B		;ALLOCATION BUFFER INDICATOR (0 OR 1)
	-F	VALID,B			;ERROR MESSAGE VALID INDICATOR
	K	LENGTH,4		;LENGTH OF FIXED PART OF MESSAGE HEADER
	F	HD_SID			;SYSTEM ID
	F	HD_ENTRY,W		;ERROR MESSAGE ENTRY TYPE
	S	DEVTYP,,B		;DEVICE TYPE
	S	DEVCLS,,B		;DEVICE CLASS
	F	HD_TIME,Q		;TIME OF MESSAGE ENTRY
	F	HD_ERRSEQ,W		;ERROR SEQUENCE FOR MESSAGE
	L	HD_LENGTH		;LENGTH OF PART COMMON TO ALL MESSAGES
	E
 
;
; BUGCHECK ERROR MESSAGE BUFFER FORMAT (SYSTEM AND USER)
;
 
	$STRUCT	EMB,BCDEF		;BUG CHECK ENTRY FORMAT
 
	F	BC_SID			;SYSTEM ID
	F	BC_ENTRY,W		;ENTRY TYPE
	F	BC_TIME,Q		;TIME IN 64 BITS
	F	BC_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	BC_KSP,L		;KERNEL STACK POINTER
	F	BC_ESP,L		;EXECUTIVE STACK POINTER
	F	BC_SSP,L		;SUPERVISOR STACK POINTER
	F	BC_USP,L		;USER STACK POINTER
	F	BC_ISP,L		;INTERRUPT STACK POINTER
	F	BC_R0,L			;REGISTER R0
	F	BC_R1,L			;REGISTER R1
	F	BC_R2,L			;REGISTER R2
	F	BC_R3,L			;REGISTER R3
	F	BC_R4,L			;REGISTER R4
	F	BC_R5,L			;REGISTER R5
	F	BC_R6,L			;REGISTER R6
	F	BC_R7,L			;REGISTER R7
	F	BC_R8,L			;REGISTER R8
	F	BC_R9,L			;REGISTER R9
	F	BC_R10,L		;REGISTER R10
	F	BC_R11,L		;REGISTER R11
	F	BC_AP,L			;ARGUMENT POINTER
	F	BC_FP,L			;FRAME POINTER
	F	BC_SP,L			;CURRENT STACK POINTER
	F	BC_PC,L			;PROGRAM COUNTER
	F	BC_PSL,L		;PROCESSOR STATUS
	F	BC_CODE,L		;BUGCHECK CODE
	F	BC_PID,L		;CURRENT PROCESS ID
	F	BC_LNAME,T,16		;CURRENT PROCESS NAME
	L	BC_LENGTH		;SIZE OF FIXED PART OF BUGCHECK MESSAGE
	E				;
 
;
; CRASH-RESTART ERROR MESSAGE BUFFER FORMAT
;
 
	$STRUCT	EMB,CRDEF		;CRASH RESTART RECORD FORMAT
 
	F	CR_SID			;SYSTEM ID
	F	CR_ENTRY,W		;ENTRY TYPE
	F	CR_TIME,Q		;TIME IN 64 BITS
	F	CR_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	CR_KSP,L		;KERNEL STACK POINTER
	F	CR_ESP,L		;EXECUTIVE STACK POINTER
	F	CR_SSP,L		;SUPERVISOR STACK POINTER
	F	CR_USP,L		;USER STACK POINTER
	F	CR_ISP,L		;INTERRUPT STACK POINTER
	F	CR_R0,L			;REGISTER R0
	F	CR_R1,L			;REGISTER R1
	F	CR_R2,L			;REGISTER R2
	F	CR_R3,L			;REGISTER R3
	F	CR_R4,L			;REGISTER R4
	F	CR_R5,L			;REGISTER R5
	F	CR_R6,L			;REGISTER R6
	F	CR_R7,L			;REGISTER R7
	F	CR_R8,L			;REGISTER R8
	F	CR_R9,L			;REGISTER R9
	F	CR_R10,L		;REGISTER R10
	F	CR_R11,L		;REGISTER R11
	F	CR_AP,L			;ARGUMENT POINTER
	F	CR_FP,L			;FRAME POINTER
	F	CR_SP,L			;CURRENT STACK POINTER
	F	CR_PC,L			;PROGRAM COUNTER
	F	CR_PSL,L		;PROCESSOR STATUS
	F	CR_P0BR,L		;PROGRAM REGION BASE REGISTER
	F	CR_P0LR,L		;PROGRAM REGION LIMIT REGISTER
	F	CR_P1BR,L		;CONTROL REGION BASE REGISTER
	F	CR_P1LR,L		;CONTROL REGION LIMIT REGISTER
	F	CR_SBR,L		;SYSTEM BASE REGISTER
	F	CR_SLR,L		;SYSTEM LIMIT REGISTER
	F	CR_PCBB,L		;PROCESS CONTROL BLOCK BASE REGISTER
	F	CR_SCBB,L		;SYSTEM CONTROL BLOCK BASE REGISTER
	F	CR_ASTLVL,L		;AST DELIVERY LEVEL REGISTER
	F	CR_SISR,L		;SOFTWARE INTERRUPT SUMMARY REGISTER
	F	CR_ICCS,L		;INTERVAL TIMER CONTROL STATUS REGISTER
	F	CR_ICR,L		;INTERVAL COUNT REGISTER
	F	CR_TODR,L		;TIME OF DAY REGISTER
	F	CR_ACCS,L		;ACCELERATOR CONTROL REGISTER
	M	1			;MARK OFFSET=START
	F	CR_CPUREG,L		;START OF CPU-SPECIFIC IPR'S
	P	1			; 11/780-SPECIFIC IPR'S
	F	CR_SBIFS,L		; SBI FAULT STATUS
	F	CR_SBISC,L		; SBI COMPARATOR REGISTER
	F	CR_SBIMT,L		; SBI MAINT REGISTER
	F	CR_SBIER,L		; SBI ERROR REGISTER
	F	CR_SBITA,L		; SBI TIMEOUT ADDR REGISTER
	F	CR_SBIS,L,16		; SBI SILO
	M	2			;MARK OFFSET=END
	P	1			; 11/750-SPECIFIC IPR'S:
	F	CR_TBDR,L		; TB DISABLE REGISTER
	F	CR_CADR,L		; CACHE DISABLE REGISTER
	F	CR_MCESR,L		; MACHINE CHECK ERROR SUMMARY
	F	CR_CAER,L		; CACHE ERROR REGISTER
	F	CR_CMIERR,L		; CMI ERROR SUMMARY REGISTER
					; 16 UNUSED LONGWDS IN EMB
	P	2			;END OF CPU-SPECIFIC IPR'S
	F	CR_CODE,L		;BUGCHECK/CRASH CODE
	F	CR_PID,L		;CURRENT PROCESS ID
	F	CR_LNAME,T,16		;CURRENT PROCESS NAME
	L	CR_LENGTH		;SIZE OF FIXED PART OF BUGCHECK MESSAGE
	E
 
;
; DEVICE ERROR MESSAGE BUFFER FORMAT (ERROR AND TIMEOUT)
;
 
	$STRUCT	EMB,DVDEF		;DEVICE ERROR RECORD FORMAT
 
	F	DV_SID			;SYSTEM ID
	F	DV_ENTRY,W		;ENTRY TYPE (1=ERROR, 96=TIMEOUT)
	F	DV_TIME,Q		;TIME OF ERROR
	F	DV_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	DV_ERTCNT,B		;REMAINING NUMBER OF ERROR RETRIES
	F	DV_ERTMAX,B		;MAXIMUM NUMBER OF ERROR RETRIES
	F	DV_IOSB,Q		;FINAL I/O STATUS
	F	DV_STS,W		;FINAL DEVICE STATUS
	F	DV_CLASS,B		;DEVICE CLASS
	F	DV_TYPE,B		;DEVICE TYPE
	F	DV_RQPID,L		;REQUESTER PROCESS ID
	F	DV_BOFF,W		;BYTE OFFSET IN PAGE
	F	DV_BCNT,W		;TRANSFER BYTE COUNT
	F	DV_MEDIA,L		;STARTING MEDIA ADDRESS
	F	DV_UNIT,W		;PHYSICAL UNIT NUMBER
	F	DV_ERRCNT,W		;UNIT ERROR COUNT
	F	DV_OPCNT,L		;UNIT OPERATION COUNT
	F	DV_OWNUIC,L		;VOLUME OWNER UIC
	F	DV_CHAR,L		;DEVICE CHARACTERISTICS
	F	DV_SLAVE,B		;SLAVE CONTROLLER NUMBER
	F	,B,1			;SPARE UNUSED BYTES
	F	DV_FUNC,W		;I/O FUNCTION VALUE
	F	DV_NAME,T,16		;DEVICE NAME
	F	DV_REGSAV,L		;START OF REGISTER SAVE AREA
	E
 
;
; TIME STAMP MSG FORMAT
;
 
	$STRUCT	EMB,TSDEF		;TIME STAMP RECORD FORMAT
 
	F	TS_SID			;SYSTEM ID
	F	TS_ENTRY,W 		;ENTRY TYPE 
	F	TS_TIME,Q 		;TIME IN 64 BITS 
	F	TS_ERRSEQ,W		;ERROR SEQ # 
	L	TS_LENGTH		;LENGTH OF TIME STAMP MSG
	E
 
;
; SYSTEM SERVICE MESSAGE
;
;	NOTE:	SYSTEM SERVICE MESSAGE COVERS:
;
;		1) THE MESSAGES FROM THE SERVICE
;		2) OPERATOR MESSAGES
;		3) NETWORK MESSAGES
;
;	ONLY THE TYPE FIELD IS DIFERENT
;
 
	$STRUCT	EMB,SSDEF		;SYSTEM SERVICE RECORD FORMAT
 
	F	SS_SID			;SYSTEM ID
	F	SS_ENTRY,W		;ENTRY TYPE
	F	SS_TIME,Q		;TIME IN 64 BITS
	F	SS_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SS_MSGSZ,W		;MESSAGE TEXT SIZE IN BYTES
	L	SS_LENGTH		;LENGTH OF CONSTANT PART
	F	SS_MSGTXT,B		;FIRST BYTE OF MESSAGE TEXT
	E

;
; VOLUME MOUNT/DISMOUNT MESSAGE TYPE
;
 
	$STRUCT	EMB,VMDEF		;VOLUME MOUNT RECORD FORMAT
 
	F	VM_SID			;SYSTEM ID
	F	VM_ENTRY,W		;ENTRY TYPE = EMB$K_VM OR EMB$K_VD
	F	VM_TIME,Q		;TIME IN 64 BIT FORMAT
	F	VM_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	VM_OWNUIC,L		;OWNER UIC OF THE VOLUME
	F	VM_ERRCNT,L		;UNIT ERROR COUNT FROM UCB
	F	VM_OPRCNT,L		;UNIT OPERATION COUNT FROM UCB
	F	VM_UNIT,W		;DEVICE UNIT NUMBER
	F	VM_NAMLNG,B		;LENGTH OF DEVICE GENERIC NAME
	F	VM_NAMTXT,T,15		;DEVICE GENERIC NAME
	F	VM_VOLNUM,W		;VOLUME NUMBER WITHIN SET
	F	VM_NUMSET,W		;NUMBER OF VOLUMES WITHIN SET
	F	VM_LABEL,T,12		;VOLUME LABEL
	L	VM_LENGTH		;LENGTH OF BUFFER
	E
;
; SYSTEM STARTUP MESSAGE
;
	$STRUCT	EMB,SUDEF		;SYSTEM UP MESSAGE BUFFER
 
	F	SU_SID			;SYSTEM ID
	F	SU_ENTRY,W		;ENTRY TYPE (IE: BOOT OR POWER RECOVERY)
	F	SU_TIME,Q		;CONTENTS OF SYSTEM TIME QUADWORD
	F	SU_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SU_DAYTIM,L		;CONTENTS OF TIME OF DAY CLOCK
	L	SU_LENGTH		;LENGTH OF MESSAGE
	E


;
; MACHINE CHECK LOG BUFFER FORMAT
;

	$STRUCT	EMB,MCDEF
 
	F	MC_SID			;SYSTEM ID
	F	MC_ENTRY,W		;ENTRY TYPE
	F	MC_TIME,Q		;TIME IN 64 BITS
	F	MC_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	MC_SUMCOD,B		;SUMMARY CODE
	F	MC_TOPF,B		;TIME OUT PENDING FLAG
	F	MC_OPCODE,B		;OPCODE OF INSTRUCTION CAUSING CHECK
	F	MC_CACHEF,B		;CACHE DISABLE FLAG, 1=GROUP 0, 2=G 1
	F	MC_CES,L		;CPU ERROR STATUS
	F	MC_UPC,L		;MICRO-PC AT FAULT TIME
	F	MC_VA,L			;VIRTUAL ADDRESS AT FAULT TIME
	F	MC_D,L			;CPU D REGISTER AT FAULT TIME
	F	MC_TBER0,L		;TRANSLATION BUFFER STATUS REG 0
	F	MC_TBER1,L		;TRANSLATION BUFFER STATUS REG 1
	F	MC_TIMOAD,L		;PHYSICAL ADDRESS CAUSING SBI TIMEOUT
	F	MC_PARITY,L		;CACHE STATUS REGISTER
	F	MC_SBIERR,L		;SBI ERROR REGISTER
	F	MC_PC,L			;PC OF INSTRUCTION CAUSING CHECK
	F	MC_PSL,L		;PSL OF MACHINE AT FAULT TIME
	L	MC_LENGTH		;LENGTH OF MACHINE CHECK FRAME
	E

;
; SOFT ECC DETECTED ERRORS AND SBI ALERT BUFFER FORMAT
;

	$STRUCT	EMB,SEDEF		;
 
	F	SE_SID			;SYSTEM ID
	F	SE_ENTRY,W		;ENTRY TYPE
	F	SE_TIME,Q		;TIME IN 64 BITS
	F	SE_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SE_NUMCON,L		;NUMBER OF MEMORY CONTROLLERS
	L	SE_LENGTH		;LENGTH OF FIXED PART OF MSG
	F	SE_TR,L			;ADAPTOR TR NUMBER
	F	SE_A,L			;MEMORY REGISTER A
	F	SE_B,L			;MEMORY REGISTER B
	F	SE_C,L			;MEMORY REGISTER C
	F	SE_PC,L			;PC OF INSTRUCTION AT FAULT TIME
	F	SE_PSL,L		;PSL OF MACHINE AT FAULT TIME
	E

;
; SBI FAULT BUFFER FORMAT AND ASYNCHRONOUS WRITE ERROR FORMAT
;

	$STRUCT	EMB,SBDEF		;SBI FAULT RECORD FORMAT
 
	F	SB_SID			;SYSTEM ID
	F	SB_ENTRY,W		;ENTRY TYPE
	F	SB_TIME,Q		;TIME IN 64 BITS
	F	SB_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SB_FAULT,L		;SBI FAULT/STATUS REGISTER
	F	SB_SILCMP,L		;SBI SILO COMPARATOR
	F	SB_MAINT,L		;SBI MAINTENANCE
	F	SB_ERROR,L		;SBI ERROR REG
	F	SB_TIMOUT,L		;SBI TIMEOUT REG
	F	SB_SILO,L,16		;SBI SILO REG
	F	SB_SBIRGS,L,16		;REGISTER A'S ON BUS (OR 0)
	F	SB_PC,L			;PC OF INSTRUCTION AT FAULT TIME
	F	SB_PSL,L		;PSL OF MACHINE AT FAULT TIME
	L	SB_LENGTH		;LENGTH OF SBI ERROR BUFFER
	E				;

;
; UNDEFINED ADAPTER INTERRUPT BUFFER FORMAT
;
	$STRUCT	EMB,UIDEF

	F	UI_SID			;SYSTEM ID
	F	UI_ENTRY,W		;ENTRY TYPE
	F	UI_TIME,Q		;TIME IN 64 BITS
	F	UI_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	UI_TR,L			;ADAPTER TR NUMBER
	F	UI_CSR,L		;ADAPTER CONGIGURATION STATUS REGISTER
	L	UI_LENGTH		;LENGTH OF MESSAGE
	E				;


;
; ERROR BUFFER FORMAT FOR UNIBUS ERROR SUMMARY REGISTER
;	***** USED ONLY BY 11/730 ****
;
	$STRUCT	EMB,UEDEF

	F	UE_SID			;SYSTEM ID
	F	UE_ENTRY,W		;ENTRY TYPE
	F	UE_TIME,Q		;TIME IN 64 BITS
	F	UE_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	UE_UBERR,L		;UNIBUS ERROR REGISTER
	L	UE_LENGTH		;LENGTH OF MESSAGE
	E


;
; ERROR BUFFER FORMAT FOR SAVING SOFTWARE PARAMETERS FOR CLASS DRIVER THAT
;	CORRESPOND TO A LOGGED MESSAGE (SEE EMBLMDEF BELOW) ORIGINATING
;	IN AN INTELLIGENT MASS STORAGE CONTROLLER.
;

	$STRUCT	EMB,SPDEF

	F	SP_SID			; System ID
	F	SP_ENTRY,W		; Entry type (of this errorlog buffer)
	F	SP_TIME,Q		; Time this entry created
	F	SP_ERRSEQ,W		; Error Sequence Number
	F	SP_CLASS,B		; Device Class
	F	SP_TYPE,B		; Device Type
	F	SP_BOFF,W		; Byte OFFset of data transfer
	F	SP_BCNT			; Byte Count of data transfer
	F	SP_MEDIA		; Media address (LBN) of data transfer
	F	SP_RQPID		; Requesting PID
	F	SP_IOSB,Q		; Final I/O status
	F	SP_FUNC,W		; I/O function code
	F	SP_UNIT,W		; Unit number of drive
	F	SP_OPCNT		; Cummulative operation count this unit
	F	SP_ERRCNT,W		; Cummulative error count for this unit
	F	SP_UCBSTS,W		; Copy of UCB$W_STS field
	F	SP_OWNUIC		; Unit's owner's UIC
	F	SP_CHAR			; Device Characteristics
	F	SP_CMDREF		; Command Reference number (RSPID)
	F	SP_DEVNAM,T,16		; Device name
	L	SP_LENGTH

	E

;
; LOGGED MESSAGE (DEVICE DEPENDENT CONTENTS).  DRIVER LOGS MESSAGE
;	WHICH MAY COME DIRECT FROM INTELLIGENT MASS STORAGE CONTROLLER.
;

	$STRUCT	EMB,LMDEF

	F	LM_SID			; System ID
	F	LM_ENTRY,W		; Entry type (i.e. Logged Message)
	F	LM_TIME,Q		; Time this entry created
	F	LM_ERRSEQ,W		; Error sequence number
	F	LM_CLASS,B		; Device Class
	F	LM_TYPE,B		; Device Type
	F	LM_UNIT,W		; Device unit number
	F	LM_DEVNAM,T,16		; Device name
	F	LM_MSGTYP,W		; Type of logged message
	L	LM_LENGTH

	E

;
; LOGGED MESSAGE MESSAGE TYPES
;

	$STRUCT	EMB,LTDEF

	C	DM,01			; Disk MSCP message
	K	DM,01			; Disk MSCP message
	C	TM,02			; Tape MSCP message
	K	TM,02			; Tape MSCP message
	C	PM,03			; Port (CI) message
	K	PM,03			; Port (CI) message
	C	UM,04			; Port (UDA) message
	K	UM,04			; Port (UDA) message
	C	AVATN,05		; Available Attention Message
	K	AVATN,05		; Available Attention Message
	C	DUPUN,06		; Duplicate Unit # Attention Message
	K	DUPUN,06		; Duplicate Unit # Attention Message
	C	IVCMD,07		; Invalid Command Log message.
	K	IVCMD,07		; Invalid Command Log message.
	C	ACPTH,08		; Access Path Attention Message
	K	ACPTH,08		; Access Path Attention Message

	E
;
; ERROR MESSAGE ENTRY TYPE DEFINITIONS
;
	$STRUCT	EMB,ETDEF		;ENTRY TYPE DEFINITIONS
 
	C	DE,01			;DEVICE ERROR 
	K	DE,01			;DEVICE ERROR 
	C	MC,02			;MACHINE CHECK
	K	MC,02			;MACHINE CHECK
	C	BE,04			;BUS ERROR 
	K	BE,04			;BUS ERROR 
	C	SA,05			;SBI ALERT
	K	SA,05			;SBI ALERT
	C	SE,06			;SOFT ECC ERROR
	K	SE,06			;SOFT ECC ERROR
	C	AW,07			;ASYNCHRONOUS WRITE ERROR
	K	AW,07			;ASYNCHRONOUS WRITE ERROR
	C	HE,08			;HARD ECC ERROR
	K	HE,08			;HARD ECC ERROR
	C	UBA,09			; 11/780 Unibus Adapter error
	K	UBA,09			; 11/780 Unibus Adapter error
	C	SI,10			; 11/750 Fault through SBI vector
	K	SI,10			; 11/750 Fault through SBI vector
	C	UE,11			; 11/730 Unibus Error
	K	UE,11			; 11/730 Unibus Error
	C	MBA,12			; 11/780 Massbus Adapter Error
	K	MBA,12			; 11/780 Massbus Adapter Error
	C	CS,32			;COLD START (IE: SYSTEM BOOT)
	K	CS,32			;COLD START (IE: SYSTEM BOOT)
	K	NF,35			;NEW FILE CREATED
	C	NF,35			;NEW FILE CREATED
	C	WS,36			;WARM START (IE: SYSTEM POWER RECOVERY)
	K	WS,36			;WARM START (IE: SYSTEM POWER RECOVERY)
	C	CR,37			;CRASH RE-START 
	K	CR,37			;CRASH RE-START 
	C	TS,38			;TIME STAMP ENTRY 
	K	TS,38			;TIME STAMP ENTRY 
	C	SS,39			;SYSTEM SERVICE MESSAGE
	K	SS,39			;SYSTEM SERVICE MESSAGE
	C	SBC,40			;SYSTEM BUGCHECK
	K	SBC,40			;SYSTEM BUGCHECK
	C	OM,41			;OPERATOR MESSAGE
	K	OM,41			;OPERATOR MESSAGE
	C	NM,42			;NETWORK MESSAGE
	K	NM,42			;NETWORK MESSAGE
	C	VM,64			;VOLUME MOUNT 
	K	VM,64			;VOLUME MOUNT 
	C	VD,65			;VOLUME DISMOUNT 
	K	VD,65			;VOLUME DISMOUNT 
	C	DT,96			;DEVICE TIMEOUT 
	K	DT,96			;DEVICE TIMEOUT 
	C	UI,97			;UNDEFINED INTERRUPT 
	K	UI,97			;UNDEFINED INTERRUPT 
	C	DA,98			; Asynchronous Device Attention
	K	DA,98			; Asynchronous Device Attention
	C	SP,99			; Software Parameters
	K	SP,99			; Software Parameters
	C	LM,100			; Logged Message
	K	LM,100			; Logged Message
	C	UBC,112			;USER BUGCHECK
	K	UBC,112			;USER BUGCHECK

	E

;+
; EOF1 ANSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST LABEL IN FILE TRAILER LABEL SET.  IT IS EQUIVALENT TO
; HDR1 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO1		;EOF1 LABEL FORMAT

	F	EO1LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF1'
	F	,T,50		;SAME AS HDR1
	F	BLOCKCNT,T,6	;BLOCK COUNT
	E


;+
; EOF2 ANSI MAGNETIC TAPE LABEL
; THIS IS THE SECOND LABEL IN THE FILE TRAILER LABEL SET.  IT IS EQUIVALENT
; TO HDR2 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO2		;EOF2 LABEL FORMAT
	
	F	EO2LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF2'
	E


;+
; EOF3 ANSI MAGNETIC TAPE LABEL
; THIS IS THE THIRD LABEL IN THE FILE TRAILER LABEL SET.  IT IS EQUIVALENT
; TO HDR3 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO3		;EOF3 LABEL FORMAT
	
	F	EO3LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF3'
	E

;
; ERROR LOG ALLOCATION BUFFER HEADER
;
 
	$STRUCT	ERL
 
	F	BUSY,B			;NUMBER OF BUSY MESSAGES IN BUFFER
	F	MSGCNT,B		;NUMBER OF COMPLETED MESSAGES IN BUFFER
	F	BUFIND,B		;BUFFER INDICATOR OF RESPECTIVE BUFFER
	F	FLAGS,B			;BUFFER CONTROL FLAGS
	F	NEXT,L			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
	F	END,L			;ADDRESS OF END OF BUFFER + 1
	L	LENGTH			;LENGTH OF ALLOCATION BUFFER HEADER
 
	V	<			;BUFFER FLAGS
		LOCK,,,M		;BUFFER ALLOCATION INTERLOCK
		TIMER,,,M		;TIMER ACTIVE
		>			;
 
	E
;
;	Version	'V02-016'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from F to L.  That is, all control blocks from FAA to LZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V02-016	BLS0150		Benn Schreiber		15-Feb-1982
;		Clock image file minor ident
;
;	V02-015	LJK0120		Lawrence J. Kenah	11-Feb-1982
;		Add SETVECTOR flag to $IFDDEF to tell fixup code that
;		there are privileged vectors to be set.
;
;	V02-014	RLRUBARS	Robert L. Rappaport	25-Jan-1982
;		Added space in IRP for CDRP$L_UBARSRCE.
;
;	V02-013 NKP2009		N. Kronenberg		29-Dec-1981
;		Add IPL$_SCS, the SCS synchronization IPL.
;
;	V02-012	DJD0001		Darrell Duffy		29-Dec-1981
;		Make the irp even longer to contain all the CDRP
;
;	V02-011	RLRIRPL		Robert L. Rappaport	15-Dec-1981
;		Make standard IRP length long enough to include
;		space for Class Driver CDRP fields.
;
;	V02-010	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add terminal type flags to JIB.
;
;	V02-009	PHL0026		Peter H. Lipman		30-Nov-1981
;		Add PERMCTX cell to $IAFDEF
;
;	V02-008	PRD0003		Paul R. DeStefano	27-Oct-1981
;		Change notation of 7VV support.
;
;	V02-007	BLS0093		Benn Schreiber		30-Oct-1981
;		Add FIXUPVEC bit to ISD definition
;
;	V02-006	SRB0031		Steve Beckhardt		20-Aug-1981
;		Made several changes in the LKB definition.
;
;	V02-005	HRJ0027		Herb Jacobs		14-Aug-1981
;		Expand JIB to include login hours/flags and account name.
;
;	V02-004	BLS0064		Benn Schreiber		31-Jul-1981
;		Increment image header ident
;
;	V02-003	SRB0030		Steve Beckhardt		30_Jul-1981
;		Switched the order of two fields in $LKBDEF
;
;	V02-002	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Change all "7ZZ"s to "730"s.
;
;**

;+
; FCB - FILE CONTROL BLOCK
;
; THERE IS ONE FILE CONTROL BLOCK FOR EACH UNIQUELY ACCESSED FILE ON A
; VOLUME. THE FILE CONTROL BLOCK PROVIDES THE VEHICLE WHEREBY SHARED
; ACCESS TO A FILE MAY BE CONTROLLED.
;-
 
	$STRUCT	FCB
	F FCBFL			; FCB LIST FORWARD LINK
	F FCBBL			; FCB LIST BACKWARD LINK
	F SIZE,W		; SIZE OF FCB IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF FCB
	F ,B			; SPARE UNUSED BYTE
	F EXFCB			; ADDRESS OF EXTENSION FCB
	F WLFL			; WINDOW LISTHEAD FORWARD LINK
	F WLBL			; WINDOW LISTHEAD BACKWARD LINK
	F ACNT,W		; FILE ACCESS COUNT
	F LCNT,W		; FILE LOCK COUNT
	F WCNT,W		; FILE WRITER COUNT
	F STATUS,W		; FILE STATUS
	V<
		DIR		; FCB IS A DIRECTORY LRU ENTRY
		MARKDEL		; FILE IS MARKED FOR DELETE
		BADBLK		; BAD BLOCK ENCOUNTERED IN FILE
		EXCL		; FILE IS EXCLUSIVELY ACCESSED
		SPOOL		; FILE IS AN INTERMEDIATE SPOOL FILE
		RMSLOCK		; FILE IS OPEN WITH RMS RECORD LOCKING
	>
	F FID,W,3		; FILE IDENTIFICATION
	    S FID_NUM,,W	; FILE NUMBER
	    S FID_SEQ,,W	; FILE SEQUENCE NUMBER
	    S FID_RVN,,W	; RELATIVE VOLUME NUMBER
	    S FID_RVN,4,B	; SHORT FORM RVN
	    S FID_NMX,,B	; EXTENDED FILE NUMBER
	F SEGN,W		; FILE SEGMENT NUMBER
	F STVBN			; STARTING VIRTUAL BLOCK NUMBER
	F STLBN			; STARTING LOGICAL BLOCK NUMBER
	F HDLBN			; LBN OF FILE HEADER
	F FILESIZE		; FILE SIZE IN BLOCKS
	F FILEOWNER		; FILE OWNER UIC
	    S UICMEMBER,,W	; MEMBER NUMBER
	    S UICGROUP,,W	; GROUP NUMBER
	F FILEPROT,W		; FILE PROTECTION MASK
	F VERSIONS,W		; MAXIMUM NUMBER OF VERSIONS IN DIRECTORY
	F EFBLK,L		; END OF FILE VBN
	F DIRSEQ,W		; DIRECTORY USE SEQUENCE NUMBER
	F TCNT,W		; COUNT OF TRUNCATE LOCKS
	L LENGTH		; LENGTH OF STANDARD FCB
	F DIRIDX,B,24		; DIRECTORY BLOCK INDEX AREA
	E

;+
; FKB - FORK BLOCK
;
; A FORK BLOCK DESCRIBES THE CONTEXT OF A FORK PROCESS. EACH UNIT CONTROL
; BLOCK CONTAINS A FORK BLOCK AS ITS FIRST SIX LONGWORDS.
;-
 
	$STRUCT	FKB
 
	F	FQFL,L			;FORK QUEUE FORWARD LINK
	F	FQBL,L			;FORK QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF FKB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE OF FKB
	F	FIPL,B			;FORK INTERRUPT PRIORITY LEVEL
	F	FPC,L			;FORK PC
	F	FR3,L			;FORK R3
	F	FR4,L			;FORK R4
	L	LENGTH			;STANDARD LENGTH OF FKB

	E


;+
; GLOBAL SECTION DESCRIPTOR BLOCK
;-
	$STRUCT	GSD

	F	GSDFL,L			;POINTER TO NEXT GSD
	V<				;SHARED MEMORY FLAGS IN GSD$L_GSDFL
		VALID,,,M		;SH MEM GSD FLAG, SET IF VALID ENTRY
		LOCKED,,,M		;SH MEM GSD FLAG, SET IF ENTRY LOCKED
		DELPEND,,,M		;SH MEM GSD FLAG, GS MARKED FOR DELETE
		INITFAIL,,,M		;SH MEM GSD FLAG, SET WHEN GS INIT FAILS
		DUPGSD,,,M		;SH MEM GSD FLAG, DUPLICATE GSD FOUND
		>
	F	GSDBL,L			;POINTER TO PREVIOUS GSD
	F	SIZE,W			;SIZE OF GSD IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR GSD
	F	,B			;SPARE
	F	PCBUIC,L		;UIC OF CREATOR OF SECTION, FROM HIS PCB
	S	PCBGRP,2,W		;GROUP OF CREATOR OF SECTION, FROM PCB
	F	FILUIC,L		;OWNER OF FILE, UIC FROM FCB
	F	PROT,W			;PROTECTION MASK
	F	GSTX,W			;GLOBAL SECTION TABLE INDEX
	F	IDENT,L			;IDENTIFICATION OF GLOBAL SECTION
	F	GSDNAM,T,16		;GLOBAL SECTION TEXT NAME
	F	FLAGS,W			;SECTION FLAGS
	F	,W			;SPARE WORD
	L	LENGTH			;LENGTH OF LOCAL MEMORY GSD
	M	1

;
; THE FOLLOWING FIELDS ARE ONLY FOUND IN EXTENDED GSD'S.  THESE ARE USED
; WHENEVER A GSD IS NEEDED WITHOUT A SECTION TABLE ENTRY, I.E., FOR SHARED
; MEMORY AND FOR PAGES MAPPED BY PFN.
;
	F	BASEPFN,L		;FIRST RELATIVE BASE PFN
	F	PAGES,L			;COUNT OF PAGES AT FIRST BASE PFN
	F	REFCNT,L		;FIRST PROCESSOR PTE REF COUNT
	L	EXTGSDLNG		;MINIMUM EXTENDED GSD LENGTH

;
; THE FOLLOWING FIELDS ARE CONTAINED ONLY IN SHARED MEMORY GSD'S.  THE LENGTH,
; GSD$C_SHMGSDLNG, IS ONLY THE CONSTANT SIZE OF THE GSD.  IN ADDITION, THERE IS
; ONE LONGWORD FOR EACH PROCESSOR AND TWO LONGWORDS FOR EACH BASE PFN-SIZE PAIR.
;
	P	1
	F	LOCK,B			;INTERPROCESSOR LOCK FOR GSD
	F	PROCCNT,B		;NUMBER OF PROCESSOR REF. COUNTS IN GSD
	F	CREATPORT,B		;PORT # FOR CREATOR PROCESSOR
	F	DELETPORT,B		;PORT # FOR DELETOR PROCESSOR
	C	PFNBASMAX,4		;MAXIMUM # OF PFN BASES ALLOWED
	F	BASPFN1,L		;FIRST BASE PFN FOR SECTION PAGES
	F	BASCNT1,L		;CNT OF SECTION PAGES AT FIRST BASE PFN
					;FIRST PFN/PAGE COUNT PAIR
	F	,Q			;   NOTE:  THE NUMBER OF QUADWORDS
	F	,Q			;   RESERVED FOR PFN/PAGE COUNTS PAIRS
	F	,Q			;   MUST BE EQUAL TO GSD$C_PFNBASMAX-1.
	L	SHMGSDLNG		;LENGTH OF CONSTANT PART OF SHM GSD
	F	PTECNT1,L		;PTE COUNT FOR FIRST PROCESSOR

	E

;+
; HDR1 ANDSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST LABEL IN THE FILE LABEL HEADER SET.  IF IDENTIFIES THE FILE.
;-
	$STRUCT	HD1		;HDR1 LABEL FORMAT

	F	HD1LID,L	;LABEL IDENTIFIER AND NUMBER 'HDR1'
	F	FILEID,T,17	;FILE IDENTIFIER
	F	FILESETID,T,6	;FILE SET IDENTIFIER
	F	FILESECNO,T,4	;FILE SECTION NUMBER
	F	FILESEQNO,T,4	;FILE SEQUENCE NUMBER
	F	GENNO,T,4	;FILE GENERATION NUMBER
	F	GENVER,T,2	;FILE GENERATION VERSION NUMBER
	F	CREATEDT,T,6	;CREATION DATE ( YYDDD)
	F	EXPIREDT,T,6	;EXPIRATION DATE
	F	FILACCESS,B	;FILE ACCESS
	F	BLOCKCNT,T,6	;BLOCK COUNT
	F	SYSCODE,T,13	;SYSTEM CODE
	F	,T,7,		;SPACES
	E



;+
; HDR2 ANSI MAGNETIC TAPE LABEL
; THIS IS THE SECOND LABEL IN FILE LABEL HEADER SET.
; THE FILE ATTRIBUTES HAVE BEEN REMOVED FROM HDR2, AND PLACED IN HDR3.
; THE FIELDS REMAIN IN THE DEFINITION TO SUPPORT OLD TAPES.
;-
	$STRUCT	HD2		;HDR2 LABEL FORMAT

	F	HD2LID,L	;LABEL IDENTIFIER AND NUMBER 'HDR2'
	F	RECFORMAT,B	;RECORD FORMAT
	F	BLOCKLEN,T,5	;BLOCK LENGTH
	F 	RECLEN,T,5	;RECORD LENGTH
	F	RECATR1,T,20	;FIRST 20 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,1		;SPACES
	F	FORMCNTRL,B	;FORMS CONTROL
	F	RECATR2,T,12	;LAST 12 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,1		;SPACES
	F	BUFOFF,T,2	;BUFFER OFFSET
	F	,T,20		;SPACES
	E


;+
; HDR3 ANSI MAGNETIC TAPE LABEL
; THIS IS THE THIRD LABEL IN FILE LABEL HEADER SET.
; IT IDENTIFIES THE FILE ATTRIBUTES.
;-

	$STRUCT HD3		;HDR3 LABEL FORMAT

	F	HD3LID,L	;LABEL IDENTIFIES AND NUMBER 'HDR3'
	F	RECATR,T,64	;64 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,12		;SPACES
	E

;+
; IAF - IMAGE ACTIVATOR FIXUP SECTION
;
; THE IMAGE ACTIVATOR FIXUP SECTION IS AN IMAGE SECTION THAT IS CREATED
; BY THE LINKER AND USED BY THE IMAGE ACTIVATOR TO MODIFY THE IMAGE AS
; IT IS ACTIVATED.  THIS IS DONE TO MAINTAIN THE POSITION INDEPENDENCE
; OF EXTERNAL REFERENCES.
;-

	$STRUCT	IAF

	F	IAFLINK, L		; Link for image activator use
	F	FIXUPLNK, L		; Link for shareable image fixups
	F	SIZE, W			; Size of fixed part of IAF
	F	FLAGS, W		; Flags
	V	<
		SHR			; This is in a shareable image
		>
	F	G_FIXOFF, L		; Offset to g^ address data
	F	DOTADROFF, L		; Offset to .address fixup data
	F	CHGPRTOFF, L		; Offset to isect change prot. data
	F	SHLSTOFF, L		; Offset to shareable image list
	F	SHRIMGCNT, L		; Number of shareable images in shlst
	F	SHLEXTRA, L		; Number of extra shareable images allowed
	F	PERMCTX, L		; Permanent sharable image context
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	L	LENGTH			; Length of fixed area
	E

;+
; IDB - INTERRUPT DISPATCH BLOCK
;
; AN INTERRUPT DISPATCH BLOCK PROVIDES THE INFORMATION NECESSARY FOR A
; UNIT INDEPENDENT, BUT CONTROLLER SPECIFIC, INTERRUPT DISPATCHER TO
; DISPATCH INTERRUPTS TO THE PROPER DRIVER TO HANDLE AN INTERRUPT ON
; A DEVICE UNIT.
;-
 
	$STRUCT	IDB
 
	F	CSR,L			;CONTROLLER CSR ADDRESS
	F	OWNER,L			;OWNER UCB ADDRESS
	F	SIZE,W			;SIZE OF IDB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE OF IDB
	F	VECTOR,B		;CONTROLLER VECTOR OFFSET
	F	UNITS,W			;NUMBER OF UNITS (SIZE OF UCBLST)
	F	,W			;(SPARE)
	F	ADP,L			;ADDRESS OF UBA ADAPTER CONTROL BLOCK
	F	UCBLST,L,8		;UCB OR SECONDARY IDB ADDRESSES
					;(DEFAULT OF 8)
	L	LENGTH			;LENGTH OF STANDARD IDB

	E

;+
; ICP - CHANGE IMAGE SECTION PROTECTION DATA
;
; THIS STRUCTURE IS USED IN THE IMAGE FIXUP SECTION BY THE LINKER
; TO INFORM THE IMAGE ACTIVATOR OF THE IMAGE SECTIONS THAT NEED
; THEIR PROTECTION CHANGED.
;-
	$STRUCT	ICP

	F	BASEVA, L		; virtual address of start of section
	F	NPAGES, W		; number of pages to change protection on
	F	NEWPRT, W		; new protection
	L	LENGTH			; size of one section's data
	E

;+
; IMAGE FILE DESCRIPTOR BLOCK - RETURNED BY IMAGE ACTIVATOR
;-

	$STRUCT	IFD

	F	SIZE,W			;SIZE IN BYTES OF IMAGE FILE DESCRIPTOR
	F	FILNAMOFF,W		;OFFSET TO RESULTANT FILE NAME STRING
	F	,W			;RESERVED OFFSET 1
	F	,W			;RESERVED OFFSET 2
	F	CHAN,W			;CHANNEL ON WHICH IMAGE FILE IS OPEN
	F	CMCHAN,W		;COMPATIBILITY MODE CHANNEL
	F	CMKFIADR,L		;COMPATIBILITY MODE IMAGE
					;KNOWN FILE ENTRY ADDRESS OR 0
	F	FLAGS,W			;IMAGE FILE DESCRIPTOR FLAGS
		V <
		EXEONLY,,,M		;EXECUTE ONLY FILE
		PRIV,,,M		;IMAGE INSTALLED WITH ENHANCED PRIVILEGE
		SETVECTOR,,,M		;PRIVILEGED VECTORS TO BE INSTALLED
		>
	F	,W			;SPARE WORD
	F	CURPROG,Q		;STRING DESCRIPTOR FOR CURRENTLY
					;RUNNING PROGRAM NAME
	L	LENGTH			;LENGTH OF FIXED AREA OF IFD

	E

;+
; IMAGE HEADER RECORD DEFINITIONS - FIRST RECORD OF IMAGE HEADER
;-
	$STRUCT	IHD

	F	SIZE,W			;SIZE IN BYTES OF IMAGE HEADER RECORD
	F	ACTIVOFF,W		;BYTE OFFSET TO ACTIVATION DATA
	F	SYMDBGOFF,W		;BYTE OFFSET TO SYMBOL TABLE AND DEBUG DATA
	F	IMGIDOFF,W		;BYTE OFFSET TO IMAGE IDENT DATA
	F	PATCHOFF,W		;BYTE OFFSET TO PATCH DATA
	F	,W			;RESERVED
	F	MAJORID,W		;MAJOR ID
	    K	MAJORID,<^A/02/>	;MAJOR ID VALUE
	F	MINORID,W		;MINOR ID
	    K	MINORID,<^A/04/>	;MINOR ID VALUE
	F	HDRBLKCNT,B		;COUNT OF HEADER BLOCKS
	F	IMGTYPE,B		;IMAGE TYPE
;
; IMAGE TYPE CODES
;
	    K	EXE,1			;EXECUTABLE IMAGE
	    K	LIM,2			;LINKABLE IMAGE

	F	,W			;RESERVED
	F	PRIVREQS,Q		;REQUESTED PRIVILEGE MASK
	F	IOCHANCNT,W		;# OF CHANNELS REQUESTED
					;0 IF DEFAULT
	F	IMGIOCNT,W		;# OF PAGES OF IMAGE I/O SECTION REQUESTED
					;0 IF DEFAULT
	F	LNKFLAGS		;LINKER PRODUCED IMAGE FLAGS
	V<M				;AS FOLLOWS:
		LNKDEBUG		;FULL DEBUGGING REQUESTED
		LNKNOTFR		;FIRST TRANSFER ADDRESS MISSING
		NOP0BUFS		;RMS USE OF P0 FOR IMAGE I/O DISABLED
		PICIMG			;IMAGE IS POSITION INDEPENDENT
		P0IMAGE			;IMAGE IS IN P0 SPACE ONLY
		,19			;FILL OUT TO HIGH BYTE OF LONG WORD
		MATCHCTL,3		;MATCH CONTROL FOR LINKABLE IMAGE
		>
	F	IDENT			;GBL SEC IDENT VALUE FOR LINKABLE IMAGE
	F	SYSVER			;SYS$K_VERSION OR 0 IF NOT LINKED WITH EXEC
	F	IAFVA			;RELATIVE VIRTUAL ADDRESS OF FIXUP INFO
	L	LENGTH			;LENGTH OF FIXED AREA

	E


;+
; IMAGE HEADER ACTIVATION SECTION OFFSETS
;-

	$STRUCT	IHA

	F	TFRADR1,L		;FIRST TRANSFER ADDRESS
	F	TFRADR2,L		;SECOND TRANSFER ADDRESS
	F	TFRADR3,L		;THIRD TRANSFER ADDRESS
	F	,L			;GUARANTEED TRAILING 0 ADDRESS
	L	LENGTH			;SIZE OF ACTIVATION SECTION

	E


;+
; IMAGE HEADER PATCH SECTION OFFSETS
;-

	$STRUCT IHP

	F	ECO1,L			;DEC ECO LEVELS 1-32
	F	ECO2,L			;DEC ECO LEVELS 33-64
	F	ECO3,L			;DEC ECO LEVELS 65-98
	F	ECO4,L			;USER ECO LEVELS 99-132
	F	RW_PATSIZ,L		;SIZE OF FREE RW PATCH AREA
	F	RW_PATADR,L		;VIR ADDR OF NEXT FREE RW PATCH AREA
	F	RO_PATSIZ,L		;SIZE OF FREE RO PATCH AREA
	F	RO_PATADR,L		;VIR ADDR OF NEXT FREE RO PATCH AREA
	F	PATCOMTXT,L		;PATCH COMMAND TEXT VIRTUAL BLOCK NUMBER
	F	PATDATE,Q		;DATE OF MOST RECENT PATCH
	L	LENGTH			;LENGTH OF PATCH HEADER SECTION

	E


;+
; IMAGE HEADER SYMBOL TABLE AND DEBUG SECTION OFFSETS
;-

	$STRUCT	IHS

	F	DSTVBN,L		;DEBUG SYMBOL TABLE VIRTUAL BLOCK NUMBER
	F	GSTVBN,L		;GLOBAL SYMBOL TABLE VIRTUAL BLOCK NUMBER
	F	DSTBLKS,W		;DEBUG SYMBOL TABLE BLOCK COUNT
	F	GSTRECS,W		;GLOBAL SYMBOL TABLE RECORD COUNT
	L	LENGTH			;LENGTH OF SYMBOL TABLE SECTION

	E



;+
; IMAGE HEADER IDENTIFICATION SECTION OFFSETS
;-

	$STRUCT	IHI

	F	IMGNAM,T,16		;IMAGE NAME STRING
	F	IMGID,T,16		;IMAGE IDENT STRING
	F	LINKTIME,Q		;DATE AND TIME THIS IMAGE WAS LINKED
					;STANDARD SYSTEM QUADWORD FORMAT
	F	LINKID,T,16		;LINKER IDENT STRING
	L	LENGTH			;LENGTH OF IMAGE HEADER IDENT SECTION

	E

;+
; IMAGE HEADER RECORD DEFINITIONS - CROSS LINKER - MAJORID = "01"
;	 1ST RECORD OF IMAGE HEADER BLOCK
;-

	$STRUCT	IHX

	F	SIZE,W			;SIZE IN BYTE OF IMAGE HEADER RECORD
	F	HDRBLKCNT,B		;COUNT OF BLOCKS IN IMAGE HEADER
	F	,B			;SPARE
	F	STARTADR,Q		;START ADDRESS
	F	MAJORID,W		;MAJOR ID OF IMAGE HEADER
	    K	MAJORID,<^X3130>	;^A/01/ MAJOR ID VALUE FOR CROSS LINKER
	F	MINORID,W		;MINOR ID OF IMAGE HEADER
	    K	MINORID,<^X3130>	;^A/01/ MINOR ID VALUE FOR CROSS LINKER
	    K	MINORID1,<^X3130>	;^A/01/ MINOR ID VALUE FOR CROSS LINKER WITH
					;SYMBOL TABLE AND 3RD TRANSFER ADR
	F	IMGNAM,T,24		;IMAGE NAME
;
; THE FOLLOWING FIELDS ARE PRESENT FOR MINOR ID'S GREATER OR EQUAL TO "03"
;
	F	DSTVBN,L		;DEBUG SYMBOL TABLE VBN
	F	GSTVBN,L		;GLOBAL SYMBOL TABLE VBN
	F	DSTBLKS,W		;DEBUG SYMBOL TABLE BLOCKS
	F	GSTRECS,W		;GLOBAL SYMBOL TABLE RECORD COUNT
	F	TFRADR3,L		;THIRD TRANSFER ADDRESS
	L	LENGTH			;LENGTH OF CROSS LINKER HEADER

	E

;+
;	RMS32 IMPURE AREA OFFSET DEFINITIONS
;
;-
	$STRUCT IMP

	F RMSSTATUS,W	; RMS OVERALL STATUS
	  V <
	  IIOS		; SET IF THIS IS THE IMAGE
			; I.O SEGMENT 
	  AST		; SET IF RUNNING AT EXEC AST LEVEL
	  TEMP1		; TEMPORARY FLAG
	  TEMP2		;   "
	  IORUNDOWN	; SET IF IO RUNDOWN IN PROGRESS
	  NOP0BUFS	; SET IF RMS USE OF P0 FOR IMAGE I/O DISABLED
	  >
;
	  C ASYEFN,30	; EFN FOR ASYNC WAITS
	  C IOREFN,30	; EFN FOR IO RUNDOWN SYNCHRONIZATION
	  C ASYQIOEFN,31 ; EFN FOR ASYNC QIOS
	  C SYNCEFN,27	; BASE EFN FOR SYNCHRONOUS QIO'S
			; (28, 29 ALSO USED)
	  C MBXEFN,26	; EFN FOR QIOS TO NETWORK MAILBOXES
;
	F PROT,B	; PROTECTION FOR I/O BUFFER PAGES
	F ,B		; SPARE
	F IOSEGADDR,L	; ADDRESS OF FIRST FREE PAGE
			; IN THIS (IMAGE OR PROCESS)
			; I/O SEGMENT
	F IOSEGLEN,L	; # OF FREE BYTES AT ABOVE ADDR
	F FREEPGLH,L,2	; FREE PAGE LIST HEAD 
	F SAVED_SP,L	; SAVED VALUE OF SP AT ENTRY
	F IFABTBL,L	; IFAB TABLE ADDR
	F IRABTBL,L	; IRAB TABLE ADDR
	F ENTPERSEG,W	; # OF SLOTS PER TABLE SEGMENT
	  C NPIOFILES,12	; # OF PIO SEGMENT FILES
	  C ENTPERSEG,15	; # OF IIO SEGMENT SLOTS
				; PER INDEX TABLE SEGMENT
	F NUM_IFABS,W	; NUMBER OF IFABS & IRABS CURRENTLY ALLOCATED
	F IFBTBLINK,L	; START OF IFAB TABLE (LINK TO NEXT SEGMENT)
	F ,L,15		; FIRST IFAB TABLE SEGMENT
	F IRBTBLINK,L	; START OF IRAB TABLE (LINK TO NEXT SEGMENT)
	E

;+
; I/O SPACE LAYOUT FOR 11/780 CPU
;-

	$STRUCT	IO780

	C< ,$AL_			;DEFINE CONSTANT ADDRESSES
	IOBASE,+^X20000000		;START OF I/O SPACE
	PERNEX,+^X2000			;# BYTES OR REGISTER SPACE/NEXUS
	NNEX,16				;# OF NEXUSES
	UB0SP,+^X20100000		;ADDR OF UB 0 SPACE
	>
	E
;+
; I/O SPACE LAYOUT FOR 11/750 CPU
;-

	$STRUCT	IO750

	C< ,$AL_			;DEFINE CONSTANT ADDRESSES
	IOBASE,+^XF20000		;START OF I/O SPACE FOR SLOT 16
	PERNEX,+^X2000			;# BYTES OF REGISTER SPACE/NEXUS
	UBBASE,+^XF30000		;START OF UB 0 SPACE
	MBBASE,+^XF28000		;START OF MB0 REGISTER SPACE
	NNEX,16				;# CONFIGURABLE NEXUSES
	UB0SP,+^XFC0000			;ADDR OF UB0 SPACE
	>				;
	C< ,$C_SL_			;FIXED ADAPTER ASSIGNMENTS FOR
					; SLOTS 0-9:
	MEM0,0				; MEMORY CONTROLLER
	MPM0,1				; MULTIPORT MEMORIES...
	MPM1,2				;
	MPM2,3				;
	MB0,4				; MASSBUS ADAPTERS...
	MB1,5				;
	MB2,6				;
	MB3,7				;
	UB0,8				; UNIBUS 0
	UB1,9				; UNIBUS 1
	>
	E
;++
; I/O SPACE LAYOUT FOR 11/730 CPU
;--

	$STRUCT	IO730

	C< ,$AL_
	IOBASE,+^XF20000		; START OF I/O SPACE
	PERNEX,+^X2000			; # BYTES OF REGISTER SPACE/NEXUS
	NNEX,16				; # OF NEXUSES
	UB0SP,+^XFC0000			; ADDR OF UB0 SPACE
	>
	E

;++
; I/O SPACE LAYOUT FOR 11/7VV CPU
;--

	$STRUCT	IO7VV

	C< ,$AL_
	IOA0,+^X20000000		;START OF I/O SPACE FOR ABUS ADAPTER 0
	IOA1,+^X22000000		;START OF I/O SPACE FOR ABUS ADAPTER 1
	IOA2,+^X24000000		;START OF I/O SPACE FOR ABUS ADAPTER 2
	IOA3,+^X26000000		;START OF I/O SPACE FOR ABUS ADAPTER 3
	PERNEX,+^X2000			;# OF BYTES OF REGISTER SPACE/NEXUS
	NNEX,16				;NUMBER OF NEXUS PER SBIA
	UB0SP,+^X20100000		;OFFSET OF UB 0 SPACE FROM BASE OF SBIA
	SBIACR,+^X20080000		;OFFSET OF SBIA CR FROM BASE OF SBIA
	>
	E

;++
; PAMM - Physical Address Memory Map bit and field definitions for 11/7VV
;--

	$STRUCT PAMM			;11/7VV Physical Address Memory Map
	V	<
		CONF,5,,M		;Configuration field
		,3			;MBZ
		BLOCK,5,,M		;Expander memory block number
		,7			;MBZ
		PAMADD,10,,M		;PAMM physical address field
		>
	C <PAMM,$C_			;Configuration field bit definitions
		IAS0,0			;Internal array slot 0
		IAS1,1			;internal array slot 1, etc.
		IAS2,2
		IAS3,3
		IAS4,4
		IAS5,5
		IAS6,6
		IAS7,7
		RPTR,8			;Memory bus repeater
		IOA0,25			;ABUS I/O Adapter 0
		IOA1,26			;ABUS I/O Adapter 1
		IOA2,27			;ABUS I/O Adapter 2
		IOA3,28			;ABUS I/O Adapter 3
		NEXM,31			;Non existant memory
		>
	E

;++
; 11/7VV Synchronous Backplane Interconnect Adapter register definitions
;--

	$STRUCT SBIA			;11/7VV SBI ADAPTER
	F	CR,L			;CONFIGURATION REGISTER
	V	<
		TYPE,8,,M		;ADAPTER TYPE FIELD
		,12
		MEMSEP,10,,M		;MEMORY SEPARATOR
		>
	F	CSR,L			;CONTROL/STATUS REGISTER
	V	<
		,24
		TRSEL1,,,M		;DMA TR SELECT 1
		TRSEL2,,,M		;DMA TR SELECT 2
		TRSEL4,,,M		;DMA TR SELECT 4
		TRSEL8,,,M		;DMA TR SELECT 8
		,2
		DSABL,,,M		;DISABLE SBI CYCLES
		IE,,,M			;MASTER INTERRUPT ENABLE
		>
	F	SUMRY,L			;ERROR SUMMARY REGISTER
	V	<
					;DMAI
		DMAI_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAI_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAI_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAI_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAA
		DMAA_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAA_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAA_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAA_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAB
		DMAB_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAB_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAB_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAB_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAC
		DMAC_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAC_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAC_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAC_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;
		MULT_ERR,,,M		;MULTIPLE CPU ERROR
		,2
		CPU_ERR,,,M		;ERROR ON CPU CAMMAND/ADDRESS
		ADDRS,,,M		;ADDRESS ERROR ON CPU TRANSACTION
		CNTRL,,,M		;FILE CONTROL PARITY ERROR
		PARITY,,,M		;CPU A/D PARITY ERROR
		LOCK,,,M		;CPU BUFFER ERROR LOCK
		,2
		CMDLNG,2,,M		;ABUS COMMAND LENGTH
		CMND,4,,M		;ABUS COMMAND CODE
		>
	F	DIAGNOS,L		;DIAGNOSTIC CONTROL
	V	<
		CLKCTRL,2,,M		;CLOCK CONTROL
		LOOP,,,M		;LOOP BACK
		PARINV,,,M		;PARITY INVERT
		CTLDSB,,,M		;CONTROL PARITY DISABLE
		ADSDSB,,,M		;ADDRESS PARITY DISABLE
		,10
		DMAIBSY,,,M		;FORCE DMAI BUSY
		DMAABSY,,,M		;FORCE DMAA BUSY
		DMABBSY,,,M		;FORCE DMAB BUSY
		DMACBSY,,,M		;FORCE DMAC BUSY
		>
	F	DMAICA,L		;DMAI COMMAND ADDRESS REGISTER
	F	DMAIID,L		;DMAI ID REGISTER
	V	<
		IID,5,,M		;ID
		>
	F	DMAACA,L		;DMAA COMMAND ADDRESS REGISTER
	F	DMAAID,L		;DMAA ID REGISTER
	V	<
		AID,5,,M		;ID
		>
	F	DMABCA,L		;DMAB COMMAND ADDRESS REGISTER
	F	DMABID,L		;DMAB ID REGISTER
	V	<
		BID,5,,M		;ID
		>
	F	DMACCA,L		;DMAC COMMAND ADDRESS REGISTER
	F	DMACID,L		;DMAC ID REGISTER
	V	<
		CID,5,,M		;ID
		>
	F	SBISILO,L		;SBI SILO REGISTER
	F	SBIERR,L		;SBI ERROR REGISTER
	V	<
		,8
		ERRCONF,,,M		;ERROR CONFIRMATION
		,1
		TMOSTS,2,,M		;CPU TIMEOUT STATUS
		CPTMO,,,M		;CPU TIMEOUT
		>
	F	TMOADDRS,L		;SBI TIMEOUT ADDRESS
	V	<
		PHYADR,28,,M		;PHYSICAL ADDRESS
		>
	F	SBISTS,L		;SBI FAULT STATUS
	V	<
		,16
		SLOLCK,,,M		;SILO LOCK
		FAULT,,,M		;SBI FAULT SIGNAL
		FIE,,,M			;FAULT INTERRUPT ENABLE
		FLTLA,,,M		;FAULT LATCH
		,2
		P0PTY,,,M		;P0 PARITY ERROR
		P1PTY,,,M		;P1 PARITY ERROR
		,2
		XMTR,,,M		;XMITR DURING FAULT
		MLTPL,,,M		;MULTIPLE XMIT FAULT
		ISF,,,M			;INTLK SEQ FAULT
		RDF,,,M			;UNEXPECTED READ DATA FAULT
		WSF,,,M			;WRITE SEQUENCE FAULT
		PTYFLT,,,M		;PARITY FAULT
		>
	F	SILOCMP,L		;SBI SILO COMPARATOR
	F	MAINT,L			;SBI MAINTENANCE REG
	F	UNJAM,L			;SBI UNJAM REGISTER
	F	SBIQC,L			;SBI QUAD CLEAR
	F	SBIVEC,L		;SBI VECTOR
		E

;+
; TEMPORARY PROCESSOR PRIORITY LEVEL DEFINITIONS
;-
	$STRUCT	IPL

C <IPL,$_,				;
	 HWCLK,24   			;HARDWARE CLOCK LEVEL
	 IOPOST,4   			;I/O POST PROCESSING LEVEL
	 MAILBOX,11   			;WRITE MAILBOX INTERLOCK LEVEL
	 POWER,31   			;POWERFAIL INTERLOCK LEVEL
	 QUEUEAST,6   			;QUEUE AST LEVEL
	 SCHED,3   			;SCHEDULER LEVEL
	 SYNCH,7   			;SYSTEM DATA BASE SYNCHRONIZATION LEVEL
	 TIMER,7   			;TIME QUEUE PROCESSING LEVEL
	 ASTDEL,2			;AST DELIVERY INTERRUPT
	 SCS,8				;SCS SYNCHRONIZATION IPL
>
	E

;+
; IRP - I/O REQUEST PACKET
;
; I/O REQUEST PACKETS ARE CONSTRUCTED BY THE QUEUE I/O REQUEST SYSTEM 
; SERVICE. THE CONTENT OF AN I/O REQUEST PACKET DESCRIBES A FUNCTION TO
; BE PERFORMED ON A DEVICE UNIT.
;
; NOTE: SEVERAL FIELDS OF THE IRP MUST BE AT THE SAME OFFSETS AS THEIR
; CORRESPONDING FIELDS IN THE IRPE (SEE NEXT PAGE).
;
;-
 
	$STRUCT	IRP
 
	F	IOQFL,L			;I/O QUEUE FORWARD LINK
	F	IOQBL,L			;I/O QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF IRP IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR IRP
	F	RMOD,B			;ACCESS MODE OF REQUEST
		V<
		MODE,2			; MODE SUBFIELD
		>
	F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	F	ASTPRM,L		;AST PARAMETER
	F	WIND,L			;ADDRESS OF WINDOW BLOCK
	F	UCB,L			;ADDRESS OF DEVICE UCB
	F	FUNC,W			;I/O FUNCTION CODE AND MODIFIERS
		V<			; I/O FUNCTION CODE FIELD DEFINITIONS
		FCODE,6,,M		; FUNCTION CODE FIELD
		FMOD,10			; FUNCTION MODIFIER FIELD
	>
	F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	F	PRI,B			;BASE PRIORITY OF REQUESTING PROCESS
	F	IOSB,L			;ADDRESS OF I/O STATUS DOUBLE LONGWORD
	F	CHAN,W			;PROCESS I/O CHANNEL NUMBER
	F	STS,W			;REQUEST STATUS
		V <			; BIT DEFINITIONS
		BUFIO,,,M 		; BUFFERED I/O FLAG   ;THESE BITS
		FUNC,,,M		; 1=>READ FUNCTION    ;MUST BE ADJACENT
		PAGIO,,,M		; PAGING I/O FLAG     ;AND IN ORDER
		COMPLX,,,M		; COMPLEX BUFFERED I/O
		VIRTUAL,,,M		; VIRTUAL I/O FUNCTION
		CHAINED,,,M		; CHAINED BUFFERED I/O OPERATION
		SWAPIO,,,M		; SWAP I/O OPERATION
		DIAGBUF,,,M		; DIAGNOSTIC BUFFER ALLOCATED
		PHYSIO,,,M		; PHYSICAL I/O
		TERMIO,,,M		; TERMINAL I/O (FOR SELECTING PRIORITY INC)
		MBXIO,,,M		; MAILBOX BUFFERED READ
		EXTEND,,,M		; AN IRPE IS LINKED TO THIS IRP
		FILACP,,,M		; FILE ACP I/O (BOTH DIOCNT AND BIOCNT)
		MVIRP,,,M		; MOUNT VERIFICATION IRP
		>			; END OF BIT DEFINITIONS
	F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF FIRST PTE
	F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	F	BCNT,L			;BYTE COUNT OF TRANSFER
	S	BCNT,0,W		; OLD WORD DEFINITION FOR COMPATIBILITY
	F	,W			; ROUND UP TO NEXT LONGWORD
	F	IOST1			;FIRST I/O STATUS LONGWORD (FOR I/O POST)
	S	MEDIA,,L		;MEDIA ADDRESS
	F	IOST2			;SECOND I/O STATUS LONGWORD
	S	TT_TERM,0,L		;ADDRESS OF READ TERMINATORS MASK
	S	CARCON,0,B		;CARRIAGE CONTROL
	F	NT_PRVMSK,Q		; PRIVILEGE MASK FOR DECNET
	S	TT_STATE,0,Q		; TERMINAL STATE DEFINITIONS
	S	ABCNT,0,L		; ACCUMULATED BYTES TRANSFERED
	S	ABCNT,0,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	S	OBCNT,4,L		; ORIGINAL TRANSFER BYTE COUNT
	S	OBCNT,4,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	F	SEGVBN,L		;VIRTUAL BLOCK NUMBER OF CURRENT SEGMENT
	S	JNL_SEQNO,0,L		; SEQUENCE NUMBER IN JOURNAL
	F	DIAGBUF,L		; DIAGNOSTIC BUFFER ADDRESS
	S	TT_PRMPT,0,W		; PROMPT SIZE
	F	SEQNUM,L		; SEQUENCE NUMBER
	F	EXTEND,L		; ADDRESS OF IRPE
	F	ARB,L			; ACCESS RIGHTS BLOCK ADDRESS

; Standard IRP must contain space for Class Driver CDRP fields.
 
	L	CDRP			; Offset to the CDRP within the IRP
	F	FQFL,L			; Fork Queue FLINK
	F	FQBL,L			; Fork Queue Blink
	F	CDRPSIZE,W		; Size field for positive section only
	F	CD_TYPE,B		; Type, always of interest
	F	FIPL,B			; Fork IPL
	F	FPC,L			; Fork PC
	F	FR3,L			; Fork R3
	F	FR4,L			; Fork R4
	F	SAVD_RTN,L		; Saved return address from level 1 JSB
	F	MSG_BUF,L		; Address of allocated MSCP buffer
	F	RSPID,L			; Allocated Request ID
	F	CDT,L			; Address of Connection Descriptor Table
	F	RWCPTR,L		; RWAITCNT pointer
	M	1

; Block Transfer Extension

	P	1
	F	LBUFH_AD,L		; Local BUFfer Handle ADress
	M	2
	F	LBOFF,L			; Local Byte OFFset
	F	RBUFH_AD,L		; Remote BUFfer Handle ADress
	F	RBOFF,L			; Remote Byte OFFset
	F	XCT_LEN,L		; Transfer length in bytes
	L	BT_LEN

; Class Driver Extension

	P	2
	F	LBUFHNDL,T,12		; Local buffer handle
	F	UBARSRCE,L		; UNIBUS mapping resources allocated
	L	CD_LEN

	L	LENGTH			; LENGTH OF STANDARD IRP
	E

;+
; IRPE - I/O REQUEST PACKET EXTENSION
;
; I/O REQUEST PACKET EXTENSIONS ARE USED TO HOLD ADDITIONAL INFORMATION
; ABOUT I/O REQUESTS FOR DEVICES THAT REQUIRE MORE CONTEXT THAN CAN FIT INTO
; THE STANDARD IRP.  IRPE'S ARE BUILT AND LINKED ONTO IRP'S BY DEVICE 
; DRIVER FDT ROUTINES.  ANY FIELDS THAT ARE NOT DEFINED IN THIS STRUCTURE
; MAY BE USED TO HOLD DRIVER DEPENDENT DATA.
;
; THE CURRENTLY DEFINED FIELDS IN THE IRPE WERE POSITIONED SO THAT THE
; PACKET COULD BE USED AS A FORK BLOCK.  THIS SHOULD BE KEPT IN MIND IF
; AND WHEN NEW FIELDS ARE DEFINED.
;
; THE FIELDS DEFINED HERE MUST BE AT THE SAME OFFSETS AS THEIR CORRESPONDING
; FIELDS IN THE IRP (SEE PREVIOUS PAGE).
;
;-

	$STRUCT	IRPE

	F	,L			; SPARE LONGWORD
	F	,L			; SPARE LONGWORD
	F	SIZE,W			; SIZE OF IRPE IN BYTES
	F	TYPE,B			; STRUCTURE TYPE FOR IRPE
	F	,B			; SPARE BYTE
	F	,L,7			; 7 SPARE LONGWORDS
	F	,W			; SPARE WORD
	F	STS,W			; STATUS
		V <			;  BIT DEFINITIONS
		,11			;  SKIP OVER 11 BITS
		EXTEND,,,M		;  ANOTHER IRPE IS LINKED TO THIS ONE
		>			;  END OF BIT DEFINITIONS
	F	SVAPTE1,L		; SYSTEM VIR. ADDR. OF PTE FOR REGION 1
	F	BOFF1,W			; BYTE OFFSET FOR REGION 1
	F	,W			; SPARE WORD
	F	BCNT1,L			; BYTE COUNT FOR REGION 1
	F	SVAPTE2,L		; SYSTEM VIR. ADDR. OF PTE FOR REGION 2
	F	BOFF2,W			; BYTE OFFSET FOR REGION 2
	F	,W			; SPARE WORD
	F	BCNT2,L			; BYTE COUNT FOR REGION 2
	F	,L,4			; 4 SPARE LONGWORDS
	F	EXTEND,L		; ADDRESS OF NEXT IRPE
	L	LENGTH			; LENGTH OF IRPE
	E

;+
; IMAGE SECTION DESCRIPTOR DEFINITIONS
;-

	$STRUCT	ISD

	F	SIZE,W			;SIZE IN BYTES OF THIS ISD
	F	PAGCNT,W		;# OF PAGES DESCRIBED BY THIS ISD
	F	VPNPFC,L		;VPN & PFC VIELDS
		V <			; VIELDS IN VPNPFC
		VPN,21			; STARTING VIRTUAL PAGE NUMBER
		P1  			; P1 SPACE
		SYSTEM			; SYSTEM SPACE
		,1			; SPARE
		PFC,8			; PAGE FAULT CLUSTER
		>
		V <
		VPG,23			; VIRTUAL PAGE INCLUDING P1 & S
		>
	S	PFC,3,B			;PAGE FAULT CLUSTER
	F	FLAGS,L			;FLAGS AND ISD TYPE
		V <M			; FLAG BIT DEFINITIONS
		GBL			; GLOBAL
		CRF			; COPY ON REFERENCE
		DZRO			; DEMAND ZERO PAGE
		WRT			; WRITABLE
		MATCHCTL,3		; IDENT MATCH CONTROL FIELD
		LASTCLU			; ISD IS PART OF LAST P0 SPACE CLUSTER
		COPYALWAY		; COPY ALWAYS FROM USER IMAGE
		BASED			; ISECT IS BASED
		FIXUPVEC		; ISECT IS FIXUP SECTION
		,6			; UNUSED, RESERVED FOR FUTURE USE
		VECTOR			; VECTOR CONTAINED IN IMAGE SECTION
		PROTECT			; IMAGE SECTION IS PROTECTED
		,5			; UNUSED, RESERVED FOR FUTURE USE
	>
	C	<,$S_
		FLAGSIZ,24		; NUMBER OF FLAG BITS, ISD TYPE EXCLUDED
		>
	S	TYPE,3,B			;ISD TYPE CODE
	L	LENDZRO			;LENGTH OF DEMAND ZERO ISD
	F	VBN,L			;BASE VIRTUAL BLOCK NUMBER
	L	LENPRIV			;LENGTH OF PRIVATE ISD
	F	IDENT,L			;IDENT FOR GLOBAL SECTION
	F	GBLNAM,T,16		;GLOBAL NAME COUNTED STRING
	L	LENGLBL			;LENGTH OF GLOBAL ISD


;+
; MATCH CONTROL VIELD VALUES
;-
	K <,,0,1			;BASE OF ZERO , INCR 1
	MATALL  			;MATCH ALWAYS, USE GLOBAL SECTION
	MATEQU  			;MATCH IF ISD$L_IDENT EQU GBL ID
	MATLEQ				;MATCH IF ISD$L_IDENT LEQ GBL ID
	MATNEV				;MATCH NEVER, USE PRIVATE COPY
	>

;+
; ISD TYPE FIELD DEFINITIONS
;-

	K	NORMAL,0		;NORMAL PROGRAM IMAGE SECTION
					;NO SPECIAL ACTION REQUIRED
	K	SHRFXD, 1		;SHAREABLE FIXED SECTION
	K	PRVFXD, 2		;PRIVATE FIXED SECTION
	K	SHRPIC, 3		;SHAREABLE PIC SECTION
	K	PRVPIC, 4		;PRIVATE PIC SECTION
	K	USRSTACK,<256-3>	;USER STACK SECTION

	E

;+
; Job Information Block - Structure containing common context for a set
;			  of related processes.
;-
	$STRUCT	JIB
	F PRIV,Q			; Privilege mask
	S ARB,0,L			; Access rights block
	F SIZE,W			; Size of structure in bytes
	F TYPE,B			; Structure type code
	F DAYTYPES,B			; Set bits 0-6 flag non-prime days of week
	F UICLIST,L			; Address of UIC list
	S UIC,0,L			; UIC **** temp until UIC list ****
	F BYTCNT,L			; Buffered I/O byte count avail
	F BYTLM,L			; Original value for Byte count
	F PBYTCNT,L			; Paged pool byte count remaining
	F PBYTLIM,L			; Paged pool byte limit
	F FILCNT,W			; Open File count remaining
	F FILLM,W			; Open file limit
	F TQCNT,W			; Timer queue entry count remaining
	F TQLM,W			; Timer queue entry limit
	F PGFLQUOTA,L			; Paging file quota
	F PGFLCNT,L			; Paging file limit
	F CPULIM,L			; CPU time quota remaining
	F PRCCNT,W			; Count of subprocesses existing
	F PRCLIM,W			; Limit on number of subprocesses
	F SHRFCNT,W			; Shared file block count remaing
	F SHRFLIM,W			; Shared file count limit
	F ENQCNT,W			; Enqueue count avail
	F ENQLM,W			; Enqueue limit
	F MPID,L			; PID of master process
	F JLNAMFL,L			; Forward link for job-wide logical names
	F JLNAMBL,L			; Back link for job-wide logical names
	F USERNAME,T,12			; User name for easy access
	F ACCOUNT,T,8			; Account name for resident access
	F PDAYHOURS,L			; Field describing primary day access
					; Primary day hours, from 0:00 to 23:00
	S PDAYFLAGS,3,B			; Flags associated with primary days
		V <			; Bit definitions
		DISDIALUP		; Set disallows dial-in use of account
		DISNETWORK		; Set disallows network use of account
		,4
		TERMRTA			; Flags terminal as a remote terminal
		TERMDIAL		; Flags terminal as a dial up
		>
	F ODAYHOURS,L			; Field describing off day access
					; Off day access hours, 0:00 to 23:00
	S ODAYFLAGS,3,B			; Flags associated with off day usage
					; See pdayflags
	L LENGTH			; Structure length
	E

;
; KNOWN FILE IMAGE HEADER DEFINITIONS
;

	$STRUCT	KFH

	F	BUFEND,L		;ADDRESS OF END OF KNOWN FILE HEADER
	F	KFIADR,L		;ADDRESS OF ASSOCIATED KNOWN FILE ENTRY
	F	SIZE,W			;SIZE OF DYNAMIC STRUCTURE
	F	TYPE,B			;DYNAMIC STRUCTURE TYPE
	F	,B			;SPARE BYTE
	L	LENGTH			;LENGTH OF OVERHEAD AREA

;
; THE REMAINDER OF THIS STRUCTURE CONTAINS THE IMAGE HEADER OF THE
; SPECIFIED KNOWN FILE.  THE LOCATION KFI$L_IMGHDR IN THE KNOWN FILE
; ENTRY POINTS KFH$C_LENGTH INTO THIS STRUCTURE, I.E AT THE IMAGE HEADER
; ITSELF.
;
	E

;
; KNOWN FILE ENTRY DEFINITIONS
;
	$STRUCT	KFI

	F	KFIQFL,L		;KNOWN FILE QUEUE FORWARD LINK
	F	KFIQBL,L		;KNOWN FILE QUEUE BACK LINK
	F	SIZE,W			;SIZE OF BLOCK
	F	TYPE,B			;STRUCTURE TYPE
	F	KFICTL,B		;CONTROL BITS
		V <M			;CONTROL BIT DEFINITIONS
		KFIHD			;KNOWN FILE HEADER BLOCK
		FILIDOPEN		;OPEN BY FILE ID IF SET
		DONOTOPEN		;DO NOT OPEN THE FILE IF SET
		,3			;SPARE
		NOREPLACE		;DELETE AND DO NOT REPLACE ENTRY
		MARKDEL			;ENTRY IS TO BE DELETED
		>
	F	DEVUCB,B		;DEVICE UCB OFFSET
	S	DEVNAM,0,B		;NAME THE ABOVE CONSISTENTLY
	F	DIRNAM,B		;DIRECTORY NAME STRING OFFSET
	F	FILNAM,B		;FILE NAME STRING OFFSET
	F	TYPNAM,B		;FILE TYPE STRING OFFSET
	F	REFCNT,W		;REFERENCE COUNT
	F	KFIQNUM,B		;KFIQ NUMBER (INDEX INTO VECTOR OF KFIQ'S)
	F	KFISEQ,B		;KNOWN FILE ENTRY SEQUENCE NUMBER
		V <M
		KFISEQ,2		;SEQUENCE NUMBER FIELD
		>
	L	KFIHDLEN		;LENGTH OF KFI HEADER FIXED PORTION
	F	FLAGS,W			;FLAGS WORD
		V <M			;FLAG BIT DEFINITIONS
		KP_OPEN			;KEEP THE IMAGE FILE OPEN
		KP_RESHDR		;MAKE IMAGE HEADER RESIDENT
		KP_SHARED		;MAKE IMAGE SHARED
		PROTECT			;KNOWN FILE WAS INSTALLED PROTECTED
		,2			;SPARE BITS
		LIM			;LINKABLE IMAGE
		PROCPRIV		;USE PROCESS PRIVILEGE MASK
		IS_RESHDR		;IMAGE HEADER BLOCK IS RESIDENT
		IS_SHARED		;IMAGE IS SHARED
		,4			;SPARE BITS
		SHMIDENT		;SHARED MEMORY IDENT ALREADY SET
		COMPATMOD		;IMAGE IS COMPATABILITY MODE
		>
	F	GBLSECCNT,W		;GLOBAL SECTION COUNT IF SHARED
	F	USECNT,L		;USAGE COUNTER
	F	WINDOW,L		;WCB ADDRESS IF OPEN
	S	FID,0,W			;FILE ID
	S	FID_NUM,0,W		;FILE NUMBER FIELD OF FILE ID
	S	FID_SEQ,2,W		;FILE SEQUENCE NUMBER FIELD OF FILE ID
	F	IMGHDR,L		;IMAGE HEADER ADDRESS IF RESIDENT
	S	FID_RVN,0,W		;RELATIVE VOLUME NUMBER FIELD OF FILE ID
	F	PROCPRIV,Q		;PROCESS PRIVILEGE MASK
	F	MATCHCTL,B		;GLOBAL SECTION MATCH CONTROL
	F	,B			;SPARE BYTE
	F	AMECOD,W		;IMAGE HEADER CODE SPECIFYING AME
	F	IDENT,L			;GLOBAL SECTION IDENT VALUE
	L	LENGTH			;LENGTH OF FIXED AREA OF KFI ENTRY

	E

;
; KNOWN FILE POINTER BLOCK DEFINITIONS
;
	$STRUCT	KFP

	F	QUECOUNT,B		;INDEX OF LAST KNOWN FILE LIST IN USE
	F	,B			;SPARE BYTE
	F	,W			;SPARE WORD
	F	,L			;SPARE LONG WORD
	F	SIZE,W			;SIZE OF POINTER BLOCK IN BYTES
	F	TYPE,B			;POINTER BLOCK TYPE
	F	TYPE1,B			;TYPE OF STRUCTURE POINTED TO
	F	QUE0,L			;POINTER TO KNOWN FILE QUEUE 0

	E

;+
; LKB - LOCK BLOCK
;
; LOCK BLOCKS ARE USED TO REPRESENT LOCK REQUESTS (ONE BLOCK FOR EACH
; REQUEST).  LOCK BLOCKS HAVE AN ENTRY IN THE LOCK ID TABLE POINTING
; TO THEM AND ARE LINKED ONTO ONE OF THREE QUEUES IN A RESOURCE BLOCK (RSB)
;-

	$STRUCT	LKB

	F	ASTQFL,L		;AST QUEUE FORWARD LINK
	F	ASTQBL,L		;AST QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF LKB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE	
	F	RMOD,B			;ACCESS MODE OF REQUEST
		V<
		MODE,2			; MODE SUBFIELD
		,2			; SPARE
		PKAST,,,M		; PIGGY BACK SPECIAL KERNEL AST
		NODELETE,,,M		; DON'T DELETE ACB ON DELIVERY
		QUOTA,,,M		; ACCOUNT FOR QUOTA
		KAST,,,M		; SPECIAL KERNEL AST
		>
	F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	F	ASTPRM,L		;AST PARAMETER
	F	KAST,L			;SPECIAL KERNEL AST ADDRESS
	S	DUETIME,,L		;DUETIME FOR WAITING LOCKS
	F	CPLASTADR,L		;ADDRESS OF COMPLETION AST ROUTINE
	F	BLKASTADR,L		;ADDRESS OF BLOCKING AST ROUTINE
	F	LKSB,L			;ADDRESS OF LOCK STATUS BLOCK
	F	FLAGS,W			;USER SPECIFIED FLAGS
	F	STATUS,W		;INTERNAL STATUS
		V<
		DCPLAST,,,M		; DELIVER COMPLETION AST
		DBLKAST,,,M		; DELIVER BLOCKING AST
		ASYNC,,,M		; REQUEST COMPLETED ASYNCHRONOUSLY
		BLKASTQED,,,M		; BLOCKING AST HAS BEEN QUEUED
		TIMOUTQ,,,M		; LKB IS ON TIMEOUT QUEUE
		>
	F	LKST1,L			;FIRST LOCK STATUS LONGWORD
	F	LKST2,L			;SECOND LOCK STATUS LONGWORD
	S	LKID			;LOCK ID
	L	ACBLEN			;LENGTH OF ACB PORTION OF LKB
	F	RQMODE,B		;REQUEST MODE
	F	GRMODE,B		;GRANTED MODE
	F	STATE,B			;LOCK STATE
	K	GRANTED,1		; GRANTED STATE
	K	CONVERT,0		; CONVERSION STATE
	K	WAITING,-1		; WAITING STATE
	F	EFN,B			;EVENT FLAG NUMBER
	F	SQFL,L			;STATE QUEUE FORWARD LINK
	F	SQBL,L			;STATE QUEUE BACKWARD LINK
	F	OWNQFL,L		;OWNER QUEUE FORWARD LINK
	F	OWNQBL,L		;OWNER QUEUE BACKWARD LINK
	F	PARENT,L		;ADDRESS OF PARENT LKB
	F	REFCNT,L		;SUB LKB REFERENCE COUNT
	F	RSB,L			;ADDRESS OF OWNER RSB
	L	LENGTH			;LENGTH OF LKB
	E

;+
; LOG - LOGICAL NAME BLOCK
;
; THERE IS ONE LOGICAL NAME BLOCK FOR EACH LOGICAL NAME ASSIGNMENT IN A
; SYSTEM. LOGICAL NAME BLOCKS CAN BE LINKED INTO ONE OF THREE TABLES:
;	1. A PER PROCESS TABLE.
;	2. A GROUP WIDE TABLE.
;	3. THE SYSTEM WIDE TABLE.
;-
 
	$STRUCT	LOG
 
	F	LTFL,L			;LOGICAL TABLE FORWARD LINK
	F	LTBL,L			;LOGICAL TABLE BACKWARD LINK
	F	SIZE,W			;SIZE OF LOG IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR LOG
	F	TABLE,B			;LOGICAL NAME TABLE TYPE
	F	GROUP,W			;CREATOR GROUP NUMBER
	F	AMOD,B			;ACCESS MODE OF CREATOR
	F	,B			;SPARE BYTE
	F	MBXUCB,L		;MAILBOX UCB ADDRESS
	L	LENGTH			;LENGTH OF FIXED PART OF LOG
	F	NAME,T,0		;START OF LOGICAL NAME
 
;
; LOGICAL NAME TABLE NUMBERS
;
 
	C	SYSTEM,0		;SYSTEM NAME TABLE
	C	GROUP,1			;GROUP NAME TABLE
	C	PROCESS,2		;PROCESS NAME TABLE
 
;
; MAXIMUM LENGTH OF LOGICAL NAME STRING
;
 
	C	NAMLENGTH,64		;MAXIMUM LENGTH OF LOGICAL NAME STRING
 
	E
;
;	Version	'V03-004'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from M to P.  That is, all control blocks from MAA to PZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-004	RLRV3A2		Robert L. Rappaport	15-Apr-1982
;		Correct MSCPdef to contain MSCP$K_OP_ACPTH attention
;		message opcode.
;
;	V03-003	KTA0095		Kerbey T. Altmann	12-Apr-1982
;		Add new field to PDT.
;
;	V03-002	RLRV3A1		Robert L. Rappaport	5-Apr-1982
;		Add Device Class and Controller Model definitions to
;		$MSCPDEF.
;
;	V03-001	LJK0147		Lawrence J. Kenah	16-Mar-1982
;		Change name of PFL$W_RESERVED to PFL$W_ERRORCNT. This cell
;		is used by the swapper to count bad blocks that are never
;		deallocated.
;
;	V02-026	NPK2015		N. Kronenberg		17-Feb-1982
;		Add counters release flag to PDT flags.  Renamed
;		PDT$L_DGHDRSZ to PDT$L_DGOVRHD
;
;	V02-025	LJK0132		Lawrence J. Kenah	15-Feb-1982
;		Add saved end-of-file block to $MMGDEF.
;
;	V02-024	HRJ0053		Herb Jacobs		09-Feb-1982
;		Add an internal cluster size cell to the page file control
;		block to allow variable size allocation requests for each
;		pagefile.
;
;	V02-023	NPK2013		N. Kronenberg		31-Jan-1982
;		Added to $PDTDEF:  more SCS vectors, read counters
;		context.  Removed pointer to FQDT from PDT.  In $PBDEF
;		changed port type from word to longwd and added
;		cable and path status bytes.
;
;	V02-022	TMH0022		Tim Halvorsen		8-Jan-1982
;		Add message flags byte to PQB
;
;	V02-021	RLRMSCP1	Robert L. Rappaport	6-Jan-1982
;		Minor spelling fixups to MSCP definition and addition
;		of MSCP$K_MXCMDLEN symbol.
;
;	V02-020	SPF0055		Steve Forgey		02-Jan-1982
;		Add image working set peak check flag to PHD.
;
;	V02-019	ACG0251		Andrew C. Goldstein,	30-Dec-1981  16:18
;		Add default file protection to PQB
;
;	V02-018	NPK2009		N. Kronenberg		29-Dec-1981
;		Added VC/PWR_FAIL states and CDT list flink to
;		$PBDEF.  Added msg/dg header sizes to $PDTDEF.
;
;	V02-017	KTA0054		Kerbey T. Altmann	23-Dec-1981
;		Add new field to PCB for IPAST.
;
;	V02-016	LJK0086		Lawrence J. Kenah	13-Nov-1981
;		Add SWPFILFUL bit to page file control block flag.
;
;	V02-015	LJK0085		Lawrence J. Kenah	13-Nov-1981
;		Add extra CPU time limit field to process header.
;
;	V02-014	RLRMSCP		Robert L. Rappaport	23-Oct-1981
;		Brought the MSCP definition up to current specs.
;
;	V02-013	LJK0068		Lawrence J. Kenah	17-Sep-1981
;		Add AUTHPRI field to process header to allow $SETPRI to
;		reset nonprivileged process back to initial priority.
;
;	V02-012	LJK0066		Lawrence J. Kenah	11-Sep-1981
;		Add symbolic constants to $PRMDEF that define largest
;		allowed string sizes for parameter and unit names.
;
;	V02-011	LJK0046		Lawrence J. Kenah	19-Aug-1981
;		Expand the default directory string area in the PQB to
;		84 bytes to contain the largest default directory
;		string currently allowed. Add symbolic constant that
;		defines the size of the maximum directory string.
;
;	V02-010	LJK0044		Lawrence J. Kenah	14-Aug-1981
;		Alter the page file control block layout (once more)
;		to allow PFLs to be dynamically allocated.
;
;	V02-009	MIR0009		Michael I. Rosenblum	7-Aug-1981
;		Added PRM$M_SCS for SYSGEN.  Changed the length
;		of PRM$M_ from a word to a long word.
;
;	V02-008	NPK2008		N. Kronenberg		4-Aug-1981
;		Added new SCS entry offsets to PDT:  
;		PDT$L_DEALRGMSG/QUEUEMDGS/SNDCNTMSG.
;
;	V02-007	LJK0041		Lawrence J. Kenah	4-Aug-1981
;		Added SWAPSIZE field to Process Quota Block.
;
;	V02-006	HRJ0025		Herb Jacobs		31-Jul-1981
;		Upgrade page file control block.
;
;	V02-005	DMW0007		David Michael Walp	31-Jul-1981
;		Added OVERIDE bit to MVL.
;
;	V02-004	JLV0053		Jake VanNoy		30-Jul-1981
;		Added TTY bit to PRMDEF.
;
;	V02-003 DMW0006		David Michael Walp	30-Jul-1981
;		Changed spare byte in MVL to hold relavent privileges
;		( needed to override protection ) of the user at mount time.
;
;	V02-002	LJK0019		Lawrence J. Kenah	30-Jul-1981
;		Add flag to PHD flags word that prevents an access
;		violation from being reported by the pager when one
;		process incurs a page fault while accessing the
;		process header of another process.
;
;**


;+
; MASSBUS ADAPTER REGISTER OFFSET DEFINITIONS
;-
 
	$STRUCT	MBA
 
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V<			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8   		; ADAPTER CODE FIELD
		,13   			; RESERVED BITS
		CSR_OT,,,M   		; OVER TEMPERATURE
		CSR_PU,,,M   		; ADAPTER POWER UP
		CSR_PD,,,M   		; ADAPTER POWER DOWN
		,2   			; RESERVED BITS
		CSR_XMFLT,,,M   	; TRANSMITTER FAULT
		CSR_MT,,,M   		; MULTIPLE TRANSMITTERS
		,1   			; RESERVED BIT
		CSR_URD,,,M   		; UNEXPECTED READ DATA
		CSR_WS,,,M   		; WRITE SEQUENCE DATA
		CSR_PE,,,M 		; SBI PARITY ERROR
		>			;
	F	CR,L			;CONTROL REGISTER
		V<			; CONTROL REGISTER BIT DEFINITIONS
		CR_INIT,,,M   		; ADAPTER INITIALIZATION
		CR_ABORT,,,M   		; ABORT OPERATION
		CR_IE,,,M		; INTERRUPT ENABLE
		>			;
	F	SR,L			;STATUS REGISTER
		V<			; STATUS REGISTER BIT DEFINITIONS
		SR_RDTO,,,M 		; READ DATA TIMEOUT
		SR_ISTO,,,M   		; INTERFACE SEQUENCE TIMEOUT
		SR_RDS,,,M   		; READ DATA SUBSTITUTE
		SR_ERCONF,,,M   	; ERROR CONFIRMATION
		SR_INVMAP,,,M   	; INVALID MAP REGISTER
		SR_MAPPE,,,M   		; MAP PARITY ERROR
		SR_MDPE,,,M   		; MASSBUS DATA PARITY ERROR
		SR_MBEXC,,,M   		; MASSBUS EXCEPTION
		SR_MXF,,,M   		; MISSED TRANSFER ERROR
		SR_WCKLWR,,,M   	; WRITE CHECK ERROR LOWER BYTE
		SR_WCKUPR,,,M   	; WRITE CHECK ERROR UPPER BYTE
		SR_DLT,,,M   		; DATA LATE ERROR
		SR_DTABT,,,M   		; DATA TRANSFER ABORTED
		SR_DTCOMP,,,M   	; DATA TRANSFER COMPLETE
		SR_SPE,,,M		; SILO PARITY ERROR
		,1   			; RESERVED BITS
		SR_ATTN,,,M   		; MASSBUS ATTENTION
		SR_MCPE,,,M   		; MASSBUS COMTROL PARITY ERROR
		SR_NED,,,M   		; NONEXISTENT DRIVE
		SR_PGE,,,M   		; PROGRAM ERROR
		,3			; RESERVED BITS
		SR_CBHUNG,,,M		; CB HUNG
		,5   			; RESERVED BITS
		SR_CRD,,,M   		; CORRECTED READ DATA
		SR_NRCONF,,,M   	; NO RESPONSE CONFIRMATION
		SR_DTBUSY,,,M 		; DATA TRANSFER BUSY
		>			;
	C< ,$M_				; ERROR BITS
	ERROR,MBA$M_SR_RDTO!-		; READ DATA TIMEOUT
		MBA$M_SR_ISTO!-		; INTERFACE SEQUENCE TIMEOUT
		MBA$M_SR_RDS!-		; READ DATA SUBSTITUTE
		MBA$M_SR_ERCONF!-   	; ERROR CONFIRMATION
		MBA$M_SR_INVMAP!-   	; INVALID MAP REGISTER
		MBA$M_SR_MAPPE!-   	; MAP PARITY ERROR
		MBA$M_SR_MDPE!-		; MASSBUS DATA PARITY ERROR
		MBA$M_SR_MBEXC!-   	; MASSBUS EXCEPTION
		MBA$M_SR_MXF!- 		; MISSED TRANSFER ERROR
		MBA$M_SR_WCKLWR!-   	; WRITE CHECK ERROR LOWER BYTE
		MBA$M_SR_WCKUPR!-   	; WRITE CHECK ERROR UPPER BYTE
		MBA$M_SR_DLT!- 		; DATA LATE ERROR
		MBA$M_SR_SPE!-		; SILO PARITY ERROR
		MBA$M_SR_DTABT!-   	; DATA TRANSFER ABORTED
		MBA$M_SR_MCPE!-		; MASSBUS COMTROL PARITY ERROR
		MBA$M_SR_NED!- 		; NONEXISTENT DRIVE
		MBA$M_SR_PGE  		; PROGRAM ERROR
	>
	F	VAR,L			;VIRTUAL ADDRESS REGISTER
	F	BCR,L			;BYTE COUNT REGISTER
	F	DR,L			;DIAGNOSTIC REGISTER
	F	SELMR,L			;SELECTED MAP REGISTER
	F	,B,996			; VALUE IS 1024-<4*7>
	F	ERB,L			;BASE ADDRESS OF EXTERNAL REGISTERS
		V<			; BASE ADDRESS FIELD DEFINITIONS
		,7			; REGISTER OFFSET ADDRESS BITS
		ERB_UNIT,3		; DRIVE UNIT NUMBER
		>			;
	F	,B,12			; DRIVE REGISTER ADDRESS SPACE
	F	AS,L			;ATTENTION SUMMARY REGISTER
	F	,B,1004			; VALUE IS 2048-.
					; TO POSITION TO 2048
	F	MAP,L,256		;MAP REGISTERS
 
	E

;+
; SHARED MEMORY MAILBOX CONTROL BLOCK DEFINITIONS
;
; THERE IS ONE MAILBOX CONTROL BLOCK FOR EACH MAILBOX IN SHARED
; MEMORY.  ANY PROCESSOR THAT WANTS TO ACCESS THE MAILBOX CREATES
; A UCB TO CONTROL ACCESS TO THE MAILBOX.
;-

	$STRUCT	MBX

	F	MSG,Q			;MESSAGE QUEUE LISTHEAD
	F	FLAGS,B			;FLAGS
		V<M			; FLAG DEFINTIONS
		ALLOC			;  MAILBOX ALLOCATED
		VALID			;  MAILBOX INITIALIZED AND USEABLE
		DELPEND			;  DELETE PENDING
		QUOTALCK		;  QUOTA/COUNT MODIFICATION LOCK
		>			;
	F	CREATPORT,B		;PORT NUMBER OF MAILBOX CREATOR
	F	UNIT,W			;MAILBOX UNIT NUMBER
	F	REF,W			;REFERENCE FLAGS (1 BIT/PORT)
	F	READER,W		;WAITING READER (1 BIT/PORT)
	F	READAST,W		;WAITING READ AST (1 BIT/PORT)
	F	WRITAST,W		;WAITING WRITE AST (1 BIT/PORT)
	F	MAXMSG,W		;MAXIMUM MESSAGE SIZE
	F	MSGCNT,W		;CURRENT NUMBER OF MESSAGES
	F	BUFFQUO,W		;BUFFER QUOTA
	F	PROT,W			;PROTECTION MASK
	F	OWNUIC,L		;OWNER UIC
	F	NAME,T,16		;MAILBOX NAME (COUNTED STRING)
; *** THE LENGTH OF THIS STRUCTURE MUST BE AN EVEN MULTIPLE OF 8 ***
; *** BECAUSE THE MESSAGE QUEUE HEADER MUST BE QUADWORD ALIGNED ***
	L	LENGTH			;LENGTH OF STRUCTURE

	E

;+
; MACHINE CHECK ERROR RECOVERY BLOCK MASK BIT DEFFINITIONS
; BITS USED TO FILTER AND TEST FOR ERROR TYPES
;-
	$STRUCT	MCHK
 
	V <M				;
		LOG			;INHIBIT ERROR LOGGIN FOR THE ERROR
		MCK			;PROTECT AGAINST MACHINE CHECKS
		NEXM			;PROTECT AGAINST NON-EXISTENT MEMORY
		UBA			;PROTECT AGAINST UBA ADAPTER ERROR INTRPT
	>
	E
 

;+
; Define the frame pointer offsets that determine what the impure area
; used by the memory management system services looks like.
;-
	$STRUCT	MMG

	-F	,B,0			; ending address of negated structure
					; (needed to obtain length definition)
	L	LENGTH			; size of scratch area

	-F	EFBLK			; stored end-of-file block from WCB
	-F	VFYFLAGS		; verified section flags and maximum
					;  access mode for writing
	-F	SVSTARTVA		; saved starting virtual address
	-F	PAGESUBR		; address of per page subroutine
	-F	SAVRETADR		; saved return address range
	-F	CALLEDIPL		; caller's IPL
	-F	MAXACMODE		; maximized read access mode

	V	<			; define bit fields in MAXACMODE field
		,8			; no flags in first byte
		CHGPAGFIL,,,M		; charge page file for this PTE
		DELGBLDON,,,M		; global pages in this range 
					;  already deleted
		>

	E

;+
; MOUNTED VOLUME LIST ENTRY. ONE SUCH ENTRY APPEARS IN THE PROCESS MOUNTED
; VOLUME LIST FOR EACH VOLUME MOUNTED BY THE PROCESS AS /SHARE OR /NOSHARE.
; IN ADDITION, EACH VOLUME MOUNTED /SYSTEM OR /GROUP HAS AN ENTRY IN THE
; SYSTEM WIDE MOUNTED VOLUME LIST.
;-

	$STRUCT	MTL
	F MTLFL				; FORWARD LIST POINTER
	F MTLBL				; BACK LIST POINTER
	F SIZE,W			; STRUCTURE SIZE IN BYTES
	F TYPE,B			; STRUCTURE TYPE CODE
	F STATUS,B			; STATUS BYTE
	V<
		VOLSET			; ENTRY IS FOR A VOLUME SET
	>
	F UCB				; POINTER TO DEVICE UCB
	F LOGNAME			; POINTER TO ASSOCIATED LOGICAL NAME
	F ,L				; RESERVED LONGWORD
	L LENGTH			; LENGTH OF STRUCTURE
	E

;+
; MUTEX DEFINITIONS
;-
	$STRUCT	MTX

	F	,L
		V <			; BIT DEFINITIONS
		,16
		WRT			; WRITE PENDING OR IN PROGRESS
		>			;
	S	OWNCNT,,W		;OWNERSHIP COUNT
	S	STS,,W			;STATUS BITS

	E

;+
; MULTIPORT MEMORY (MA780/MA750) ADAPTER REGISTER OFFSET DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;
 
	$STRUCT	MPM
 
	C	PORTS,4			;MAXIMUM NUMBER OF PORTS PER MEMORY
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V<M			; (OVERLAPPING DEFINTIONS)
		CSR_PORT,2		; PORT NUMBER
		>			;
		V<M			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8   		; ADAPTER CODE FIELD
		,14   			; RESERVED BITS
		CSR_PU   		; ADAPTER POWER UP
		CSR_PD   		; ADAPTER POWER DOWN
		,2   			; RESERVED BITS
		CSR_XMFLT   		; TRANSMITTER FAULT
		CSR_MT   		; MULTIPLE TRANSMITTERS
		CSR_IS			; INTERLOCK SEQUENCE
		,1   			; RESERVED BIT
		CSR_WS   		; WRITE SEQUENCE DATA
		CSR_PE 			; SBI PARITY ERROR
		>			;
	C	CSR_TYPE,64		; MULTIPORT ADAPTER TYPE CODE
	F	CR,L			;CONTROL REGISTER
		V<M			; CONTROL REGISTER BIT DEFINITIONS
		CR_MIE   		; MASTER INTERRUPT ENABLE
		CR_EIE			; ERROR INTERRUPT ENABLE
		,22			;
		CR_ERRS,8		; PORT INTERFACE ERRORS
		>			;
	F	SR,L			;STATUS REGISTER
		V<M			; STATUS REGISTER DEFINITIONS
		,1			; (UNUSED)
		SR_EIE			; ERROR INTERRUPT ENABLE
		,11			;
		SR_SS			; SINGLE STEP
		SR_IDL			; INVALIDATE DATA LOST IN MPC
		SR_IT			; INTERLOCK TIMEOUT
		,12			;
		SR_AGP			; ADMI GRANT PARITY ERROR
		SR_XDF			; XMIT DURING FAULT
		SR_MXF			; MULTIPLE XMITTER FAULT
		SR_ACA			; ADMI COMMAND ABORT
		>			;
	F	INV,L			;INVALIDATION CONTROL REGISTER
		V<M			; INV REGISTER DEFINITIONS
		INV_ID,16		;  CACHED DEVICE NEXUS ID'S
		INV_MEMSZ,3		;  MEMORY SIZE (256KB BOARDS)
		,1			;  (UNUSED)
		INV_STADR,11		;  STARTING SBI ADDR OF MEMORY
		INV_CACHF		;  CACHED FORCE (IGNORE ID'S)
		>
	F	ERR,L			;ARRAY ERROR REGISTER
		V<M			; ARRAY ERROR REGISTER DEFINITIONS
		,28			;
		ERR_ELR			; ERROR LOG REQUEST
		ERR_HI			; HIGH ERROR RATE
		ERR_ICRD		; INHIBIT CRD ERRORS
		ERR_IMP			; INVALIDATE MAP PARITY ERROR
		>			;
	F	CSR0,L			;CONFIGURATION STATUS REGISTER 0
		V<			; CSR0 DEFINITIONS
		,4			;
		CSR0_POW,4		;  PER PORT POWER STATUS
		CSR0_ERR,4		;  PER PORT ERROR STATUS
		CSR0_ONL,4		;  PER PORT ONLINE STATUS
		>			;
	F	CSR1,L			;CONFIGURATION STATUS REGISTER 1
		V<M			; CSR1 DEFINITIONS
		,10			;
		CSR1_MIA		; MULTIPLE INTERLOCK ACCEPTED
		>			;
	F	MR,L			;MAINTENANCE REGISTER
		V<			; MAINTENANCE REGISTER BIT DEFINITIONS
		,14			;  (ERROR BITS)
		MR_UNIT,2		;  MEMORY UNIT NUMBER
		>
	F	IIR,L			;INTERPORT INTERRUPT REQUEST REGISTER
		V<			; INTERRUPT REQUEST BIT DEFINITIONS
		IIR_STS,16		;  STATUS BITS (WRITE TO CLEAR)
		IIR_CTL,16		;  CONTROL BITS (WRITE TO SET STATUS BITS)
		>
	F	IIE,L			;INTERPORT INTERRUPT ENABLE REGISTER
		V<			; INTERRUPT ENABLE BIT DEFINITIONS
		IIE_STS,16		;  CONTROL BITS (WRITE TO CLEAR)
		IIE_CTL,16		;  STATUS BITS (WRITE TO SET STATUS BITS)
		>

	E


;+
; MSCP (MASS STORAGE CONTROL PROTOCOL) DEFINITIONS.  THESE DEFINITIONS
; DESCRIBE THE FORMAT OF THE COMMAND & STATUS PACKETS EXCHANGED UNDER
; MSCP BETWEEN HOST AND CONTROLLERS.
;-
	$STRUCT	MSCP
;
;	Generic command packet
;
	F	CMD_REF			; Command reference number
	F	UNIT,W			; Unit number
	F	,W			; Reserved
	F	OPCODE,B		; Opcode
	M	2
	F	,B			; Reserved
	F	MODIFIER,W		; Command modifiers
	M	1
	F	BYTE_CNT		; Byte count
	F	BUFFER,B,12		; Buffer descriptor
	F	LBN			; Logical block number
;
;	ABORT and GET COMMAND STATUS
;
	P	1
	F	OUT_REF			; Outstanding reference number
;
;	ONLINE and SET UNIT CHARACTERISTICS
;
	P	1
	F	,W			; Reserved
	F	UNT_FLGS,W		; Unit flags
	F	,B,12			; Reserved
	F	DEV_PARM,L		; Device Dependent Parameters
	F	SHDW_UNT,W		; Shadow unit
	F	COPY_SPD,W		; Copy speed
	L	MXCMDLEN		; Maximum length MSCP command packet
;
;	REPLACE
;
	P	1
	F	RBN			; Replacement block number
;
;	SET CONTROLLER CHARACTERISTICS
;
	P	1
	F	VERSION,W		; MSCP version
	F	CNT_FLGS,W		; Controller flags
	F	HST_TMO,W		; Host timeout
	F	,W			; Reserved
	F	TIME,Q			; Quadword time and date
;
;	Generic end packet
;
	P	2
	F	FLAGS,B			; End message flags
	F	STATUS,W		; Status
	F	,B,16			; (Byte count) and reserved
	F	FRST_BAD		; First bad block
;
;	GET COMMAND STATUS
;
	P	1
	F	,L			; Outstanding reference number
	F	CMD_STS,L		; Command status
;
;	GET UNIT STATUS
;
	P	1
	F	MULT_UNT,W		; Multi-unit code
	F	,W			; Unit flags
	F	,L			; Host id
	F	UNIT_ID,Q		; Unit id
	F	MEDIA_ID		; Media type id
	F	,W			; Shadow unit
	F	SHDW_STS,W		; Shadow status
	F	TRACK,W			; Track size
	F	GROUP,W			; Group size
	F	CYLINDER,W		; Cylinder size
	F	,W			; Reserved
	F	RCT_SIZE,W		; RCT table size
	F	RBNS,B			; RBN/track
	F	RCT_CPYS,B		; RCT size
	L	LEN
;
;	ONLINE, SET UNIT CHARACTERISTICS, and AVAILABLE ATTN
;
	P	1
	F	,B,24
	F	UNT_SIZE		; Unit size
	F	VOL_SER			; Volume serial number
;
;	SET CONTROLLER CHARACTERISTICS
;
	P	1
	F	,W			; MSCP version
	F	,W			; Controller flags
	F	CNT_TMO,W		; Controller timeout
	F	,W			; Reserved
	F	CNT_ID,Q		; Controller id
;
;	STATUS CODES
;
	K	<
		ST_SUCC			; Success
		ST_ICMD			; Invalid command
		ST_ABRTD		; Command aborted
		ST_OFFLN		; Unit-offline
		ST_AVLBL		; Unit-available
		ST_MFMTE		; Media format error
		ST_WRTPR		; Write protected
		ST_COMP			; Compare error
		ST_DATA			; Data error
		ST_HSTBF		; Host buffer access error
		ST_CNTLR		; Controller error
		ST_DRIVE		; Drive error
		ST_DIAG,31		; Message from internal diagnostic
		ST_SBCOD,32		; Subcode multiplier
		>

	V	<M
		ST_MASK,5		; Status/event code mask
		>
;
;	STATUS SUBCODES and Subcode bit meanings
;

;
;	"Success" sub-code values
;
	K	<
		SC_NORML,0		; Normal
		SC_SDIGN,1		; Spin Down IGNored
		SC_STCON,2		; STill CONnected
		SC_DUPUN,4		; DUPlicate UNit number
		SC_ALONL,8		; ALready ONLine
		SC_STONL,16		; STill ONLine
		>
	V	<M
		,5			; Major status code field
		SC_SDIGN		; Spin Down IGNored
		SC_STCON		; STill CONnected
		SC_DUPUN		; DUPlicate UNit number
		SC_ALONL		; ALready ONLine
		SC_STONL		; STill ONLine
		>
;
;	"Invalid Command" sub-code values
;
	K	<
		SC_INVML,0		; INValid Message Length
		>
;
;	"Unit Offline" sub-code values
;
	K	<
		SC_UNKNO,0		; UNKoNOwn unit or online to another controller
		SC_NOVOL,1		; NO VOLume mounted or drive disabled (RUN/STOP)
		SC_INOPR,2		; unit is INOPeRative
;		SC_DUPUN,4		; Duplicate Unit Number
		SC_UDSBL,8		; Unit disabled by field service or diagnostic
		>
	V	<M
		,5
		SC_NOVOL		; NO VOLume mounted or drive disabled (RUN/STOP)
		SC_INOPR		; unit is INOPeRative
		,1			; Duplicate Unit Number
		SC_UDSBL		; Unit disabled by field service or diagnostic
		>
;
;	"Write Protected" sub-code values
;
	K	<
		SC_SOFTW,128		; Unit is SOFTWare protected
		SC_HARDW,256		; Unit is HARDWare protected
		>
	V	<M
		,12
		SC_SOFTW		; Unit is SOFTWare protected
		SC_HARDW		; Unit is HARDWare protected
		>
;
;	"Data Error" sub-code values
;
	K	<
		SC_FRCER,0		; FoRCed ERror
		>
;
;	MODIFIERS (Bit flags)
;

;
;	Generic Command Modifiers
;
	V	<M
		,4
		MD_WRSEQ		; Write shadow set 1 unit at a time
		MD_WBKVL		; Write-back (volatile)
		MD_WBKNV		; Write-back (non-volatile)
		MD_SSHDW		; Suppress Shadowing
		MD_SEREC		; Suppress error recovery
		MD_SECOR		; Suppress error correction
		MD_SCCHL		; Suppress caching (low speed)
		MD_SCCHH		; Suppress caching (high speed)
		MD_ERROR		; Force error
		MD_CLSEX		; Clear serious exception
		MD_COMP			; Compare
		MD_EXPRS		; Express request
		>
;
;	AVAILABLE Command Modifiers
;
	V	<M
		MD_SPNDW		; Spin-down
		MD_ALLCD		; All Class Drivers
		>
;
;	FLUSH Command Modifiers
;
	V	<M
		MD_FLENU		; Flush entire unit
		MD_VOLTL		; Volatile Only
		>
;
;	GET UNIT STATUS Command Modifiers
;
	V	<M
		MD_NXUNT		; Next unit
		>
;
;	ONLINE Command Modifiers
;
	V	<M
		MD_RIP			; Allow self-destruct
		MD_IGNMF		; Ignore media format error
		>
;
;	ONLINE and SET UNIT CHARACTERISTICS Command Modifiers
;
	V	<M
		,2
		MD_STWRP		; Enable Set Write Protect
		MD_CLWBL		; Clear Write-Back Data Lost
		MD_SHDSP		; Shadow Unit Specified
		>
;
;	REPLACE Command Modifiers
;
	V	<M
		MD_PRIMR		; Primary replacement block
		>
;
;	Unit flags
;
	V	<M
		UF_CMPRD		; Compare reads
		UF_CMPWR		; Compare writes
		UF_576			; 576 byte sectors
		,3
		UF_WBKNV		; Write-back (non-volatile)
		UF_RMVBL		; Removeable media
		,2
		UF_SCCHL		; Suppress caching (Low speed)
		UF_SCCHH		; Suppress caching (High speed)
		UF_WRTPS		; Write protect (software)
		UF_WRTPH		; Write protect (hardware)
		UF_INACT		; Inactive shadow set unit
		UF_REPLC		; Controller initiated bad block repl
		>
;
;	Controller flags
;
	V	<M
		CF_576			; 576 byte sectors
		CF_SHADW		; Shadowing
		CF_MLTHS		; Multi-Host
		,1
		CF_THIS			; Enable this host's error log
		CF_OTHER		; Enable other host's error log
		CF_MISC			; Enable miscellaneous error log
		CF_ATTN			; Enable attention messages
		,7
		CF_REPLC		; Controller Initiated Bad Block Replacement
		>
;
;	End packet flags
;
	V	<M
		,4
		EF_SEREX		; Serious exception
		EF_ERLOG		; Error log generated
		EF_BBLKU		; Bad block unreported
		EF_BBLKR		; Bad block reported
		>
;
;	Opcodes
;
	K<
		OP_ABORT,1		; Abort
		OP_GTCMD,2		; Get Command Status
		OP_GTUNT,3		; Get Unit Status
		OP_STCON,4		; Set Controller Characteristics
		OP_SEREX,7		; Serious exception end packet
		OP_AVAIL,8		; Available
		OP_ONLIN,9		; Online
		OP_STUNT,10		; Set Unit Characteristics
		OP_DTACP,11		; Determine Access Paths
		OP_ACCES,16		; Access
		OP_CMPCD,17		; Compare Controller Data
		OP_ERASE,18		; Erase
		OP_FLUSH,19		; Flush
		OP_REPLC,20		; Replace
		OP_COMP,32		; Compare Host Data
		OP_READ,33		; Read
		OP_WRITE,34		; Write
		OP_AVATN,64		; AVAILABLE attention Message
		OP_DUPUN,65		; Duplicate Unit Number attn Message
		OP_ACPTH,66		; Access Path Attn Message
		OP_END,128		; End packet
	>
;
;	Opcode Bit Meanings
;
	V	<
		,6
		OP_ATTN			; Bit meaning Attention message
		OP_END			; Bit meaning End message
		>
;
;	Controller and Unit identifier Classes. (Device Class)
;
	K<
		CL_CNTRL,1		; MSCP Controller
		CL_DISK,2		; Disk Class Device
		CL_TAPE,3		; Tape Class Device
	>
;
;	MSCP Controller Model
;
	K<
		CM_HSC50,1		; HSC50
		CM_UDA50,2		; UDA50
		CM_RC25,3		; AZTEC
		CM_EMULA,4		; Emulator
		CM_TU81,5		; TU81
		CM_UDA52,6		; UDA52
	>
	E


;+
; MAGNETIC TAPE VOLUME LIST
; THIS STRUCTURE DESCRIBES THE VOLUMES IN A VOLUME SET
;-
	$STRUCT	MVL
	M	1		
	F	VCB		;ADDRESS OF VCB
	F	,L		;SPARE
	F	SIZE,W		;SIZE OF STRUCTURE
	F	TYPE,B		;TYPE OF STRUCTURE
	F	NVOLS,B		;NUMBER OF VOLUMES IN VOLUME SET
	F	SET_ID,T,6	;FILE SET ID FOR THE VOLUME SET
	F	VOL_ACC,B	;VOLUME ACCESSIBILTY CHARACTER DEFAULT
	F	MOU_PRV,B	;USER'S MOUNT TIME PRIVILEGES
		V<
		VOLPRO		;VOLPRO PRIVILEGE
		OVRPRO		;OVERRIDE PRIVILEGE (BYPASS,SYSPRV,VOLPRO)
		>
	L	FIXLEN		;LENGTH OF FIXED AREA OF STRUCTURE

; THE FOLLOWING STRUCTURE IN REPEATED IN MVL FOR EACH REEL IN VOLUME SET
	P	1
	F	VOLLBL,T,6	;VOLUME LABEL
	F	RVN,B		;RELATIVE UNIT NUMBER
	F	STATUS,B	;STATUS OF VOLUME
		V<
		MOUNTED		;REEL IS MOUNTED
		UNUSED		;IS THIS ENTRY IN USE
		OVERIDE		;CAN OVERRIDE PROTECTION ON THIS REEL
		>
	L	LENGTH		;LENGTH OF STRUCTURE
	E


;++
;
; Structure for network proxy login file, NETUAF.DAT
;
;--

	$STRUCT NAF
	F	REMNAME,T,18	;Combined nodename and remote username
	S	NODE,,T,6	;Node name field
	S	REMUSER,,T,12	;Remote username field
	F	LOCALUSER,T,12	;Local username field
	L	LENGTH		;Length of record
	E



;+
; NEXUS DEVICE AND ADAPTER TYPE CODES
;-

	$STRUCT	NDT

	C< ,$_				;DEFINE CONSTANT TYPE CODES
	MEM4NI,8			;MEMORY, 4K NOT INTERLEAVED
	MEM4I,9				;MEMORY, 4K INTERLEAVED
	MEM16NI,+^X10			;MEMORY, 16K NOT INTERLEAVED
	MEM16I,+^X11			;MEMORY, 16K INTERLEAVED
	MB,+^X20			;MBA 0,1,2, OR 3
	UB0,+^X28			;UB ADAPTER OR INTERCONNECT 0,
	UB1,+^X29			; 1,
	UB2,+^X2A			; 2,
	UB3,+^X2B			; OR 3
	CI,+^X38			;CI780'S, CI750'S
	MPM0,+^X40			;MULTIPORT MEMORY 0,
	MPM1,+^X41			; 1,
	MPM2,+^X42			; 2,
	MPM3,+^X43			; OR 3
	DR32,+^X30			;DR32 0,1,2,...
	MEM64NIL,+^X68			;64K NON-INTERLEAVED MEM, LOWER CONTROLLER
	MEM64EIL,+^X69			;64K EXTERNALLY INTERLEAVED MEM, LOWER
	MEM64NIU,+^X6A			;64K NON-INTERLEAVED MEM, UPPER CONTROLLER
	MEM64EIU,+^X6B			;64K EXTERNALLY INTERLEAVED MEM, UPPER
	MEM64I,+^X6C			;64K INTERNALLY INTERLEAVED MEMORY
	>
	E
;+
;
; FORMAT OF THE FILE NAME BLOCK. THE FILE NAME BLOCK IS USED AS AN INTERNAL
; INTERFACE TO THE DIRECTORY SCAN ROUTINE, AND IS ALSO THE FORMAT OF A
; DIRECTORY RECORD.
;
;-


	$STRUCT	NMB
	F FID,W,3	; FILE ID
	S FID_NUM,0,W	; FID - FILE NUMBER
	S FID_SEQ,2,W	; FID - FILE SEQUENCE NUMBER
	S FID_RVN,4,W	; FID - RELATIVE VOLUME NUMBER
	F NAME,W,3	; FILE NAME (RAD-50)
	F TYPE,W	; FILE TYPE (RAD-50)
	F VERSION,W,,S	; VERSION NUMBER
	L DIRENTRY	; LENGTH OF DIRECTORY ENTRY

	F FLAGS,W	; NAME STATUS FLAGS
	V<M
		,3
		ALLVER		; MATCH ALL VERSIONS
		ALLTYP		; MATCH ALL TYPES
		ALLNAM		; MATCH ALL NAMES
		,2
		WILD		; WILD CARDS IN FILE NAME
		NEWVER		; MAXIMIZE VERSION NUMBER
		SUPERSEDE	; SUPERSEDE EXISTING FILE
		FINDFID		; SEARCH FOR FILE ID
		,2
		LOWVER		; LOWER VERSION OF FILE EXISTS
		HIGHVER		; HIGHER VERSION OF FILE EXISTS
	>
	F CONTEXT,W	; START POINT FOR NEXT FIND
	L LENGTH	; LENGTH OF NAME BLOCK
	E

;+
; PB - SCS PATH BLOCK
;
; THE PB HAS INFORMATION ABOUT THE PHYSICAL PATH TO ANOTHER
; SYSTEM IN A CLUSTER.  PATH BLOCKS TO THE SAME SYSTEM ARE
; LINKED TOGETHER TO THE SYSTEM BLOCK (SB).
;-

	$STRUCT	PB

	F	FLINK,L			;FWD LINK TO NEXT PB
	F	BLINK,L			;BACK LINK TO PREVIOUS PB
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR PB
	F	RSTATION,B,6		;REMOTE STATION ADDRESS
	F	STATE,W			;PATH STATE
					;STATE DEFINITIONS:
	C	<PB,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1
		CLOSED			; NEWLY CREATED PATHBLOCK
		ST_SENT			; START SENT
		ST_REC			; START RECEIVED
		OPEN			; OPEN PORT-PORT VIRTUAL CIRCUIT
		>			;
	C	VC_FAIL,<^X8000>	; VC FAILURE IN PROGRESS STATE
	C	PWR_FAIL,<^X4000>	; PWR FAIL RECOVERY IN PROGRESS STATE
	F	RPORT_TYP,L		;HARDWARE PORT TYPE CODE
		V <			;DEFINE PORT TYPE CODE SUBFIELDS:
		PORT_TYP,31		; HARDWARE PORT TYPE,
		DUALPATH,,,M		; 0/1 FOR SINGLE PATH/DUAL PATH PORT
		>			;
	F	RPORT_REV,L		;REMOTE PORT HW REV LEVEL
	F	RPORT_FCN,L		;REMOTE PORT FUNCTION MASK
	F	RST_PORT,B		;OWNING PORT WHICH RESET REMOTE PORT
	F	RSTATE,B		;REMOTE PORT STATUS:
		V <			; DEFINE STATUS FIELDS:
		MAINT,,,M		; 0/1 FOR MAINTENANCE MODE NO/YES
		STATE,2			; REMOTE PORT STATE:
		>			;
	C	<PB,$C_,0,1		; DEFINE REMOTE STATES, 0 ORIGIN
		UNINIT			; UNINITIALIZED,
		DISAB			; DISABLED
		ENAB			; ENABLED
		>			;
	F	RETRY,W			;START HANDSHAKE RETRY COUNT
	F	LPORT_NAME,T,4		;LOCAL PORT DEVICE NAME
	F	PDT,L			;ADDR OF PORT DESCRIPTOR TABLE FOR
					; LOCAL PORT
	F	CDTLST,L		;LINK TO FIRST CDT OVER THIS PATH
					; (0 IF NO CDT'S)
	F	WAITQFL,L		;SCS SEND MSG WAIT QUEUE FLINK
	S	SB,,L			;FORMATIVE SYSTEM BLOCK LINK
	F	WAITQBL,L		;SCS SEND MSG WAIT QUEUE BLINK
	S	DUETIME,,L		;START HANDSHAKE TIMER
	F	SCSMSG,L		;ADDR OF SCS MESSAGE BUFFER
	F	STS,W			;PATH BLOCK STATUS
		V <			;DEFINE STATUS BITS:
		TIM,,,M			; HANDSHAKE TIMEOUT IN PROGRESS
		>			;
	F	CBL_STS,B		;CABLE STATUS TO THE REMOTE
		V <			;DEFINE CABLE STATUS BITS:
		CUR_CBL,,,M		; 1/0 FOR CURRENT STATUS OK/BAD
		>			;
	F	P0_STS,B		;PATH 0 STATUS
	F	P1_STS,B		;PATH 1 STATUS
		V <			;DEFINE PATH STATUS BITS:
		CUR_PS,,,M		; 1/0 FOR CURRENT STATUS OK/BROKEN
		>			;
	F	,B,3			;RESERVED BYTES
	L	LENGTH			;LENGTH OF A PATH BLOCK

	E

;+
; DEFINE PERFORMANCE BUFFER HEADER
;-
 
	$STRUCT	PBH
 
	F	BUFRFL,L		;BUFFER FORWARD LINK
	F	BUFRBL,L		;BUFFER BACKWARD LINK
	F	SIZE,W			;SIZE OF PERFORMANCE DATA BUFFER
	F	TYPE,B			;DATA STRUCTURE TYPE
	F	MSGCNT,W		;COUNT OF MESSAGES IN BUFFER
	L	START			;START OF DATA AREA
	F	,B,499			;DATA AREA
	L	LENGTH			;LENGTH OF PERFORMANCE DATA BUFFER
 
	E

;+
; PCB DEFINITIONS
;-
 
	$STRUCT	PCB
 
	F	SQFL,L			;STATE QUEUE FORWARD LINK
	F	SQBL,L			;STATE QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR PCB
	F	PRI,B			;PROCESS CURRENT PRIORITY
	F	ASTACT,B		;ACCESS MODES WITH ACTIVE ASTS
	F	ASTEN,B			;ACCESS MODES WITH ASTS ENABLED
	F	MTXCNT,W		;COUNT OF MUTEX SEMAPHORES OWNED
	F	ASTQFL,L		;AST QUEUE FORWARD LINK(HEAD)
	F	ASTQBL,L		;AST QUEUE BACK LINK(TAIL)
	F	PHYPCB,L		;PHYSICAL ADDRESS OF HW PCB
	F	OWNER,L			;PID OF CREATOR
	F	WSSWP,L			;SWAP FILE DISK ADDRESS
	F	STS,L			;PROCESS STATUS FLAGS
		V <			; BIT DEFINITIONS
		 RES   			; RESIDENT, IN BALANCE SET
		 DELPEN   		; DELETE PENDING
		 FORCPEN   		; FORCE EXIT PENDING
		 INQUAN   		; INITIAL QUANTUM IN PROGRESS
		 PSWAPM			; PROCESS SWAP MODE (1=NOSWAP)
		 RESPEN   		; RESUME PENDING, SKIP SUSPEND
		 SSFEXC   		; SYSTEM SERVICE EXCEPTION ENABLE (K)
		 SSFEXCE		; SYSTEM SERVICE EXCEPTION ENABLE (E)
		 SSFEXCS		; SYSTEM SERVICE EXCEPTION ENABLE (S)
		 SSFEXCU		; SYSTEM SERVICE EXCEPTION ENABLE (U)
		 SSRWAIT   		; SYSTEM SERVICE RESOURCE WAIT DISABLE
		 SUSPEN   		; SUSPEND PENDING
		 WAKEPEN   		; WAKE PENDING, SKIP HIBERNATE
		 WALL   		; WAIT FOR ALL EVENTS IN MASK
		 BATCH   		; PROCESS IS A BATCH JOB
		 NOACNT   		; NO ACCOUNTING FOR PROCESS
		 SWPVBN			; WRITE FOR SWP VBN IN PROGRESS
		 ASTPEN			; AST PENDING
		 PHDRES			; PROCESS HEADER RESIDENT
		 HIBER			; HIBERNATE AFTER INITIAL IMAGE ACTIVATE
		 LOGIN			; LOGIN WITHOUT READING AUTH FILE
		NETWRK			; NETWORK CONNECTED JOB
		PWRAST			; POWER FAIL AST
		NODELET			; NO DELETE
		DISAWS			; 1=DISABLE AUTOMATIC WS ADJUSTMENT
		>			; END OF BIT DEFINITIONS
	F	WTIME,L			;TIME AT START OF WAIT
	S	PRISAV,0,B		;SAVED CURRENT PRIORITY
	S	PRIBSAV,1,B		;SAVE BASE PRIORITY
	F	STATE,W			;PROCESS STATE
	F	WEFC,B			;WAITING EF CLUSTER NUMBER
	F	PRIB,B			;BASE PRIORITY
	F	APTCNT,W		;ACTIVE PAGE TABLE COUNT
	F	TMBU,W			;TERMINATION MAILBOX UNIT NO.
	F	GPGCNT,W		;GLOBAL PAGE COUNT IN WS
	F	PPGCNT,W		;PROCESS PAGE COUNT IN WS
	F	ASTCNT,W		;AST COUNT REMAINING
	F	BIOCNT,W		;BUFFERED I/O COUNT REMAINING
	F	BIOLM,W			;BUFFERED I/O LIMIT
	F	DIOCNT,W		;DIRECT I/O COUNT REMAINING
	F	DIOLM,W			;DIRECT I/O COUNT LIMIT
	F	PRCCNT,W		;SUBPROCESS COUNT
	F	TERMINAL,T,8		;TERMINAL DEVICE NAME STRING
					;FOR INTERACTIVE JOBS
	F	PQB,L			;POINTER TO PROCESS QUOTA BLOCK
					;(PROCESS CREATION ONLY)
	S	EFWM,,L			;EVENT FLAG WAIT MASK
	F	EFCS,L			;LOCAL EVENT FLAG CLUSTER,SYSTEM
	F	EFCU,L			;LOCAL EVENT FLAG CLUSTER, USER
	F	EFC2P,L			;POINTER TO GLOBAL CLUSTER #2
	F	EFC3P,L			;POINTER TO GLOBAL CLUSTER #3
	F	PID,L			;PROCESS IDENTIFICATION
	F	PHD,L			;PROCESS HEADER ADDRESS
	F	LNAME,T,16		;LOGICAL NAME OF PROCESS
	F	JIB,L			;ADDRESS OF JOB INFORMATION BLOCK
	F	PRIV,Q			;CURRENT PRIVILEGE MASK
	F	ARB,L			;ADDRESS OF ACCESS RIGHTS BLOCK
	F	UIC,L			;LOGON UIC OF PROCESS
	S	MEM,0,W			;MEMBER NUMBER IN UIC
	S	GRP,2,W			;GROUP NUMBER IN UIC
	F	LOCKQFL,L		;LOCK QUEUE FORWARD LINK
	F	LOCKQBL,L		;LOCK QUEUE BACKWARD LINK
	F	DLCKPRI,L		;DEADLOCK RESOLUTION PRIORITY
	F	IPAST,L			;VECTOR OF MODE BITS FOR IPASTS
	L	LENGTH			;LENGTH OF PCB
 
	E

;+
; DEFINE DEVICE PERFORMANCE DATA BLOCK
;-
 
	$STRUCT	PDB
 
	F	FREEFL,L		;FREE BUFFER LISTHEAD FORWARD LINK
	F	FREEBL,L		;FREE BUFFER LISTHEAD BACKLINK
	F	SIZE,W			;SIZE OF DATA STRUCTURE
	F	TYPE,B			;TYPE OF DATA STRUCTURE
	F	OVERRUN,B		;OVERRUN INDICATOR
	F	FILLFL,L		;FILLED BUFFER LISTHEAD FORWARD LINK
	F	FILLBL,L		;FILLED BUFFER LISTHEAD BACKWARD LINK
	F	CURBUF,L		;ADDRESS OF CURRENT BUFFER
	F	NXTBUF,L		;ADDRESS OF NEXT LOCATION IN BUFFER
	F	ENDBUF,L		;ADDRESS OF END OF BUFFER
	F	PID			;PROCESS ID OF DATA COLLECTION PROCESS
	F	DEVCLASS,B		;DEVICE CLASS SELECTION
	F	DEVTYPE,B		;DEVICE TYPE SELECTION
	F	ANDM,W			;STATUS SELECTION 'AND' MASK
	F	XORM,W			;STATUS SELECTION 'XOR' MASK
	F	BUFCNT,W		;COUNT OF FILLED BUFFERS
	F	FUNC,Q			;SELECTION FUNCTION MASK
	L	LENGTH			;LENGTH OF DATA CONTROL BLOCK
 
	E

;+
; DEFINE PORT-INDEPENDENT OFFSETS IN A PORT DESCRIPTOR TABLE.
;
; THERE IS ONE PDT PER PORT ACCESSED VIA SCS.  THESE PORTS INCLUDE 
; CI'S AND UDA'S.  THE PDT CONTAINS A PORT-INDEPENDENT PIECE (DEFINED
; HERE) FOLLOWED BY AN OPTIONAL PORT-SPECIFIC PIECE DEFINED IN THE
; PORT DRIVER.  PDT'S ARE CREATED BY THE CONTROLLER INIT ROUTINES
; OF THE INDIVIDUAL PORT DRIVERS.
;-

	$STRUCT	PDT

	F	,L			; UNUSED LONGWORD
	F	,B,3			; THREE UNUSED BYTES
	F	PDT_TYPE,B		; TYPE OF PDT
		C<
		 PA,1			; CI PORT
		 PU,2			; UDA PORT
		>	
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE = SCS
	F	SUBTYP,B		;STRUCTURE SUBTYPE
	L	SCSBASE			;SCS ENTRIES INTO THE PORT DRIVER:
	F	ACCEPT,L		; ACCEPT A CONNECT REQUEST
	F	ALLOCDG,L		; ALLOCATE A DG BUFFER
	F	ALLOCMSG,L		; ALLOCATE A MESSAGE BUFFER
	F	CONNECT,L		; REQUEST CONNECTION TO REMOTE
	F	DEALLOCDG,L		; DEALLOCATE DG BUFFER
	F	DEALLOMSG,L		; DEALLOCATE MSG BUFFER
	F	DEALRGMSG,L		; DEALLOC MSG BUFF, ARGS IN REGISTERS
	F	DCONNECT,L		; BREAK CONNECTION
	F	MAP,L			; MAP A BUFFER FOR BLK XFER
	F	MAPBYPASS,L		; MAP, DISABL ACCESS CHECKS
	F	MAPIRP,L		; MAP, GET ARGS FROM IRP
	F	MAPIRPBYP,L		; MAP, ARGS FROM IRP, DISABL ACCESS CHECKS
	F	QUEUEDG,L		; QUEUE A DG FOR RECEIVE
	F	QUEUEMDGS,L		; ALLOC/DEALLOC DG'S FOR RECEIVE
	F	RCHMSGBUF,L		; RECYCLE MSG BUFF, HIGH PRIORITY
	F	RCLMSGBUF,L		; RECYCLE MSG BUFF, LOW PRIORITY
	F	REJECT,L		; REJECT CONNECT REQUEST
	F	REQDATA,L		; REQUEST BLK DATA XFER
	F	SENDDATA,L		; SEND BLK DATA XFER
	F	SENDDG,L		; SEND A DATAGRAM
	F	SENDMSG,L		; SEND A MESSAGE
	F	SNDCNTMSG,L		; SEND MSG WITH BYTE COUNT
	F	UNMAP,L			; UNMAP A BUFFER
	F	READCOUNT,L		; READ COUNTERS (FMT PORT SPECIFIC)
	F	RLSCOUNT,L		; RELEASE AND READ COUNTERS
	F	MRESET,L		; MAINT RESET OF REMOTE
	F	MSTART,L		; MAINT START OF REMOTE
	F	MAINTFCN,L		; MISC MAINT FUNCTIONS NOT SUPPORTED
					;  IN VMS
	L	SCSEND			;END OF SCS ENTRIES TO PORT DRIVER
	F	,L,1			;RESERVED VECTOR
	F	WAITQFL,L		;LISTHEAD FOR FORK BLOCKS WAITING
	F	WAITQBL,L		; FOR NONPAGED POOL 
	F	MSGHDRSZ,L		;MESSAGE HEADER SIZE
	F	DGOVRHD,L		;DATAGRAM HEADER SIZE
	F	FLAGS,W			;PORT FLAGS
		V <			;DEFINE FLAGS:
		CNTBSY,,,M		; COUNTERS IN USE
		CNTRLS,,,M		; RELEASE COUNTERS
		>			;
	F	,W			;RESERVED WORD
	F	CNTOWNER,T,16		;NAME OF SYSAP USING COUNTERS
	F	CNTCDRP,L		;CDRP OF SYSAP READING COUNTERS
	L	LENGTH			;SIZE OF PORT-INDEPENDENT PIECE
					; OF PDT.

	E


;+
; PAGE FILE CONTROL BLOCK
;-

	$STRUCT	PFL

;
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $SECDEF
;
	F	BITMAP,L		;ADDRESS OF START OF BIT MAP
					;BIT = 1 MEANS AVAILABLE
	F	STARTBYTE,L		;STARTING BYTE OFFSET TO SCAN
	F	SIZE,W			;SIZE OF PAGE FILE CONTROL BLOCK
	F	TYPE,B			;PAGE FILE CONTROL BLOCK TYPE CODE
	F	PFC,B			;PAGE FAULT CLUSTER FOR PAGE READS
	F	WINDOW,L		;WINDOW ADDRESS
	F	VBN,L			;BASE VBN 
	F	BITMAPSIZ,L		;SIZE IN BYTES OF PAGE FILE
	F	FREPAGCNT,L		;COUNT - 1 OF PAGES WHICH MAY BE ALLOCATED
	F	MAXVBN,L		;MASK APPLIED TO PTE WITH PAGING FILE
					; BACKING STORE ADDRESS
	F	ERRORCNT,W		;COUNT OF POTENTIALLY BAD PAGES
	F	ALLOCSIZ,B		;CURRENT ALLOCATION REQUEST SIZE
	F	FLAGS,B			;FLAGS BYTE FOR THIS PAGE FILE
		V<M
		INITED			;THIS PAGE FILE IS USABLE
		PAGFILFUL		;REQUEST FOR PAGING SPACE HAS FAILED
		SWPFILFUL		;REQUEST FOR SWAPPING SPACE HAS FAILED
		,4			;SPARE BITS FOR EXPANSION
		STOPPER			;RESERVED FOR ALL TIME (MUST NEVER BE SET)
		>
	L	LENGTH			;SIZE OF PAGE FILE CONTROL BLOCK
	F	BITMAPLOC		;BITMAP FOLLOWS PFL HEADER

	E


;+
; PFN DATA BASE DEFINITIONS
;-

	$STRUCT	PFN
;
; VIELD DEFINITIONS IN PFN$AB_STATE
;
	V <
		LOC,3,,M		;LOCATION OF PAGE
;
; ***** THE FOLLOWING SPARE BIT MUST BE USED FOR EXTENSION OF THE LOC FIELD
; ***** OR ALTERNATIVELY THE DELCON BIT MUST BE MOVED ADJACENT TO LOC
;
		,1			;NOT IN USE
		DELCON,,,M		;DELETE PFN CONTENTS WHEN REF=0
		,2			;NOT IN USE
		MODIFY,,,M		;MODIFY BIT
	>
;
; VIELD DEFINITIONS IN PFN$AB_TYPE
;
	V <
		PAGTYP,3,,M		;PAGE TYPE
		,1			;NOT IN USE
		COLLISION,,,M		;EMPTY COLLISION QUEUE WHEN PAGE READ COMPLETE
		BADPAG,,,M		;BAD PAGE BIT
		RPTEVT,,,M		;REPORT EVENT ON I/O COMPLETE
	>
;
; VIELD DEFINITIONS IN PFN$AL_BAK
;
	V <
		BAK,23,,M		;BACKUP ADDRESS
		GBLBAK,1,,M		;GLOBAL BACKING STORE ADDRESS
		PGFLX,8,,M		;PAGE FILE INDEX
	>
;
; LOCATION VIELD VALUES
;
	C <
		FREPAGLST,0		;ON FREE PAGE LIST
		MFYPAGLST,1		;ON MODIFIED PAGE LIST
		BADPAGLST,2		;ON BAD PAGE LIST
		RELPEND,3		;RELEASE PENDING
					;WHEN REFCNT = 0 RELEASE PFN
		RDERR,4			;READ ERROR WHILE PAGING IN
		WRTINPROG,5		;WRITE IN PROGRESS (BY MFY PAG WRITER)
		RDINPROG,6		;READ IN PROGRESS (PAGE IN)
		ACTIVE,7		;PAGE IS ACTIVE AND VALID
	>
;
; PAGE TYPE VIELD DEFINITIONS
;
	C <
		PROCESS,0		;PROCESS PAGE
		SYSTEM,1		;SYSTEM PAGE
		GLOBAL,2		;GLOBAL PAGE (READ ONLY)
		GBLWRT,3		;GLOBAL WRITABLE PAGE
		PPGTBL,4		;PROCESS PAGE TABLE
		GPGTBL,5		;GLOBAL PAGE TABLE
	>

	E

;+
; A PROCESS HEADER CONTAINS THE SWAPPABLE SCHEDULER AND
; MEMORY MANAGEMENT DATA BASES FOR A PROCESS IN THE
; BALANCE SET.
;-

	$STRUCT	PHD

	F	PRIVMSK,Q		;PRIVILEGE MASK
;
; WORKING SET LIST POINTERS - THESE CONTAIN LONG WORD OFFSETS FROM THE
; BEGINNING OF THE PROCESS HEADER.
;
	F	WSLIST,W		;1ST WORKING SET LIST ENTRY
	F	WSAUTH,W		;AUTHORIZED WORKING SET SIZE
	F	WSLOCK,W		;1ST LOCKED WORKING SET LIST ENTRY
	F	WSDYN,W			;1ST DYNAMIC WORKING SET LIST ENTRY
	F	WSNEXT,W		;LAST WSL ENTRY REPLACED
	F	WSLAST,W		;LAST WSL ENTRY IN LIST
	F	WSAUTHEXT,W		;AUTHORIZED WS EXTENT
;
; THE FOLLOWING THREE WORDS SPECIFY THE MAXIMUM AND INITIAL WORKING SET
; SIZES FOR THE PROCESS.  RATHER THAN CONTAINING THE COUNT OF PAGES
; THEY CONTAIN THE LONG WORD INDEX TO WHAT WOULD BE THE LAST WORKING
; SET LIST ENTRY.
;
	F	WSEXTENT,W		;MAX WORKING SET SIZE AGAINST BORROWING
	F	WSQUOTA,W		;QUOTA ON WORKING SET SIZE
	F	DFWSCNT,W		;DEFAULT WORKING SET SIZE
	F	PAGFIL,L		;PAGING FILE INDEX, LONG WORD REF
	S	PAGFIL,3,B		;PAGING FILE INDEX, BYTE REFERENCE
;
; PROCESS SECTION TABLE DATA BASE
;	PSTBASOFF IS THE BYTE OFFSET (INTEGRAL # OF PAGES) FROM THE
; BEGINNING OF THE PROCESS HEADER TO THE 1ST LONG WORD BEYOND THE 
; PROCESS SECTION TABLE.
;	THE WORDS, PSTLAST AND PSTFREE ARE SECTION TABLE INDICES WHICH
; ARE THE NEGATIVE LONG WORD INDEX FROM THE END OF THE SECTION TABLE TO
; THE SECTION TABLE ENTRY.
;
	F	PSTBASOFF,L		;BYTE OFFSET TO BASE OF PST
					;FIRST LONG WORD NOT IN PST
					;PST GROWS BACKWARDS FROM HERE
	S	PST,,W			;*****TEMP*****
	F	PSTLAST,W		;END OF PROCESS SECTION TABLE
					;ADR OF LAST PSTE ALLOCATED
	F	PSTFREE,W		;HEAD OF FREE PSTE LIST
;
; CREATE/DELETE PAGE CONTEXT
;
	F	FREP0VA,L		;1ST FREE VIRTUAL ADR AT END OF P0 SPACE
					;***** MUST BE QUAD WORD AWAY FROM FREP1VA
	F	FREPTECNT,L		;CNT OF FREE PTE'S BETWEEN THE ENDS
					;0F THE P0 AND P1 PAGE TABLES
	F	FREP1VA,L		;1ST FREE VIRTUAL ADR AT END OF P1 SPACE
	F	DFPFC,B			;DEFAULT PAGE FAULT CLUSTER
	F	PGTBPFC,B		;PAGE TABLE CLUSTER FACTOR
	F	FLAGS,W			;FLAGS WORD
		V<M
		PFMFLG			;PAGE FAULT MONITORING ENABLED
		DALCSTX			;NEED TO DEALLOCATE SECTION INDICES
		WSPEAKCHK		;CHECK FOR NEW WORKING SET SIZE (PROC)
		NOACCVIO		;SET AFTER INSWAP OF PROCESS HEADER
		IWSPEAKCK		;CHECK FOR NEW WORKING SET SIZE (IMAGE)
		>
;
; QUOTAS AND LIMITS
;
	F	CPUTIM,L		;ACCUMULATED CPU TIME CHARGED
	F	QUANT,W			;ACCUMULATED CPU TIME SINCE
					;LAST QUANTUM OVERFLOW
	F	PRCLM,W			;SUBPROCESS QUOTA
	F	ASTLM,W			;AST LIMIT

	F	PHVINDEX,W		;PROCESS HEADER VECTOR INDEX
	F	BAK,W			;POINTER TO BACKUP ADDRESS VECTOR FOR
					;PROCESS HEADER PAGES
	F	WSLX,W			;POINTER TO WORKING SET LIST INDEX
					;SAVE AREA
	S	PSTBASMAX,0,W		;LW OFFSET TO TOP PST ADDRESS
	F	PAGEFLTS,L		;COUNT OF PAGE FAULTS
	F	WSSIZE,W		;CURRENT ALLOWED WORKING SET SIZE
	F	SWAPSIZE,W		;CURRENT SWAP BLOCK ALLOCATION

;
; THE NEXT TWO I/O COUNTERS MUST BE ADJACENT
;

	F	DIOCNT,L		;DIRECT I/O COUNT
	F	BIOCNT,L		;BUFFERED I/O COUNT

	F	CPULIM,L		;LIMIT ON CPU TIME FOR PROCESS
	F	CPUMODE,B		;ACCESS MODE TO NOTIFY ABOUT CPUTIME
	F	AWSMODE,B		;ACCESS MODE FLAG FOR AUTO WS AST
	F	WAITIME,W		;TIME OF DAY OF WAIT REQUEST @6.5536 MS
;
; PAGE TABLE STATISTICS
;
	F	PTWSLELCK,L		; BYTE OFFSET TO BYTE ARRAY OF COUNTS
					; OF LOCKED WSLE'S IN THIS PAGE TABLE
	F	PTWSLEVAL,L		; BYTE OFFSET TO BYTE ARRAY OF COUNTS
					; OF VALID WSLE'S IN THIS PAGE TABLE
	C	PHDPAGCTX,8		; SIZE OF CONTEXT FOR PHD PAGES
	F	PTCNTLCK,W		; COUNT OF PAGE TABLES CONTAINING
					; 1 OR MORE LOCKED WSLE
	F	PTCNTVAL,W		; COUNT OF PAGE TABLES CONTAINING
					; 1 OR MORE VALID WSLE
	F	PTCNTACT,W		; COUNT OF ACTIVE PAGE TABLES
	F	PTCNTMAX,W		; MAX COUNT OF PAGE TABLES
					; WHICH HAVE NON-ZERO PTE'S
	F	WSFLUID,W		; GUARANTEED NUMBER OF FLUID WS PAGES
	F	EXTDYNWS,W		; EXTRA DYNAMIC WORKING SET LIST ENTRIES
					; ABOVE REQUIRED WSFLUID MINIMUM
;
; HARDWARE PCB PORTION OF PROCESS HEADER
;
	F	PCB,L			;HARDWARE PCB
	S	KSP,,L			;KERNEL STACK POINTER
	F	ESP,L			;EXEC STACK POINTER
	F	SSP,L			;SUPERVISOR STACK POINTER
	F	USP,L			;USER STACK POINTER
	F	R0,L			;R0
	F	R1,L			;R1
	F	R2,L			;R2
	F	R3,L			;R3
	F	R4,L			;R4
	F	R5,L			;R5
	F	R6,L			;R6
	F	R7,L			;R7
	F	R8,L			;R8
	F	R9,L			;R9
	F	R10,L			;R10
	F	R11,L			;R11
	F	R12,L			;R12
	F	R13,L			;R13
	F	PC,L			;PC
	F	PSL,L			;PROGRAM STATUS LONGWORD
	F	P0BR,L			;P0 BASE REGISTER
	F	P0LRASTL,L		;P0LR, ASTLVL
		V <			; VIELDS IN P0LRASTL
		P0LR,24			;P0 LENGTH REGISTER
		ASTLVL,8		; AST LEVEL
		>			; END OF VIELDS
	S	ASTLVL,3,B		;AST LEVEL SUBFIELD
	F	P1BR,L			;P1 BASE REGISTER
	F	P1LR,L			;P1 LENGTH REGISTER
	F	EMPTPG,W		;COUNT OF EMPTY WORKING SET PAGES
	F	RESPGCNT,W		;RESIDENT PAGE COUNT
	F	REQPGCNT,W		;REQUIRED PAGE COUNT
	F	CWSLX,W			;CONTINUATION WSLX
	F	AUTHPRIV,Q		;AUTHORIZED PRIVILEGES MASK
	F	IMAGPRIV,Q		;INSTALLED IMAGE PRIVILEGES MASK
	F	RESLSTH,L		;POINTER TO RESOURCE LIST
	F	IMGCNT,L		;IMAGE COUNTER BUMPED BY SYSRUNDWN
	F	PFLTRATE,L		;PAGE FAULT RATE 
	F	PFLREF,L		;PAGE FAULTS AT END OF LAST INTERVAL
	F	TIMREF,L		;TIME AT END OF LAST INTERVAL
	F	MPINHIBIT,L		;COUNT OF REASONS WHY PROCESS
					; MUST RUN ON PRIMARY IN MP SYSTEM
	F	PGFLTIO,L		;COUNT OF PAGEFAULT I/O
	F	AUTHPRI,B		;INITIAL PROCESS PRIORITY
	F	,B			;SPARE
	F	,W			;SPARE
	F	EXTRACPU,L		;ACCUMULATED CPU TIME LIMIT EXTENSION
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	SPARE,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
;
; END OF FIXED PORTION OF PROCESS HEADER
;
	L	LENGTH			;LENGTH OF FIXED PART OF PROCESS HEADER
	F	WSL,L			;FIRST WORKING SET LIST ENTRY
 
	E

;+
; PERFORMANCE I/O INFORMATION BLOCK
;-
 
	$STRUCT	PIB
 
	F	TYPE,B			;TYPE OF ENTRY
	M	1
 
;
; START OF I/O REQUEST TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	SRQ_PRI,B		;BASE PRIORITY OF PROCESS
	F	,W			;SPARE UNUSED WORD
	F	SRQ_TIME,L		;TIME OF I/O TRANSACTION
	F	SRQ_SEQN,L		;SEQUENCE NUMBER OF I/O TRANSACTION
	F	SRQ_PID,L		;REQUESTER PID
	F	SRQ_UCB,L		;ADDRESS OF DEVICE UCB
	F	SRQ_FUNC,W		;I/O FUNCTION CODE
	F	SRQ_STS,W		;I/O PACKET STATUS
	L	SRQ_SIZE		;LENGTH OF START I/O MESSAGE
 
;
; START OF I/O TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	,B			;SPARE UNUSED BYTE
	F	SIO_BCNT,W		;TRANSFER BYTE COUNT
	F	SIO_TIME,L		;TIME OF TRANSACTION
	F	SIO_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	F	SIO_MEDIA,L		;TRANSFER MEDIA ADDRESS
	L	SIO_SIZE		;LENGTH OF I/O TRANSACTION MESSAGE
 
;
; END OF I/O TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	,B,3			;SPARE UNUSED BYTES
	F	EIO_TIME,L		;TIME OF TRANSACTION
	F	EIO_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	F	EIO_IOSB,Q		;FINAL I/O STATUS
	L	EIO_SIZE		;LENGTH OF END OF I/O TRANSACTION
 
;
; END OF I/O REQUEST MESSAGE BLOCK
;
 
	P	1
	F	,B,3			;SPARE UNUSED BYTES
	F	ERQ_TIME,L		;TIME OF TRANSACTION
	F	ERQ_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	L	ERQ_SIZE		;LENGTH OF END OF I/O REQUEST TRANSACTION
 
;
; I/O MESSAGE BLOCK ENTRY TYPE CODES
;
 
	K	SRQ,0			;START OF I/O REQUEST
	K	SIO,1			;START OF I/O TRANSACTION
	K	EIO,2			;END OF I/O TRANSACTION
	K	ERQ,3			;END OF I/O REQUEST
 
	E

;+
; PAGE FAULT MONITOR CONTROL BLOCK
;-

	$STRUCT	PMB

	F	CURBUF,L		;CURRENT BUFFER POINTER
	F	BUFEND,L		;CURRENT BUFFER END
	F	SIZE,W			;BLOCK SIZE FIELD
	F	MBXCHN,W		;SUBPROCESS MAILBOX CHANNEL
	F	HDR,Q			;FREE BUFFER QUEUE HEADER
	F	SBPHDR,Q		;SUBRPCESS QUEUE HEADER
	F	PID,L			;SUBPROCESS PID
	F	OVRRUN,B		;DATA OVERRUN INDICATOR
	L	LENGTH			;LENGTH OF PMB
	E

;+
; PROCESS QUOTA BLOCK DEFINITION
;-

	$STRUCT	PQB

	F	PRVMSK,Q		;PRIVILEGE MASK
	F	SIZE,W			;SIZE OF PQB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	STS,B			;STATUS FLAGS
	F	IMAGE,T,64		;IMAGE NAME FOR NEW PROCESS
	F	ERROR,T,64		;LOGICAL NAME FOR ERROR OUTPUT
	F	INPUT,T,64		;LOGICAL NAME FOR INPUT
	F	OUTPUT,T,64		;LOGICAL NAME FOR OUTPUT
	F	DISK,T,64		;LOGICAL NAME FOR SYS$DISK
	F	ASTLM,L			;AST LIMIT
	F	BIOLM,L			;BUFFERED I/O LIMIT
	F	BYTLM,L			;BUFFERED I/O LIMIT
	F	CPULM,L			;CPU TIME LIMIT
	F	DIOLM,L			;DIRECT I/O LIMIT
	F	FILLM,L			;OPEN FILE LIMIT
	F	PGFLQUOTA,L		;PAGING FILE QUOTA
	F	PRCLM,L			;SUB-PROCESS LIMIT
	F	TQELM,L			;TIMER QUEUE ENTRY LIMIT
	F	WSQUOTA,L		;WORKING SET QUOTA
	F	WSDEFAULT,L		;WORKING SET DEFAULT
	F	ENQLM,L			;ENQUEUE LIMIT
	F	WSEXTENT,L		;MAXIMUM WORKING SET SIZE
	F	SWAPSIZE,L		;INITIAL SWAP BLOCK ALLOCATION
	F	USERNAME,T,12		;USERNAME FOR SUBPROCESS
	F	ACCOUNT,T,8		;ACCOUNT NAME FOR SUBPROCESS
	F	DDSTRING,T,84		;DEFAULT DIRECTORY STRING
	C	MAXDIRLEN,84		;VALUE OF MAXIMUM DDSTRING LENGTH
	F	FILEPROT,W		;DEFAULT FILE PROTECTION
	F	MSGMASK,B		;MESSAGE FLAGS
	F	,B			;SPARE
	L	LENGTH			;LENGTH OF PROCESS QUOTA BLOCK

	E

;+
; PRIORITY INCREMENT CLASS DEFINITIONS
;-

	$STRUCT	PRI

	C < ,$_
	NULL,0				; NO PRIORITY INCREMENT
	IOCOM,1				; DIRECT I/O COMPLETION
	RESAVL,2			; RESOURCE AVAIL
	TOCOM,3				; TERMINAL OUTPUT COMPLETE
	TICOM,4				; TERMINAL INPUT COMPLETE
	TIMER,2				; TIMER INTERVAL COMPLETION
	>
	E

;+
; DEFINE PARAMETER DESCRIPTOR BLOCK
;-
	$STRUCT	PRM

	F	ADDR,L			;ADDRESS OF PARAMETER
	F	DEFAULT,L		;DEFAULT VALUE
	F	MIN,L			;MINIMUM VALUE (-1)=>NONE
	F	MAX,L			;MAXIMUM VALUE (-1)=>NONE
	F	FLAGS,L			;TYPE FLAGS
	V	<			; BIT DEFINITIONS
		DYNAMIC,,,M		; DYNAMIC PARAMETER
		STATIC,,,M		; STATIC PARAMETER
		SYSGEN,,,M		; SYSGEN PARAMETER
		ACP,,,M			; ACP CONTROL PARAMETER
		JBC,,,M			; JOB CONTROL PARAMETER
		RMS,,,M			; RMS CONTROL PARAMETER
		SYS,,,M			; GENERAL SYSTEM PARAMETER
		SPECIAL,,,M		; SPECIAL PARAMETER
		DISPLAY,,,M		; DISPLAY ONLY (NO CHANGE)
		CONTROL,,,M		; CONTROL PARAMETER
		MAJOR,,,M		; MAJOR PARAMETER
		PQL,,,M			; PROCESS QUOTA LIST
		NEG,,,M			; NEGATIVE
		TTY,,,M			; TERMINAL CONTROL PARAMETER
		SCS,,,M			; SCS CONTROL PARAMETERS
		>			;
	F	SIZE,B			;SIZE CODE FOR DATUM
	C	BYTE,8			;
	C	WORD,16			;
	C	LONG,32			;
	F	POS,B			;BIT POSITION
	F	NAME,T,16		;ASCIC NAME STRING
	C	MAXNAMLEN,15		;MAXIMUM LENGTH FOR PARAMETER NAME
	F	UNIT,T,12		;ASCIC UNIT STRING
	C	MAXUNILEN,11		;MAXIMUM LENGTH FOR UNIT NAME
	L	LENGTH			;SIZE OF DESCRIPTOR BLOCK
	E				;

;+
; INTER-PROCESSOR REQUEST BLOCK DEFINITIONS
;
; THIS IS THE BASIC FORMAT FOR AN EXECUTIVE OR DRIVER REQUEST FROM
; ONE PROCESSOR TO ANOTHER PROCESSOR.
;-

	$STRUCT	PRQ

	F	FLINK,L			;FORWARD LINK TO NEXT BLOCK
	F	BLINK,L			;BACKWARD LINK TO PREVIOUS BLOCK
	F	,L,4			; (RESERVED FOR FORK CONTEXT)
	F	TO_PORT,W		;PORT NUMBER TO SEND REQUEST TO
	F	FR_PORT,W		;PORT NUMBER REQUEST IS FROM
	F	DISPATCH,W		;MESSAGE DISPATCHER ID
					; MESSAGE DISPATCHER ID'S
	C	EXEC,0			;  EXECUTIVE REQUEST ID
	C	MAILBOX,1		;  MAILBOX REQUEST ID
	C	REMDISK,2		;  REMOTE DISK REQUEST ID
	C	HSC50,3			;  HSC-50 REQUEST ID
	F	,W			;(UNUSED)
;
	F	REQTYPE,W		;REQUEST TYPE
					; MESSAGE DISPATCHER REQUEST SUB-TYPES
	C	SETEF,0			;   COPY COMMON EVENT FLAG REQUEST ID
	C	RESAVL,1		;   REPORT RESOURCE AVAILABLE
	F	UNIT,W			;UNIT NUMBER
	F	PARAM,L			;FIRST PARAMETER
	C	MINLENGTH,64		;MINIMUM REQUEST BLOCK LENGTH
	
	E


;+
; DEFINE PAGE TABLE ENTRY VIELDS AND VALUES
;-
	$STRUCT	PTE
;
; VIELD DEFINITION FOR "VALID" PTE'S
;
	V <
		PFN,21,,M		; PAGE FRAME NUMBER
		WINDOW,1,,M		; WINDOW BIT
		,1			; RESERVED
		OWN,2,,M		; MODE OF THE OWNER
		,1			; RESERVED
		MODIFY,,,M		; MODIFY BIT
		PROT,4,,M		; PROTECTION
		VALID,,,M		; VALID BIT
	>
;
; VIELD DEFINITIONS FOR VARIOUS INVALID FORMS OF PTE
;
	V <				; SECTION TABLE INDEX FORM
		STX,16			; SECTION TABLE INDEX
		CRF,,,M			; COPY ON REFERENCE
		DZRO,,,M		; DEMAND ZERO
		WRT,,,M			; SECTION FILE IS ACCESSED FOR WRITING
		,3			; SPARE
		TYP0,,,M		; LOW ORDER BIT OF PTE TYPE
		,2			; OWNER FIELD
		,1			; RESERVED
		TYP1,,,M		; HIGH ORDER BIT OF PTE TYPE
					; OVERLAYS MODIFY BIT
	>
		V <			; PAGING FILE POINTER
		PGFLVB,22,,M		; PAGE FILE VBN
	>
		V <			; FLAG BIT THAT CAUSES BACKING STORE 
					;  TO BE FORGOTTEN
		,21			; SPACING
		CHKPNT,,,M		; FORGET THAT THIS PAGE HAS A BACKING STORE
	>

		V<			; GLOBAL PAGE TABLE POINTER
		GPTX,22,,M		; GLOBAL PAGE TABLE INDEX
	>
;+
; PROTECTION FIELD DEFINITIONS
;-
	C<
	NA,<^B0000@$BITPOSITION(PTE$V_PROT)> ;  NO ACCESS
	KR,<^B0011@$BITPOSITION(PTE$V_PROT)> ;  KERNEL READ ONLY
	KW,<^B0010@$BITPOSITION(PTE$V_PROT)> ;  KERNEL WRITE
	ER,<^B0111@$BITPOSITION(PTE$V_PROT)> ;  EXEC READ ONLY
	EW,<^B0101@$BITPOSITION(PTE$V_PROT)> ;  EXEC WRITE
	SR,<^B1011@$BITPOSITION(PTE$V_PROT)> ;  SUPER READ ONLY
	SW,<^B1000@$BITPOSITION(PTE$V_PROT)> ;  SUPER WRITE
	UR,<^B1111@$BITPOSITION(PTE$V_PROT)> ;  USER READ ONLY
	UW,<^B0100@$BITPOSITION(PTE$V_PROT)> ;  USER WRITE
>
	C<
	 ERKW,<^B0110@$BITPOSITION(PTE$V_PROT)>  	; EXEC READ KERNEL WRITE
	 SRKW,<^B1010@$BITPOSITION(PTE$V_PROT)>  	; SUPER READ KERNEL WRITE
	 SREW,<^B1001@$BITPOSITION(PTE$V_PROT)>  	; SUPER READ EXEC WRITE
	 URKW,<^B1110@$BITPOSITION(PTE$V_PROT)>  	; USER READ KERNEL WRITE
	 UREW,<^B1101@$BITPOSITION(PTE$V_PROT)>  	; USER READ EXEC WRITE
	 URSW,<^B1100@$BITPOSITION(PTE$V_PROT)>  	; USER READ SUPER WRITE
>
;+
; OWNER FIELD DEFINITIONS
;_
	C<
	KOWN,<0@$BITPOSITION(PTE$V_OWN)>	; KERNEL OWNER
	EOWN,<1@$BITPOSITION(PTE$V_OWN)>	; EXEC OWNER
	SOWN,<2@$BITPOSITION(PTE$V_OWN)>	; SUPER OWNER
	UOWN,<3@$BITPOSITION(PTE$V_OWN)> ; USER OWNER
>
	E


;+
; POINTER CONTROL BLOCK
;	THIS IS A STRUCTURE OF POINTERS TO OTHER DYNAMIC STRUCTURES
;	OF LIKE KIND.  TYPICALLY THE STRUCTURES POINTED TO ARE KNOWN
;	BY THEIR LONG WORD INDEX INTO THE TABLE AND TO FACILITATE FETCHING
;	THESE, IT IS CONVENTIONAL TO KEEP A POINTER TO THE BASE OF THE
;	STRUCTURE POINTERS RATHER THAN (OR IN ADDITION TO) THE POINTER
;	TO THE FRONT OF THE POINTER CONTROL BLOCK.  THE NUMBER OF POINTERS
;	IN THE ARRAY PRECEEDS THE FIRST POINTER IN THE ARRAY.
;-

	$STRUCT	PTR

	F	,Q			;RESERVED QUAD WORD FOR LINKAGE
	F	SIZE,W			;SIZE OF DYNAMIC CONTROL BLOCK
	F	TYPE,B			;TYPE OF DYNAMIC CONTROL BLOCK
	F	PTRTYPE,B		;TYPE OF CONTROL BLOCK POINTED TO
	F	PTRCNT,L		;COUNT OF ENTRIES
	L	LENGTH			;LENGTH OF FIXED PORTION
	F	PTR0,L			;PTR NUMBER 0

	E
;
;	Version	'V03-001'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from Q to Z.  That is, all control blocks from QAA to ZZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-001	KDM0078		Kathleen D. Morse	15-Mar-1982
;		Add RPB$V_FINDMEM flag, for 11/782 installations.
;
;	V02-028	HRJ0052		Herb Jacobs		1-Feb-1982  3:44
;		Add RSN$_MPWBUSY.
;
;	V02-027	MLJ41905	Martin L. Jack,	31-Jan-1982  23:55
;		Add TQE$V_ABSOLUTE.
;
;	V02-026	NPK2012		N. Kronenberg		24-Jan-1982
;		Add $SCSDEF, offsets to system communications msgs.
;
;	V02-025	STJ0167		Steven T. Jeffreys	06-Jan-1982
;		- Defined VCB$V_MOUNTVER bit to mark a volume eligible
;		  for mount verification.
;		- Slightly reorder the RSN codes.
;
;	V02-024 DJD0003		Darrell Duffy		29-December-1981
;		Remove UCB$W_IRPSIZE
;
;	V02-023	JSV0002		Joost Verhofstad	28-Dec-1981
;		Add VCB$L_JNL_WCBFL and VCB$L_JNL_WCBBL.
;
;	V02-022	WMC0037		Wayne Cardoza		17-Dec-1981
;		Add RSN$_MPLIST_EMPTY for modified page list empty.
;
;	V02-021	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add disable announce message flag to UAF record.
;
;	V02-020	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add disable interactive account flag to UAF record.
;
;	V02-019	ACG0237		Andrew C. Goldstein,	11-Dec-1981  21:54
;		Add WCB$V_CATHEDRAL and VCB$V_NOCACHE
;
;	V02-018	RKS0018		RICK SPITZ		11-DEC-1981
;		ADD TAST TERMINAL AST CONTROL BLOCK DEFINITIONS
;		FOR OUT OF BAND HANDLING.
;
;	V02-017	ACG0229		Andrew C. Goldstein,	1-Dec-1981  11:17
;		Add I/O counters to WCB, retention times to VCB.
;		Add extended fields to RVT.
;
;	V02-016	SRB0042		Steve Beckhardt		30-Nov-1981
;		Added RSB$B_DEPTH field to RSB.
;
;	V02-015	PHL0026		Peter H. Lipman		30-Nov-1981
;		Add PERMCTX cell to $SHLDEF
;
;	V02-014	RLRUBMD		Robert L. Rappaport	13-Nov-1981
;		Add UBMD, UNIBUS Map register and data path allocation
;		descriptor, structure definition.
;
;	V02-013	HRJ0032		Herb Jacobs		02-Nov-1981
;		Add new swapfile resource to RSN definitions.
;
;	V02-012 DJD0002		Darrell Duffy		30-Oct-1981
;		Update remote terminal structures for new features.
;
;	V02-011	SRB0039		Steve Beckhardt		30-Oct-1981
;		Added new resource (RSN$_LOCKID) to $RSNDEF.
;
;	V02-010	PHL0020		Peter H. Lipman		27-Oct-1981
;		Add UCB$L_DEVDEPND2 cell to fixed portion of UCB.
;		UCB$L_TT_DEVDP1 is a synonym.
;
;	V02-009	RLRRCT		Robert L. Rappaport	27-Oct-1981
;		Added RCT (Replacement and Caching Table) definition.
;
;	V02-008	JLV0091		Jake VanNoy		27-Oct-1981
;		Removed $TTYDEF, moved it to [ttdrvr.src]ttydef.mar.
;
;	V02-007	LJK0052		Lawrence J. Kenah	27-Aug-1981
;		The system service vector area is now four pages long.
;		Change $SGNDEF to reflect that point.
;
;	V02-006	LJK0044		Lawrence J. Kenah	27-Aug-1981
;		Eliminate SGN$C_SFTMAX symbol from $SGNDEF.
;
;	V02-005 ROW0025		Ralph O. Weber		26-AUG-1981
;		Change UAF references to off-days to secondary-days.
;		    UAF$L_ODAYHOURS  becomes  UAF$L_SDAYHOURS
;		    UAF$B_ODAYFLAGS  becomes  UAF$B_SDAYFLAGS
;		These changes make the name conform to the way the 
;		primary-secondary days function will be documented.
;
;	V02-004	HRJ0026		Herb Jacobs		12-Aug-1981
;		Removed SFT structure from system, as swap files are
;		now just page files.
;
;	V02-003 ROW0014		Ralph O. Weber		10-AUG-1981
;		Add definition of UAF$L_BYTLM.  UAF$L_BYTLM provides upward 
;		compatibility to the longword-size Byte I/O Byte Count 
;		Limit.  However, to prevent User Authorization File Format 
;		incompatibilities between version 2.x and version 3.0, 
;		UAF$L_BYTLM does not overlay the current field, UAF$W_BYTLM.
;		(NB: the difference between the word, old style, and 
;		longword, new style, names).  All programs which operate on 
;		the User Authorization File (eg: AUTHORIZE and LOGINOUT) 
;		will be modified to first check UAF$L_BYTLM and if it is 
;		zero use UAF$W_BYTLM.  AUTHORIZE will be modified to 
;		guarantee that all UAF records it writes contain a valid 
;		UAF$L_BYTLM.
;
;	V02-002	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Changed all "7ZZ"s to "730"s.
;
;**

;+
; RBM	- realtime bit map of SPTs available for real time processes
;-

	$STRUCT	RBM

	F	STARTVPN		; Starting VPN of bit map.
	F	FREECOUNT		; Number of free SPTs.
	F	SIZE,W			; Size of control block.
	F	TYPE,B			; Type of control block.
	F	,B			; Spare byte.
	L	LENGTH			; Length of block so far.
	F	BITMAP			; Start of bit map.

	E

;
; REMOTE DEVICE PROTOCOL DEFINITIONS
;
	$STRUCT	RDP

	F	OPCODE,W		;OPERATION CODE
	F	MOD,W			;OPERATION CODE MODIFIERS
	F	REFID,L			;REFERENCE ID
	F	UNIT,W			;DEVICE UNIT NUMBER
	S	SIZE,0,W		;SIZE OF MESSAGE (ACP/DRIVER USE ONLY)
	L	HEADERLEN		;HEADER LENGTH
	M	1			;MARK START OF PARAMETERS
	F	PARAM1,L		;PARAMETER 1
	F	PARAM2,L		;PARAMETER 2
	F	PARAM3,L		;PARAMETER 3
	F	PARAM4,L		;PARAMETER 4
	F	PARAM5,L		;PARAMETER 5
	F	PARAM6,L		;PARAMETER 6
;
; RESPONSE FROM REMOTE PACKET DEFINITIONS
;
	C	<,,-1,-1		;RESPONSE PACKET OPCODES
		 ATTN			; ATTENTION
		 END			; I/O REQUEST COMPLETE
		 LOG			; ERROR LOG
		>
	P	1			;POINT TO PARAMETER 1
	F	STATUS,Q		;END PACKET I/O STATUS
;
; TERMINAL SPECIFIC PARAMETER DEFINITIONS
;
;  READ/WRITE REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_BCNT,L		;BYTE COUNT
	F	TT_CARCON,L		;WRITE CARRIAGE CONTROL
	S	TT_TIMOUT,0,L		;READ TIMEOUT
	F	TT_WDATA,T		;WRITE DATA
	S	TT_TERM,0,T		;BYTE OF SIZE + TERMINATOR MASK
					;WORD OF SIZE + PROMPT STRING
; SET MODE/CHARACTERISTICS REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_CHAR,Q		;CHARACTERISTICS
	S	TT_ASTPRM,0,L		;AST PARAMETER
	F	TT_SPEED,L		;LINE SPEED
	F	TT_FILL,L		;FILL SPECIFIER
	F	TT_PARITY,L		;PARITY FLAGS
	F	TT_CHAR2, L		; Remaining longword of characters
;  READ REQUEST END PACKET
	P	1			;POINT TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_RDATA,T		;WORD OF SIZE + READ DATA
;  SENSE MODE/CHARACTERISTICS END PACKET
	P	1			;POINTER TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_SCHAR,Q		;SENSED CHARACTERISTICS
	F	TT_SCHAR2, L		; Additional longword of characters

; Broadcast message attention packet
	P	1
	F	TT_BRDTOTSIZE, W	; Total size of data
	F	TT_BRDMSG, W		; Message code
	F	TT_BRDUNIT, W		; Unit number
	F	TT_BRDNAME, T, 16	; Device name as counted string
	C	TT_BRDNAME, 16		; Size of name field
	F	TT_BRDTXTSIZE, W	; Count for message text
	F	TT_BRDTEXT, T, 0	; Message text start

; Out of band attention packet

	P	1
	F	TT_OUTBAND, B		; Out of band character

	P	1
; ATTENTION PACKET MODIFIERS
	C	<
		TT_UNSOL		;UNSOLICITED DATA
		TT_HANGUP		;MODEM HANGUP
		TT_CTRLC		;CONTROL/C
		TT_CTRLY		;CONTROL/Y
		TT_STARTRCV		; Start a receive to the net
		TT_BRDCST		; Broadcast message for mailbox
		TT_OUTBAND		; Out of band AST
		>

	E

;
;	Remote buffer as stored in dynamic memory
;
;	This structure must be identical to the above structure except
;	for the header, which is the header for a buffered io buffer.
;

	$STRUCT	RBF

;
;	Buffered io buffer header
;

	F	MSGDAT, L		; Address of message data
	F	USRBFR, L		; User buffer address
	F	SIZE, W			; Size of structure
	F	TYPE, B			; Type of structure, DYN$C_BUFIO
	F	SPARE, B		; Alignment
	F	DATSIZE, W		; Data size

;
;	End of header
;

	F	OPCODE,W		;OPERATION CODE
	F	MOD,W			;OPERATION CODE MODIFIERS
	F	REFID,L			;REFERENCE ID
	F	UNIT,W			;DEVICE UNIT NUMBER
;	S	SIZE,0,W		;SIZE OF MESSAGE (ACP/DRIVER USE ONLY)
	L	HEADERLEN		;HEADER LENGTH
	M	1			;MARK START OF PARAMETERS
	F	PARAM1,L		;PARAMETER 1
	F	PARAM2,L		;PARAMETER 2
	F	PARAM3,L		;PARAMETER 3
	F	PARAM4,L		;PARAMETER 4
	F	PARAM5,L		;PARAMETER 5
	F	PARAM6,L		;PARAMETER 6
;
; RESPONSE FROM REMOTE PACKET DEFINITIONS
;
	C	<,,-1,-1		;RESPONSE PACKET OPCODES
		 ATTN			; ATTENTION
		 END			; I/O REQUEST COMPLETE
		 LOG			; ERROR LOG
		>
	P	1			;POINT TO PARAMETER 1
	F	STATUS,Q		;END PACKET I/O STATUS
;
; TERMINAL SPECIFIC PARAMETER DEFINITIONS
;
;  READ/WRITE REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_BCNT,L		;BYTE COUNT
	F	TT_CARCON,L		;WRITE CARRIAGE CONTROL
	S	TT_TIMOUT,0,L		;READ TIMEOUT
	F	TT_WDATA,T		;WRITE DATA
	S	TT_TERM,0,T		;BYTE OF SIZE + TERMINATOR MASK
					;WORD OF SIZE + PROMPT STRING
; SET MODE/CHARACTERISTICS REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_CHAR,Q		;CHARACTERISTICS
	S	TT_ASTPRM,0,L		;AST PARAMETER
	F	TT_SPEED,L		;LINE SPEED
	F	TT_FILL,L		;FILL SPECIFIER
	F	TT_PARITY,L		;PARITY FLAGS
	F	TT_CHAR2, L		; Another longword of characters
;  READ REQUEST END PACKET
	P	1			;POINT TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_RDATA,T		;WORD OF SIZE + READ DATA
;  SENSE MODE/CHARACTERISTICS END PACKET
	P	1			;POINTER TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_SCHAR,Q		;SENSED CHARACTERISTICS
	F	TT_SCHAR2, L		; Another longword of characters

; Broadcast message attention packet
	P	1
	F	TT_BRDTOTSIZE, W	; Total size of data
	F	TT_BRDMSG, W		; Message code
	F	TT_BRDUNIT, W		; Unit number
	F	TT_BRDNAME, T, 16	; Device name as counted string
	C	TT_BRDNAME, 16		; Size of name field
	F	TT_BRDTXTSIZE, W	; Count for message text
	F	TT_BRDTEXT, T, 0	; Message text start

; Out of band attention packet

	P	1
	F	TT_OUTBAND, B		; Out of band character

	P	1
; ATTENTION PACKET MODIFIERS
	C	<
		TT_UNSOL		;UNSOLICITED DATA
		TT_HANGUP		;MODEM HANGUP
		TT_CTRLC		;CONTROL/C
		TT_CTRLY		;CONTROL/Y
		TT_STARTRCV		; Start a receive to the net
		TT_BRDCST		; Broadcast message for mailbox
		TT_OUTBAND		; Out of band AST
		>

	E

;+
; RCT - Replacement and Caching Table sector #0 layout.
;	The RCT is a structure residing on disks controlled by MSCP
;	speaking disk controllers.  The RCT is maintained by the intelligent
;	controllers and the disk class driver.  The disk class driver mainly
;	gets involved in RCT manipulations during host initiated bad
;	block replacement.

	$STRUCT	RCT

	F	VOLSER,Q		; Volume serial number
	F	FLAGS,W			; Flags word
		V<M
		WB			; Write back caching in use
		,6
		FE			; Forced Error flag for block being replaced
		,5
		BR			; Replacement caused by Bad RBN
		RP1			; Replacement in Progress phase 1
		RP2			; Replacement in Progress phase 2
		>
	F	,W			; Reserved word
	F	LBN,L			; LBN curently being replaced.
	F	RBN,L			; RBN allocated to replace LBN
	F	BAD_RBN,L		; If BR flag, RBN of bad replacement block
	F	WB_CTRL,Q		; Serial # of last controller doing Write back
	F	WB_INCAR,L		; Write back incarnation # 
	F	INCARTIME,Q		; Date-time of last update of incarnation no.
;
; Structure of a Replacement Block Descriptor
;
	V	<M			; Layout of a Replacement Block Descriptor
		LBN,28			;  Space for LBN replaced by this RBN
		CODE,4			;  Describes how this descriptor being used
		>

	V	<M			; Meanings of the bits in CODE
		,28			;  LBN
		NONPRIME		;  Set implies allocated, but not prime RBN
		ALLOCATED		;  This RBN allocated
		UNUSABLE		;  This RBN unusable
		NULL			;  This marks a NULL entry
		>
	K	<			; Values of CODE
		EMPTY,0			;  Unallocated (empty) replacement block
		ALOCPRIME,2		;  Allocated replace blk - primary RBN
		ALOCNONP,3		;  Allocated replace blk - non-primary RBN
		UNUSABLE,4		;  Unusable replacement block
		ALTUNUSE,5		;  Alternate unusable replacement block
		NULL,8			;  Null entry - no corresponding RBN sector
		>			; For codes 0,4,8 LBN field is always zero
	E
;+
; RDT - SCS RESPONSE DESCRIPTOR TABLE
;
; ONE RESPONSE DESCRIPTOR (RD) IS ALLOCATED FOR EACH SCS MESSAGE
; SENT FOR WHICH THE SENDER EXPECTS A MATCHING RESPONSE.
;-

	$STRUCT	RDT

	-F	WAITFL,L		;RD WAIT QUEUE FWD LINK
	-F	WAITBL,L		;RD WAIT QUEUE BACK LINK
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;SCS STURCTURE TYPE
	-F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR RDT
	-F	FREERD,L		;ADDR OF 1ST FREE RD
	-F	MAXRDIDX,L		;MAXIMUM # OF DESCRIPTORS
	-F	,L,1			;RESERVED FOR FUTURE USE
	C	LENGTH,24		;LENGTH OF NEG PORTION OF STRUCTURE

	E

;+
; RD - SCS RESPONSE DESCRIPTOR FORMAT
;-

	$STRUCT	RD

	F	CDRP,L			;ADDR OF ASSOC CDRP OR
					; OR OTHER CONTEXT BLOCK
	S	LINK,,L			; OR LINK TO NEXT FREE RD
	F	STATE,W			;RD STATE FLAGS
		V <			;STATE DEFINITIONS:
		BUSY			; ALLOCATED IF SET
		PERM			; PERMANENTLY ALLOCATED RD IF SET
		>			;
	F	SEQNUM,W		;SEQUENCE NUMBER OF RD
	L	LENGTH			;LENGTH OF RD

	E

;+
; RESTART PARAMETER BLOCK DEFINITIONS
;-
	$STRUCT	RPB
	F	BASE,L			;PHYSICAL BASE ADDRESS OF 64K BLOCK
	F	RESTART,L		;POINTER TO RESTART ROUTINE (PHYSICAL)
	F	CHKSUM,L		;CHECKSUM OF BYTES 0-7F OF RESTART ROUTINE
	F	RSTRTFLG,L		;RESTART IN PROGRESS FLAG
	F	HALTPC,L		;PC AT RESTART/HALT
	F	HALTPSL,L		;PSL AT RESTART/HALT
	F	HALTCODE,L		;CODE DESCRIBING RESTART REASON
	F	BOOTR0,L		;SAVED BOOT PARAMETER R0
	S	R0DEVTYP,,B		; DEVICE TYPE SUBFIELD
	S	,,B			; RESERVED
	S	R0UBVEC,,W		; UNIBUS INT VECTOR SUBFIELD
	F	BOOTR1,L		;SAVED BOOT PARAMETER R1
	V	<			;FIELDS WITHIN BOOT R1
		NEXUS,4			;NEXUS OF SYSTEM DEVICE ADAPTER
		ABUS,2			;ABUS ADAPTER NUMBER OF SBIA
		>
	F	BOOTR2,L		;SAVED BOTT PARAMETER R2
	F	BOOTR3,L		;SAVED BOOT PARAMETER R3
	F	BOOTR4,L		;SAVED BOOT PARAMETER R4
	F	BOOTR5,L		;SAVED BOOT PARAMETER R5
	V	<			;DEFINE BOOT OPTION BITS
		CONV			; CONVERSATIONAL BOOTSTRAP
		DEBUG			; KEEP DEBUGGER CODE
		INIBPT			; INITIAL BREAKPOINT
		BBLOCK			; TRANSFER TO BOOTBLOCK
		DIAG			; BOOT DIAGNOSTIC FILE
		BOOBPT			; BOOTSTRAP BREAKPOINT
		HEADER			; USE START ADDRESS FROM IMAGE HEADER
		NOTEST			; FLAG TO INHIBIT MEMORY TESTING
		SOLICT			; SOLICIT BOOT FILE NAME
		HALT			; HALT BEFORE TRANSFER
		NOPFND			; INHIBIT PFN DELETION
		MPM,,,M			; MULTI-PROCESSOR BOOT, USE MA780 ONLY
		USEMPM,,,M		; USE MA780 AS IF IT WERE LOCAL MEMORY
		MEMTEST,,,M		; USE STRICTER TEST TO VALIDATE MEMORY
		FINDMEM,,,M		; FIND SUFFICIENT MEMORY TO BOOT (>512K)
		,13
		TOPSYS,4,,M		;SYSTEM DIRECTORY NUMBER
		>			;
	F	IOVEC,L			;ADDRESS OF BOOTSTRAP QIO VECTOR
	F	IOVECSZ,L		;SIZE OF BOOT QIO ROUTINE 
	F	FILLBN,L		;LOGICAL BLOCK NUMBER OF BOOT FILE
	F	FILSIZ,L		;SIZE OF BOOT FILE
	F	PFNMAP,Q		;DESCRIPTOR FOR PFN BITMAP
	F	PFNCNT,L		;COUNT OF PHYSICAL PAGES
	F	SVASPT,L		;SYSTEM VIRTUAL ADDRESS OF SPT
	F	CSRPHY,L		;UBA DEVICE CSR ADDRESS (PHYSICAL)
	F	CSRVIR,L		;UBA DEVICE CSR ADDRESS (VIRTUAL)
	F	ADPPHY,L		;ADAPTER CONFIGURATION REGISTER (PHYSICAL)
	F	ADPVIR,L		;ADAPTER CONFIGURATION REGISTER (VIRTUAL)
	F	UNIT,W			;UNIT NUMBER
	F	DEVTYP,B		;DEVICE TYPE CODE
	F	SLAVE,B			;SLAVE UNIT NUMBER
	F	FILE,T,40		;BOOT FILE NAME (ASCIC)
	F	CONFREG,B,16		;ARRAY OF ADAPTER TYPES
	F	HDRPGCNT,B		;COUNT OF HEADER PAGES
	F	BOOTNDT,B		;NEXUS DEVICE TYPE OF BOOT ADAPTER
	F	,W			;SPARE
	F	ISP,L			;PWR FAIL INTERRUPT STACK POINTER
	F	PCBB,L			;PROCESS CONTROL BLOCK BASE
	F	SBR,L			;SYSTEM BASE REGISTER
	F	SCBB,L			;SYSTEM CONTROL BLOCK BASE
	F	SISR,L			;SOFTWARE INTERRUPT SUMMARY REGISTER
	F	SLR,L			;SYSTEM LENGTH REGISTER
	F	MEMDSC,L,16		;MEMORY DESCRIPT. - PAGCNT, TR, BASE PFN
	V	<			;FIELDS WITHIN ONE MEMORY DESCRIPTOR
		PAGCNT,24		; COUNT OF PAGES FOR THIS MEMORY
		TR,8			; TR NUMBER FOR THIS MEMORY
		BASEPFN,32		; BASE PFN FOR THIS MEMORY
		>			;END OF MEMORY DESCRIPTOR FIELDS
	C	MEMDSCSIZ,8		;NUMBER OF BYTES IN ONE MEM DESCRIPTOR
	C	NMEMDSC,8		;NUMBER OF MEMORY DESCRIPTORS IN RPB
	F	BUGCHK,L		;BUGCHECK LOOP ADDRESSS FOR MP SECONDARY
	F	WAIT,B,4		;BUGCHECK LOOP CODE FOR MP SECONDARY

	L	LENGTH			;LENGTH OF RPB
	E

;+
; RSB - RESOURCE BLOCK
;
; RESOURCE BLOCKS REPRESENT RESOURCES FOR WHICH THERE ARE LOCKS OUTSTANDING.
; EACH RESOURCE BLOCK MAY HAVE ONE OR MORE LOCK BLOCKS (LKB) QUEUED TO IT.
;-

	$STRUCT	RSB

	F	HSHCHN,L		;HASH CHAIN
	F	HSHCHNBK,L		;HASH CHAIN BACK POINTER
	F	SIZE,W			;SIZE OF RSB
	F	TYPE,B			;STRUCTURE TYPE
	F	DEPTH,B			;DEPTH IN TREE
	F	PARENT,L		;ADDRESS OF PARENT RSB
	F	REFCNT,L		;SUB RSB REFERENCE COUNT
	F	BLKASTCNT,L		;BLOCKING AST COUNT
	F	GRQFL,L			;GRANTED QUEUE FORWARD LINK
	F	GRQBL,L			;GRANTED QUEUE BACKWARD LINK
	F	CVTQFL,L		;CONVERSION QUEUE FORWARD LINK
	F	CVTQBL,L		;CONVERSION QUEUE BACKWARD LINK	
	F	WTQFL,L			;WAIT QUEUE FORWARD LINK
	F	WTQBL,L			;WAIT QUEUE BACKWARD LINK
	F	VALBLK,Q		;VALUE BLOCK
	F	,Q			;MORE VALUE BLOCK
	F	GGMODE,B		;GROUP GRANT MODE
	F	CGMODE,B		;CONVERSION GRANT MODE
	F	PROT,W			;PROTECTION
	F	GROUP,W			;GROUP NUMBER
	F	RMOD,B			;ACCESS MODE OF RESOURCE
		V<
		MODE,2			; ACCESS MODE
		,5			; SPARE
		SYSNAM,,,M		; SYSTEM NAME
		>
	F	RSNLEN,B		;RESOURCE NAME LENGTH
	L	LENGTH			;LENGTH OF FIXED PART OF RSB
	F	RESNAM,T,0		;START OF RESOURCE NAME
	K	MAXLEN,31		;MAXIMUM LENGTH OF RESOURCE NAME
	E

;+
; RESOURCE NAME DEFINITIONS
;-
	$STRUCT	RSN

	C <RSN,$_,1,1		;0 ORIGIN IN INCREMENTS OF 1
	ASTWAIT 		;WAIT FOR AST EVENT, CHANNEL INTERLOCK
	MAILBOX			;MAILBOX SPACE
	NPDYNMEM  		;NON-PAGED DYNAMIC MEMORY
	PGFILE			;PAGING FILE SPACE
	PGDYNMEM		;PAGED DYNAMIC MEMORY
	BRKTHRU			;TERMINAL BROADCAST
	IACLOCK			;IMAGE ACTIVATION INTERLOCK
	JQUOTA			;JOB POOLED QUOTA
	LOCKID			;LOCKIDS
	SWPFILE			;SWAPPING FILE SPACE
	MPLEMPTY		;MODIFIED PAGE LIST EMPTY
	MPWBUSY			;MODIFIED PAGE WRITER BUSY
	MAX			;MAXIMUM RESOURCE NUMBER
	>
	E

;+
; RVT - RELATIVE VOLUME TABLE
;
; A RELATIVE VOLUME MAPPING TABLE IS REQUIRED FOR EVERY MULTIVOLUME
; STRUCTURE THAT IS MOUNTED IN A SYSTEM.
;-
 
	$STRUCT	RVT
 
	F	RVX			; ADDRESS OF RVT EXTENSION
	F	REFC,W			; REFERENCE COUNT
	F	,W			; SPARE WORD
	F	SIZE,W			; SIZE OF RVT IN BYTES
	F	TYPE,B			; STRUCTURE TYPE OF RVT
	F	NVOLS,B			; NUMBER OF VOLUMES IN SET
	F	STRUCNAME,T,12		; STRUCTURE (VOLUME SET) NAME
	L	LENGTH			; LENGTH OF STANDARD RVT
	F	UCBLST,L		; ADDRESSES OF THE RESPECTIVE UCB'S
	C	MINSIZE,18		; MINIMUM NUMBER OF ENTRIES TO ALLOCATE

	E

;+
;
; RVX - RVT EXTENSION. THIS BLOCK CONTAINS ADDITIONAL DATA THAT SHOULD BE IN
; THE RVT BUT WAS ADDED FOR RELEASE 1.5. IT SHOULD BE MERGED INTO THE RVT
; IN RELEASE 2.
;
;-

	$STRUCT	RVX

	F	,L,2			; SPARE LONGWORDS
	F	SIZE,W			; CONTROL BLOCK SIZE
	F	TYPE,B			; CONTROL BLOCK TYPE
	F	,B			; SPARE BYTE
	F	STRUCNAME,T,12		; STRUCTURE (VOLUME SET) NAME
					; IN ASCII, BLANK FILLED
	L	LENGTH			; LENGTH OF RVX

	E

;+
; SB - SCS SYSTEM BLOCK
;
; THE SB HAS INFORMATION ABOUT KNOWN SYSTEMS IN A CPU CLUSTER.
;-

	$STRUCT	SB

	F	FLINK,L			;FWD LINK TO NEXT SB
	F	BLINK,L			;BACK LINK TO PREVIOUS SB
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR SB
	F	PBFL,L			;LINK TO NEXT PATH BLOCK
	F	PBBL,L			;LINK TO PREVIOUS PATH BLOCK
	F	PBCONNX,L		;ADDR OF NEXT PB TO USE FOR
					; A CONNECTION
	F	SYSTEMID,B,6		;SYSTEM ID
	F	,W			;RESERVED WORD
	F	MAXDG,W			;MAXIMUM DATAGRAM SIZE
	F	MAXMSG,W		;MAXIMUM MESSAGE SIZE
	F	SWTYPE,T,4		;SOFTWARE TYPE, 1-4 CHAR
	F	SWVERS,T,4		;SOFTWARE VERSION, 1-4 CHAR
	F	SWINCARN,Q		;SOFTWARE INCARNATION #
	F	,L,1			;RESERVED LONGWORD
	L	LENGTH			;LENGTH OF SB

	E

;+
; SCS MESSAGE DEFINITIONS
;
; THIS STRUCTURE DEFINES OFFSETS AND FIELDS WITHIN THE SCS PORTION OF
; A CLUSTER MESSAGE.  OFFSETS ARE FDEFINED RELATIVE TO THE START OF THE 
; MESSAGE.  THE FULL MESSAGE FORMAT CONSISTS OF A PORT DRIVER LAYER
; HEADER (SEE STRUCTURE PPD) FOLLOWED BY THE SCS HEADER LAYER FOLLOWED
; BY THE APPLICATION DATA OR SCS CONTROL MESSAGE DATA.  THE SCS MESSAGE 
; OFFSETS AS DEFINED BELOW HAVE THE LENGTH OF THE PPD LAYER ADDED IN
; BUT ARE DEFINED SEPARATELY FROM THE PPD LAYER TO FACILITATE BREAKING
; THE TWO LAYERS APART SOMETIME IN THE FUTURE.
;-

	$STRUCT	SCS

	F	PPD,B,16		;16 BYTES OF PPD HEADER
	F	LENGTH,W		;MESSAGE LENGTH (INCLUDES ALL
					; BYTES FROM SCS$W_LENGTH ON,
					; NOT INCLUDING SCS$W_LENGTH)
					; (FIELD SHARED BY PPD)
	C	<SCS,$C_		;DEFINE LENGTHS OF SCS CONTROL MSGS:
		CON_REQL,66		; CONNECT_REQ LENGTH
		CON_RSPL,18		; CONNECT_RSP LENGTH
		ACCP_REQL,66		; ACCEPT_REQ LENGTH
		ACCP_RSPL,18		; ACCEPT_RSP LENGTH
		REJ_REQL,18		; REJECT_REQ LENGTH
		REJ_RSPL,14		; REJECT_RSP LENGTH
		DISC_REQL,18		; DISCONNECT_REQ LENGTH
		DISC_RSPL,14		; DISCONNECT_RSP LENGTH
		CR_REQL,18		; CREDIT_REQ LENGTH
		CR_RSPL,14		; CREDIT_RSP LENGHT
		>			;
	F	,W			;WORD RESERVED FOR PPD LAYER
	F	MTYPE,W			;SCS MESSAGE TYPE
					;SCS MESSAGE TYPE CODES:
	C	<SCS,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1
		CON_REQ			; CONNECT_REQ
		CON_RSP			; CONNECT_RSP
		ACCP_REQ		; ACCEPT_REQ
		ACCP_RSP		; ACCEPT_RSP
		REJ_REQ			; REJECT_REQ
		REJ_RSP			; REJECT_RSP
		DISC_REQ		; DISCONNECT_REQ
		DISC_RSP		; DISCONNECT_RSP
		CR_REQ			; CREDIT_REQ
		CR_RSP			; CREDIT_RSP
		APPL_MSG		; APPLICATION MESSAGE
		APPL_DG			; APPLICATION DATAGRAM
		>
	F	CREDIT,W		;CREDIT BEING EXTENDED
	F	DST_CONID,L		;DESTINATION (RECVING) CONNX ID
	F	SRC_CONID,L		;SOURCE (SENDING) CONNX ID
	L	APPL_BASE		;BASE OF APPLICTION MESSAGE DATA
	F	MIN_CR,W		;MINIMUM SEND CREDIT
	F	STATUS,W		;STATUS/REASON
					;DEFINE STATUS/REASON CODES:
	C	<SCS,$C_ST,0,1		; 0 ORIGIN, INCREMENTS OF 1
		NOMAT			; NO MATCHING LISTENER PROCESS
		NORMAL			; SUCCESS STATUS;  USED FOR:
					;  MATCHING LISTENER PROCESS 
		NORS			; NO LISTENER RESOURCES (BUSY)
		DISC			; CDT UNILATERALLY DISCONNECTED
		>			;
	L	CON_BASE		;BASE OF CONNECT/ACCEPT INFO TO
					; GIVE TO SYSAP'S
					;FORMAT OF CONNECT/ACCEPT_REQ MSGS:
	F	DST_PROC,T,16		; DESTINATION PROCESS NAME
	F	SRC_PROC,T,16		; SOURCE PROCESS NAME
	F	CON_DAT,B,16		; CONNECT DATA

	E

;+
; SCSCMG - SCS CONNECTION MANAGEMENT MESSAGE FORMAT
;
; THIS PORTION OF A CONNECT/ACCEPT MESSAGE IS SEEN BY A
; SYSTEM APPLICATION.
;-

	$STRUCT	SCSCMG

	F	RECNAM,T,16		;RECEIVE PROCESS NAME
	F	SNDNAM,T,16		;SENDER PROCESS NAME
	F	SNDDAT,B,16		;SENDER CONNECT DATA

	E

;+
; SDIR - SCS DIRECTORY ENTRY
;
; THIS DATA STRUCTURE IS ALLOCATED FOR EACH LOCAL PROCESS THAT WANTS
; TO BE KNOWN TO SCS.
;-

	$STRUCT	SDIR

	F	FLINK,L			;FWD LINK
	F	BLINK,L			;BCK LINK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCTURE SUBTYPE FOR SDIR
	F	PROCNAM,B,16		;ASCII STRING FOR PROCESS NAME
	F	PROCINF,B,16		;ASCII STRING FOR PROCESS INFO
	F	CONID,L			;CONNECTION ID
	L	LENGTH

	E


;+
; SYSGEN PARAMETER DEFINITIONS
;-

	$STRUCT	SGN

	C <SGN,$C_			;
		BALSETCNT,24		; NUMBER OF PROCESSES IN BALANCE SET
		DFWSCNT,100		; DEFAULT WORKING SET COUNT
		DFWSQUOTA,120		; DEFAULT WORKING SET QUOTA
		GBLSECCNT,40		; GLOBAL SECTION COUNT
		MAXGPGCNT,2*1024	; GLOBAL PAGE COUNT (GPT SIZE)
		MAXPAGCNT,128*32*4	; PHYSICAL MEMORY SIZE IN PAGES
		MAXPGFL,4096		; DEFAULT MAXIMUM PAGING FILE
		MAXPSTCNT,5		; MAX NUMBER OF PST ENTRIES
		MAXVPGCNT,8*8*128	; MAX PROCESS VIRTUAL SIZE (PAGES)
		MAXWSCNT,1024		; MAX WORKING SET SIZE (PAGES)
		MINWSCNT,10		; MIN WORKING SET SIZE (PAGES)
		NPAGEDYN,52*512		; NON-PAGED DYNAMIC POOL SIZE
		NPROCS,64		; MAX NUMBER OF PROCESSES
		PAGEDYN,2*16*512	; PAGED DYNAMIC POOL SIZE IN BYTES
		PHYPAGCNT,32*128	; ACTUAL PHYSICAL PAGE COUNT
		SYSDWSCNT,40		; DEFAULT SYSTEM WORKING SET COUNT
		SYSVECPGS,4		; NO. OF PAGES OF SYSTEM SERVICE VECTORS
		SYSWSCNT,96		; SYSTEM WORKING SET COUNT
	>
	E

;+
; SHARED MEMORY CONTROL BLOCK DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;

	$STRUCT	SHB

	F	LINK,L			;LINK TO NEXT SHB
	F	DATAPAGE,L		;VIRTUAL ADDRESS OF DATAPAGE
	F	SIZE,W			;SIZE OF SHB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR SHB
	F	FLAGS,B			;FLAGS
		V<			; FLAG DEFINITIONS
		CONNECT,,,M		;  MEMORY IS CONNECTED, USEABLE
		>
	F	REFCNT,L		;COUNT OF REFERENCES TO MEMORY
	F	BASGSPFN,L		;BASE PFN FOR GLOBAL SECTION PAGES
	F	NEXUS,B			;NEXUS OF PORT
	F	PORT,B			;PORT NUMBER
	F	,W			; UNUSED
	F	POOLEND,L		;ADDRESS PAST LAST BYTE OF POOL
	F	ADP,L			;ADAPTER CONTROL BLOCK ADDRESS
	L	LENGTH			;LENGTH OF CONTROL BLOCK
	
	E

;+
; SHARED MEMORY DATAPAGE DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;

	$STRUCT	SHD

	C	MAXPORTS,16		;MAXIMUM NUMBER PORTS HANDLED BY THIS
					;DATA STRUCTURE
;*** START OF CONSTANT FIELDS:
	F	MBXPTR,L		;RELATIVE POINTER TO MAILBOX TABLE
	F	GSDPTR,L		;RELATIVE POINTER TO GSD TABLE
	F	CEFPTR,L		;RELATIVE POINTER TO CEF TABLE
	F	GSBITMAP,L		;RELATIVE POINTER TO BITMAP
	F	GSPAGCNT,L		;CNT OF PAGES ALLOTTED FOR GBL SECTIONS
	F	GSPFN,L			;RELATIVE PFN OF 1ST GBL SECTION PAGE
	F	GSDMAX,W		;MAX GSD'S (SIZE OF TABLE)
	F	MBXMAX,W		;MAX MAILBOXES (SIZE OF TABLE)
	F	CEFMAX,W		;MAX CEF CLUSTERS (SIZE OF TABLE)
	F	,W			;UNUSED
	F	NAME,T,16		;NAME OF MEMORY (COUNTED STRING)
	C	NAMLENGTH,16		;MAXIMUM LENGTH OF NAME OF MEMORY
	F	INITTIME,Q		;INITIALIZATION TIME
;*** END OF CONSTANT FIELDS.
	F	CRC,L			;CRC OF CONSTANT FIELDS
	F	GSDQUOTA,W,16		;COUNT OF GSD'S CREATED (ONE/PORT)
	F	MBXQUOTA,W,16		;COUNT OF MAILBOXES CREATED (ONE/PORT)
	F	CEFQUOTA,W,16		;COUNT OF CLUSTERS CREATED (ONE/PORT)
	F	PORTS,B			;NUMBER OF PORTS
	F	INITLCK,B		;OWNER OF INIT LOCK
	F	BITMAPLCK,B		;OWNER OF GS BITMAP LOCK
	F	FLAGS,B			;FLAGS FOR LOCKING DATA STRUCTURES
	V	<			;START OF COMMON DATA PAGE FLAGS
		INITLCK,,,M		;COMMON DATA PAGE BEING INITIALIZED
		BITMAPLCK,,,M		;BITMAP BEING MODIFIED
		GSDLCK,,,M		;GLOBAL SECTION DSC TABLE BEING SEARCHED
		MBXLCK,,,M		;MAILBOX TABLE BEING SEARCHED
		CEFLCK,,,M		;COMMON EVENT FLAG TABLE BEING SEARCHED
		>			;END OF COMMON DATA PAGE FLAGS
	F	GSDLOCK,B		;OWNER OF GSD TABLE LOCK
	F	MBXLOCK,B		;OWNER OF MBX TABLE LOCK
	F	CEFLOCK,B		;OWNER OF CEF TABLE LOCK
	F	,B			;UNUSED
	F	PRQWAIT,W		;PORTS WAITING FOR INTER-PROCESSOR REQUEST BLOCKS
					; (ONE BIT/PORT)
	F	POLL,W			;PORTS ACTIVELY USING THE MEMORY
					; (ONE BIT/PORT)
	F	RESWAIT,W,16		;PORTS WAITING FOR A RESOURCE
					; (ONE BIT/PORT, ONE MASK/RESOURCE)
	F	RESAVAIL,W,16		;PORTS NEEDING TO REPORT RESOURCE AVAILABLE
					; (ONE BIT/PORT, ONE MASK/RESOURCE)
	F	RESSUM,W		;PORTS WITH RESOURCES TO REPORT
					; (ONE BIT/PORT)
	F	,W			;UNUSED
	F	,L			;UNUSED
;*** NOTE: THE FOLLOWING FIELDS MUST BE QUADWORD ALIGNED:
	F	PRQ,Q			;FREE INTER-PROCESSOR REQUEST BLOCK LISTHEAD
	F	POOL,Q			;FREE POOL BLOCK LISTHEAD
	F	PRQWRK,Q,16		;INTER-PROCESSOR REQUEST WORK QUEUE LISTHEADS
					; (ONE LISTHEAD/PORT)
	L	LENGTH			;LENGTH OF DATAPAGE
	E

;+
; SHL - SHAREABLE IMAGE LIST
;
; THIS LIST IS CREATED IN THE IMAGE FIXUP SECTION BY THE LINKER AND
; USED BY THE IMAGE ACTIVATOR FOR DOING SHAREABLE IMAGE FIXUPS.
;-
	$STRUCT	SHL

	F	BASEVA, L		; Base address of this shareable image
	F	SHLPTR, L		; Pointer from SHL in shareable image
					;  to associated SHL in executable image
	F	IDENT, L		; GSMATCH
	F	PERMCTX, L		; Permanent sharable image context
	F	,L			; Spare for extensions
	F	,L			; Spare for extensions
	C	<
		MAXNAMLNG,31		; Maximum length of image name
		>
	F	IMGNAM,T,32		; Shareable image name (ASCIC string)
	S	NAMLNG,0,B		; Synonym for name count
	L	LENGTH			; Length of shareable image list element
	E


;+
; SCHEDULING STATES
;-
 
	$STRUCT	STATE

	C <SCH,$C_,1,1		; DEFINITIONS START AT 1
	COLPG  			;COLLIDED PAGE WAIT
	MWAIT  			;MUTEX AND MISCELLANEOUS RESOURCE WAIT
	CEF  			;COMMON EVENT FLAG WAIT STATE
	PFW  			;PAGE FAULT WAIT
	LEF  			;LOCAL EVENT FLAG WAIT
	LEFO  			;LOCAL EVENT FLAG WAIT OUT OF BALANCE SET
	HIB  			;HIBERNATE WAIT
	HIBO  			;HIBERNATE WAIT OUT OF BALANCE SET
	SUSP  			;SUSPENDED
	SUSPO			;SUSPENDED OUT OF THE BALANCE SET
	FPG  			;FREEPAGE WAIT
	COM  			;COMPUTE, IN BALANCE SET STATE
	COMO  			;COMPUTE, OUT OF BALANCE SET STATE
	CUR  			;CURRENT PROCESS STATE
>
	E

;
; TERMINAL AST PACKET. THIS STRUCTURE IS USED BY TERMINAL SERVICES TO
; DELIVER OUT OF BAND CHARACTER ASTS.
;

	$STRUCT	TAST
	F	,L,7		;RESERVE ACB REGION
	F	FLINK,L		;FORWARD LINK
	F	AST,L		;SAVED AST ADDRESS
	F	ASTPRM,L	;SAVED AST PARAMETER
	F	PID,L		;SAVED PID
	F	RMOD,B		;SAVED RMOD
	F	CTRL,B		;CONTROL FIELD
		V<
		MASK_DSBL,,,M	;DISABLE MASK PROCESSING
		INCLUDE,,,M	;INCLUDE CHARACTER
		ONE_SHOT,,,M	;ONE SHOT AST
		BUSY,,,M	;BLOCK BUSY
		LOST,,,M	;AST LOST
		>
	F	CHAN,W		;CHANNEL
	F	MASK,L		;OUT OF BAND MASK
	L	LENGTH
	
	E

;+
; TQE - TIME QUEUE ENTRY
;
; TIME QUEUE ENTRIES ARE UTILIZED TO SET TIMERS, WAKE UP PROCESSES, AND
; FOR INTERNAL SYSTEM SUBROUTINES.
;-
 
	$STRUCT	TQE
 
	F	TQFL,L			;TIME QUEUE FORWARD LINK
	F	TQBL,L			;TIME QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF TQE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR TQE
	F	RQTYPE,B		;TIME QUEUE ENTRY TYPE
		V <			; TQE$B_RQTYPE BIT DEFINITIONS
		,2			; STARTING OFFSET
		REPEAT,,,M		; REPEAT REQUEST (1=YES)
		ABSOLUTE,,,M		; Absolute expiration time specified
		>			; END OF BIT DEFINITIONS
	F	PID,L			;TIMER OR WAKE REQUEST PROCESS ID
	S	FPC,,L			;TIMER SUBROUTINE ADDRESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	S	FR3,,L			;TIMER SUBROUTINE SAVED R3
	F	ASTPRM,L		;AST PARAMETER
	S	FR4,,L			;TIMER SUBROUTINE SAVED R4
	F	TIME,Q			;ABSOLUTE EXPIRATION TIME
	F	DELTA,Q			;DELTA REPEAT TIME
	F	RMOD,B			;ACCESS MODE OF REQUEST
	F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	F	,W			;SPARE WORD
	F	RQPID,L			;REQUESTER PROCESS ID
	L	LENGTH			;LENGTH OF STANDARD TQE
 
;
; TIME QUEUE ENTRY REQUEST TYPE DEFINITIONS
;
 
	C	TMSNGL,0		;TIMER ENTRY SINGLE SHOT REQUEST
	C	SSREPT,1+TQE$M_REPEAT	;SYSTEM SUBROUTINE REPEAT REQUEST
	C	SSSNGL,1		;SYSTEM SUBROUTINE SINGLE SHOT REQUEST
	C	WKREPT,2+TQE$M_REPEAT	;WAKE ENTRY REPEAT REQUEST
	C	WKSNGL,2		;WAKE ENTRY SINGLE SHOT REQUEST
 
	E

;++
; USER AUTHORIZATION FILE FORMAT
;--

	$STRUCT UAF
	F	USERNAME,T,12		; USERNAME
	F	PWD,Q			; HASHED PASSWORD
	S	PWD,,L			; 32 BIT SUBFIELD
	F	ACCOUNT,T,8		; ACCOUNT NAME
	F	UIC,L			; USER ID CODE
	S	MEM,,W			; MEMBER SUBFIELD
	S	GRP,,W			; GROUP SUBFIELD
	F	DEFDIR,T,32		; DEFAULT DIRECTORY (counted string)
	F	DEFDEV,T,16		; DEFAULT DEVICE (counted string)
	F	DEFCLI,T,9		; DEFAULT COMMAND INTERPRETER
	F	ENCRYPT,B		; ENCRYPTION ALGORITHM
		C <			;  ENCRYPTION CODES
		AD_II			; AUTODIN-II 32 BIT CRC CODE
		Purdy			; Purdy POLYNOMIAL OVER SALTED INPUT
		>
	F	CPUTIM,L		; CPU TIME QUOTA
	F	PRIV,Q			; PROCESS PRIVILEGE VECTOR
	F	BIOLM,W			; BUFFERED I/O LIMIT
	F	BYTLM,W			; BUFFERED I/O BYTE COUNT LIMIT
	F	DIOLM,W			; DIRECT I/O LIMIT
	F	FILLM,W			; OPEN FILE LIMIT
	F	TQCNT,W			; TIMER QUEUE ENTRY LIMIT
	F	PRCCNT,W		; SUBPROCESS CREATION LIMIT
	F	WSQUOTA,W		; WORKING SET SIZE QUOTA
	F	DFWSCNT,W		; DEFAULT WORKING SET SIZE
	F	ASTLM,W			; AST QUEUE LIMIT
	F	ENQLM,W			; ENQUEUE LIMIT
	F	PGFLQUOTA,L		; PAGE FILE QUOTA
	F	OWNER,T,32		; OWNER'S NAME
	F	FILPRT,W		; DEFAULT FILE PROTECTION
	F	PRI,B			; BASE PROCESS PRIORITY
	F	FLAGS,B			; USER FLAGS BYTE
		V <			;  BIT DEFINITIONS
		DISCTLY			; DON'T ALLOW USER CONTROL-Y
		DEFCLI			; ONLY ALLOW USER DEFAULT CLI
		LOCKPWD			; DISABLE SET PASSWORD COMMAND
		CAPTIVE			; NO OVERIDES ALLOWED ON LOGIN-EG /DISK
		DISACNT			; DON'T ALLOW INTERACTIVE LOGIN
		DISWELCOM		; FLAG TO ALLOW LOGIN TO SKIP WELCOME
		DISMAIL			; FLAG TO ALLOW LOGIN TO SKIP NEW MAIL
		>
	F	LEVEL,L			; FOR RECORD AND FILE LEVEL INFO
	F	LGICMD,T,32		; LOGIN COMMAND FILE (counted string)
	F	MAIL,W			; LOWEST VERSION OF NEW MAIL.TXT
	F	PBYTLM,L		; PAGED BUFFER I/O BYTE COUNT LIMIT
	F	SHRFILLM,W		; SHARED FILE LIMIT
	F	USRDATOFF,W		; OFFSET OF COUNTED STRING OF USER DATA
	F	SALT,W			; RANDOM PASSWORD SALT
	F	WSEXTENT,W		; WORKING SET SIZE LIMIT
	F	PDAYHOURS,L		; FIELD DESCRIBING PRIMARY DAY ACCESS
					; HOURS, FROM 0:00 TO 23:00
	S	PDAYFLAGS,3,B		; FLAGS ASSOCIATED WITH PRIMARY DAYS
		V <			; BIT DEFINITIONS
		DISDIALUP		; SET DISALLOWS DIAL-IN USE OF ACCOUNT
		DISNETWORK		; SET DISALLOWS NETWORK USE OF ACCOUNT
		>
	F	SDAYHOURS,L		; FIELD DESCRIBING SECONDARY DAY ACCESS
					; HOURS, 0:00 TO 23:00
	S	SDAYFLAGS,3,B		; FLAGS ASSOCIATED WITH SECONDARY DAY 
					; USAGE: SEE PDAYFLAGS
	F	MAXPROC,B		; MAXIMUM PROCESSES FOR UIC ALLOWED
					; 0 MEANS NO LIMIT
	F	MAXGRPROC,B		; MAXIMUM PROCESSES FOR GROUP ALLOWED
					; 0 MEANS NO LIMIT
	F	PRIMEDAYS,B		; BITS REPRESENTING PRIMARY DAYS
		V <			; BIT DEFINITIONS
		MONDAY			; BIT CLEAR MEANS THIS IS A PRIMARY DAY
		TUESDAY			; BIT SET MEANS THIS IS AN OFF DAY
		WEDNESDAY
		THURSDAY
		FRIDAY
		SATURDAY
		SUNDAY
		>
	F	,B,1			; UNUSED, 0
	F	BYTLM,L			; BUFFERED I/O BYTE COUNT LIMIT 
					;			(longword)
	F	,B,8			; fixed length field expansion
	F	,W,6
	F	,Q,3
	F	,L,3
	L	FIXED			; LENGTH OF FIXED PORTION
	F	,B,768			; variable length field region
	L	LENGTH
	E

;+
; UNIBUS ADAPTER REGISTER OFFSET DEFINITIONS
;-
 
	$STRUCT	UBA
 
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V <			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8		; ADAPTER CODE FIELD
		,8			; RESERVED BITS
		CSR_UBIC,,,M		; UNIBUS INITIALIZATION COMPLETE
		CSR_UBPDN,,,M		; UNIBUS POWER DOWN
		CSR_UBIIP,,,M		; UNIBUS INITIALIZATION IN PROGRESS
		,2			; RESERVED BITS
		CSR_OT,,,M		; OVER TEMPERATURE
		CSR_PU,,,M		; ADAPTER POWER UP
		CSR_PD,,,M		; ADAPTER POWER DOWN
		,2			; RESERVED BITS
		CSR_XMFLT,,,M		; TRANSMITTER FAULT
		CSR_MT,,,M		; MULTIPLE TRANSMITTERS
		CSR_IS,,,M		; INTERLOCK SEQUENCE FAULT
		CSR_URD,,,M		; UNEXPECTED READ DATA
		CSR_WS,,,M		; WRITE SEQUENCE DATA
		CSR_PE,,,M		; SBI PARITY ERROR
		>			;
	F	CR,L			;CONTROL REGISTER
		V <			; CONTROL REGISTER FIELD DEFINITIONS
		CR_INIT,,,M		; ADAPTER INITIALIZATION
		CR_UBPF,,,M		; UNIBUS POWER FAIL
		CR_CNFIE,,,M		; CONFIGURATION INTERRUPT ENABLE
		CR_SUEFIE,,,M		; SBI TO UNIBUS ERROR FIELD INTERRUPT ENABLE
		CR_USEFIE,,,M		; UNIBUS TO SBI ERROR FIELD INTERRUPT ENABLE
		CR_BRIE,,,M		; BUS REQUEST INTERRUPT ENABLE
		CR_IFSIE,,,M		; INTERRUPT FIELD SWITCH INTERRUPT ENABLE
		CR_ARLVL,2,,M		; ADAPTER REQUEST LEVEL
		,17			; RESERVED BITS
		CR_MRDSB,5		; MAP REGISTER DISABLE
		>			;
	F	SR,L			;STATUS REGISTER
		V <			; STATUS REGISTER FIELD DEFINITIONS
		SR_SSYNC,,,M		; UNIBUS SLAVE SYNC TIMEOUT
		SR_UBSTO,,,M		; UNIBUS SELECT TIMEOUT
		SR_LER,,,M		; LOST ERROR
		SR_MRPE,,,M		; MAP REGISTER PARITY ERROR
		SR_IVMR,,,M		; INVALID MAP REGISTER
		SR_DPPE,,,M		; DATAPATH PARITY ERROR
		SR_CXTMO,,,M		; COMMAND TRANSMISSION TIMEOUT
		SR_CXTER,,,M		; COMMAND TRANSMISSION ERROR
		SR_CRD,,,M		; CORRECTED READ DATA
		SR_RDS,,,M		; READ DATA SUBSTITUTE
		SR_RDTO,,,M		; READ DATA TIMEOUT
		SR_BRID,,,M		; BUS REQUEST INTERRUPT DONE
		,12			; RESERVED BITS
		SR_BRRVF,4		; BUS REQUEST RECEIVE VECTOR FULL
		SR_BRSVF,,,M		; BUS REQUEST SEND VECTOR FULL
		SR_RIE,,,M		; REQUEST INTERRUPT ENABLED
		SR_UBIFS,,,M		; UNIBUS INTERRUPT FIELD SWITCH
		>			;
	F	DCR,L			;DIAGNOSTIC CONTROL REGISTER
	F	FMER,L			;FAILED MAP ENTRY REGISTER
		V <			; FAILED MAP ENTRY REGISTER FIELD DEFINITIONS
		FMER_MRN,9		; FAILED MAP REGISTER NUMBER
		>			;
	F	FUBAR,L			;FAILED UNIBUS ADDRESS REGISTER
		V <			; FAILED UNIBUS ADDRESS REGISTER FIELD DEFINITIONS
		FUBAR_ADR,18		; FAILED SBI TO UNIBUS ADDRESS
		>			;
	F	,L,2			;RESERVED REGISTERS
	F	BRSVR,L,4		;BUS REQUEST SEND VECTOR REGISTERS
	F	BRRVR,L,4		;BUS REQUEST RECEIVE VECTOR REGISTER
		V <			; BUS REQUEST RECEIVE VECTOR REGISTER FIELD DEFINITIONS
		BRRVR_IVA,16		; INTERRUPT VECTOR ADDRESS
		,15			; RESERVED BITS
		BRRVR_AIR,,,M		; ADAPTER INTERRUPT REQUEST PENDING
		>			;
	F	DPR,L,16		;DATAPATH REGISTERS
		V <			; DATAPATH REGISTER FIELD DEFINITIONS
		DPR_ADDR,16		; BUFFERED UNIBUS ADDRESS
		DPR_STATE,8		; BUFFER STATE FLAGS
		,5			; RESERVED BITS
		DPR_DPF,,,M		; DATAPATH FUNCTION
		DPR_XMTER,,,M		; BUFFER TRANSFER ERROR
		DPR_BNE,,,M		; BUFFER NOT EMPTY
		>			;
	F	,B,1920			; VALUE IS 2048-128
	F	MAP,L,496		;MAP REGISTERS
		V <			; MAP REGISTER FIELD DEFINITIONS
		MAP_ADDR,21		; SBI PAGE ADDRESS
		MAP_DPD,4		; DATAPATH DESIGNATOR
		MAP_BO,,,M		; BYTE OFFSET
		,5			; RESERVED BITS
		MAP_VALID,,,M		; MAP REGISTER VALID
		>			;
	C	MAXDP,15		;MAXIMUM DATAPATH #
 
	E

;+
; UNIBUS INTERCONNECT (VAX 11/750 & 11/730) REGISTER OFFSETS AND FIELDS
;-

	$STRUCT	UBI

	M	1			;MARK START OF ADAP REGISTER SPACE
	F	DPR,L,4			;DATAPATH REGISTERS
					; (DPR 0 NOT IMPLEMENTED)
		V<			; DPR FIELD DEFINITIONS
		DPR_PUR,,,M		; DATAPATH PURGE
		,28			; RESERVED BITS
		DPR_UCE,,,M		; UNCORRECTABLE ERROR
		DPR_NXM,,,M		; NON-EXISTENT MEMORY
		DPR_ERROR,,,M		; ERROR (UCE!NXM)
		>			;
	M	2			;MARK START OF CPU-SPECIFIC REGISTERS
	P	2			;VAX 11/750 REGISTERS:
	F	DSR,L,4			;DIAGNOSTIC STATUS REGISTERS
					; (DSR 0 NOT IMPLEMENTED)
		V<			; DSR FIELD DEFINITIONS
		,27			; RESERVED BITS
		DSR_CD,,,M		; ALL 4 BYTES IN BDP FULL
		DSR_BF,4		; BYTE 0,1,2,3 IN BDP HAS VALID DATA
		>			;
	P	2			;VAX 11/730 REGISTERS:
	F	SR,L,1			;UB STATUS REGISTER:
		V<			; SR FIELD DEFINITIONS:
		,14			; RESERVED BITS
		SR_UWE,,,M		; UNCORRECTED WRITE ERROR
		SR_MRPE,,,M		; MAP REGISTER PARITY ERROR
		SR_NXM,,,M		; NONEXISTENT MEMORY REF
		,14			; RESERVED BITS
		SR_UCE,,,M		; UNCORRECTED READ ERROR
		>			;
					;END OF CPU_SPECIFIC REGISTERS
	P	1			;BACK UP TO START OF REGISTERS
	F	,B,2048			;RESERVE ^X800 BYTES
	F	MAP,L,496		;MAP REGISTERS, SAME FORMAT AS UBA
	C	MAXDP,3			;MAXIMUM DATAPATH #
	C	PURCNT,10		;MAX # OF TESTS OF PURGE DONE
	E

;+
; UBMD - UNIBUS Map Descriptor used to record UNIBUS map registers
;	and datapaths allocated.
;-

	$STRUCT	UBMD

	F	MAPREG,W		; Starting map register
	F	NUMREG,B		; Number of registers in extent
	F	DATAPATH,B		; Associated Buffered datapath

	E

;+
; UCB - UNIT CONTROL BLOCK
;
; THERE IS ONE UCB FOR EACH DEVICE UNIT IN A SYSTEM.
;-
 
	$STRUCT	UCB
 
	M	3			;MARK 0 POSITION
	F	FQFL,L			;FORK QUEUE FORWARD LINK
	S	RQFL,,L			;NET RCV QUEUE FORWARD LINK
	F	FQBL,L			;FORK QUEUE BACKWARD LINK
	S	RQBL,,L			;NET RCV QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF UCB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR UCB
	F	FIPL,B			;FORK INTERRUPT PRIORITY LEVEL
	F	ASTQFL,L		;MAILBOX AST QUEUE LISTHEAD FORWARD LINK
	S	FPC,,L			;FORK PC
	S	PARTNER,0,T		; NETWORK - PARTNER'S NODENAME
	F	ASTQBL,L		;MAILBOX AST QUEUE LISTHEAD BACKWARD LINK
	S	FR3,,L			;FORK R3
	F	FR4,L			;FORK R4
	S	FIRST,0,L		; ADDR OF 1ST SEG OF CHAINED NET MSG
	S	MSGMAX,0,W		;MAILBOX MAXIMUM MESSAGES ALLOWED
	S	MSGCNT,2,W		;MAILBOX CURRENT NUMBER OF MESSAGES
	F	BUFQUO,W		;MAILBOX BUFFERED I/O QUOTA
	S	DSTADDR,,W		; NETWORK - REMOTE CONNECT NO.
	F	VPROT,W			;VOLUME PROTECTION
	S	SRCADDR,,W		; NETWORK - LOCAL CONNECT NO.
	F	OWNUIC,L		;VOLUME OWNER UIC
	F	CRB,L			;ADDRESS OF PRIMARY CHANNEL REQUEST BLOCK
	F	DDB,L			;BACKPOINTER TO DEVICE DATA BLOCK
	F	PID,L			;PROCESS ID OF OWNER PROCESS
	F	LINK,L			;ADDRESS OF NEXT UCB FOR RESPECTIVE DDB
	F	VCB,L			;ADDRESS OF VOLUME CONTROL BLOCK
	F	DEVCHAR,L		;DEVICE CHARACTERISTIC BITS
	F	DEVCLASS,B		;DEVICE CLASS
	F	DEVTYPE,B		;DEVICE TYPE
	F	DEVBUFSIZ,W		;DEVICE DEFAULT BUFFER SIZE
	F	DEVDEPEND,L		;DEVICE DEPENDENT DATA
	S	JNL_SEQNO,0,L		; RUNNING JOURNAL SEQUENCE NUMBER
	S	SECTORS,0,B		;DISK - SECTORS PER TRACK
	S	LOCSRV,0,B		; NETWORK - LOCAL LINK SERVICES
	S	REMSRV,1,B		; NETWORK - REMOTE LINK SERVICES
	S	TRACKS,1,B		;DISK - TRACKS PER CYLINDER
	S	CYLINDERS,2,W		;DISK - TOTAL CYLINDERS
	S	BYTESTOGO,2,W		; NETWORK - NO. OF BYTES LEFT IN RCV BFR
	S	VERTSZ,3,B		;VERTICAL PAGE SIZE
	F	IOQFL,L			;I/O QUEUE LISTHEAD FORWARD LINK
	F	IOQBL,L			;I/O QUEUE LISTHEAD BACKWARD LINK
	F	UNIT,W			;PHYSICAL DEVICE UNIT NUMBER
	F	CHARGE,W		;MAILBOX BYTE COUNT QUOTA CHARGE
	S	RWAITCNT,0,W		;CLASS DRIVERS: # THREADS WAITING RESOURCES
	S	CM1,0,B			;LEVEL 1 CONTROLLER ALLOCATION MASK
	S	CM2,1,B			;LEVEL 2 CONTROLLER ALLOCATION MASK
	F	IRP,L			;CURRENT I/O REQUEST PACKET ADDRESS
	F	REFC,W			;REFERENCE COUNT OF PROCESSES
	F	DIPL,B			;DEVICE INTERRUPT PRIORITY LEVEL
	S	STATE,,B		; LINK STATE FOR NETWORK TRANSITIONS
	F	AMOD,B			;ALLOCATION ACCESS MODE
	F	AMB,L			;ASSOCIATED UNIT CONTROL BLOCK POINTER
	F	STS,W			;DEVICE UNIT STATUS
		V<			; UCB$W_STS BIT DEFINITIONS
		TIM,,,M			; TIME OUT ENABLED (1=YES)
		INT,,,M			; INTERRUPT EXPECTED (1=YES)
		ERLOGIP,,,M		; ERROR LOG IN PROGRESS ON UNIT (1=YES)
		CANCEL,,,M		; CANCEL I/O ON UNIT (1=YES)
		ONLINE,,,M		; UNIT ONLINE (1=YES)
		POWER,,,M		; POWER FAILED WHILE UNIT BUSY (1=YES)
		TIMOUT,,,M		; UNIT TIMED OUT (1=YES)
		INTTYPE,,,M		; RECEIVER INTERRUPT IF SET
		BSY,,,M			; UNIT IS BUSY (1=YES)
		MOUNTING,,,M		; DEVICE IS BEING MOUNTED
		DEADMO,,,M		; DEALLOCATE AT DISMOUNT
		VALID,,,M		; VOLUME IS SOFTWARE VALID
		UNLOAD,,,M		; UNLOAD VOLUME AT DISMOUNT
		TEMPLATE,,,M		; SET IF THIS IS THE TEMPLATE 
					; FROM WHICH OTHER UCB'S FOR
					; THIS DEVICE TYPE ARE MADE
		MNTVERIP,,,M		; MOUNT VERIFICATION IN PROGRESS
		WRONGVOL,,,M		; WRONG VOLUME DETECTED DURING MOUNT VERIFICATION
		>			; END OF BIT DEFINITIONS
	F	DEVSTS,W		;DEVICE DEPENDENT STATUS
		V<			; UCB$W_DEVSTS BIT DEFINITIONS
		JOB,,,M			; JOB CONTROLLER NOTIFIED
		TT_TIMO,,,M		; TERMINAL READ TIMEOUT IN PROGRESS
		TT_NOTIF,,,M		; TERMINAL USER NOTIFIED OF UNSOLICTED DATA
		TT_HANGUP,,,M		; PROCESS HANG UP
		PERM_JNL,,,M		; PERMANENT JOURNAL DEVICE
		TEMPL_BSY		; TEMPLATE UCB IS BUSY
		>			; END OF BIT DEFINITIONS
	F	CPID,L			;MAILBOX CREATOR PROCESS ID
	S	DUETIM,,L		;DUE TIME FOR I/O COMPLETION
	F	OPCNT,L			;COUNT OF OPERATIONS COMPLETED
	F	LOGADR,L		;MAILBOX LOGICAL NAME BLOCK ADDRESS
	S	SVPN,,L			;SYSTEM VIRTUAL PAGE/MAP REGISTER NUMBER
	F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF PTE
	F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	F	BCNT,W			;BYTE COUNT OF TRANSFER
	F	ERTCNT,B		;ERROR LOG DEVICE CURRENT ERROR RETRY COUNT
	F	ERTMAX,B		;ERROR LOG DEVICE MAXIMUM ERROR RETRY COUNT
	F	ERRCNT,W		;DEVICE ERROR COUNT
	F	PDT,L			;ADDR OF PORT DESCRIPTOR TABLE
	F	DDT,L			;ADDR OF DDT (OPTIONAL BUT PREFERRED)
	F	,L			; Reserved longword
	F	DEVDEPND2,L		;SECOND DEVICE DEPENDENT LONG WORD
	S	TT_DEVDP1,,L		;TERMINAL DEVICE DEPENDENT LONG WORD
	L	LENGTH			;LENGTH OF STANDARD UCB
	M	1			;MARK END OF STANDARD UCB
 
;
; DEVICE DEPENDENT UCB EXTENSIONS
;
; MAILBOX
;
 
	P	3
		V<			; UCB$W_DEVSTS BITS FOR MAILBOXES AND NETWORKS
		PRMMBX,,,M		; PERMANENT MAILBOX
		DELMBX,,,M		; MAILBOX MARKED FOR DELETE
		NT_BFROVF,,,M		; TOO MANY BYTES RCVD
		SHMMBX,,,M		; SHARED MEMORY MAILBOX
		NT_NAME,,,M		; LINK HAS DECLARED A CONNECT NAME
		NT_BREAK,,,M		; LINK IS BEING BROKEN
		>
	F	MB_SEED,W		;UNIT NUMBER SEED
	P	1
	F	MB_WAST,L		;WRITE ATTENTION AST BLOCK ADDR
	F	MB_RAST,L		;READ ATTENTION AST BLOCK ADDR
	F	MB_MBX,L		;MAILBOX CONTROL BLOCK ADDR
	F	MB_SHB,L		;SHARED MEM. CONTROL BLOCK ADDR
	F	MB_WIOQFL,L		;WRITE I/O QUEUE FORWARD LINK
	F	MB_WIOQBL,L		;WRITE I/O QUEUE BACKWARD LINK
	F	MB_PORT,L		;SHARED MEM. PORT NUMBER
	L	MB_LENGTH		;SIZE OF MAILBOX UCB
 
;
; ERROR LOG DEVICES (ALL)
;
 
	P	1			;
	F	SLAVE,B			;SLAVE CONTROLLER NUMBER
	F	SPR,B			;SPARE UNUSED BYTE
	F	FEX,B			;FUNCTION DISPATCH TABLE INDEX
	F	CEX,B			;CASE TABLE FUNCTION EXECUTION INDEX
	F	EMB,L			;ADDRESS OF ERROR MESSAGE BUFFER
	F	,W			;SPARE UNUSED WORD
	F	FUNC,W			;I/O FUNCTION MODIFIERS
	F	DPC,L			;SAVED DRIVER SUBROUTINE RETURN ADDRESS
	M	4			;MARK END OF ERROR LOG DEVICE PROLOGUE
 
;
; DISK (ALL)
;
 
	P	4			;
		V<			;UCB$W_DEVSTS BITS FOR DISKS
		ECC,,,M			;ECC CORRECTION MADE
		DIAGBUF,,,M		;DIAGNOSTIC BUFFER SPECIFIED
		NOCNVRT,,,M		;NO LBN TO MEDIA ADDRESS CONVERSION
		DX_WRITE,,,M		;FLOPPY WRITE OPERATION
		>
	F	MAXBLOCK,L		;RANDOM ACCESS DEVICE HIGHEST BLOCK
	F	DIRSEQ,W		;DIRECTORY SEQUENCE NUMBER
	F	OFFSET,W		;CURRENT OFFSET REGISTER CONTENTS
	F	MEDIA,L			;MEDIA ADDRESS LONGWORD
	S	DA,,W			;SAVED DESIRED SECTOR/TRACK ADDRESS REGISTER
	S	DC,,W			;SAVED DESIRED CYLINDER ADDRESS REGISTER
	F	EC1,W			;ECC POSITION REGISTER
	F	EC2,W			;ECC PATTERN REGISTER
	F	OFFNDX,B		;CURRENT OFFSET TABLE INDEX
	F	OFFRTC,B		;CURRENT OFFSET RETRY COUNT
	F	BCR,W			;BYTE COUNT REGISTER
	M	2
 
;
; FLOPPY DEPENDENT BIT DEFINITIONS
;
 
	P	2
	F	DX_BUF,L		;ADDRESS OF SECTOR BUFFER
	F	DX_BFPNT,L		;CURRENT SECTOR BUFFER POINTER
	F	DX_RXDB,L		;SAVED RECEIVER DATA BUFFER
	F	DX_BCR,W		;CURRENT FLOPPY BYTE COUNT
	F	DX_SCTCNT,B		;CURRENT SECTOR BYTE COUNT
	F	,B			;SPARE UNUSED BYTE
 
;
; NETWORK LOGICAL LINK (NETWORK MAILBOX) EXTENSION
;
	P	1
	F	NT_DATSSB,L		; ADDRESS OF DATA SUBCHANNEL STATUS BLOCK
	F	NT_INTSSB,L		; ADDRESS OF INT/LS SSB
	F	NT_CHAN,W		; DDCMP CHANNEL NO.
	F	,W			; DUMMY FIELD
	V<				; NETWORK - LINK SERVICE DEFS
		LTYPE,2			; LINK TYPE BITS
		SEGFLO			; SEGMENT REQUEST COUNTS
		MSGFLO			; MESSAGE REQUEST COUNTS
		MSGACK			; MESSAGE ACK/NAK
		BACKP,,,M		; BACKPRESSURE (1=> NO FLOW)
		LNKPRI,2		; LINK PRIORITY (IGNORED)
	>
	C<				; NETWORK CONSTANTS
		LOGLNK,1		; CONNECT IS FOR LOGICAL LINK (NOT SINGLE MSG)
	>
;
; JOURNAL DEVICE EXTENSION
;
	P	1
	F	JNL_BCB,L		; ADDRESS OF BUFFER CONTROL BLOCK
	F	JNL_RUL,L		; ADDRESS OF RUL (RU JOURNALS ONLY)
	F	JNL_WQFL,L		; WAIT QUEUE FORWARD LINK
	F	JNL_WQBL,L		; WAIT QUEUE BACKWARD LINK
	F	JNL_FQFL,L		; FORCE QUEUE FORWARD LINK
	F	JNL_FQBL,L		; FORCE QUEUE BACKWARD LINK
	F	JNL_NAM,B,12		; JOURNAL NAME
	F	JNL_QUOT,L		; QUOTA FOR RU JOURNALS
	F	JNL_ID,W		; JOURNAL ID (TAPES ONLY)
	L	JNL_LEN			; JOURNAL UCB LENGTH
	E


;+
; VIRTUAL ADDRESS VIELDS
;-
	$STRUCT	VA

	V <
		BYTE,9,,M		;BYTE VIELD
		VPN,21,,M		;VIRTUAL PAGE NUMBER
		P1,,,M			;P1 SPACE
		SYSTEM,,,M		;SYSTEM SPACE
	>
	V <
		,9
		VPG,23,,M		;VIRTUAL PAGE INCLUDING P1 & S
	>
	E

;+
;
; VCA - Volume Cache Block. This block contains the specialized caches for
; a disk volume; to wit, the file ID cache, the extent cache, and the quota
; file cache. The file ID cache and extent cache are together in one block;
; the quota cache is located separately in another block. Both are pointed to
; by the VCB.
;
;-

	$STRUCT	VCA

	M 1			; block header
	F FIDCACHE		; pointer to file ID cache
	F EXTCACHE		; pointer to extent cache
	F SIZE,W		; block size
	F TYPE,B		; block type code
	F ,B			; unused
	L LENGTH		; length of block header
;
; The file ID cache consists of the cache header, followed by a longword
; vector of file numbers, densely packed.
;
	P 1
	F FIDSIZE,W		; number of entries allocated
	F FIDCOUNT,W		; number of entries present
	F FIDLIST		; first entry in list
;
; The extent cache consists of the cache header, followed by a quadword
; vector of extents, desely packed. Each quadword contains block count
; and starting LBN.
;
	P 1
	F EXTSIZE,W		; number of entries allocated
	F EXTCOUNT,W		; number of entries present
	F EXTTOTAL		; total number of blocks contained in cache
	F EXTLIMIT,W		; limit of volume to be cached, in percent/10
	F ,W			; spare
	F EXTLIST,Q		; first entry in list
	P 1			; list entry
	F EXTBLOCKS		; number of blocks
	F EXTLBN		; starting LBN
;
; The quota cache consists of the cache header, followed by the cache entries.
; Each cache entry is a block as defined below.
;
	P 1
	F QUOSIZE,W		; number of entries allocated
	F QUOLRU,W		; current LRU counter
	F ,L,2			; 2nd longword & block size & type
	F QUOLIST		; start of entries

	P 1
	F QUORECNUM		; record number
	F QUOUIC		; UIC
	F USAGE			; current usage
	F PERMQUOTA		; permanent quota
	F OVERDRAFT		; overdraft limit
	F QUOLRUX,W		; LRU index for entry
	F QUOFLAGS,W		; flags word
	    V<
		QUODIRTY	; dirty flag
	    >
	L QUOLENGTH		; length of quota cache entry

	E

;+
; VCB - VOLUME CONTROL BLOCK
;
; THERE IS ONE VOLUME CONTROL BLOCK FOR EACH MOUNTED DEVICE UNIT IN A
; SYSTEM. IT CONTAINS INFORMATION NECESSARY TO CONTROL ACCESS TO AND
; VERIFY CERTAIN VOLUME PARAMETERS IN THE CASE A DEVICE UNIT SHOULD
; ERRONEOUSLY GO OFFLINE.
;-
 
	$STRUCT	VCB
	M 1			; MARK 1 POSITION
	F FCBFL			; FCB LISTHEAD FORWARD LINK
	F FCBBL			; FCB LISTHEAD BACKWARD LINK
	F SIZE,W		; SIZE OF VCB IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF VCB
	L MRKLEN		; MARK LENGTH 
	M 2			; MARK 2 POSITION
	F STATUS,B		; VOLUME STATUS
	V<
		WRITE_IF	; INDEX FILE IS WRITE ACCESSED
		WRITE_SM	; STORAGE MAP IS WRITE ACCESSED
		HOMBLKBAD	; PRIMARY HOME BLOCK IS BAD
		IDXHDRBAD	; PRIMARY INDEX FILE HEADER IS BAD
		NOALLOC		; ALLOCATION/DEALLOCATION INHIBITED (BAD BITMAPS)
		EXTFID		; VOLUME HAS 24 BIT FILE NUMBERS
		GROUP		; VOLUME IS MOUNTED /GROUP
		SYSTEM		; VOLUME IS MOUNTED /SYSTEM
	>
	F TRANS,W		; VOLUME TRANSACTION COUNT
	F RVN,W			; RELATIVE VOLUME NUMBER
	F AQB			; ADDRESS OF AQB
	F VOLNAME,T,12		; VOLUME LABEL BLANK FILLED
	F RVT			; ADDRESS OF UCB OR RELATIVE VOLUME TABLE
	L COMLEN		; LENGTH OF COMMON AREA
	M 3			; MARK 3 POSITION
	F HOMELBN		; LBN OF VOLUME HOME BLOCK
	F HOME2LBN		; LBN OF ALTERNATE VOLUME HOME BLOCK
	F IXHDR2LBN		; LBN OF ALTERNATE INDEX FILE HEADER
	F IBMAPLBN		; LBN OF INDEX FILE BITMAP
	F SBMAPLBN		; LBN OF STORAGE BITMAP
	F IBMAPSIZE,B		; SIZE OF INDEX FILE BITMAP
	F SBMAPSIZE,B		; SIZE OF STORAGE BITMAP
	F IBMAPVBN,B		; CURRENT VBN IN INDEX FILE BIT MAP
	F SBMAPVBN,B		; CURRENT VBN IN STORAGE MAP
	F CLUSTER,W		; VOLUME CLUSTER SIZE
	F EXTEND,W		; VOLUME DEFAULT FILE EXTENSION LENGTH
	F FREE			; NUMBER OF FREE BLOCKS ON VOLUME
	F MAXFILES		; MAXIMUM NUMBER OF FILES ALLOWED ON VOLUME
	F WINDOW,B		; VOLUME DEFAULT WINDOW SIZE
	F LRU_LIM,B,,S		; VOLUME DIRECTORY LRU SIZE LIMIT
	F FILEPROT,W		; VOLUME DEFAULT FILE PROTECTION
	F MCOUNT,W		; MOUNT COUNT
	F EOFDELTA,B		; INDEX FILE EOF UPDATE COUNT
	F RESFILES,B		; NUMBER OF RESERVED FILES ON VOLUME
	F RECORDSZ,W		; NUMBER OF BYTES IN A RECORD
	F BLOCKFACT,B		; VOLUME BLOCKING FACTOR
	F STATUS2,B		; SECOND STATUS BYTE
	V<
		WRITETHRU	; VOLUME IS TO BE WRITE-THROUGH CACHED
		NOCACHE		; ALL CACHEING IS DISABLED ON VOLUME
		MOUNTVER	; VOLUME CAN UNDERGO MOUNT VERIFICATION
	>
	F QUOTAFCB		; ADDRESS OF FCB OF DISK QUOTA FILE
	F CACHE			; ADDRESS OF VOLUME CACHE BLOCK
	F QUOCACHE		; ADDRESS OF VOLUME QUOTA CACHE
	F QUOSIZE,W		; LENGTH OF QUOTA CACHE TO ALLOCATE
	F PENDERR,W		; COUNT OF PENDING WRITE ERRORS
	F SERIALNUM		; VOLUME SERIAL NUMBER (DISKS ONLY)
	F RETAINMIN,Q		; MINIMUM FILE RETENTION PERIOD
	F RETAINMAX,Q		; MAXIMUM FILE RETENTION PERIOD
	L LENGTH		; LENGTH OF STANDARD VCB

;
; MTAACP VOLUME CONTROL BLOCK FIELDS
;
	P 1			; RESET POINTER TO  FCB LISTHEAD
	F BLOCKFL		; BLOCKED REQUEST LISTHEAD FORWARD LINK
	F BLOCKBL		; BLOCKED REQUEST LISTHEAD BACKWARD LINK
	P 2			; RESET POINTER TO STATUS
	V<	
		PARTFILE	; PARTIAL FILE EXISTS ON TAPE
		LOGICEOVS	; POSITIONED AT LOGICAL END OF VOLUME SET
		WAIMOUVOL,,,M	; WAIT FOR VOLUME MOUNT
		WAIREWIND,,,M	; WAIT FOR REWIND COMPLETION
		WAIUSRLBL,,,M	; WAIT FOR USER LABEL
		CANCELIO,,,M	; CANCEL IO
		MUSTCLOSE,,,M	; MUST CLOSE FILE
		NOWRITE,,,M	; DON'T WRITE TRAILERS
	 >

	P 3			; RESET POINTER TO END OF COMMON VCB
	F CUR_FID		; CURRENT FILE IDENTIFICATION 
	  S CUR_NUM,,W		; CURRENT FILE SECTION NUMBER
	  S CUR_SEQ,,W		; CURRENT FILE SEQUENCE NUMBER
	F START_FID		; FILE IDENTIFICATION AT START OF SEARCH
	  S START_NUM,,W	; FILE SECTION NUMBER AT START OF SEARCH
	  S START_SEQ,,W	; FILE SEQUENCE NUMBER AT START OF SEARCH
	F MODE,W		; MODE OF OPERATION
	V <
		OVREXP		; OVERRIDE EXPIRATION
		OVRACC		; OVERRIDE ACCESS
		OVRLBL		; OVERRIDE LABELS
		OVRSETID	; OVERRIDE SET IDENTIFIER
		INTCHG		; INTERCHANGE TAPE
		EBCDIC		; EBCDIC CODE SET
		,1		; SPARE
		NOHDR3		; DO NOT WRITE HDR3 LABELS
		STARFILE	; CURRENT FILE IS A STARLET PRODUCED FILE
	  >
	
	F TM,B			; NUMBER OF TM'S INTO FILE
	F CUR_RVN,B		; CURRENT RELATIVE VOLUME
	F ST_RECORD,L		; NUMBER OF RECORDS UP TO AND INCLUDING LAST TAPE MARK
	F MVL			; ADDRESS OF MAGNETIC TAPE VOLUME LIST
	F WCB			; ADDRESS OF WINDOW FOR THIS VOLUME
	F VPFL			; VIRTUAL PAGE LIST HEAD
	F VPBL			; VIRTUAL PAGE LIST TAIL
	F USRLBLAST,L		; ADDRESS OF USER LABEL AST CONTROL BLOCK

; NOTE THAT FCP AND MTAACP SHARE VCB$W_MCOUNT(DISPLACEMENT 76)

	P 2			; VCB FORMAT USED FOR SPOOLED DEVICE
	F QNAMECNT,B		; BYTE COUNT OF QUEUE NAME
	F QNAME,T,20		; ASCII NAME OF QUEUE FOR THIS DEVICE
;
; JOURNAL ACP VOLUME CONTROL BLOCK FIELDS
;
	P 3
	F JNL_CHAR,L			; journal media characteristics
	V <M				;    bit def's for characteristics
		JNL_DISK		;    journal is on disk
		JNL_TAPE		;    journal is on tape
		>
	F JNL_JFTA,L		; JOURNAL FILE TABLE ADDRESS (IN ACP)
	F JNL_IRPS,L,2		; PREALLOCATED FREE IRP QUEUE HEADER
	F JNL_JMT,L		; ADDRESS OF JMT (JOURNAL MERGE TABLE)
	F JNL_WCBFL,L		; WCB LISTHEAD FORWARD LINK
	F JNL_WCBBL,L		; WCB LISTHEAD BACKWARD LINK
	F JNL_MODE,B		; ACCESS MODE OF CREATOR
	L JNL_LEN		; LENGTH OF JOURNAL VCB
	E

;+
; VOL1 ANSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST BLOCK ON EVERY ANSI LABELED MAGNETIC TAPE.
; IT IDENTIFIES THE VOLUME AND ITS PROTECTION.
;-
	$STRUCT	VL1		;VOL1 LABEL FORMAT

	F	VL1LID,L	;LABEL IDENTIFIER AND NUMBER 'VOL1'
	F 	VOLLBL,T,6	;VOLUME LABEL
	F	VOLACCESS,B	;VOLUME ACCESS
	F	,T,26		;SPACES
	F	VOLOWNER,T,13	;VOLUME OWNER IDENTIFICATION
	F	DECSTDVER,B	;DEC STANDARD VERSION
	F	,T,28		;SPACES
	F	LBLSTDVER,B	;LABEL STANDARD VERSION '3'
	E


;+
; WCB - WINDOW CONTROL BLOCK
;
; THERE IS A WINDOW CONTROL BLOCK FOR EACH FILE ACCESSED BY A PROCESS.
; IT CONTAINS MAPPING INFORMATION SUCH THAT A LARGE PERCENTAGE OF VIRTUAL
; FILE I/O CAN BE MAPPED FROM VIRTUAL TO LOGICAL BLOCK NUMBERS WITHOUT
; HAVING TO READ THE RESPECTIVE FILE HEADER.
;-
 
	$STRUCT	WCB
	M 1
	F WLFL			; WINDOW LIST FORWARD LINK
	F WLBL			; WINDOW LIST BACKWARD LINK
	F SIZE,W		; SIZE OF WINDOW BLOCK IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF WCB
	F ACCESS,B		; ACCESS CONTROL BYTE
	V<M			; WCB$B_ACCESS DEFINITIONS
		READ		; READ ACCESS ALLOWED (1=YES)
		WRITE		; WRITE ACCESS ALLOWED (1=YES)
		NOTFCP		; FILE NOT ACCESSED BY FCP IF SET
		SHRWCB		; SHARED WINDOW
		OVERDRAWN	; FILE ACCESSOR HAS OVERDRAWN HIS QUOTA
		COMPLETE	; SET WINDOW MAPS ENTIRE FILE
		CATHEDRAL	; LARGE, COMPLEX WINDOW (SIC) TO MAP
				; FILE COMPLETELY
		EXPIRE		; FILE EXPIRATION DATE MAY NEED TO BE SET
	>			; END OF WCB$B_ACCESS DEFINITIONS
	F PID			; PROCESS ID OF ACCESSOR PROCESS
	S REFCNT,2,W		; REFERENCE COUNT FOR SHARED WINDOW
	F ORGUCB		; ADDRESS OF ORIGINAL UCB FROM CCB
	F ACON,W		; ACCESS CONTROL INFORMATION
				; NOTE - THESE BITS TRACK THE BITS
				; IN FIB$L_ACCTL
	V<
		NOWRITE		; NO OTHER WRITERS
		DLOCK		; ENABLE DEACCESS LOCK
		,2		; UNUSED
		SPOOL		; SPOOL FILE ON CLOSE
		WRITECK		; ENABLE WRITE CHECK
		SEQONLY		; SEQUENTIAL ONLY ACCESS
		,1		; SPARE
		WRITEAC		; WRITE ACCESS
		READCK		; ENABLE READ CHECK
		NOREAD		; NO OTHER READERS
		NOTRUNC		; NO TRUNCATES
	>
	F NMAP,W		; NUMBER OF MAPPING POINTERS
	F FCB			; ADDRESS OF FCB
	F RVT			; ADDRESS OF RELATIVE VOLUME TABLE
	F LINK			; LINK TO NEXT WINDOW SEGMENT
	F READS			; COUNT OF READS PERFORMED
	F WRITES		; COUNT OF WRITES PERFORMED
	F STVBN			; STARTING VBN MAPPED BY WINDOW
	L MAP			; MAP POINTERS START HERE
	L LENGTH		; LENGTH OF STANDARD WCB SANS POINTERS
	F P1_COUNT,W		; COUNT FIELD OF FIRST POINTER
	F P1_LBN		; LBN FIELD OF SECOND POINTER
	F P2_COUNT,W		; COUNT FIELD OF SECOND POINTER
	F P2_LBN		; LBN FIELD OF FIRST POINTER
	P 1
				; FORMAT OF RETRIEVAL POINTER
	F COUNT,W		; COUNT FIELD
	F LBN			; LBN FIELD
	P 1
	-F PREVCOUNT,W		; PREVIOUS RETRIEVAL POINTER
	-F PREVLBN
				; RETRIEVAL POINTER FORMAT
	E

;+
; WORKING SET LIST DEFINITIONS
;-

	$STRUCT	WSL

	V <M
					;THE FOLLOWING 5 BITS MUST BE IN ORDER
		VALID			;WSL ENTRY VALID
		PAGTYP,3		;PAGE TYPE (SEE PFNDEF FOR VALUES)
		PFNLOCK			;PAGE FRAME LOCK
					;THE PRECEDING 5 BITS MUST BE IN ORDER
		WSLOCK			;WORKING SET LOCK
		GOODPAGE		;THIS PAGE SHOULD REMAIN IN WS ONE MORE PASS
		,1			;SPARE BIT
		MODIFY			;SAVED MODIFY BIT
	>

	C	LENGTH,4		;SIZE OF WS LIST ENTRY
;
; PAGE TYPE VIELD DEFINITIONS
;
	C <
		PROCESS,0@WSL$V_PAGTYP	;PROCESS PAGE
		SYSTEM,1@WSL$V_PAGTYP	;SYSTEM PAGE
		GLOBAL,2@WSL$V_PAGTYP	;GLOBAL PAGE (READ ONLY)
		GBLWRT,3@WSL$V_PAGTYP	;GLOBAL WRITABLE PAGE
		PPGTBL,4@WSL$V_PAGTYP	;PROCESS PAGE TABLE
		GPGTBL,5@WSL$V_PAGTYP	;GLOBAL PAGE TABLE
	>
	E

;+
; WAIT QUEUE HEADER DEFINITIONS
;-
 
	$STRUCT	WQH
 
	F	WQFL,L		;HEAD OR FORWARD LINK
	F	WQBL,L		;TAIL OR BACKWARD LINK
	F	WQCNT,W		;WAIT QUEUE COUNT
	F	WQSTATE,W	;STATE NUMBER FOR WAIT
	L	LENGTH		;LENGTH OF WAIT QUEUE HEADER
 
	E

