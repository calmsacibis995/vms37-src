! **********************************************************************************************************************************
!  Created 26-APR-1982 17:04:50  by  VAX-11 SDL V1.4       Source: 26-APR-1982 16:53:58 _DRA7:[RTL.SRC]LIBDCFDEF.SDL;1              
! **********************************************************************************************************************************
 
 
!*** MODULE $LIBDCFDEF ***
!  Definitions for LIB$DECODE_FAULT
! 
!  Operand definition codes
! 
literal LIB$M_DCFACC = 7;
literal LIB$M_DCFTYP = 248;
macro LIB$B_DCF_OPERAND = 0,0,8,0 %;
macro LIB$V_DCFACC = 0,0,3,0 %;         !  Operand access type
macro LIB$V_DCFTYP = 0,3,5,0 %;         !  Operand data type
! 
!  Operand access type codes
! 
literal LIB$K_DCFACC_R = 1;             !  Operand is to be read
literal LIB$K_DCFACC_M = 2;             !  Operand is to be modified
literal LIB$K_DCFACC_W = 3;             !  Operand is to be written
literal LIB$K_DCFACC_A = 4;             !  Operand is an address
literal LIB$K_DCFACC_V = 5;             !  Operand is a field (may be register or address)
literal LIB$K_DCFACC_B = 6;             !  Operand is a branch displacement
! 
!  Operand data type codes
! 
literal LIB$K_DCFTYP_B = 1;             !  Operand is a byte
literal LIB$K_DCFTYP_W = 2;             !  Operand is a word
literal LIB$K_DCFTYP_L = 3;             !  Operand is a longword
literal LIB$K_DCFTYP_Q = 4;             !  Operand is a quadword
literal LIB$K_DCFTYP_O = 5;             !  Operand is an octaword
literal LIB$K_DCFTYP_F = 6;             !  Operand is an F_floating
literal LIB$K_DCFTYP_D = 7;             !  Operand is a D_floating
literal LIB$K_DCFTYP_G = 8;             !  Operand is a G_floating
literal LIB$K_DCFTYP_H = 9;             !  Operand is an H_floating
! 
!  Combined operand access and data type codes
! 
literal LIB$K_DCFOPR_AB = 8;
literal LIB$K_DCFOPR_RB = 9;
literal LIB$K_DCFOPR_MB = 10;
literal LIB$K_DCFOPR_WB = 11;
literal LIB$K_DCFOPR_VB = 12;
literal LIB$K_DCFOPR_BB = 13;
literal LIB$K_DCFOPR_AW = 16;
literal LIB$K_DCFOPR_RW = 17;
literal LIB$K_DCFOPR_MW = 18;
literal LIB$K_DCFOPR_WW = 19;
literal LIB$K_DCFOPR_VW = 20;
literal LIB$K_DCFOPR_BW = 21;
literal LIB$K_DCFOPR_AL = 24;
literal LIB$K_DCFOPR_RL = 25;
literal LIB$K_DCFOPR_ML = 26;
literal LIB$K_DCFOPR_WL = 27;
literal LIB$K_DCFOPR_VL = 28;
literal LIB$K_DCFOPR_BL = 29;
literal LIB$K_DCFOPR_AQ = 32;
literal LIB$K_DCFOPR_RQ = 33;
literal LIB$K_DCFOPR_MQ = 34;
literal LIB$K_DCFOPR_WQ = 35;
literal LIB$K_DCFOPR_VQ = 36;
literal LIB$K_DCFOPR_AO = 40;
literal LIB$K_DCFOPR_RO = 41;
literal LIB$K_DCFOPR_MO = 42;
literal LIB$K_DCFOPR_WO = 43;
literal LIB$K_DCFOPR_VO = 44;
literal LIB$K_DCFOPR_AF = 48;
literal LIB$K_DCFOPR_RF = 49;
literal LIB$K_DCFOPR_MF = 50;
literal LIB$K_DCFOPR_WF = 51;
literal LIB$K_DCFOPR_VF = 52;
literal LIB$K_DCFOPR_AD = 56;
literal LIB$K_DCFOPR_RD = 57;
literal LIB$K_DCFOPR_MD = 58;
literal LIB$K_DCFOPR_WD = 59;
literal LIB$K_DCFOPR_VD = 60;
literal LIB$K_DCFOPR_AG = 64;
literal LIB$K_DCFOPR_RG = 65;
literal LIB$K_DCFOPR_MG = 66;
literal LIB$K_DCFOPR_WG = 67;
literal LIB$K_DCFOPR_VG = 68;
literal LIB$K_DCFOPR_AH = 72;
literal LIB$K_DCFOPR_RH = 73;
literal LIB$K_DCFOPR_MH = 74;
literal LIB$K_DCFOPR_WH = 75;
literal LIB$K_DCFOPR_VH = 76;
literal LIB$K_DCFOPR_END = 0;
! 
