 ! 
 !	Command language interpreter command table structures 
 ! 
 ! IDENT	V03-015 
 ! 
  
 ! 
 !**************************************************************************** 
 !*									    * 
 !*  COPYRIGHT (c) 1978, 1980, 1982 BY					    * 
 !*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    * 
 !*  ALL RIGHTS RESERVED.						    * 
 !* 									    * 
 !*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   * 
 !*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   * 
 !*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   * 
 !*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   * 
 !*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   * 
 !*  TRANSFERRED.							    * 
 !* 									    * 
 !*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   * 
 !*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   * 
 !*  CORPORATION.							    * 
 !* 									    * 
 !*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   * 
 !*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    * 
 !* 									    * 
 !*									    * 
 !**************************************************************************** 
 ! 
  
 !++ 
 ! FACILITY:  DCL & MCR Command language interpreters 
 ! 
 ! ABSTRACT: 
 ! 
 !	These are the command table structure definitions 
 !	which describe the generic command table format used 
 !	by the DCL and MCR command interpreters. 
 ! 
 ! ENVIRONMENT: 
 ! 
 !	VAX/VMS operating system. supervisor mode. 
 ! 
 ! AUTHOR:  Tim Halvorsen, Feb 1980 
 ! 
 ! Modified by: 
 ! 
 !	V015	DWT0029		David Thiel	09-Feb-1982 
 !		Add MCRIGNORE bit to CHG block for MCR. 
 ! 
 !	V014	DWT0024		David Thiel	29-Jan-1982 
 !		Add MCRIGNORE and MCROPTDLM bits to 
 !		ENT block for MCR. 
 ! 
 !	V013	PCG0002		Peter George	19-Jan-1982 
 !		Increment table level to 5. 
 ! 
 !	V012	TMH0012		Tim Halvorsen	17-Nov-1981 
 !		Remove DCL specific structures to new DCLDEF.MDL file. 
 ! 
 !	V011	TMH0011		Tim Halvorsen	08-Nov-1981 
 !		Add bit indicating if terminal is detached or not. 
 !		Add bit indicating that implied automatic logout should 
 !		occur when we next attempt to read a command line from 
 !		the input stream (for SPAWN command). 
 !		Add word to contain channel to re-attach mailbox. 
 !		Remove obsolete USRDET and GOEOF flags from PRC area. 
 !		Add SPWN and CTX structures for SPAWN/ATTACH commands. 
 ! 
 !	V010	PCG0001		Peter George	29-Oct-1981 
 !		Add DCL and MCR data structures. 
 ! 
 !	V009	BLS0089		Benn Schreiber	15-Oct-1981 
 !		Add cli field and spares to vec.  tables level is now 4 
 !		Add mcrparse flag to cmd flags 
 ! 
 !	V008	TMH0008		Tim Halvorsen	31-Aug-1981 
 !		Add cells for SPAWN and ATTACH commands. 
 ! 
 !	V007	TMH0007		Tim Halvorsen	25-Aug-1981 
 !		Add ENT$C_RESTOFLINE as value type which indicates that 
 !		the rest of the line should be gobbled as the value. 
 !		Add cell to hold the qualifier number which caused the 
 !		first command syntax transition.  This is for the GETOPT 
 !		callback used by the SET and SHOW commands for compatibility. 
 !		Re-number the value type codes to start at 1, rather than 0, 
 !		so that zero can be used as the default (STRING). 
 ! 
 !	V006	TMH0006		Tim Halvorsen	13-Jun-1981 
 !		Document format of symbol table values 
 ! 
 !	V005	TMH0005		Tim Halvorsen	27-Apr-1981 
 !		Add PRC_L_INDCLOCK, and change meaning of PRC_L_INDEPTH. 
 !		Remove obsolete QUA and PRM structures. 
 !		Remove PRC_L_CLIWRK0-3, and add PRC_L_PPFLIST. 
 !		Increase size of NAM block to account for new extensions. 
 ! 
 !	V004	TMH0004		Tim Halvorsen	26-Mar-1981 
 !		Add PRD_T_OUTDVI field for batch job login initialization. 
 ! 
 !	V003	TMH0003		Tim Halvorsen	11-Feb-1981 
 !		Add flag to mark that we are within the comment 
 !		string during symbol substitution, to avoid issuing 
 !		error messages during substitution in comments. 
 !		Add 3 cells to WRK to support caller callback entry 
 !		points during parsing.  Add pointer into expansion 
 !		buffer (rather than R9).  Add pointer into expansion 
 !		buffer which points to the current token being parsed 
 !		for error reporting (rather than R6). 
 !		Remove unused cells CMDOUT, IOSB and flag IMCHNG. 
 !		Rename SYM_B_NESTLEVEL to SYM_B_UNIQUEPT 
 !		Add UIC to list of value types. 
 ! 
 !	V002	TMH0002		Tim Halvorsen	03-Feb-1981 
 !		Add flag to mark input record substitution pass 
 !		and flag to prevent upcasing during GETCHAR. 
 ! 
 !	V001	TMH0001		Tim Halvorsen	14-Nov-1980 
 !		Add symbol for length of tables vector area. 
 !-- 
  
 ! 
 !	Note that the term "SRO" stands for self-relative offset. 
 !	The actual address is computed by adding the signed contents 
 !	of the field to the address of the structure. 
 ! 
 !	If the offset is zero, then there is no associated data. 
 ! 
  
  
 ! 
 !	DEFINE VECTOR AT FRONT OF COMMAND TABLES DESCRIBING 
 !	OFFSETS INTO THE SECTION FOR VARIOUS TABLES. 
 ! 
  
 !...$VECDEF	
 MACRO		VEC_L_IMAGETBL	= 0,0,32,0%; 		! OFFSET TO IMAGE TABLE 
 MACRO		VEC_L_PROMPTBL	= 4,0,32,0%; 		! OFFSET TO PROMPT TABLE 
 MACRO		VEC_L_QUALTBL	= 8,0,32,0%; 		! OFFSET TO QUALIFIER TABLE 
 MACRO		VEC_L_VERBTBL	= 12,0,32,0%; 		! OFFSET TO BUILT-IN VERB TABLE 
 MACRO		VEC_L_VERBEND	= 16,0,32,0%; 		! OFFSET TO END OF VERBTBL 
 MACRO		VEC_L_USRCMD	= 20,0,32,0%; 		! OFFSET TO USER VERB TABLE 
 MACRO		VEC_L_USREND	= 24,0,32,0%; 		! OFFSET TO END OF USER VERB TABLE 
 MACRO		VEC_L_COMDPTR	= 28,0,32,0%; 		! OFFSET TO BUILT-IN POINTER TABLE 
 MACRO		VEC_L_USERPTR	= 32,0,32,0%; 		! OFFSET TO USER POINTER TABLE 
 MACRO		VEC_L_FREE	= 36,0,32,0%; 			! OFFSET TO NEXT FREE BYTE 
 MACRO		VEC_B_STRLVL	= 40,0,8,0%; 		! TABLE STRUCTURE LEVEL 
 LITERAL	
 $EQULST (VEC_C_,GBL,0,1  
 	,(STRLVL,5) 			! CURRENT STRUCTURE LEVEL 
 	); 
 MACRO		VEC_B_PROMPTMAX	= 41,0,8,0%; 		! MAXIMUM SIZE OF ANY PROMPT STRING 
 LITERAL	VEC_C_LENGTH3	= 42; 
 LITERAL	VEC_K_LENGTH3	= 42; 				! LENGTH OF STR LEVEL 3 AND BEFORE VEC 
 MACRO		VEC_B_CLI	= 42,0,8,0%; 			! CLI TYPE 
 LITERAL	
 $EQULST (VEC_C_,GBL,0,1  
 	,(DCL,0) 				! TABLES ARE FOR DCL 
 	,(MCR,1) 				! TABLES ARE FOR MCR 
 	); 
 MACRO		VEC_W_SIZE	= 44,0,16,0%; 			! SIZE IN BYTES OF VECTOR AREA 
 LITERAL	VEC_C_LENGTH	= 60; 
 LITERAL	VEC_K_LENGTH	= 60; 				! LENGTH OF VECTOR AREA 

  
 ! 
 !	DEFINE COMMAND DESCRIPTOR BLOCK 
 ! 
  
 !...$CMDDEF	
 MACRO		CMD_B_SIZE	= 0,0,8,0%; 		! SIZE OF COMMAND DESCRIPTOR BLOCK 
 MACRO		CMD_B_VERBTYP	= 1,0,8,0%; 	! VERB GENERIC TYPE 
 MACRO		CMD_B_PARMCNT	= 2,0,8,0%; 	! MIN/MAX PARAMETER COUNTS 
 			 
 MACRO		CMD_V_MINPARM	= 2,0,4,0%; 	! MINIMUM NUMBER OF PARAMETERS REQUIRED 
 MACRO		CMD_V_MAXPARM	= 2,4,4,0%; 	! MAXIMUM NUMBER OF PARAMETERS ALLOWED 
 			
 MACRO		CMD_B_FLAGS	= 3,0,8,0%; 		! COMMAND FLAGS 
 			 
 MACRO		CMD_V_ABREV	= 3,0,1,0%; 		! COMMAND MAY BE ABBREVIATED NON-UNIQUELY 
 LITERAL	CMD_M_ABREV	= 1^1 - 1^0; 
 				! TO A SINGLE CHARACTER 
 MACRO		CMD_V_NOSTAT	= 3,1,1,0%; 		! COMMAND DOES NOT RETURN VALID STATUS 
 LITERAL	CMD_M_NOSTAT	= 1^2 - 1^1; 
 MACRO		CMD_V_FOREIGN	= 3,2,1,0%; 		! FOREIGN COMMAND - NO PARSING IS DONE 
 LITERAL	CMD_M_FOREIGN	= 1^3 - 1^2; 
 MACRO		CMD_V_IMMED	= 3,3,1,0%; 		! COMMAND IS IMMEDIATELY DISPATCHED W/O PARSING 
 LITERAL	CMD_M_IMMED	= 1^4 - 1^3; 
 MACRO		CMD_V_MCRPARSE	= 3,4,1,0%; 	! COMMAND IS MCR STYLE COMMAND (OUT=IN) 
 LITERAL	CMD_M_MCRPARSE	= 1^5 - 1^4; 
 				! (THIS FLAG ONLY EXAMINED BY MCR CLI) 
 			
 MACRO		CMD_W_IMAGE	= 4,0,16,1%; 	! SRO TO ASCIC IMAGE NAME 
 MACRO		CMD_W_QUALS	= 6,0,16,1%; 	! SRO TO FIRST NONPOSITIONAL ENTITY 
 MACRO		CMD_W_PARMS	= 8,0,16,1%; 	! SRO TO FIRST POSITIONAL ENTITY 
 MACRO		CMD_W_OUTPUTS	= 10,0,16,1%; 	! SRO TO LIST OF "OUTPUT" ENTITIES 
 MACRO		CMD_W_MUTEXSET	= 12,0,16,1%; 	! SRO TO MUTUAL EXCLUSION SET 
 MACRO		CMD_W_IMPSET	= 14,0,16,1%; 	! SRO TO IMPLICATION SET 
 LITERAL	CMD_C_LENGTH	= 16; 
 LITERAL	CMD_K_LENGTH	= 16; 			! LENGTH OF FIXED PORTION 
 ! 
 ! OUTPUT LIST FORMAT: 
 ! 
 ! FIRST BYTE CONTAINS COUNT OF ENTRIES IN LIST EACH ENTRY IS ONE BYTE, 
 ! SIGNED, DESCRIBING THAT "OUTPUT NUMBER".  NEGATIVE VALUES INDICATE THE 
 ! OUTPUT IS A PARAMETER AND THE ABS(VALUE) IS THE PARAMETER NUMBER. 
 ! POSITIVE VALUES INDICATE THE OUTPUT IS A QUALIFIER AND THE VALUE IS A 
 ! QUALIFIER NUMBER. 
 ! 
 ! QUAL IS (0:MAXQUALS-1),PARM IS (MAXQUALS:255) 
 ! 
 LITERAL	CMD_C_MAXPARMS	= 8; 		! MAXIMUM POSSIBLE PARAMETERS 
 LITERAL	CMD_C_MAXQUALS	= 248; 		! MAXIMUM POSSIBLE QUALIFIERS (256-8) 

  
 ! 
 !	DEFINE ENTITY DESCRIPTOR BLOCK 
 ! 
  
 !...$ENTDEF	
 MACRO		ENT_B_NEXT	= 0,0,8,0%; 		! OFFSET TO NEXT BLOCK IN CHAIN 
 MACRO		ENT_B_SIZE	= 1,0,8,0%; 		! SIZE OF THIS BLOCK IN BYTES 
 MACRO		ENT_B_TYPE	= 2,0,8,0%;  
 LITERAL	
 $EQULST (ENT_C_,GBL,0,1  
 	,(PARAMETER,) 		! POSITIONAL VALUE DELIMITED BY SPACE 
 	,(QUALIFIER,) 		! NONPOSITIONAL KEYWORD DELIMITED BY SLASH 
 	); 
 MACRO		ENT_B_VALTYPE	= 3,0,8,0%; 	! TYPE OF VALUE 
 LITERAL	
 $EQULST (ENT_C_,GBL,1,1 		! (STARTING AT #1) 
 	,(INFILE,) 			! INPUT FILE SPECIFICATION 
 	,(OUTFILE,) 			! OUTPUT FILE SPECIFICATION 
 	,(NUMBER,) 			! DECIMAL INTEGER NUMBER 
 	,(PRIVILEGE,) 		! PRIVILEGE KEYWORD 
 	,(DATETIME,) 		! DATE/TIME SPECIFICATION 
 	,(PROTECTION,) 		! PROTECTION SPECIFICATION 
 	,(PROCESS,) 			! PROCESS NAME 
 	,(INLOG,) 			! INPUT LOGICAL NAME 
 	,(OUTLOG,) 			! OUTPUT LOGICAL NAME 
 	,(INSYM,) 			! INPUT SYMBOL NAME 
 	,(OUTSYM,) 			! OUTPUT SYMBOL NAME 
 	,(NODE,) 			! NODE NAME 
 	,(DEVICE,) 			! NODE/DEVICE NAME 
 	,(DIR,) 			! NODE/DEVICE/DIRECTORY NAME 
 	,(UIC,) 			! UIC SPECIFICATION 
 	,(RESTOFLINE,) 		! GOBBLE REST OF COMMAND STRING AS VALUE 
 	); 
 		 
 MACRO		ENT_W_NAME	= 4,0,16,1%; 	! SRO TO ASCIC ENTITY NAME (USER SPELLING) 
 MACRO		ENT_W_NUMBER	= 4,0,16,0%; 	! OR, PARAMETER NUMBER (POSITIONAL) 
 MACRO		ENT_W_LABEL	= 6,0,16,1%; 	! SRO TO ASCIC ENTITY LABEL (FOR PGM USE) 
 MACRO		ENT_W_DEFVAL	= 8,0,16,1%; 	! SRO TO ASCIC DEFAULT VALUE 
 MACRO		ENT_W_SYNTAX	= 10,0,16,1%; 	! SRO TO SYNTAX LIST 
 MACRO		ENT_W_KEYWORDS	= 12,0,16,1%; 	! SRO TO VALUE KEYWORD LIST 
 				! IF ZERO, ALL VALUES ARE LEGAL 
 MACRO		ENT_W_PROMPT	= 14,0,16,1%; 	! SRO TO VALUE PROMPT 
 MACRO		ENT_L_FLAGS	= 16,0,32,0%; 		! ENTITY FLAGS 
 			 
 MACRO		ENT_V_FILE	= 16,0,1,0%; 		! VALUE IS FILE SPECIFICATION 
 LITERAL	ENT_M_FILE	= 1^1 - 1^0; 
 MACRO		ENT_V_VAL	= 16,1,1,0%; 		! CAN HAVE A VALUE 
 LITERAL	ENT_M_VAL	= 1^2 - 1^1; 
 MACRO		ENT_V_NEG	= 16,2,1,0%; 		! VALUE CAN BE NEGATED 
 LITERAL	ENT_M_NEG	= 1^3 - 1^2; 
 MACRO		ENT_V_DEFTRUE	= 16,3,1,0%; 		! TRUE BY DEFAULT 
 LITERAL	ENT_M_DEFTRUE	= 1^4 - 1^3; 
 MACRO		ENT_V_BATDEF	= 16,4,1,0%; 		! PRESENT BY DEFAULT IF BATCH JOB 
 LITERAL	ENT_M_BATDEF	= 1^5 - 1^4; 
 MACRO		ENT_V_VALREQ	= 16,5,1,0%; 		! VALUE IS REQUIRED 
 LITERAL	ENT_M_VALREQ	= 1^6 - 1^5; 
 MACRO		ENT_V_LIST	= 16,6,1,0%; 		! COMMA-SEPARATED LIST OF VALUES ALLOWED 
 LITERAL	ENT_M_LIST	= 1^7 - 1^6; 
 MACRO		ENT_V_CONCAT	= 16,7,1,0%; 		! CONCATENATED VALUES ALLOWED 
 LITERAL	ENT_M_CONCAT	= 1^8 - 1^7; 
 MACRO		ENT_V_IMPCAT	= 16,8,1,0%; 		! VALUES ARE IMPLICITLY CONCATENATED 
 LITERAL	ENT_M_IMPCAT	= 1^9 - 1^8; 
 MACRO		ENT_V_VERB	= 16,9,1,0%; 		! QUALIFIER CAN APPEAR ON COMMAND VERB 
 LITERAL	ENT_M_VERB	= 1^10 - 1^9; 
 MACRO		ENT_V_PARM	= 16,10,1,0%; 		! QUALIFIER CAN APPEAR ON PARAMETER 
 LITERAL	ENT_M_PARM	= 1^11 - 1^10; 
 MACRO		ENT_V_MCROPTDLM	= 16,11,1,0%; 	! VALUE DELIMITER IS OPTIONAL (MCR) 
 LITERAL	ENT_M_MCROPTDLM	= 1^12 - 1^11; 
 MACRO		ENT_V_MCRIGNORE	= 16,12,1,0%; 	! IGNORE THIS ENTITY BLOCK (MCR) 
 LITERAL	ENT_M_MCRIGNORE	= 1^13 - 1^12; 
 			
 LITERAL	ENT_C_LENGTH	= 20; 
 LITERAL	ENT_K_LENGTH	= 20; 			! LENGTH OF FIXED LENGTH PORTION 

  
 ! 
 !	DEFINE CHANGE LIST STRUCTURE 
 ! 
  
 !...$CHGDEF	
 MACRO		CHG_B_SIZE	= 0,0,8,0%; 		! SIZE OF CHANGE LIST BLOCK 
 MACRO		CHG_B_FLAGS	= 1,0,8,0%; 		! FLAGS 
 			 
 MACRO		CHG_V_IMAGE	= 1,0,1,0%; 		! IMAGE CHANGE 
 LITERAL	CHG_M_IMAGE	= 1^1 - 1^0; 
 MACRO		CHG_V_PARMS	= 1,1,1,0%; 		! PARAMETER(S) CHANGE 
 LITERAL	CHG_M_PARMS	= 1^2 - 1^1; 
 MACRO		CHG_V_QUALS	= 1,2,1,0%; 		! QUALIFIER(S) CHANGE 
 LITERAL	CHG_M_QUALS	= 1^3 - 1^2; 
 MACRO		CHG_V_MCRIGNORE	= 1,3,1,0%; 	! IGNORE IF CLI IS MCR 
 LITERAL	CHG_M_MCRIGNORE	= 1^4 - 1^3; 
 			
 MACRO		CHG_W_IMAGE	= 2,0,16,1%; 	! SRO TO NEW IMAGE 
 MACRO		CHG_B_PARMCNT	= 4,0,8,0%; 	! MIN/MAX PARAMETER COUNTS 
 			 
 MACRO		CHG_V_MINPARM	= 4,0,4,0%; 	! MINIMUM NUMBER OF PARAMETERS REQUIRED 
 MACRO		CHG_V_MAXPARM	= 4,4,4,0%; 	! MAXIMUM NUMBER OF PARAMETERS ALLOWED 
 			
 MACRO		CHG_W_PARMS	= 5,0,16,1%; 	! SRO TO FIRST PARAMETER DESCRIPTOR 
 MACRO		CHG_W_QUALS	= 7,0,16,1%; 	! SRO TO FIRST QUALIFIER DESCRIPTOR 
 LITERAL	CHG_C_LENGTH	= 9; 
 LITERAL	CHG_K_LENGTH	= 9; 	 

