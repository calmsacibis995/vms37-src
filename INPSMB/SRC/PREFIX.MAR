	.NLIST
	.TITLE	PREFIX - INPUT SYMBIONT PREFIX FILE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:	VAX/VMS INPUT SYMBIONT PROCESS
;
; ABSTRACT:	ASSEMBLER PREFIX FILE
;
; ENVIRONMENT:
;
; AUTHOR:	LEN KAWELL, CREATION DATE: 8-MAR-78
;
; MODIFIED BY:
;
;	01.01	CNH0005		Chris Hume	22-May-1979	13:00
;		Use the correct record size when accessing SYSUAF.DAT
;		(MAIN.MAR 01.01)
;
;	01.02	GWF0001		Gary Fowler	19-Nov-1981
;		Change references to LIB$SIGNAL to general mode addressing
;--
	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;
	.LIBRARY	\EXECML$\

;
; MACROS:
;
 
;
; MACRO TO SET OR CLEAR A BIT BY BIT NUMBER
;
;CALL:
;	SETBIT	BITNUM,FLAGWORD
; OR:
;	CLRBIT	BITNUM,FLAGWORD
;
; WHERE:
;	BITNUM IS ANY VALID SOURCE OPERAND SECIFYING THE BIT
;		OFFSET FROM THE FLAG BASE TO SET/CLEAR
;
;	FLAGWORD IS ANY VALID DESTINATION OPERAND
;
	.MACRO	SETBIT	VAL,FLAG
	.NTYPE	_$$_	VAL
	.IF EQ	<_$$_-^X0EF>
	.IF NDF	VAL
	BBSS	S^#VAL,FLAG,.+1
	.IFF
	.IF LT <VAL-8>
	BISB	#<1@VAL>,FLAG
	.IFF
	BBSS	#VAL,FLAG,.+1
	.ENDC
	.ENDC
	.IFF
	BBSS	VAL,FLAG,.+1
	.ENDC
	.ENDM	SETBIT
;
	.MACRO	CLRBIT	VAL,FLAG
	.NTYPE	_$$_	VAL
	.IF EQ	<_$$_-^X0EF>
	.IF NDF	VAL
	BBCC	S^#VAL,FLAG,.+1
	.IFF
	.IF LT <VAL-8>
	BICB	#<1@VAL>,FLAG
	.IFF
	BBCC	#VAL,FLAG,.+1
	.ENDC
	.ENDC
	.IFF
	BBCC	VAL,FLAG,.+1
	.ENDC
	.ENDM	CLRBIT
 
;
; PROGRAM SECTION DEFINITION MACROS
;	ARGUMENTS ARE:
;		1) SECTION NAME (KEY WORD IS NAME)
;		2) ALIGNMENT    (KEY WORD IS ALIGN)
;
;	IN ALL CASE, ARGUMENTS ARE OPTIONAL
;
; MACRO TO GENERATE A PURE SECTION - CODE AND DATA - FOR LOCALITY
;
	.MACRO	PURE_SECTION	NAME=INP_PURE,ALIGN=LONG

	.PSECT	NAME	EXE,RD,NOWRT,ALIGN

	.ENDM	PURE_SECTION
;
; MACRO TO GENERATE IMPURE DATA SEGMENT
;
	.MACRO	IMPURE_DATA  NAME=INP_RWDATA,ALIGN=LONG
 
	.PSECT	NAME	NOEXE,WRT,RD,ALIGN
 
	.ENDM	IMPURE_DATA
;
; MACRO TO GENERATE A STRING WITH DESCRIPTOR
;
;	STRING_DESC <STRING> 
;
; WHERE:
;	<STRING> IS THE STRING TO BE USED
;
	.MACRO	STRING_DESC ST,?L1,?L2
 
	.WORD	L2-L1,0
	.LONG	L1
L1:
	.ASCII	\ST\
L2:
	.ENDM

;
; MACRO TO SIGNAL AN ERROR IF R0 DOESN'T CONTAIN SUCCESS
;
	.MACRO	IF_ERROR CONDITION,P1,P2,P3,P4,P5,P6,P7,P8,?L1

	BLBS	R0,L1
	$$ARGS$$=1
	.IRP	ARG,<P8,P7,P6,P5,P4,P3,P2,P1>
	.IF NB	ARG
	PUSHL	ARG
	$$ARGS$$=$$ARGS$$+1
	.ENDC
	.ENDR
	PUSHL	#CONDITION
	CALLS	#$$ARGS$$,G^LIB$SIGNAL
L1:
	.ENDM	IF_ERROR

;
; MACRO TO SIGNAL A CONDITON
;
	.MACRO	SIGNAL CONDITION,P1,P2,P3,P4,P5,P6,P7,P8

	$$ARGS$$=1
	.IRP	ARG,<P8,P7,P6,P5,P4,P3,P2,P1>
	.IF NB	ARG
	PUSHL	ARG
	$$ARGS$$=$$ARGS$$+1
	.ENDC
	.ENDR
	PUSHL	#CONDITION
	CALLS	#$$ARGS$$,G^LIB$SIGNAL

	.ENDM	SIGNAL

;
; EQUATED SYMBOLS
;

INP$K_OPTBUFSZ	= 72			;OPTION BUFFER SIZE
INP$K_JOBCRDSZ	= 256			;JOB CARD BUFFER SIZE
INP$K_MAXRSS	= 128			;MAXIMUM RESULTANT FILE NAME SIZE

INP$K_GENEFN	= 0			;GENERAL EVENT FLAG
INP$K_CREFN	= 1			;CARD READER EVENT FLAG
INP$K_TIMEFN	= 2			;TIMEOUT EVENT FLAG



;
; DEFINE SYMBIONT DATA VECTOR
;
	$DEFINI	ID
$DEF	ID_W_CRCHAN	.BLKW	1	;CARD READER CHANNEL
$DEF	ID_Q_IOSB	.BLKQ	1	;CARD READER I/O STATUS BLOCK
$DEF	ID_Q_PASSW_DESC	.BLKQ	1	;PASSWORD DESCRIPTOR
$DEF	ID_Q_UNAME_DESC	.BLKQ	1	;USER NAME DESCRIPTOR
$DEF	ID_Q_ACCNT_DESC	.BLKQ	1	;ACCOUNT NAME DESCRIPTOR
$DEF	ID_Q_JOBNM_DESC	.BLKQ	1	;JOB NAME DESCRIPTOR
$DEF	ID_T_PASSWORD	.BLKB	8	;PASSWORD STRING
$DEF	ID_B_INBUF_INDX	.BLKB	1	;INPUT BUFFER INDEX
$DEF	ID_Q_TIMEOUT	.BLKQ	1	;READ TIMEOUT TIME
$DEF	ID_W_MBCHAN	.BLKW	1	;MAILBOX CHANNEL NUMBER
$DEF	ID_L_OPT_PTR	.BLKL	1	;OPTION POINTER
$DEF	ID_L_FLAGS	.BLKL	1	;GENERAL SYMBIONT FLAGS

	_VIELD	FLAG,0,<-		;*** JOB CARD FLAGS ARE IN 1ST WORD
		<JOB,,M>,-		;CARD WAS A JOB CARD
		<NAME,,M>,-		;A USERNAME WAS FOUND ON CARD
		<NODEL,,M>,-		;NODELETE OPTION WAS SPECIFIED
		<NOTRAIL,,M>,-		;NOTRAILING_BLANKS OPTION WAS SPECIFIED
		<,12>,-			;*** GENERAL FLAGS ARE IN 2ND WORD
		<INITOK,,M>,-		;SYMBIONT WAS INITIALIZED OK
		<CREATED,,M>,-		;OUTPUT FILE CREATED OK
		>

$DEF	ID_T_CHAN_INFO	.BLKL	3	;CARD READER CHANNEL INFO
$DEF	ID_T_DEF_DIR	.BLKB	INP$K_MAXRSS ;DEFAULT DIRECTORY STRING
$DEF	ID_T_JOB_CARD	.BLKB	INP$K_JOBCRDSZ	;JOB CARD IMAGE
$DEF	ID_K_SIZE			;SIZE OF DATA VECTOR

	$DEFEND	ID

;
; DEFINE SYMBIONT MANAGER MESSAGE BUFFER VECTOR
;
	$DEFINI	SM

$DEF	SM_W_REQUEST	.BLKW	1	;REQUEST TYPE
$DEF	SM_T_QUEUE	.BLKB	16	;QUEUE NAME
$DEF	SM_T_DEVNAME	.BLKB	16	;DEVICE NAME
$DEF	SM_W_FILEID	.BLKB	6	;FILE ID
$DEF	SM_W_DIRID	.BLKB	6	;DIRECTORY ID
$DEF	SM_T_FILENAME	.BLKB	20	;FILE (JOB) NAME
$DEF	SM_T_OPTIONS	.BLKB	INP$K_OPTBUFSZ	;OPTIONS
$DEF	SM_K_SIZE			;SIZE OF MESSAGE BUFFER

	$DEFEND	SM

	.LIST
