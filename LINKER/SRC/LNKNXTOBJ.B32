MODULE LNK_NXTOBJ
	(IDENT = 'V03-000',
	ADDRESSING_MODE(EXTERNAL=GENERAL,
			NONEXTERNAL=LONG_RELATIVE)
	) =

BEGIN
!
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
!
!
!++
!
! MODULE: LNK_NXTOBJ
!
! FACILITY: LINKER
!
! ABSTRACT: FIND NEXT OBJECT MODULE (AND OPEN FILE) FOR PASS 2.
!
! HISTORY:
!
!	VERSION: X01.00
!
!	AUTHOR: T.J. PORTER 11-APR-77
!
! MODIFIED BY:
!
!	V03-003	BLS0074		Benn Schreiber		29-Aug-1981
!		Remove argument for call to lnk$nxtobjmod
!		
!	V03-002	BLS0017		Benn Schreiber		1-Sep-1980
!		Set lnk$gl_curomd when going to new object module.
!
!	V03-001	BLS0007		Benn Schreiber,		3-Jun-1980
!		Convert to MDL data structures.
!--

!
!++
!
! FUNCTIONAL DESCRIPTION:
!
!
!	THIS MODULE CONTAINS THE ROUTINE TO ACQUIRE THE NEXT
!	OBJECT MODULE DESCRIPTOR AND ENSURE THAT THE FILE IS OPEN
!	(AT CORRECT PLACE) READY FOR PASS 2 TO READ RECORDS
!	SEQUENTIALLY FROM IT.
!		THIS IS DONE BY FOLLOWING DOWN THE SINGLY LINKED
!	LIST OF OBJECT MODULE DESCRIPTORS TO THE END, THEN PROCEEDING
!	TO THE NEXT FILE IN SEQUENCE, OPENING IT AND FOLLOWING
!	DOWN THE LIST.
!		CALLING SEQUENCE:-
!			LNK$NXTOBJMOD ()
!
!	THE ADDRESS OF THE DESCRIPTOR OF THE NEXT OBJECT MODULE
!	IS STORED IN LNK$GL_CUROMD
!		ROUTINE HAS VALUE FALSE WHEN NO MORE
!	MODULES ARE AVAILABLE IN THE LAST FILE.
!
!--
!
LIBRARY
	'STARLETL32';				! SYSTEM USER DATA STRUCTURES
REQUIRE
	'PREFIX';				! MACROS ETC.
LIBRARY
	'DATBAS';				! INTERNAL DATA BASE DEFINITION
!
EXTERNAL LITERAL
	LIN$_EMPTYFILE;				! FILE CONTAINS NO MODULES
!
EXTERNAL ROUTINE	
	LNK$NXTFIL,						! OPEN NEXT FILE
	LNK$POINTOBJ;						! POINT TO A MODULE IN LIBRARY
!
EXTERNAL
	LNK$GL_CUROMD : REF BLOCK[,BYTE],			! POINTER TO CURRENT OBJECT MODULE DESCRIPTOR
	LNK$GL_CURFIL : REF BLOCK[,BYTE];			! POINTER TO CURRENT FILE.
!
GLOBAL ROUTINE LNK$NXTOBJMOD =
BEGIN
!
!	IF THE END OF A LIST OF OBJECT MODULE DESCRIPTORS (OR
!	FIRST CALL) OPEN NEXT FILE. ON SUBSEQUENT CALLS FOLLOW DOWN
!	CURRENT LIST. FINALLY RETURN VALUE FALSE
!
LOCAL
	LSTOBMODESC : REF BLOCK[,BYTE];				! POINTER TO PREVIOUS OBJ MOD. DESCRIPTOR
!
IF (LSTOBMODESC = .LNK$GL_CUROMD) NEQ 0				! IF THERE WAS ONE
    THEN LNK$GL_CUROMD = .LNK$GL_CUROMD[OMD$L_NXTOMD];		! BEFORE, GET THE ONE
WHILE (.LNK$GL_CUROMD EQL 0) DO					! IT POINTS TO IF THERE
BEGIN								! IS NO LONGER A DESCRIPTOR
	LSTOBMODESC = 0;					! RESET THE LAST OBJECT DESCRIPTOR
	IF NOT LNK$NXTFIL()					! OPEN NEXT FILE
	THEN BEGIN						! AND ALL DONE IF NO MORE
		LNK$GL_CURFIL = 0;
		RETURN FALSE
	     END;
	IF (LNK$GL_CUROMD = .LNK$GL_CURFIL[FDB$L_OMDLST]) EQL 0	! OTHERWISE GET THE FIRST MODULE
	THEN 							! BUT IF THERE IS NONE
		SIGNAL(LIN$_EMPTYFILE,1,LNK$GL_CURFIL[FDB$Q_FILENAME]); ! REPORT THE ERROR
     END;
IF .LNK$GL_CURFIL[FDB$V_LIBR]					! IF A LIBRARY FILE
    OR .LNK$GL_CUROMD[OMD$V_SHRIMG]				! AND/OR A SHAREABLE IMAGE
    OR ((.LSTOBMODESC NEQ 0)					! OR THIS IS NOT THE FIRST IN A CONCATENATED
    AND .LSTOBMODESC[OMD$V_NOBIN])				! OBJ BUT IS PRECEDED BY A MODULE WITH NO BINARY
    THEN LNK$POINTOBJ(LNK$GL_CUROMD[OMD$L_MODVBN]);		! POINT TO THE MODULE

RETURN TRUE							! AND SUCCESS
END;
END ELUDOM
