MODULE LNK_INIT (IDENT='V03-000',
		ADDRESSING_MODE(EXTERNAL=GENERAL,
				NONEXTERNAL=LONG_RELATIVE)
		) =

BEGIN
!
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!
!
!
!
!
!++
!
! MODULE: LNK_INIT
!
! FACILITY: LINKER
!
! ABSTRACT: INITIALIZATION ROUTINE
!
! HISTORY:
!
!	VERSION: X01.00
!
!	AUTHOR: T.J. PORTER 03-JAN-77
!
! MODIFIED BY:
!
!	V03-001	BLS0007		Benn Schreiber,		3-Jun-1980
!		Convert to MDL datqa structures.
!--

!
!++
!
! FUNCTIONAL DESCRIPTION:
!
! ROUTINE WHICH INITIALIZES THE LINKER. IT TAKES NO EXPLICIT
! INPUT. THE FOLLOWING INITIALIZATION IS DONE, IN ORDER:
!	1. HASH TABLE ALLOCATED FOR THE SYMBOL TABLE
!	2. DEFAULT VALUES ESTABLISHED FOR STACK, BASE ADDRESS
!		AND LINK CONTROL MASK.
!
!--
!
LIBRARY
	'STARLETL32';
REQUIRE
	'PREFIX';
LIBRARY
	'DATBAS';
!
EXTERNAL ROUTINE
	LNK$ALLOBLK : NOVALUE; ! ALLOCATE DYNAMIC MEMORY
!
EXTERNAL LITERAL
	DEF$C_STACK : SHORT,	! DEFAULT STACK SIZE
	DEF$C_LNKCTL;		! DEFAULT CONTROL MASK
!
EXTERNAL
	LNK$GL_FVMLST : REF BLOCK[,BYTE],		! HEAD OF FREE VIRTUAL MEMORY LIST
	LNK$GL_CTLMSK : BLOCK[,BYTE],			! LINK CONTROL MASK
	LNK$GW_STACK : WORD,				! STACK SIZE
	SYM$GL_HASHTBL;
! 
GLOBAL ROUTINE LNK$INIT : NOVALUE =
BEGIN
!
LOCAL	SYMENTALLO;					! ALLOCATED SIZE FOR SYMBOL TABLE ENTRIES
!
LNK$ALLOBLK(SYM$C_TBLSIZ*4,SYM$GL_HASHTBL);		! ALLOCATE A HASH TABLE
CH$FILL(0,SYM$C_TBLSIZ*4,.SYM$GL_HASHTBL);		! CLEAR THE TABLE
LNK$GW_STACK = DEF$C_STACK;				! SET DEFAULT STACK SIZE
LNK$GL_CTLMSK = DEF$C_LNKCTL;				! DEFAULT CONTROL FLAGS
LNK$ALLOBLK(FVM$C_SIZE,LNK$GL_FVMLST);			! ALLOCATE FIRST FREE MEMORY DESCRIPTOR
LNK$GL_FVMLST[FVM$L_NXTFVM] = 0;			! POINTS NOWHERE
LNK$GL_FVMLST[FVM$L_ADDRESS] = 0;			! ASSUME BASE OF PROGRAM REGION
LNK$GL_FVMLST[FVM$L_BYTES] = CONTROL_REGION;		! AND ALL OF REGION
RETURN;
END;
END ELUDOM
