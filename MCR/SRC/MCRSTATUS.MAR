	.TITLE	MCRSTATUS - SET COMPLETION STATUS
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 18-MAY-77
;
; SET COMPLETION STATUS
;
; MACRO LIBRARY CALLS
;
 
	DEFCMDBLK			;DEFINE COMMAND BLOCK OFFSETS
	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
	$PSLDEF				;DEFINE PROCESSOR STATUS REGISTER FIELDS
 
;
; LOCAL DATA
;
 
	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
EXIT:					;EXIT COMMAND TEXT
	.ASCII	<5>/EXIT/<0>		;
	.PAGE
	.SBTTL	SET COMPLETION STATUS
;+
; MCR$SET_STATUS - SET COMPLETION STATUS
;
; THIS ROUTINE IS CALLED TO SET THE COMPLETION STATUS OF A COMMAND. IT IS
; CALLED FROM A POINT AT WHICH INDIRECT FILES AND ALL OTHER CONTEXT CAN BE
; DESTROYED IF APPROPRIATE.
;
; INPUTS:
;
;	R0 = COMPLETION STATUS VALUE.
;
;	IT IS ASSUMED THAT "ON ERROR" CONDITIONS HAVE BEEN ESTABLISHED.
;
; OUTPUTS:
;
;	THE THREE COMPONENTS OF THE COMPLETION STATUS ARE CONVERTED TO ASCII
;	AND EQUATED TO THEIR RESPECTIVE SYMBOL NAMES.
;-
 
MCR$SET_STATUS::			;SET COMPLETION STATUS
	BLBC	R0,5$			;BR IF ERROR STATUS OF SOME KIND
	BBS	#CMD_V_NOSTAT,WRK_B_CMDFLG(FP),40$ ; BR IF NO STATUS COMMAND
5$:	DISABLE				;DISABLE CONTROL Y/C AST'S
	CLRQ	(SP)+			;REMOVE RETURN INFORMATION FROM STACK
	PUSHL	R0			;SAVE COMPLETION STATUS VALUE
	BGEQ	10$			;IF GEQ NOT COMMAND INTERPRETER STATUS
	MNEGL	R0,R0			;NEGATE COMPLETION STATUS
	BISW	#^X0E000,R0		;ADD CLI SUBSYSTEM SPECIFY DIVIDED BY 4
	MULL3	#4,R0,(SP)		;CONVERT TO SCALED ERROR NUMBER
10$:	EXTZV	#0,#3,(SP),R0		;EXTRACT SEVERITY LEVEL
	ADDL	#^A/0/,R0		;CONVERT SEVERITY LEVEL TO ASCII
	MOVL	PRC_L_SEVERITY(R11),R1	;GET ADDRESS OF SEVERITY LEVEL VALUE
	MOVB	R0,(R1)			;SET SEVERITY LEVEL VALUE
	MOVB	#1,-(R1)		;SET LENGTH OF SEVERITY LEVEL VALUE
	MOVL	PRC_L_STATUS(R11),R2	;GET ADDRESS OF STATUS VALUE VALUE
	MOVL	(SP),R0			;GET STATUS VALUE
	MOVB	#10,-1(R2)		;SET LENGTH OF STRING
	MOVW	#^A/%X/,(R2)+		;SET RADIX CONTROL CHARACTERS
	BSBW	MCR$CNVHXL		;CONVERT TO HEX LONGWORD
	POPR	#^M<R2>			;RETRIEVE FINAL STATUS
	BBS	#PRC_V_YLEVEL,PRC_W_FLAGS(R11),40$ ;IF SET, CONTROL Y/C LEVEL
	MOVL	R2,PRC_L_LSTSTATUS(R11)	;SAVE LAST STATUS VALUE FOR PROCESS
	BLBS	R2,40$			;IF LBS SUCCESSFUL COMPLETION
	EXTZV	#0,#3,R2,R0		;EXTRACT SEVERITY LEVEL
	CMPB	R0,PRC_W_ONLEVEL(R11)	;FATAL ERROR?
	BLSS	40$			;IF LSS NO
	FLUSH				;FLUSH COMMAND BUFFER
	MOVL	PRC_L_ONERROR(R11),R0	;GET ADDRESS OF ON COMMAND TEXT
	BNEQ	30$			;IF NEQ COMMAND SPECIFIED
	MOVAB	EXIT,R0			;GET ADDRESS OF EXIT COMMAND TEXT
30$:	MOVZBL	(R0)+,R1		;GET LENGTH OF ON COMMAND TEXT
	MOVC	R1,(R0),WRK_AB_BUFFER+CMDBUFSIZ+4(FP) ;MOVE COMMAND TO INPUT BUFFER
	MOVAB	WRK_AB_BUFFER+CMDBUFSIZ+3(FP),- ;SET INPUT BUFFER POINTER
		WRK_L_CHARPTR(FP)	;
	ONRESET				;RESET ON ERROR PARAMETERS
	BRW	MCR$CMDSTART		;EXECUTE ON COMMAND
40$:	RSB				;
 
	.END
