	.TITLE	MCRPRCFIL - PROCESS FILE SPECIFICATION
	.IDENT	'V03-002'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 22-MAR-77
;
; Modified by:
;
;	V03.02	MAJ0004		Melanie Johnson	09-Apr-1982
;		Skip special device-only check if not in regular parsing sections.
;		This will be indicated by R8=0 rather than R8=entity block
;		descriptor pointer.
;
;	V03.01	MAJ0003		Melanie Johnson	24-Mar-1982
;		Check for and handle the case of a device immediately followed
;		by a label with the device being delimited with a colon.
;		(For MOUNT and INITIALIZE)
;
;	V02.05	MAJ0002		Melanie Johnson	28-Jan-81
;		Eliminate device special-casing.
;
;	V02.04	MAJ0001		Melanie Johnson	30-Nov-81
;		Make changes to reference the new MDL structures.
;
;	V02.03	PCG0001		Peter George	27-Jul-1981
;		Correct parsing of strings beginning with a node name.
;
;	V01.02	RN0026		R. Newland	27-Feb-1980
;		Allow command lines of the form  =input,...
;
;	V01.01	RN0018		R. Newland	 3-Jan-1980
;		Allow "...", "-" in directory specs,
;		allow * and % in file spec version and uic fields,
;		allow node name list (e.g. NODE::NODE::NODE::),
;		Change program section name to MCR$ZCODE.
;
; PROCESS FILE SPECIFICATION
;
; MACRO LIBRARY CALLS
;
 
	CMDDEF				;DEFINE COMMAND BLOCK BITS
	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
	DEFERRCOD			;DEFINE ERROR/STATUS VALUES
	DEFPTRDSC			;DEFINE RESULT PARSE DESCRIPTOR FORMAT
	ENTDEF

	.PAGE
	.SBTTL	PROCESS FILE SPECIFICATION
;+
; MCR$PROCFILE - PROCESS FILE SPECIFICATION.
;
; THIS ROUTINE IS CALLED TO SCAN A FILE SPECIFICATION FOR SYNTACTIC CORRECT-
; NESS AND TO EMIT A FILE DESCRIPTOR TO THE RESULT PARSE TABLE.
;
; INPUTS:
;
;	R8 = ADDRESS OF ENTITY DESCRIPTOR BLOCK FOR CURRENT ENTITY OR ZERO
;	R9 = ADDRESS OF NEXT BYTE IN COMMAND BUFFER.
;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
;	R11 = BASE ADDRESS OF PROCESS WORK AREA.
;	FP = BASE ADDRESS OF COMMAND WORK AREA.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES A FAILURE TO PARSE FILE SPECIFICATION.
;
;		R0 = MCR$_DIRECT - INVALID DIRECTORY SYNTAX.
;		R0 = MCR$_NUMBER - INVALID GROUP, MEMBER, OR VERSION NUMBER.
;		R0 = MCR$_NULFIL - NULL FILE SPECIFICATION.
;
;	R0 LOW BIT SET INDICATES A SUCCESSFUL PARSE WITH THE FILE DESCRIPTOR
;		EMITTED AND THE FILE SPECIFICATION COPIED TO THE COMMAND
;		BUFFER.
;
;		R0 = MCR$_NORMAL - NORMAL COMPLETION.
;-
 
	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
MCR$PROCFILE::				;PROCESS FILE SPECIFICATION
	PUSHR	#^M<R6,R7,R8>		;SAVE REGISTERS
	MOVCHAR				;MOVE TERMINATOR CHARACTER
	BSBW	MCR$MARK		;SAVE STARTING ADDRESS OF PARAMETER
	GETOKEN				;GET NEXT TOKEN

;
; TOKEN OBTAINED - FORM MUST BE:
;
;	'NODE::' OR,
;	'DEVICE:' OR,
;	'FILENAME.' OR,
;	'FILENAME;' OR,
;	'FILENAME '.
;
 
5$:	BEQL	20$			;BR IF NO TOKEN HERE
	CMPB	#^A/:/,R0		;NODE OR DEVICE NAME?
	BNEQ	60$			;IF NEQ NO
 
;
; NODE OR DEVICE NAME
;
 
	MOVCHAR				;MOVE TERMINATOR TO COMMAND BUFFER
	SETCHAR				;PEEK AT NEXT CHARACTER IN INPUT BUFFER
	BEQL	15$			;BR IF EOL
	CMPB	#^A/:/,R0		;NODE NAME?
	BNEQ	10$			;IF NEQ NO
	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	BRB	5$			;LOOP TO ALLOW ANOTHER NODE NAME

10$:	CMPB	#^A/ /,R0		;END OF FILESPEC?
	BEQL	15$			;IF EQL YES
	TSTL	R8			;IF R8=0, NOT IN REG. PARSING - NOT DEV. ONLY
	BEQL	15$			;IF EQL, TRY TO PARSE REST OF FILESPEC.
	CMPB	#ENT_C_DEVICE,ENT_B_VALTYPE(R8) ;IS THIS ENTITY A DEVICE ONLY?
	BNEQ	15$			;IF NEQ NO
	BSBW	MCR$BACKUPMOVE		;REPLACE COLON IN THE BUFFER
	BRW	100$			;GO BUILD RESULT PARSE DESCR. FOR DEVICE
15$:	GTBTOKEN			;GET NEXT BLANK TOKEN
	BNEQ	60$			;IF NEQ TOKEN OBTAINED
 
;
; NO TOKEN OBTAINED - FORM MUST BE:
;
;	'[DIRECTORY]' OR,
;	'<DIRECTORY>' OR,
;	'.TYPE' OR,
;	';VERSION'.
;
 
20$:	CMPB	#^A/[/,R0		;DIRECTORY?
	BEQL	30$			;IF EQL YES
	CMPB	#^A/</,R0		;DIRECTORY?
	BNEQ	60$			;IF NEQ NO
30$:	MOVAB	2(R0),AP		;SAVE DIRECTORY TERMINATOR CHARACTER
	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	CMPB	#^A/,/,R0		;OLD STYLE DIRECTORY?
	BNEQ	40$			;IF NEQ NO
 
;
; OLD STYLE DIRECTORY - FORM IS:
;
;	'[GROUP,MEMBER]'.
;
 
	BSBW	CVTUIC			;CONVERT GROUP NUMBER AND CHECK
	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	CMPB	R0,AP			;EXPECTED TERMINATOR?
	BEQL	35$			;IF EQL YES
	BRW	120$			;INVALID SYNTAX
35$:	BSBW	CVTUIC			;CONVERT AND CHECK MEMBER NUMBER
	BRB	50$			;
 
;
; NEW STYLE DIRECTORY - FORM IS:
;
;	'<SUB.SUB...SUB>'.
;
 
40$:	CMPB	R0,AP			;EXPECTED TERMINATOR?
	BEQL	50$			;IF EQL YES
	CMPB	#^A/./,R0		;SUBDIRECTORY?
	BEQL	45$			;IF EQL, TERMINATOR OK
	CMPB	#^A/-/,R0		;BACKUP SYMBOL?
	BNEQ	120$			;IF NEQ, INVALID SYNTAX
45$:	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	BRB	40$			;
50$:	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
 
;
; FILENAME, TYPE, OR VERSION - FORM MUST BE:
;
;	'FILENAME.' OR,
;	'FILENAME;' OR,
;	'FILENAME ' OR,
;	'.TYPE' OR,
;	';VERSION'.
;
 
60$:	CMPB	#^A/./,R0		;FILE TYPE?
	BNEQ	70$			;IF NEQ NO
	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	CMPB	#^A/./,R0		;NEW VERSION FORMAT?
	BEQL	80$			;IF EQL YES
 
;
; FILE VERSION - FORM MUST BE:
;
;	';VERSION'.
;
 
70$:	CMPB	#^A/;/,R0		;FILE VERSION?
	BNEQ	100$			;IF NEQ NO
80$:	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
	BNEQ	90$			;IF NEQ NO NEGATIVE VERSION
	CMPB	#^A/-/,R0		;NEGATIVE VERSION?
	BNEQ	100$			;IF NEQ NO
	MOVBTOKN			;MOVE TERMINATOR AND GET BLANK TOKEN
90$:	MOVL	#10,R0			;SET CONVERSION RADIX
	MOVZWL	#32767,R3		;SET CONVERSION LIMIT
	BSBB	CVTNUM			;CONVERT AND CHECK NUMBER
 
;
; FILE SPECIFICATION SCANNED - CHECK RESULT
;
 
100$:	BSBW	MCR$MARKEDTOKEN		;GET ADDRESS & LENGTH OF PARAMETER STRING
	BNEQ	105$			;BR IF NOT A NULL FILE SPEC
	CMPB	R0,#^A/,/		;EXPLICIT NULL FILE?
	BEQL	105$			;BR IF YES-FORM A RESULT DESCRIPTOR
	CMPB	R0,#^A/=/		; Explicit null output files
	BEQL	105$			; Yes if EQL - form result descriptor
	TSTB	R0			;IS THIS AT END OF LINE?
	BEQL	115$			;BR IF YES - NULL FILES ALLOWED HERE
	STATUS	NULFIL			;ELSE THIS IS AN ERROR
	BRB	FILXIT			;RETURN THE ERROR
105$:	EXTZV	#WRK_V_EQUAL,#1,-	;GET THE EQUAL SIGN SEEN FLAG BIT
		WRK_W_FLAGS(FP),R6	;AS FLAG VALUE FOR DESCRIPTOR
	MOVZBL	#PTR_K_PARAMETR,R5	;ASSUME NOT PROCESSING QUALIFIER
	BBC	#WRK_V_QUAL,WRK_W_FLAGS(FP),110$ ;IF CLR, NOT PROCESSING QUALIFIER
	MOVZBL	#PTR_K_QUALVALU,R5	;SET ITEM TYPE TO QUALIFIER VALUE
;
; R7 & R8 have been preserved in the beginning.  The address of the entity
; block, contained in R8, is no longer needed by this routine.
;
110$:	MOVL	R1,R7			;PUT LENGTH OF PARM STRING IN EXPECTED PLACE
	MOVL	R2,R8			;PUT ADDR OF PARM STRING IN EXPECTED PLACE
	GENDESCR			;GENERATE RESULT PARSE DESCRIPTOR
	SETCHAR				;PEEK AT THE TERMINATOR CHARACTER
	CMPB	#^A/:/,R0		;IS THE TERMINATOR A COLON?
	BNEQ	112$			;IF NEQ NO
	MOVB	#^A/ /,R0		;TERMINATOR CLASS SHOULD BE BLANK INSTEAD
	BSBW	MCR$GENTERM		;RESET TERMINATOR CLASS FOR THIS TOKEN
112$:	MOVQ	R7,R1			;RETURN FILESPEC. DESCRIPTOR TO CALLER
115$:	STATUS	NORMAL			;SET SUCCESSFUL COMPLETION
	BRB	FILXIT			;
 
;
; INVALID DIRECTORY SYNTAX
;
 
120$:	STATUS	DIRECT			;SET INVALID DIRECTORY SYNTAX
	BRB	FILXIT			;
	.PAGE
	.SBTTL	CONVERT UIC NUMBER AND CHECK
;
; CVTUIC - CONVERT UIC NUMBER AND CHECK
;
 
CVTUIC:					;CONVERT UIC AND CHECK
	MOVL	#8,R0			;SET CONVERSION RADIX
	MOVZBL	#255,R3			;SET CONVERSION LIMIT
CVTNUM:					;CONVERT AND CHECK NUMBER
	TSTL	R1			;ANY DIGITS TO CONVERT?
	BEQL	20$			;IF EQL NO
	CLRL	R5			;CLEAR ACCUMULATED RESULT
10$:	CLRL	R4			;ASSUME * OR % AND REPRESENT AS ZERO
	CMPB	#^A/*/,(R2)+		;ASTERISK?
	BEQL	15$			;IF EQL YES
	CMPB	#^A/%/,-1(R2)		;PERCENT?
	BEQL	15$			;IF EQL YES
	SUBB3	#^A/0/,-1(R2),R4	;SUBTRACT DIGIT BIAS FROM NEXT CHARACTER
	BLSS	20$			;IF LSS ILLEGAL CHARACTER
	CMPB	R0,R4			;DIGIT TOO LARGE?
	BLEQ	20$			;IF LEQ YES
15$:
	MULL	R0,R5			;SCALE ACCUMULATED RESULT
	ADDL	R4,R5			;ADD IN NEW DIGIT
	CMPL	R3,R5			;RESULT OVERFLOW?
	BLSS	20$			;IF LSS YES
	SOBGTR	R1,10$			;ANY MORE DIGITS TO CONVERT?
	RSB				;
20$:	TSTL	(SP)+			;REMOVE RETURN FROM STACK
	STATUS	NUMBER			;SET NUMBER ERROR
FILXIT:					;COMMMON EXIT
	POPR	#^M<R6,R7,R8>		;RESTORE REGISTERS
	RSB				;
 
	.END
