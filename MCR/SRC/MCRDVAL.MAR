	.TITLE	MCRDVAL - PARSE TABLE DESCRIPTOR VALUE MANIPULATION ROUTINES
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; W. H. BROWN 7-DEC-1977
;
; PARSE TABLE DESCRIPTOR VALUE MANIPULATION ROUTINES
;
; MACRO LIBRARY CALLS
;
 
	DEFCMDWRK			;DEFINE WORK AREA OFFSETS
	DEFPTRDSC			;DEFINE RESULT PARSE DESCRIPTOR FORMAT
	.PAGE
	.SBTTL	COMPRESS QUOTED STRING
;+
; MCR$COMPSTRING - COMPRESS QUOTED STRING
;
; THIS ROUTINE IS CALLED TO COMPRESS A QUOTED STRING.
;
; INPUTS:
;
;	R1 = LENGTH OF STRING.
;	R2 = ADDRESS OF STRING.
;
; OUTPUTS:
;
;	THE SPECIFIED STRING IS COMPRESSED REMOVING PAIRED QUOTES.
;
;		R1 = LENGTH OF COMPRESSED STRING.
;		R2 = ADDRESS OF COMPRESSED STRING.
;-
 
	.PSECT	MCR$ZCODE,BYTE,RD,NOWRT
MCR$COMPSTRING::			;COMPRESS QUOTED STRING
	MOVL	R2,R3			;COPY BASE ADDRESS OF STRING
	MOVL	R3,R4			;COPY BASE ADDRESS OF STRING
	CLRL	R0			;CLEAR QUOTATION FLAG
10$:	CMPB	#^A/"/,(R3)		;NEXT CHARACTER A QUOTE?
	BNEQ	20$			;IF NEQ NO
	INCL	R3			;ADJUST PAST QUOTE
	BBCS	#0,R0,30$		;IF CLR, JUST ENTERING QUOTE
	DECL	R1			;DECREMENT NUMBER OF CHARACTERS REMAINING
	BLEQ	40$			;IF LEQ NONE
	CMPB	#^A/"/,(R3)		;NEXT CHARACTER ALSO A QUOTE?
	BEQL	20$			;IF EQL YES
	BICL	#1,R0			;CLEAR QUOTE IN PROGRESS
20$:	MOVB	(R3)+,(R4)+		;COPY CHARACTER AND COMPRESS
30$:	SOBGTR	R1,10$			;ANY MORE CHARACTERS TO SCAN?
40$:	SUBL3	R2,R4,R1		;CALCULATE LENGTH OF COMPRESSED STRING
	RSB				;
	.PAGE
	.SBTTL	GET RESULT PARSE DESCRIPTOR VALUES
;+
; MCR$GETDVAL - GET RESULT PARSE DESCRIPTOR VALUES
;
; THIS ROUTINE IS CALLED TO OBTAIN THE VALUES FROM THE NEXT DESCRIPTOR IN
; THE RESULT PARSE TABLE.
;
; INPUTS:
;
;	R10 = RESULT PARSE DESCRIPTOR TABLE POINTER.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES PARSE DESCRIPTOR TABLE IS EMPTY.
;
;	R0 LOW BIT SET INDICATES NEXT PARSE DESCRIPTOR HAS BEEN OBTAINED
;		WITH:
;
;	R1 = VALUE FIELD OF DESCRIPTOR.
;	R2 = ADDRESS OF ITEM IN COMMAND BUFFER.
;	R3 = FLAGS FIELD OF DESCRIPTOR.
;	R4 = FIELD TERMINATOR CLASS NUMBER.
;	R5 = TYPE OF ENTRY.
;-
 
MCR$GETDVAL::				;GET RESULT PARSE DESCRIPTOR VALUES
	CLRL	R0			;ASSUME TABLE IS EMPTY
	CMPL	R10,WRK_L_RSLNXT(FP)	;ANY MORE ENTRIES IN PARSE TABLE?
	BGEQU	10$			;IF GEQU NO
	EXTZV	#PTR_V_VALUE,#PTR_S_VALUE,- ;EXTRACT VALUE
		PTR_L_DESCR(R10),R1	;
	EXTZV	#PTR_V_OFFSET,#PTR_S_OFFSET,- ;EXTRACT OFFSET TO ITEM
		PTR_L_DESCR(R10),R2	;
	MOVAB	WRK_AB_BUFFER(FP)[R2],R2 ;CALCULATE ACTUAL ITEM ADDRESS
	EXTZV	#PTR_V_FLAGS,#PTR_S_FLAGS,- ;EXTRACT FLAGS
		PTR_L_DESCR(R10),R3	;
	EXTZV	#PTR_V_TERM,#PTR_S_TERM,- ;EXTRACT TERMINATOR CLASS
		PTR_L_DESCR(R10),R4	;
	EXTZV	#PTR_V_TYPE,#PTR_S_TYPE,- ;EXTRACT ITEM TYPE
		PTR_L_DESCR(R10),R5	;
	TSTL	(R10)+			;POINT TO NEXT DESCRIPTOR IN TABLE
	INCL	R0			;INDICATE NEXT DESCRIPTOR OBTAINED
10$:	RSB				;
 
	.END
