1 Specify
This help category contains information on the syntax of various
entities used in DCL.
2 Date_Time
 When a command requires a qualifier  that specifies a date/time
 value, the value is either an absolute date/time, a delta time,
 or a combination of the two.
3 Absolute
 An absolute date/time has one of the following formats:

     dd-mmm-yyyy:hh:mm:ss.cc
     TODAY
     YESTERDAY
     TOMORROW

 If you  specify both the date and the time, the intervening colon
 is required.  You can omit any of the trailing fields in the date
 or time.  You can  omit any  of the  fields in  the middle of the
 format as long as you specify the punctuation marks.
3 Combination
 A combination time has the following format:

     "absolute-delta"
     "absolute+delta"

 The  absolute and  delta times allow the same  flexibility as  is
 described in the other help sections.
3 Delta
 A delta time has the following format:

     dddd-hh:mm:ss.cc

 You can omit any  of the  trailing fields  in the  time.  You can
 omit any of the fields in the middle of the format as long as you
 specify the punctuation marks.
2 Expression
 When DCL  evaluates an expression, it determines a value based on
 the operations specified in  the expression.  The value can be an
 integer or a character string.

 Some expression operators are  conventional mathematical symbols,
 for  example,   plus  sign  (+).   Others  specify   logical  and
 comparison  operations,  and  consist of  letters  surrounded  by
 periods, for example, .EQS.  Operators  are assigned a precedence
 which  determines  their order  of evaluation.   Parentheses  may
 always be used to override this order.
3 Arithmetic
     Operator   Precedence    Description

     .OR.       1             Logical OR
     .AND.      2             Logical AND
     .NOT.      3             Logical NOT
     .EQ.       4             Arithmetic equal
     .GE.       4             Arithmetic greater than or equal
     .GT.       4             Arithmetic greater than
     .LE.       4             Arithmetic less than or equal
     .LT.       4             Arithmetic less than
     .NE.       4             Arithmetic not equal
     +          5             Arithmetic plus
     -          5             Arithmetic minus
     *          6             Arithmetic times
     /          6             Arithmetic divide
3 String
     Operator   Precedence    Description

     .EQ.       4             String equal
     .GE.       4             String greater than or equal
     .GT.       4             String greater than
     .LE.       4             String less than or equal
     .LT.       4             String less than
     .NE.       4             String not equal
     +          5             String concatenation
     -          5             String reduction
2 File_Spec
 File  specifications  provide  the  system  with  the information
 necessary  to identify  a unique file or device.  A file spec has
 the following format:

     node::device:[directory]filename.type;version

 The punctuation marks are  required to separate the fields of the
 file spec.  These fields are:

     node          Network node name
     device        Device name
     directory     Directory name or sequence
     filename      File name
     type          File type
     version       File version number
2 Integer
 DCL treats all numeric values as integers.  If you do not specify
 an explicit  radix, numeric  values  are interpreted  as decimal.
 You may specify an explicit radix as follows:

     %D1000     decimal radix
     %O1357     octal radix
     %X12AF     hexadecimal radix

 No blanks are allowed between the radix symbol and the number.
2 Privilege
3 ACNT
 Create a process for which no accounting is performed.
3 ALLSPOOL
 Allocate spooled devices.
3 ALTPRI
 Increase the base execution priority for any process.
3 BUGCHK
 Make bug check error log entries.
3 BYPASS
 Access resources without regard to UIC protection.
3 CMEXEC
 Change mode to Executive.
3 CMKRNL
 Change mode to Kernel.
3 DETACH
 Create detached processes.
3 DIAGNOSE
 Issue diagnostic I/O requests.
3 EXQUOTA
 Exceed resource quotas.
3 GROUP
 Control execution of other processes in the same group.
3 GRPNAM
 Enter names in the group logical name table.
3 LOG_IO
 Issue logical I/O requests.
3 MOUNT
 Issue mount volume I/O requests.
3 NETMBX
 Create a network device.
3 OPER
 Perform system operator functions.
3 PFNMAP
 Create or delete sections mapped by page frame.
3 PHY_IO
 Issue physical I/O requests.
3 PRMCEB
 Create permanent common event flag clusters.
3 PRMGBL
 Create permanent global clusters.
3 PRMMBX
 Create permanent mailbox devices.
3 PSWAPM
 Change process swap mode.
3 SETPRV
 Grant a process any privilege.
3 SHMEM
 Create or delete data structures in shared memory.
3 SYSGBL
 Create system global sections.
3 SYSLCK
 Request locks on system resources.
3 SYSNAM
 Enter names in the system logical name table.
3 SYSPRV
 Access resources as if the process has a system UIC.
3 TMPMBX
 Create temporary mailbox devices.
3 VOLPRO
 Override protection on a volume.
3 WORLD
 Control the execute of any process on the system.
2 Protection
 Volume and file protection is specified as follows:

     (SYSTEM:rwed,OWNER:rwed,GROUP:rwed,WORLD:rwed)

 There  are  four  categories  of  protection,   one  for   system
 processes, one  for the  owner of the file, one for other members
 of the owner's  group, and one  for members of other groups.  For
 each category,  any combination of four different types of access
 may be specified:

     R - read access
     W - write access
     E - execute access (for execution of images)
     D - delete access

 If  you want  to deny all  access to a category, you must specify
 the category name without a colon, for example:

     /PROTECTION=(OWNER:RWE,GROUP,WORLD)
2 String
 A  character  string  value  is  represented  as  a  sequence  of
 characters enclosed in quotation marks (").   A quotation mark in
 a character string must be represented by two quotation marks.

 In certain contexts, the quotation marks are optional.
2 Symbol
 A symbol is an entity which has a name and a value.  The name can
 consist of the  letters, digits,  underscore  (_) and dollar sign
 ($).  It can be composed  of up  to 255 characters.  The value of
 the symbol can be a 32-bit integer or  a string  of  between zero
 and 255 characters.

 Symbols  are defined  in DCL with the assignment statement.  This
 is described under the HELP SYMBOL_ASSIGN.
2 UIC
 A UIC is a User Identification Code.  Specify a UIC in the format:

   [g,m]

 where:

      g    is  an  octal  number  in  the  range  0  through   377
           representing the group number

      m    is  an  octal  number  in  the  range  0  through   377
           representing the member number

 The square brackets are required in the UIC specification.
