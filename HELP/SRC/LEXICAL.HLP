1 Lexical
 The DCL  command interpreter  supports a  set of functions, called
 lexical  functions,  that  allow  you  to  perform  operations  on
 information in the DCL context.

 You can use lexical functions in any context in which you normally
 use symbols, expressions, or  literal values.   They are specified
 in the following format:

        F$name([argument,...])

 Note that  the parentheses  are required  even if no arguments are
 needed.

 Refer to the  VAX/VMS Guide  to Using  Command Procedures for more
 information.
2 F$CVSI
                F$CVSI(bit-position,width,string)

 Returns  a signed decimal  value extracted  from the given string.
 The value is  extracted  starting at  the given  bit-position  and 
 extending  for width bits.  For example, F$CVSI(8,8,"ABC") returns 
 66, the ASCII value of the character "B".
2 F$CVTIME
                F$CVTIME(time)

 Returns the  given time  in a format  useful for comparison.   The
 argument must  be a string in the standard  VMS  date/time format:

                 dd-mmm-yyyy hh:mm:ss.cc

 It is converted to the format:

                 yyyy-mm-dd hh:mm:ss.cc

 This allows comparison using the string comparison operators.
2 F$CVUI
                F$CVUI(bit-position,width,string)

 Returns  an  unsigned  value  extracted  from  the  given  string.
 The value is  extracted  starting at  the given  bit-position  and 
 extending  for width bits.  For example, F$CVUI(8,8,"ABC") returns 
 66, the ASCII value of the character "B".
2 F$DIRECTORY
                F$DIRECTORY()

 Returns the current default directory string, including brackets.
2 F$EXTRACT
                F$EXTRACT(offset,length,string)

 Returns a  substring of the given string.  The substring begins at
 the given offset and extends for the given length.

 The offset of the first character in a string is zero.
2 F$FAO
                F$FAO(control-string[,argument...])

 Returns a formatted string, constructed according to rules used by
 the  $FAO system  service.  The  given control-string controls the
 formatting  process, and  the optional arguments  are values to be
 substituted into the control-string.

 The  format  of the  control-string is  described  in the  VAX/VMS
 System Services  Reference Manual.   All strings are given via the
 !AS directive.
2 F$FILE_ATTRIBUTES
                F$FILE_ATTRIBUTES(file-spec,item)

 Returns  an  item of  attribute  information  about  a file.   The
 file-spec  specifies  the file  about  which  you  are  requesting
 information.   The item is  a string specifying which attribute of
 the file is to be returned.
3 ALQ
 Allocation quantity (integer)
3 BDT
 Backup date/time (string)
3 BKS
 Bucket size (integer)
3 BLS
 Block size (integer)
3 CBT
 Contiguous best try (boolean)
3 CDT
 Creation date/time (string)
3 CTG
 Contiguous (boolean)
3 DEQ
 Default extension quantity (integer)
3 DID
 Directory ID (string)
3 DVI
 Device name (string)
3 EDT
 Expiration date/time (string)
3 EOF
 Number of blocks in use (integer)
3 FID
 File ID (string)
3 FSZ
 Fixed control area size (integer)
3 GRP
 Owner group number (integer)
3 MBM
 Owner member number (integer)
3 MRN
 Maximum record number (integer)
3 MRS
 Maximum record size (integer)
3 NOA
 Number of areas (integer)
3 NOK
 Number of keys (integer)
3 ORG
 File organization (string)
3 PRO
 File protection (string)
3 PVN
 Prologue version number (integer)
3 RAT
 Record carriage control attribute (string)
3 RCK
 Read check enabled(boolean)
3 RDT
 Revision date/time (string)
3 RFM
 Record format (string)
3 RVN
 Revision number (integer)
3 UIC
 Owner UIC (string)
3 WCK
 Write check enabled (boolean)
2 F$GETDVI
                F$GETDVI(device-name,item)

 Returns an  item of  information about  a device.  The device-name
 specifies the  device about which you are requesting  information.
 The item is a string specifying which information about the device
 is to be returned.

 For additional  information see  the description of $GETDVI in the
 VAX/VMS System Services Manual.
3 ACPPID
 ACP Process ID (string)
3 ACPTYPE
 ACP type code (string)
3 ALL
 Allocated (boolean)
3 AVL
 Available for use (boolean)
3 CCL
 Carriage control device (boolean)
3 CLUSTER
 Volume cluster size (integer)
3 CONCEALED
 Logical device name given was/was not a concealed device (boolean)
3 CYLINDERS
 Number of cylinders on the volume (integer)
3 DEVBUFSIZ
 Buffer size (integer)
3 DEVCHAR
 Characteristics (integer)
3 DEVCLASS
 Class (integer)
3 DEVDEPEND
 Device-dependent information (integer)
3 DEVDEPEND2
 Additional device-dependent data (integer)
3 DEVNAM
 Name (string)
3 DEVTYPE
 Type (integer)
3 DIR
 Directory structured (boolean)
3 DMT
 Marked for dismount (boolean)
3 ELG
 Error logging enabled (boolean)
3 ERRCNT
 Error count (integer)
3 EXISTS
 Exists -(boolean)
3 FOD
 Files-oriented  (boolean)
3 FOR
 Mounted foreign (boolean)
3 FREEBLOCKS
 Number of free blocks on the volume (integer)
3 GEN
 Generic (boolean)
3 IDV
 Capable of providing input (boolean)
3 LOGVOLNAM
 Logical volume name (string)
3 MAXBLOCK
 Number of logical blocks on the volume (integer)
3 MAXFILES
 Maximum number of files on volume (integer)
3 MBX
 Mailbox (boolean)
3 MNT
 Mounted (boolean)
3 MOUNTCNT
 Mount count (integer)
3 NET
 Network (boolean)
3 NEXTDEVNAM
 Device name of next volume in volume set (string)
3 ODV
 Capable of providing output (boolean)
3 OPCNT
 Operation count (integer)
3 OPR
 Operator (boolean)
3 OWNUIC
 UIC of device owner (string)
3 PID
 Process ID of device owner (string)
3 RCK
 Read check enabled (boolean)
3 REC
 Record oriented (boolean)
3 RECSIZ
 Blocked record size (integer)
3 REFCNT
 Reference count, number of channels assigned to the device (integer)
3 RND
 Allows random access (boolean)
3 ROOTDEVNAM
 Device name of root volume in volume set (string)
3 RTM
 Real-time in nature (boolean)
3 SDI
 Single directory structured (boolean)
3 SECTORS
 Number of sectors per track (integer)
3 SERIALNUM
 Volume serial number (integer)
3 SHR
 Sharable (boolean)
3 SPL
 Being spooled (boolean)
3 SPLDEVNAM
 Spooled device name (string)
3 SQD
 Sequential block-oriented  (boolean)
3 SWL
 Software write locked (boolean)
3 TRACKS
 Number of tracks per cylinder (integer)
3 TRANSCNT
 Transaction count, number of files open on the volume (integer)
3 TRM
 Terminal (boolean)
3 UNIT
 Unit number (integer)
3 VOLCOUNT
 Count of volumes in volume set (integer)
3 VOLNAM
 Volume name (string)
3 VOLNUMBER
 Number of this volume in volume set (integer)
3 VPROT
 Volume protection mask (string)
3 WCK
 Write check enabled (boolean)
2 F$GETJPI
                F$GETJPI(pid,item)

 Returns  an item of  information about  a process.  The pid string
 specifies the  identification  number (PID)  of the process  about
 which  you  are  requesting  information.   The item  is  a string
 specifying which attribute of the process is to be returned.

 If you specify a null pid string, the information is obtained from
 the current process.

 For additional  information see  the description of $GETJPI in the
 VAX/VMS System Services Manual.
3 ACCOUNT
 Account (string)
3 APTCNT
 Active page table count (integer)
3 ASTACT
 Access modes with active ASTs (integer)
3 ASTCNT
 Remaining AST quota (integer)
3 ASTEN
 Access modes with ASTs enabled (integer)
3 ASTLM
 AST quota (integer)
3 BIOCNT
 Remaining buffered I/O operation quota (integer)
3 BIOLM
 Buffered I/O operation quota (integer)
3 BUFIO
 Count of buffered I/O operations (integer)
3 BYTCNT
 Remaining buffered I/O byte count quota (integer)
3 BYTLM
 Buffered I/O byte count quota (integer)
3 CPULIM
 CPU time limit, 10 millisecond units (integer)
3 CPUTIM
 Accumulated CPU time, 10 millisecond units (integer)
3 DFPFC
 Default page fault cluster size (integer)
3 DFWSCNT
 Default working set size (integer)
3 DIOCNT
 Remaining direct I/O operation quota (integer)
3 DIOLM
 Direct I/O operation quota (integer)
3 DIRIO
 Count of direct I/O operations (integer)
3 EFCS
 Local event flags 0 through 31 (integer)
3 EFCU
 Local event flags 32 through 63 (integer)
3 EFWM
 Event flag wait mask (integer)
3 ENQCNT
 Count of lock manager enqueues (integer)
3 ENQLM
 Lock manager enqueue limit (integer)
3 FILCNT
 Remaining open file quota (integer)
3 FILLM
 Open file quota (integer)
3 FREP0VA
 First free page at end of program region (integer)
3 FREP1VA
 First free page at end of control region (integer)
3 GPGCNT
 Global page count in working set (integer)
3 GRP
 Group field of UIC (integer)
3 IMAGNAME
 Current image file name (string)
3 LOGINTIM
 Process creation time (string)
3 MEM
 Member field of UIC (integer)
3 MODE
 Job mode (string)
3 OWNER
 Process ID of process owner (string)
3 PAGEFLTS
 Count of page faults (integer)
3 PGFLQUOTA
 Paging file quota (integer)
3 PID
 Process ID (string)
3 PPGCNT
 Process page count in working set (integer)
3 PRCCNT
 Count of subprocesses (integer)
3 PRCLM
 Subprocess quota (integer)
3 PRCNAM
 Process name (string)
3 PRI
 Current process priority (integer)
3 PRIB
 Process base priority (integer)
3 STATE
 Process state (string)
3 STS
 Process status flags (integer)
3 TERMINAL
 Interactive login terminal name (string)
3 TMBU
 Termination mailbox unit number (integer)
3 TQCNT
 Remaining timer queue entry quota (integer)
3 TQLM
 Timer queue entry quota (integer)
3 UIC
 Process UIC (integer)
3 USERNAME
 User name (string)
3 VIRTPEAK
 Peak virtual address space size (integer)
3 VOLUMES
 Count of mounted volumes (integer)
3 WSAUTH
 Authorized working set quota (integer)
3 WSPEAK
 Peak working set size (integer)
3 WSQUOTA
 Current working set quota (integer)
3 WSSIZE
 Current working set size (integer)
2 F$GETSYI
                F$GETSYI(item)

 Returns an  item of  information about  the system.  The item is a
 string specifying which information is to be returned.

 For additional  information see  the description of $GETSYI in the
 VAX/VMS System Services Manual.
3 CPU
 CPU type (integer)
3 SID
 System identification register (integer)
3 VERSION
 VMS version identification (string)
2 F$INTEGER
                F$INTEGER(string)

 Returns the decimal  equivalent of  the character  sequence in the
 given string.  If the string does not represent a valid number, an
 error occurs.
2 F$LENGTH
                F$LENGTH(string)

 Returns the length of the given string.
2 F$LOCATE
                F$LOCATE(substring,string)

 Returns the  offset of  the first occurence of the given substring
 within the given string.   If the  substring is  not present,  the
 length of the string is returned.

 The offset of the first character in a string is zero.
2 F$LOGICAL
                F$LOGICAL(logical-name)

 Returns the  equivalence  name string  of the given  logical-name.
 The function uses  the normal search  order to locate  the logical
 name:  process,  group,  and system tables.   If no name is found,
 the null string is returned.

 Only one level of translation is performed.
2 F$MESSAGE
                F$MESSAGE(code)

 Returns the message  text associated with the given numeric status
 code value.  If no text is found, the null string is returned.
2 F$MODE
                F$MODE()

 Returns the character string "BATCH", "INTERACTIVE", or "NETWORK",
 depending upon the current mode of operation.
2 F$PARSE
      F$PARSE(file-spec [,default-name [,related-name [,field]]])

 Returns either  the expanded  file specification for  the file you
 designate, or the particular specification field that you request.
 The file-spec is a string that specifies the file to be parsed.

 The default-name  and related-name can be used to provide defaults
 for the file specification.  Refer to the VAX-11 Record Management
 Services User's Guide for more information.

 The field argument causes the F$PARSE lexical function to return a
 specific portion of the expanded specification.  The field name is
 any one of the following strings:   DEVICE, DIRECTORY, NAME, NODE,
 TYPE, or VERSION.

 If an error is detected during the parse, F$PARSE returns the null
 string.
2 F$PID
                F$PID(context)

 Returns the  next  process  identification  (PID)  as a  character
 string.   It  also updates  the  context  symbol to  remember  the
 current position in the process list.

 If the context symbol is equated to the null string, F$PID returns
 the first PID in the process list.  Each subsequent F$PID function
 returns  the next  PID in  the list and  updates the symbol.  When
 there are no more processes, the null string is returned.
2 F$PRIVILEGE
                F$PRIVILEGE(priv-list)

 Returns the  string "TRUE"  or "FALSE" depending  on whether  your
 current  process   privileges  match  the  states  listed  in  the
 priv-list.  The priv-list is a string of privilege names separated
 by commas, each optionally preceeded by a "NO".

 In order for the  function to return "TRUE", you must have each of
 the  privileges listed without  a "NO", and none of the privileges
 listed with a "NO".  Otherwise the function returns "FALSE".
2 F$PROCESS
                F$PROCESS()

 Returns the current process name string.
2 F$SEARCH
                F$SEARCH(file-spec [,stream])

 Returns the  next  resultant name  string that  matches  the given
 file-spec.  The file-spec may contain  wild card fields, or fields
 may be  missing.  Each subsequent use of F$SEARCH returns the next
 resultant string.  When there are no more matching files, the null
 string is returned.

 If you need to perform  multiple searches in parallel, you can use
 the  stream  argument.   It can  be any  positive integer, each of
 which identifies a unique search sequence.  When omitted, F$SEARCH
 assumes an implicit single sequence.
2 F$SETPRV
                F$SETPRV(priv-list)

 Returns a string containing the list of the previous states of the
 privileges  given  by  priv-list.  The  function then  enables the
 privileges  listed without  a "NO",  and disables  the  privileges
 listed with a "NO".

 The  priv-list is a string of privilege names separated by commas,
 each optionally preceeded by a "NO".
2 F$STRING
                F$STRING(integer)

 Returns the value of the integer converted to a string.
2 F$TIME
                F$TIME()

 Returns the current date and time, in the standard VMS format:

           dd-mmm-yyyy hh:mm:ss.cc
2 F$USER
                F$USER()

 Returns the current UIC as a string, including the brackets.
2 F$VERIFY
                F$VERIFY([value])

 If no  argument is given, returns  the state  of command procedure
 verification:  1 if  SET VERIFY is in effect, 0 if SET NOVERIFY is
 in effect.

 In addition, if an  argument is given, verification is then set on
 or off according to the low-order bit of the given value.
