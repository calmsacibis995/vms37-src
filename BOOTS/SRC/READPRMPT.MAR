	.TITLE	READPRMPT - READ AND PROMPT ROUTINE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	
;
; ABSTRACT:
;	This module contains a routine (BOO$READPROMPT) which writes a
;	prompt line and reads a line of input from the console terminal
;	using QIOs.  Either writing the prompt line or reading the input line
;	may be bypassed.
;
; ENVIRONMENT:	User mode
;
; AUTHOR:  STEVE BECKHARDT,	CREATION DATE:  27-Sep-1979
;
; MODIFIED BY:
;
;	V03-001	JLV0134		Jake VanNoy		31-Dec-1981
;		Add routine RIO$OUTPUT_LINE.
;
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; MACROS:
;

;
; EQUATED SYMBOLS:
;

;
; OWN STORAGE:
;

	.PSECT	BOO$SYSGEN,WRT

IOSTBLK:				; I/O status block
	.BLKQ	1

CHANNEL:				; Channel
	.WORD	0

DEVNAM_DSC:				; Device name descriptor
	.ASCID	/_OPA0/

RIO$GW_OUTLEN::	.WORD	0
RIO$AB_OUTBUF::
	.LONG	256			; Descriptor
	.LONG	RIO$AB_BUFFER		; Buffer pointer
RIO$AB_BUFFER::
	.BLKB	256			; Buffer

	.PSECT	BOO$READPROMPT,RD,NOWRT,EXE

	.SBTTL	BOO$READPROMPT - Prompt and read input string
;++
; Functional Description:
;	BOO$READPROMPT outputs the specified ASCIZ prompt string on the
;	console terminal then checks the count of characters to be read.
;	If zero it exits, otherwise it reads the console terminal until
;	either a carriage return is encountered or the character count
;	is satisfied.  The specified buffer is filled with an ASCIC
;	string containing the characters read but not including the
;	terminating carriage return.
;
; Calling Sequence:
;	CALLG	ARGLIST,BOO$READPROMPT
;
; Input Parameters:
;	PROMPT(AP)  -  Address of ASCIZ prompt string
	PROMPT	=  4
;
;	SIZE(AP)    -  Maximum length of input string
	SIZE	=  8
;			Note: if size is zero, then nothing is read
;			      and only the prompt string is written.
;
;	BUF(AP)     -  Address of input buffer
	BUF	=  12
;
; Output Parameters:
;	R0 - Completion status code
;
;	Buffer located by BUF(AP) will be filled with the string
;	read as an ASCIC string.
;
;--

BOO$READPROMPT::
	.WORD	^M<R2>

	TSTW	W^CHANNEL		; Channel assigned yet?
	BNEQ	10$			; Yes
	$ASSIGN_S	CHAN = W^CHANNEL,-  ; No, assign it
			DEVNAM = DEVNAM_DSC,-
			ACMODE = #3	; Allow access from user mode
	BLBC	R0,90$			; Error

10$:	LOCC	#0,#^XFFFF,@PROMPT(AP)	; Locate end of prompt string
	SUBL	PROMPT(AP),R1		; R1 = size of prompt string
	MOVL	SIZE(AP),R0		; R0 = size of input buffer
	BEQL	20$			; No input buffer
	MOVL	BUF(AP),R2		; R2 = address of input buffer

	$QIOW_S	CHAN = W^CHANNEL,-	; Prompt and read
		FUNC = #IO$_READPROMPT,-
		IOSB = W^IOSTBLK,-
		P1 = 1(R2),-		; Address of input buffer
		P2 = R0,-		; Size of input buffer
		P5 = PROMPT(AP),-	; Address of prompt buffer
		P6 = R1			; Size of prompt buffer
	BLBC	R0,90$			; Error
	MOVZWL	W^IOSTBLK,R0		; Get I/O status block
	MOVB	W^IOSTBLK+2,(R2)	; Store size of input line
	BRB	90$

20$:	$QIOW_S	CHAN = W^CHANNEL,-	; Write prompt string, no input
		FUNC = #IO$_WRITEVBLK,-
		IOSB = W^IOSTBLK,-
		P1 = @PROMPT(AP),-	; Address of prompt buffer
		P2 = R1			; Size of prompt buffer
	BLBC	R0,90$			; Error
	MOVZWL	W^IOSTBLK,R0		; Get I/O status block

90$:	RET

.PAGE
.SBTTL RIO$OUTPUT_LINE - Output one line

;+
; This routine is in RMSCONIO for SYSGEN, is used here to map STASYSGEN
; calls to this routine into calls to BOO$READPROMPT.
;
; Inputs:
;	RIO$GW_OUTLEN - length of string to output
;	RIO$AB_BUFFER - buffer to output
;-

RIO$OUTPUT_LINE::

	MOVQ	R1,-(SP)		; Save R1,R2
	MOVZWL	RIO$GW_OUTLEN,R1	; Set length
	MOVAB	RIO$AB_BUFFER,R2	; Set address
	MOVAB	(R2)[R1],R1		; Set address of end of string
	MOVL	#^X00000A0D,(R1)	; Set CR, LF, zero byte at end
	
	CLRQ	-(SP)			; Null read buffer
	PUSHL	R2			; Address of string
	CALLS	#3,L^BOO$READPROMPT	; Output string

	MOVQ	(SP)+,R1		; Restore R1,R2
	RSB				; Return

	.END
