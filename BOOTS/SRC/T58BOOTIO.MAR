	.TITLE	T58BOOTIO - BOOT58 I/O Module
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;
; FACILITY:
;
;	BOOT58, the supplementary TU58 bootstrap program
;
; ABSTRACT:
;
;	This module calls the device-dependent ROM subroutine to read
;	a block's worth of data from the TU58 into physical memory.
;
; ENVIRONMENT:
;
;	Kernel mode, unmapped, IPL=31
;
; AUTHOR:
;
;	Carol Peters	23 February 1979
;
;--

	.SBTTL	Declarations

	.PSECT	$$$$00BOOT,LONG

	.DEFAULT DISPLACEMENT, WORD

	.SBTTL	FIL$READ_LBN - Reads 1 LBN of data from TU58 cartridge

;++
;
; Functional description:
;
;	This routine reads the data from a specified LBN on the TU58
;	cartridge into a page of physical memory. The device handling
;	is a subroutine in the device ROM.
;
; Inputs:
;
;	LBN(AP)	- logical block number to read
;	BUF(AP)	- address of memory to receive data
;
; Implicit inputs:
;
;	DRIVER_SUBROUT	- contains the address of the ROM subroutine
;
; Outputs:
;
;	R0	- status code
;
;--

;
; Symbolic names for input arguments.
;

	LBN	= 4
	BUF	= 8

	.ENTRY	FIL$READ_LBN,-
		^M<R3,R4,R5,R6,R7,R8,R9>

	CLRL	R3			; Device must be unit 0.
	MOVL	LBN(AP),R8		; Get starting LBN.
	PUSHL	BUF(AP)			; Get memory address for data.
	MOVL	DRIVER_SUBROUT,R0	; Get address of driver routine.
	JSB	(R0)			; Call driver.
	TSTL	(SP)+			; Pop memory address off stack.
	RET
 
	.END
