	.TITLE	BOOTS MACROS
	.IDENT	'V03-001'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	BOOTS
;
; ABSTRACT:
;	This module contains macros for the BOOTS facility
;
; ENVIRONMENT:	
;
; AUTHOR:  STEVE BECKHARDT,	CREATION DATE:  31-Oct-1979
;
; MODIFIED BY:
;
;	V03-001	KTA0091		Kerbey T. Altmann	31-Mar-1982
;		Remove CPUDISP - it is now in LIB.MLB. Add new
;		cell VMB$L_CI_HIPFN for the end of CI required memory.
;
;	V02-003	KTA0036		Kerbey T. Altmann	07-Oct-1981
;		Expand VMBARGDEF to include microcode descriptor,
;		SCSsystemid,and some flags. Add UNIT_INIT entry for
;		some drivers.
;
;	V02-002	PHL0012		Peter H. Lipman		04-Aug-1981
;		Add $VMBARGDEF macro to define the offsets in the
;	new parameter list passed by VMB to SYSBOOT.
;
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; MACROS:
;

; $BOOT_DRIVER MACRO - SETS UP A TABLE ENTRY FOR A BOOT DEVICE DRIVER.
; 	EACH TABLE ENTRY CONTAINS:
;
;	CPUTYPE		CPU TYPE.  DEFAULT = -1 (DON'T CARE)
;
;	DEVTYPE		BOOT DEVICE TYPE VALUE.  DEFAULT = -1 (DON'T CARE)
;
;	ACTION		ACTION ROUTINE ADDRESS (ACTUALLY OFFSET FROM
;			START OF TABLE ENTRY).  DEFAULT = 0 (NONE).
;
;	SIZE		SIZE OF ENTIRE DRIVER IN BYTES.  CANNOT BE DEFAULTED.
;
;	ADDR		ADDRESS OF DRIVER (ACTUALLY OFFSET FROM START
;			OF TABLE ENTRY).  CANNOT BE DEFAULTED.
;
;	ENTRY		ADDRESS OF DRIVER ENTRY POINT (ACTUALLY OFFSET
;			FROM ADDRESS OF DRIVER).  DEFAULT = 0 (ADDRESS
;			OF DRIVER AND ENTRY POINT ARE THE SAME).
;
;	DRIVRNAME	ADDRESS OF DRIVER NAME IN .ASCIC.  (ACTUALLY
;			OFFSET FROM ADDRESS OF DRIVER).  CANNOT BE 
;			DEFAULTED.
;
;	AUXDRNAME	AUXDRNAME ROUTINE ADDRESS (ACTUALLY OFFSET FROM
;			START OF TABLE ENTRY).  DEFAULT = 0 (NONE).
;
;	UNIT_INIT	UNIT_INIT ROUTINE ADDRESS (ACTUALLY OFFSET FROM
;			START OF TABLE ENTRY).  DEFAULT = 0 (NONE).
;

	.MACRO	$BOOT_DRIVER	CPUTYPE=-1,DEVTYPE=-1,ACTION,SIZE,ADDR,-
				ENTRY,DRIVRNAME,AUXDRNAME,UNIT_INIT
	.PSECT	BOOTDRIVR_4
$TABLE=.
	.WORD	CPUTYPE
	.IF	EQ	CPUTYPE
	.ERROR	0	; CPU TYPE CANNOT BE 0 ;
	.ENDC
	.WORD	DEVTYPE
	.IF	B	ACTION
	.LONG	0
	.IFF
	.LONG	ACTION-$TABLE
	.ENDC
	.LONG	SIZE
	.LONG	ADDR-$TABLE
	.IF	B	ENTRY
	.LONG	0
	.IFF
	.LONG	ENTRY-ADDR
	.ENDC
	.LONG	DRIVRNAME-ADDR
	.IF	B	AUXDRNAME
	.LONG	0
	.IFF
	.LONG	AUXDRNAME-ADDR
	.ENDC
	.IF	B	UNIT_INIT
	.LONG	0
	.IFF
	.LONG	UNIT_INIT-ADDR
	.ENDC
	.PSECT	BOOTDRIVR_2
	.ENDM	$BOOT_DRIVER


;
; Define the offsets into the argument list passed by VMB to SYSBOOT
;
	.MACRO	$VMBARGDEF,GBL

	$DEFINI	VMB,GBL,4

$DEF	VMB$Q_FILECACHE		.BLKQ	1	; FILEREAD Cache Descriptor
$DEF	VMB$L_LO_PFN		.BLKL	1	; Lowest PFN found by VMB
$DEF	VMB$L_HI_PFN		.BLKL	1	; Highest PFN exclusive
$DEF	VMB$Q_PFNMAP		.BLKQ	1	; PFN Bitmap descriptor
$DEF	VMB$Q_UCODE		.BLKQ	1	; Loaded ucode descriptor
$DEF	VMB$B_SYSTEMID		.BLKB	6	; 48 bit SCS systemid
				.BLKW	1	; Spare
$DEF	VMB$L_FLAGS		.BLKL	1	; Word of flags
$DEF	VMB$L_CI_HIPFN		.BLKL	1	; Highest PFN used by CI code
$DEF	VMB$C_ARGBYTCNT				; Size of argument list in bytes
$EQU	VMB$V_LOAD_SCS		0		; Flag to SYSBOOT to load SCS

	$DEFEND	VMB,GBL,ARGDEF

	.ENDM	$VMBARGDEF

	.END
