	.TITLE	MPWIND - MAP BLOCKS THROUGH FILE WINDOW
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  F11ACP STRUCTURE LEVEL 1
;
; ABSTRACT:
;
;	THIS ROUTINE MAPS THE GIVEN VIRTUAL BLOCK(S) INTO THE
;	CORRESPONDING LOGICAL BLOCKS.
;
; ENVIRONMENT:
;
;	STARLET OPERATING SYSTEN, INCLUDING PRIVILEGED SYSTEM SERVICES
;	AND INTERNAL EXEC ROUTINES. THIS ROUTINE MUST BE EXECUTED IN
;	KERNEL MODE.
;
;--
;
; AUTHOR:  ANDREW C. GOLDSTEIN, CREATION DATE:  3-MAR-1977  11:15
;
; MODIFIED BY:
;
;**

;
; INCLUDE FILES:
;
;	.INCLUDE	FCPDEF.MAR

;
; EQUATED SYMBOLS:
;
; AP OFFSETS
;
VBN	= 4				; DESIRED VBN
WINDOW	= 8				; WINDOW ADDRESS
COUNT	= 12				; BLOCK COUNT TO MAP
UNMAPPED= 16				; ADDRESS OF LONGWORD TO STORE
					; COUNT OF UNMAPPED BLOCKS


	$WCBDEF				; DEFINE WINDOW STRUCTURE

;++
;
; FUNCTIONAL DESCRIPTION:
;
;	THIS ROUTINE MAPS THE GIVEN VIRTUAL BLOCK(S) INTO THE
;	CORRESPONDING LOGICAL BLOCKS.
;
; CALLING SEQUENCE:
;	CALL	MAP_WINDOW (ARG1, ARG2, ARG3, ARG4)
;
; INPUT PARAMETERS:
;	ARG1: DESIRED VBN
;	ARG2: ADDRESS OF WINDOW TO USE
;	ARG3: NUMBER OF BLOCKS TO MAP
;
; IMPLICIT INPUTS:
;	CURRENT_UCB CONTAINS UCB ADDRESS OF UNIT IN PROCESS
;
; OUTPUT PARAMETERS:
;	ARG4: ADDRESS OF LONGWORD TO RECEIVE UNMAPPED COUNT
;
; IMPLICIT OUTPUTS:
;	NONE
;
; ROUTINE VALUE:
;	LBN IF ANY BLOCKS MAPPED
;	-1 IF NONE MAPPED
;
; SIDE EFFECTS:
;	NONE
;
;--

	.PSECT	$CODE$,NOWRT,LONG

MAP_WINDOW::
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS
	MOVL	WINDOW(AP),R2		; GET WINDOW ADDRESS
	MOVL	W^CURRENT_UCB,R5	; GET UCB ADDRESS FOR MAPPER

10$:	MOVL	VBN(AP),R0		; GET VBN
	ASHL	#9,COUNT(AP),R1		; GET EXPLICIT COUNT
20$:	JSB	@#IOC$MAPVBLK		; CALL SYSTEM MAPPING ROUTINE
	BLBC	R0,40$			; BRANCH IF NO MAP
;
; SUCCESSFUL MAP - RETURN LBN AND COUNT OF UNMAPPED BLOCKS IF WANTED
;
	MOVL	R1,R0			; LBN TO ROUTINE VALUE
	ASHL	#-9,R2,@UNMAPPED(AP)	; STORE RESULT
30$:	RET				; AND RETURN
;
; WE GET HERE IF THE MAP FAILS COMPLETELY. RETURN -1 AS VALUE.
;
40$:	MOVL	COUNT(AP),@UNMAPPED(AP)	; RETURN ENTIRE COUNT AS UNMAPPED
	MNEGL	#1,R0			; VALUE = -1
	RET



	.END
