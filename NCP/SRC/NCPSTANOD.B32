%TITLE	'Node Parameter Parse States and Data'
MODULE NCPSTANOD(IDENT = 'V02-010', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP node parameters
!	This includes the set node and set executor commands.
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Darrell Duffy	, CREATION DATE: 10-September-79
!
! MODIFIED BY:
!
!	V010	TMH0010		Tim Halvorsen	09-Mar-1982
!		Change prompting, so that only "essential" and
!		"important" parameters are prompted for.
!		Change PROXY parameter to PROXY ACCESS.
!
!	V009	TMH0009		Tim Halvorsen	31-Dec-1981
!		Add DMF32 as a service device.
!
!	V008	TMH0008		Tim Halvorsen	18-Dec-1981
!		Add EXECUTOR DEFAULT PROXY and NODE PROXY parameters.
!
!	V007	TMH0007		Tim Halvorsen	16-Nov-1981
!		Add prompting for DUMP FILE parameter.
!
!	V006	TMH0006		Tim Halvorsen	23-Oct-1981
!		Fix parsing of NODE ACCESS parameter to send correct
!		NICE parameter code.
!
!	V005	TMH0005		Tim Halvorsen	15-Aug-1981
!		Add DMP, DMV and DPV service devices
!		Add PIPELINE QUOTA, DEFAULT ACCESS executor parameters.
!		Add ACCESS node parameter.
!
!	V004	TMH0004		Tim Halvorsen	13-Jul-1981
!		Add NODE SUBADDRESSES parameter.
!		Change MAXIMUM LINES to MAXIMUM CIRCUITS.
!		Change SERVICE LINE to SERVICE CIRCUIT.
!		Change LINE (loop line) to CIRCUIT.
!
!	V003	TMH0003		Tim Halvorsen	22-Jun-1981
!		Change BUILD_SDB reference to use full entity type field.
!
!	V02-002	LMK0001		Len Kawell	30-Dec-1980
!		Updated parameter value ranges.
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN			! Action routine externals

EXTERNAL ROUTINE

	ACT$EXECQ		! Is the component the executor node?
	;


%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter Blocks for NODE parameters
!

	BUILD_PCL
	(NOD,

	STA, NUMB,	PCNO_STA, ,	! State

	ID,  TKNQ,	PCNO_IDE, ,	! Network management parameters
	SLN, TKN,	PCNO_SLI, ,
	SPW, HXPS,	PCNO_SPA, ,
	SDV, NUMB,	PCNO_SDV, ,
	CPU, NUMB,	PCNO_CPU, ,
	LFL, TKN,	PCNO_LOA, ,
	SLF, TKN,	PCNO_SLO, ,
	TLF, TKN,	PCNO_TLO, ,
	STY, NUMB,	PCNO_STY, ,
	SID, TKNQ,	PCNO_SID, ,
	DFL, TKN,	PCNO_DUM, ,
	SDF, TKN,	PCNO_SDU, ,
	DAD, NUML,	PCNO_DAD, ,
	DCT, NUML,	PCNO_DCT, ,
	HOS, NADR,	PCNO_IHO, ,
	CTM, NUMW,	PCNO_CTI, ,

	NAM, TKN,	PCNO_NNA, ,	! Transport parameters
	LIN, TKN,	PCNO_NLI, ,
	ADR, NUMW,	PCNO_ADD, ,
	INT, NUMW,	PCNO_ITI, ,
	OTM, NUMW,	PCNO_OTI, ,

	MLK, NUMW,	PCNO_MLK, ,	! NSP parameters
	DFC, NUMB,	PCNO_DFA, ,
	DWT, NUMB,	PCNO_DWE, ,
	IAT, NUMW,	PCNO_IAT, ,
	RFC, NUMW,	PCNO_RFA, ,

	! EXECUTOR parameters

	TYP, NUMB,	PCNO_ETY, ,	! NSP parameters
	RTM, NUMW,	PCNO_RTI, ,
	MAD, NUMW,	PCNO_MAD, ,
	MLN, NUMW,	PCNO_MLN, ,
	MCO, NUMW,	PCNO_MCO, ,
	MHP, NUMB,	PCNO_MHO, ,
	MVS, NUMB,	PCNO_MVI, ,
	MBF, NUMW,	PCNO_MBU, ,
	BSZ, NUMW,	PCNO_BUS, ,
	SAD, SAD,	PCNO_SAD, ,		! (X.25 only)

	NUS, TKNQ,	PCNO_NUS, ,	! Session control
	NAC, TKNQ,	PCNO_NAC, ,
	NPW, TKNQ,	PCNO_NPW, ,
	PUS, TKNQ,	PCNO_PUS, ,
	PAC, TKNQ,	PCNO_PAC, ,
	PPW, TKNQ,	PCNO_PPW, ,
	ACC, NUMB,	PCNO_ACC, ,
	DAC, NUMB,	PCNO_DAC, ,
	PIQ, NUMW,	PCNO_PIQ, ,
	PRX, NUMB,	PCNO_PRX, ,
	DPX, NUMB,	PCNO_DPX, ,

	RPW, TKNQ,	PCNO_RPA, ,	! Transport
	TPW, TKNQ,	PCNO_TPA, ,

	, END, , ,

	)


	BUILD_PBK
	(NOD,				! Node parameters

	CTM, NUMW, , ,
	SLN, TKN, , ,
	SPW, HXPS, , ,
	LFL, TKN, , ,
	SLF, TKN, , ,
	TLF, TKN, , ,
	DFL, TKN, , ,
	SDF, TKN, , ,
	HOS, NADR, , ,
	NAM, TKN, , ,
	LIN, TKN, , ,
	ADR, NUMW, , ,
	RPW, TKNQ, , ,
	TPW, TKNQ, , ,

	SDVP, LITB, NMA$C_SOFD_DP, NOD_SDV,
	SDVU, LITB, NMA$C_SOFD_DU, NOD_SDV,
	SDVL, LITB, NMA$C_SOFD_DL, NOD_SDV,
	SDVQ, LITB, NMA$C_SOFD_DQ, NOD_SDV,
	SDVA, LITB, NMA$C_SOFD_DA, NOD_SDV,
	SDVUP, LITB, NMA$C_SOFD_DUP, NOD_SDV,
	SDVMC, LITB, NMA$C_SOFD_DMC, NOD_SDV,
	SDVTE, LITB, NMA$C_SOFD_DTE, NOD_SDV,
	SDVKL, LITB, NMA$C_SOFD_KL8, NOD_SDV,
	SDVMP, LITB, NMA$C_SOFD_DMP, NOD_SDV,
	SDVMV, LITB, NMA$C_SOFD_DMV, NOD_SDV,
	SDVPV, LITB, NMA$C_SOFD_DPV, NOD_SDV,
	SDVMF, LITB, NMA$C_SOFD_DMF, NOD_SDV,

	CPU8,	LITB, NMA$C_CPU_8, NOD_CPU,
	CPU11,	LITB, NMA$C_CPU_11, NOD_CPU,
	CPU10,	LITB, NMA$C_CPU_1020, NOD_CPU,
	VAX,	LITB, NMA$C_CPU_VAX, NOD_CPU,

	STSL, LITB, NMA$C_SOFT_SECL, NOD_STY,	
	STTL, LITB, NMA$C_SOFT_TERL, NOD_STY,
	STOS, LITB, NMA$C_SOFT_OSYS, NOD_STY,

	SID, TKNQ, , ,
	DAD, NUML, , ,
	DCT, NUML, , ,
	NAC, TKNQ, , ,
	NPW, TKNQ, , ,
	NUS, TKNQ, , ,
	PAC, TKNQ, , ,
	PPW, TKNQ, , ,
	PUS, TKNQ, , ,

	ACCNON, LITB, NMA$C_ACES_NONE, NOD_ACC,
	ACCINC, LITB, NMA$C_ACES_INCO, NOD_ACC,
	ACCOUT, LITB, NMA$C_ACES_OUTG, NOD_ACC,
	ACCBOT, LITB, NMA$C_ACES_BOTH, NOD_ACC,

	DACNON, LITB, NMA$C_ACES_NONE, NOD_DAC,
	DACINC, LITB, NMA$C_ACES_INCO, NOD_DAC,
	DACOUT, LITB, NMA$C_ACES_OUTG, NOD_DAC,
	DACBOT, LITB, NMA$C_ACES_BOTH, NOD_DAC,

	PRXNON, LITB, NMA$C_ACES_NONE, NOD_PRX,
	PRXINC, LITB, NMA$C_ACES_INCO, NOD_PRX,
	PRXOUT, LITB, NMA$C_ACES_OUTG, NOD_PRX,
	PRXBOT, LITB, NMA$C_ACES_BOTH, NOD_PRX,

	DPXNON, LITB, NMA$C_ACES_NONE, NOD_DPX,
	DPXINC, LITB, NMA$C_ACES_INCO, NOD_DPX,
	DPXOUT, LITB, NMA$C_ACES_OUTG, NOD_DPX,
	DPXBOT, LITB, NMA$C_ACES_BOTH, NOD_DPX,

	)


	BUILD_PBK

	(NOD,				! Executor parameters

	BSZ, NUMW, , ,
	DFC, NUMB, , ,
	DWT, NUMB, , ,
	ID,  TKNQ, , ,
	IAT, NUMW, , ,
	INT, NUMW, , ,
	MAD, NUMW, , ,
	MBF, NUMW, , ,
	MCO, NUMW, , ,
	MHP, NUMB, , ,
	MVS, NUMB, , ,
	MLN, NUMW, , ,
	MLK, NUMW, , ,
	OTM, NUMW, , ,
	RFC, NUMW, , ,
	RTM, NUMW, , ,
	SAD, SAD, , ,

	STAON,  LITB, NMA$C_STATE_ON,  NOD_STA,
	STAOFF, LITB, NMA$C_STATE_OFF, NOD_STA,
	STARST, LITB, NMA$C_STATE_RES, NOD_STA,
	STASHT, LITB, NMA$C_STATE_SHU, NOD_STA,

	TYPROT, LITB, NMA$C_NODTY_ROU, NOD_TYP,
	TYPNRT, LITB, NMA$C_NODTY_NON, NOD_TYP,
	TYPPH2, LITB, NMA$C_NODTY_PHA, NOD_TYP,

	PIQ, NUMW, , ,

	)

	BUILD_SDB

	(NOD, NMA$C_ENT_NOD, VRB_ENT, NOD)

%SBTTL	'Prompt strings'

!
!	Prompt strings for node parameters
!

!BIND

!	PROMPT_STRINGS
!	(NOD,

!	CTM, 'Counter timer     (1-65535 seconds): ',
!	CPU, 'Processor type   (PDP11,DECSYS,VAX): ',
!	SDV, 'Service device  (DL,DU,DUP,DMC,DMP): ',
!	STY, 'Software type       (SEC, TER, SYS): ',
!	SID, 'Software id         (16 characters): ',
!	DAD, 'Dump address       (0-FFFFFFFF hex): ',
!	DCT, 'Dump count                 (1-2^32): ',
!!	LIN, 'Connecting circuit      (dev-c-u.t): ',
!	HOS, 'Host node id   (node-name, address): ',
!	SLN, 'Service circuit     (16 characters): ',
!	SPW, 'Service password   (1-8 hex digits): ',
!	LFL, 'File to load             (filename): ',
!	SLF, 'Secondary loader         (filename): ',
!	TLF, 'Tertiary loader          (filename): ',
!	DFL, 'File to contain dump     (filename): ',
!	SDF, 'Secondary dumper         (filename): ',
!	RPW, 'Receive password   (1-8 characters): ',
!	TPW, 'Transmit password  (1-8 characters): ',
!	NAC, 'Nonpriv account   (1-39 characters): ',
!	NPW, 'Nonpriv password  (1-39 characters): ',
!	NUS, 'Nonpriv user id   (1-39 characters): ',
!	PAC, 'Priv account      (1-39 characters): ',
!	PPW, 'Priv password     (1-39 characters): ',
!	PUS, 'Priv user id      (1-39 characters): ',
!	ACC, %STRING(
!	     'Access       (INCOMING, OUTGOING,',
!	     '                        BOTH, NONE): '),
!	PRX, %STRING(
!	     'Proxy access (INCOMING, OUTGOING,',
!	     '                        BOTH, NONE): '),

!	)
!	;


!
!	Prompt strings for executor parameters
!

BIND
	PROMPT_STRINGS
	(NOD,

	ADR, 'Node address                (1-255): ',
	BSZ, 'Buffer size         (1-16384 bytes): ',
!	DFC, 'Delay factor               (16-255): ',
!	DWT, 'Delay weight                (0-255): ',
	ID,  'System id string    (32 characters): ',
!	IAT, 'Inactivity timer  (1-65535 seconds): ',
!	INT, 'Incoming timer    (1-65535 seconds): ',
	MAD, 'Maximum address             (1-255): ',
	MBF, 'Maximum buffers           (1-65535): ',
	MCO, 'Maximum cost               (1-1022): ',
	MHP, 'Maximum hops                 (1-30): ',
	MLN, 'Maximum circuits             (1-64): ',
!	MLK, 'Maximum links              (1-1023): ',
	MVS, 'Maximum visits              (1-255): ',
	NAM, 'Node name          (1-6 characters): ',
!	OTM, 'Outgoing timer    (1-65535 seconds): ',
!	RFC, 'Retransmit factor           (1-255): ',
!	RTM, 'Routing timer     (1-65535 seconds): ',
!	SAD, 'Subaddresses           (Range-list): ',
	STA, 'State   (ON, OFF, SHUT, RESTRICTED): ',
!	DAC, %STRING(
!	     'Default link access   (INCOMING, ',
!	     '              OUTGOING, BOTH, NONE): '),
!	DPX, %STRING(
!	     'Default proxy access  (INCOMING, ',
!	     '              OUTGOING, BOTH, NONE): '),
	PIQ, 'Pipeline quota      (0-65535 bytes): ',

	)
	;

%SBTTL	'State Table for Node Parameters'

$INIT_STATE (NCP$G_STTBL_NOD, NCP$G_KYTBL_NOD);

!
!	SET/DEFINE NODE Parameter States
!

$STATE	(ST_NOD,
	( (SE_ALL), ST_NOD_DOIT),	! All parameter
	(TPA$_EOS, , ACT$PMT_ON),	! Prompt if no keywords
	(TPA$_LAMBDA, ST_NOD_PRC, ACT$PMT_OFF)	! Process keywords
	);

$STATE	(,
	(TPA$_LAMBDA, ST_EXE_PMT, ACT$EXECQ, , , PDB$G_VRB_ENT),
	(TPA$_LAMBDA)
	);

!
!	Build prompt states for node parameters

	PROMPT_STATES
	(NOD,

	ADR, NAM

	)

$STATE	(,
	(TPA$_LAMBDA, ST_NOD_DOIT)
	);

$STATE	(ST_EXE_PMT,
	(TPA$_LAMBDA)
	);

!
!	Build prompt states for executor parameters
!

$STATE	(ST_EXE_PMT_ADR,
	(TPA$_LAMBDA, , ACT$PRMPT, , , PMT$G_NOD_ADR)
	);

$STATE	(,
	(TPA$_SYMBOL, ST_NOD_DOIT, ACT$PMTDONEQ),
	((ST_NOD_ADR)),
	(TPA$_EOS),
	(TPA$_LAMBDA, ST_EXE_PMT_ADR, ACT$SIGNAL, , , NCP$_INVVAL)
	);

	PROMPT_STATES
	(NOD,

	STA, ID,
	BSZ, MAD, MBF, MCO, MHP, MLN, MVS, PIQ

	)


$STATE	(ST_NOD_DOIT,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_NOD),
	);

%SBTTL	'Dispatch States'

!
!	Node Parameter Dispatch States
!

$STATE	(ST_NOD_PRC,

	DISPATCH_STATES
	(NOD,

	ACC, 'ACCESS',
	ADR, 'ADDRESS',
	BSZ, 'BUFFER',
	CPU, 'CPU',
	MCO, 'COST',
	CTM, 'COUNTER',
	DEF, 'DEFAULT',
	DLY, 'DELAY',
	DUM, 'DUMP',
	MHP, 'HOPS',
	HOS, 'HOST',
	ID,  'IDENTIFICATION',
	IAT, 'INACTIVITY',
	INT, 'INCOMING',
	LIN, 'CIRCUIT',
	LFL, 'LOAD',
	MLK, 'LINKS',
	MAX, 'MAXIMUM',
	NAM, 'NAME',
	NPR, 'NONPRIVILEGED',
	OTM, 'OUTGOING',
	PIQ, 'PIPELINE',
	PRV, 'PRIVILEGED',
	PRX, 'PROXY',
	RPW, 'RECEIVE',
	RFC, 'RETRANSMIT',
	RTM, 'ROUTING',
	SEC, 'SECONDARY',
	SVC, 'SERVICE',
	SOF, 'SOFTWARE',
	STA, 'STATE',
	SAD, 'SUBADDRESSES',
	TLF, 'TERTIARY',
	TPW, 'TRANSMIT',
	TYP, 'TYPE',
	MVS, 'VISITS'
	)

	,(TPA$_EOS, ST_NOD_DOIT)
	);


$STATE	(ST_NOD_PRC_SEC,		! SECONDARY keyword dispatch

	DISPATCH_STATES
	(NOD,

	SDF, 'DUMPER',
	SLF, 'LOADER',

	));

$STATE	(ST_NOD_PRC_SVC,		! SERVICE keyword dispatch

	DISPATCH_STATES
	(NOD,

	SDV, 'DEVICE',
	SLN, 'CIRCUIT',
	SPW, 'PASSWORD',

	));


$STATE	(ST_NOD_PRC_MAX,		! MAXIMUM keyword dispatch

	DISPATCH_STATES
	(NOD,

	MAD, 'ADDRESS',
	MBF, 'BUFFERS',
	MLN, 'CIRCUITS',
	MCO, 'COST',
	MHP, 'HOPS',
	MLK, 'LINKS',
	MVS, 'VISITS',

	));

$STATE	(ST_NOD_PRC_DEF,		! DEFAULT keyword dispatch

	DISPATCH_STATES
	(NOD,

	DAC, 'ACCESS',
	DPX, 'PROXY',

	));

$STATE	(ST_NOD_PRC_DLY,		! DELAY keyword dispatch

	DISPATCH_STATES
	(NOD,

	DFC, 'FACTOR',
	DWT, 'WEIGHT',

	));

$STATE	(ST_NOD_PRC_DUM,		! DUMP keyword dispatch

	DISPATCH_STATES
	(NOD,

	DAD, 'ADDRESS',
	DCT, 'COUNT',
	DFL, 'FILE',

	));

$STATE	(ST_NOD_PRC_SOF,		! SOFTWARE keyword dispatch

	DISPATCH_STATES
	(NOD,

	SID, 'IDENTIFICATION',
	STY, 'TYPE',

	));


!
!	Process states for non_privileged parameters
!

$STATE	(ST_NOD_PRC_NPR,
	('ACCOUNT',	ST_NOD_PRC_NAC),
	('PASSWORD',	ST_NOD_PRC_NPW),
	('USER',	ST_NOD_PRC_NUS),
	(TPA$_LAMBDA,	ST_NOD_PRC)
	);

$STATE	(ST_NOD_PRC_NAC,
	( (ST_NOD_NAC), ST_NOD_PRC_NPR)
	);

$STATE	(ST_NOD_PRC_NPW,
	( (ST_NOD_NPW), ST_NOD_PRC_NPR)
	);

$STATE	(ST_NOD_PRC_NUS,
	( (ST_NOD_NUS), ST_NOD_PRC_NPR)
	);

!
!	Process states for privileged parameters
!

$STATE	(ST_NOD_PRC_PRV,
	('ACCOUNT',	ST_NOD_PRC_PAC),
	('PASSWORD',	ST_NOD_PRC_PPW),
	('USER',	ST_NOD_PRC_PUS),
	(TPA$_LAMBDA,	ST_NOD_PRC)
	);

$STATE	(ST_NOD_PRC_PAC,
	( (ST_NOD_PAC), ST_NOD_PRC_PRV)
	);

$STATE	(ST_NOD_PRC_PPW,
	( (ST_NOD_PPW), ST_NOD_PRC_PRV)
	);

$STATE	(ST_NOD_PRC_PUS,
	( (ST_NOD_PUS), ST_NOD_PRC_PRV)
	);

%SBTTL	'Process States'

!
!	Node parameter process states
!

	PROCESS_STATES
	(NOD,

	CPU, ,
	CTM, 'TIMER',
	DAD, ,
	DCT, ,
	DFL, ,
	HOS, ,
	LIN, ,
	LFL, 'FILE',
	RPW, 'PASSWORD',
	SDF, ,
	SLF, ,
	SDV, ,
	SID, ,
	SLN, ,
	SPW, ,
	STY, ,
	TLF, 'LOADER',
	TPW, 'PASSWORD',
	ACC, ,
	PRX, 'ACCESS',

	! Executor parameters

	ADR, ,
	BSZ, 'SIZE',
	DFC, ,
	DWT, ,
	ID, ,
	IAT, 'TIMER',
	INT, 'TIMER',
	MAD, ,
	MBF, ,
	MCO, ,
	MHP, ,
	MLN, ,
	MLK, ,
	MVS, ,
	NAM, ,
	OTM, 'TIMER',
	RFC, 'FACTOR',
	RTM, 'TIMER',
	SAD, ,
	STA, ,
	TYP, ,
	DAC, ,
	DPX, ,
	PIQ, 'QUOTA',

	)

%SBTTL	'Define Subexpressions'

!
!	Node parameter subexpressions
!

	SUB_EXPRESSIONS

	(NOD,

	ADR, (SE_NODE_ADR),
	CTM, TPA$_DECIMAL,
	DAD, TPA$_HEX,
	DCT, TPA$_DECIMAL,
	DFL, (SE_FILE_ID),
	HOS, (SE_NODE_ID),
	LIN, (SE_CIRC_ID),
	LFL, (SE_FILE_ID),
	NAM, (SE_NODE_NAM),
	RPW, (SE_NSP_PSW),
	SDF, (SE_FILE_ID),
	SID, (SE_SOFT_ID),
	SLF, (SE_FILE_ID),
	SLN, (SE_CIRC_ID),
	SPW, (SE_HEX_PSW),
	TLF, (SE_FILE_ID),
	TPW, (SE_NSP_PSW),
	NAC, (SE_ACC_ACC),
	NPW, (SE_ACC_PSW),
	NUS, (SE_ACC_USR),
	PAC, (SE_ACC_ACC),
	PPW, (SE_ACC_PSW),
	PUS, (SE_ACC_USR),

	)


!
!	Executor parameter subexpressions
!

	SUB_EXPRESSIONS
	(NOD,

	BSZ, TPA$_DECIMAL,
	DFC, TPA$_DECIMAL,
	DWT, TPA$_DECIMAL,
	ID,  (SE_EXE_ID),
	IAT, TPA$_DECIMAL,
	INT, TPA$_DECIMAL,
	MAD, TPA$_DECIMAL,
	MBF, TPA$_DECIMAL,
	MCO, TPA$_DECIMAL,
	MHP, TPA$_DECIMAL,
	MLN, TPA$_DECIMAL,
	MLK, TPA$_DECIMAL,
	MVS, TPA$_DECIMAL,
	OTM, TPA$_DECIMAL,
	RFC, TPA$_DECIMAL,
	RTM, TPA$_DECIMAL,
	SAD, (SE_SUBADR_RANGE),
	PIQ, TPA$_DECIMAL,

	TYPNRT, TPA$_LAMBDA,
	TYPROT, TPA$_LAMBDA,
	TYPPH2,	TPA$_LAMBDA,

	)


!
!	Parse an ACCESS or DEFAULT ACCESS value
!

$STATE	(ST_NOD_DAC,			! Executor default access

	KEYWORD_STATE
	(NOD,

	DACNON,	'NONE',
	DACINC, 'INCOMING',
	DACOUT, 'OUTGOING',
	DACBOT, 'BOTH',
	));

$STATE	(ST_NOD_ACC,			! Node access

	KEYWORD_STATE
	(NOD,

	ACCNON,	'NONE',
	ACCINC, 'INCOMING',
	ACCOUT, 'OUTGOING',
	ACCBOT, 'BOTH',
	));


!
!	Parse PROXY or DEFAULT PROXY value.
!

$STATE	(ST_NOD_DPX,			! Executor default proxy access

	KEYWORD_STATE
	(NOD,

	DPXNON,	'NONE',
	DPXINC, 'INCOMING',
	DPXOUT, 'OUTGOING',
	DPXBOT, 'BOTH',
	));

$STATE	(ST_NOD_PRX,			! Node proxy access

	KEYWORD_STATE
	(NOD,

	PRXNON,	'NONE',
	PRXINC, 'INCOMING',
	PRXOUT, 'OUTGOING',
	PRXBOT, 'BOTH',
	));


!
!	Subexpression to capture NSP password
!

$STATE	(SE_NSP_PSW,
	( (SE_QUOT_STR), TPA$_EXIT, ACT$STR_LEN, , , LEN_NSP_PSW)
	);


!
!	Executor ID string
!

$STATE	(SE_EXE_ID,
	( (SE_QUOT_STR), TPA$_EXIT, ACT$STR_LEN, , , LEN_ID_STR)
	);

!
!	Special process states
!

$STATE	(ST_NOD_STA,		! State of the local node

	KEYWORD_STATE
	(NOD,

	STAOFF, 'OFF',
	STAON,  'ON',
	STARST, 'RESTRICTED',
	STASHT, 'SHUT',

	)
	);

$STATE	(ST_NOD_TYP,		! Type of node

	('NONROUTING',	ST_NOD_TYPNRT),
	('PHASE',	ST_NOD_TYPPHA),
	('ROUTING',	ST_NOD_TYPROT)
	);

$STATE	(ST_NOD_TYPPHA,
	('II', ST_NOD_TYPPH2)
	);


%SBTTL	'Define Subexpressions from Library'

!
!	Invoke Macros to Define Subexpressions
!

	SEM_ALL			! All parameter
	SEM_NODE_ID		! Node id, address and name
	SEM_LOAD (NOD)		! Special load parameter decoding
	SEM_ACCESS		! Access control strings
	SEM_FILE_ID		! File ID
	SEM_HEX_PSW		! Hex Password
	SEM_CIRC_ID		! Circuit ID
	SEM_LINE_ID		! Line ID
	SEM_QUOT_STR		! Quoted string
	SEM_SUBADR_RANGE	! Subaddress range

%SBTTL	'Object Listing of Parse Table'
END
ELUDOM
