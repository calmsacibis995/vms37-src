%TITLE	'Load Parse States and Data'
MODULE NCPSTALOA (IDENT = 'V03-000', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP load commands
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Darrell Duffy	, CREATION DATE: 25-September-79
!
! MODIFIED BY:
!
!	V004	TMH0004		Tim Halvorsen	31-Dec-1981
!		Add DMF32 as a service device.
!
!	V003	TMH0003		Tim Halvorsen	15-Aug-1981
!		Add DMP, DMV and DPV service devices.
!
!	V002	TMH0002		Tim Halvorsen	14-Jul-1981
!		Add reference to SEM_LINE_ID macro, in order for
!		SE_CIRC_ID to work.
!
!	V001	TMH0001		Tim Halvorsen	22-Jun-1981
!		Change BUILD_SDB reference to use full entity type field.
!		Change to load via circuit, not line.
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN				! External symbols for action routines

%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter Blocks
!

	BUILD_PCL

	(LOA,

	SLI, TKN,	PCNO_SLI, ,
	SPW, HXPS,	PCNO_SPA, ,
	SDV, NUMB,	PCNO_SDV, ,
	CPU, NUMB,	PCNO_CPU, ,
	LFL, TKN,	PCNO_LOA, ,
	SLF, TKN,	PCNO_SLO, ,
	TLF, TKN,	PCNO_TLO, ,
	STY, NUMB,	PCNO_STY, ,
	SID, TKNQ,	PCNO_SID, ,
	HOS, NADR,	PCNO_IHO, ,
	NAM, TKN,	PCNO_NNA, ,
	ADR, NUMW,	PCNO_ADD, ,

	 ,END, , ,

	)

	BUILD_PCL

	(LOV,

	SPW, HXPS,	PCNO_SPA, LOA_SPW, 
	SDV, NUMB,	PCNO_SDV, LOA_SDV, 
	CPU, NUMB,	PCNO_CPU, LOA_CPU, 
	LFL, TKN,	PCNO_LOA, LOA_LFL, 
	SLF, TKN,	PCNO_SLO, LOA_SLF, 
	TLF, TKN,	PCNO_TLO, LOA_TLF, 
	STY, NUMB,	PCNO_STY, LOA_STY, 
	SID, TKNQ,	PCNO_SID, LOA_SID, 
	HOS, NADR,	PCNO_IHO, LOA_HOS, 
	NAM, TKN,	PCNO_NNA, LOA_NAM, 
	ADR, NUMW,	PCNO_ADD, LOA_ADR, 

	 ,END, , ,

	)

	BUILD_PBK

	(LOA,

	NOD, NADR, , VRB_ENT,
	SLI, TKN, , ,
	SPW, HXPS, , ,
	LFL, TKN, , ,
	SLF, TKN, , ,
	TLF, TKN, , ,
	HOS, NADR, , ,
	NAM, TKN, , ,
	ADR, NUMW, , ,

	SDVP, LITB, NMA$C_SOFD_DP, LOA_SDV,
	SDVU, LITB, NMA$C_SOFD_DU, LOA_SDV,
	SDVL, LITB, NMA$C_SOFD_DL, LOA_SDV,
	SDVQ, LITB, NMA$C_SOFD_DQ, LOA_SDV,
	SDVA, LITB, NMA$C_SOFD_DA, LOA_SDV,
	SDVUP, LITB, NMA$C_SOFD_DUP, LOA_SDV,
	SDVMC, LITB, NMA$C_SOFD_DMC, LOA_SDV,
	SDVTE, LITB, NMA$C_SOFD_DTE, LOA_SDV,
	SDVKL, LITB, NMA$C_SOFD_KL8, LOA_SDV,
	SDVMP, LITB, NMA$C_SOFD_DMP, LOA_SDV,
	SDVMV, LITB, NMA$C_SOFD_DMV, LOA_SDV,
	SDVPV, LITB, NMA$C_SOFD_DPV, LOA_SDV,
	SDVMF, LITB, NMA$C_SOFD_DMF, LOA_SDV,

	CPU8,	LITB, NMA$C_CPU_8, LOA_CPU,
	CPU11,	LITB, NMA$C_CPU_11, LOA_CPU,
	CPU10,	LITB, NMA$C_CPU_1020, LOA_CPU,
	VAX,	LITB, NMA$C_CPU_VAX, LOA_CPU,

	STSL, LITB, NMA$C_SOFT_SECL, LOA_STY,	
	STTL, LITB, NMA$C_SOFT_TERL, LOA_STY,
	STOS, LITB, NMA$C_SOFT_OSYS, LOA_STY,

	SID, TKNQ, , ,

	)

	BUILD_SDB

	(LOA, NMA$C_ENT_NOD, VRB_ENT, LOA)

	BUILD_SDB

	(LOV, NMA$C_ENT_NOD, LOA_SLI, LOV)

%SBTTL	'Prompt strings'

!
!	Build prompt strings
!

BIND

	PROMPT_STRINGS
	(LOA,

	ENT, '  (NODE node-id, VIA circuit-name): ',
	VIA, 'Circuit to use      (circuit-name): ',
	NOD, 'Node to load  (node-name, address): ',

	)
	;

%SBTTL	'State Table Entry'

$INIT_STATE (NCP$G_STTBL_LOA, NCP$G_KYTBL_LOA);

!
!	Load Command
!

!
!	Dispatch to entity types and prompt if end of string
!

	COMMAND_PROMPT
	(LOA, ENT, NCP$_INVKEY,

	('NODE', ST_LOA_NOD),
	('VIA',  ST_LOA_VIA)

	)

!
!	Obtain Node ID
!

	COMMAND_PROMPT
	(LOA, NOD, NCP$_INVVAL,

	( (SE_NODE_ID), , ACT$SAVPRM, , , PBK$G_LOA_NOD)

	)

$STATE	(,
	( (ST_LOA_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_LOA)
	);


!
!	Load over specified circuit
!

	COMMAND_PROMPT
	(LOA, VIA, NCP$_INVVAL,

	( (SE_CIRC_ID), , ACT$SAVPRM, NMA$C_ENT_CIR,
					NCP$GL_OPTION, PBK$G_LOA_SLI)
	);

$STATE	(,
	( (ST_LOA_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_LOV)
	);

%SBTTL	'Load Parameters'

!
!	Load Parameters
!

$STATE	(ST_LOA_PRM,
	(TPA$_EOS, TPA$_EXIT, ACT$SAVPRM, , , PBK$G_VRB_ALL),
	(TPA$_LAMBDA)
	);


%SBTTL	'Dispatch States'

!
!	Dispatch states
!

$STATE	(ST_LOA_PRC,

	DISPATCH_STATES
	(LOA,

	ADR, 'ADDRESS',
	CPU, 'CPU',
	LFL, 'FROM',
	HOS, 'HOST',
	NAM, 'NAME',
	PSW, 'PASSWORD',
	SLF, 'SECONDARY',
	SVC, 'SERVICE',
	SOF, 'SOFTWARE',
	TLF, 'TERTIARY',
	SLI, 'VIA',

	)

	,(TPA$_EOS, TPA$_EXIT)
	);

%SBTTL	'Process States'

!
!	Process States
!

	PROCESS_STATES
	(LOA,

	ADR, ,
	CPU, ,
	LFL, ,
	HOS, ,
	NAM, ,
	PSW, ,
	SLF, 'LOADER',
	SDV, ,
	SID, ,
	SLI, ,
	SPW, ,
	STY, ,
	TLF, 'LOADER',

	)



!
!	Dispatch for service
!

$STATE	(ST_LOA_PRC_SVC,

	DISPATCH_STATES
	(LOA,

	SDV, 'DEVICE',
	SPW, 'PASSWORD',

	)
	);

!
!	Dispatch for software
!

$STATE	(ST_LOA_PRC_SOF,

	DISPATCH_STATES
	(LOA,

	SID, 'IDENTIFICATION',
	STY, 'TYPE',

	)
	);


%SBTTL	'Subexpressions'

!
!	Subexpressions
!

	SUB_EXPRESSIONS
	(LOA,

	ADR, (SE_NODE_ADR),
	LFL, (SE_FILE_ID),
	HOS, (SE_NODE_ID),
	NAM, (SE_NODE_NAM),
	SID, (SE_SOFT_ID),
	SLF, (SE_FILE_ID),
	SLI, (SE_CIRC_ID),
	SPW, (SE_HEX_PSW),
	TLF, (SE_FILE_ID),	

	)

$STATE	(ST_LOA_PSW,			! Another way to say service password
	(TPA$_LAMBDA, ST_LOA_SPW)
	);

%SBTTL	'Define Subexpressions from Library'

!
!	Define subexpressions from library
!

	SEM_LOAD (LOA)		! Special load parameter decoding
	SEM_FILE_ID		! File id strings
	SEM_HEX_PSW		! Hex password
	SEM_CIRC_ID		! Circuit name strings
	SEM_LINE_ID		! Line ID strings
	SEM_NODE_ID		! Node id strings
	SEM_QUOT_STR		! Quoted strings

%SBTTL	'Object Listing of Parse Table'

END				!End of module
ELUDOM
