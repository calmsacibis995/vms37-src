%TITLE	'Trigger Parse States and Data'
MODULE NCPSTATRI (IDENT = 'V03-000', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP trigger commands
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Darrell Duffy	, CREATION DATE: 25-September-79
!
! MODIFIED BY:
!
!	V002	TMH0002		Tim Halvorsen	14-Jul-1981
!		Add reference to SEM_LINE_ID macro, in order for
!		SE_CIRC_ID to work.
!
!	V001	TMH0001		Tim Halvorsen	22-Jun-1981
!		Change BUILD_SDB reference to use full entity type field.
!		Change to trigger via circuits, not lines.
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN				! External symbols for action routines

%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter Blocks
!

	BUILD_PCL

	(TRI,

	SLI, TKN,	PCNO_SLI, ,
	PSW, HXPS,	PCNO_SPA, ,

	, END, , ,

	)

	BUILD_PCL

	(TRV,

	PSW, HXPS,	PCNO_SPA, TRI_PSW,

	, END, , ,

	)

	BUILD_PBK

	(TRI,

	NOD, NADR, , VRB_ENT,
	PSW, HXPS, , ,
	SLI, TKN, , ,

	)

	BUILD_SDB

	(TRI, NMA$C_ENT_NOD, VRB_ENT, TRI)

	BUILD_SDB

	(TRV, NMA$C_ENT_CIR, TRI_SLI, TRV)

%SBTTL	'Prompt strings'

!
!	Build prompt strings
!

BIND

	PROMPT_STRINGS
	(TRI,

	ENT, '    (NODE node-id, VIA circuit-name): ',
	NOD, 'Node to trigger (node-name, address): ',
	VIA, 'Circuit to use        (circuit-name): ',

	)
	;

%SBTTL	'State Table Entry'

$INIT_STATE (NCP$G_STTBL_TRI, NCP$G_KYTBL_TRI);

!
!	Trigger Command
!

!
!	Dispatch to entity types and prompt if end of string
!

	COMMAND_PROMPT
	(TRI, ENT, NCP$_INVKEY,

	('NODE', ST_TRI_NOD),
	('VIA',  ST_TRI_VIA)

	)


!
!	Obtain the node id
!

	COMMAND_PROMPT
	(TRI, NOD, NCP$_INVVAL,

	( (SE_NODE_ID), ST_TRI_DOIT, ACT$SAVPRM, NMA$C_ENT_NOD,
					NCP$GL_OPTION, PBK$G_TRI_NOD)

	)

$STATE	(ST_TRI_DOIT,
	( (ST_TRI_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_TRI)
	);

!
!	Select node by circuit name
!

	COMMAND_PROMPT
	(TRI, VIA, NCP$_INVVAL,

	( (SE_CIRC_ID), ST_TRV_DOIT, ACT$SAVPRM, NMA$C_ENT_CIR,
					NCP$GL_OPTION, PBK$G_TRI_SLI)

	)


$STATE	(ST_TRV_DOIT,
	( (ST_TRI_PRM) )
	);

$STATE	(,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_TRV)
	);


!
!	Obtain the parameters
!

$STATE	(ST_TRI_PRM,
	(TPA$_EOS, , ACT$SAVPRM, , , PBK$G_VRB_ALL),
	(TPA$_LAMBDA)
	);

$STATE	(ST_TRI_PRC,

	DISPATCH_STATES
	(TRI,

	PSW, 'PASSWORD',
	SVC, 'SERVICE',
	SLI, 'VIA',

	)

	,(TPA$_EOS, TPA$_EXIT)
	);

	PROCESS_STATES
	(TRI,

	PSW, ,
	SLI, ,

	)


$STATE	(ST_TRI_PRC_SVC,
	('PASSWORD', ST_TRI_PRC_PSW),
	(TPA$_LAMBDA, ST_TRI_PRC_PSW)
	);

	SUB_EXPRESSIONS
	(TRI,

	PSW, (SE_HEX_PSW),
	SLI, (SE_CIRC_ID),

	)


%SBTTL	'Define Subexpressions from Library'

!
!	Define subexpressions from library
!

	SEM_HEX_PSW		! Hex password
	SEM_CIRC_ID		! Circuit name strings
	SEM_LINE_ID		! Line ID strings
	SEM_NODE_ID		! Node id strings

%SBTTL	'Object Listing of Parse Table'

END				!End of module
ELUDOM
