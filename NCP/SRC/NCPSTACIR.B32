%TITLE	'Circuit Parameter Parse States and Data'
MODULE NCPSTACIR (IDENT = 'V03-008', LIST(NOOBJECT)) =
BEGIN

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	States and data for the parsing of NCP circuit parameters
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Tim Halvorsen, June 1981
!
! MODIFIED BY:
!
!	V008	TMH0008		Tim Halvorsen	08-Mar-1982
!		Only prompt for "essential" and "important" parameters.
!
!	V007	TMH0007		Tim Halvorsen	20-Jan-1982
!		Add TRANSPORT TYPE parameter.
!		Disable prompting of X25 parameters.
!
!	V006	TMH0006		Tim Halvorsen	08-Jan-1982
!		Remove TMH0003, thus restoring RETRANSMIT TIMER
!		back to a line parameter, which is what NM V3.0
!		finally came up with.
!
!	V005	TMH0005		Tim Halvorsen	15-Aug-1981
!		Add CIRCUIT VERIFICATION parameter.
!
!	V004	TMH0004		Tim Halvorsen	11-Aug-1981
!		Remove fix to TYPE keywords in TMH0002, since
!		only the X25 value may be written using that
!		parameter - all the rest of the values are read-only.
!
!	V003	TMH0003		Tim Halvorsen	05-Aug-1981
!		Make RETRANSMIT TIMER a circuit parameter rather
!		than a line parameter.
!
!	V002	TMH0002		Tim Halvorsen	30-Jul-1981
!		Fix keywords accepted for TYPE parameter.
!		Fix parameter code used for TRIBUTARY.
!
!	V001	TMH0001		Tim Halvorsen	07-Jul-1981
!		Add MAXIMUM TRANSMITS
!--

%SBTTL	'Definitions'

!
! INCLUDE FILES:
!

	LIBRARY 'LIB$:NMALIBRY';
	LIBRARY 'LIB$:NCPLIBRY';
	LIBRARY 'SYS$LIBRARY:TPAMAC';

!
! EXTERNAL REFERENCES:
!

	ACT_DFN			! Action routine externals

%SBTTL	'Parameter blocks'

!
! BIND DATA:
!

!
!	Parameter Blocks
!

	BUILD_PCL

	(CIR,

	STA, NUMB,	PCCI_STA, ,
	SER, NUMB,	PCCI_SER, ,
	CTM, NUMW,	PCCI_LCT, ,
	COS, NUMB,	PCCI_COS, ,
	HET, NUMW,	PCCI_HET, ,
	LIT, NUMW,	PCCI_LIT, ,
	BLK, NUMB,	PCCI_BLK, ,
	MRC, NUMB,	PCCI_MRC, ,
	RCT, NUMW,	PCCI_RCT, ,
	NUM, TKN,	PCCI_NUM, ,
	POL, NUMB,	PCCI_POL, ,
!	OWN, ENT,	PCCI_OWN, ,
	LIN, TKN,	PCCI_LIN, ,
	USE, NUMB,	PCCI_USE, ,
	TYP, NUMB,	PCCI_TYP, ,
	DTE, TKN,	PCCI_DTE, ,
	CHN, NUMW,	PCCI_CHN, ,
	MBL, NUMW,	PCCI_MBL, ,
	MWI, NUMB,	PCCI_MWI, ,
	TRI, NUMB,	PCCI_TRI, ,
	BBT, NUMW,	PCCI_BBT, ,
	TRT, NUMW,	PCCI_TRT, ,
	MRB, NUMB,	PCCI_MRB, ,
	MTR, NUMB,	PCCI_MTR, ,
	ACB, NUMB,	PCCI_ACB, ,
	ACI, NUMB,	PCCI_ACI, ,
	IAB, NUMB,	PCCI_IAB, ,
	IAI, NUMB,	PCCI_IAI, ,
	IAT, NUMB,	PCCI_IAT, ,
	DYB, NUMB,	PCCI_DYB, ,
	DYI, NUMB,	PCCI_DYI, ,
	DYT, NUMB,	PCCI_DYT, ,
	DTH, NUMB,	PCCI_DTH, ,
	VER, NUMB,	PCCI_VER, ,
	XPT, NUMB,	PCCI_XPT, ,

	, END, , ,

	)

	BUILD_PBK

	(CIR,

	STAON,  LITB, NMA$C_STATE_ON, CIR_STA,
	STAOFF, LITB, NMA$C_STATE_OFF, CIR_STA,
	STASVC, LITB, NMA$C_STATE_SER, CIR_STA,
	SERENA, LITB, NMA$C_LINSV_ENA, CIR_SER,
	SERDIS, LITB, NMA$C_LINSV_DIS, CIR_SER,
	CTM, NUMW, , ,
	COS, NUMB, , ,
	HET, NUMW, , ,
	LIT, NUMW, , ,
	BLKENA, LITB, NMA$C_CIRBLK_ENA, CIR_BLK,
	BLKDIS, LITB, NMA$C_CIRBLK_DIS, CIR_BLK,
	MRC, NUMB, , ,
	RCT, NUMW, , ,
	NUM, TKN, , ,
	POLAUT, LITB, NMA$C_CIRPST_AUT, CIR_POL,
	POLACT, LITB, NMA$C_CIRPST_ACT, CIR_POL,
	POLINA, LITB, NMA$C_CIRPST_INA, CIR_POL,
	POLDIE, LITB, NMA$C_CIRPST_DIE, CIR_POL,
	POLDED, LITB, NMA$C_CIRPST_DED, CIR_POL,
!	OWN, ENT, , ,
	LIN, TKN, , ,
	USEPER, LITB, NMA$C_CIRUS_PER, CIR_USE,
	USEINC, LITB, NMA$C_CIRUS_INC, CIR_USE,
	USEOUT, LITB, NMA$C_CIRUS_OUT, CIR_USE,
	TYPX25, LITB, NMA$C_CIRTY_X25, CIR_TYP,
	DTE, TKN, , ,
	CHN, NUMW, , ,
	MBL, NUMW, , ,
	MWI, NUMB, , ,
	TRI, NUMB, , ,
	BBT, NUMW, , ,
	TRT, NUMW, , ,
	MRB, NUMB, , ,
	MRBUNL, LITB, 255, CIR_MRB,
	MTR, NUMB, , ,
	ACB, NUMB, , ,
	ACI, NUMB, , ,
	IAB, NUMB, , ,
	IAI, NUMB, , ,
	IAT, NUMB, , ,
	DYB, NUMB, , ,
	DYI, NUMB, , ,
	DYT, NUMB, , ,
	DTH, NUMB, , ,
	VERENA, LITB, NMA$C_CIRVE_ENA, CIR_VER,
	VERDIS, LITB, NMA$C_CIRVE_DIS, CIR_VER,
	XPTPH2, LITB, NMA$C_CIRXPT_PH2, CIR_XPT,

	)

	BUILD_SDB

	(CIR, NMA$C_ENT_CIR, VRB_ENT, CIR)

%SBTTL	'Prompt strings'

!
!	Build prompt strings
!

BIND
	PROMPT_STRINGS
	(CIR,

	STA, 'Circuit state        (ON, OFF, SERVICE): ',
!	SER, 'Service mode        (ENABLED, DISABLED): ',
!	CTM, 'Counter timer         (1-65535 seconds): ',
	COS, 'Cost of circuit                 (1-125): ',
!	HET, 'Hello timer           (1-65535 seconds): ',
!	LIT, 'Listen timer          (1-65535 seconds): ',
!!	BLK, 'Blocking            (ENABLED, DISABLED): ',
!!	MRC, 'Maximum recalls                 (0-255): ',
!!	RCT, 'Recall timer          (1-65535 seconds): ',
!!	NUM, 'Number                    (1-16 digits): ',
!	POL, %STRING('Polling state (AUTOMATIC, ACTIVE,', CRLF,
!	     '                 INACTIVE, DYING, DEAD): '),
!!	OWN, 'Owner                   (EXECUTOR NODE): ',
!!	LIN, 'Line ID               (1-16 characters): ',
!!	USE, 'Usage   (INCOMING, OUTGOING, PERMANENT): ',
!!	TYP, 'Type                              (X25): ',
!	VER, 'Verification        (ENABLED, DISABLED): ',
!	XPT, 'Transport type                (PHASE_2): ',
!!	DTE, 'X.25 DTE address          (1-16 digits): ',
!!	CHN, 'X.25 channel number            (0-4095): ',
!!	MBL, 'X.25 maximum block size       (1-65535): ',
!!	MWI, 'X.25 maximum window size (1-255 blocks): ',
	TRI, 'Tributary address               (0-255): ',
!	BBT, 'Babble timer     (1-65535 milliseconds): ',
!	TRT, 'Transmit timer   (0-65535 milliseconds): ',
!	MRB, 'Maximum buffers      (1-254, UNLIMITED): ',
!	MTR, 'Maximum transmits      (1-255 messages): ',
!	ACB, 'Active base priority            (0-255): ',
!	ACI, 'Active priority increment       (0-255): ',
!	IAB, 'Inactive base priority          (0-255): ',
!	IAI, 'Inactive priority increment     (0-255): ',
!	IAT, 'Inactive threshold              (0-255): ',
!	DYB, 'Dying base priority             (0-255): ',
!	DYI, 'Dying priority increment        (0-255): ',
!	DYT, 'Dying threshold                 (0-255): ',
!	DTH, 'Dead threshold                  (0-255): ',

	);

%SBTTL	'State table for circuit parameters'

$INIT_STATE(NCP$G_STTBL_CIR, NCP$G_KYTBL_CIR);

!
!	SET/DEFINE CIRCUIT parameters
!

$STATE	(ST_CIR,
	((SE_ALL), ST_CIR_DOIT),		! ALL parameter
	(TPA$_EOS, , ACT$PMT_ON),		! Prompt if no keywords
	(TPA$_LAMBDA, ST_CIR_PRC, ACT$PMT_OFF)	! Process keywords
	);

	PROMPT_STATES
	(CIR,

	STA, COS, TRI
!	BLK, CHN, DTE, LIN, MBL, MRC, MWI, NUM, OWN, RCT, USE, TYP,
	)

$STATE	(ST_CIR_DOIT,
	(TPA$_EOS, TPA$_EXIT, ACT$VRB_UTILITY, , , SDB$G_CIR)
	);

%SBTTL	'Dispatch on parameter keywords'

!
!	Dispatch on circuit parameter keywords
!

$STATE	(ST_CIR_PRC,

	DISPATCH_STATES
	(CIR,

	ACT, 'ACTIVE',
	BBT, 'BABBLE',
	BLK, 'BLOCKING',
	CHN, 'CHANNEL',
	COS, 'COST',
	CTM, 'COUNTER',
	DTH, 'DEAD',
	DTE, 'DTE',
	DYE, 'DYING',
	HET, 'HELLO',
	IAC, 'INACTIVE',
	LIN, 'LINE',
	LIT, 'LISTEN',
	MAX, 'MAXIMUM',
	NUM, 'NUMBER',
!	OWN, 'OWNER',
	POL, 'POLLING',
	RCT, 'RECALL',
	SER, 'SERVICE',
	STA, 'STATE',
	TRT, 'TRANSMIT',
	XPT, 'TRANSPORT',
	TRI, 'TRIBUTARY',
	TYP, 'TYPE',
	USE, 'USAGE',
	VER, 'VERIFICATION',

	),

	(TPA$_EOS, ST_CIR_DOIT)
	);


!
!	Dispatch on MAXIMUM keyword
!

$STATE	(ST_CIR_PRC_MAX,

	DISPATCH_STATES
	(CIR,

	MBL, 'BLOCK',
	MRB, 'BUFFERS',
	MRC, 'RECALLS',
	MTR, 'TRANSMITS',
	MWI, 'WINDOW',

	));

!
!	Dispatch on ACTIVE keyword
!

$STATE	(ST_CIR_PRC_ACT,

	DISPATCH_STATES
	(CIR,

	ACB, 'BASE',
	ACI, 'INCREMENT',
	
	));

!
!	Dispatch for INACTIVE keyword
!

$STATE	(ST_CIR_PRC_IAC,

	DISPATCH_STATES
	(CIR,

	IAB, 'BASE',
	IAI, 'INCREMENT',
	IAT, 'THRESHOLD',

	));

!
!	Dispatch for DYING keyword
!

$STATE	(ST_CIR_PRC_DYE,

	DISPATCH_STATES
	(CIR,

	DYB, 'BASE',
	DYI, 'INCREMENT',
	DYT, 'THRESHOLD',

	));


!
!	These states take care of noise words
!	and call the subexpressions to do the work
!

	PROCESS_STATES
	(CIR,

	STA, ,
	SER, ,
	CTM, 'TIMER',
	COS, ,
	HET, 'TIMER',
	LIT, 'TIMER',
	BLK, ,
	MRC, ,				! From MAX
	RCT, 'TIMER',
	NUM, ,
	POL, 'STATE',
!	OWN, ,
	LIN, ,
	USE, ,
	TYP, ,
	DTE, ,
	CHN, ,
	MBL, ,				! From MAX
	MWI, ,				! From MAX
	TRI, ,
	BBT, 'TIMER',
	TRT, 'TIMER',
	MRB, ,				! From MAX
	MTR, ,				! From MAX
	ACB, ,				! From ACT
	ACI, ,				! From ACT
	IAB, ,				! From IAC
	IAI, ,				! From IAC
	IAT, ,				! From IAC
	DYB, ,				! From DYE
	DYI, ,				! From DYE
	DYT, ,				! From DYE
	DTH, 'THRESHOLD',
	VER, ,
	XPT, 'TYPE',

	)


!
!	These subexpressions store away the parameter id's
!

	SUB_EXPRESSIONS
	(CIR,

	CTM, TPA$_DECIMAL,
	COS, TPA$_DECIMAL,
	HET, TPA$_DECIMAL,
	LIT, TPA$_DECIMAL,
	MRC, TPA$_DECIMAL,
	RCT, TPA$_DECIMAL,
	NUM, (SE_DTE_NUMBER),
!	OWN, (???????),
	LIN, (SE_LINE_ID),
	DTE, (SE_DTE_NUMBER),
	CHN, TPA$_DECIMAL,
	MBL, TPA$_DECIMAL,
	MWI, TPA$_DECIMAL,
	TRI, TPA$_DECIMAL,
	BBT, TPA$_DECIMAL,
	TRT, TPA$_DECIMAL,
	MTR, TPA$_DECIMAL,
	ACB, TPA$_DECIMAL,
	ACI, TPA$_DECIMAL,
	IAB, TPA$_DECIMAL,
	IAI, TPA$_DECIMAL,
	IAT, TPA$_DECIMAL,
	DYB, TPA$_DECIMAL,
	DYI, TPA$_DECIMAL,
	DYT, TPA$_DECIMAL,
	DTH, TPA$_DECIMAL,

	)


!
!	Circuit state
!

$STATE	(ST_CIR_STA,

	KEYWORD_STATE
	(CIR,
	STAOFF, 'OFF',
	STAON,  'ON',
	STASVC, 'SERVICE',
	));

!
!	Circuit service mode
!

$STATE	(ST_CIR_SER,

	KEYWORD_STATE
	(CIR,
	SERENA, 'ENABLED',
	SERDIS, 'DISABLED',
	));

!
!	Circuit blocking mode
!

$STATE	(ST_CIR_BLK,

	KEYWORD_STATE
	(CIR,
	BLKENA, 'ENABLED',
	BLKDIS, 'DISABLED',
	));

!
!	Circuit polling state
!

$STATE	(ST_CIR_POL,

	KEYWORD_STATE
	(CIR,
	POLAUT, 'AUTOMATIC',
	POLACT, 'ACTIVE',
	POLINA, 'INACTIVE',
	POLDIE, 'DYING',
	POLDED, 'DEAD',
	));

!
!	Circuit usage
!

$STATE	(ST_CIR_USE,

	KEYWORD_STATE
	(CIR,
	USEINC, 'INCOMING',
	USEOUT, 'OUTGOING',
	USEPER, 'PERMANENT',
	));

!
!	Circuit type
!

$STATE	(ST_CIR_TYP,

	KEYWORD_STATE
	(CIR,
	TYPX25, 'X25',
	));

!
!	Circuit verification mode
!

$STATE	(ST_CIR_VER,

	KEYWORD_STATE
	(CIR,
	VERENA, 'ENABLED',
	VERDIS, 'DISABLED',
	));

!
!	Circuit desired transport type
!

$STATE	(ST_CIR_XPT,

	KEYWORD_STATE
	(CIR,
	XPTPH2, 'PHASE_2',
	));

!
!	Maximum circuit receive buffers
!

$STATE	(ST_CIR_MRB,
	('UNLIMITED', TPA$_EXIT, ACT$SAVPRM,,, PBK$G_CIR_MRBUNL),
	(TPA$_DECIMAL, TPA$_EXIT, ACT$SAVPRM,,, PBK$G_CIR_MRB)
	);

%SBTTL	'Define shared subexpressions'

!
!	Define Subexpressions from Library
!

	SEM_ALL			! All parameter
	SEM_LINE_ID		! Device name string
	SEM_NODE_ID		! Circuit owner id
	SEM_DTE_NUMBER		! DTE call number

%SBTTL	'Object Listing of Parse Table'

END				!End of module
ELUDOM
