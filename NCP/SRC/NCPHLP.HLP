!	NCPHELP.HLP
!	Help file for DECnet-VAX Network Control Program
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1980,1981                                                 *
!*  BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.			    *
!* 									    *
!****************************************************************************
!

!++
! FACILITY:	Network Control Program (NCP)
!
! ABSTRACT:
!
!	This is the help file for NCP.  This file has been produced from 
!	chapter 7 of the DECnet - VAX System Manager's Guide by Jeff Low.
!
! ENVIRONMENT:	VAX/VMS Operating System
!
! AUTHOR:	Darrell Duffy, CREATION DATE:  12-April-1980
!
! MODIFIED BY:
!
!	V02-002	LMK0002		Len Kawell		14-Aug-1981
!		Add Network Management 2.2 commands and parameters.
!
!	V02-001	LMK0001		Len Kawell		5-Feb-1981
!		Add to privilege and event logging information and add
!		new examples.
!--
!

1 HELP

The Network Control Program (NCP) is a DECnet-VAX utility program that
accepts  terminal  commands to configure, control, monitor, and test a
DECnet-VAX network.

Use the HELP command to obtain information about the commands and
parameters of NCP.  There are four commands for obtaining help
displays: HELP, TOPIC, SUBTOPIC and WHAT.  These commands allow you to
conveniently browse through the help tree to obtain the information
you require.

                   HELP  topic topic topic...

The topics are the keywords listed in the help displays under more
help available.  The keywords may be abbreviated. The HELP command
establishes a current help topic list.

1 TOPIC

Use the TOPIC command to obtain a help display at the current level
in the help tree or to move up one level from the current level.

                     TOPIC   topic

If a topic is supplied, the last topic of the current help topic list
is replaced by the specified topic.  If no topic is supplied, the last
topic of the current list is removed.

1 SUBTOPIC

Use the SUBTOPIC to move down one of the branches of the help tree.

                   SUBTOPIC  topic

The supplied topic is appended to the end of the current help topic
list and the new list becomes the current one.

1 WHAT

Use the WHAT command to redisplay the last help frame again.  This is
useful in the case of some of the example frames which are longer than
one terminal screen.

                        WHAT
!

1 EXIT

To exit NCP, enter EXIT or CTRL/Z after the NCP> prompt.

1 Prompting

NCP prompts for required components and parameters if they are not
supplied when you issue the command. Each prompt is either a list of
admissible keywords for that position in the command syntax or the
name of a parameter and a description of the value required.

Prompting will not occur when NCP receives input from a command file.
Parameter keywords must be supplied in command files.

Each prompt consists of two parts: the component or parameter desired,
and its format. The format of prompts is as follows:

        Component (Format):

2 Format_of_prompts

The component part indicates the name of either the component or
parameter. The format part indicates the range of acceptable values.
The format part presents keywords in uppercase, value classes in
lowercase as descriptive strings, and numeric ranges as two numbers
separated by a hyphen. Commas indicate alternatives which are mutually
exclusive.

2 Exiting_the_Prompting_Sequence

You can exit a prompting sequence by responding with CTRL/Z for the
prompt. This returns you to the NCP> prompt where you can then issue
another NCP command. You can exit NCP directly from the prompting
sequence by responding with CTRL/C or CTRL/Y.

Responding to a parameter prompt or query with "_DONE" skips the
remainder of the prompts or queries and performs the requested
function with the parameters which have been entered up to that point.

2 Examples

The following examples illustrate three types of  prompting  that  NCP
provides.

Prompts to supply missing command component keywords:

        NCP>CLEAR <RET>
        (LINE, CIRCUIT, LOGGING, KNOWN, NODE, OBJECT):

No component is specified for the CLEAR command.  The prompt format is
a  list  of  admissible  component keywords separated by commas.  Note
that the plural keyword KNOWN is included in this list.

Prompts to supply parameter values:

        NCP>CLEAR LINE <RET>
        LINE ID (dev-c-u.t):

NCP prompts for the  line-id  for  this  component  since  it  is  not
provided with the command.

The following example shows variations of  the  prompting  scheme  for
parameter values:

        NCP>SET EXECUTOR <RET>
        Node address                 (1-255): 23
        Buffer size               (128-8192): 8192
        Counter timer      (0-65535 seconds): 60
        ...
        Node name             (6 characters): TRNTO
        Outgoing timer     (0-65535 seconds): 1024
        Retransmit factor          (0-65535): 512
        Routing timer      (0-65535 seconds): 60

Prompts to select parameter names:

        NCP>CLEAR LINE <RET>
        Line ID       (dev-c-u.t): DMC-1
        All line parameters (Y,N):

NCP prompts for the selected parameter names whose values  are  to  be
removed  from  the  database.   In  this case, no parameter name was
given;  consequently, NCP asks if all values  should  be  removed.   Y
indicates  that all values should be removed.  N causes NCP to provide
a different response.  For example,

        NCP>CLEAR NODE BOSTON <RET>
        All node parameters (Y,N): N
        Host node           (Y,N): Y
        Identification      (Y,N): N
        ...
        Service password    (Y,N): Y
        Tertiary loader     (Y,N): N

Since N is the response to the first prompt above, NCP prompts for all
of the parameter names.

!

1 Commands

The command  syntax  has  three  parts:   command  keyword,  component
keyword(s), and one or more parameters.  The command keywords are:

SET             Change parameters in the volatile database.
DEFINE          Change parameters in the permanent database.
CLEAR           Remove components or parameters from the
PURGE             volatile or permanent databases.
SHOW            Display information about components in the
LIST              volatile or permanent databases.
DISCONNECT      Disconnect logical links with processes.
LOOP            Test lines or connections to nodes.
LOAD            Downline load nodes.
TRIGGER         Initiate bootstrap sequence of a node.
TELL            Establish temporary executor node.

2 Syntax

The command  syntax  has  three  parts:   command  keyword,  component
keyword(s), and one or more parameters.  For example,

     command keyword    components      parameter list

        SHOW            ACTIVE CIRCUITS CHARACTERISTICS TO file-id
        LIST            KNOWN CIRCUITS  COUNTERS
                        CIRCUIT line-id STATUS
                                        SUMMARY

For each command, you must supply a keyword, a component, and  one 
or more  parameters  from  the  parameter list.  In general, the
order in which you specify  parameters  makes  no  difference.  
Braces  around keywords  and  parameters  indicate  that  you  must
choose one of the options.   Lowercase  letters  indicate 
user-supplied  component  and parameter values. 

2 Issuing_commands

You enter NCP commands as keywords and parameters separated by spaces
or tabs. Use the standard continuation line convention--a hyphen as
the last character in the line--to continue a long command to the next
line. If the first character of a line is an exclamation point (!),
the line is ignored by NCP as a comment line. Hyphens within and at
the end of a comment line are ignored. Lines beginning with an
exclamation point, however, are not ignored if they follow a command
line ending with a hyphen.

When entering an NCP command, you can abbreviate any command verb,
component keyword, or parameter name to its fewest unique letters.

1 PARAMETERS

Many parameters and components require user-supplied information when
you issue an NCP command. For the most part, their syntax follows a
standard set of rules. Exceptions to these rules are documented in the
description of the parameter for which they apply. For the list below,
all numeric values are in decimal and have a range of 0 to 65535 unless
otherwise specified. 

Strings containing spaces and/or tabs are enclosed in double quotes
("). 

2 account
a string of up to 39 printable characters. Can be a quoted
string.  The total length of user-id, password, and account
must be less than or equal to 39 characters. 

2 event_list
a list of event types for a given class. When specifying an
event list, you may only specify one class; however, you
can specify a range of types by using commas and hyphens.
For example,  4.3-5,7-10. 

See HELP EVENTS for a list of valid events.

2 circuit_id
a string in the form dev-c-u.t where the exact syntax is
not enforced by NCP, but passed intact to NML. For example:
DMP-0.1

2 file_id
a file name of up to nine alphanumeric characters
optionally followed by a period and a file type of up to
three alphanumeric characters; or a single logical name of
up to 64 characters.  The file name may optionally be
preceded by a device and directory specification. 

2 hex_password
a string of up to 8 hexadecimal digits.

2 id_string
a string of up to 32 characters.  Can be a quoted string.

2 line_id
a string in the form dev-c-u where the exact syntax is
not enforced by NCP, but passed intact to NML. For example:
DMC-0. 

2 milliseconds
a numeric value.

2 node_address
a numeric value in the range of 1 to 255.

2 node_id
either a node-name or a node-address.

2 node_name
a string of up to 6 alphanumeric characters and containing
at least one alphabetic character. 

2 node_spec
a node-name or node-address followed by optional access
control information as specified for VAX/VMS, in the form: 

node"user password account"::

The total length of user-id, password, and account must be
less than or equal to 39 characters. 

2 number
a numeric value.

2 object_name
a string of up to eight alphanumeric characters.

2 password
a string of up to 39 printable characters. Can be a quoted
string.  The total length of user-id, password, and account
must be less than or equal to 39 characters. 

2 privilege_list
a list of privilege names delimited by space characters. 

2 seconds
a numeric value.

2 sink_name
a string with the same syntax as a file-id.

2 software_id
a string of up to 16 characters. Can be a quoted string.

2 tributary_address
a numeric value in the range of 0 to 255.

2 user_id
a string of up to 39 printable characters.  Can be a quoted
string.  The total length of user-id, password, and account
must be less than or equal to 39 characters. 

!

1 CLEAR

Use the CLEAR command to remove selected parameters or components from
the volatile database on the executor node.  Use the PURGE command to
remove selected parameters or components from the permanent database on
the executor node.

!

2 CIRCUIT

Use the CLEAR CIRCUIT command to remove circuit parameters from the 
volatile database on the executor node.  Use the PURGE CIRCUIT 
command to remove circuit parameters from the permanent database 
on the executor node.


CLEAR   KNOWN CIRCUITS        (parameters...)
        CIRCUIT circuit-id

3 KNOWN CIRCUITS
indicates that the parameters for all known circuits are to be
removed from the database.

3 CIRCUIT circuit-id
identifies the circuit whose parameters are to be removed from
the database.

3 ALL
indicates that parameters for the specified circuit or all
known circuits are to be removed from the database. The
component is no longer recognized by the network.

3 ACTIVE BASE
Removes the ACTIVE base value from the volatile or permanent data
base. This parameter applies only to DDCMP CONTROL circuits. 

3 ACTIVE INCREMENT
Removes the ACTIVE increment value from the volatile or permanent
data dase. This parameter applies only to DDCMP CONTROL circuits.

3 BABBLE TIMER
Cancels the babble timer. This prevents any further transmissions
from a tributary or half-duplex station. This parameter applies
only to DDCMP CONTROL circuits. 

3 COUNTER TIMER
Cancels the logging timer. This prevents any further circuit
counter logging for the indicated circuit or circuits. 

3 DEAD THRESHOLD
Removes the dead threshold count from the data base. This
parameter applies only to DDCMP CONTROL circuits. 

3 DYING BASE
Removes the DYING base value from the volatile or permanent data
base. This parameter applies only to DDCMP CONTROL circuits. 

3 DYING INCREMENT
Removes the DYING increment value from the volatile or permanent
data dase. This parameter applies only to DDCMP CONTROL circuits.

3 DYING THRESHOLD
Removes the dying threshold count from the data base. This
parameter applies only to DDCMP CONTROL circuits. 

3 INACTIVE BASE
Removes the INACTIVE base value from the volatile or permanent
data base. This parameter applies only to DDCMP CONTROL circuits.

3 INACTIVE INCREMENT
Removes the INACTIVE increment value from the volatile or
permanent data dase. This parameter applies only to DDCMP CONTROL
circuits. 

3 INACTIVE THRESHOLD
Removes the inactive threshold count from the data base. This
parameter applies only to DDCMP CONTROL circuits. 

3 MAXIMUM BUFFERS
Removes the maximum buffers count from the data base. Instead of
a common buffer pool, buffers must be explicitly supplied by a
higher level. This parameter applies only to DDCMP CONTROL
circuits. 

3 MAXIMUM TRANSMITS
Removes the maximum transmit count from the data base. This
parameter applies only to DDCMP CONTROL circuits. 

3 TRANSMIT TIMER
Removes this parameter from the data base. This parameter applies
only to DDCMP CONTROL circuits. 

3 Examples

     NCP>CLEAR CIRCUIT DMC-0 ALL

         This command removes all parameter entries for circuit 
	 DMC-0 in the  volatile  database.   As  a result, the 
	 circuit no longer exists for the executor DECnet software.

!

2 EXECUTOR

Use  the  CLEAR  EXECUTOR  command  to  remove  selected  local   node
parameters  from  the  volatile  database on the executor node.  Use the
PURGE EXECUTOR command to remove selected local node parameters from
the permanent database on the executor node.

CLEAR   EXECUTOR        (parameters...)

3 ADDRESS
Removes the local node address from the data base. 

3 BUFFER SIZE
Removes the buffer size value for the local node from the data
base. 

3 COUNTER TIMER
Removes the logging timer from the permanent data base. This
prevents  any further circuit counter logging for the local node.

3 DELAY FACTOR
Removes the delay factor value for the local node from the data
base. 

3 DELAY WEIGHT
Removes the delay weight value for the local node from the data
base. 

3 IDENTIFICATION
Removes the identification string for the local node from the
data base. 

3 INACTIVITY TIMER
Removes the inactivity timer value for the local node from the
data base. 

3 INCOMING TIMER
Removes the incoming timer value for the local node from the data
base. 

3 MAXIMUM ADDRESS
Removes the maximum address value for the local node from the
data base. 

3 MAXIMUM BUFFERS
Removes the maximum buffers value for the local node from the
data base. 

3 MAXIMUM CIRCUITS
Removes the maximum circuits value for the local node from the
data base. 

3 MAXIMUM COST
Removes the maximum cost value for the local node from the data
base. 

3 MAXIMUM HOPS
Removes the maximum hops value for the local node from the data
base. 

3 MAXIMUM LINKS
Removes the maximum links value for the local node from the data
base. 

3 MAXIMUM VISITS
Removes the maximum visits value for the local node from the data
base. 

3 OUTGOING TIMER
Removes the outgoing timer value for the local node from the data
base. 

3 RETRANSMIT FACTOR
Removes the retransmit factor value for the local node from the
data base. 

3 ROUTING TIMER
Removes the routing timer value for the local node from the data
base. 

3 STATE
Removes the local node's state from the data base.

3 Examples

     NCP>CLEAR EXECUTOR NAME IDENTIFICATION

         This command removes the local node's name and identification
         string from the volatile database.

     NCP>CLEAR EXECUTOR DELAY FACTOR

         This command removes delay factor from the volitile database
	 which causes the software to use the default value.

!

3 NODE

Use the CLEAR EXECUTOR NODE command  to  reset  the  default  executor
designation  for  all  NCP commands.  The executor of commands becomes
the local node.  Note that it is invalid to use the TELL  prefix  with
this command.

CLEAR EXECUTOR NODE

4 Examples

        NCP>SET EXECUTOR NODE TRNTO
        ...

        NCP>CLEAR EXECUTOR NODE
!

2 LINE

Use the CLEAR LINE command to remove line parameters from the volatile
database  on  the executor node.  Use the PURGE LINE command to remove
line parameters from the permanent database on the executor node.

CLEAR   KNOWN LINES     (parameters...)
        LINE line-id

3 KNOWN LINES
indicates that the parameters for all known lines are to be
removed from the database.

3 LINE line-id
identifies the line whose parameters are to be removed from
the database.

3 ALL
indicates that parameters for the specified line or all
known lines are to be removed from the database. The
component is no longer recognized by the network.

3 COUNTER TIMER
Cancels the logging timer.  This prevents  any further line
counter logging for the indicated line(s). 

3 DEAD TIMER
Removes the Dead Timer parameter from the data base.  This
parameter applies only to DDCMP lines. 

3 DELAY TIMER
Removes the Delay Timer parameter from the data base.  This
parameter applies only to DDCMP lines. 

3 SCHEDULING TIMER
Removes the Scheduling Timer parameter from 
the data base.  This parameter applies only to DDCMP lines.

3 STREAM TIMER
Removes the Stream Timer parameter from the data base. This
parameter applies only to DDCMP lines. 

3 Examples

     NCP>CLEAR LINE DMC-0 ALL

         This command removes all parameter entries for line DMC-0  in
         the  volatile  database.   As  a result, the line no longer
         exists for the executor DECnet software.

!

2 LOGGING

Use the CLEAR LOGGING command to remove logging  parameters  from  the
volatile  database on the executor node.  Use the PURGE LOGGING command
to remove logging parameters from the permanent database on the executor
node.

CLEAR   KNOWN LOGGING           ALL
        LOGGING CONSOLE         EVENTS event-list
        LOGGING FILE            KNOWN EVENTS
        LOGGING MONITOR         LINE line-id
                                CIRCUIT circuit-id
                                NAME
                                NODE node-id
                                SINK    EXECUTOR
                                        NODE node-id
3 ALL
indicates that all logging parameters for the specified
component are to be removed from the database. The component
is no longer recognized by the network.

3 EVENTS event-list
identifies the class and types of events to be removed from
the database.

See HELP EVENTS for a list of valid events.

3 KNOWN
introduces a plural parameter or component.

4 EVENTS
indicates that the event filter is to be removed from the
specified logging component.

4 LOGGING
indicates that the parameters for all known logging are to
be removed from the database.

3 CIRCUIT circuit-id
identifies the circuit to which the events apply. Events will
not be logged for this source.

3 LINE line-id
identifies the line to which the events apply. Events will
not be logged for this source.

3 CONSOLE
indicates that the parameters for logging to the console are
to be removed from the database.

3 FILE
indicates that the parameters for logging to a file are to
be removed from the database.

3 MONITOR
indicates that the parameters for logging to a monitor
program are to be removed from the database.

3 NAME
indicates that the NAME parameter is to be removed from the
database. This is the name of the console, file or monitor
program.

3 NODE node-id
identifies the node to which the events apply. Events will
not be logged for this source.

3 SINK
identifies the node where the event logger runs to log the
events. There are two possibilities:

NODE node-id    identifies the node at which
                events are being logged.

EXECUTOR        identifies the executor node.

Only events being logged to this node are removed from the
database. If this parameter is omitted, the executor node is
assumed to be the sink node affected.

3 Examples

     NCP>CLEAR LOGGING FILE EVENTS 2.*

         This command clears logging for all class  2  events  to  the
         logging file.
!

2 NODE

Use the CLEAR NODE command to remove node parameters from the volatile
database  on  the  executor node.  Use the PURGE NODE command to remove
node parameters from the permanent database on the executor node.

CLEAR   KNOWN NODES     (parameters ...)
        NODE node-id

3 KNOWN NODES
indicates that the specified parameters for all known nodes
are to be removed from the database.

3 NODE node-id
identifies the node whose parameters are to be removed from
the database.

3 ALL
indicates that parameters for the specified node or all
known nodes are to be removed from the database. The
component is no longer recognized by the network.

3 CIRCUIT
indicates that the loop node parameter associated with the
circuit is to be removed from the database.

3 COUNTER TIMER
indicates that the counter timer value is to be removed from
the database.

3 CPU
indicates that the node's CPU identification is to be removed
from the database. 

3 DUMP ADDRESS
Removes the up-line dump address of the adjacent node from the
data base. 

3 DUMP COUNT
Removes the up-line dump count from the data base.

3 DUMP FILE
Removes the up-line dump file identification from the data base. 

3 HOST
indicates that the identification of the host node is to be
removed from the database.

3 LOAD FILE
indicates that the identification of the downline loading
file is to be removed from the database.

3 NAME
indicates that the node name parameter for the node address
is to be removed from the database.

3 NONPRIVILEGED
indicates that the specified nonprivileged access control
information is to be removed from the database.

ACCOUNT, PASSWORD, and USER can follow.

3 PRIVILEGED
indicates that the specified privileged access control
information is to be removed from the database.

ACCOUNT, PASSWORD, and USER can follow.

3 RECEIVE PASSWORD
indicates that the receive password expected from the remote
node during a Transport initialization sequence is to be
removed from the database.

3 SECONDARY LOADER
indicates that the identification of the secondary downline
loading file is to be removed from the database.

3 SERVICE
introduces a service parameter.

4 DEVICE
indicates that the service device type is to be removed from
the database.

4 CIRCUIT
indicates that the circuit parameter associated with the node
for downline loading purposes is to be removed from the
database.

4 PASSWORD
indicates that the password parameter required to trigger
the bootstrap mechanism is to be removed from the database.

3 SOFTWARE
introduces a software parameter.

4 IDENTIFICATION
indicates that the identification of the software is to be
removed from the database.

4 TYPE
indicates that the initial load software program type is to
be removed from the database.

3 TERTIARY LOADER
indicates that the identification of the tertiary downline
loading file is to be removed from the database.

3 TRANSMIT PASSWORD
indicates that the transmit password sent to the remote node
during a Transport initialization sequence is to be removed
from the database.

3 Examples

     NCP>CLEAR NODE TRNTO ALL

         This command removes all parameter entries for node TRNTO  in
         the  volatile  database.   As  a result, the node no longer
         exists for executor DECnet software.

     NCP>CLEAR NODE 14 NAME DENVER
     ...

     NCP>SET NODE 15 NAME DENVER

         The first command dissociates the name DENVER with  node  14.
         The second command associates the same name with node 15.
!

2 OBJECT

Use the CLEAR OBJECT command to  remove  object  parameters  from  the
volatile database on the executor node.  Use the PURGE OBJECT command
to remove object parameters from the permanent database.

CLEAR   KNOWN OBJECTS         (parameters...)
        OBJECT object-name

3 ALL
indicates that parameters for the specified object or all
known objects are to be removed from the database. The
component is no longer recognized by the network.

3 KNOWN OBJECTS
indicates that parameters for all known objects are to be
removed from the database.

3 OBJECT object-name
identifies the object whose parameters are to be removed
from the database.

3 ACCOUNT
Removes the account access control information from the data base.

3 FILE
Removes the name of the object's startup command file from the data base.

3 PASSWORD
Removes the password access control information from the data base.

3 PRIVILEGES
Removes the privileges required to access the object from the data base.

3 USER
Removes the user access control information from the data base.

3 Examples

     NCP>CLEAR OBJECT DTR ALL

         This command removes all parameter entries for the DTR object
         in the volatile database.  As a result, the object no longer
         exists for the executor DECnet software.
!

1 PURGE

Use the PURGE command to remove selected parameters or components
from the permanent database.

!

2 CIRCUIT

Use the PURGE CIRCUIT command to remove circuit parameters from the 
permanent database on the executor node.  See the description of the
CLEAR CIRCUIT command for a description of the parameters which may
be removed.


PURGE   KNOWN CIRCUITS        (parameters...)
        CIRCUIT circuit-id

3 KNOWN CIRCUITS
indicates that the parameters for all known circuits are to be
removed from the database.

3 CIRCUIT circuit-id
identifies the circuit whose parameters are to be removed from
the database.

3 Examples

     NCP>PURGE CIRCUIT DMC-0 ALL

         This command removes all parameter entries for circuit DMC-0
         in the permanent database.

!

2 EXECUTOR

Use the PURGE EXECUTOR command to remove selected local node parameters
from the permanent database on the executor node.  See the description
of CLEAR EXECUTOR for a list of the parameters which may be specified.

PURGE   EXECUTOR        (parameters...)

3 Examples

     NCP>PURGE EXECUTOR NAME IDENTIFICATION

         This command removes the local node's name and identification
         string from the permanent database.

     NCP>PURGE EXECUTOR DELAY WEIGHT

         This command removes the delay weight from the permanent
         database.

!

2 LINE

Use the PURGE LINE command to remove line parameters from the permanent
database on the executor node.  See the description of CLEAR LINE for
a list of the parameters which may be specified.

PURGE   KNOWN LINES     (parameters...)
        LINE line-id

3 KNOWN LINES
indicates that the parameters for all known lines are to be
removed from the database.

3 LINE line-id
identifies the line whose parameters are to be removed from
the database.

3 Examples

     NCP>PURGE LINE DMC-0 ALL

         This command removes all parameter entries for line DMC-0  in
         the  permanent database.

!

2 LOGGING

Use the PURGE LOGGING command to remove logging parameters from the
permanent database on the executor node.  See the description of the
CLEAR LOGGING command for a list of the parameters which may be specified.

PURGE   KNOWN LOGGING           ALL
        LOGGING CONSOLE         EVENTS event-list
        LOGGING FILE            LINE line-id
        LOGGING MONITOR         CIRCUIT circuit-id
                                NAME
                                NODE node-id
                                SINK    EXECUTOR
                                        NODE node-id

3 Examples

     NCP>PURGE LOGGING FILE EVENTS 2.*

         This command clears logging for all class  2  events  to  the
         logging file.
!

2 NODE

Use the PURGE NODE command to remove node parameters from the permanent
database on the executor node.  See the description of the CLEAR NODE
command for a list of the parameters which may be specified.

PURGE  KNOWN NODES    (parameters ...)
       NODE node-id

3 KNOWN NODES
indicates that the specified parameters for all known nodes
are to be removed from the database.

3 NODE node-id
identifies the node whose parameters are to be removed from
the database.

3 Examples

     NCP>PURGE  NODE TRNTO ALL

         This command removes all parameter entries for node TRNTO  in
         the  permanent database.

     NCP>PURGE NODE 14 NAME DENVER
     ...

     NCP>DEFINE NODE 15 NAME DENVER

         The first command dissociates the name DENVER with  node  14.
         The second command associates the same name with node 15.
!

2 OBJECT

Use the PURGE OBJECT command to remove object parameters from the permanent
database on the executor node.  See the CLEAR OBJECT command for a
list of the parameters which may be specified.


PURGE   KNOWN OBJECTS         (parameters...)
        OBJECT object-name

3 KNOWN OBJECTS
indicates that parameters for all known objects are to be
removed from the database.

3 OBJECT object-name
identifies the object whose parameters are to be removed
from the database.

3 Examples

     NCP>PURGE OBJECT DTR ALL

         This command removes all parameter entries for the DTR object
         in the permanent database.
!

1 DISCONNECT

Use the DISCONNECT command to disconnect logical links active  on  the
executor node.

DISCONNECT KNOWN LINKS     WITH NODE node-id
           LINK number

2 KNOWN LINKS
indicates that all links are to be disconnected.

2 LINK number
identifies the particular logical link to be disconnected.
Use a number in the range of 1 to 65535.

2 WITH NODE node-id
identifies the node with which all logical links are to be
disconnected. The node-id is either a node name or a node
address.  This is only valid when used with KNOWN LINKS.

2 Examples

NCP>DISCONNECT LINK 1840

This command disconnects link 1840.

NCP>DISCONNECT KNOWN LINKS WITH NODE TRNTO

This command disconnects all  active  links  to  remote  node
TRNTO.

!

1 LOAD

Use the LOAD command to downline load software to a target  node.

2 NODE

Use the LOAD NODE command to downline load software to a target  node.
This  command  loads  the  software either via the identified circuit (if
specified) or via the circuit obtained from the volatile database.   Any
parameter  left  unspecified in the command defaults to whatever entry
is specified in the volatile database on the executor node.

LOAD    NODE node-id    (parameters ...)

3 Examples

     NCP>LOAD NODE NYC HOST BOSTON VIA DMC-5

         This command initiates a downline load operation for node NYC
         over circuit DMC-5.  When loaded, node NYC will have node BOSTON
         as the default host specification.

     NCP>LOAD NODE BANGOR

         This command initiates a downline  load  operation  for  node
         BANGOR.   Any  required default information is retrieved from
         the volatile database on the executor node.

2 VIA

Use the LOAD VIA command to downline load software to  a  target  node
via  the  specified circuit.  The target node identification is obtained
from the volatile database on the executor node.   Refer  to  LOAD NODE.

LOAD    VIA circuit-id     (parameters ...)

3 Examples

     NCP>LOAD VIA DMC-5

         This command initiates a downline load  operation  over  circuit
         DMC-5.   Any  required  default information is retrieved from
         the volatile database on the executor node.

     NCP>LOAD VIA DMC-5 FROM RSX11S.SYS

         This command initiates a downline load  operation  over circuit
         DMC-5.   The  file to be loaded is RSX11S.SYS on SYS$SYSTEM.

2 ADDRESS node-address
identifies the address that the target node is to use (when
it comes up).

2 CPU
identifies the target node's CPU type. There are four
possibilities:

        DECSYSTEM1020
        PDP11
        PDP8
        VAX

2 FROM file-id
identifies the file specification of the load file
containing the system software to be downline loaded.

2 HOST node-id
identifies the default host that the target node is to use
(when it comes up).

2 NAME node-name
identifies the name that the target node is to use (when it
comes up).

2 NODE node-id
identifies the node name or node address of the target node
to be downline loaded.

2 SECONDARY LOADER file-id
identifies the file specification of a secondary loader
program which performs the downline load operation.

2 SERVICE
introduces a service parameter.

3 DEVICE
identifies the node's line controller for the service circuit
over which the operation is to take place. The following are
the possible device types:

                DP  DU  DL
                DQ  DA  DUP
                DZ  DV  DLV
                KDP KDZ PCL
                DMC DTE KL8
		DMP DMV DPV
                DMF

3 PASSWORD hex-password
identifies the password required to trigger the bootstrap
mechanism on the target node.

2 SOFTWARE
introduces a software parameter.

3 IDENTIFICATION software-id
identifies the ID of the software to be to be downline
loaded.

3 TYPE
identifies a particular file type to be loaded. There are
three possibilities:

                SECONDARY LOADER
                TERTIARY LOADER
                SYSTEM

2 TERTIARY LOADER file-id
identifies the file specification of a tertiary loader
program which performs the downline load function.

2 VIA circuit-id
identifies a circuit over which the loading sequence is to take
place.

!

1 LOOP

Use the LOOP CIRCUIT command to test a specified line in the
network. Use the LOOP NODE command to test a specified node
in the network. Each command causes test blocks of data to
be transmitted over the specified line or to the specified
node. The parameters are optional and can be entered in any
order.

LOOP    CIRCUIT circuit-id    COUNT number
        NODE    node-id       LENGTH number
                              WITH    
                                   MIXED
                                   ONES
                                   ZEROS

If a line is looped-back, a LOOP CIRCUIT command must specify
a LENGTH less than 50.

2 CIRCUIT circuit-id
identifies the circuit for loopback testing.

2 COUNT number
specifies the number of blocks to be sent during loopback
testing over the line or node. The count must be a decimal
integer in the range of 1 through 65535. If the parameter is
omitted, only one block is looped.

2 LENGTH number
specifies the length (in bytes) of the blocks to be sent
during loopback testing. The length must be a decimal
integer in the range of 1 through 65535. If the parameter is
omitted, a block length of 128 bytes is used.

If a line is looped-back, the LENGTH must be specified and
less than 50.

2 NODE node-id
identifies the node for loopback testing.

2 WITH
specifies the type of binary information to be sent during
testing. Three types of data can be sent:

                MIXED
                ONES
                ZEROS

If omitted, a combination of ones and zeros (MIXED) is sent.

2 Examples


     NCP>LOOP CIRCUIT DMC-0

         This command initiates a circuit-level loopback test over circuit
         DMC-0.

     NCP>SET NODE TEST CIRCUIT DMC-0
     NCP>LOOP NODE TEST

         The first command creates a loop node  name  (TEST)  for  the
         associated  circuit.   The second command initiates a node-level
         loopback test with the loop node name.
!

1 SET

Use the SET command to create or modify parameters or components in
the volatile database on the executor node.  Use the DEFINE command
to create or modify parameters or components in the permanent database
on the executor node.

2 CIRCUIT
Use the SET CIRCUIT command to create or modify circuit parameters
in the volatile database.  Use the DEFINE CIRCUIT command to
create or modify permanent circuit parameters.

SET     KNOWN CIRCUITS       (parameters ...)
        CIRCUIT circuit-id

3 KNOWN CIRCUITS
indicates that the specified parameters for all known circuits
are to be created or modified in the database.

3 CIRCUIT circuit-id
identifies the circuit for which specified parameters are to be
created or modified in the database.

3 ALL
Use the SET CIRCUIT ALL command to update the volatile copy of  the
database  on  the  executor  node  with  all the circuit parameters
stored for a particular circuit in the permanent database on the
executor  node.

3 ACTIVE BASE
Applies to DDCMP CONTROL circuits. This value sets the base
priority of an ACTIVE tributary after the tributary has been
polled.  You can set a separate base for each of the indicated
polling states.  base must be a decimal integer from 0 to 255. 
If not specifically set, the ACTIVE BASE default is 255. 

3 ACTIVE INCREMENT
Applies to DDCMP CONTROL circuits. This parameter sets the
increment value added to the ACTIVE tributary priority each time
the scheduling timer expires. Increment must be a decimal integer
from 0 to 255.  If not specifically set, the ACTIVE INCREMENT
default is 0. 

3 BABBLE TIMER
Applies to DDCMP CONTROL circuits.  It represents the number of
milliseconds that a selected tributary or remote half-duplex
station is allowed to transmit.  Milliseconds must be a decimal
integer in the range 1 to 65535.  The default is 6000 (6
seconds). 

3 COUNTER TIMER
Specifies the number of seconds that the Network Management
counter timer will run.  When the counter timer expires, a
circuit counter logging event occurs.  Seconds must be a decimal
integer in the range 0 to 65535. 

3 COST
Specifies the transport routing cost of the circuit. Cost must be
a decimal integer in the range 1 to 25.  Messages will travel
between nodes along the path with the smallest total cost. 

3 DEAD THRESHOLD
Applies to DDCMP CONTROL circuits.  It defines the number of
times to poll the active, inactive or dying tributary before
changing that tributary's polling state to dead because of
receive timeouts.  Count must be a decimal integer in the range 0
to 255. The default count is 8. 

3 DYING BASE
Applies to DDCMP CONTROL circuits. This value sets the base
priority of an Dying tributary after the tributary has been
polled.  You can set a separate base for each of the indicated
polling states.  Base must be a decimal integer from 0 to 255. 
If not specifically set, the DYING BASE default is 0. 

3 DYING INCREMENT
Applies to DDCMP CONTROL circuits. This parameter sets the
increment value added to the DYING tributary priority each time
the scheduling timer expires. Increment must be a decimal integer
from 0 to 255.  If not specifically set, the DYING INCREMENT
default is 16. 

3 DYING THRESHOLD
Applies to DDCMP CONTROL circuits.  It specifies the number of
times to poll the active or inactive tributary before changing
that tributary's polling state to dying because of receive
timeouts.  Count must be a decimal integer in the range 0 to 255.
The default count is 2. 

3  HELLO TIMER	
Specifies the frequency of Transport Hello messages sent to
adjacent nodes on the circuit.  Seconds must be a decimal integer
in the range 0 to 65535.  This value must be less than the value
for the LISTEN TIMER. 

3 INACTIVE BASE
Applies to DDCMP CONTROL circuits. This value sets the base
priority of an INACTIVE tributary after the tributary has been
polled.  You can set a separate base for each of the indicated
polling states.  Base must be a decimal integer from 0 to 255. 
If not specifically set, the default is 0. 

3 INACTIVE INCREMENT
Applies to DDCMP CONTROL circuits. This parameter sets the
increment value added to the INACTIVE tributary priority each
time the scheduling timer expires. Increment must be a decimal
integer from 0 to 255.  If not specifically set, the default is
64. 

3 INACTIVE THRESHOLD
Applies to DDCMP CONTROL circuits.  It specifies the number of
times to poll the active tributary before changing that
tributary's polling state to inactive because of no data
response.  Count must be a decimal integer in the range 0 to 255.
The default count is 8. 

3 LISTEN TIMER
Specifies the maximum time allowed to elapse before Transport
receives a Hello message or a user message from the adjacent node
on the circuit.  If a message is not received in the specified
time, the circuit is assumed to have failed. Seconds must be a
decimal integer in the range 1 to 65535.  This value must be
greater than the value for the HELLO TIMER. 

3 MAXIMUM BUFFERS
Applies to DDCMP CONTROL circuits.  It specifies the maximum
number of buffers from a common buffer pool that the tributary
can use.  If you do not set this parameter, there is no common
buffer pool and the higher level will explicitly supply the
buffers.  Count must be a decimal integer in the range 1 to 254
or the keyword, UNLIMITED. 

3 MAXIMUM TRANSMITS
Applies to DDCMP CONTROL circuits.  It specifies the maximum
number of data messages that can be transmitted at one time.
Count must be a decimal integer in the range 1 to 255.  The
default count is 4. 

3 POLLING STATE
Identifies the multipoint polling state of the tributary.  The
default is AUTOMATIC.  There are five possible states: 

    AUTOMATIC	The tributary's state varies according to the 
		operation of the polling algorithm.

    ACTIVE	The tributary is locked in the ACTIVE state.

    INACTIVE	The tributary is locked in the INACTIVE state.

    DYING	The tributary is locked in the DYING state.

    DEAD	The tributary is locked in the DEAD state.

3 SERVICE
Specifies whether or not service operations (loading and loop
testing) are allowed for the circuit.  There are two possible
modes: 

    DISABLED	The circuit may not be put into
		service state and may not
		perform service functions.

    ENABLED	The circuit may be put into
		service state and perform
		service functions.

3 STATE
Specifies the circuit's operational state. There are three
possible states: 

    OFF		The circuit is not in use.

    ON		The circuit is available for
		normal use or service functions.

    SERVICE	The line is available for
		service functions only.

3 TRANSMIT TIMER
Defines the number of milliseconds to delay between data message
transmits.  Milliseconds must be a decimal integer in the range 0
to 65535.  The default is 0. 

3 TRIBUTARY
Defines the Data Link physical tributary address of the circuit. 
Trib-address must be a decimal integer in the range 0 to 255. 

3 VERIFICATION
Requests the remote node to send NSP verification messages. 
There are two options: 

    DISABLED	does not allow the remote node to send NSP 
		verification messages.  This is the default.  

    ENABLED	requests the remote node to send NSP verification messages.

3 Examples


     NCP>SET CIRCUIT DMC-0 COST 3 STATE ON

         This command sets up the first DMC-11 for normal use.

     NCP>SET CIRCUIT DMC-0 STATE OFF
     NCP>SET CIRCUIT DMC-0 COST 1 STATE ON

         These two commands change the relative cost of the
         first DMC-11.
!

2 EXECUTOR

Use the SET EXECUTOR command to create or modify parameters in the
volatile database which controls the network on the executor node. Use
the DEFINE EXECUTOR command to create or modify parameters in the
volatile database which controls the network on the executor node.


SET     EXECUTOR        (parameters ...)

3 ALL

Use the SET EXECUTOR ALL command to update the volatile  copy  of  the
executor  node's  database with all the local node parameters stored for
the that node in its permanent database.

SET EXECUTOR ALL

3 ADDRESS node-address
Establishes a node address for the local node. 

3 BUFFER SIZE number
Specifies the size of the line buffers and thereby controls the
maximum segment size, including the transport header, of all NSP
messages received. 

3 COUNTER TIMER seconds
Specifies a timer whose expiration causes a line counter logging
event. 

3 DEFAULT ACCESS
Assigns the default access to all nodes which do not have a
specific node ACCESS entry in the volatile data base.  There are
four options: 

    INCOMING	Allows logical link connections from the remote node

    OUTGOING	Allows the local node to initiate connections to the 
		remote node; but does not allow connections from the
		remote node.

    BOTH	Allows incoming and outgoing logical link connections.
		This is the default.

    NONE	Does not allow incoming or outgoing logical link connections 
		to this node.

3 DELAY FACTOR
Specifies the number by which to multiply one sixteenth of the
estimated round trip delay to a node to set the retransmission
timer to that node.  Use a number in the range 1 to 255. If you
do not set this parameter, NETACP will supply a default value. 
It is recommended that you allow NETACP to supply the default. 

3 DELAY WEIGHT
Specifies the weight to apply to a new round trip delay data
point when updating the estimated round trip delay to a node. 
Use a number in the range of 1 to 255. If you do not set this
parameter, NETACP will supply a default value.  It is recommended
that you allow NETACP to supply the default. 

3 IDENTIFICATION
Is  a  text  string  that  describes the executor node (that is,
"Host System").  The string can be a maximum of 32 characters. 
If it contains blanks or tabs, you must enclose the string in
quotation marks. 

3 INACTIVITY TIMER
Specifies  the  maximum duration of inactivity (no data in either
direction) on a logical link before the node checks to see if the
logical link still works. If you do not set this parameter,
NETACP will supply a default value.  It is recommended that you
allow NETACP to supply the default. 

3 INCOMING TIMER
Defines  the  maximum  duration  between the time a connection is
received for a process and the time that process accepts or
rejects the connection.  For very busy systems, use a value in
the range of 45 to 60 seconds.  Otherwise use a value of 30
seconds. 

3 MAXIMUM ADDRESS
Defines   the   largest   node  address and, consequently, the
greatest number of nodes that can be addressed by the local node.
Use as small a number as possible. If you receive an "INVALID
VALUE" error, you probably have not allocated enough Non Paged
Pool space.  You must lower the MAXIMUM ADDRESS value or increase
the VAX/VMS NPAGEDYN value.  See Chapter 3 for some guidelines on
NPAGEDYN. 

3 MAXIMUM BUFFERS
Specifies   the   total   number   of  buffers in the transmit
buffer pool.  The value must be larger than that for the MAXIMUM
CIRCUITS parameter.  Use a value that is 15 times the square root
of the number of lines.  Increase this value if you experience
congestion loss. 

3 MAXIMUM CIRCUITS
Defines  the  maximum  number  of  transport circuits that the
local node can use.  Number must be in the range 1 to 32. If you
receive an "INVALID VALUE" error, you probably have not allocated
enough Non Paged Pool space.  You must lower the MAXIMUM CIRCUITS
value or increase the VAX/VMS NPAGEDYN value.  See Chapter 3 for
some guidelines on NPAGEDYN. 

3 MAXIMUM COST
Specifies the maximum total path cost allowed from the local node
to any node.  The path cost is the sum of the line costs along a
path between two nodes.  Use as small a number as possible in the
range of 1 to 1023. 

3 MAXIMUM HOPS
Specifies the maximum routing hops from the local node to any
other reachable node. A hop is the logical distance over a line
between two adjacent nodes.  Use as small a number as possible in
the range of 1 to 31, and be sure that this value is less than or
equal to the MAXIMUM VISITS parameter. If you receive an "INVALID
VALUE" error, you probably have not allocated enough Non Paged
Pool space.  You must lower the MAXIMUM HOPS value or increase
the VAX/VMS NPAGEDYN value.  See Chapter 3 for some guidelines on
NPAGEDYN. 

3 MAXIMUM LINKS
Specifies the maximum logical link count for the local node.  A
reasonable range for most networks is 25 to 50. 

3 MAXIMUM VISITS
Specifies the maximum number of nodes a message can visit prior
to being received by the destination node.  Use a number in the
range of 1 to 255.  The value must be greater than or equal to
the value for the MAXIMUM HOPS parameter.  It is suggested that
you specify a number that is twice the MAXIMUM HOPS value. 

3 OUTGOING TIMER
Specifies a time out value  for  the  duration between the time a
connection is requested and the time that connection is
acknowledged by the destination node.  It is recommended that you
use a value in the range of 30 to 60 seconds. 

3 PIPELINE QUOTA
Specifies the number of bytes that NSP will take from the process
byte count quota when the logical link connection is made.  Use
this parameter for multibuffering at the NSP level. 

3 RETRANSMIT FACTOR
Defines  the  maximum  number  of  times any given message
(except a connect initiate message) will be retransmitted before
the logical link is disconnected.  If you do not set this
parameter, NETACP will supply a default value.  It is recommended
that you allow NETACP to supply the default. 

3 ROUTING TIMER
Specifies the maximum duration before a routing update is forced.
The routing update produces a routing configuration message for
each adjacent node.  You can use a number in the range of 1 to 65535.
If you don't set this parameter, NETACP will supply a default
value.  It is recommended that you allow NETACP to supply the
default. 

3 STATE
Specifies the operational state of the local node.  There are
four possible states: 

    OFF		Allows no new logical links,
		terminates existing links,
		and stops route-through
		traffic

    ON		Allows logical links

    RESTRICTED	Allows no new inbound links
		from other nodes

    SHUT	Allows no new logical links,
		does not destroy existing
		links, and goes to the OFF
		state when all logical links
		are gone

3 Examples


     NCP>SET EXECUTOR ADDRESS 11 BUFFER SIZE 576

         This command sets the executor node's address to 11 and buffer
         size to 576 bytes.

     NCP>SET EXECUTOR STATE ON

         This command sets the executor node's operational state to ON.
!

3 NODE

Use the SET EXECUTOR NODE command to set the default executor for  all
NCP  commands.   The  executor  is  the  node  on  which  the  Network
Management Listener (NML) runs to perform these  commands.

Note that the NODE keyword must  appear  as  the  third  keyword  when
entering  the  command.   The  remaining information may appear in any
order thereafter, except the node-spec  which  must  follow  the  NODE
keyword.  Access control information is optional.

SET     EXECUTOR        NODE node-spec          ACCOUNT account
                                                PASSWORD password
                                                USER user-id
4 ACCOUNT account
    identifies the user's account for access
    control verification at the designated
    executor node.

4 NODE node-spec
    specifies a node name or address optionally
    followed by access control information as
    specified for VAX/VMS.  Use one of the
    following formats:

    node
    node"user password account"

4 PASSWORD password
    identifies the user's password for access
    control verification at the designated
    executor node.

4 USER user-id
    identifies the user's ID for access control
    verification at the designated executor node.

4 Examples

     NCP>SET EXECUTOR NODE 14
      ...

     NCP>CLEAR EXECUTOR NODE

         The first command sets the executor to node 14.   The  second
         command resets the executor to the executor node.

     NCP>SET EXECUTOR NODE 14"LOW JBL"

         This command uses  access  control  information  to  set  the
         executor node to node 14.

     NCP>SET EXECUTOR NODE TRNTO USER LOW PASSWORD JBL

         This command uses an alternate access control format  to  set
         the executor to node TRNTO.
!

2 LINE

Use the SET LINE command to create or modify line  parameters  in  the
volatile  database on the executor node.  Use the DEFINE LINE command to
create or modify line parameters in the permanent  data base  on  the
executor node.

SET     KNOWN LINES     (parameters ...)
        LINE line-id

3 KNOWN LINES
indicates that the specified parameters for all known lines
are to be created or modified in the database.

3 LINE line-id
identifies the line for which specified parameters are to be
created or modified in the database.

3 ALL
Use the SET LINE ALL command to update the volatile copy of  the
database  on  the  executor  node  with  all the line parameters
stored for a particular line in the permanent database on the
executor  node.

3 CLOCK mode
Specifies the hardware clock mode for the line.  The values for
clock-mode are:

	INTERNAL	For software controllable loopback use of
			the clock.  This causes the line device
			to supply a clock signal such that all
			transmitted messages can be looped back
			from outside the device.  Note that in
			order to use this parameter, the operator
			may have to connect a loopback plug in
			place of the normal line.

	EXTERNAL	For normal clock operating mode.  The 
			clock signal is supplied externally to
			the controller.

3 CONTROLLER
specifies the controller mode for the line. There are two
possible modes:

        LOOPBACK        is the internal device
                        loopback mode for testing

        NORMAL          is the normal operating mode.

3 COUNTER TIMER seconds
specifies a timer whose expiration causes a line counter
logging event.

3 DEAD TIMER milliseconds
specifies the number of milliseconds between polls of one of the
set of dead tributaries.  Applies only to DDCMP CONTROL lines.
The default is 10000 (10 seconds).

3 DELAY TIMER milliseconds
specifies the minimum number of milliseconds to delay between
polls.  If not set, there is no delay.  Applies only to DDCMP
CONTROL lines.

3 DUPLEX
specifies the hardware duplex mode of the line. There are
two possible modes:

        HALF    half-duplex

        FULL    full-duplex

!*3 HOLDBACK TIMER milliseconds
!*specifies the number of milliseconds a data link acknodledgment
!*can be held back to wait for a chance to piggy-back a data message.
!*If not set, no holdback is used.  Applies only to LAPB lines.
!*
!*3 MAXIMUM FRAME byte-count
!*specifies the maximum data link frame size on the line. Applies
!*only to LAPB lines.
!*
!*3 MAXIMUM RETRANSMITS count
!*specifies the maximum numer of data link retransmits of a block
!*on the line.  If not set, there is no maximum.  Applies only 
!*to LAPB lines.
!*
!*3 MAXIMUM WINDOW block-count
!*specifies the maximum number of unknowledged transmitted blocks
!*on the line.  Applies only to LAPB lines.
!*
3 PROTOCOL
specifies the line protocol for data link protocol operation.
The possible protocols are:

        DDCMP CONTROL   specifies a DDCMP multipoint
                        control station.

        DDCMP POINT     specifies a DDCMP point-to-point
                        line.

        DDCMP TRIBUTARY specifies a DDCMP multipoint
                        tributary.

	DDCMP DMC	specifies a DDCMP point-to-point
			line in DMC compatability mode.
!*
!*	LAPB		specifies an X.25 line.

3 RECEIVE BUFFERS number
specifies the length of the line's receive queue. Use a
number in the range of 1 to 32.  A value in the range of 2
to 4 is adequate for line speeds of less than 56K bits.
Megabit line speeds may require 8 or more buffers depending
on the observed error rate.

3 RETRANSMIT TIMER milliseconds
Specifies the maximum amount of time allowed to elapse before a
retransmission is necessary on a multipoint line.  This is the
amount of time a control station will wait for a tributary to
respond.  Milliseconds must be a decimal integer in the range 1
to 65535.  The default is 3000.

3 SCHEDULING TIMER milliseconds
specifies the number of milliseconds between re-calculation
of tributary polling priorities.  Applies only to DDCMP
CONTROL lines.  The default is 50.

3 SERVICE TIMER milliseconds
specifies the maximum amount of time allowed to elapse
before a receive request completes while doing service
operations on a line.  

3 STATE
specifies the line's operational state. There are three
possible states:

        OFF             The line is not in use.

        ON              The line is available for
                        normal use.

        SERVICE         The line is available only
                        for service functions.

3 STREAM TIMER milliseconds
specifies the number of milliseconds a tributary or half
duplex remote station is allowed to hold the line.  The
default is 1000 (1 second).

3 Examples


     NCP>SET LINE DMC-0 RECEIVE BUFFERS 3 TYPE DDCMP POINT STATE ON

         This command sets up the first DMC-11 for normal use.

     NCP>SET LINE DMC-0 STATE OFF
     NCP>SET LINE DMC-0 RECEIVE BUFFERS 5 STATE ON

         These two commands increase the number of receive buffers for
         the first DMC-11.
!

2 LOGGING

Use the SET LOGGING command to create or modify logging parameters in
the volatile database on the executor node. Use the DEFINE LOGGING
command to create or modify logging parameters in the permanent
database on the executor node. The STATE and NAME parameters are valid
only for the executor node (i.e., the SINK parameter should specify or
default to the executor).

SET     KNOWN LOGGING     (parameters ...)
        LOGGING CONSOLE
        LOGGING FILE
        LOGGING MONITOR

3 ALL
Use the SET LOGGING ALL command to update the  volatile  copy  of  the
database on the executor node with all the logging parameters stored
for the logging component in the permanent database on  the  executor 
node. 

3 EVENTS event-list
specifies those events to be logged.

See HELP EVENTS for a list of valid events.

3 KNOWN
introduces a plural parameter or component.

4 EVENTS
indicates that all events are to be logged.

4 LOGGING
indicates that the specified parameters for all known logging are to be
created or modified in the database.

3 CIRCUIT circuit-id
identifies the circuit for which events are to be logged.

3 LINE line-id
identifies the line for which events are to be logged.

3 CONSOLE
indicates that the specified parameters for the logging console are to
be created or modified in the database.

3 FILE
indicates that the specified parameters for the logging file are to be
created or modified in the database.

3 MONITOR
indicates that the specified parameters for the logging monitor are to
be created or modified in the database.  If no NAME parameter, the 
default monitor is OPCOM.

3 NAME file-name
identifies the name of a console, file, or monitor program to which
events will be logged.

If no NAME parameter is specified for the monitor sink, events 
will be sent to the default monitor, OPCOM.  If no NAME parameter
is specified for the console sink, events will be sent to OPA0:.

3 NODE node-id
identifies the node for which events are to be logged.

3 SINK
identifies the node that is to receive events. There are two
possibilities:

        EXECUTOR        identifies the local node
                        (default).

        NODE node-id    identifies a node in the
                        network.

3 STATE
specifies the operational state of the sink. There are three possible
states:

        HOLD    The sink is temporarily unavailable
                and events should be queued.

        OFF     The sink is unavailable for receiving
                events.

        ON      The sink is available for receiving
                events.

3 Examples


     NCP>SET LOGGING MONITOR KNOWN EVENTS
     NCP>SET LOGGING MONITOR STATE ON

         These two commands enable normal event logging using OPCOM.
         To receive the formatted events at a terminal, use the DCL
         command, REPLY/ENABLE=NETWORK.

     NCP>SET LOGGING CONSOLE KNOWN EVENTS NAME [SYSMGR]EVENTS.DAT
     NCP>CLEAR LOGGING CONSOLE EVENT 4.14
     NCP>SET LOGGING CONSOLE STATE ON

          These commands enable formatted logging of all events but 
          the node reachability change event to file EVENTS.DAT.

     NCP>SET LOGGING MONITOR STATE OFF

         This command sets the operational state  of  logging  to
         OPCOM on the executor node to OFF.
!

2 NODE

Use the SET NODE command to create or modify node  parameters  in  the
volatile  database on the executor node.  Use the DEFINE NODE command
to create or modify node parameters in the permanent  database  on  the
executor node. 

SET     KNOWN NODES     (parameters ...)
        NODE node-id

3 KNOWN NODES
indicates that the specified parameters for all known nodes
are to be created or modified in the database.

3 NODE node-id
identifies the node for which specified parameters are to be
created or modified in the database.

3 ALL
Use the SET NODE ALL command to update the volatile copy of the
database on the executor node with all the parameters stored for a
particular node in the permanent database on the executor node.

3 ACCESS
Specifies the allowed logical link connections for the node.  
There are four options:

    INCOMING	Allows logical link connections from the remote node

    OUTGOING	Allows the local node to initiate connections to the 
		remote node; but does not allow connections from the
		remote node

    BOTH	Allows incoming and outgoing logical link connections.
		This is the default

    NONE	Does not allow incoming or outgoing logical link connections 
		to this node

3 ADDRESS node-address
specifies a node address for the node.

3 CIRCUIT circuit-id
identifies a loop node and specifies the identification of
the circuit to be used for all traffic to the loop node.

3 COUNTER TIMER seconds
specifies a timer whose expiration causes a node counter logging
event.

3 CPU
identifies the node's CPU type. There are four valid types:

        DECSYSTEM1020
        PDP11
        PDP8
        VAX

3 DUMP ADDRESS number
Identifies the address in memory to begin an up-line dump of the
adjacent node. 

3 DUMP COUNT number
Specifies the default number of memory units to up-line dump from
the adjacent node. 

3 DUMP FILE file-id
Identifies which file to write to when the adjacent node is
up-line dumped.  The file-id is interpreted according to the file
system of the executor node. 

3 HOST node-id
identifies the host node. For an adjacent node, the host
address is a parameter that the adjacent node receives when
it is downline loaded. If no host is specified, the default
is the executor node.

3 LOAD FILE file-id
specifies a file containing the system software for downline
loading to an adjacent node.

3 NAME node-name
specifies the node name to be associated with the node
identification. Only one name can be assigned to a node
address or a line identification.

3 NONPRIVILEGED
specifies nonprivileged outbound access control information
for the node.  This access control will be sent to the remote
node if a connect request does not explicitly specify access
control information.

4 ACCOUNT account
identifies the user's account for access control
verification for the designated node. 

4 PASSWORD password
identifies the user's password for access control
verification for the designated node. 

4 USER user-id
identifies the user's ID for access control verification for
the designated node. 

3 PRIVILEGED
specifies privileged outbound access control information for the
node.  This access control will be sent to the remote node if:

	o  a connect request does not explicitly specify access
           control information and,

	o  the object database on the local node for the object
           of the connect specifies a list of privileges and,

        o  the user requesting the connect has all the specified
           privileges.  If the user requesting the connect does
           not have all the privileges, no access control will
           be sent.

The privileges required to use this access control for an object
are set using the SET OBJECT object-id PRIVILEGES command.

4 ACCOUNT account
identifies the user's account for access control
verification for the designated node. 

4 PASSWORD password
identifies the user's password for access control
verification for the designated node. 

4 USER user-id
identifies the user's ID for access control verification for
the designated node. 

3 RECEIVE PASSWORD password
specifies a password (1-8 char) that is expected from the
remote node during a Transport initialization sequence.

3 SECONDARY LOADER file-id
specifies a secondary file containing system software for
downline loading to an adjacent node.

3 SERVICE
introduces a service parameter.

4 DEVICE
identifies the node's line controller for the service line
over which the operation is to take place. The following
are possible device types:

                DP  DU  DL
                DQ  DA  DUP
                DZ  DV  DLV
                KDP KDZ PCL
                DMC DTE KL8
		DMP DMV DPV
		DMF

4 CIRCUIT circuit-id
specifies the circuit to be used for downline loading. This is
the default value for the VIA parameter of the LOAD command.
The node identification must be that of the target node.

4 PASSWORD hex-password
specifies the password required to trigger the bootstrap
mechanism on the adjacent node.

3 SOFTWARE
introduces a software parameter

4 IDENTIFICATION
identifies the ID of the software to be downline loaded.

4 TYPE
identifies a particular file type to be loaded. There are
three possibilities:

                SECONDARY LOADER
                TERTIARY LOADER
                SYSTEM

3 TERTIARY LOADER file-id
specifies a tertiary file containing system software for
downline loading to an adjacent node.

3 TRANSMIT PASSWORD password
specifies a password (1-8 char) sent to the remote node
during a Transport initialization sequence.

3 Examples


     NCP>SET NODE 14 NAME DENVER

         This command sets the node name of node 14 to DENVER.

     NCP>SET NODE 11-
         _ NONPRIVILEGED-
         _ USER NETNONPRIV-
         _ PASSWORD NETNONPRIV-
         _ PRIVILEGED-
         _ USER NETPRIV-
         _ PASSWORD NETPRIV

         This command establishes default outbound privileged and 
         nonprivileged access control information for node 11.

!
2 OBJECT

Use the SET OBJECT command to create or modify object
parameters in the volatile database on the executor node.
Use the DEFINE OBJECT command to create or modify object
parameters in the permanent database on the executor node.

SET     OBJECT object-name      (parameters ...)

3 OBJECT object-name
identifies the object for which specified parameters are to
be created or modified in the database.

3 ALL
Use the SET OBJECT ALL command to update the volatile copy
of the database on the executor node with all the object
parameters stored for a particular object in the permanent
database on the executor node.

3 ACCOUNT account
identifies the default user's account for access control on
inbound connects to the object when no access control is
specified by the remote node.

3 FILE file-id
specifies the name of the command procedure used to start 
the indicated object.  SYS$SYSTEM:object-name.COM is the
default.

3 NUMBER number
specifies the object number. Use a number in the range of 0
to 255.

3 PASSWORD password
identifies the default user's password for access control on
inbound connects to the object when no access control is
specified by the remote node.

3 PRIVILEGES
specifies the privileges necessary for the default privileged
access control information for the remote node to be used.

The privileged access control will be sent to a remote node if:

        o  a connect request does not explicitly specify access
           control information and,

        o  the object database on the local node for the object
           of the connect specifies a list of privileges and,

        o  the user requesting the connect has all the specified
           privileges.  If the user requesting the connect does
           not have all the privileges, no access control will
           be sent.

The default privileged access control information is set using the
SET NODE node-id PRIVILEGED USER user-id PASSWORD password command.

3 USER user-id
identifies the default user's ID for access control on
inbound connects to the object when no access control is
specified by the remote node.

3 Examples

     NCP>SET OBJECT NML FILE NML NUMBER 19

         This command defines a startup file and  object  type  number
         (19) for the NML object.

     NCP>SET OBJECT NML-
         _ PRIVILEGES OPER DIAGNOSE -
         _ USER "NETPRIV" -
         _ PASSWORD "NETPRIV"

         This command establishes default access  control  information
         for  the NML object, and defines those privileges required to
         connect to this object.
!
1 SHOW

Use the SHOW command to display information from the volatile database
on the executor node.  Use the LIST command to display information
from the permanent database on the executor node.

2 CHARACTERISTICS
indicates that static information is to be displayed.

2 COUNTERS
indicates that error and performance statistics are to be
displayed. Valid for circuits, lines, the executor and nodes.

2 EVENTS
indicates that logging event filters are to be displayed.
Valid only with SHOW or LIST LOGGING.

2 STATUS
indicates that dynamic information is to be displayed.

2 SUMMARY
indicates that only the most useful information is to be
displayed. This is the default.

2 TO file-id
specifies the output file. If none is specified, SYS$OUTPUT
is the default.

!
2 CIRCUIT

Use the SHOW CIRCUIT command to display circuit information (from  the
volatile database) available to the executor node. Use the LIST CIRCUIT
command to display circuit information (from  the  permanent  database)
available to the executor node.

SHOW    ACTIVE CIRCUITS     CHARACTERISTICS         TO file-id
LIST    KNOWN CIRCUITS      COUNTERS
        CIRCUIT circuit-id  STATUS
                            SUMMARY

3 ACTIVE CIRCUITS
indicates that information for all active circuits is to be
displayed.

3 KNOWN CIRCUITS
indicates that information for all known circuits is to be
displayed.

3 CIRCUIT circuit-id
identifies a particular circuit for which information is to be
displayed.

3 Examples


     NCP>SHOW CIRCUIT DMC-0 COUNTERS

         This command displays circuit counter information for 
	 circuit DMC-0 on the SYS$OUTPUT device.

     NCP>SHOW ACTIVE CIRCUITS

         This command displays circuit status information for  
	 all  circuits that are in the ON state.

!

2 EXECUTOR

Use the SHOW EXECUTOR command to display executor node
information (from the volatile database). Use the LIST
EXECUTOR command to display executor node information (from
the permanent database).

SHOW    EXECUTOR        CHARACTERISTICS         TO file-id
LIST                    COUNTERS
                        STATUS
                        SUMMARY

3 Examples

     NCP>SHOW EXECUTOR CHARACTERISTICS
     ...

     NCP>

         This command  displays  local  node  characteristics  on  the
         SYS$OUTPUT device.

     NCP>SHOW EXECUTOR
     ...
     NCP>

         This command displays local node status information.  This is
         the default.

     NCP>SHOW EXECUTOR COUNTERS TO NET.LOG

         This command writes node counter information  for  the  local
         node to file NET.LOG.
!
2 LINE

Use the SHOW LINE  command  to  display  line  information  (from  the
volatile  database)  available to the executor node.  Use the LIST LINE
command to display line information (from  the  permanent  database)
available to the executor node.

SHOW    ACTIVE LINES    CHARACTERISTICS         TO file-id
LIST    KNOWN LINES     COUNTERS
        LINE line-id    STATUS
                        SUMMARY

3 ACTIVE LINES
indicates that information for all active lines is to be
displayed.

3 KNOWN LINES
indicates that information for all known lines is to be
displayed.

3 LINE line-id
identifies a particular line for which information is to be
displayed.

3 Examples


     NCP>SHOW LINE DMC-0 COUNTERS

         This command displays line counter information for line DMC-0
         on the SYS$OUTPUT device.

     NCP>SHOW ACTIVE LINES

         This command displays line status information for  all  lines
         that are in the ON state.
!

2 LINKS

Use the SHOW LINKS command  to  display  link  information  (from  the
volatile  database)  available  to the executor node.

SHOW    KNOWN LINKS                     CHARACTERISTICS  TO file-id
        KNOWN LINKS WITH NODE node-id   STATUS
        LINK number                     SUMMARY

3 LINK number
displays information about a specific link.

3 KNOWN LINKS
indicates that information for all known links is to be
displayed.

3 WITH NODE node-id
indicates that information for all links to the designated
node is to be displayed.

3 Examples

     NCP>SHOW KNOWN LINKS

         This command displays link status information for  all  links
         active on the executor node.

     NCP>SHOW KNOWN LINKS WITH NODE TRNTO TO NET.LOG

         This command writes link status information  for  all  active
         links with remote node TRNTO to the file NET.LOG.
!

2 LOGGING

Use the SHOW LOGGING command to display logging information (from  the
volatile database) available to the executor node.  Use the LIST
LOGGING command to display logging information (from the permanent
database) available to the executor node. 


SHOW    ACTIVE LOGGING   CHARACTERISTICS TO file-id
LIST    KNOWN LOGGING    EVENTS          SINK NODE node-id
        LOGGING CONSOLE  STATUS          KNOWN SINKS
        LOGGING FILE     SUMMARY
        LOGGING MONITOR

3 ACTIVE LOGGING
indicates that information for all active logging is to be
displayed.

3 KNOWN
introduces a plural parameter or component.

4 LOGGING
indicates that information for all known logging is to be
displayed.

4 SINKS
indicates that information for all known sinks is to be
displayed.  If unspecified, only the executor node
is displayed.

3 CONSOLE
indicates that information for the logging console is to be
displayed.

3 FILE
indicates that information for the logging file is to be
displayed.

3 MONITOR
indicates that information for the logging monitor is to be
displayed.

3 SINK NODE node-id
identifies a particular sink node for which information is
to be displayed.

3 Examples


     NCP>SHOW KNOWN LOGGING KNOWN SINKS

         This command displays  logging  status  information  for  all
         known logging at all known sinks.

     NCP>SHOW LOGGING FILE EVENTS SINK NODE TRNTO

         This command displays events that are currently being  logged
         to the logging file at node TRNTO.
!

2 NODE

Use the SHOW NODE  command  to  display  node  information  (from  the
volatile  database)  available to the executor node.  Use the LIST NODE
command to display node information (from  the  permanent  database)
available to the executor node.

SHOW    ACTIVE NODES    CHARACTERISTICS         TO file-id
LIST    KNOWN NODES     COUNTERS
        LOOP NODES      STATUS
        NODE node-id    SUMMARY
        EXECUTOR

3 ACTIVE NODES
indicates that information for all active nodes is to be
displayed.


3 EXECUTOR
indicates that information for the executor node is to be
displayed.

3 KNOWN NODES
indicates that information for all known nodes is to be
displayed.

3 LOOP NODES
indicates that information for all loop nodes is to be
displayed.

3 NODE node-id
identifies a particular node for which information is to be
displayed.

3 Examples


     NCP>SHOW KNOWN NODES SUMMARY

         This command displays node summary information for all  known
         nodes.

     NCP>SET NODE TEST CIRCUIT DMC-0
     NCP>SHOW LOOP NODES

         The first command establishes a loop node name (TEST) for the
         associated circuit DMC-0.  The second command displays loop node
         status information for all loop nodes established by the  SET
         NODE command.
!

2 OBJECT

Use the SHOW OBJECT command to display object  information  (from  the
volatile  database) available to the executor node.  Use the LIST
OBJECT command to display object information (from the permanent 
database) available to the executor node. 

SHOW    KNOWN OBJECTS           CHARACTERISTICS         TO file-id
LIST    OBJECT object-name      STATUS
                                SUMMARY

3 KNOWN OBJECTS
indicates that information for all known objects is to be
displayed.

3 OBJECT object-name
identifies a particular object for which information is to
be displayed.

3 Examples

     NCP>SHOW KNOWN OBJECTS SUMMARY

         This command  displays  summary  information  for  all  known
         objects.
1
1 EVENTS
The following is the list of events that can be reported with event
logging.  Not all events are generated by DECnet-VAX, but if a DECnet-VAX
system acts as a sink node for another system, it may report any of
these events.

 0.0  Event records lost
 0.1  Automatic node counters
 0.2  Automatic line counters
 0.3  Automatic line service
 0.4  Line counters zeroed
 0.5  Node counters zeroed
 0.6  Passive loopback
 0.7  Aborted service request
 0.8  Automatic counters
 0.9  Counters zeroed

 2.0  Local node state change
 2.1  Access control failure

 3.0  Invalid message
 3.1  Invalid flow control
 3.2  Data base reused

 4.1  Node unreachable packet loss
 4.2  Node out-of-range packet loss
 4.3  Oversized packet loss
 4.4  Packet format error
 4.5  Partial routing update loss
 4.6  Verification reject
 4.7  Line down, line fault
 4.8  Line down, software fault
 4.9  Line down, operator fault
 4.10 Line up
 4.11 Init failure, line fault
 4.12 Init failure, software fault
 4.13 Init failure, operator fault
 4.14 Node reachability change
 
 128.1 DAP CRC error detected
 128.2 Duplicate Phase 2 address error

!
1 DEFINE

Use the DEFINE command to create or modify parameters or components in
the permanent database on the executor node.  See the SET command
description for the format and allowable parameters.

!
1 LIST

Use the LIST command to display information from the permanent database
on the executor node.  See the SHOW command description for the format
and possible parameters for the LIST command.

!

1 TELL

Use the TELL prefix to identify the executor node for a particular NCP
command.   TELL sets the executor for only one command and must prefix
the command for  which  it  is  intended.   This  command  allows  you
optionally  to  specify access control information in one of two ways:
as part of the node-spec or as distinct parameters.

TELL    node-spec       ACCOUNT account
                        PASSWORD password
                        USER user-id

2 node-spec
specifies a node name or address optionally followed by
access control information as specified for VAX/VMS. Use one
of the following formats:

        node
        node"user password account"

2 ACCOUNT account
identifies the user's account for access control
verification at the designated executor node.

2 PASSWORD password
identifies the user's password for access control
verification at the designated executor node.

2 USER user-id
identifies the user's ID for access control verification at
the designated executor node.

2 Examples

     NCP>TELL 5 SET KNOWN LINES ALL

         This command sets the executor to node 5 where the SET  KNOWN
         LINES ALL command executes.

     NCP>TELL TRNTO"LOW JBL"  SHOW KNOWN LINES

         This command uses  access  control  information  to  set  the
         executor  to  node  TRNTO  where the SHOW KNOWN LINES command
         executes.

     NCP>TELL TRNTO USER SYSTEM PASSWORD MANAGER ZERO EXECUTOR

         This command uses an alternate access control format  to  set
         the  executor  to  node TRNTO where the ZERO EXECUTOR command
         executes.
!

1 TRIGGER

Use the TRIGGER commands to trigger the bootstrap mechanism  of  a
target  node such that the node will load itself.  Use this command to
initiate the loading sequence for  an  unattended  system.

2 NODE

Use the TRIGGER NODE command to trigger the bootstrap mechanism  of  a
target  node such that the node will load itself.  Use this command to
initiate the loading sequence for  an  unattended  system.

TRIGGER NODE node-id    SERVICE PASSWORD hex-password   VIA circuit-id


3 NODE node-id
identifies the node whose bootstrap is to be triggered.

3 SERVICE PASSWORD hex-password
identifies the password required to trigger the bootstrap
mechanism on the target node.

3 VIA circuit-id
identifies the circuit over which the operation is to take
place.

3 Examples


     NCP>TRIGGER NODE NYC

         This command triggers the bootstrap mechanism on node NYC  to
         initiate a downline load operation.

     NCP>TRIGGER NODE NYC SERVICE PASSWORD F0F0 VIA DMC-5

         This command provides a service password in order to  trigger
         the  bootstrap  mechanism on node NYC and initiate a downline
         load operation over circuit DMC-5.
!

2 VIA

Use the TRIGGER VIA command to trigger the bootstrap  mechanism  of  a
target  node such that the node will load itself.  Use this command to
initiate the loading sequence for  an  unattended  system.

This command triggers the target node via the specified circuit.   The
target  node identification is obtained from the volatile database on
the executor node.

TRIGGER VIA circuit-id     SERVICE PASSWORD hex-password


3 SERVICE PASSWORD hex-password
identifies the password required to trigger the bootstrap
mechanism on the target node.

3 VIA circuit-id
identifies the circuit over which the operation is to take
place.

3 Examples


     NCP>TRIGGER VIA DMC-5

         This command triggers the bootstrap  mechanism  on  the  node
         connected to circuit DMC-5.
!

1 ZERO

Use the ZERO commands to reset counters for circuits, lines, nodes and
the local node.

2 EXECUTOR

Use the ZERO EXECUTOR command to reset all counters for the
local node.

ZERO    EXECUTOR        COUNTERS

2 CIRCUIT

Use the ZERO CIRCUIT command to reset circuit counters on the
executor node.

ZERO    KNOWN CIRCUITS COUNTERS
        CIRCUIT circuit-id

3 KNOWN CIRCUITS
indicates that counters for all known circuits are to be reset.

3 CIRCUIT circuit-id
identifies a particular circuit for which counters are to be
reset.

2 LINE

Use the ZERO LINE command to reset line counters on the
executor node.

ZERO    KNOWN LINES     COUNTERS
        LINE line-id

3 KNOWN LINES
indicates that counters for all known lines are to be reset.

3 LINE line-id
identifies a particular line for which counters are to be
reset.

2 NODE

Use the ZERO NODE command to reset node counters on the
executor node.

ZERO    KNOWN NODES     COUNTERS
        NODE node-id

3 KNOWN NODES
indicates that counters for all known nodes are to be reset.

3 NODE node-id
identifies a particular node for which counters are to be
reset.

3 Examples

     NCP>ZERO NODE TRNTO COUNTERS

 This command resets all node counters maintained on the
executor node for remote node TRNTO.
!
! end of NCPHELP.HLP
!
