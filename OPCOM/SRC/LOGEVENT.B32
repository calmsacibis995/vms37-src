MODULE	LOGEVENT	(
			 LANGUAGE (BLISS32),
			 IDENT = 'V03-000'
			) =

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! FACILITY:
!
!	OPCOM
!
! ABSTRACT:
!
!	This module contains all the various and sundry general
!	purpose utility routines used by OPCOM's request handlers.
!
! Environment:
!
!	VAX/VMS operating system.
!
! Author:
!
!	Steven T. Jeffreys
!
! Creation date:
!
!	March 10, 1981
!
! Revision history:
!
! V02-002	STJ0160		Steven T. Jeffreys,	08-Feb-1982
!		Jiggle the message size and pointer so that the 'bell'
!		character on front of each message is not sent to the logfile.
!
!--

BEGIN						! Start of LOGEVENT

LIBRARY	'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:OPCOMDEF.REQ';

FORWARD ROUTINE
	LOG_MESSAGE;			! Write a message to a log file

BUILTIN

	INSQUE,				! Insert entry onto a queue
	REMQUE;				! Remove entry from a queue


GLOBAL ROUTINE LOG_MESSAGE (RQCB) =

!++
! Functional description:
!
!	This routine will write a message described by an MCB
!	to the operator log file.
! **
! ** This routine will be enhanced later to support mutliple log files.
! **
!
! Input:
!
!	RQCB		: Address of an RQCB data structure
!
! Implicit Input:
!
!	RQCB [RQCB_L_MCB] points to a valid MCB.
!
! Output:
!
!	None.
!
! Implict output:
!
!	None.
!
! Side effects:
!
!	None.
!
! Routine value:
!
!	TRUE		: If success
!	<anything else>	: If the log attempt failed
!--

BEGIN						! Start of LOG_MESSAGE

MAP
	RQCB		: REF BBLOCK;

EXTERNAL LITERAL
	MCB_K_TYPE,				! MCB structure type
	LOGGING_ENABLED,			! Flag bit
	LOGFILE_CLOSED,				! Flag bit
	LAST_LOG_FAILED;			! Flag bit

EXTERNAL
	GLOBAL_STATUS	: BITVECTOR,		! OPCOM global status flags
	LOGFILE_RAB	: BBLOCK,		! RMS control structure
	LOGFILE_FAB	: BBLOCK;		! RMS control structure

LOCAL
	MCB		: REF BBLOCK,		! MCB data structure
	MESSAGE		: LONG,			! Error message code
	STATUS		: LONG;

!
! Check for a valid MCB.
!
MCB = .RQCB [RQCB_L_MCB];
IF (.MCB EQL 0) OR (.MCB [MCB_B_TYPE] NEQ MCB_K_TYPE)
THEN
    RETURN (FALSE);
!
! See if logging is enabled.
!
IF  (NOT .GLOBAL_STATUS [LOGGING_ENABLED])
OR  (.GLOBAL_STATUS [LOGFILE_CLOSED])
OR  ((.BBLOCK [RQCB [RQCB_L_OPTIONS], OPC$V_NOLOG]) AND
     (.BBLOCK [RQCB [RQCB_L_PRIVMASK1], PRV$V_OPER]))
THEN
    RETURN (TRUE);
!
! Write the message to the logfile.
!
LOGFILE_RAB [RAB$W_RSZ] = .MCB [MCB_L_TEXTLEN]-1;
LOGFILE_RAB [RAB$L_RBF] = .MCB [MCB_L_TEXTPTR]+1;
IF NOT (STATUS = $PUT (RAB = LOGFILE_RAB))
THEN
    BEGIN
    !
    ! The log attempt failed.  Complain if appropriate.
    !
    IF NOT .GLOBAL_STATUS [LAST_LOG_FAILED]
    THEN
	BEGIN
	!
	! Complain to the appropriate operators.
	!
	MESSAGE = OPC$_LOGFAIL;
	! *** the remainder will be supplied later ***
	END;
     GLOBAL_STATUS [LAST_LOG_FAILED] = TRUE;
     END;

RETURN (.STATUS);

END;						! End of LOG_MESSAGE

END						! End of LOGEVENT
ELUDOM
