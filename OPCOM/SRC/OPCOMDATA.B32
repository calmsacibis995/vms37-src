MODULE OPCOMDATA(
		 LANGUAGE (BLISS32),
		 IDENT = 'V03-000'
		) =
BEGIN

!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
! Facility:
!
!	OPCOM
!
! Abstract:
!
!	This module contains the definitions of the data structures used
!	by OPCOM.  All global variables and constants are defined here.
!
! Environment:
!
!	VAX/VMS operating system
!
! Author:
!
!	Steven T. Jeffreys
!
! Creation date:
!
!	December 16, 1980
!
! Revision history:
!
!	V02-004	STJ0220		Steven T. Jeffreys,		17-Feb-1982
!		- Added list head for implicitly disabled operators.
!
!	V02-003	STJ0158		Steven T. Jeffreys,		8-Feb-1982
!		- Increased time stamp wait time to 5 minutes.
!
! 	V02-002	STJ0081		Steven T. Jeffreys,		2-Aug-1981
!		Changed default logfile name to SYS$MANAGER:OPERATOR.LOG.
!
!--

LIBRARY 'SYS$LIBRARY:LIB.L32';
REQUIRE 'SRC$:OPCOMDEF.REQ';

GLOBAL
	!
	! Define RMS control structures for the logfile.
	!
	LOGFILE_FAB	: $FAB	(
				 FAC=(PUT),		! WRITE access only
				 RAT=CR,		! Record ATtributes
				 ORG=SEQ,		! Sequntial file
				 RFM=VAR,		! Variable length records
				 FNM='SYS$MANAGER:OPERATOR.LOG'
				),

	LOGFILE_RAB	: $RAB	(
				 FAB=LOGFILE_FAB
				),

	!
	! The following data structure is vector of list headers
	! for each class of operator.  The format of the list head is:
	!
	!	+--------------------------------+
	!	|      Pointer to first OCD	 |	(longword)
	!	+--------------------------------+
	!	|       Length of OCD list	 |	(longword)
	!	+--------------------------------+
	!
	! There is one such entry for each class of operator, SYSTEM,
	! GROUP, and USER, as well as a spare entry at the end of the vector.
	! The list pointed to by the list header is a doubly linked list of
	! OCD data structures.
	!
	OCD_VECTOR	: VECTOR [8,LONG],

	!
	! OPRENABLE message used by OPCOM_INIT to enable
	! the default operator terminal, OPA0.  The message
	! is not broadcasted.
	!
	MSG1		: BBLOCK  [OPC$K_COMHDRSIZ+31]		! OPA0 ENABLE request
			  INITIAL (WORD	(MSG$_OPRQST),		! Message type code
				   WORD	(0),			! No reply mailbox
				   LONG	(-1),			! Privilege mask
				   LONG (-1),			! Privilege mask
				   LONG	(%X'010004'),		! Sender UIC = [1,4]
				   LONG	(%ASCII'SYST'),		! Username = "SYSTEM      "
				   LONG	(%ASCII'EM  '),		!
				   LONG	(%ASCII'    '),		!
				   LONG	(%ASCII'SYST'),		! Account = "SYSTEM  "
				   LONG	(%ASCII'EM  '),		!
				   BYTE	(4),			! Base priority
				   BYTE (0),			! Unused
				   !
				   BYTE (OPC$_X_OPRENABLE),	! Set request code
				   BYTE (OPC$K_SYSTEM),		! Set scope to SYSTEM
				   LONG (OPC$M_NOBRD OR OPC$M_NOLOG),	! Do not broadcast or log this message
				   LONG (OPC$M_PERMOPER),	! Make OPA0 a permanent operator
				   LONG (-1),			! Receive all requests
				   LONG (0),			!
				   LONG (1),			! Set request ID
				   LONG (0),			! UIC
				   BYTE (4),			! Character count
				   LONG (%ASCII'OPA0')		! Operator device name
				),
	OPA0_ENABLE_MSG	: BBLOCK  [DSC$K_S_BLN]			! Descriptor for OPA0 enable request
			  INITIAL (LONG (OPC$K_COMHDRSIZ+31), LONG (MSG1)),

!
! LOGFILE INIT message used by OPCOM_INIT to 
! initialize the system operator log file.	
!
	MSG2		: BBLOCK  [OPC$K_COMHDRSIZ+31]		! LOGFILE INIT request
			  INITIAL (WORD	(MSG$_OPRQST),		! Message type code
				   WORD	(0),			! No reply mailbox
				   LONG	(-1),			! Privilege mask
				   LONG (-1),			! Privilege mask
				   LONG	(%X'010004'),		! Sender UIC = [1,4]
				   LONG	(%ASCII'SYST'),		! Username = "SYSTEM      "
				   LONG	(%ASCII'EM  '),		!
				   LONG	(%ASCII'    '),		!
				   LONG	(%ASCII'SYST'),		! Account = "SYSTEM  "
				   LONG	(%ASCII'EM  '),		!
				   BYTE	(4),			! Base priority
				   BYTE (0),			! Unused
				   !
			  	   BYTE	(OPC$_X_LOGFILE),	! Set request code
				   BYTE (OPC$K_SYSTEM),		! Set scope to SYSTEM
				   LONG (0),			! 
				   LONG (OPC$M_INITLOG),	! Initialize the logfile
				   LONG (OPC$M_NM_CENTRL),	! Notify CENTRAL operators
				   LONG (0),			! Unused
				   LONG (2),			! Request ID
				   LONG (0),			! UIC
				   BYTE (4),			! Character count
				   LONG (%ASCII'OPA0')		! Operator device name
				 ),
	LOGFILE_MSG	: BBLOCK  [DSC$K_S_BLN]			! Descriptor for LOGFILE INIT request
			  INITIAL (LONG (OPC$K_COMHDRSIZ+31), LONG (MSG2)),

	!
	! Various and sundry useful variables.
	!
	DISABLED_OPER_Q	: VECTOR [2]			! List head
			  INITIAL (DISABLED_OPER_Q,DISABLED_OPER_Q),
	UNKNOWN_MESSAGE_COUNT :	LONG,			! Count of unknowm message types received
	REQUEST_NUMBER	: LONG,				! Current request number
	OPER_MBX_CHAN	: WORD,				! Channel to MBA2
	OPER_IDENT_NUM	: WORD,				! Current oper ident
	OPER_MBX_NAME	: DESCRIPTOR ('_MBA2:'),	! String descriptor
	DEVICE_FAO	: DESCRIPTOR ('!AC!UW'),	! Device FAO control string
	OPR_DEV_FAO	: DESCRIPTOR ('!AC!UW'),	! FAO control string
	MBX_FAO		: DESCRIPTOR ('MB!UW'),		! FAO control string
	LOGFILE_OPEN	: LONG;				! Boolean

GLOBAL BIND

	WAIT_DELTA	= UPLIT (60 * 5 * -10000000, -1);! Wait time for timer AST

GLOBAL
	!
	! Define the global status bitvector.  It is used
	! to maintain status info global to all of OPCOM.
	!
	GLOBAL_STATUS	: BITVECTOR [32];

GLOBAL LITERAL
	!
	! Define the global status bits.
	!
	SHUTDOWN_PENDING	= 0,			! OPCOM is doing an orderly shutdown
	LOGGING_ENABLED		= 1,			! Log events
	LAST_LOG_FAILED		= 2,			! Last log attempt failed
	LOGFILE_CLOSED		= 3,			! Logfile closed
	OLD_FORMAT_MSG		= 4,			! This is an old format msg
	TIMESTAMP_PENDING	= 5,			! Timestamp function pending
	BUSY			= 6;			! OPCOM is busy

!
! Define SCB table.  Each entry describes a type of data structure.
! The information kept on each data structure type includes the size
! (in bytes) of the data structure, the sequence number of the data
! structure, the count of preallocated data structures kept on a
! look-aside list (LAL), and the LAL header.  The SCB table is indexed
! by the data structure type.  The type is defined by the SCB_DEF
! macro, which makes the SCB_DEF invocations order independent.
! The SCB table has a 1 origin.
!

%ASSIGN (COUNTER,1);					! Set table origin
PSECT GLOBAL = $SCB_TABLE;
PSECT OWN = $SCB_TABLE;
GLOBAL
	SCB_TABLE	: VECTOR [0];			! Start of SCB table
	!
	! Define table entries.  Input parameters are the structure type
	! and the number of structures to preallocate for the look-aside list.
	!
	SCB_DEF (RQCB,32);
	SCB_DEF	(MCB,32);
	SCB_DEF	(OCD,4);

!
! Define the minumum and maximum data structure types.
! Note that this must come after the last SCB_DEF macro
! call, as the macro defines the literals referenced.
!
GLOBAL LITERAL

	MIN_DS_TYPE	= MIN   (RQCB_K_TYPE,
				 MCB_K_TYPE,
				 OCD_K_TYPE
				),

	MAX_DS_TYPE	= MAX	(RQCB_K_TYPE,
				 MCB_K_TYPE,
				 OCD_K_TYPE
				),
!
! Define the minimum and maximum SCOPE values.
!
	MIN_SCOPE	= MIN	(OPC$K_SYSTEM,
				 OPC$K_GROUP,
				 OPC$K_USER,
				 OPC$K_UNSPEC
				),

	MAX_SCOPE	= MAX	(OPC$K_SYSTEM,
				 OPC$K_GROUP,
				 OPC$K_USER,
				 OPC$K_UNSPEC
				);
GLOBAL
!
! Define a quadword mask that contains all the defined attention bits.
!
	KNOWN_ATTN_BITS	: VECTOR  [2,LONG]
			  INITIAL (LONG	(OPC$M_NM_CENTRL OR
					 OPC$M_NM_PRINT  OR
					 OPC$M_NM_TAPES	 OR
					 OPC$M_NM_DISKS	 OR
					 OPC$M_NM_DEVICE OR
					 OPC$M_NM_CARDS	 OR
					 OPC$M_NM_NTWORK OR
					 OPC$M_NM_OPER1	 OR
					 OPC$M_NM_OPER2	 OR
					 OPC$M_NM_OPER3	 OR
					 OPC$M_NM_OPER4	 OR
					 OPC$M_NM_OPER5	 OR
					 OPC$M_NM_OPER6	 OR
					 OPC$M_NM_OPER7	 OR
					 OPC$M_NM_OPER8	 OR
					 OPC$M_NM_OPER9	 OR
					 OPC$M_NM_OPER10 OR
					 OPC$M_NM_OPER11 OR
					 OPC$M_NM_OPER12
					),
				   LONG	(0)
				  );

!
! Define the vector of message codes that describe the text
! associated with each of the known attention bits.  Undefined
! bits have a zero message code associated with them.  The order
! of the entries must coincide with the order of the bits that
! are defined.
!
GLOBAL
	NAME_VECTOR	: VECTOR  [64,LONG]
			  INITIAL (LONG	(OPC$_CENTRL),
				   LONG	(OPC$_PRINT),
				   LONG	(OPC$_TAPES),
				   LONG	(OPC$_DISKS),
				   LONG	(OPC$_DEVICE),
				   LONG	(OPC$_CARDS),
				   LONG	(OPC$_NTWORK),
				   LONG	(0),
				   LONG	(0),
				   LONG	(0),
				   LONG	(0),
				   LONG	(0),
				   LONG	(OPC$_OPER1),
				   LONG	(OPC$_OPER2),
				   LONG	(OPC$_OPER3),
				   LONG	(OPC$_OPER4),
				   LONG	(OPC$_OPER5),
				   LONG	(OPC$_OPER6),
				   LONG	(OPC$_OPER7),
				   LONG	(OPC$_OPER8),
				   LONG	(OPC$_OPER9),
				   LONG	(OPC$_OPER10),
				   LONG	(OPC$_OPER11),
				   LONG	(OPC$_OPER12)
				  );

END
ELUDOM

