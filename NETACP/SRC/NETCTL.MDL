;
;	NETCTL.MDL
;	V03-006.0
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; MODIFIED BY:
;
;	V03-006	ADE0033		A.Eldridge		15-Feb-1982
;		Added LNI$W_PIQ.
;
;	V03-005	ADE0032		A.Eldridge		06-Jan-1981
;		Removed the RTT parameter from the circuit database.
;
;	V03-004	ADE0031		A.Eldridge		15-Dec-1981
;		Added the CNF$V_NOEXT bit to the CNF definitions.
;
;	V03-003	ADE0030		A.Eldridge		30-Nov-1981
;		Added support for proxy logins the OBI, NDI, and LNI
;		structures.
;

;
; Configuration Data Base Root Block  (CNR)
;
; This block serves as the listhead for the CNFs of a particular
; component in the configuration data base.  It contains all of the
; component's semantics.
;
$STRUCT	CNR

    M	1
    F	FLINK,L		; Forward link
    F	BLINK,L		; Backward link
    F	SIZE,W		; Block size
    F	TYPE,B		; Block type (one of the NFB$C_DB_... codes)
    F	FLG,B		; Flag bits
    F	SIZ_CNF,W	; Size of associated CNF without any string storage
    F	MAX_INX,W	; Maximum field index defined for this database
    F	FLD_LOCK,L	; Storage for bit id of conditional write gate
    F	FLD_COLL,L	; Storage for collating bit i.d.
    F	ACT_QIO,L	; Ptr to QIO preprocessor for this database
    F	ACT_SHOW,L	; Ptr to "show" QIO to a specific CNF
    F	ACT_INSERT,L	; Ptr to CNF "pre-insert" action routine
    F	ACT_DELETE,L	; Ptr to CNF "mark-for-delete" action routine
    F	ACT_REMOVE,L	; Ptr to CNF "post-remove" action routine
    F	SCANNER,L	; Ptr to CNF scanner
    F	VEC_ACT,L,16	; Vector of action routine pointers
    F	END_ACT,L	; Mark the end of the vector
    F	VEC_MAND,L,24	; Vector of mandatory field i.d.'s
    F	END_MAND,L	;
    F	VEC_UNIQ,L,16	; Vector of i.d.'s of fields required to be
    F	END_UNIQ,L	; unique
    C	MAX_INX,95	; Maximum field index possible (0 indexed => 96 indexes)
    F	SEM_TAB,T,384	; Semantic table -- 4 bytes for each of 96 indexes

   ;F	SEM_TAB,T,4*CNR$C_MAX_INX	; Semantic table
   ;					;-also see CNF$T_MASKS definition
    L	LENGTH		; Structure size
	;
	;  The following defines the format of each entry in the semantic table
	;
    P	1
   	V<
	    SEM_OFF,8	; Byte offset from top of CNF to field
	    SEM_TYP,3	; Field type (bit,string,byte,word etc)
	    SEM_ACC,3	; Field access control
	    SEM_RT	; "Field" is actually an index of a routine to call
	    SEM_Z	; Set if field may be zero
	    SEM_MAX,16	; Max value byte or word may be assigned
	>
	V<
	    ,16		; Advance to SEM_MAX
	    SEM_SMX,12	; Field to store max size string
	    SEM_TAB,4	; Holds i.d. of string parse table
	>
	;
	; Define CNF$x_SEM_TYP values
	;
    C	SEM_BIT,0	; Type = bit
    C	SEM_B,1		; Type = byte
    C	SEM_W,2		; Type = word
    C	SEM_L,3		; Type = longword
    C	SEM_$,3		; Type if type = longword and the "field" is
			; obtained from an action routine
    C	SEM_STR,4	; Type = string descriptor
	;
	; Define field access control
	;
    C	ACC_RW,0	; General read/write
    C	ACC_RO,1	; Read only
    C	ACC_R,1		; Read only
    C	ACC_WO,2	; Write only		(for passwords, etc)
    C	ACC_W,2		; Write only		(for passwords, etc)
    C	ACC_CW,3	; Conditionally writable
    C	ACC_C,3		; Conditionally writable
    C	ACC_ER,4	; External read only 	(e.g., if from QIO)
    C	ACC_E,4		; External read only	(e.g., if from QIO)
	;
	; Define string parse table i.d.'s
	;
    C	SEM_T,0		; Transparent - all characters are legal
    C	SEM_A,1		; Upper case alpha or numerics only
    C	SEM_F,2		; Parse string as if file specification
    E

;
; Configuration Data Block (CNF)
;
; This is a general block structure used to carry a sub-block in the
; configuration data base of the NETACP.  The  CNF  and sub-block 
; semantics for each component type are store in the associate CNR
; described above.
;
$STRUCT	CNF

    F	FLINK,L		; Forward link
    F	BLINK,L		; Backward link
    F	SIZE,W		; Block size
    F	TYPE,B		; Block type
    F	FLG,B		; Flags defined as follows:
	V<M
	    FLG_CNR	; Block is actually a CNR
	    FLG_DELETE	; Block is a temporary CNF or marked for delete
	    FLG_ACP	; Block is a catch-all used by the ACP
	    FLG_NOEXT	; Block is used internally only.  It is not to be
			; displayed to the "external" world, i.e., above the
			; $QIO interface.
	    FLG_MRK1	; Special flags with different meanings for each 
	    FLG_MRK2	; database.  These flags are defined locally in module
	    FLG_MRK3	; NETCNFACT.MAR.
	>
    F	OFF_FREE,W	; Self-relative byte offset to free storage
    F	SIZ_FREE,W	; Bytes left in CNF free storage
    F	SIZ_USED,W	; Number of bytes used for storing strings
    F	ID,W		; Database dependent indentification data
    F	BOOLEAN,W	; Storage for values of parameters of type "bit"
    F	,W		; Spare -- reserved for future use
    F	MASK,T,12	;see CNR$C_MAX_INX definition
   ;F	MASK,T,CNR$C_MAX_INX/8	; One bit in mask for each possible field.
				; The bit is set while the field is active.
    L	LENGTH		; Structure size
    E

;
; REMOTE NODE INFORMATION
;
$STRUCT	NDI
    ;
    ; Session Control Information
    ;
    ;
    ;	Define node types
    ;
    C	DTY_UNK,-1	; Node type is unknown
    C	DTY_PH3,0	; Phase III full routing
    C	DTY_PH3N,1	; Phase III non routing
    C	DTY_PH2,2	; Phase II
    ;
    ;	The following are commonly defined for all nodes
    ;
    F	ADD,W		; Node address - zero if NDI is for local node
    F	CTI,W		; Counter timer (units = sec)
    F	CTA,L		; Abslute due timer for counters to be logged
    F	S_NNA,L 	; Name
    ;
    ;	The following are defined for some, but not most, nodes
    ;
    F	S_NLI,L		; Line used if NDI is a "loopback" node
    F	S_PUS,L		; Priv user id	
    F	S_PAC,L		; Priv account	
    F	S_PPW,L		; Priv password	
    F	S_NUS,L		; NonPriv user id
    F	S_NAC,L		; NonPriv account
    F	S_NPW,L		; NonPriv psw	
    F	S_RPA,L		; Receive password
    F	S_TPA,L		; Transmit password
    F	ACC,B		; Access switch (inbound,outbound,etc)
    F	PRX,B		; Proxy access swithc (inbound, outbound, etc)
    F	,W		; Spare used for alignment.  Reserved for future use
    ;
    ;	The following are for nodes to be downline-loaded or upline-dumped
    ;
    F	,B		; Spare used for alignment.  Reserved for future use
    F	SDV,B		; Service device type
    F	CPU,B		; CPU type 		
    F	STY,B		; Software type 	
    F	IHO,W		; Host address (input)
    F	OHO,W		; Host address (output)
    F	DAD,L		; Dump address 		
    F	DCT,L		; Dump count 		
    F	S_SLI,L		; Service line 		
    F	S_SPA,L		; Service password	
    F	S_LOA,L		; Load file 		
    F	S_SLO,L		; Secondary loader 	
    F	S_TLO,L		; Tertiary loader 	
    F	S_SID,L		; Software ID 		
    F	S_DUM,L		; Dump file 		
    F	S_SDU,L		; Secondary dumper 	
    L	LENGTH		; Structure size
    E


;
; LOCAL NODE INFORMATION
;
$STRUCT	  LNI
    ;
    ;	Define local node states
    ;
    C	STA_ON,0	; Node available for general use
    C	STA_OFF,1	; Node shutting down, no connects allowed
    C	STA_SHUT,2	; No new connects allowed - shutting down
    C	STA_RSTR,3	; Node available for outbound connects only
    C	STA_INIT,4	; State used for ACP initialization
    ;
    ;	Define the CNF structure
    ;
    F	ADD,W		; Node address
    F	STA,B		; State
    F	ETY,B		; Local node type

    F	MLK,W		; Maximum links allowed
    F	MAD,W		; Maximum node address
    F	MBU,W		; Maximum transport buffers
    F	MCO,W		; Maximum cost

    F	MHO,B		; Maximum hops
    F	MVI,B		; Maximum visits
    F	MLN,B		; Maximum circuits (used to be called lines)
    F	LPD,B		; Default LOOP data

    F	LPC,W		; Default LOOP count
    F	LPL,W		; Default LOOP length
    F	BUS,W		; Transport buffer size
    F	RSI,W		; Routine supression interval	(units = sec)
 
    F	IAT,W		; Inactivity timer		(units = sec)
    F	ITI,W		; Incoming timer		(units = sec)
    F	OTI,W		; Outgoing timer		(units = sec)
    F	RTI,W		; Routing timer			(units = sec)

    F	DFA,B		; Delay factor
    F	DWE,B		; Delay weight
    F	RFA,B		; Retransmit factor
    F	DAC,B		; Default access (inbound,outbound,etc)

    F	DPX,B		; Default proxy access (inbound,outbound,etc
    F	PIQ,W		; Pipeline quota
    F	,B		; Spare used for alignment.  Reserved for future use.

    F	SAD,L		; X.25 sub-address range
    F	S_NAM,L		; Node name
    F	S_IDE,L		; System identification
    F	S_NVE,L		; NSP version 
    F	S_RVE,L		; Routing version 
    F	S_MVE,L		; Network Management version

    L	LENGTH		; Structure size
    E

;
; NETWORK OBJECT INFORMATION
;
$STRUCT  OBI
    ;
    ;	Define CNF storage
    ;
    F	NUM,B		; Object number
    F	PRX,B		; Proxy login switch (inbound, outbound, etc)
    F	CHN,W		; Channel over which declaration occurred
    F	LPR,L		; Low order privilege mask
    F	HPR,L		; High order privilege mask
    F	UCB,L		; Associated NET UCB if declared task
    F	PID,L		; Associated process i.d. if declared task

    F	S_NAM,L		; Name
    F	S_FID,L		; File id 
    F	S_USR,L		; User id
    F	S_ACC,L		; Account
    F	S_PSW,L		; Password
    L	LENGTH		; Structure size
    E

;
; CIRCUIT INFORMATION
;
$STRUCT  CRI
    ;
    ;	Define CNF storage for fields used internally
    ;
    F	S_NAM,L		; Circuit name
    F	OWPID,L		; PID of temporary owner of line in service state
    F	CTA,L		; Absolute due time for counter logging
    ;
    ;	Define CNF storage for fields defined by the NICE protocol
    ;
    F	STA,B		; State
    F	CHN,B		; X.25 Channel No.
    F	LCT,W		; Counter timer 

    F	S_LOO,L		; Loopback name 
    F	HET,W		; Hello timer 
    F	LIT,W		; Listen timer 

    F	COS,B		; Cost 
    F	MRC,B		; Maximum recalls 
    F	RCT,W		; Recall timer

    F	S_NUM,L		; Call Number 
;	?_USR		; User entity identification
    F	POL,B		; Polling state 
    F	PLS,B		; Polling substate 
    F	TYP,B		; Type 

    F	S_DTE,L		; DTE 
    F	MBL,W		; Maximum block 
    F	MWI,B		; Maximum window
    F	TRI,B		; Tributary 

    F	BBT,W		; Babble timer 
    F	TRT,W		; Transmit timer 
    F	,W		; Spare
    F	CHN,W		; X.25 channel

    F	USE,B		; X.25 Usage 
    F	MRB,B		; Maximum receive buffers
    F	MTR,B		; Maximum transmits
    F	ACB,B		; Active base

    F	ACI,B		; Active increment
    F	IAB,B		; Inactive base
    F	IAI,B		; Inactive increment
    F	IAT,B		; Inactive threshold

    F	DYB,B		; Dying base
    F	DYI,B		; Dying increment
    F	DYT,B		; Dying threshold
    F	DTH,B		; Dead threshold
    
    F	XPT,B		; Transport protocol
    F	,B		; Spare
    F	,B		; Spare
    F	,B		; Spare
    L	LENGTH		; Structure size
    E

;
; PHYSICAL LINE INFORMATION
;
$STRUCT  PLI
    ;
    ;	Define CNF storage for fields used internally
    ;
    F	S_NAM,L		; Line name
    F	CTA,L		; Absolute due time for counter logging
    ;
    ;	Define CNF storage for fields defined by the NICE protocol
    ;
    F	BFN,B		; Number of buffers in receive pool
    F	STA,B		; State
    F	SUB,B		; Substate
    F	PRO,B		; Protocol

    F	LCT,W		; Counter timer
    F	STI,W		; Service timer
    F	HTI,W		; Holdback timer
    F	RTT,W		; Retransmit timer

    F	MBL,W		; Maximum block
    F	MRT,B		; Maximum retransmits
    F	MWI,B		; Maximum window

    F	SLT,W		; Scheduling timer
    F	DDT,W		; Dead timer
    F	DLT,W		; Delay timer
    F	SRT,W		; Stream timer
    L	LENGTH		; Structure size
    E

;
; EVENT LOGGING FILTER INFORMATION
;
$STRUCT	  EFI
    ;
    ;	Define the CNF structure
    ;
    F	SIN,W			; Sink node address
    F	SP1,W			; Spare
    F	B1,L			; For user defined use
    F	B2,L			; For user defined use

    F	S_EVE,L			; Event list
    F   S_SB1,L			; For user defined use
    F	S_SB2,L			; For user defined use
    F	S_SB3,L			; For user defined use

    L	LENGTH			; Structure size
    E

;
; EVENT LOGGING SINK INFORMATION
;
$STRUCT	  ESI
    ;
    ;	Define logging sink states
    ;
    C	STA_ON,0		; Logging is on
    C	STA_OFF,1		; Logging is off
    C	STA_HLD,2		; Hold events
    ;
    ;   Define logging sink types
    ;
    C	SNK_CON,1		; Console
    C	SNK_FIL,2		; File
    C	SNK_MON,3		; Monitor
    ;
    ;	Define the CNF structure
    ;
    F	SNK,B			; Sink type
    F	STA,B			; Sink state
    F	SP1,W			; Spare
    F	B1,L			; For user defined use
    F	B2,L			; For user defined use

    F	S_LNA,L			; Sink name
    F   S_SB1,L			; For user defined use
    F	S_SB2,L			; For user defined use
    F	S_SB3,L			; For user defined use
    L	LENGTH			; Structure size
    E

;
;    X.25 Access module parameters
;
;
;	C <
;
;	PCXA_NET, 300			; Network (ascic)
;	PCXA_NOD, 310			; Node
;	PCXA_USR, 320			; User (ascic)
;	PCXA_PSW, 321			; Password (ascic)
;	PCXA_ACC, 322			; Account (ascic)
;
;	>


;
;    X.25 Protocol module parameters
;
;
;	C <
;
;	PCXP_STA, 0			; State (coded byte)
;	PCXP_CTM, 100			; Counter timer (word)
;	PCXP_ACH, 1000			; Active channels (word)
;	PCXP_ASW, 1010			; Active switched (word)
;	PCXP_DTE, 1100			; DTE (ascic)
;	PCXP_GRP, 1101			; Group (ascic)
;	PCXP_NET, 1110			; Network (ascic)
;	PCXP_LIN, 1120			; Line (ascic)
;	PCXP_CHN, 1130			; Channels
;	PCXP_MCH, 1131			; Maximum channels (word)
;	PCXP_DBL, 1140			; Default block (word)
;	PCXP_DWI, 1141			; Default window (byte)
;	PCXP_MBL, 1150			; Maximum block (word)
;	PCXP_MWI, 1151			; Maximum window (byte)
;	PCXP_MCL, 1152			; Maximum clears (byte)
;	PCXP_MRS, 1153			; Maximum resets (byte)
;	PCXP_MST, 1154			; Maximum restarts (byte)
;	PCXP_CAT, 1160			; Call timer (byte)
;	PCXP_CLT, 1161			; Clear timer (byte)
;	PCXP_RST, 1162			; Reset timer (byte)
;	PCXP_STT, 1163			; Restart timer (byte)
;	PCXP_GDT, 1170			; Group DTE (ascic)
;	PCXP_GNM, 1171			; Group number (word)
;	PCXP_GTY, 1172			; Group type (coded byte)
;
;	>


;
;    X.25 server module parameters
;

;	C <
;
;	PCXS_CTM, 100			; Counter timer (word)
;	PCXS_ACI, 200			; Active circuits (word)
;	PCXS_DST, 300			; Destination (ascic)
;	PCXS_MCI, 310			; Maximum circuits (word)
;	PCXS_NOD, 320			; Node
;	PCXS_USR, 330			; Username
;	PCXS_SPW, 331			; Password to set (ascic)
;	PCXS_RPW, 331			; Password to read (coded byte - NMA$C_NODPW_)
;	PCXS_ACC, 332			; Account (ascic)
;	PCXS_OBJ, 340			; Object
;	PCXS_PRI, 350			; Priority (byte)
;	PCXS_CMK, 351			; Call mask (byte-counted hex)
;	PCXS_CVL, 352			; Call value (byte-counted hex)
;	PCXS_GRP, 353			; Group (ascic)
;	PCXS_NUM, 354			; Number (ascic)
;	PCXS_SAD, 355			; Subaddresses
;
;	>


;
;  Work Queue Elements (WQE) are used by the ACP to serialize and standardize
;  all schedulable but non-IRP oriented work.  Datalink state transition 
;  control and events originating from ASTs are examples.
;
;  The WQE structure is depicted below.  The WQE$B_SUB field is used to
;  determine if any special processing is needed when the WQE is queued or
;  dequeued as follows:
;
$STRUCT	WQE

    F	FLINK,L		; Queue forward link
    F	BLINK,L		; Queue backward link
    F	SIZE,W		; Bytes allocated for the WQE
    F	TYPE,B		; Structure type code
    F	SUB,B		; Structure sub-type code as follows:
    C<			; 
	SUB_BAS,0	; The WQE is the base of a list - NOTE low bit clear
			; for this SUB constant only!!!
			;
	SUB_ACP,1	; The WQE was spawned during normal internal ACP
			; activity, e.g., during IO$_ACPCONTROL Qio activity.
			; No special action is required when it is queued.
			; When it is dequeued, dispatch directly to the action
			; routine which responsible for deallocating it.
			;
	SUB_AST,3	; The WQE is the consequence of a miscellaneous AST,
			; e.g., a datalink Qio AST.  If its the first entry
			; queued then $WAKE the ACP.  When it is dequeued,
			; dispatch directly to the action routine -  which is
			; responsible for deallocating it.
			;
	SUB_MBX,5	; The WQE is the consequence of a mailbox read AST.  If
			; it is the first element queued then $WAKE the ACP.
			; When it is dequeued, it is sent to the mailbox
			; servicing routine - which permenantly owns the WQE.
			;
	SUB_TIM,7	; The WQE is the consequence of a timer AST.  If it is
			; the first element queued then $WAKE the ACP.  When
			; dequeued, another VMS timer must be set if there are
			; any more elements in the WQE timer queue.
	>		;
    F	ACTION,L	; Action routine address
    F	PM1,L		; Action routine first parameter
    S	EVT,0,B		; Event code - interpreted in the context of the
			; QUAL field
    S	QUAL,1,B	; REQIDT qualifier as follows:
    C<			;
	QUAL_DLL,1	; A data link event	- REQIDT is the LPD$W_PTH value
	QUAL_RTG,2	; An ACP routing event	- REQIDT is always zero
	QUAL_CTM,3	; A counter timer event	- REQIDT identifies data base
    	>		;
    S	REQIDT,2,W	; Request identifier - interpreted in the context of 
			; the QUAL field.
    F	PM2,L		; Action routine second parameter
    F	EVL_PKT,L	; Ptr to the packet header if the WQE is being used
			; for event logging
    F	EVL_CODE,W	; Event logging code if WQE is used for event logging
    F	EVL_DT1,B	; Event logging immediate data
    F	EVL_DT2,B	; Event logging immediate data
    L	LENGTH		; Structure size and begining of data area
    E

;
; DLLQIO  - Datalink $QIO parameter block
;
$STRUCT	DLLQIO

    F	FUNC,L		; Function code
    F	P1,L		; QIO P1 parameter
    F	P2,L		; QIO P2 parameter
    F	P3,L		; QIO P3 parameter
    F	P4,L		; QIO P4 parameter
    F	P5,L		; QIO P5 parameter
    L	LENGTH		; Structure size
    E

;
; DEVTRN - Device translation table
;
$STRUCT	DEVTRN

    F	NETMAN,B	; Count of Network Management device name
    F	NETMAN,T,5	; Network Management device name text
    F	VMS,B		; Count of VMS device name
    F	VMS,T,3		; VMS device name text
    F	DEV,B		; Device code
    C<,$C_DEV_,0,1	; Define device codes
	UNK		; Unknown device
	DMC		; DMC-11
	PCL		; PCL-11
	DMF		; DMF-32
	CI		; CI-780
	DMP		; DMP-11
	DUP		; DUP-11  (for X.25)
	KMC		; KMC-11  (for X.25)
    >
    F	PROT,B		; Default device protocol (NMA$C_LINPR...)
    F	CHAR,B		; Device characteristics
	V<M
	   MULTI	; Multi-unit device
	>
    L	LENGTH		; Structure size
    E
