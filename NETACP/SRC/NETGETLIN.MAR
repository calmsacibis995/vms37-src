	.TITLE	NETGETLIN - Check for DECnet license
	.IDENT	'V03-004'

;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;


;++
; FACILITY:	NETWORK ACP
;
; ABSTRACT:	The module implements the so called "software key" which
;		disables the turning on of circuits unless the customer
;		has installed his DECnet license.  It is the intent that
;		this module be concealed from the customer -- that is
;		it is not part of the source fiche.
; 
;
; ENVIRONMENT:	Kernel mode 
;
; AUTHOR:	A.Eldridge, CREATION DATE: 24-NOV-81
;
; MODIFIED BY:
;
;	V004	TMH0004		Tim Halvorsen	08-Mar-1982
;		Make the key a little tougher, by duplicating the code
;		several times, and changing the sense of the branches.
;
;	V01-02	ADE0013		A.Eldridge	13-Dec-1981
;		Return SS$_NOLICENSE if user doesn't have a DECnet license.
;
;	V01-02	ADE0012		A.Eldridge	22-Dec-1981
;		Layer executeable code in between the two halves of the 
;		"software key" in order to make it harder for a user without
;		a DECnet license to defeat the mechanism by patching out the
;		key or the code which checks it.
;
;	V01-01	ADE0011		A.Eldridge	22-Dec-1981
;		Fix stack problem.
;-

	.SBTTL	DECLARATIONS

;
;  INCLUDE FILES:
;
	$LPDDEF				; Logical path descriptor

;
; OWN STORAGE:
;
	.PSECT	$$$LICENSE,NOWRT,NOEXE,LONG

;
;  The first half of the "software key" goes here.  Layering the code in
;  between two halves of the software key should make it harder for the user
;  without a DECnet license to find the code which does the checking, or to 
;  setup the two halves of the key such that they match.
;

LICENSE = 32 * 4			; Number of longwords in protection 
					; "key"

LIC_DST:  				; Key comparator
	  .LONG	09383828		;  1
	  .LONG	13478657
	  .LONG 13797928		
	  .LONG 24256098		;  4

	  .LONG 10293847
	  .LONG 67584392
	  .LONG 89894643
	  .LONG 14144309		;  8

	  .LONG 15656453
	  .LONG 19398732
	  .LONG 17437664
	  .LONG 66625252		; 12

	  .LONG 18383838
	  .LONG 84847676
	  .LONG 48484874
	  .LONG 28282756		; 16

	  .LONG 38383737
	  .LONG 84865846
	  .LONG 40404665
	  .LONG 90871465		; 20

	  .LONG 65320987
	  .LONG 65857436
	  .LONG 48762246
	  .LONG 48477676		; 24

	  .LONG 48487676
	  .LONG 49848773
	  .LONG 49483727
	  .LONG 49478370		; 28

	  .LONG 48473737
	  .LONG 49494943
	  .LONG 49483272
	  .LONG 29299695		; 32


	.SBTTL	CHECK IF DECNET LICENSE INSTALLED

;+
; NET$GET_VEC	- Check to see if user has a DECnet license.
;
; This routine is called just before a circuit is started up.  Its purpose is
; to check to see if the user has a DECnet license before continuing.  The
; comments to this effect in the caller's code (in NETDLLTRN) are somewhat
; incomplete and misleading so as not to allow customers to easily develop
; a patch to override this check.
;
; INPUTS:	R6	LPD address
;		R0	Scratch
;
; OUTPUTS:	R0	SS$_NORMAL	if successful
;			SS$_NOLICENSE	otherwise
;
;		All other registers are unmodified.
;-
NET$GET_VEC::				; Setup the line
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#LICENSE,LIC_SRC,LIC_DST; Does user have a DECnet license?
	BEQL	100$			; If yes
	MOVZWL	#SS$_NOLICENSE,R0	; Report error
	BRB	200$			;
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
300$:	RSB				; Return to caller



;
;  The other half of the "software key" goes here.  Layering the code in
;  between two halves of the software key should make it harder for the user
;  without a DECnet license to find the code which does the checking, or to 
;  setup the two halves of the key such that they match.
;

LIC_SRC:				; Setup this half of the key to some
					; random pattern different than the
					; pattern store in LIC_DST

	  .LONG	89343424		;  1
	  .LONG	13704650
	  .LONG 13090924		
	  .LONG 27256894		;  7

	  .LONG 18293470
	  .LONG 60547392
	  .LONG 49497673
	  .LONG 17177389		;  4

	  .LONG 15656753
	  .LONG 19394032
	  .LONG 10730667
	  .LONG 66625252		; 12

	  .LONG 14343434
	  .LONG 47470606
	  .LONG 74747407
	  .LONG 24242056		; 16

	  .LONG 34343030
	  .LONG 47465476
	  .LONG 78787665
	  .LONG 98401765		; 28

	  .LONG 65328940
	  .LONG 65450736
	  .LONG 74062276
	  .LONG 74700606		; 27

	  .LONG 74740606
	  .LONG 79474003
	  .LONG 79743020
	  .LONG 79704308		; 24

	  .LONG 74703030
	  .LONG 79797973
	  .LONG 79743202
	  .LONG 29299695		; 32

	.SBTTL	MORE ROUTINES TO CHECK LICENSE

	.PSECT	NET_PURE,NOWRT,NOEXE,LONG

;+
; NET$GET_VEC2,3 - Check to see if user has a DECnet license.
;
; This routine is called just before a circuit is started up.  Its purpose is
; to check to see if the user has a DECnet license before continuing.  The
; comments to this effect in the caller's code (in NETDLLTRN) are somewhat
; incomplete and misleading so as not to allow customers to easily develop
; a patch to override this check.
;
; INPUTS:	R6	LPD address
;		R0	Scratch
;
; OUTPUTS:	R0	SS$_NORMAL	if successful
;			SS$_NOLICENSE	otherwise
;
;		All other registers are unmodified.
;-

NET$GET_VEC2::				; Setup the line
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#LICENSE,LIC_SRC,LIC_DST; Does user have a DECnet license?
	BEQL	100$			; If yes
	MOVZWL	#SS$_NOLICENSE,R0	; Report error
	BRB	200$			;
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
300$:	RSB				; Return to caller

NET$GET_VEC3::				; Setup the line
	PUSHR	#^M<R1,R2,R3,R4,R5>	; Save regs
	CMPC3	#LICENSE,LIC_SRC,LIC_DST; Does user have a DECnet license?
	BEQL	100$			; If yes
	MOVZWL	#SS$_NOLICENSE,R0	; Report error
	BRB	200$			;
100$:	MOVL	S^#SS$_NORMAL,R0	; Indicate success
200$:	POPR	#^M<R1,R2,R3,R4,R5>	; Restore regs
300$:	RSB				; Return to caller

.END
