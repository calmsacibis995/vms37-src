	.TITLE	SYSDASSGN - SYSTEM SERVICE DEASSIGN I/O CHANNEL
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 26-AUG-76
;
;	V02-009	RNG0002		Rod N. Gamache		04-Jan-1982
;		Call driver's CANCEL entry point with CAN$C_DASSGN reason code.
;
;	V02-008	ROW0038		Ralph O. Weber		26-OCT-1981
;		Change use of DDT$L_CANCEL to assume that the cell contains
;		a system virtual address.
;
;	V02-007 RNG0001		Rod N. Gamache		28-Aug-1981
;		Set cancel reason code and call special cancel routine.
;
;	V02-006 ROW0006		Ralph O. Weber		30-JUL-1981
;		Setup to get DDT address from UCB instead of DDB.
;
;	V02-005	STJ0012		Steven T. Jeffreys	04-Dec-1980
;		Clear OPR bit in UCB$L_DEVCHAR on last channel deassign
;		for terminals, remote terminals, and mailboxes.
;
;	V02-004	KDM29444	KATHLEEN D. MORSE	11-APR-1980
;		Change event flag used in $QIOW deassign to be #30
;		instead of #31, which is used by $CANCEL.
;
; SYSTEM SERVICE DEASSIGN I/O CHANNEL
;
; MACRO LIBRARY CALLS
;
 
	$CANDEF				;DEFINE CANCEL REASON CODES
	$CCBDEF				;DEFINE CCB OFFSETS
	$DDBDEF				;DEFINE DDB OFFSETS
	$DDTDEF				;DEFINE DDT OFFSETS
	$IODEF				;DEFINE I/O FUNCTION CODES
	$IPLDEF				;DEFINE INTERRUPT PRIORITY LEVELS
	$PCBDEF				;DEFINE PCB OFFSETS
	$PRDEF				;DEFINE PROCESSOR REGISTERS
	$RSNDEF				;DEFINE RESOURCE WAIT NUMBERS
	$SSDEF				;DEFINE SYSTEM STATUS VALUES
	$UCBDEF				;DEFINE UCB OFFSETS
 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
 
CHAN=4					;I/O CHANNEL NUMBER

	.SBTTL	DEASSIGN I/O CHANNEL
;+
; EXE$DASSGN - DEASSIGN I/O CHANNEL
;
; THIS SERVICE DEASSIGNS A PREVIOUSLY ASSIGNED I/O CHANNEL AND CLEARS THE
; LINKAGE AND CONTROL INFORMATION IN THE CORRESPONDING CHANNEL CONTROL BLOCK.
; IF ANY I/O IS OUTSTANDING ON THE CHANNEL IT IS CANCELLED. IF A FILE IS
; OPEN ON THE CHANNEL IT IS CLOSED. IF A MAILBOX WAS ASSOCIATED WITH THE
; DEVICE WHEN IT WAS ASSIGNED, THE LINKAGE TO THE MAILBOX IS CLEARED. IF THE
; THE CHANNEL IS LAST ONE ASSIGNED TO THE DEVICE AND IT IS MARKED FOR DIS-
; MOUNT, THEN THE DISMOUNT IS COMPLETED.
;
; INPUTS:
;
;	CHAN(AP) = NUMBER OF THE I/O CHANNEL TO DEASSIGN.
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO DEASSIGN CHANNEL.
;
;		R0 = SS$_IVCHAN - INVALID CHANNEL NUMBER SPECIFIED.
;
;		R0 = SS$_NOPRIV - SPECIFIED CHANNEL IS NOT ASSIGNED TO A
;			DEVICE OR THE CALLER DOES NOT HAVE SUFFICIENT
;			PRIVILEGE TO ACCESS THE CHANNEL.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION.
;-
 
	.ENTRY	EXE$DASSGN,^M<R2,R3,R4,R5,R6,R7,R8>
	MOVZWL	CHAN(AP),R5		;GET CHANNEL NUMBER
	MOVL	R5,R0			;COPY I/O CHANNEL NUMBER
	JSB	IOC$VERIFYCHAN		;VERIFY CHANNEL NUMBER
	BLBC	R0,50$			;IF LBC INVALID CHANNEL
	MOVL	R1,R6			;COPY ADDRESS OF CCB
	MOVL	R2,R7			;SAVE CHANNEL INDEX
	MOVZBL	#CAN$C_DASSGN,-(SP)	;PUSH DEASSIGN CODE
	MOVZWL	R5,-(SP)		;PUSH CHANNEL NUMBER
	CALLS	#2,G^EXE$CANCELN	;CANCEL I/O ON CHANNEL
20$:	TSTL	CCB$L_WIND(R6)		;FILE ACCESSED ON CHANNEL?
	BEQL	30$			;IF EQL NO
	$QIOW_S	#30,R5,#IO$_DEACCESS	;DEACCESS FILE
	BLBS	R0,30$			;IF LBS SUCCESSFUL COMPLETION
	CMPW	#SS$_FILNOTACC,R0	;NO FILE ACCESSED?
	BNEQ	50$			;IF NEQ NO
30$:	MOVPSL	-(SP)			;SAVE CURRENT PROCESSOR STATUS
	SETIPL	#IPL$_ASTDEL		;RAISE TO AST DELIVERY LEVEL
	TSTW	CCB$W_IOC(R6)		;ANY I/O STILL OUTSTANDING?
	BEQL	60$			;IF EQL NO
	SETIPL	#IPL$_SYNCH		;RAISE TO SYNCHRONIZATION LEVEL
	MFPR	#PR$_ASTLVL,R0		;READ CURRENT AST LEVEL
	BEQL	40$			;IF EQL AST QUEUED
	MOVZWL	#RSN$_ASTWAIT,R0	;SET AST WAIT RESOURCE WAIT NUMBER
	BSBW	SCH$RWAIT		;WAIT FOR AST
40$:	SETIPL	#0			;ALLOW INTERRUPTS
	BRB	20$			;
50$:	RET				;
;
; DEASSIGN CHANNEL AND CHECK IF THIS WAS THE LAST CHANNEL ASSIGNED TO DEVICE
;
60$:	BSBW	SCH$IOLOCKW		;LOCK I/O DATABASE FOR WRITE ACCESS
	MOVL	CCB$L_UCB(R6),R5	;GET ASSIGNED DEVICE UCB ADDRESS
	CLRB	CCB$B_AMOD(R6)		;DEASSIGN CHANNEL
	DECW	UCB$W_REFC(R5)		;DECREMENT DEVICE REFERENCE COUNT
	BEQL	70$			;IF EQL LAST REFERENCE
	CMPW	#1,UCB$W_REFC(R5)	;UCB REFERENCE COUNT ONE?
	BNEQ	120$			;IF NEQ NO
	BBC	S^#DEV$V_ALL,UCB$L_DEVCHAR(R5),120$ ;IF CLR, DEVICE NOT ALLOCATED
	CMPL	PCB$L_PID(R4),UCB$L_PID(R5) ;ALLOCATED TO CURRENT PROCESS?
	BNEQ	120$			;IF NEQ NO
	BRB	80$			;
;
; DEALLOCATE DEVICE AND IF DISMOUNTING, CLEAR MOUNT OPTIONS AND DEALLOCATE VCB
;
70$:	CLRL	UCB$L_PID(R5)		;CLEAR OWNER PROCESS ID
	bitl	#dev$m_trm!dev$m_mbx,-	;Is this a terminal, remote terminal or mailbox?
		ucb$l_devchar(r5)	;
	beql	80$			;Branch if not.
	bbsc	s^#dev$v_opr,-		;Clear OPR bit.
		ucb$l_devchar(r5),80$	;This is an implicit operator disable.
80$:	BBC	S^#DEV$V_DMT,UCB$L_DEVCHAR(R5),90$ ;IF CLR, NOT MARKED FOR DISMOUNT
	BBC	S^#DEV$V_FOR,UCB$L_DEVCHAR(R5),90$ ;IF CLR, STRUCTURED VOLUME
	BICL	#DEV$M_DMT!DEV$M_FOR!-	;CLEAR MARKED FOR DISMOUNT, FOREIGN, AND
		DEV$M_RCK!DEV$M_WCK!-	;READ/WRITE CHECK, AND
		DEV$M_SWL!-		;SOFTWARE WRITE LOCKED, AND
		DEV$M_MNT,UCB$L_DEVCHAR(R5) ;MOUNTED
	MOVL	UCB$L_VCB(R5),R0	;GET ADDRESS OF VCB
	BEQL	90$			;IF EQL NONE
	CLRL	UCB$L_VCB(R5)		;CLEAR ADDRESS OF VCB
	BSBW	EXE$DEANONPAGED		;DEALLOCATE VCB
	CLRW	UCB$W_VPROT(R5)		;CLEAR VOLUME PROTECTION MASK
	BICW	#UCB$M_VALID,UCB$W_STS(R5) ;CLEAR SOFTWARE VOLUME VALID
;
; CALL DRIVER'S CANCEL ROUTINE FOR ANY SPECIAL CLEANUP
;
90$:	MOVL	UCB$L_DDT(R5),R0	;GET ADDRESS OF DDT
	SETIPL	UCB$B_FIPL(R5)		;RAISE TO DEVICE FORK IPL
	MOVL	UCB$L_IRP(R5),R3	;GET CURRENT I/O PACKET ADDRESS
	MOVL	R7,R2			;SET CHANNEL INDEX
	MOVZBL	#CAN$C_DASSGN,R8	;INDICATE CALLED FROM DEASSIGN
	JSB	@DDT$L_CANCEL(R0)	;CALL CANCEL I/O ROUTINE
	SETIPL	#IPL$_ASTDEL		;LOWER TO AST DELIVERY LEVEL
;
; CHECK IF CHANNEL ASSOCIATED A MAILBOX AND IF SO, CLEAR LINKAGE
;
120$:	BBC	#CCB$V_AMB,CCB$B_STS(R6),130$	;IF CLR, NO MAILBOX ASSOCIATED
	MOVL	R5,R3			;COPY ADDRESS OF DEVICE UCB
	MOVL	UCB$L_AMB(R5),R5	;GET ASSOCIATED MAILBOX UCB ADDRESS
	BEQL	130$			;IF EQL NONE
	BBC	S^#DEV$V_MBX,-		;IF CLR, DEVICE NOT A MAILBOX
		UCB$L_DEVCHAR(R5),130$	;
	CLRL	UCB$L_AMB(R3)		;CLEAR ASSOCIATED MAILBOX ADDRESSS
	DECW	UCB$W_REFC(R5)		;DECREMENT MAILBOX UCB REFERENCE COUNT
	BSBW	IOC$DELMBX		;CHECK FOR MAILBOX DELETION
;
; IF ASSIGNED DEVICE IS A MAILBOX TYPE DEVICE, CHECK IF IT SHOULD BE DELETED
;
130$:	MOVL	CCB$L_UCB(R6),R5	;RETRIEVE ASSIGNED DEVICE UCB ADDRESS
	BBC	S^#DEV$V_MBX,UCB$L_DEVCHAR(R5),140$ ;IF CLR, NOT A MAILBOX TYPE
	BSBW	IOC$DELMBX		;CHECK FOR DELETION OF UCB
140$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION
	JMP	IOC$UNLOCK		;UNLOCK I/O DATA BASE AND RETURN
 
	.END
