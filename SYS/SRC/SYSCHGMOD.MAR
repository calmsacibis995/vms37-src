	.TITLE	SYSCHGMOD - SYSTEM SERVICES TO CHANGE MODE
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:
;
; SYSTEM SERVICES TO CHANGE MODE
;
; ABSTRACT:
;
;	CHANGE MODE TO EXECUTIVE SYSTEM SERVICE
;	CHANGE MODE TO KERNEL SYSTEM SERVICE
;
; AUTHOR: D. N. CUTLER, CREATION DATE: 30-SEP-76
;
; MODIFIED BY:
;
;	V02-003	STJ0115		Steven T. Jeffreys	02-Sep-1981
;		Liberal rewrite to increase speed.  Optimized for $CMKRNL.
;
;	V02-002	KDM0037		Kathleen D. Morse	12-Feb-1981
;		Change non-kernel mode references to SCH$GL_CURPCB
;		to use CTL$GL_PCB instead.
;
;
;--
	.PAGE
;
; MACRO LIBRARY CALLS
;
 
	$PCBDEF				;DEFINE PCB OFFSETS
	$PRVDEF				;DEFINE PRIVILEGE BITS
	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
	$SFDEF				;DEFINE STACK FRAME OFFSETS
	$SSDEF				;DEFINE SYSTEM STATUS VALUES
 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
 
ROUTIN=4				;ADDRESS OF ROUTINE TO BE EXECUTED
ARGLST=8				;ADDRESS OF ARGUMENT LIST
	.PAGE
	.SBTTL	CHANGE MODE TO EXECUTIVE AND KERNEL
;+
; EXE$CMEXEC - CHANGE MODE TO EXECUTIVE
; EXE$CMKRNL - CHANGE MODE TO KERNEL
;
; THESE SERVICES PROVIDE THE CAPABILITY TO CHANGE THE CURRENT PROCESSOR
; ACCESS MODE AND CALL A SPECIFIED ROUTINE WITH A SPECIFIED ARGUMENT LIST.
;
; INPUTS:
;
;	ROUTIN(AP) = ADDRESS OF ROUTINE TO BE EXECUTED AT SPECIFIED MODE.
;	ARGLST(AP) = ADDRESS OF ARGUMENT LIST TO BE PASSED TO ROUTINE.
;
;	IF ENTRY AT EXE$CMKRNL, THEN
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO PERFORM SPECIFIED ROUTINE.
;
;		R0 = SS$_NOPRIV - PROCESS DOES NOT HAVE PRIVILEGE TO CHANGE
;			TO THE SPECIFIED ACCESS MODE.
;
;		R0 = FINAL VALUE RETURNED BY EXECUTED ROUTINE.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = FINAL VALUE RETURNED BY EXECUTED ROUTINE.
;-
 
	.ENABLE	LSB
	.ENTRY	EXE$CMEXEC,^M<R4>
	MOVL	G^CTL$GL_PCB,R4		;GET CURRENT PCB ADDRESS
	BBS	#PRV$V_CMEXEC,-		;BRANCH IF PROCESS HAS CMEXEC PRIVILEGE
		@PCB$L_PHD(R4),20$	;
	BRB	10$			;CONTINUE IN COMMON CODE
	.ENTRY	EXE$CMKRNL,^M<R4>
10$:	MOVPSL	R0			;GET PSL
	BBS	#PSL$V_PRVMOD+1,R0,30$	;BRANCH IF CALLER NOT IN EXEC OR KERNEL
	;
	; CALL THE SPECIFIED ROUTINE, PASSING IT THE SPECIFIED ARGUEMENT LIST.
	; IF THE ROUTINE RETURNS A SUCCESS STATUS IN R0, TAKE A FAST EXIT PATH
	; OUT OF THE SYSTEM SERVICE.  THE IDEA IS TO AVOID A "RET" INSTRUCTION,
	; WHICH IS FAR SLOWER THAN THE "MOVL" AND "ADDL".  IF THE ROUTINE
	; RETURNS A FAILURE STATUS, "RET" BACK TO THE SYSTEM SERVICE DISPATCHER
	; TO USE THE SPECIAL SYSTEM SERVICE FAILURE CODE PATH.
	;
20$:	CALLG	@ARGLST(AP),@ROUTIN(AP)	;CALL SPECIFIED ROUTINE
	BLBC	R0,40$			;IF ERROR, THEN TAKE 'NORMAL' EXIT PATH
	MOVL	SF$L_SAVE_FP(FP),FP	;RESTORE FRAME POINTER
	ADDL	S^#EXE$C_CMSTKSZ,SP	;CLEAN STACK BACK TO PC, PSL
	REI				;RETURN FROM THE SYSTEM SERVICE CALL
30$:	BBS	#PRV$V_CMKRNL,-		;BRANCH IF PROCESS HAS CMKRNL PRIVILEGE
		@PCB$L_PHD(R4),20$	;
	MOVZWL	#SS$_NOPRIV,R0		;SET ERROR STATUS
40$:	RET				;
 
	.DISABLE LSB
	.END
