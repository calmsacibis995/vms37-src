	.TITLE	SCHED RESCHEDULING INTERRUPT HANDLER
	.IDENT	'V03-001'
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; MODIFIED BY:
;
;	V03-001	KDM0083		Kathleen D. Morse	31-Mar-1982
;		Add multi-processing hooks for replacement scheduling routines.
;
;
	.PAGE
; INCLUDE FILES:

	$DYNDEF				;STRUCTURE TYPE CODE DEFINITIONS
	$IPLDEF				;INTERRUPT PRIORITY LEVEL DEFINITIONS
	$PCBDEF				;PCB DEFINITIONS
	$PHDDEF				;PHD DEFINITIONS
	$PRDEF				;PROCESSOR REGISTER DEFINITIONS
	$STATEDEF			;STATE DEFINITIONS
	.PSECT	AEXENONPAGED,LONG	; NONPAGED EXEC
	.PAGE
	.SBTTL	SCH$RESCHED RESCHEDULING INTERRUPT HANDLER
;++
; SCH$RESCHED - RESCHEDULING INTERRUPT HANDLER
;
; THIS ROUTINE IS ENTERED VIA THE IPL 3 RESCHEDULING INTERRUPT.
; THE VECTOR FOR THIS INTERRUPT IS CODED TO CAUSE EXECUTION
; ON THE KERNEL STACK.
;
; ENVIRONMENT:
;	IPL=3 MODE=KERNEL IS=0
; INPUT:
;	00(SP)=PC AT RESCHEDULE INTERRUPT
;	04(SP)=PSL AT INTERRUPT.
;--
	.ALIGN	LONG
MPH$RESCHED::				;MULTI-PROCESSING CODE HOOKS IN HERE
SCH$RESCHED::				;RESCHEDULE INTERRUPT HANDLER
	SETIPL	#IPL$_SYNCH		;SYNCHRONIZE SCHEDULER WITH EVENT REPORTING
	SVPCTX				;SAVE CONTEXT OF PROCESS
	MOVL	W^SCH$GL_CURPCB,R1	;GET ADDRESS OF CURRENT PCB
	MOVZBL	PCB$B_PRI(R1),R2	;CURRENT PRIORITY
	BBSS	R2,W^SCH$GL_COMQS,10$	;MARK QUEUE NON-EMPTY
10$:	MOVW	#SCH$C_COM,PCB$W_STATE(R1) ;SET STATE TO RES COMPUTE
	MOVAQ	W^SCH$AQ_COMT[R2],R3	;COMPUTE ADDRESS OF QUEUE
	INSQUE	(R1),@(R3)+		;INSERT AT TAIL OF QUEUE

;+
; SCH$SCHED - SCHEDULE NEW PROCESS FOR EXECUTION
;
; THIS ROUTINE SELECTS THE HIGHEST PRIORITY EXECUTABLE PROCESS
; AND PLACES IT IN EXECUTION.
;-
MPH$SCHED::				;MULTI-PROCESSING CODE HOOKS IN HERE
SCH$SCHED::				;SCHEDULE FOR EXECUTION
	SETIPL	#IPL$_SYNCH		;SYNCHRONIZE SCHEDULER WITH EVENT REPORTING
	FFS	#0,#32,W^SCH$GL_COMQS,R2	;FIND FIRST FULL STATE
	BEQL	SCH$IDLE		;NO EXECUTABLE PROCESS??
	MOVAQ	W^SCH$AQ_COMH[R2],R3	;COMPUTE QUEUE HEAD ADDRESS
	REMQUE	@(R3)+,R4		;GET HEAD OF QUEUE
	BVS	QEMPTY			;BR IF QUEUE WAS EMPTY (BUG CHECK)
	BNEQ	20$			;QUEUE NOT EMPTY
	BBCC	R2,W^SCH$GL_COMQS,20$	;SET QUEUE EMPTY
20$:					;
	CMPB	#DYN$C_PCB,PCB$B_TYPE(R4)  ;MUST BE A PROCESS CONTROL BLOCK
	BNEQ	QEMPTY			;OTHERWISE FATAL ERROR
	MOVW	#SCH$C_CUR,PCB$W_STATE(R4) ;SET STATE TO CURRENT
	MOVL	R4,W^SCH$GL_CURPCB	;NOTE CURRENT PCB LOC
	CMPB	PCB$B_PRIB(R4),PCB$B_PRI(R4) ;CHECK FOR BASE
					;PRIORITY=CURRENT
	BEQL	30$			;YES, DONT FLOAT PRIORITY
	BBC	#4,PCB$B_PRI(R4),30$	;DONT FLOAT REAL TIME PRIORITY
	INCB	PCB$B_PRI(R4)		;MOVE TOWARD BASE PRIO
30$:	MOVB	PCB$B_PRI(R4),W^SCH$GB_PRI	;SET GLOBAL PRIORITY
	MTPR	PCB$L_PHYPCB(R4),#PR$_PCBB 	;SET PCB BASE PHYS ADDR
	LDPCTX				;RESTORE CONTEXT
	REI				;NORMAL RETURN

SCH$IDLE:				;NO ACTIVE, EXECUTABLE PROCESS
	SETIPL	#IPL$_SCHED		;DROP IPL TO SCHEDULING LEVEL
	MOVB	#32,W^SCH$GB_PRI	;SET PRIORITY TO -1(32) TO SIGNAL IDLE
	BRB	SCH$SCHED		;AND TRY AGAIN

QEMPTY:	BUG_CHECK QUEUEMPTY,FATAL	;SCHEDULING QUEUE EMPTY

	.END
