	.TITLE	SYSSETPRV - SYSTEM SERVICE TO SET PROCESS PRIVILEGES
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; LEN KAWELL 10-SEP-1979
;
; MODIFIED BY:
;
;	V02-003	ACG0200		Andrew C. Goldstein,	10-Mar-1981  15:54
;		Store previous privileges after reading new mask
;		Add alternate success if not all privileges authorized
;
;	202	RIH0081		RICHARD I. HUSTVEDT 		04-APR-1980
;		USE PROCESS HEADER WINDOW FOR ALL REFERENCES.
;
;**
;
; SYSTEM SERVICE TO SET A PROCESS'S PRIVILEGES
;
	.PAGE
	.SBTTL	DECLARATIONS
;
; MACRO LIBRARY CALLS
;
 
	$PCBDEF				;PROCESS CONTROL BLOCK
	$PHDDEF				;PROCESS HEADER
	$PSLDEF				;PROCESSOR STATUS LONGWORD
	$PRVDEF				;PRIVILEGES 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
ENBFLG		= 4			;ENABLE INDICATOR, 0=DISABLE, 1=ENABLE
PRVADR		= 8			;PRIVILEGE MASK ADDRESS
PRMFLG		= 12			;PERMANENT FLAG, 0=TEMPORARY, 1=PERMANENT
PRVPRV		= 16			;PREVIOUS PRIVILEGES BUFFER ADDRESS
;
; OWN STORAGE
;
	.PSECT	YEXEPAGED		;PAGED DATA AND CODE

	.PAGE
	.SBTTL	SET PRIVILEGE
;+
; EXE$SETPRV - SET PROCESS PRIVILEGE SYSTEM SERVICE
;
; THIS SERVICE PROVIDES THE CAPABILITY FOR A PROCESS TO SET ITS PRIVILEGES.
;
; INPUTS:
;
;	ENBFLG(AP) = ENABLE INDICATOR.
;			1 INDICATES PRIVILEGES ARE TO BE ENABLED.
;			0 INDICATES PRIVILEGES ARE TO BE DISABLED.
;	PRVADR(AP) = ADDRESS OF A 64-BIT MASK SPECIFYING THE PRIVILEGES TO
;			BE ENABLED OR DISABLED.
;	PRMFLG(AP) = PERMANENT INDICATOR.
;			1 INDICATES PROCESS PERMANENT PRIVILEGES ENABLED/DISABLED.
;			0 INDICATES ONLY THE TEMPORARY CURRENT PRIVILEGES.
;	PRVPRV(AP) = ADDRESS OF A QUADWORD BUFFER TO REVEIVE THE PREVIOUS
;			PRIVILEGE MASK.
;
;	R4 = ADDRESS OF CURRENT PROCESS PCB.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO SET PRIVILEGES.
;
;		R0 = SS$_ACCVIO - PARAMETER VALUE CANNOT BE READ BY CALLING
;			ACCESS MODE.
;
;		R0 = SS$_IVSTSFLG - EITHER PRMFLG OR ENBFLG HAVE RESERVED
;			BITS SET.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION, SPECIFIED PRIVILEGES
;			DISABLED OR ALL SPECIFIED PRIVILEGES ENABLED
;
;		R0 = SS$_NOTALLPRIV - SOME PRIVILEGES THAT WERE REQUESTED
;			WERE NOT AUTHORIZED AND WERE NOT GRANTED
;
;
;-
	.ENTRY	EXE$SETPRV,-		;SET PROCESS PRIVILEGES
		^M<R2,R3,R4,R5,R6>	;(ENTRY MASK)
	MOVL	@#CTL$GL_PHD,R5		;GET PROCESS HEADER ADDRESS
	MOVL	PRMFLG(AP),R6		;GET PERMANENT/TEMPORARY FLAG
	BITL	#^C<1>,R6		;ANY BITS BUT DEFINED BIT(S) SET?
	BNEQ	IVSTSFLG		;IF NEQ YES
;
; CHECK ACCESS TO PRIVILEGE MASK ARGUMENT
;
	MOVL	PRVADR(AP),R2		;GET PRIVILEGE MASK ADDRESS
	BEQL	5$			;IF EQL NONE
	IFNORD	#8,(R2),ACCVIO		;CHECK READ ACCESS TO MASK
	MOVQ	(R2),R2			;GET SPECIFIED PRIVILEGES
;
; RETURN CURRENT PRIVILEGE MASK, IF DESIRED
;
5$:	MOVL	PRVPRV(AP),R0		;GET PREVIOUS PRIVILEGES BUFFER ADDRESS
	BEQL	10$			;IF EQL NONE
	IFNOWRT	#8,(R0),ACCVIO		;CHECK WRITE ACCESS TO BUFFER
	MOVQ	PCB$Q_PRIV(R4),(R0)	;ASSUME CURRENT PRIVILEGES DESIRED
	BLBC	R6,10$			;IF LBC CURRENT PRIVILEGES DESIRED
	MOVQ	CTL$GQ_PROCPRIV,(R0)	;RETURN PROCESS PERMANENT PRIVILEGES

10$:	TSTL	PRVADR(AP)		;CHECK PRIVILEGE MASK ADDRESS
	BEQL	SUCCESS			;IF EQL NONE - ALL DONE
	BLBC	ENBFLG(AP),DISABLE	;IF LBC DISABLE PRIVILEGES
	BRB	ENABLE			;ELSE ENABLE PRIVILEGES
;
; EXIT SERVICE
;
IVSTSFLG:				;INVALID STATUS FLAG
	MOVZWL	#SS$_IVSTSFLG,R0	;SET FAILURE STATUS
	RET
ACCVIO:					;ACCESS VIOLATION
	MOVZWL	S^#SS$_ACCVIO,R0	;SET FAILURE STATUS
	RET
SUCCESS:				;SUCCESSFUL COMPLETION
	MOVZWL	S^#SS$_NORMAL,R0	;SET SUCCESS STATUS
	RET				;
;
; ENABLE SPECIFIED PRIVILEGES
;
ENABLE:					;ENABLE SPECIFIED PRIVILEGES
	MOVZWL	S^#SS$_NORMAL,-(SP)	;ASSUME SUCCESS
	MOVPSL	R0			;GET CURRENT PSL
	CMPZV	#PSL$V_PRVMOD,-		;WAS PREVIOUS MODE EXEC OR KERNEL?
		#PSL$S_PRVMOD,R0,#PSL$C_EXEC
	BLEQ	20$			;IF LEQ YES - CAN ENABLE ANYTHING
	MOVQ	PHD$Q_AUTHPRIV(R5),R0	;GET AUTHORIZED PRIVILEGES
	BBS	#PRV$V_SETPRV,R0,20$	;IF SETPRV SET, CAN ENABLE ANYTHING
	BLBS	R6,10$			;IF PERMANENT, DON'T GET IMAGE PRIVILEGES
	BISL	PHD$Q_IMAGPRIV(R5),R0	;ADD IMAGE PRIVILEGES
	BISL	PHD$Q_IMAGPRIV+4(R5),R1	;...
10$:	MCOML	R0,R0			;COMPLEMENT AUTHORIZED PRIVILEGES
	MCOML	R1,R1			;...
	BITL	R0,R2			;CHECK IF ANY REQUESTED PRIVILEGES
	BNEQ	15$			;ARE NOT AUTHORIZED
	BITL	R1,R3
	BEQL	16$
15$:	MOVZWL	#SS$_NOTALLPRIV,(SP)	;SET ALTERNATE SUCCESS
16$:	BICL	R0,R2			;CLEAR ANY PRIVILEGES NOT AUTHORIZED
	BICL	R1,R3			;...
20$:
	BISL	R2,PCB$Q_PRIV(R4)	;SET CURRENT PRIVILEGES
	BISL	R3,PCB$Q_PRIV+4(R4)	;
	BISL	R2,PHD$Q_PRIVMSK(R5)	;(SET OTHER COPY TOO)
	BISL	R3,PHD$Q_PRIVMSK+4(R5)	;...
	BLBC	R6,SUCCESS		;IF NOT PERMANENT - DONE
	BISL	R2,CTL$GQ_PROCPRIV	;SET PERMANENT PROCESS PRIVILEGES
	BISL	R3,CTL$GQ_PROCPRIV+4	;...
	POPL	R0			;GET RETURN STATUS CODE
	RET
;
; DISABLE SPECIFIED PRIVILEGES
;
DISABLE:				;DISABLE PRIVILEGES
	BICL	R2,PCB$Q_PRIV(R4)	;CLEAR CURRENT PRIVILEGES
	BICL	R3,PCB$Q_PRIV+4(R4)	;...
	BICL	R2,PHD$Q_PRIVMSK(R5)	;(CLEAR IN OTHER COPY TOO)
	BICL	R3,PHD$Q_PRIVMSK+4(R5)	;...
	BLBC	R6,SUCCESS		;IF NOT PERMANENT - DONE
	BICL	R2,CTL$GQ_PROCPRIV	;CLEAR PERMANENT PROCESS PRIVILEGES
	BICL	R3,CTL$GQ_PROCPRIV+4	;...
	BRW	SUCCESS			;DONE

	.END
