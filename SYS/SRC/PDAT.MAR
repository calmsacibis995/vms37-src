	.TITLE	PDAT PROCESS DATA BASE
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY:	EXECUTIVE,  PROCESS DATA BASE
;
; ABSTRACT:	PDAT ALLOCATES AND INITIALIZES THE STORAGE FOR THE
;	PROCESS DATA BASE, WHICH CONTAINS THE PCB, PHD AND STACK FOR
;	THE NULL PROCESS AND SWAPPER PROCESS.
;
; ENVIRONMENT:
;
;
; AUTHOR: RICHARD I. HUSTVEDT	, CREATION DATE: 23-NOV-76
;
; MODIFIED BY:
;
;	V02-005	LJK0097		Lawrence J. Kenah	3-Dec-1981
;		Initialize all priority fields in PCB and PHD for
;		both swapper and null process.
;
;	V02-004	LJK0067		Lawrence J. Kenah	15-Sep-1981
;		Move kernel stacks for SWAPPER and NULL so that they are
;		adjacent to FCP data area. This prevents the exception and
;		bugcheck code from overwriting valuable data when the system
;		is manually crashed while the null process is executing.
;
;	V02-003	SRB0029		Steve Beckhardt		17-Jul-1981
;		Added code to initialize lock queue header to GENPCB macro
;
;	V02-002	KTA0024		Kerbey T. Altmann	30-Jun-1981
;		Cause SWAPPER to start up with its PCB addr in R4.
;
;--
	.PAGE
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
	$DYNDEF			;DYNAMIC DATA STRUCTURE TYPE DEFINITIONS
	$PCBDEF			;PROCESS CONTROL BLOCK DEFINITIONS
	$PHDDEF			;PROCESS HEADER DEFINITIONS
	$SGNDEF	GLOBAL		;DEFINE SYSGEN VALUES
	$STATEDEF		;DEFINE STATE NUMBERS
;
; EXTERNAL SYMBOLS:
;

SCH$C_MAXPIX==SGN$C_NPROCS-1				; MAXIMUM PIX

;
; MACROS:
;
	.LIST	MEB
	.MACRO	PHD	SYM
	.=PHD...+PHD$'SYM
	.ENDM	PHD

	.MACRO	PCB	SYM
	.=PCB...+PCB$'SYM
	.ENDM	PCB


;
; MACRO TO GENERATE PCB
;
	.MACRO	GENPCB LBL,UIC=0,PHD,PRIORITY,PID,PNAME

	.ALIGN	QUAD
PCB...=.
LBL==.
	.BLKB	PCB$C_LENGTH
SAV...=.					; SAVE FOR CONTINUATION

	PCB	L_SQFL
	.LONG	.
	.LONG	.-4

	PCB	W_SIZE
	.WORD	PCB$C_LENGTH

	PCB	B_TYPE
	.BYTE	DYN$C_PCB

	PCB	B_ASTEN
	.BYTE	^X0F

	PCB	L_ASTQFL
	.LONG	.
	.LONG	.-4

	PCB	L_PHYPCB
	.LONG	PHD-^X80000000+PHD$L_PCB	; PHYSICAL PCB ADDRESS

	PCB	L_UIC
	.LONG	UIC				; UIC FOR PROCESS

	PCB	W_STATE			; SET STATE TO CURRENT
	.WORD	SCH$C_CUR		;

	PCB	L_STS
	.LONG	<1@PCB$V_RES>+<1@PCB$V_PSWAPM>	; RESIDENT AND NON-SWAPPABLE

	PCB	B_PRIB
	.BYTE	31-PRIORITY			; BASE PRIORITY

	PCB	B_PRI
	.BYTE	31-PRIORITY			; CURRENT PRIORITY

	PCB	B_PRIBSAV
	.BYTE	31-PRIORITY			; SAVED BASE PRIORITY

	PCB	B_PRISAV
	.BYTE	31-PRIORITY			; SAVED CURRENT PRIORITY

	PCB	W_DIOLM
	.WORD	6				; ALLOW REASONABLE LIMIT

	PCB	W_DIOCNT			; ALLOW DIO
	.WORD	6				

	PCB	L_PID
	.LONG	PID+<1@16>			; PROCESS ID

	PCB	L_PHD
	.LONG	PHD				; PROCESS HEADER 

	PCB 	Q_PRIV				; PROCESS PRIVILEGES
ARB = .
	.LONG	-1,-1				; ALL PRIVILEGES

	PCB	L_ARB				; ACCESS RIGHTS BLOCK
	.LONG	ARB

	PCB	T_LNAME				; PROCESS NAME
	.NCHR	NCHAR,<PNAME>			; COUNT FOR NAME
	.BYTE	NCHAR				;
	.ASCII	\PNAME\				;

	PCB	L_LOCKQFL			; LOCK QUEUE HEADER
	.LONG	.
	.LONG	.-4

.=SAV...					; POSITION TO END OF PCB

	.ENDM	GENPCB				;

;
;	MACRO TO GENERATE PROCESS HEADER
;
	.MACRO	GENPHD LBL,KSP=0,PC=0,P0BR=<^X80000000>,P0LR=0,R4=0,PRIORITY=0

	.ALIGN	QUAD
PHD...=.
LBL=.						; DEFINE LABEL
	.BLKB	PHD$C_LENGTH			; GENERATE SPACE
SAV...=.					; SAVE FOR CONTINUATION

	PHD	L_R4				; INITIAL R4 CONTENTS
	.LONG	R4

	PHD	L_PC
	.LONG	PC				; PROGRAM COUNTER

	PHD	Q_PRIVMSK
	.LONG	-1,-1				; ALLOW EVERYTHING
	
	PHD	L_P0LRASTL			; P0 LENGTH REGISTER
	.LONG	P0LR

	PHD	L_P0BR				; P0 BASE REGISTER
	.LONG	P0BR	

	PHD	L_P1BR				; P1 BASE REGISTER
	.LONG	^X7F802000		

	PHD	L_P1LR
	.LONG	^X200000			; P1 LENGTH REGISTER

	PHD	L_KSP
	.LONG	KSP				; KERNEL STACK POINTER
	PHD	B_ASTLVL
	.BYTE	4				; NO PENDING AST'S

	PHD	L_FREP1VA			; FIRST AVAIL P1 VA
	.LONG	^X7FFFFE00			; ALL FREE

	PHD	W_PHVINDEX			; BALANCE SLOT INDEX
	.WORD	-1				; MAKE PAGE FAULTS ILLEGAL

	PHD	B_AUTHPRI
	.BYTE	31-PRIORITY			; BASE PRIORITY

.=SAV...					; POSITION TO END OF PHD

	.ENDM	GENPHD				;

; EQUATED SYMBOLS

	SWAP_EXT_PRIO = 16
	SYS_EXT_PRIO  = 16
	NULL_EXT_PRIO = 0

	.PAGE
	.SBTTL	STACKS FOR NULL AND SWAPPER PROCESS
;
;	PROCESS STACKS (KERNEL MODE)
;
	.PSECT	$$$000_STACKS,QUAD

	.BLKL	32				; SHORT STACK FOR NULL PROCESS
NULKSP:						;

	SWP$K_KSTKSZ==160			; SIZE OF SWAPPER STACK
	.BLKL	SWP$K_KSTKSZ			; LONGER STACK FOR SWAPPER
SWPKSP:						; 
SWP$A_KSTK::					; EXTERNAL NAME FOR SWAPPER STACK


	.PSECT	$$$230,QUAD
	.PAGE
	.SBTTL	NULL PROCESS HEADER AND PCB
;
;	HEADER (PHD) FOR NULL PROCESS
;
	GENPHD	NULPHD,KSP=NULKSP,PC=EXE$NULLPROC,PRIORITY=NULL_EXT_PRIO

;
;	PROCESS CONTROL BLOCK FOR NULL PROCESS
;
	GENPCB	SCH$GL_NULLPCB,PHD=NULPHD,PID=NULPIX,-
			PRIORITY=NULL_EXT_PRIO,PNAME=NULL

	.PAGE
	.SBTTL	SWAPPER PROCESS HEADER AND PCB
;
;	HEADER (PHD) FOR SWAPPER PROCESS
;
	GENPHD	SWPPHD,KSP=SWPKSP,PC=EXE$SWAPINIT,-
		P0BR=0,P0LR=0,R4=SCH$GL_SWPPCB,-
		PRIORITY=SWAP_EXT_PRIO
;
;	PROCESS CONTROL BLOCK FOR SWAPPER PROCESS
;
	GENPCB	SCH$GL_SWPPCB,PHD=SWPPHD,PID=SWPPIX,-
			PRIORITY=SWAP_EXT_PRIO,PNAME=SWAPPER

SCH$GL_SWPPID==SCH$GL_SWPPCB+PCB$L_PID			; ADDRESS OF SWAPPER PID
	.PAGE
	.SBTTL	SYSTEM PCB
;
;	GENERATE DUMMY PCB FOR SYSTEM PAGING
;

	GENPCB	MMG$AL_SYSPCB,PHD=0,-
		PID=0,PRIORITY=SYS_EXT_PRIO

	.PAGE
	.SBTTL	PCB ADDRESS VECTOR
;
;	VECTOR OF PROCESS CONTROL BLOCK ADDRESSES
;
	.ALIGN	LONG				; LONG WORD ALIGNMENT
SCH$GL_PCBVEC::					; POINTER TO PCB VECTOR
	.LONG	0				;
SCH$GL_MAXPIX::					;
	.LONG	0				;
NULPIX=0					; PIX FOR NULL PROCESS
;
;	NOTE: THE POINTER TO THE NULL PROCESS PCB MUST BE PROCESS
;	      INDEX=0.  ALL INACTIVE PCB POINTER ENTRIES ARE FILLED
;	      WITH THE ADDRESS OF THE NULL PROCESS PCB TO INSURE THAT
;	      THEY POINT TO A VALID PCB.
;
SWPPIX=1					; PIX FOR SWAPPER PROCESS

;
;	VECTOR OF SEQUENCE NUMBERS FOR PID GENERATION
;
SCH$GL_SEQVEC::					; POINTER TO SEQUENCE NUMBER VECTOR
	.LONG	0				;

	.PAGE	
	.END
