	.IF	NDF,PRMSW		;FOR LINKAGE WITH SYS.EXE,...
	.TITLE	SYSLOAVEC - SYSTEM VECTORS TO LOADABLE SUBROUTINES

	.IFF				;FOR LINKAGE WITH SYSLOAxxx.EXE,...
	.TITLE	LOAVEC - OFFSETS TO LOADABLE SUBROUTINES
	.ENDC

	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
;++
;
; FACILITY:
;
;	EXECUTIVE, LOADABLE SUBROUTINES
;
; ABSTRACT:
;
; VECTORS, LOAD IMAGE SIZE, AND UNDEFINED VECTOR HANDLER FOR
; LOADABLE SUBROUTINES.
;
; AUTHOR:
;
;	N. KRONENBERG, MARCH 13, 1979.
;
; MODIFIED BY:
;
;	V02-010	KTA0082		Kerbey T. Altmann	22-Feb-1982
;		Add three new entry points - EXE$SHUTDWNADP to shutdown
;		any adapters that need it during bugcheck, CI$INITIAL
;		CI$INT - dummy entries for the CI adapter. 
;
;	V02-009	KTA0050		Kerbey T. Altmann	01-Dec-1981
;		Add new entry point - EXE$INIPROCREG to initialize
;		processor registers, also UBA$INITIAL.
;
;	V02-008	KTA0036		Kerbey T. Altmann	08-Oct-1981
;		Redo the whole loadable vector scheme, so that each
;		loadable code file is self-describing.
;
;	V0207	TCM0002		Trudy C. Matthews	9-Jun-1981
;		Change 16-character label to 15 character label.
;
;	V0206	TCM0001		Trudy C. Matthews	8-May-1981
;		Modify LOADVEC macro to conditionally define simple pointers
;		into loaded code (rather than JMP @# vectors).
;
;	V0205	CAS0205		C. A. Samuelson		14-Aug-1980
;		Added vector for RH-780 MBA adapter error interrupt
;
;	V0204	CAS0010		C. A. Samuelson		8-Jan-1980
;		Added vector for DW-780 UBA apdaptor error interrupt
;		Added vector for pointer to error counters in machine check
;
;--

;+
; THIS MODULE MAY BE ASSEMBLED WITH EXECUTIVE MODULE PRMSW.MAR
; WHICH DEFINES THE CONDITIONAL CONTROL VARIABLE PRMSW.  IF PRMSW
; IS NOT DEFINED, THEN SYSLOAVEC.MAR IS INTENDED TO LINK WITH SYS.EXE.
; IF PRMSW IS DEFINED, SYSLOAVEC.MAR IS INTENDED FOR LINKAGE WITH 
; SYSLOAxxx.EXE.  (xxx IS THE CPU DISIGNATOR, E.G., 780.)
;
; IF PRMSW IS NOT DEFINED (LINK WITH SYS.EXE), THE SOURCE CONTAINS
; A LIST OF VECTORS TO BE CONNECTED TO THE SUROUTINES AND DATA STRUCTURES
; IN SYSLOAxxx.EXE.
;
; DATA VECTORS ARE LONGWORD POINTERS TO THE LOADED DATA STRUCTURES.  BEFORE
; LOADING, THE POINTES CONTAIN A 0.
;
; SUBROUTINE VECTORS ARE OF THE FORM:
;
; ENTRY:: JMP	@#EXE$LOAD_ERROR
;
; THERE ARE TWO TYPES OF ROUTINE ENTRIES.  THE FIRST TYPE IS LONGWORD
; ALIGNED ENTRIES FOR SCB VECTORS.  THE SECOND TYPE IS PACKED
; ENTRIES FOR ORDINARY ROUTINES.
;
; SYSLOAVEC ALSO CONTAINS THE LOAD ERROR HANDLER, EXE$LOAD_ERROR,
; WHICH IS SIMPLY A HALT.  IF ANY LOADABLE SUBROUTINE IS CALLED
; PRIOR TO BEING LOADED, THE HALT WILL BE EXECUTED.
;
; IF PRMSW IS DEFINED (LINK WITH SYSLOAxxx.EXE), THE SOURCE 
; CONTAINS LOAGWORD EXE$LOAD_SIZE, THE NUMBER OF BYTES IN SYSLOAxxx.EXE.
; THE SOURCE ALSO CONTAINS A LIST OF THE SELF-RELATIVE OFFSETS TO
; THE SUBROUTINES IN SYSLOAxxx.EXE.  THE LIST OF OFFSETS IS USED
; TO CONNECT THE SYS.EXE VECTORS TO THE LOADED SUBROUTINES.
;-
	.PAGE
;
;
; LOCAL MACRO:
;
; MACRO LOADVEC CONDITIONALLY DEFINES A VECTOR OR RELATIVE OFFSET:
;

	.MACRO	LOADVEC	ENTRY,TYPE=3,SIZE=L

	.IF	NDF,PRMSW		; For linkage with SYS.EXE,...
	 .IF	LE,TYPE-2		; Types 0,1,2 require alignment
	  .ALIGN  LONG
	 .ENDC

ENTRY::
	 .IF	LE,TYPE-1		; Data structure or pointer to such
	  .BLK'SIZE			; Reserve space
	 .ENDC

	 .IF	GE,TYPE-2		; If defining vector to a routine...
	  JMP	@#EXE$LOAD_ERROR
	 .ENDC


	.IFF				; For linkage with loadable code
	 .BYTE	TYPE
	 .LONG	<ENTRY-.>
	.ENDC

	.ENDM

;
; MISC. LABELS AND DATA:
;

	.IF	DF,PRMSW		;FOR LINKAGE WITH SYSLOAxxx.EXE,...

	$DYNDEF

	.PSECT	__LOAD_END		; Force label to be at the end of
	LC=.				;  loadable code
	.=<<LC+15>&-16>			; Round up to next 16 byte boundary
LOAD_END:

	.PSECT	$$$000			; Force return to start of loadable code
EXE$LOAD_SIZE::				; Size in bytes of SYSLOAxxx.EXE
	.LONG	<LOAD_END-.>
	.LONG	0
	.WORD	<LOAD_END-.+8>		; Size field
	.BYTE	DYN$C_LOADCODE		; Standard 12 byte header w/type
	.BYTE	0


	.IFF				; For linkage with SYS.EXE,...
	.PSECT	$$$500,LONG		;
	.ALIGN	LONG			; Start vector list on longwd
EXE$AL_LOAVEC::				; Addr of start of vectors
	.ENDC


;
; VECTOR LIST:
;	Define longword-aligned routine vectors.
;

	LOADVEC	EXE$MCHK,TYPE=2		;MACHINE CHECK HANDLER
	LOADVEC	EXE$INT54,TYPE=2	;INTERRUPT, SCB VECTOR=^X54
	LOADVEC	EXE$INT58,TYPE=2	;INTERRUPT, SCB VECTOR=^X58
	LOADVEC	EXE$INT5C,TYPE=2	;INTERRUPT, SCB VECTOR=^X5C
	LOADVEC	EXE$INT60,TYPE=2	;INTERRUPT, SCB VECTOR=^X60
	LOADVEC	UBA$INT0,TYPE=2		;INTERRUPT, UNIBUS VECTOR=0
	LOADVEC	UBA$UNEXINT,TYPE=2	;INTERRUPT, UNIBUS ITSELF

;
; Define packed routine vectors.
;

	LOADVEC	ECC$REENABLE		;MEMORY ERROR TIMERS
	LOADVEC	EXE$INIBOOTADP		;INIT BOOT DEVICE ADAPTER
	LOADVEC	EXE$DUMPCPUREG		;DUMP CPU-SPECIFIC IPR'S INTO EMB
	LOADVEC	EXE$REGRESTOR		;RESTORE CPU-SPECIFIC IPR'S 
	LOADVEC	EXE$REGSAVE		;SAVE CPU-SPECIFIC IPR'S
	LOADVEC	EXE$INIPROCREG		;INIT PROCESSOR REGISTERS
	LOADVEC	EXE$TEST_CSR		;TEST UB CSR FOR EXISTENCE
	LOADVEC	IOC$PURGDATAP		;PURGE DATAPATH
	LOADVEC	EXE$DW780_INT		;DW780 UBA Adaptor error interrupt
	LOADVEC	EXE$RH780_INT		;RH780 MBA Adapter error interrupt
	LOADVEC	CI$INITIAL		;Initialize CI adapter
	LOADVEC	CI$INT			;Interrupt, CI adapter
	LOADVEC	UBA$INITIAL		;INITIALIZE UNIBUS ADAPTER
	LOADVEC	INI$MPMADP		;INITIALIZE MULTIPORT MEMORY
	LOADVEC	EXE$SHUTDWNADP		;Shutdown any (all) adapters

;
; Define pointers to data stuctures.
;

	LOADVEC	EXE$MCHK_ERRCNT,TYPE=1	;Point to array of mchk error counters.

	.IF	DF,PRMSW		; For the loadable image
	 .LONG	-1			;  put in a stopper signal
	.ENDC

;
; IF LINKAGE WITH SYS.EXE, DEFINE THE LOAD ERROR HANDLER:
;


	.IF	NDF,PRMSW
EXE$LOAD_ERROR::			;COME HERE IF CALL TO UNLOADED
	HALT				; SUBROUTINE
	.ENDC

;
; IF LINKAGE WITH SYSLOAxxx.EXE, DEFINE 15 LONGWORDS OF PATCH AREA:
;

	.IF	DF,PRMSW
	.PSECT	PATCH
PATCH_DESC::
	.LONG	15
	.LONG	PATCH_AREA
PATCH_AREA::
	.BLKL	15
	.ENDC

	.END

