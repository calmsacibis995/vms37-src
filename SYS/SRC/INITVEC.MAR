	.IF	NDF,PRMSW	; For linkage with SYS.EXE.
	.TITLE	INITVEC - DEFINE VECTORS TO LOADABLE SUBROUTINES

	.IFF			; For linkage with INILOA.EXE
	.TITLE	INILOAVEC - DEFINE OFFSETS WITHIN LOADABLE IMAGE
	.ENDC

	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	EXECUTIVE, LOADABLE SUBROUTINES
;
; ABSTRACT:
;	This module defines the linkages to be used when loading subroutines
;	in module INILOA.
;
; ENVIRONMENT:	System initialization (used by INIT)
;
; AUTHOR:  TRUDY MATTHEWS,	CREATION DATE: 21-Jan-1981
;
; MODIFIED BY:
;
;	V02-002	KTA0050		Kerbey T. Altmann	01-Dec-1981
;		Removed INI$MPMADP to SYSLOA.
;
;	V02-001	KTA0036		Kerbey T. Altmann	09-Oct-1981
;		Changed to conform to new scheme for self-describing
;		loadable code files.
;
;--

;++
; This module defines the linkages to be used by INIT (a system initialization
; routine), when it loads and executes the subroutines in the loadable
; initialization module, INILOA.EXE.  This module is linked both with INIT
; (i.e. with SYS.EXE) and with INILOA.
;
; When this module is to be linked with INILOA, it is assembled with the
; executive module PRMSW.MAR which defines the conditional control variable
; PRMSW.  If PRMSW is defined, this module assembles into a list of
; self-relative offsets to the subroutine entry points in INILOA.  Note: the
; first longword in the list contains the size of the INILOA module in bytes.
;
; If PRMSW is not defined, this module assembles into a list of vectors
; which will be connected to the subroutine entry points in INILOA (after
; INILOA is loaded by INIT).  The vectors are initially of the form:
;
; ENTRY::  JMP	@#EXE$LOAD_ERROR
;
; After INIT loads the INILOA module, it will overwrite the address of the
; error routine with the correct address of the loaded routine, which it
; calculates using the self-relative offset to the loaded routine defined
; at the beginning of INILOA.
;--

;
; Macro LOADVEC conditionally defines a vector or a relative offset.
;

	.MACRO	LOADVEC	ENTRY,TYPE=3

	.IF	NDF,PRMSW		; For linkage with SYS.EXE,...
	 .IF	LE,TYPE-2		; Types 0,1,2 require alignment
	  .ALIGN  LONG
	 .ENDC

ENTRY::
	 .IF	LE,TYPE-1		; Data structure or pointer to such
	  .IF	EQ,TYPE+1		; For type=-1 (queheads)
	   .LONG  ENTRY
	   .LONG  ENTRY
	  .IFF				; For all other data structures
	   .LONG  0
	  .ENDC
	 .ENDC

	 .IF	GE,TYPE-2		; If defining vector to a routine...
	  JMP	@#EXE$LOAD_ERROR
	 .ENDC


	.IFF				; For linkage with loadable code
	 .IF	GE,TYPE-1		; For types >= 1
	  .BYTE	TYPE
	  .LONG	<ENTRY-.>
	 .ENDC
	.ENDC

	.ENDM

;
; Define labels and data for linkage with INILOA.
;
	.IF	DF,PRMSW
	.PSECT	__INILOA_END		; Define a label at the end of INILOA.
INILOA_END:

	$DYNDEF

	.PSECT	$$INILOA		; Force return to start of INILOA.
INI$L_INILOASIZE::
	.LONG	<INILOA_END-.>		; Calculate size in bytes of INILOA.
	.LONG	0
	.WORD	<INILOA_END-.+8>	; Same size
	.BYTE	DYN$C_LOADCODE		; Header type
	.BYTE	0

	.ENDC

;
; Define labels and data for linkage with INIT.
;
	.IF	NDF,PRMSW
	.PSECT	Z$INIT00		; Define beginning of vector list.
INI$A_INILOAVEC::
	.ENDC


;
; Create a vector for every entry point in INILOA.
;

	LOADVEC	INI$IOMAP		; Map and initialize adapters.

	.IF	DF,PRMSW		; For INILOA, set a stopper
	.LONG	-1
	.ENDC

	.END
