
	.TITLE	SYSASTCON ASTCONTROL SYSTEM SERVICES
	.IDENT	'V03-000'		;

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: EXECUTIVE, SYSTEM SERVICES
;
; ABSTRACT:
;	THIS MODULE CONTAINS THE SYSTEM SERVICES SETAST WHICH CONTROLS
;	THE STATE OF THE AST ENABLES AND DCLAST WHICH DECLARES AN
;	AST FOR A PARTICULAR ACCESS MODE.
;
; ENVIRONMENT:
;
;--
;
;	.PAGE
	.SBTTL	HISTORY			; DETAILED
;
; AUTHOR:	R. HUSTVEDT	 CREATION DATE: 21-SEP-76
;
; MODIFIED BY:
;	, : VERSION
; 01	 -

	.PAGE
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
	$ACBDEF				; DEFINE AST CONTROL BLOCK OFFSETS
	$IPLDEF				; DEFINE IPL VALUES
	$PCBDEF				; DEFINE PCB OFFSETS
	$PRDEF				; DEFINE PROCESSOR REGISTER VALUES
	$PSLDEF				; DEFINE PSL FIELDS
	$RSNDEF				; DEFINE RESOURCE NUMBERS
	$SSDEF				; DEFINE STATUS CODE VALUES

;
; EQUATES:
;

ACMODE=12				; DISPLACEMENT TO ACCESS MODE
AST=4					; DISPLACEMENT TO AST ADDRESS
ASTPRM=8				; DISPLACEMENT TO AST PARAMETER
ENABLE=4				; DISPLACEMENT TO ENABLE ARGUMENT
;
; OWN STORAGE:
;
	.PSECT	Y$EXEPAGED,BYTE		; PAGED PSECT
	.PAGE
	.SBTTL	EXE$SETAST - SET AST ENABLES

;++
; FUNCTIONAL DESCRIPTION:
;	EXE$SETAST ALLOWS A PROCESS TO ENABLE OR DISABLE THE DELIVERY
;	OF ASTS FOR THE PROCESS AT THE ACCESS MODE ISSUING THE CALL TO
;	EXE$SETAST.   THE PREVIOUS STATE OF THE AST ENABLE FOR THAT
;	ACCESS MODE IS RETURNED IN BIT 1 OF REGISTER 0 AS PART OF
;	THE SUCCESSFUL COMPLETION STATUS CODE.
;
; CALLING SEQUENCE:
;	CALLG	ARGLIST,EXE$SETAST
;
; INPUT PARAMETERS:
;	04(AP) - NEW SETTING FOR AST ENABLE
;	R4 - PCB ADDRESS OF CURRENT PROCESS
;
; IMPLICIT INPUTS:
;	SCH$GL_CURPCB - POINTER TO CURRENT PROCESS PCB
;
; OUTPUT PARAMETERS:
;	R0 - COMPLETION STATUS CODE
;
; IMPLICIT OUTPUTS:
;	AST ENABLE FOR PREVIOUS MODE IS SET ACCORDING TO ARGUMENT
;
;	THE NEW SETTING FOR THE ASTLVL REGISTER IS PLACED BOTH IN
;	THE PROCESSOR REGISTER AND THE CURRENT HARDWARE PCB.
;
; COMPLETION CODES:
;	SS$_WASCLR  -  AST ENABLE FOR ACCESS MODE WAS CLEAR
;	SS$_WASSET  -  AST ENABLE FOR ACCESS MODE WAS SET
;
; SIDE EFFECTS:
;	ANY PENDING ASTS FOR THIS PROCESS WHICH BECOME DELIVERABLE
;	AS A RESULT OF SETTING AN AST ENABLE MAY BE DELIVERED UPON
;	EXIT FROM THIS SERVICE.
;
;--

EXE$SETAST::				; SET AST ENABLE SYSTEM SERVICE
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS R2-R5
	MOVPSL	R1			; GET CURRENT PSL
	EXTZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,R1,R1 ; EXTRACT PREVIOUS MODE
	MOVZWL	#SS$_WASSET,R5		; ASSUME SET
	BBS	R1,PCB$B_ASTEN(R4),10$	; TEST OLD ENABLE SETTING
	MOVZWL	#SS$_WASCLR,R5		; IT WAS CLEAR
10$:	INSV	ENABLE(AP),R1,#1,PCB$B_ASTEN(R4)  ; SET NEW ENABLE VALUE
	BSBW	SCH$NEWLVL		;;; COMPUTE NEW ASTLVL 
	MOVL	R5,R0			; SET COMPLETION STATUS
	RET				; AND RETURN TO CALLER
	.PAGE
	.SBTTL	EXE$DCLAST - DECLARE AST SYSTEM SERVICE

;++
; FUNCTIONAL DESCRIPTION:
;	EXE$DCLAST ALLOWS A PROCESS TO ENQUEUE AN AST FOR THE ACCESS
;	MODE ISSUING THE CALL OR A LESS PRIVILEGED ACCESS MODE.
;
; CALLING SEQUENCE:
;	CALLG	ARGLIST,EXE$DCLAST
;
; INPUT PARAMETERS:
;	04(AP) - ADDRESS OF AST ROUTINE
;	08(AP) - AST PARAMETER
;	12(AP) - ACCESS MODE AT WHICH TO ENQUEUE AST
;	R4 - PCB ADDRESS OF CURRENT PROCESS
;
; IMPLICIT INPUTS:
;	CURRENT PCB
;
; OUTPUT PARAMETERS:
;	R0 - COMPLETION STATUS
;
; IMPLICIT OUTPUTS:
;	NONE
;
; SIDE EFFECTS:
;	THE ENQUEUING OF AN AST WILL EVENTUALLY CAUSE A DIVERSION
;	OF CONTROL TO OCCUR WHICH WILL CAUSE THE AST ROUTINE TO BE
;	CALLED.
;
; COMPLETION CODES:
;	SS$_NORMAL  -  NORMAL SUCCESSFUL COMPLETION STATUS
;	SS$_EXQUOTA -  QUOTA EXCEEDED FOR AST CONTROL BLOCKS
;	SS$_INSFMEM -  INSUFFICIENT DYNAMIC MEMORY
;
;--

EXE$DCLAST::				; DECLARE AST SYSTEM SERVICE
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS R2-R5
	TSTW	PCB$W_ASTCNT(R4)		; TEST FOR QUOTA
	BLEQ	20$			; YES, ERROR RETURN
	BSBW	EXE$ALLOCIRP		; ALLOCATE PACKET
	BLBC	R0,10$			; DID NOT GET IT
	DECW	PCB$W_ASTCNT(R4)		;;; ACCOUNT FOR IT
	MOVL	R2,R5			;;; SAVE BASE ADDRESS OF ACB
	EXTZV	#0,#2,ACMODE(AP),R0	; GET ACCESS MODE ARGUMENT
	BSBW	EXE$MAXACMODE		; MAXIMIZE ACCESS MODE
	BISB	#<1@ACB$V_QUOTA>,R0	; SET QUOTA FLAG FOR PROCESS
	MOVB	R0,ACB$B_RMOD(R5)	; SET ACCESS MODE FOR AST
	MOVL	PCB$L_PID(R4),ACB$L_PID(R5)     ; SET PID IN AST CB
	MOVQ	AST(AP),ACB$L_AST(R5)	; STORE AST,ASTPRM
	CLRL	R2			; NULL PRIORITY INCR
	BSBW	SCH$QAST		; AND ENQUEUE IT
	MOVZWL	#SS$_NORMAL,R0		; SET NORMAL STATUS
10$:	SETIPL	#0			; ENABLE
	RET				; AND RETURN TO CALLER
20$:	MOVZWL	#SS$_EXQUOTA,R0		; SET ERROR STATUS
	RET				; RETURN
	.END
