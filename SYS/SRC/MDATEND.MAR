	.TITLE	MDAT_END	MEMORY MANAGEMENT DATA BASE (PART II)
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; Facility:	Executive,  Memory Management Data Base
;
; Abstract:	MDAT_END supplements the memory management data base defined
;		in module MDAT. This module has the property that it is the
;		last module linked into the system image SYS.EXE. MDAT, on the
;		other hand, is the first module linked into SYS.EXE.
;
; ENVIRONMENT:	
;
;--

	.SBTTL	HISTORY			; DETAILED
;+
; Author:		Lawrence J. Kenah
;
; Creation Date:	5-May-1981
;
; Modified by:
;
;	V02-002	HRJ0029			Herb Jacobs		23-Aug-1981
;		Define global for end of system image.
;
;-
	.PAGE
	.SBTTL	DECLARATIONS

;
; Include Files:
;

;
; External Symbols:
;

;
; Macros:
;

;
; Equated Symbols:
;

	SGN$C_PFNPATSIZ == 16		; Allow patch space in each table for 
					;  additional instructions added to
					;  SYS.EXE with patches

;
; Own Storage:
;
	.PAGE
	.SBTTL	Memory Management Data Base

; This is the list terminator for the opcode fixup tables used by INIT when 
; it detects that more than 32 Mbytes are present in the system, requiring
; longword PFN link arrays. Each table entry consists of an address, an old
; opcode, and a new opcode byte (for a total of six bytes).

	.PSECT	Z$INIT$PFN_FIXUP_TABLE
FIXUP_TABLE:				; Patch space for address/opcode table
	.BYTE	0[SGN$C_PFNPATSIZ*<4+1+1>] ; Each table entry is siz bytes long
	.LONG	0			; List terminator for table

; Create patch descriptor for the patch space to allow simple addition of an 
; instruction that modifies one of the affected PFN arrays.

PAT$A_PFN_FIXUP::
	.LONG		SGN$C_PFNPATSIZ*<4+1+1>
	.ADDRESS	FIXUP_TABLE

	.PSECT	_Z_SYS$END,PAGE
	.ALIGN	PAGE
MMG$A_SYS_END::

	.END
