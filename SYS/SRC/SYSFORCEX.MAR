
	.TITLE	SYSFORCEX FORCE EXIT SYSTEM SERVICE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: EXECUTIVE, SYSTEM SERVICES
;
; ABSTRACT:
;
; ENVIRONMENT:
;
;--
;
;	.PAGE
	.SBTTL	HISTORY			; DETAILED
;
; AUTHOR:	R. HUSTVEDT	 CREATION DATE: 1-OCT-76
;
; MODIFIED BY:
;	, : VERSION
; 01	 -

	.PAGE
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

	$ACBDEF				; DEFINE AST CONTROL BLOCK
	$IPLDEF				; DEFINE INTERRUPT PRIORITY LEVELS
	$PCBDEF				; DEFINE PROCESS CONTROL BLOCK
	$PRDEF				; DEFINE PROCESSOR REGISTERS
	$PRIDEF				; DEFINE PRIORITY INCREMENT CLASSES
	$SSDEF				; DEFINE STATUS CODES

;
; EQUATED SYMBOLS:
;

ASTEXIT=0				; CHMK CODE FOR ASTEXIT
CODE=12					; DISPLACEMENT TO CODE PARAMETER
;
; OWN STORAGE:
;

	.PAGE
	.SBTTL	EXE$FORCEX - FORCE EXIT SYSTEM SERVICE

;++
; FUNCTIONAL DESCRIPTION:
;
; CALLING SEQUENCE:
;	CALLG	ARGLIST,EXE$FORCEX
;
; INPUT PARAMETERS:
;	PIDADR(AP) - ADDRESS OF PID (WRITTEN)
;	PRCNAM(AP) - ADDRESS OF PROCESS LOGICAL NAME
;	CODE(AP) - COMPLETION CODE TO BE USED FOR EXIT CALL
;	R4 - PCB ADDRESS OF CURRENT PROCESS
;
; IMPLICIT INPUTS:
;	NONE
;
; OUTPUT PARAMETERS:
;	@PIDADR(AP) - PID OF PROCESS FOR WHICH EXIT WAS FORCED
;	R0 - COMPLETION STATUS
;
; IMPLICIT OUTPUTS:
;	NONE
;
; COMPLETION CODES:
;	SS$_NORMAL  -  SUCCESSFUL COMPLETION
;	SS$_INSFMEM -  INSUFFICIENT DYNAMIC MEMORY
;	SS$_NONEXPR -  NON-EXISTENT PROCESS
;	SS$_NOPRIV  -  INSUFFICIENT PRIVILEGE TO CONTROL DETACHED PROCESS
;
; SIDE EFFECTS:
;	NONE
;
;--

EXE$FORCEX::				; FORCE EXIT SYSTEM SERVICE
	.WORD	^M<R2,R3,R4,R5>		; SAVE REGISTERS R2-R5
	BSBW	EXE$NAMPID		; CONVERT NAME-PID PAIR
	SETIPL	#0			; DROP IPL
	BLBC	R0,20$			; EXIT IF ERROR
	BBSS	#PCB$V_FORCPEN,PCB$L_STS(R4),10$; FORCE EXIT ALREADY PENDING
	PUSHL	R1			; SAVE PID
	BSBW	EXE$ALLOCIRP		; ALLOCATE AST CONTROL BLOCK
	BLBC	R0,20$			; EXIT IF ERROR
	MOVB	#3,ACB$B_RMOD(R2)	; SET ACCESS MODE
	MOVL	(SP)+,ACB$L_PID(R2)	; SET PID OF DESTINATION
	MOVAB	B^DOEXIT,ACB$L_AST(R2)	; AND ADDRESS OF AST ROUTINE
	MOVL	CODE(AP),ACB$L_ASTPRM(R2); SET CODE FOR EXIT CALL
	MOVL	R2,R5			; AST CONTROL BLOCK ADDRESS FOR QAST
	MOVZBL	#PRI$_RESAVL,R2		; SET PRIORITY INCREMENT CLASS
	BSBW	SCH$QAST		; QUEUE ACB FOR TARGET PROCESS
10$:	MOVZWL	#SS$_NORMAL,R0		; SET NORMAL COMPLETION STATUS
20$:	RET				; AND RETURN TO CALLER


	.PAGE
;
; PERFORM EXIT AS A RESULT OF USER MODE AST IN THE CONTEXT OF THE
; TARGET PROCESS.
;

DOEXIT:					; 
	.WORD	0			; NULL REGISTER SAVE MASK
	CHMK	#ASTEXIT		; CLEAR AST ACTIVE FLAG
	$EXIT_S	4(AP)			; MAKE EXIT CALL


	.END
