;
;	Version	'V03-004'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from M to P.  That is, all control blocks from MAA to PZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-004	RLRV3A2		Robert L. Rappaport	15-Apr-1982
;		Correct MSCPdef to contain MSCP$K_OP_ACPTH attention
;		message opcode.
;
;	V03-003	KTA0095		Kerbey T. Altmann	12-Apr-1982
;		Add new field to PDT.
;
;	V03-002	RLRV3A1		Robert L. Rappaport	5-Apr-1982
;		Add Device Class and Controller Model definitions to
;		$MSCPDEF.
;
;	V03-001	LJK0147		Lawrence J. Kenah	16-Mar-1982
;		Change name of PFL$W_RESERVED to PFL$W_ERRORCNT. This cell
;		is used by the swapper to count bad blocks that are never
;		deallocated.
;
;	V02-026	NPK2015		N. Kronenberg		17-Feb-1982
;		Add counters release flag to PDT flags.  Renamed
;		PDT$L_DGHDRSZ to PDT$L_DGOVRHD
;
;	V02-025	LJK0132		Lawrence J. Kenah	15-Feb-1982
;		Add saved end-of-file block to $MMGDEF.
;
;	V02-024	HRJ0053		Herb Jacobs		09-Feb-1982
;		Add an internal cluster size cell to the page file control
;		block to allow variable size allocation requests for each
;		pagefile.
;
;	V02-023	NPK2013		N. Kronenberg		31-Jan-1982
;		Added to $PDTDEF:  more SCS vectors, read counters
;		context.  Removed pointer to FQDT from PDT.  In $PBDEF
;		changed port type from word to longwd and added
;		cable and path status bytes.
;
;	V02-022	TMH0022		Tim Halvorsen		8-Jan-1982
;		Add message flags byte to PQB
;
;	V02-021	RLRMSCP1	Robert L. Rappaport	6-Jan-1982
;		Minor spelling fixups to MSCP definition and addition
;		of MSCP$K_MXCMDLEN symbol.
;
;	V02-020	SPF0055		Steve Forgey		02-Jan-1982
;		Add image working set peak check flag to PHD.
;
;	V02-019	ACG0251		Andrew C. Goldstein,	30-Dec-1981  16:18
;		Add default file protection to PQB
;
;	V02-018	NPK2009		N. Kronenberg		29-Dec-1981
;		Added VC/PWR_FAIL states and CDT list flink to
;		$PBDEF.  Added msg/dg header sizes to $PDTDEF.
;
;	V02-017	KTA0054		Kerbey T. Altmann	23-Dec-1981
;		Add new field to PCB for IPAST.
;
;	V02-016	LJK0086		Lawrence J. Kenah	13-Nov-1981
;		Add SWPFILFUL bit to page file control block flag.
;
;	V02-015	LJK0085		Lawrence J. Kenah	13-Nov-1981
;		Add extra CPU time limit field to process header.
;
;	V02-014	RLRMSCP		Robert L. Rappaport	23-Oct-1981
;		Brought the MSCP definition up to current specs.
;
;	V02-013	LJK0068		Lawrence J. Kenah	17-Sep-1981
;		Add AUTHPRI field to process header to allow $SETPRI to
;		reset nonprivileged process back to initial priority.
;
;	V02-012	LJK0066		Lawrence J. Kenah	11-Sep-1981
;		Add symbolic constants to $PRMDEF that define largest
;		allowed string sizes for parameter and unit names.
;
;	V02-011	LJK0046		Lawrence J. Kenah	19-Aug-1981
;		Expand the default directory string area in the PQB to
;		84 bytes to contain the largest default directory
;		string currently allowed. Add symbolic constant that
;		defines the size of the maximum directory string.
;
;	V02-010	LJK0044		Lawrence J. Kenah	14-Aug-1981
;		Alter the page file control block layout (once more)
;		to allow PFLs to be dynamically allocated.
;
;	V02-009	MIR0009		Michael I. Rosenblum	7-Aug-1981
;		Added PRM$M_SCS for SYSGEN.  Changed the length
;		of PRM$M_ from a word to a long word.
;
;	V02-008	NPK2008		N. Kronenberg		4-Aug-1981
;		Added new SCS entry offsets to PDT:  
;		PDT$L_DEALRGMSG/QUEUEMDGS/SNDCNTMSG.
;
;	V02-007	LJK0041		Lawrence J. Kenah	4-Aug-1981
;		Added SWAPSIZE field to Process Quota Block.
;
;	V02-006	HRJ0025		Herb Jacobs		31-Jul-1981
;		Upgrade page file control block.
;
;	V02-005	DMW0007		David Michael Walp	31-Jul-1981
;		Added OVERIDE bit to MVL.
;
;	V02-004	JLV0053		Jake VanNoy		30-Jul-1981
;		Added TTY bit to PRMDEF.
;
;	V02-003 DMW0006		David Michael Walp	30-Jul-1981
;		Changed spare byte in MVL to hold relavent privileges
;		( needed to override protection ) of the user at mount time.
;
;	V02-002	LJK0019		Lawrence J. Kenah	30-Jul-1981
;		Add flag to PHD flags word that prevents an access
;		violation from being reported by the pager when one
;		process incurs a page fault while accessing the
;		process header of another process.
;
;**


;+
; MASSBUS ADAPTER REGISTER OFFSET DEFINITIONS
;-
 
	$STRUCT	MBA
 
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V<			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8   		; ADAPTER CODE FIELD
		,13   			; RESERVED BITS
		CSR_OT,,,M   		; OVER TEMPERATURE
		CSR_PU,,,M   		; ADAPTER POWER UP
		CSR_PD,,,M   		; ADAPTER POWER DOWN
		,2   			; RESERVED BITS
		CSR_XMFLT,,,M   	; TRANSMITTER FAULT
		CSR_MT,,,M   		; MULTIPLE TRANSMITTERS
		,1   			; RESERVED BIT
		CSR_URD,,,M   		; UNEXPECTED READ DATA
		CSR_WS,,,M   		; WRITE SEQUENCE DATA
		CSR_PE,,,M 		; SBI PARITY ERROR
		>			;
	F	CR,L			;CONTROL REGISTER
		V<			; CONTROL REGISTER BIT DEFINITIONS
		CR_INIT,,,M   		; ADAPTER INITIALIZATION
		CR_ABORT,,,M   		; ABORT OPERATION
		CR_IE,,,M		; INTERRUPT ENABLE
		>			;
	F	SR,L			;STATUS REGISTER
		V<			; STATUS REGISTER BIT DEFINITIONS
		SR_RDTO,,,M 		; READ DATA TIMEOUT
		SR_ISTO,,,M   		; INTERFACE SEQUENCE TIMEOUT
		SR_RDS,,,M   		; READ DATA SUBSTITUTE
		SR_ERCONF,,,M   	; ERROR CONFIRMATION
		SR_INVMAP,,,M   	; INVALID MAP REGISTER
		SR_MAPPE,,,M   		; MAP PARITY ERROR
		SR_MDPE,,,M   		; MASSBUS DATA PARITY ERROR
		SR_MBEXC,,,M   		; MASSBUS EXCEPTION
		SR_MXF,,,M   		; MISSED TRANSFER ERROR
		SR_WCKLWR,,,M   	; WRITE CHECK ERROR LOWER BYTE
		SR_WCKUPR,,,M   	; WRITE CHECK ERROR UPPER BYTE
		SR_DLT,,,M   		; DATA LATE ERROR
		SR_DTABT,,,M   		; DATA TRANSFER ABORTED
		SR_DTCOMP,,,M   	; DATA TRANSFER COMPLETE
		SR_SPE,,,M		; SILO PARITY ERROR
		,1   			; RESERVED BITS
		SR_ATTN,,,M   		; MASSBUS ATTENTION
		SR_MCPE,,,M   		; MASSBUS COMTROL PARITY ERROR
		SR_NED,,,M   		; NONEXISTENT DRIVE
		SR_PGE,,,M   		; PROGRAM ERROR
		,3			; RESERVED BITS
		SR_CBHUNG,,,M		; CB HUNG
		,5   			; RESERVED BITS
		SR_CRD,,,M   		; CORRECTED READ DATA
		SR_NRCONF,,,M   	; NO RESPONSE CONFIRMATION
		SR_DTBUSY,,,M 		; DATA TRANSFER BUSY
		>			;
	C< ,$M_				; ERROR BITS
	ERROR,MBA$M_SR_RDTO!-		; READ DATA TIMEOUT
		MBA$M_SR_ISTO!-		; INTERFACE SEQUENCE TIMEOUT
		MBA$M_SR_RDS!-		; READ DATA SUBSTITUTE
		MBA$M_SR_ERCONF!-   	; ERROR CONFIRMATION
		MBA$M_SR_INVMAP!-   	; INVALID MAP REGISTER
		MBA$M_SR_MAPPE!-   	; MAP PARITY ERROR
		MBA$M_SR_MDPE!-		; MASSBUS DATA PARITY ERROR
		MBA$M_SR_MBEXC!-   	; MASSBUS EXCEPTION
		MBA$M_SR_MXF!- 		; MISSED TRANSFER ERROR
		MBA$M_SR_WCKLWR!-   	; WRITE CHECK ERROR LOWER BYTE
		MBA$M_SR_WCKUPR!-   	; WRITE CHECK ERROR UPPER BYTE
		MBA$M_SR_DLT!- 		; DATA LATE ERROR
		MBA$M_SR_SPE!-		; SILO PARITY ERROR
		MBA$M_SR_DTABT!-   	; DATA TRANSFER ABORTED
		MBA$M_SR_MCPE!-		; MASSBUS COMTROL PARITY ERROR
		MBA$M_SR_NED!- 		; NONEXISTENT DRIVE
		MBA$M_SR_PGE  		; PROGRAM ERROR
	>
	F	VAR,L			;VIRTUAL ADDRESS REGISTER
	F	BCR,L			;BYTE COUNT REGISTER
	F	DR,L			;DIAGNOSTIC REGISTER
	F	SELMR,L			;SELECTED MAP REGISTER
	F	,B,996			; VALUE IS 1024-<4*7>
	F	ERB,L			;BASE ADDRESS OF EXTERNAL REGISTERS
		V<			; BASE ADDRESS FIELD DEFINITIONS
		,7			; REGISTER OFFSET ADDRESS BITS
		ERB_UNIT,3		; DRIVE UNIT NUMBER
		>			;
	F	,B,12			; DRIVE REGISTER ADDRESS SPACE
	F	AS,L			;ATTENTION SUMMARY REGISTER
	F	,B,1004			; VALUE IS 2048-.
					; TO POSITION TO 2048
	F	MAP,L,256		;MAP REGISTERS
 
	E

;+
; SHARED MEMORY MAILBOX CONTROL BLOCK DEFINITIONS
;
; THERE IS ONE MAILBOX CONTROL BLOCK FOR EACH MAILBOX IN SHARED
; MEMORY.  ANY PROCESSOR THAT WANTS TO ACCESS THE MAILBOX CREATES
; A UCB TO CONTROL ACCESS TO THE MAILBOX.
;-

	$STRUCT	MBX

	F	MSG,Q			;MESSAGE QUEUE LISTHEAD
	F	FLAGS,B			;FLAGS
		V<M			; FLAG DEFINTIONS
		ALLOC			;  MAILBOX ALLOCATED
		VALID			;  MAILBOX INITIALIZED AND USEABLE
		DELPEND			;  DELETE PENDING
		QUOTALCK		;  QUOTA/COUNT MODIFICATION LOCK
		>			;
	F	CREATPORT,B		;PORT NUMBER OF MAILBOX CREATOR
	F	UNIT,W			;MAILBOX UNIT NUMBER
	F	REF,W			;REFERENCE FLAGS (1 BIT/PORT)
	F	READER,W		;WAITING READER (1 BIT/PORT)
	F	READAST,W		;WAITING READ AST (1 BIT/PORT)
	F	WRITAST,W		;WAITING WRITE AST (1 BIT/PORT)
	F	MAXMSG,W		;MAXIMUM MESSAGE SIZE
	F	MSGCNT,W		;CURRENT NUMBER OF MESSAGES
	F	BUFFQUO,W		;BUFFER QUOTA
	F	PROT,W			;PROTECTION MASK
	F	OWNUIC,L		;OWNER UIC
	F	NAME,T,16		;MAILBOX NAME (COUNTED STRING)
; *** THE LENGTH OF THIS STRUCTURE MUST BE AN EVEN MULTIPLE OF 8 ***
; *** BECAUSE THE MESSAGE QUEUE HEADER MUST BE QUADWORD ALIGNED ***
	L	LENGTH			;LENGTH OF STRUCTURE

	E

;+
; MACHINE CHECK ERROR RECOVERY BLOCK MASK BIT DEFFINITIONS
; BITS USED TO FILTER AND TEST FOR ERROR TYPES
;-
	$STRUCT	MCHK
 
	V <M				;
		LOG			;INHIBIT ERROR LOGGIN FOR THE ERROR
		MCK			;PROTECT AGAINST MACHINE CHECKS
		NEXM			;PROTECT AGAINST NON-EXISTENT MEMORY
		UBA			;PROTECT AGAINST UBA ADAPTER ERROR INTRPT
	>
	E
 

;+
; Define the frame pointer offsets that determine what the impure area
; used by the memory management system services looks like.
;-
	$STRUCT	MMG

	-F	,B,0			; ending address of negated structure
					; (needed to obtain length definition)
	L	LENGTH			; size of scratch area

	-F	EFBLK			; stored end-of-file block from WCB
	-F	VFYFLAGS		; verified section flags and maximum
					;  access mode for writing
	-F	SVSTARTVA		; saved starting virtual address
	-F	PAGESUBR		; address of per page subroutine
	-F	SAVRETADR		; saved return address range
	-F	CALLEDIPL		; caller's IPL
	-F	MAXACMODE		; maximized read access mode

	V	<			; define bit fields in MAXACMODE field
		,8			; no flags in first byte
		CHGPAGFIL,,,M		; charge page file for this PTE
		DELGBLDON,,,M		; global pages in this range 
					;  already deleted
		>

	E

;+
; MOUNTED VOLUME LIST ENTRY. ONE SUCH ENTRY APPEARS IN THE PROCESS MOUNTED
; VOLUME LIST FOR EACH VOLUME MOUNTED BY THE PROCESS AS /SHARE OR /NOSHARE.
; IN ADDITION, EACH VOLUME MOUNTED /SYSTEM OR /GROUP HAS AN ENTRY IN THE
; SYSTEM WIDE MOUNTED VOLUME LIST.
;-

	$STRUCT	MTL
	F MTLFL				; FORWARD LIST POINTER
	F MTLBL				; BACK LIST POINTER
	F SIZE,W			; STRUCTURE SIZE IN BYTES
	F TYPE,B			; STRUCTURE TYPE CODE
	F STATUS,B			; STATUS BYTE
	V<
		VOLSET			; ENTRY IS FOR A VOLUME SET
	>
	F UCB				; POINTER TO DEVICE UCB
	F LOGNAME			; POINTER TO ASSOCIATED LOGICAL NAME
	F ,L				; RESERVED LONGWORD
	L LENGTH			; LENGTH OF STRUCTURE
	E

;+
; MUTEX DEFINITIONS
;-
	$STRUCT	MTX

	F	,L
		V <			; BIT DEFINITIONS
		,16
		WRT			; WRITE PENDING OR IN PROGRESS
		>			;
	S	OWNCNT,,W		;OWNERSHIP COUNT
	S	STS,,W			;STATUS BITS

	E

;+
; MULTIPORT MEMORY (MA780/MA750) ADAPTER REGISTER OFFSET DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;
 
	$STRUCT	MPM
 
	C	PORTS,4			;MAXIMUM NUMBER OF PORTS PER MEMORY
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V<M			; (OVERLAPPING DEFINTIONS)
		CSR_PORT,2		; PORT NUMBER
		>			;
		V<M			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8   		; ADAPTER CODE FIELD
		,14   			; RESERVED BITS
		CSR_PU   		; ADAPTER POWER UP
		CSR_PD   		; ADAPTER POWER DOWN
		,2   			; RESERVED BITS
		CSR_XMFLT   		; TRANSMITTER FAULT
		CSR_MT   		; MULTIPLE TRANSMITTERS
		CSR_IS			; INTERLOCK SEQUENCE
		,1   			; RESERVED BIT
		CSR_WS   		; WRITE SEQUENCE DATA
		CSR_PE 			; SBI PARITY ERROR
		>			;
	C	CSR_TYPE,64		; MULTIPORT ADAPTER TYPE CODE
	F	CR,L			;CONTROL REGISTER
		V<M			; CONTROL REGISTER BIT DEFINITIONS
		CR_MIE   		; MASTER INTERRUPT ENABLE
		CR_EIE			; ERROR INTERRUPT ENABLE
		,22			;
		CR_ERRS,8		; PORT INTERFACE ERRORS
		>			;
	F	SR,L			;STATUS REGISTER
		V<M			; STATUS REGISTER DEFINITIONS
		,1			; (UNUSED)
		SR_EIE			; ERROR INTERRUPT ENABLE
		,11			;
		SR_SS			; SINGLE STEP
		SR_IDL			; INVALIDATE DATA LOST IN MPC
		SR_IT			; INTERLOCK TIMEOUT
		,12			;
		SR_AGP			; ADMI GRANT PARITY ERROR
		SR_XDF			; XMIT DURING FAULT
		SR_MXF			; MULTIPLE XMITTER FAULT
		SR_ACA			; ADMI COMMAND ABORT
		>			;
	F	INV,L			;INVALIDATION CONTROL REGISTER
		V<M			; INV REGISTER DEFINITIONS
		INV_ID,16		;  CACHED DEVICE NEXUS ID'S
		INV_MEMSZ,3		;  MEMORY SIZE (256KB BOARDS)
		,1			;  (UNUSED)
		INV_STADR,11		;  STARTING SBI ADDR OF MEMORY
		INV_CACHF		;  CACHED FORCE (IGNORE ID'S)
		>
	F	ERR,L			;ARRAY ERROR REGISTER
		V<M			; ARRAY ERROR REGISTER DEFINITIONS
		,28			;
		ERR_ELR			; ERROR LOG REQUEST
		ERR_HI			; HIGH ERROR RATE
		ERR_ICRD		; INHIBIT CRD ERRORS
		ERR_IMP			; INVALIDATE MAP PARITY ERROR
		>			;
	F	CSR0,L			;CONFIGURATION STATUS REGISTER 0
		V<			; CSR0 DEFINITIONS
		,4			;
		CSR0_POW,4		;  PER PORT POWER STATUS
		CSR0_ERR,4		;  PER PORT ERROR STATUS
		CSR0_ONL,4		;  PER PORT ONLINE STATUS
		>			;
	F	CSR1,L			;CONFIGURATION STATUS REGISTER 1
		V<M			; CSR1 DEFINITIONS
		,10			;
		CSR1_MIA		; MULTIPLE INTERLOCK ACCEPTED
		>			;
	F	MR,L			;MAINTENANCE REGISTER
		V<			; MAINTENANCE REGISTER BIT DEFINITIONS
		,14			;  (ERROR BITS)
		MR_UNIT,2		;  MEMORY UNIT NUMBER
		>
	F	IIR,L			;INTERPORT INTERRUPT REQUEST REGISTER
		V<			; INTERRUPT REQUEST BIT DEFINITIONS
		IIR_STS,16		;  STATUS BITS (WRITE TO CLEAR)
		IIR_CTL,16		;  CONTROL BITS (WRITE TO SET STATUS BITS)
		>
	F	IIE,L			;INTERPORT INTERRUPT ENABLE REGISTER
		V<			; INTERRUPT ENABLE BIT DEFINITIONS
		IIE_STS,16		;  CONTROL BITS (WRITE TO CLEAR)
		IIE_CTL,16		;  STATUS BITS (WRITE TO SET STATUS BITS)
		>

	E


;+
; MSCP (MASS STORAGE CONTROL PROTOCOL) DEFINITIONS.  THESE DEFINITIONS
; DESCRIBE THE FORMAT OF THE COMMAND & STATUS PACKETS EXCHANGED UNDER
; MSCP BETWEEN HOST AND CONTROLLERS.
;-
	$STRUCT	MSCP
;
;	Generic command packet
;
	F	CMD_REF			; Command reference number
	F	UNIT,W			; Unit number
	F	,W			; Reserved
	F	OPCODE,B		; Opcode
	M	2
	F	,B			; Reserved
	F	MODIFIER,W		; Command modifiers
	M	1
	F	BYTE_CNT		; Byte count
	F	BUFFER,B,12		; Buffer descriptor
	F	LBN			; Logical block number
;
;	ABORT and GET COMMAND STATUS
;
	P	1
	F	OUT_REF			; Outstanding reference number
;
;	ONLINE and SET UNIT CHARACTERISTICS
;
	P	1
	F	,W			; Reserved
	F	UNT_FLGS,W		; Unit flags
	F	,B,12			; Reserved
	F	DEV_PARM,L		; Device Dependent Parameters
	F	SHDW_UNT,W		; Shadow unit
	F	COPY_SPD,W		; Copy speed
	L	MXCMDLEN		; Maximum length MSCP command packet
;
;	REPLACE
;
	P	1
	F	RBN			; Replacement block number
;
;	SET CONTROLLER CHARACTERISTICS
;
	P	1
	F	VERSION,W		; MSCP version
	F	CNT_FLGS,W		; Controller flags
	F	HST_TMO,W		; Host timeout
	F	,W			; Reserved
	F	TIME,Q			; Quadword time and date
;
;	Generic end packet
;
	P	2
	F	FLAGS,B			; End message flags
	F	STATUS,W		; Status
	F	,B,16			; (Byte count) and reserved
	F	FRST_BAD		; First bad block
;
;	GET COMMAND STATUS
;
	P	1
	F	,L			; Outstanding reference number
	F	CMD_STS,L		; Command status
;
;	GET UNIT STATUS
;
	P	1
	F	MULT_UNT,W		; Multi-unit code
	F	,W			; Unit flags
	F	,L			; Host id
	F	UNIT_ID,Q		; Unit id
	F	MEDIA_ID		; Media type id
	F	,W			; Shadow unit
	F	SHDW_STS,W		; Shadow status
	F	TRACK,W			; Track size
	F	GROUP,W			; Group size
	F	CYLINDER,W		; Cylinder size
	F	,W			; Reserved
	F	RCT_SIZE,W		; RCT table size
	F	RBNS,B			; RBN/track
	F	RCT_CPYS,B		; RCT size
	L	LEN
;
;	ONLINE, SET UNIT CHARACTERISTICS, and AVAILABLE ATTN
;
	P	1
	F	,B,24
	F	UNT_SIZE		; Unit size
	F	VOL_SER			; Volume serial number
;
;	SET CONTROLLER CHARACTERISTICS
;
	P	1
	F	,W			; MSCP version
	F	,W			; Controller flags
	F	CNT_TMO,W		; Controller timeout
	F	,W			; Reserved
	F	CNT_ID,Q		; Controller id
;
;	STATUS CODES
;
	K	<
		ST_SUCC			; Success
		ST_ICMD			; Invalid command
		ST_ABRTD		; Command aborted
		ST_OFFLN		; Unit-offline
		ST_AVLBL		; Unit-available
		ST_MFMTE		; Media format error
		ST_WRTPR		; Write protected
		ST_COMP			; Compare error
		ST_DATA			; Data error
		ST_HSTBF		; Host buffer access error
		ST_CNTLR		; Controller error
		ST_DRIVE		; Drive error
		ST_DIAG,31		; Message from internal diagnostic
		ST_SBCOD,32		; Subcode multiplier
		>

	V	<M
		ST_MASK,5		; Status/event code mask
		>
;
;	STATUS SUBCODES and Subcode bit meanings
;

;
;	"Success" sub-code values
;
	K	<
		SC_NORML,0		; Normal
		SC_SDIGN,1		; Spin Down IGNored
		SC_STCON,2		; STill CONnected
		SC_DUPUN,4		; DUPlicate UNit number
		SC_ALONL,8		; ALready ONLine
		SC_STONL,16		; STill ONLine
		>
	V	<M
		,5			; Major status code field
		SC_SDIGN		; Spin Down IGNored
		SC_STCON		; STill CONnected
		SC_DUPUN		; DUPlicate UNit number
		SC_ALONL		; ALready ONLine
		SC_STONL		; STill ONLine
		>
;
;	"Invalid Command" sub-code values
;
	K	<
		SC_INVML,0		; INValid Message Length
		>
;
;	"Unit Offline" sub-code values
;
	K	<
		SC_UNKNO,0		; UNKoNOwn unit or online to another controller
		SC_NOVOL,1		; NO VOLume mounted or drive disabled (RUN/STOP)
		SC_INOPR,2		; unit is INOPeRative
;		SC_DUPUN,4		; Duplicate Unit Number
		SC_UDSBL,8		; Unit disabled by field service or diagnostic
		>
	V	<M
		,5
		SC_NOVOL		; NO VOLume mounted or drive disabled (RUN/STOP)
		SC_INOPR		; unit is INOPeRative
		,1			; Duplicate Unit Number
		SC_UDSBL		; Unit disabled by field service or diagnostic
		>
;
;	"Write Protected" sub-code values
;
	K	<
		SC_SOFTW,128		; Unit is SOFTWare protected
		SC_HARDW,256		; Unit is HARDWare protected
		>
	V	<M
		,12
		SC_SOFTW		; Unit is SOFTWare protected
		SC_HARDW		; Unit is HARDWare protected
		>
;
;	"Data Error" sub-code values
;
	K	<
		SC_FRCER,0		; FoRCed ERror
		>
;
;	MODIFIERS (Bit flags)
;

;
;	Generic Command Modifiers
;
	V	<M
		,4
		MD_WRSEQ		; Write shadow set 1 unit at a time
		MD_WBKVL		; Write-back (volatile)
		MD_WBKNV		; Write-back (non-volatile)
		MD_SSHDW		; Suppress Shadowing
		MD_SEREC		; Suppress error recovery
		MD_SECOR		; Suppress error correction
		MD_SCCHL		; Suppress caching (low speed)
		MD_SCCHH		; Suppress caching (high speed)
		MD_ERROR		; Force error
		MD_CLSEX		; Clear serious exception
		MD_COMP			; Compare
		MD_EXPRS		; Express request
		>
;
;	AVAILABLE Command Modifiers
;
	V	<M
		MD_SPNDW		; Spin-down
		MD_ALLCD		; All Class Drivers
		>
;
;	FLUSH Command Modifiers
;
	V	<M
		MD_FLENU		; Flush entire unit
		MD_VOLTL		; Volatile Only
		>
;
;	GET UNIT STATUS Command Modifiers
;
	V	<M
		MD_NXUNT		; Next unit
		>
;
;	ONLINE Command Modifiers
;
	V	<M
		MD_RIP			; Allow self-destruct
		MD_IGNMF		; Ignore media format error
		>
;
;	ONLINE and SET UNIT CHARACTERISTICS Command Modifiers
;
	V	<M
		,2
		MD_STWRP		; Enable Set Write Protect
		MD_CLWBL		; Clear Write-Back Data Lost
		MD_SHDSP		; Shadow Unit Specified
		>
;
;	REPLACE Command Modifiers
;
	V	<M
		MD_PRIMR		; Primary replacement block
		>
;
;	Unit flags
;
	V	<M
		UF_CMPRD		; Compare reads
		UF_CMPWR		; Compare writes
		UF_576			; 576 byte sectors
		,3
		UF_WBKNV		; Write-back (non-volatile)
		UF_RMVBL		; Removeable media
		,2
		UF_SCCHL		; Suppress caching (Low speed)
		UF_SCCHH		; Suppress caching (High speed)
		UF_WRTPS		; Write protect (software)
		UF_WRTPH		; Write protect (hardware)
		UF_INACT		; Inactive shadow set unit
		UF_REPLC		; Controller initiated bad block repl
		>
;
;	Controller flags
;
	V	<M
		CF_576			; 576 byte sectors
		CF_SHADW		; Shadowing
		CF_MLTHS		; Multi-Host
		,1
		CF_THIS			; Enable this host's error log
		CF_OTHER		; Enable other host's error log
		CF_MISC			; Enable miscellaneous error log
		CF_ATTN			; Enable attention messages
		,7
		CF_REPLC		; Controller Initiated Bad Block Replacement
		>
;
;	End packet flags
;
	V	<M
		,4
		EF_SEREX		; Serious exception
		EF_ERLOG		; Error log generated
		EF_BBLKU		; Bad block unreported
		EF_BBLKR		; Bad block reported
		>
;
;	Opcodes
;
	K<
		OP_ABORT,1		; Abort
		OP_GTCMD,2		; Get Command Status
		OP_GTUNT,3		; Get Unit Status
		OP_STCON,4		; Set Controller Characteristics
		OP_SEREX,7		; Serious exception end packet
		OP_AVAIL,8		; Available
		OP_ONLIN,9		; Online
		OP_STUNT,10		; Set Unit Characteristics
		OP_DTACP,11		; Determine Access Paths
		OP_ACCES,16		; Access
		OP_CMPCD,17		; Compare Controller Data
		OP_ERASE,18		; Erase
		OP_FLUSH,19		; Flush
		OP_REPLC,20		; Replace
		OP_COMP,32		; Compare Host Data
		OP_READ,33		; Read
		OP_WRITE,34		; Write
		OP_AVATN,64		; AVAILABLE attention Message
		OP_DUPUN,65		; Duplicate Unit Number attn Message
		OP_ACPTH,66		; Access Path Attn Message
		OP_END,128		; End packet
	>
;
;	Opcode Bit Meanings
;
	V	<
		,6
		OP_ATTN			; Bit meaning Attention message
		OP_END			; Bit meaning End message
		>
;
;	Controller and Unit identifier Classes. (Device Class)
;
	K<
		CL_CNTRL,1		; MSCP Controller
		CL_DISK,2		; Disk Class Device
		CL_TAPE,3		; Tape Class Device
	>
;
;	MSCP Controller Model
;
	K<
		CM_HSC50,1		; HSC50
		CM_UDA50,2		; UDA50
		CM_RC25,3		; AZTEC
		CM_EMULA,4		; Emulator
		CM_TU81,5		; TU81
		CM_UDA52,6		; UDA52
	>
	E


;+
; MAGNETIC TAPE VOLUME LIST
; THIS STRUCTURE DESCRIBES THE VOLUMES IN A VOLUME SET
;-
	$STRUCT	MVL
	M	1		
	F	VCB		;ADDRESS OF VCB
	F	,L		;SPARE
	F	SIZE,W		;SIZE OF STRUCTURE
	F	TYPE,B		;TYPE OF STRUCTURE
	F	NVOLS,B		;NUMBER OF VOLUMES IN VOLUME SET
	F	SET_ID,T,6	;FILE SET ID FOR THE VOLUME SET
	F	VOL_ACC,B	;VOLUME ACCESSIBILTY CHARACTER DEFAULT
	F	MOU_PRV,B	;USER'S MOUNT TIME PRIVILEGES
		V<
		VOLPRO		;VOLPRO PRIVILEGE
		OVRPRO		;OVERRIDE PRIVILEGE (BYPASS,SYSPRV,VOLPRO)
		>
	L	FIXLEN		;LENGTH OF FIXED AREA OF STRUCTURE

; THE FOLLOWING STRUCTURE IN REPEATED IN MVL FOR EACH REEL IN VOLUME SET
	P	1
	F	VOLLBL,T,6	;VOLUME LABEL
	F	RVN,B		;RELATIVE UNIT NUMBER
	F	STATUS,B	;STATUS OF VOLUME
		V<
		MOUNTED		;REEL IS MOUNTED
		UNUSED		;IS THIS ENTRY IN USE
		OVERIDE		;CAN OVERRIDE PROTECTION ON THIS REEL
		>
	L	LENGTH		;LENGTH OF STRUCTURE
	E


;++
;
; Structure for network proxy login file, NETUAF.DAT
;
;--

	$STRUCT NAF
	F	REMNAME,T,18	;Combined nodename and remote username
	S	NODE,,T,6	;Node name field
	S	REMUSER,,T,12	;Remote username field
	F	LOCALUSER,T,12	;Local username field
	L	LENGTH		;Length of record
	E



;+
; NEXUS DEVICE AND ADAPTER TYPE CODES
;-

	$STRUCT	NDT

	C< ,$_				;DEFINE CONSTANT TYPE CODES
	MEM4NI,8			;MEMORY, 4K NOT INTERLEAVED
	MEM4I,9				;MEMORY, 4K INTERLEAVED
	MEM16NI,+^X10			;MEMORY, 16K NOT INTERLEAVED
	MEM16I,+^X11			;MEMORY, 16K INTERLEAVED
	MB,+^X20			;MBA 0,1,2, OR 3
	UB0,+^X28			;UB ADAPTER OR INTERCONNECT 0,
	UB1,+^X29			; 1,
	UB2,+^X2A			; 2,
	UB3,+^X2B			; OR 3
	CI,+^X38			;CI780'S, CI750'S
	MPM0,+^X40			;MULTIPORT MEMORY 0,
	MPM1,+^X41			; 1,
	MPM2,+^X42			; 2,
	MPM3,+^X43			; OR 3
	DR32,+^X30			;DR32 0,1,2,...
	MEM64NIL,+^X68			;64K NON-INTERLEAVED MEM, LOWER CONTROLLER
	MEM64EIL,+^X69			;64K EXTERNALLY INTERLEAVED MEM, LOWER
	MEM64NIU,+^X6A			;64K NON-INTERLEAVED MEM, UPPER CONTROLLER
	MEM64EIU,+^X6B			;64K EXTERNALLY INTERLEAVED MEM, UPPER
	MEM64I,+^X6C			;64K INTERNALLY INTERLEAVED MEMORY
	>
	E
;+
;
; FORMAT OF THE FILE NAME BLOCK. THE FILE NAME BLOCK IS USED AS AN INTERNAL
; INTERFACE TO THE DIRECTORY SCAN ROUTINE, AND IS ALSO THE FORMAT OF A
; DIRECTORY RECORD.
;
;-


	$STRUCT	NMB
	F FID,W,3	; FILE ID
	S FID_NUM,0,W	; FID - FILE NUMBER
	S FID_SEQ,2,W	; FID - FILE SEQUENCE NUMBER
	S FID_RVN,4,W	; FID - RELATIVE VOLUME NUMBER
	F NAME,W,3	; FILE NAME (RAD-50)
	F TYPE,W	; FILE TYPE (RAD-50)
	F VERSION,W,,S	; VERSION NUMBER
	L DIRENTRY	; LENGTH OF DIRECTORY ENTRY

	F FLAGS,W	; NAME STATUS FLAGS
	V<M
		,3
		ALLVER		; MATCH ALL VERSIONS
		ALLTYP		; MATCH ALL TYPES
		ALLNAM		; MATCH ALL NAMES
		,2
		WILD		; WILD CARDS IN FILE NAME
		NEWVER		; MAXIMIZE VERSION NUMBER
		SUPERSEDE	; SUPERSEDE EXISTING FILE
		FINDFID		; SEARCH FOR FILE ID
		,2
		LOWVER		; LOWER VERSION OF FILE EXISTS
		HIGHVER		; HIGHER VERSION OF FILE EXISTS
	>
	F CONTEXT,W	; START POINT FOR NEXT FIND
	L LENGTH	; LENGTH OF NAME BLOCK
	E

;+
; PB - SCS PATH BLOCK
;
; THE PB HAS INFORMATION ABOUT THE PHYSICAL PATH TO ANOTHER
; SYSTEM IN A CLUSTER.  PATH BLOCKS TO THE SAME SYSTEM ARE
; LINKED TOGETHER TO THE SYSTEM BLOCK (SB).
;-

	$STRUCT	PB

	F	FLINK,L			;FWD LINK TO NEXT PB
	F	BLINK,L			;BACK LINK TO PREVIOUS PB
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR PB
	F	RSTATION,B,6		;REMOTE STATION ADDRESS
	F	STATE,W			;PATH STATE
					;STATE DEFINITIONS:
	C	<PB,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1
		CLOSED			; NEWLY CREATED PATHBLOCK
		ST_SENT			; START SENT
		ST_REC			; START RECEIVED
		OPEN			; OPEN PORT-PORT VIRTUAL CIRCUIT
		>			;
	C	VC_FAIL,<^X8000>	; VC FAILURE IN PROGRESS STATE
	C	PWR_FAIL,<^X4000>	; PWR FAIL RECOVERY IN PROGRESS STATE
	F	RPORT_TYP,L		;HARDWARE PORT TYPE CODE
		V <			;DEFINE PORT TYPE CODE SUBFIELDS:
		PORT_TYP,31		; HARDWARE PORT TYPE,
		DUALPATH,,,M		; 0/1 FOR SINGLE PATH/DUAL PATH PORT
		>			;
	F	RPORT_REV,L		;REMOTE PORT HW REV LEVEL
	F	RPORT_FCN,L		;REMOTE PORT FUNCTION MASK
	F	RST_PORT,B		;OWNING PORT WHICH RESET REMOTE PORT
	F	RSTATE,B		;REMOTE PORT STATUS:
		V <			; DEFINE STATUS FIELDS:
		MAINT,,,M		; 0/1 FOR MAINTENANCE MODE NO/YES
		STATE,2			; REMOTE PORT STATE:
		>			;
	C	<PB,$C_,0,1		; DEFINE REMOTE STATES, 0 ORIGIN
		UNINIT			; UNINITIALIZED,
		DISAB			; DISABLED
		ENAB			; ENABLED
		>			;
	F	RETRY,W			;START HANDSHAKE RETRY COUNT
	F	LPORT_NAME,T,4		;LOCAL PORT DEVICE NAME
	F	PDT,L			;ADDR OF PORT DESCRIPTOR TABLE FOR
					; LOCAL PORT
	F	CDTLST,L		;LINK TO FIRST CDT OVER THIS PATH
					; (0 IF NO CDT'S)
	F	WAITQFL,L		;SCS SEND MSG WAIT QUEUE FLINK
	S	SB,,L			;FORMATIVE SYSTEM BLOCK LINK
	F	WAITQBL,L		;SCS SEND MSG WAIT QUEUE BLINK
	S	DUETIME,,L		;START HANDSHAKE TIMER
	F	SCSMSG,L		;ADDR OF SCS MESSAGE BUFFER
	F	STS,W			;PATH BLOCK STATUS
		V <			;DEFINE STATUS BITS:
		TIM,,,M			; HANDSHAKE TIMEOUT IN PROGRESS
		>			;
	F	CBL_STS,B		;CABLE STATUS TO THE REMOTE
		V <			;DEFINE CABLE STATUS BITS:
		CUR_CBL,,,M		; 1/0 FOR CURRENT STATUS OK/BAD
		>			;
	F	P0_STS,B		;PATH 0 STATUS
	F	P1_STS,B		;PATH 1 STATUS
		V <			;DEFINE PATH STATUS BITS:
		CUR_PS,,,M		; 1/0 FOR CURRENT STATUS OK/BROKEN
		>			;
	F	,B,3			;RESERVED BYTES
	L	LENGTH			;LENGTH OF A PATH BLOCK

	E

;+
; DEFINE PERFORMANCE BUFFER HEADER
;-
 
	$STRUCT	PBH
 
	F	BUFRFL,L		;BUFFER FORWARD LINK
	F	BUFRBL,L		;BUFFER BACKWARD LINK
	F	SIZE,W			;SIZE OF PERFORMANCE DATA BUFFER
	F	TYPE,B			;DATA STRUCTURE TYPE
	F	MSGCNT,W		;COUNT OF MESSAGES IN BUFFER
	L	START			;START OF DATA AREA
	F	,B,499			;DATA AREA
	L	LENGTH			;LENGTH OF PERFORMANCE DATA BUFFER
 
	E

;+
; PCB DEFINITIONS
;-
 
	$STRUCT	PCB
 
	F	SQFL,L			;STATE QUEUE FORWARD LINK
	F	SQBL,L			;STATE QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR PCB
	F	PRI,B			;PROCESS CURRENT PRIORITY
	F	ASTACT,B		;ACCESS MODES WITH ACTIVE ASTS
	F	ASTEN,B			;ACCESS MODES WITH ASTS ENABLED
	F	MTXCNT,W		;COUNT OF MUTEX SEMAPHORES OWNED
	F	ASTQFL,L		;AST QUEUE FORWARD LINK(HEAD)
	F	ASTQBL,L		;AST QUEUE BACK LINK(TAIL)
	F	PHYPCB,L		;PHYSICAL ADDRESS OF HW PCB
	F	OWNER,L			;PID OF CREATOR
	F	WSSWP,L			;SWAP FILE DISK ADDRESS
	F	STS,L			;PROCESS STATUS FLAGS
		V <			; BIT DEFINITIONS
		 RES   			; RESIDENT, IN BALANCE SET
		 DELPEN   		; DELETE PENDING
		 FORCPEN   		; FORCE EXIT PENDING
		 INQUAN   		; INITIAL QUANTUM IN PROGRESS
		 PSWAPM			; PROCESS SWAP MODE (1=NOSWAP)
		 RESPEN   		; RESUME PENDING, SKIP SUSPEND
		 SSFEXC   		; SYSTEM SERVICE EXCEPTION ENABLE (K)
		 SSFEXCE		; SYSTEM SERVICE EXCEPTION ENABLE (E)
		 SSFEXCS		; SYSTEM SERVICE EXCEPTION ENABLE (S)
		 SSFEXCU		; SYSTEM SERVICE EXCEPTION ENABLE (U)
		 SSRWAIT   		; SYSTEM SERVICE RESOURCE WAIT DISABLE
		 SUSPEN   		; SUSPEND PENDING
		 WAKEPEN   		; WAKE PENDING, SKIP HIBERNATE
		 WALL   		; WAIT FOR ALL EVENTS IN MASK
		 BATCH   		; PROCESS IS A BATCH JOB
		 NOACNT   		; NO ACCOUNTING FOR PROCESS
		 SWPVBN			; WRITE FOR SWP VBN IN PROGRESS
		 ASTPEN			; AST PENDING
		 PHDRES			; PROCESS HEADER RESIDENT
		 HIBER			; HIBERNATE AFTER INITIAL IMAGE ACTIVATE
		 LOGIN			; LOGIN WITHOUT READING AUTH FILE
		NETWRK			; NETWORK CONNECTED JOB
		PWRAST			; POWER FAIL AST
		NODELET			; NO DELETE
		DISAWS			; 1=DISABLE AUTOMATIC WS ADJUSTMENT
		>			; END OF BIT DEFINITIONS
	F	WTIME,L			;TIME AT START OF WAIT
	S	PRISAV,0,B		;SAVED CURRENT PRIORITY
	S	PRIBSAV,1,B		;SAVE BASE PRIORITY
	F	STATE,W			;PROCESS STATE
	F	WEFC,B			;WAITING EF CLUSTER NUMBER
	F	PRIB,B			;BASE PRIORITY
	F	APTCNT,W		;ACTIVE PAGE TABLE COUNT
	F	TMBU,W			;TERMINATION MAILBOX UNIT NO.
	F	GPGCNT,W		;GLOBAL PAGE COUNT IN WS
	F	PPGCNT,W		;PROCESS PAGE COUNT IN WS
	F	ASTCNT,W		;AST COUNT REMAINING
	F	BIOCNT,W		;BUFFERED I/O COUNT REMAINING
	F	BIOLM,W			;BUFFERED I/O LIMIT
	F	DIOCNT,W		;DIRECT I/O COUNT REMAINING
	F	DIOLM,W			;DIRECT I/O COUNT LIMIT
	F	PRCCNT,W		;SUBPROCESS COUNT
	F	TERMINAL,T,8		;TERMINAL DEVICE NAME STRING
					;FOR INTERACTIVE JOBS
	F	PQB,L			;POINTER TO PROCESS QUOTA BLOCK
					;(PROCESS CREATION ONLY)
	S	EFWM,,L			;EVENT FLAG WAIT MASK
	F	EFCS,L			;LOCAL EVENT FLAG CLUSTER,SYSTEM
	F	EFCU,L			;LOCAL EVENT FLAG CLUSTER, USER
	F	EFC2P,L			;POINTER TO GLOBAL CLUSTER #2
	F	EFC3P,L			;POINTER TO GLOBAL CLUSTER #3
	F	PID,L			;PROCESS IDENTIFICATION
	F	PHD,L			;PROCESS HEADER ADDRESS
	F	LNAME,T,16		;LOGICAL NAME OF PROCESS
	F	JIB,L			;ADDRESS OF JOB INFORMATION BLOCK
	F	PRIV,Q			;CURRENT PRIVILEGE MASK
	F	ARB,L			;ADDRESS OF ACCESS RIGHTS BLOCK
	F	UIC,L			;LOGON UIC OF PROCESS
	S	MEM,0,W			;MEMBER NUMBER IN UIC
	S	GRP,2,W			;GROUP NUMBER IN UIC
	F	LOCKQFL,L		;LOCK QUEUE FORWARD LINK
	F	LOCKQBL,L		;LOCK QUEUE BACKWARD LINK
	F	DLCKPRI,L		;DEADLOCK RESOLUTION PRIORITY
	F	IPAST,L			;VECTOR OF MODE BITS FOR IPASTS
	L	LENGTH			;LENGTH OF PCB
 
	E

;+
; DEFINE DEVICE PERFORMANCE DATA BLOCK
;-
 
	$STRUCT	PDB
 
	F	FREEFL,L		;FREE BUFFER LISTHEAD FORWARD LINK
	F	FREEBL,L		;FREE BUFFER LISTHEAD BACKLINK
	F	SIZE,W			;SIZE OF DATA STRUCTURE
	F	TYPE,B			;TYPE OF DATA STRUCTURE
	F	OVERRUN,B		;OVERRUN INDICATOR
	F	FILLFL,L		;FILLED BUFFER LISTHEAD FORWARD LINK
	F	FILLBL,L		;FILLED BUFFER LISTHEAD BACKWARD LINK
	F	CURBUF,L		;ADDRESS OF CURRENT BUFFER
	F	NXTBUF,L		;ADDRESS OF NEXT LOCATION IN BUFFER
	F	ENDBUF,L		;ADDRESS OF END OF BUFFER
	F	PID			;PROCESS ID OF DATA COLLECTION PROCESS
	F	DEVCLASS,B		;DEVICE CLASS SELECTION
	F	DEVTYPE,B		;DEVICE TYPE SELECTION
	F	ANDM,W			;STATUS SELECTION 'AND' MASK
	F	XORM,W			;STATUS SELECTION 'XOR' MASK
	F	BUFCNT,W		;COUNT OF FILLED BUFFERS
	F	FUNC,Q			;SELECTION FUNCTION MASK
	L	LENGTH			;LENGTH OF DATA CONTROL BLOCK
 
	E

;+
; DEFINE PORT-INDEPENDENT OFFSETS IN A PORT DESCRIPTOR TABLE.
;
; THERE IS ONE PDT PER PORT ACCESSED VIA SCS.  THESE PORTS INCLUDE 
; CI'S AND UDA'S.  THE PDT CONTAINS A PORT-INDEPENDENT PIECE (DEFINED
; HERE) FOLLOWED BY AN OPTIONAL PORT-SPECIFIC PIECE DEFINED IN THE
; PORT DRIVER.  PDT'S ARE CREATED BY THE CONTROLLER INIT ROUTINES
; OF THE INDIVIDUAL PORT DRIVERS.
;-

	$STRUCT	PDT

	F	,L			; UNUSED LONGWORD
	F	,B,3			; THREE UNUSED BYTES
	F	PDT_TYPE,B		; TYPE OF PDT
		C<
		 PA,1			; CI PORT
		 PU,2			; UDA PORT
		>	
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE = SCS
	F	SUBTYP,B		;STRUCTURE SUBTYPE
	L	SCSBASE			;SCS ENTRIES INTO THE PORT DRIVER:
	F	ACCEPT,L		; ACCEPT A CONNECT REQUEST
	F	ALLOCDG,L		; ALLOCATE A DG BUFFER
	F	ALLOCMSG,L		; ALLOCATE A MESSAGE BUFFER
	F	CONNECT,L		; REQUEST CONNECTION TO REMOTE
	F	DEALLOCDG,L		; DEALLOCATE DG BUFFER
	F	DEALLOMSG,L		; DEALLOCATE MSG BUFFER
	F	DEALRGMSG,L		; DEALLOC MSG BUFF, ARGS IN REGISTERS
	F	DCONNECT,L		; BREAK CONNECTION
	F	MAP,L			; MAP A BUFFER FOR BLK XFER
	F	MAPBYPASS,L		; MAP, DISABL ACCESS CHECKS
	F	MAPIRP,L		; MAP, GET ARGS FROM IRP
	F	MAPIRPBYP,L		; MAP, ARGS FROM IRP, DISABL ACCESS CHECKS
	F	QUEUEDG,L		; QUEUE A DG FOR RECEIVE
	F	QUEUEMDGS,L		; ALLOC/DEALLOC DG'S FOR RECEIVE
	F	RCHMSGBUF,L		; RECYCLE MSG BUFF, HIGH PRIORITY
	F	RCLMSGBUF,L		; RECYCLE MSG BUFF, LOW PRIORITY
	F	REJECT,L		; REJECT CONNECT REQUEST
	F	REQDATA,L		; REQUEST BLK DATA XFER
	F	SENDDATA,L		; SEND BLK DATA XFER
	F	SENDDG,L		; SEND A DATAGRAM
	F	SENDMSG,L		; SEND A MESSAGE
	F	SNDCNTMSG,L		; SEND MSG WITH BYTE COUNT
	F	UNMAP,L			; UNMAP A BUFFER
	F	READCOUNT,L		; READ COUNTERS (FMT PORT SPECIFIC)
	F	RLSCOUNT,L		; RELEASE AND READ COUNTERS
	F	MRESET,L		; MAINT RESET OF REMOTE
	F	MSTART,L		; MAINT START OF REMOTE
	F	MAINTFCN,L		; MISC MAINT FUNCTIONS NOT SUPPORTED
					;  IN VMS
	L	SCSEND			;END OF SCS ENTRIES TO PORT DRIVER
	F	,L,1			;RESERVED VECTOR
	F	WAITQFL,L		;LISTHEAD FOR FORK BLOCKS WAITING
	F	WAITQBL,L		; FOR NONPAGED POOL 
	F	MSGHDRSZ,L		;MESSAGE HEADER SIZE
	F	DGOVRHD,L		;DATAGRAM HEADER SIZE
	F	FLAGS,W			;PORT FLAGS
		V <			;DEFINE FLAGS:
		CNTBSY,,,M		; COUNTERS IN USE
		CNTRLS,,,M		; RELEASE COUNTERS
		>			;
	F	,W			;RESERVED WORD
	F	CNTOWNER,T,16		;NAME OF SYSAP USING COUNTERS
	F	CNTCDRP,L		;CDRP OF SYSAP READING COUNTERS
	L	LENGTH			;SIZE OF PORT-INDEPENDENT PIECE
					; OF PDT.

	E


;+
; PAGE FILE CONTROL BLOCK
;-

	$STRUCT	PFL

;
; ***** L_VBN, L_WINDOW, AND B_PFC MUST BE THE SAME OFFSET VALUES AS THE 
; ***** EQUIVALENTLY NAMED OFFSETS IN $SECDEF
;
	F	BITMAP,L		;ADDRESS OF START OF BIT MAP
					;BIT = 1 MEANS AVAILABLE
	F	STARTBYTE,L		;STARTING BYTE OFFSET TO SCAN
	F	SIZE,W			;SIZE OF PAGE FILE CONTROL BLOCK
	F	TYPE,B			;PAGE FILE CONTROL BLOCK TYPE CODE
	F	PFC,B			;PAGE FAULT CLUSTER FOR PAGE READS
	F	WINDOW,L		;WINDOW ADDRESS
	F	VBN,L			;BASE VBN 
	F	BITMAPSIZ,L		;SIZE IN BYTES OF PAGE FILE
	F	FREPAGCNT,L		;COUNT - 1 OF PAGES WHICH MAY BE ALLOCATED
	F	MAXVBN,L		;MASK APPLIED TO PTE WITH PAGING FILE
					; BACKING STORE ADDRESS
	F	ERRORCNT,W		;COUNT OF POTENTIALLY BAD PAGES
	F	ALLOCSIZ,B		;CURRENT ALLOCATION REQUEST SIZE
	F	FLAGS,B			;FLAGS BYTE FOR THIS PAGE FILE
		V<M
		INITED			;THIS PAGE FILE IS USABLE
		PAGFILFUL		;REQUEST FOR PAGING SPACE HAS FAILED
		SWPFILFUL		;REQUEST FOR SWAPPING SPACE HAS FAILED
		,4			;SPARE BITS FOR EXPANSION
		STOPPER			;RESERVED FOR ALL TIME (MUST NEVER BE SET)
		>
	L	LENGTH			;SIZE OF PAGE FILE CONTROL BLOCK
	F	BITMAPLOC		;BITMAP FOLLOWS PFL HEADER

	E


;+
; PFN DATA BASE DEFINITIONS
;-

	$STRUCT	PFN
;
; VIELD DEFINITIONS IN PFN$AB_STATE
;
	V <
		LOC,3,,M		;LOCATION OF PAGE
;
; ***** THE FOLLOWING SPARE BIT MUST BE USED FOR EXTENSION OF THE LOC FIELD
; ***** OR ALTERNATIVELY THE DELCON BIT MUST BE MOVED ADJACENT TO LOC
;
		,1			;NOT IN USE
		DELCON,,,M		;DELETE PFN CONTENTS WHEN REF=0
		,2			;NOT IN USE
		MODIFY,,,M		;MODIFY BIT
	>
;
; VIELD DEFINITIONS IN PFN$AB_TYPE
;
	V <
		PAGTYP,3,,M		;PAGE TYPE
		,1			;NOT IN USE
		COLLISION,,,M		;EMPTY COLLISION QUEUE WHEN PAGE READ COMPLETE
		BADPAG,,,M		;BAD PAGE BIT
		RPTEVT,,,M		;REPORT EVENT ON I/O COMPLETE
	>
;
; VIELD DEFINITIONS IN PFN$AL_BAK
;
	V <
		BAK,23,,M		;BACKUP ADDRESS
		GBLBAK,1,,M		;GLOBAL BACKING STORE ADDRESS
		PGFLX,8,,M		;PAGE FILE INDEX
	>
;
; LOCATION VIELD VALUES
;
	C <
		FREPAGLST,0		;ON FREE PAGE LIST
		MFYPAGLST,1		;ON MODIFIED PAGE LIST
		BADPAGLST,2		;ON BAD PAGE LIST
		RELPEND,3		;RELEASE PENDING
					;WHEN REFCNT = 0 RELEASE PFN
		RDERR,4			;READ ERROR WHILE PAGING IN
		WRTINPROG,5		;WRITE IN PROGRESS (BY MFY PAG WRITER)
		RDINPROG,6		;READ IN PROGRESS (PAGE IN)
		ACTIVE,7		;PAGE IS ACTIVE AND VALID
	>
;
; PAGE TYPE VIELD DEFINITIONS
;
	C <
		PROCESS,0		;PROCESS PAGE
		SYSTEM,1		;SYSTEM PAGE
		GLOBAL,2		;GLOBAL PAGE (READ ONLY)
		GBLWRT,3		;GLOBAL WRITABLE PAGE
		PPGTBL,4		;PROCESS PAGE TABLE
		GPGTBL,5		;GLOBAL PAGE TABLE
	>

	E

;+
; A PROCESS HEADER CONTAINS THE SWAPPABLE SCHEDULER AND
; MEMORY MANAGEMENT DATA BASES FOR A PROCESS IN THE
; BALANCE SET.
;-

	$STRUCT	PHD

	F	PRIVMSK,Q		;PRIVILEGE MASK
;
; WORKING SET LIST POINTERS - THESE CONTAIN LONG WORD OFFSETS FROM THE
; BEGINNING OF THE PROCESS HEADER.
;
	F	WSLIST,W		;1ST WORKING SET LIST ENTRY
	F	WSAUTH,W		;AUTHORIZED WORKING SET SIZE
	F	WSLOCK,W		;1ST LOCKED WORKING SET LIST ENTRY
	F	WSDYN,W			;1ST DYNAMIC WORKING SET LIST ENTRY
	F	WSNEXT,W		;LAST WSL ENTRY REPLACED
	F	WSLAST,W		;LAST WSL ENTRY IN LIST
	F	WSAUTHEXT,W		;AUTHORIZED WS EXTENT
;
; THE FOLLOWING THREE WORDS SPECIFY THE MAXIMUM AND INITIAL WORKING SET
; SIZES FOR THE PROCESS.  RATHER THAN CONTAINING THE COUNT OF PAGES
; THEY CONTAIN THE LONG WORD INDEX TO WHAT WOULD BE THE LAST WORKING
; SET LIST ENTRY.
;
	F	WSEXTENT,W		;MAX WORKING SET SIZE AGAINST BORROWING
	F	WSQUOTA,W		;QUOTA ON WORKING SET SIZE
	F	DFWSCNT,W		;DEFAULT WORKING SET SIZE
	F	PAGFIL,L		;PAGING FILE INDEX, LONG WORD REF
	S	PAGFIL,3,B		;PAGING FILE INDEX, BYTE REFERENCE
;
; PROCESS SECTION TABLE DATA BASE
;	PSTBASOFF IS THE BYTE OFFSET (INTEGRAL # OF PAGES) FROM THE
; BEGINNING OF THE PROCESS HEADER TO THE 1ST LONG WORD BEYOND THE 
; PROCESS SECTION TABLE.
;	THE WORDS, PSTLAST AND PSTFREE ARE SECTION TABLE INDICES WHICH
; ARE THE NEGATIVE LONG WORD INDEX FROM THE END OF THE SECTION TABLE TO
; THE SECTION TABLE ENTRY.
;
	F	PSTBASOFF,L		;BYTE OFFSET TO BASE OF PST
					;FIRST LONG WORD NOT IN PST
					;PST GROWS BACKWARDS FROM HERE
	S	PST,,W			;*****TEMP*****
	F	PSTLAST,W		;END OF PROCESS SECTION TABLE
					;ADR OF LAST PSTE ALLOCATED
	F	PSTFREE,W		;HEAD OF FREE PSTE LIST
;
; CREATE/DELETE PAGE CONTEXT
;
	F	FREP0VA,L		;1ST FREE VIRTUAL ADR AT END OF P0 SPACE
					;***** MUST BE QUAD WORD AWAY FROM FREP1VA
	F	FREPTECNT,L		;CNT OF FREE PTE'S BETWEEN THE ENDS
					;0F THE P0 AND P1 PAGE TABLES
	F	FREP1VA,L		;1ST FREE VIRTUAL ADR AT END OF P1 SPACE
	F	DFPFC,B			;DEFAULT PAGE FAULT CLUSTER
	F	PGTBPFC,B		;PAGE TABLE CLUSTER FACTOR
	F	FLAGS,W			;FLAGS WORD
		V<M
		PFMFLG			;PAGE FAULT MONITORING ENABLED
		DALCSTX			;NEED TO DEALLOCATE SECTION INDICES
		WSPEAKCHK		;CHECK FOR NEW WORKING SET SIZE (PROC)
		NOACCVIO		;SET AFTER INSWAP OF PROCESS HEADER
		IWSPEAKCK		;CHECK FOR NEW WORKING SET SIZE (IMAGE)
		>
;
; QUOTAS AND LIMITS
;
	F	CPUTIM,L		;ACCUMULATED CPU TIME CHARGED
	F	QUANT,W			;ACCUMULATED CPU TIME SINCE
					;LAST QUANTUM OVERFLOW
	F	PRCLM,W			;SUBPROCESS QUOTA
	F	ASTLM,W			;AST LIMIT

	F	PHVINDEX,W		;PROCESS HEADER VECTOR INDEX
	F	BAK,W			;POINTER TO BACKUP ADDRESS VECTOR FOR
					;PROCESS HEADER PAGES
	F	WSLX,W			;POINTER TO WORKING SET LIST INDEX
					;SAVE AREA
	S	PSTBASMAX,0,W		;LW OFFSET TO TOP PST ADDRESS
	F	PAGEFLTS,L		;COUNT OF PAGE FAULTS
	F	WSSIZE,W		;CURRENT ALLOWED WORKING SET SIZE
	F	SWAPSIZE,W		;CURRENT SWAP BLOCK ALLOCATION

;
; THE NEXT TWO I/O COUNTERS MUST BE ADJACENT
;

	F	DIOCNT,L		;DIRECT I/O COUNT
	F	BIOCNT,L		;BUFFERED I/O COUNT

	F	CPULIM,L		;LIMIT ON CPU TIME FOR PROCESS
	F	CPUMODE,B		;ACCESS MODE TO NOTIFY ABOUT CPUTIME
	F	AWSMODE,B		;ACCESS MODE FLAG FOR AUTO WS AST
	F	WAITIME,W		;TIME OF DAY OF WAIT REQUEST @6.5536 MS
;
; PAGE TABLE STATISTICS
;
	F	PTWSLELCK,L		; BYTE OFFSET TO BYTE ARRAY OF COUNTS
					; OF LOCKED WSLE'S IN THIS PAGE TABLE
	F	PTWSLEVAL,L		; BYTE OFFSET TO BYTE ARRAY OF COUNTS
					; OF VALID WSLE'S IN THIS PAGE TABLE
	C	PHDPAGCTX,8		; SIZE OF CONTEXT FOR PHD PAGES
	F	PTCNTLCK,W		; COUNT OF PAGE TABLES CONTAINING
					; 1 OR MORE LOCKED WSLE
	F	PTCNTVAL,W		; COUNT OF PAGE TABLES CONTAINING
					; 1 OR MORE VALID WSLE
	F	PTCNTACT,W		; COUNT OF ACTIVE PAGE TABLES
	F	PTCNTMAX,W		; MAX COUNT OF PAGE TABLES
					; WHICH HAVE NON-ZERO PTE'S
	F	WSFLUID,W		; GUARANTEED NUMBER OF FLUID WS PAGES
	F	EXTDYNWS,W		; EXTRA DYNAMIC WORKING SET LIST ENTRIES
					; ABOVE REQUIRED WSFLUID MINIMUM
;
; HARDWARE PCB PORTION OF PROCESS HEADER
;
	F	PCB,L			;HARDWARE PCB
	S	KSP,,L			;KERNEL STACK POINTER
	F	ESP,L			;EXEC STACK POINTER
	F	SSP,L			;SUPERVISOR STACK POINTER
	F	USP,L			;USER STACK POINTER
	F	R0,L			;R0
	F	R1,L			;R1
	F	R2,L			;R2
	F	R3,L			;R3
	F	R4,L			;R4
	F	R5,L			;R5
	F	R6,L			;R6
	F	R7,L			;R7
	F	R8,L			;R8
	F	R9,L			;R9
	F	R10,L			;R10
	F	R11,L			;R11
	F	R12,L			;R12
	F	R13,L			;R13
	F	PC,L			;PC
	F	PSL,L			;PROGRAM STATUS LONGWORD
	F	P0BR,L			;P0 BASE REGISTER
	F	P0LRASTL,L		;P0LR, ASTLVL
		V <			; VIELDS IN P0LRASTL
		P0LR,24			;P0 LENGTH REGISTER
		ASTLVL,8		; AST LEVEL
		>			; END OF VIELDS
	S	ASTLVL,3,B		;AST LEVEL SUBFIELD
	F	P1BR,L			;P1 BASE REGISTER
	F	P1LR,L			;P1 LENGTH REGISTER
	F	EMPTPG,W		;COUNT OF EMPTY WORKING SET PAGES
	F	RESPGCNT,W		;RESIDENT PAGE COUNT
	F	REQPGCNT,W		;REQUIRED PAGE COUNT
	F	CWSLX,W			;CONTINUATION WSLX
	F	AUTHPRIV,Q		;AUTHORIZED PRIVILEGES MASK
	F	IMAGPRIV,Q		;INSTALLED IMAGE PRIVILEGES MASK
	F	RESLSTH,L		;POINTER TO RESOURCE LIST
	F	IMGCNT,L		;IMAGE COUNTER BUMPED BY SYSRUNDWN
	F	PFLTRATE,L		;PAGE FAULT RATE 
	F	PFLREF,L		;PAGE FAULTS AT END OF LAST INTERVAL
	F	TIMREF,L		;TIME AT END OF LAST INTERVAL
	F	MPINHIBIT,L		;COUNT OF REASONS WHY PROCESS
					; MUST RUN ON PRIMARY IN MP SYSTEM
	F	PGFLTIO,L		;COUNT OF PAGEFAULT I/O
	F	AUTHPRI,B		;INITIAL PROCESS PRIORITY
	F	,B			;SPARE
	F	,W			;SPARE
	F	EXTRACPU,L		;ACCUMULATED CPU TIME LIMIT EXTENSION
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	SPARE,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
	F	,L			;SPARE
;
; END OF FIXED PORTION OF PROCESS HEADER
;
	L	LENGTH			;LENGTH OF FIXED PART OF PROCESS HEADER
	F	WSL,L			;FIRST WORKING SET LIST ENTRY
 
	E

;+
; PERFORMANCE I/O INFORMATION BLOCK
;-
 
	$STRUCT	PIB
 
	F	TYPE,B			;TYPE OF ENTRY
	M	1
 
;
; START OF I/O REQUEST TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	SRQ_PRI,B		;BASE PRIORITY OF PROCESS
	F	,W			;SPARE UNUSED WORD
	F	SRQ_TIME,L		;TIME OF I/O TRANSACTION
	F	SRQ_SEQN,L		;SEQUENCE NUMBER OF I/O TRANSACTION
	F	SRQ_PID,L		;REQUESTER PID
	F	SRQ_UCB,L		;ADDRESS OF DEVICE UCB
	F	SRQ_FUNC,W		;I/O FUNCTION CODE
	F	SRQ_STS,W		;I/O PACKET STATUS
	L	SRQ_SIZE		;LENGTH OF START I/O MESSAGE
 
;
; START OF I/O TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	,B			;SPARE UNUSED BYTE
	F	SIO_BCNT,W		;TRANSFER BYTE COUNT
	F	SIO_TIME,L		;TIME OF TRANSACTION
	F	SIO_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	F	SIO_MEDIA,L		;TRANSFER MEDIA ADDRESS
	L	SIO_SIZE		;LENGTH OF I/O TRANSACTION MESSAGE
 
;
; END OF I/O TRANSACTION MESSAGE BLOCK
;
 
	P	1
	F	,B,3			;SPARE UNUSED BYTES
	F	EIO_TIME,L		;TIME OF TRANSACTION
	F	EIO_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	F	EIO_IOSB,Q		;FINAL I/O STATUS
	L	EIO_SIZE		;LENGTH OF END OF I/O TRANSACTION
 
;
; END OF I/O REQUEST MESSAGE BLOCK
;
 
	P	1
	F	,B,3			;SPARE UNUSED BYTES
	F	ERQ_TIME,L		;TIME OF TRANSACTION
	F	ERQ_SEQN,L		;SEQUENCE NUMBER OF TRANSACTION
	L	ERQ_SIZE		;LENGTH OF END OF I/O REQUEST TRANSACTION
 
;
; I/O MESSAGE BLOCK ENTRY TYPE CODES
;
 
	K	SRQ,0			;START OF I/O REQUEST
	K	SIO,1			;START OF I/O TRANSACTION
	K	EIO,2			;END OF I/O TRANSACTION
	K	ERQ,3			;END OF I/O REQUEST
 
	E

;+
; PAGE FAULT MONITOR CONTROL BLOCK
;-

	$STRUCT	PMB

	F	CURBUF,L		;CURRENT BUFFER POINTER
	F	BUFEND,L		;CURRENT BUFFER END
	F	SIZE,W			;BLOCK SIZE FIELD
	F	MBXCHN,W		;SUBPROCESS MAILBOX CHANNEL
	F	HDR,Q			;FREE BUFFER QUEUE HEADER
	F	SBPHDR,Q		;SUBRPCESS QUEUE HEADER
	F	PID,L			;SUBPROCESS PID
	F	OVRRUN,B		;DATA OVERRUN INDICATOR
	L	LENGTH			;LENGTH OF PMB
	E

;+
; PROCESS QUOTA BLOCK DEFINITION
;-

	$STRUCT	PQB

	F	PRVMSK,Q		;PRIVILEGE MASK
	F	SIZE,W			;SIZE OF PQB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	STS,B			;STATUS FLAGS
	F	IMAGE,T,64		;IMAGE NAME FOR NEW PROCESS
	F	ERROR,T,64		;LOGICAL NAME FOR ERROR OUTPUT
	F	INPUT,T,64		;LOGICAL NAME FOR INPUT
	F	OUTPUT,T,64		;LOGICAL NAME FOR OUTPUT
	F	DISK,T,64		;LOGICAL NAME FOR SYS$DISK
	F	ASTLM,L			;AST LIMIT
	F	BIOLM,L			;BUFFERED I/O LIMIT
	F	BYTLM,L			;BUFFERED I/O LIMIT
	F	CPULM,L			;CPU TIME LIMIT
	F	DIOLM,L			;DIRECT I/O LIMIT
	F	FILLM,L			;OPEN FILE LIMIT
	F	PGFLQUOTA,L		;PAGING FILE QUOTA
	F	PRCLM,L			;SUB-PROCESS LIMIT
	F	TQELM,L			;TIMER QUEUE ENTRY LIMIT
	F	WSQUOTA,L		;WORKING SET QUOTA
	F	WSDEFAULT,L		;WORKING SET DEFAULT
	F	ENQLM,L			;ENQUEUE LIMIT
	F	WSEXTENT,L		;MAXIMUM WORKING SET SIZE
	F	SWAPSIZE,L		;INITIAL SWAP BLOCK ALLOCATION
	F	USERNAME,T,12		;USERNAME FOR SUBPROCESS
	F	ACCOUNT,T,8		;ACCOUNT NAME FOR SUBPROCESS
	F	DDSTRING,T,84		;DEFAULT DIRECTORY STRING
	C	MAXDIRLEN,84		;VALUE OF MAXIMUM DDSTRING LENGTH
	F	FILEPROT,W		;DEFAULT FILE PROTECTION
	F	MSGMASK,B		;MESSAGE FLAGS
	F	,B			;SPARE
	L	LENGTH			;LENGTH OF PROCESS QUOTA BLOCK

	E

;+
; PRIORITY INCREMENT CLASS DEFINITIONS
;-

	$STRUCT	PRI

	C < ,$_
	NULL,0				; NO PRIORITY INCREMENT
	IOCOM,1				; DIRECT I/O COMPLETION
	RESAVL,2			; RESOURCE AVAIL
	TOCOM,3				; TERMINAL OUTPUT COMPLETE
	TICOM,4				; TERMINAL INPUT COMPLETE
	TIMER,2				; TIMER INTERVAL COMPLETION
	>
	E

;+
; DEFINE PARAMETER DESCRIPTOR BLOCK
;-
	$STRUCT	PRM

	F	ADDR,L			;ADDRESS OF PARAMETER
	F	DEFAULT,L		;DEFAULT VALUE
	F	MIN,L			;MINIMUM VALUE (-1)=>NONE
	F	MAX,L			;MAXIMUM VALUE (-1)=>NONE
	F	FLAGS,L			;TYPE FLAGS
	V	<			; BIT DEFINITIONS
		DYNAMIC,,,M		; DYNAMIC PARAMETER
		STATIC,,,M		; STATIC PARAMETER
		SYSGEN,,,M		; SYSGEN PARAMETER
		ACP,,,M			; ACP CONTROL PARAMETER
		JBC,,,M			; JOB CONTROL PARAMETER
		RMS,,,M			; RMS CONTROL PARAMETER
		SYS,,,M			; GENERAL SYSTEM PARAMETER
		SPECIAL,,,M		; SPECIAL PARAMETER
		DISPLAY,,,M		; DISPLAY ONLY (NO CHANGE)
		CONTROL,,,M		; CONTROL PARAMETER
		MAJOR,,,M		; MAJOR PARAMETER
		PQL,,,M			; PROCESS QUOTA LIST
		NEG,,,M			; NEGATIVE
		TTY,,,M			; TERMINAL CONTROL PARAMETER
		SCS,,,M			; SCS CONTROL PARAMETERS
		>			;
	F	SIZE,B			;SIZE CODE FOR DATUM
	C	BYTE,8			;
	C	WORD,16			;
	C	LONG,32			;
	F	POS,B			;BIT POSITION
	F	NAME,T,16		;ASCIC NAME STRING
	C	MAXNAMLEN,15		;MAXIMUM LENGTH FOR PARAMETER NAME
	F	UNIT,T,12		;ASCIC UNIT STRING
	C	MAXUNILEN,11		;MAXIMUM LENGTH FOR UNIT NAME
	L	LENGTH			;SIZE OF DESCRIPTOR BLOCK
	E				;

;+
; INTER-PROCESSOR REQUEST BLOCK DEFINITIONS
;
; THIS IS THE BASIC FORMAT FOR AN EXECUTIVE OR DRIVER REQUEST FROM
; ONE PROCESSOR TO ANOTHER PROCESSOR.
;-

	$STRUCT	PRQ

	F	FLINK,L			;FORWARD LINK TO NEXT BLOCK
	F	BLINK,L			;BACKWARD LINK TO PREVIOUS BLOCK
	F	,L,4			; (RESERVED FOR FORK CONTEXT)
	F	TO_PORT,W		;PORT NUMBER TO SEND REQUEST TO
	F	FR_PORT,W		;PORT NUMBER REQUEST IS FROM
	F	DISPATCH,W		;MESSAGE DISPATCHER ID
					; MESSAGE DISPATCHER ID'S
	C	EXEC,0			;  EXECUTIVE REQUEST ID
	C	MAILBOX,1		;  MAILBOX REQUEST ID
	C	REMDISK,2		;  REMOTE DISK REQUEST ID
	C	HSC50,3			;  HSC-50 REQUEST ID
	F	,W			;(UNUSED)
;
	F	REQTYPE,W		;REQUEST TYPE
					; MESSAGE DISPATCHER REQUEST SUB-TYPES
	C	SETEF,0			;   COPY COMMON EVENT FLAG REQUEST ID
	C	RESAVL,1		;   REPORT RESOURCE AVAILABLE
	F	UNIT,W			;UNIT NUMBER
	F	PARAM,L			;FIRST PARAMETER
	C	MINLENGTH,64		;MINIMUM REQUEST BLOCK LENGTH
	
	E


;+
; DEFINE PAGE TABLE ENTRY VIELDS AND VALUES
;-
	$STRUCT	PTE
;
; VIELD DEFINITION FOR "VALID" PTE'S
;
	V <
		PFN,21,,M		; PAGE FRAME NUMBER
		WINDOW,1,,M		; WINDOW BIT
		,1			; RESERVED
		OWN,2,,M		; MODE OF THE OWNER
		,1			; RESERVED
		MODIFY,,,M		; MODIFY BIT
		PROT,4,,M		; PROTECTION
		VALID,,,M		; VALID BIT
	>
;
; VIELD DEFINITIONS FOR VARIOUS INVALID FORMS OF PTE
;
	V <				; SECTION TABLE INDEX FORM
		STX,16			; SECTION TABLE INDEX
		CRF,,,M			; COPY ON REFERENCE
		DZRO,,,M		; DEMAND ZERO
		WRT,,,M			; SECTION FILE IS ACCESSED FOR WRITING
		,3			; SPARE
		TYP0,,,M		; LOW ORDER BIT OF PTE TYPE
		,2			; OWNER FIELD
		,1			; RESERVED
		TYP1,,,M		; HIGH ORDER BIT OF PTE TYPE
					; OVERLAYS MODIFY BIT
	>
		V <			; PAGING FILE POINTER
		PGFLVB,22,,M		; PAGE FILE VBN
	>
		V <			; FLAG BIT THAT CAUSES BACKING STORE 
					;  TO BE FORGOTTEN
		,21			; SPACING
		CHKPNT,,,M		; FORGET THAT THIS PAGE HAS A BACKING STORE
	>

		V<			; GLOBAL PAGE TABLE POINTER
		GPTX,22,,M		; GLOBAL PAGE TABLE INDEX
	>
;+
; PROTECTION FIELD DEFINITIONS
;-
	C<
	NA,<^B0000@$BITPOSITION(PTE$V_PROT)> ;  NO ACCESS
	KR,<^B0011@$BITPOSITION(PTE$V_PROT)> ;  KERNEL READ ONLY
	KW,<^B0010@$BITPOSITION(PTE$V_PROT)> ;  KERNEL WRITE
	ER,<^B0111@$BITPOSITION(PTE$V_PROT)> ;  EXEC READ ONLY
	EW,<^B0101@$BITPOSITION(PTE$V_PROT)> ;  EXEC WRITE
	SR,<^B1011@$BITPOSITION(PTE$V_PROT)> ;  SUPER READ ONLY
	SW,<^B1000@$BITPOSITION(PTE$V_PROT)> ;  SUPER WRITE
	UR,<^B1111@$BITPOSITION(PTE$V_PROT)> ;  USER READ ONLY
	UW,<^B0100@$BITPOSITION(PTE$V_PROT)> ;  USER WRITE
>
	C<
	 ERKW,<^B0110@$BITPOSITION(PTE$V_PROT)>  	; EXEC READ KERNEL WRITE
	 SRKW,<^B1010@$BITPOSITION(PTE$V_PROT)>  	; SUPER READ KERNEL WRITE
	 SREW,<^B1001@$BITPOSITION(PTE$V_PROT)>  	; SUPER READ EXEC WRITE
	 URKW,<^B1110@$BITPOSITION(PTE$V_PROT)>  	; USER READ KERNEL WRITE
	 UREW,<^B1101@$BITPOSITION(PTE$V_PROT)>  	; USER READ EXEC WRITE
	 URSW,<^B1100@$BITPOSITION(PTE$V_PROT)>  	; USER READ SUPER WRITE
>
;+
; OWNER FIELD DEFINITIONS
;_
	C<
	KOWN,<0@$BITPOSITION(PTE$V_OWN)>	; KERNEL OWNER
	EOWN,<1@$BITPOSITION(PTE$V_OWN)>	; EXEC OWNER
	SOWN,<2@$BITPOSITION(PTE$V_OWN)>	; SUPER OWNER
	UOWN,<3@$BITPOSITION(PTE$V_OWN)> ; USER OWNER
>
	E


;+
; POINTER CONTROL BLOCK
;	THIS IS A STRUCTURE OF POINTERS TO OTHER DYNAMIC STRUCTURES
;	OF LIKE KIND.  TYPICALLY THE STRUCTURES POINTED TO ARE KNOWN
;	BY THEIR LONG WORD INDEX INTO THE TABLE AND TO FACILITATE FETCHING
;	THESE, IT IS CONVENTIONAL TO KEEP A POINTER TO THE BASE OF THE
;	STRUCTURE POINTERS RATHER THAN (OR IN ADDITION TO) THE POINTER
;	TO THE FRONT OF THE POINTER CONTROL BLOCK.  THE NUMBER OF POINTERS
;	IN THE ARRAY PRECEEDS THE FIRST POINTER IN THE ARRAY.
;-

	$STRUCT	PTR

	F	,Q			;RESERVED QUAD WORD FOR LINKAGE
	F	SIZE,W			;SIZE OF DYNAMIC CONTROL BLOCK
	F	TYPE,B			;TYPE OF DYNAMIC CONTROL BLOCK
	F	PTRTYPE,B		;TYPE OF CONTROL BLOCK POINTED TO
	F	PTRCNT,L		;COUNT OF ENTRIES
	L	LENGTH			;LENGTH OF FIXED PORTION
	F	PTR0,L			;PTR NUMBER 0

	E
