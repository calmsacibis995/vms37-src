	.TITLE	SYSDCLEXH - SYSTEM SERVICES CANCEL AND DECLARE EXIT HANDLER
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 10-AUG-76
;
; SYSTEM SERVICES CANCEL AND DECLARE EXIT HANDLER
;
; MACRO LIBRARY CALLS
;
 
	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
	$SSDEF				;DEFINE SYSTEM STATUS VALUES
 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
 
DESBLK=4				;EXIT CONTROL BLOCK ADDRESS
	.PAGE
	.SBTTL	CANCEL EXIT HANDLER
;+
; EXE$CANEXH - CANCEL EXIT HANDLER
;
; THIS SERVICE PROVIDES THE CAPABILITY TO DELETE AN EXIT CONTROL BLOCK OR
; ALL EXIT CONTROL BLOCKS FROM THE EXIT HANDLER LIST FOR THE CALLING ACCESS
; MODE.
;
; INPUTS:
;
;	DESBLK(AP) = ADDRESS OF EXIT CONTROL BLOCK (ZERO IMPLIES ALL).
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO CANCEL EXIT HANDLER.
;
;		R0 = SS$_ACCVIO - FIRST LONGWORD OF EXIT CONTROL BLOCK
;			CANNOT BE READ BY THE CALLING ACCESS MODE, FIRST
;			LONGWORD OF A EXIT CONTROL BLOCK IN THE LIST CANNOT
;			BE READ BY THE CALLING ACCESS MODE, OR THE FIRST
;			LONGWORD OF THE PREVIOUS EXIT CONTROL BLOCK CANNOT
;			BE WRITTEN.
;
;		R0 = SS$_NOHANDLER - SPECIFIED HANDLER CANNOT BE FOUND IN
;			EXIT HANLDER CONTROL BLOCK LIST.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION.
;-
 
	.ENABL	LSB
	.PSECT	Y$EXEPAGED
	.ENTRY	EXE$CANEXH,^M<R2,R3,R4>
	BSBB	GETPARM			;GET EXIT CONTROL BLOCK PARAMETERS
	BEQL	30$			;IF EQL CANCEL ALL EXIT HANDLERS
	MOVL	R0,R2			;COPY ADDRESS OF LISTHEAD
10$:	MOVL	R2,R3			;SAVE ADDRESS OF PREVIOUS ENTRY
	IFNORD	#4,(R3),50$		;CAN NEXT EXIT CONTROL BLOCK ADDRESS BE READ?
	MOVL	(R3),R2			;GET ADDRESS OF NEXT EXIT CONTROL BLOCK
	BEQL	60$			;IF EQL END OF LIST
	CMPL	R1,R2			;EXIT CONTROL BLOCK ADDRESS MATCH?
	BNEQ	10$			;IF NEQ NO
	IFNORD	#4,(R2),50$		;CAN NEXT EXIT CONTROL BLOCK ADDRESS BE READ?
	CMPL	R0,R3			;PREVIOUS EXIT CONTROL BLOCK LISTHEAD?
	BEQL	20$			;IF EQL YES
	IFNOWRT	#4,(R3),50$		;CAN PREVIOUS EXIT CONTROL BLOCK BE WRITTEN?
20$:	MOVL	(R2),(R3)		;REMOVE EXIT CONTROL BLOCK FROM LIST
	BRB	40$			;
	.PAGE
	.SBTTL	DECLARE EXIT HANDLER
;+
; EXE$DCLEXH - DECLARE EXIT HANDLER
;
; THIS SERVICE PROVIDES THE CAPABILITY TO INSERT AN EXIT CONTROL BLOCK AT
; THE FRONT OF THE EXIT HANDLER LIST FOR THE CALLING ACCESS MODE.
;
; INPUTS:
;
;	DESBLK(AP) = ADDRESS OF EXIT CONTROL BLOCK.
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO DECLARE EXIT HANDLER.
;
;		R0 = SS$_ACCVIO - FIRST LONGWORD OF EXIT CONTROL BLOCK
;			CANNOT BE WRITTEN BY CALLING ACCESS MODE.
;
;		R0 = SS$_NOHANDLER - NO EXIT CONTROL BLOCK ADDRESS SPECIFIED.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION.
;-
 
	.ENTRY	EXE$DCLEXH,^M<R2,R3,R4>
	BSBB	GETPARM			;GET EXIT CONTROL BLOCK PARAMETERS
	BEQL	60$			;IF EQL NO EXIT CONTROL BLOCK SPECIFIED
	IFNOWRT	#4,(R1),50$		;CAN FIRST LONGWORD BE WRITTEN?
	MOVL	(R0),(R1)		;LINK OLD FIRST TO NEW FIRST
30$:	MOVL	R1,(R0)			;SET ADDRESS OF NEW FIRST ENTRY
40$:	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION STATUS
	RET				;
50$:	MOVZWL	#SS$_ACCVIO,R0		;SET ACCESS VIOLATION
	RET				;
60$:	MOVZWL	#SS$_NOHANDLER,R0	;SET NO HANLDER STATUS
	RET				;
	.DSABL	LSB
	.PAGE
	.SBTTL	GET EXIT CONTROL BLOCK PARAMETERS
;
; SUBROUTINE TO GET EXIT CONTROL BLOCK PARAMETERS
;
 
GETPARM:				;
	MOVPSL	R0			;READ CURRENT PSL
	EXTZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,R0,R0 ;EXTRACT PREVIOUS MODE FIELD
	DECL	R0			;SUBTRACT OUT EXECUTIVE MODE BIAS
	BLSS	10$			;IF LSS CALL FROM KERNEL MODE
	MOVAL	@#CTL$GL_THEXEC[R0],R0	;GET ADDRESS OF EXIT HANDLER LISTHEAD
	MOVL	DESBLK(AP),R1		;GET ADDRESS OF EXIT CONTROL BLOCK
	RSB				;
10$:	BUG_CHECK IVSSRVRQST		;INVALID SYSTEM SERVICE REQUEST
	MOVZWL	#SS$_IVSSRQ,R0		;SET INVALID SYSTEM SERVICE REQUEST
	RET				;
 
	.END
 
	.END
