;
;	Version	'V02-016'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from F to L.  That is, all control blocks from FAA to LZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V02-016	BLS0150		Benn Schreiber		15-Feb-1982
;		Clock image file minor ident
;
;	V02-015	LJK0120		Lawrence J. Kenah	11-Feb-1982
;		Add SETVECTOR flag to $IFDDEF to tell fixup code that
;		there are privileged vectors to be set.
;
;	V02-014	RLRUBARS	Robert L. Rappaport	25-Jan-1982
;		Added space in IRP for CDRP$L_UBARSRCE.
;
;	V02-013 NKP2009		N. Kronenberg		29-Dec-1981
;		Add IPL$_SCS, the SCS synchronization IPL.
;
;	V02-012	DJD0001		Darrell Duffy		29-Dec-1981
;		Make the irp even longer to contain all the CDRP
;
;	V02-011	RLRIRPL		Robert L. Rappaport	15-Dec-1981
;		Make standard IRP length long enough to include
;		space for Class Driver CDRP fields.
;
;	V02-010	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add terminal type flags to JIB.
;
;	V02-009	PHL0026		Peter H. Lipman		30-Nov-1981
;		Add PERMCTX cell to $IAFDEF
;
;	V02-008	PRD0003		Paul R. DeStefano	27-Oct-1981
;		Change notation of 7VV support.
;
;	V02-007	BLS0093		Benn Schreiber		30-Oct-1981
;		Add FIXUPVEC bit to ISD definition
;
;	V02-006	SRB0031		Steve Beckhardt		20-Aug-1981
;		Made several changes in the LKB definition.
;
;	V02-005	HRJ0027		Herb Jacobs		14-Aug-1981
;		Expand JIB to include login hours/flags and account name.
;
;	V02-004	BLS0064		Benn Schreiber		31-Jul-1981
;		Increment image header ident
;
;	V02-003	SRB0030		Steve Beckhardt		30_Jul-1981
;		Switched the order of two fields in $LKBDEF
;
;	V02-002	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Change all "7ZZ"s to "730"s.
;
;**

;+
; FCB - FILE CONTROL BLOCK
;
; THERE IS ONE FILE CONTROL BLOCK FOR EACH UNIQUELY ACCESSED FILE ON A
; VOLUME. THE FILE CONTROL BLOCK PROVIDES THE VEHICLE WHEREBY SHARED
; ACCESS TO A FILE MAY BE CONTROLLED.
;-
 
	$STRUCT	FCB
	F FCBFL			; FCB LIST FORWARD LINK
	F FCBBL			; FCB LIST BACKWARD LINK
	F SIZE,W		; SIZE OF FCB IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF FCB
	F ,B			; SPARE UNUSED BYTE
	F EXFCB			; ADDRESS OF EXTENSION FCB
	F WLFL			; WINDOW LISTHEAD FORWARD LINK
	F WLBL			; WINDOW LISTHEAD BACKWARD LINK
	F ACNT,W		; FILE ACCESS COUNT
	F LCNT,W		; FILE LOCK COUNT
	F WCNT,W		; FILE WRITER COUNT
	F STATUS,W		; FILE STATUS
	V<
		DIR		; FCB IS A DIRECTORY LRU ENTRY
		MARKDEL		; FILE IS MARKED FOR DELETE
		BADBLK		; BAD BLOCK ENCOUNTERED IN FILE
		EXCL		; FILE IS EXCLUSIVELY ACCESSED
		SPOOL		; FILE IS AN INTERMEDIATE SPOOL FILE
		RMSLOCK		; FILE IS OPEN WITH RMS RECORD LOCKING
	>
	F FID,W,3		; FILE IDENTIFICATION
	    S FID_NUM,,W	; FILE NUMBER
	    S FID_SEQ,,W	; FILE SEQUENCE NUMBER
	    S FID_RVN,,W	; RELATIVE VOLUME NUMBER
	    S FID_RVN,4,B	; SHORT FORM RVN
	    S FID_NMX,,B	; EXTENDED FILE NUMBER
	F SEGN,W		; FILE SEGMENT NUMBER
	F STVBN			; STARTING VIRTUAL BLOCK NUMBER
	F STLBN			; STARTING LOGICAL BLOCK NUMBER
	F HDLBN			; LBN OF FILE HEADER
	F FILESIZE		; FILE SIZE IN BLOCKS
	F FILEOWNER		; FILE OWNER UIC
	    S UICMEMBER,,W	; MEMBER NUMBER
	    S UICGROUP,,W	; GROUP NUMBER
	F FILEPROT,W		; FILE PROTECTION MASK
	F VERSIONS,W		; MAXIMUM NUMBER OF VERSIONS IN DIRECTORY
	F EFBLK,L		; END OF FILE VBN
	F DIRSEQ,W		; DIRECTORY USE SEQUENCE NUMBER
	F TCNT,W		; COUNT OF TRUNCATE LOCKS
	L LENGTH		; LENGTH OF STANDARD FCB
	F DIRIDX,B,24		; DIRECTORY BLOCK INDEX AREA
	E

;+
; FKB - FORK BLOCK
;
; A FORK BLOCK DESCRIBES THE CONTEXT OF A FORK PROCESS. EACH UNIT CONTROL
; BLOCK CONTAINS A FORK BLOCK AS ITS FIRST SIX LONGWORDS.
;-
 
	$STRUCT	FKB
 
	F	FQFL,L			;FORK QUEUE FORWARD LINK
	F	FQBL,L			;FORK QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF FKB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE OF FKB
	F	FIPL,B			;FORK INTERRUPT PRIORITY LEVEL
	F	FPC,L			;FORK PC
	F	FR3,L			;FORK R3
	F	FR4,L			;FORK R4
	L	LENGTH			;STANDARD LENGTH OF FKB

	E


;+
; GLOBAL SECTION DESCRIPTOR BLOCK
;-
	$STRUCT	GSD

	F	GSDFL,L			;POINTER TO NEXT GSD
	V<				;SHARED MEMORY FLAGS IN GSD$L_GSDFL
		VALID,,,M		;SH MEM GSD FLAG, SET IF VALID ENTRY
		LOCKED,,,M		;SH MEM GSD FLAG, SET IF ENTRY LOCKED
		DELPEND,,,M		;SH MEM GSD FLAG, GS MARKED FOR DELETE
		INITFAIL,,,M		;SH MEM GSD FLAG, SET WHEN GS INIT FAILS
		DUPGSD,,,M		;SH MEM GSD FLAG, DUPLICATE GSD FOUND
		>
	F	GSDBL,L			;POINTER TO PREVIOUS GSD
	F	SIZE,W			;SIZE OF GSD IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR GSD
	F	,B			;SPARE
	F	PCBUIC,L		;UIC OF CREATOR OF SECTION, FROM HIS PCB
	S	PCBGRP,2,W		;GROUP OF CREATOR OF SECTION, FROM PCB
	F	FILUIC,L		;OWNER OF FILE, UIC FROM FCB
	F	PROT,W			;PROTECTION MASK
	F	GSTX,W			;GLOBAL SECTION TABLE INDEX
	F	IDENT,L			;IDENTIFICATION OF GLOBAL SECTION
	F	GSDNAM,T,16		;GLOBAL SECTION TEXT NAME
	F	FLAGS,W			;SECTION FLAGS
	F	,W			;SPARE WORD
	L	LENGTH			;LENGTH OF LOCAL MEMORY GSD
	M	1

;
; THE FOLLOWING FIELDS ARE ONLY FOUND IN EXTENDED GSD'S.  THESE ARE USED
; WHENEVER A GSD IS NEEDED WITHOUT A SECTION TABLE ENTRY, I.E., FOR SHARED
; MEMORY AND FOR PAGES MAPPED BY PFN.
;
	F	BASEPFN,L		;FIRST RELATIVE BASE PFN
	F	PAGES,L			;COUNT OF PAGES AT FIRST BASE PFN
	F	REFCNT,L		;FIRST PROCESSOR PTE REF COUNT
	L	EXTGSDLNG		;MINIMUM EXTENDED GSD LENGTH

;
; THE FOLLOWING FIELDS ARE CONTAINED ONLY IN SHARED MEMORY GSD'S.  THE LENGTH,
; GSD$C_SHMGSDLNG, IS ONLY THE CONSTANT SIZE OF THE GSD.  IN ADDITION, THERE IS
; ONE LONGWORD FOR EACH PROCESSOR AND TWO LONGWORDS FOR EACH BASE PFN-SIZE PAIR.
;
	P	1
	F	LOCK,B			;INTERPROCESSOR LOCK FOR GSD
	F	PROCCNT,B		;NUMBER OF PROCESSOR REF. COUNTS IN GSD
	F	CREATPORT,B		;PORT # FOR CREATOR PROCESSOR
	F	DELETPORT,B		;PORT # FOR DELETOR PROCESSOR
	C	PFNBASMAX,4		;MAXIMUM # OF PFN BASES ALLOWED
	F	BASPFN1,L		;FIRST BASE PFN FOR SECTION PAGES
	F	BASCNT1,L		;CNT OF SECTION PAGES AT FIRST BASE PFN
					;FIRST PFN/PAGE COUNT PAIR
	F	,Q			;   NOTE:  THE NUMBER OF QUADWORDS
	F	,Q			;   RESERVED FOR PFN/PAGE COUNTS PAIRS
	F	,Q			;   MUST BE EQUAL TO GSD$C_PFNBASMAX-1.
	L	SHMGSDLNG		;LENGTH OF CONSTANT PART OF SHM GSD
	F	PTECNT1,L		;PTE COUNT FOR FIRST PROCESSOR

	E

;+
; HDR1 ANDSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST LABEL IN THE FILE LABEL HEADER SET.  IF IDENTIFIES THE FILE.
;-
	$STRUCT	HD1		;HDR1 LABEL FORMAT

	F	HD1LID,L	;LABEL IDENTIFIER AND NUMBER 'HDR1'
	F	FILEID,T,17	;FILE IDENTIFIER
	F	FILESETID,T,6	;FILE SET IDENTIFIER
	F	FILESECNO,T,4	;FILE SECTION NUMBER
	F	FILESEQNO,T,4	;FILE SEQUENCE NUMBER
	F	GENNO,T,4	;FILE GENERATION NUMBER
	F	GENVER,T,2	;FILE GENERATION VERSION NUMBER
	F	CREATEDT,T,6	;CREATION DATE ( YYDDD)
	F	EXPIREDT,T,6	;EXPIRATION DATE
	F	FILACCESS,B	;FILE ACCESS
	F	BLOCKCNT,T,6	;BLOCK COUNT
	F	SYSCODE,T,13	;SYSTEM CODE
	F	,T,7,		;SPACES
	E



;+
; HDR2 ANSI MAGNETIC TAPE LABEL
; THIS IS THE SECOND LABEL IN FILE LABEL HEADER SET.
; THE FILE ATTRIBUTES HAVE BEEN REMOVED FROM HDR2, AND PLACED IN HDR3.
; THE FIELDS REMAIN IN THE DEFINITION TO SUPPORT OLD TAPES.
;-
	$STRUCT	HD2		;HDR2 LABEL FORMAT

	F	HD2LID,L	;LABEL IDENTIFIER AND NUMBER 'HDR2'
	F	RECFORMAT,B	;RECORD FORMAT
	F	BLOCKLEN,T,5	;BLOCK LENGTH
	F 	RECLEN,T,5	;RECORD LENGTH
	F	RECATR1,T,20	;FIRST 20 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,1		;SPACES
	F	FORMCNTRL,B	;FORMS CONTROL
	F	RECATR2,T,12	;LAST 12 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,1		;SPACES
	F	BUFOFF,T,2	;BUFFER OFFSET
	F	,T,20		;SPACES
	E


;+
; HDR3 ANSI MAGNETIC TAPE LABEL
; THIS IS THE THIRD LABEL IN FILE LABEL HEADER SET.
; IT IDENTIFIES THE FILE ATTRIBUTES.
;-

	$STRUCT HD3		;HDR3 LABEL FORMAT

	F	HD3LID,L	;LABEL IDENTIFIES AND NUMBER 'HDR3'
	F	RECATR,T,64	;64 BYTES OF FILES-11 RECORD ATTRIBUTES
	F	,T,12		;SPACES
	E

;+
; IAF - IMAGE ACTIVATOR FIXUP SECTION
;
; THE IMAGE ACTIVATOR FIXUP SECTION IS AN IMAGE SECTION THAT IS CREATED
; BY THE LINKER AND USED BY THE IMAGE ACTIVATOR TO MODIFY THE IMAGE AS
; IT IS ACTIVATED.  THIS IS DONE TO MAINTAIN THE POSITION INDEPENDENCE
; OF EXTERNAL REFERENCES.
;-

	$STRUCT	IAF

	F	IAFLINK, L		; Link for image activator use
	F	FIXUPLNK, L		; Link for shareable image fixups
	F	SIZE, W			; Size of fixed part of IAF
	F	FLAGS, W		; Flags
	V	<
		SHR			; This is in a shareable image
		>
	F	G_FIXOFF, L		; Offset to g^ address data
	F	DOTADROFF, L		; Offset to .address fixup data
	F	CHGPRTOFF, L		; Offset to isect change prot. data
	F	SHLSTOFF, L		; Offset to shareable image list
	F	SHRIMGCNT, L		; Number of shareable images in shlst
	F	SHLEXTRA, L		; Number of extra shareable images allowed
	F	PERMCTX, L		; Permanent sharable image context
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	F	,L			; Spare
	L	LENGTH			; Length of fixed area
	E

;+
; IDB - INTERRUPT DISPATCH BLOCK
;
; AN INTERRUPT DISPATCH BLOCK PROVIDES THE INFORMATION NECESSARY FOR A
; UNIT INDEPENDENT, BUT CONTROLLER SPECIFIC, INTERRUPT DISPATCHER TO
; DISPATCH INTERRUPTS TO THE PROPER DRIVER TO HANDLE AN INTERRUPT ON
; A DEVICE UNIT.
;-
 
	$STRUCT	IDB
 
	F	CSR,L			;CONTROLLER CSR ADDRESS
	F	OWNER,L			;OWNER UCB ADDRESS
	F	SIZE,W			;SIZE OF IDB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE OF IDB
	F	VECTOR,B		;CONTROLLER VECTOR OFFSET
	F	UNITS,W			;NUMBER OF UNITS (SIZE OF UCBLST)
	F	,W			;(SPARE)
	F	ADP,L			;ADDRESS OF UBA ADAPTER CONTROL BLOCK
	F	UCBLST,L,8		;UCB OR SECONDARY IDB ADDRESSES
					;(DEFAULT OF 8)
	L	LENGTH			;LENGTH OF STANDARD IDB

	E

;+
; ICP - CHANGE IMAGE SECTION PROTECTION DATA
;
; THIS STRUCTURE IS USED IN THE IMAGE FIXUP SECTION BY THE LINKER
; TO INFORM THE IMAGE ACTIVATOR OF THE IMAGE SECTIONS THAT NEED
; THEIR PROTECTION CHANGED.
;-
	$STRUCT	ICP

	F	BASEVA, L		; virtual address of start of section
	F	NPAGES, W		; number of pages to change protection on
	F	NEWPRT, W		; new protection
	L	LENGTH			; size of one section's data
	E

;+
; IMAGE FILE DESCRIPTOR BLOCK - RETURNED BY IMAGE ACTIVATOR
;-

	$STRUCT	IFD

	F	SIZE,W			;SIZE IN BYTES OF IMAGE FILE DESCRIPTOR
	F	FILNAMOFF,W		;OFFSET TO RESULTANT FILE NAME STRING
	F	,W			;RESERVED OFFSET 1
	F	,W			;RESERVED OFFSET 2
	F	CHAN,W			;CHANNEL ON WHICH IMAGE FILE IS OPEN
	F	CMCHAN,W		;COMPATIBILITY MODE CHANNEL
	F	CMKFIADR,L		;COMPATIBILITY MODE IMAGE
					;KNOWN FILE ENTRY ADDRESS OR 0
	F	FLAGS,W			;IMAGE FILE DESCRIPTOR FLAGS
		V <
		EXEONLY,,,M		;EXECUTE ONLY FILE
		PRIV,,,M		;IMAGE INSTALLED WITH ENHANCED PRIVILEGE
		SETVECTOR,,,M		;PRIVILEGED VECTORS TO BE INSTALLED
		>
	F	,W			;SPARE WORD
	F	CURPROG,Q		;STRING DESCRIPTOR FOR CURRENTLY
					;RUNNING PROGRAM NAME
	L	LENGTH			;LENGTH OF FIXED AREA OF IFD

	E

;+
; IMAGE HEADER RECORD DEFINITIONS - FIRST RECORD OF IMAGE HEADER
;-
	$STRUCT	IHD

	F	SIZE,W			;SIZE IN BYTES OF IMAGE HEADER RECORD
	F	ACTIVOFF,W		;BYTE OFFSET TO ACTIVATION DATA
	F	SYMDBGOFF,W		;BYTE OFFSET TO SYMBOL TABLE AND DEBUG DATA
	F	IMGIDOFF,W		;BYTE OFFSET TO IMAGE IDENT DATA
	F	PATCHOFF,W		;BYTE OFFSET TO PATCH DATA
	F	,W			;RESERVED
	F	MAJORID,W		;MAJOR ID
	    K	MAJORID,<^A/02/>	;MAJOR ID VALUE
	F	MINORID,W		;MINOR ID
	    K	MINORID,<^A/04/>	;MINOR ID VALUE
	F	HDRBLKCNT,B		;COUNT OF HEADER BLOCKS
	F	IMGTYPE,B		;IMAGE TYPE
;
; IMAGE TYPE CODES
;
	    K	EXE,1			;EXECUTABLE IMAGE
	    K	LIM,2			;LINKABLE IMAGE

	F	,W			;RESERVED
	F	PRIVREQS,Q		;REQUESTED PRIVILEGE MASK
	F	IOCHANCNT,W		;# OF CHANNELS REQUESTED
					;0 IF DEFAULT
	F	IMGIOCNT,W		;# OF PAGES OF IMAGE I/O SECTION REQUESTED
					;0 IF DEFAULT
	F	LNKFLAGS		;LINKER PRODUCED IMAGE FLAGS
	V<M				;AS FOLLOWS:
		LNKDEBUG		;FULL DEBUGGING REQUESTED
		LNKNOTFR		;FIRST TRANSFER ADDRESS MISSING
		NOP0BUFS		;RMS USE OF P0 FOR IMAGE I/O DISABLED
		PICIMG			;IMAGE IS POSITION INDEPENDENT
		P0IMAGE			;IMAGE IS IN P0 SPACE ONLY
		,19			;FILL OUT TO HIGH BYTE OF LONG WORD
		MATCHCTL,3		;MATCH CONTROL FOR LINKABLE IMAGE
		>
	F	IDENT			;GBL SEC IDENT VALUE FOR LINKABLE IMAGE
	F	SYSVER			;SYS$K_VERSION OR 0 IF NOT LINKED WITH EXEC
	F	IAFVA			;RELATIVE VIRTUAL ADDRESS OF FIXUP INFO
	L	LENGTH			;LENGTH OF FIXED AREA

	E


;+
; IMAGE HEADER ACTIVATION SECTION OFFSETS
;-

	$STRUCT	IHA

	F	TFRADR1,L		;FIRST TRANSFER ADDRESS
	F	TFRADR2,L		;SECOND TRANSFER ADDRESS
	F	TFRADR3,L		;THIRD TRANSFER ADDRESS
	F	,L			;GUARANTEED TRAILING 0 ADDRESS
	L	LENGTH			;SIZE OF ACTIVATION SECTION

	E


;+
; IMAGE HEADER PATCH SECTION OFFSETS
;-

	$STRUCT IHP

	F	ECO1,L			;DEC ECO LEVELS 1-32
	F	ECO2,L			;DEC ECO LEVELS 33-64
	F	ECO3,L			;DEC ECO LEVELS 65-98
	F	ECO4,L			;USER ECO LEVELS 99-132
	F	RW_PATSIZ,L		;SIZE OF FREE RW PATCH AREA
	F	RW_PATADR,L		;VIR ADDR OF NEXT FREE RW PATCH AREA
	F	RO_PATSIZ,L		;SIZE OF FREE RO PATCH AREA
	F	RO_PATADR,L		;VIR ADDR OF NEXT FREE RO PATCH AREA
	F	PATCOMTXT,L		;PATCH COMMAND TEXT VIRTUAL BLOCK NUMBER
	F	PATDATE,Q		;DATE OF MOST RECENT PATCH
	L	LENGTH			;LENGTH OF PATCH HEADER SECTION

	E


;+
; IMAGE HEADER SYMBOL TABLE AND DEBUG SECTION OFFSETS
;-

	$STRUCT	IHS

	F	DSTVBN,L		;DEBUG SYMBOL TABLE VIRTUAL BLOCK NUMBER
	F	GSTVBN,L		;GLOBAL SYMBOL TABLE VIRTUAL BLOCK NUMBER
	F	DSTBLKS,W		;DEBUG SYMBOL TABLE BLOCK COUNT
	F	GSTRECS,W		;GLOBAL SYMBOL TABLE RECORD COUNT
	L	LENGTH			;LENGTH OF SYMBOL TABLE SECTION

	E



;+
; IMAGE HEADER IDENTIFICATION SECTION OFFSETS
;-

	$STRUCT	IHI

	F	IMGNAM,T,16		;IMAGE NAME STRING
	F	IMGID,T,16		;IMAGE IDENT STRING
	F	LINKTIME,Q		;DATE AND TIME THIS IMAGE WAS LINKED
					;STANDARD SYSTEM QUADWORD FORMAT
	F	LINKID,T,16		;LINKER IDENT STRING
	L	LENGTH			;LENGTH OF IMAGE HEADER IDENT SECTION

	E

;+
; IMAGE HEADER RECORD DEFINITIONS - CROSS LINKER - MAJORID = "01"
;	 1ST RECORD OF IMAGE HEADER BLOCK
;-

	$STRUCT	IHX

	F	SIZE,W			;SIZE IN BYTE OF IMAGE HEADER RECORD
	F	HDRBLKCNT,B		;COUNT OF BLOCKS IN IMAGE HEADER
	F	,B			;SPARE
	F	STARTADR,Q		;START ADDRESS
	F	MAJORID,W		;MAJOR ID OF IMAGE HEADER
	    K	MAJORID,<^X3130>	;^A/01/ MAJOR ID VALUE FOR CROSS LINKER
	F	MINORID,W		;MINOR ID OF IMAGE HEADER
	    K	MINORID,<^X3130>	;^A/01/ MINOR ID VALUE FOR CROSS LINKER
	    K	MINORID1,<^X3130>	;^A/01/ MINOR ID VALUE FOR CROSS LINKER WITH
					;SYMBOL TABLE AND 3RD TRANSFER ADR
	F	IMGNAM,T,24		;IMAGE NAME
;
; THE FOLLOWING FIELDS ARE PRESENT FOR MINOR ID'S GREATER OR EQUAL TO "03"
;
	F	DSTVBN,L		;DEBUG SYMBOL TABLE VBN
	F	GSTVBN,L		;GLOBAL SYMBOL TABLE VBN
	F	DSTBLKS,W		;DEBUG SYMBOL TABLE BLOCKS
	F	GSTRECS,W		;GLOBAL SYMBOL TABLE RECORD COUNT
	F	TFRADR3,L		;THIRD TRANSFER ADDRESS
	L	LENGTH			;LENGTH OF CROSS LINKER HEADER

	E

;+
;	RMS32 IMPURE AREA OFFSET DEFINITIONS
;
;-
	$STRUCT IMP

	F RMSSTATUS,W	; RMS OVERALL STATUS
	  V <
	  IIOS		; SET IF THIS IS THE IMAGE
			; I.O SEGMENT 
	  AST		; SET IF RUNNING AT EXEC AST LEVEL
	  TEMP1		; TEMPORARY FLAG
	  TEMP2		;   "
	  IORUNDOWN	; SET IF IO RUNDOWN IN PROGRESS
	  NOP0BUFS	; SET IF RMS USE OF P0 FOR IMAGE I/O DISABLED
	  >
;
	  C ASYEFN,30	; EFN FOR ASYNC WAITS
	  C IOREFN,30	; EFN FOR IO RUNDOWN SYNCHRONIZATION
	  C ASYQIOEFN,31 ; EFN FOR ASYNC QIOS
	  C SYNCEFN,27	; BASE EFN FOR SYNCHRONOUS QIO'S
			; (28, 29 ALSO USED)
	  C MBXEFN,26	; EFN FOR QIOS TO NETWORK MAILBOXES
;
	F PROT,B	; PROTECTION FOR I/O BUFFER PAGES
	F ,B		; SPARE
	F IOSEGADDR,L	; ADDRESS OF FIRST FREE PAGE
			; IN THIS (IMAGE OR PROCESS)
			; I/O SEGMENT
	F IOSEGLEN,L	; # OF FREE BYTES AT ABOVE ADDR
	F FREEPGLH,L,2	; FREE PAGE LIST HEAD 
	F SAVED_SP,L	; SAVED VALUE OF SP AT ENTRY
	F IFABTBL,L	; IFAB TABLE ADDR
	F IRABTBL,L	; IRAB TABLE ADDR
	F ENTPERSEG,W	; # OF SLOTS PER TABLE SEGMENT
	  C NPIOFILES,12	; # OF PIO SEGMENT FILES
	  C ENTPERSEG,15	; # OF IIO SEGMENT SLOTS
				; PER INDEX TABLE SEGMENT
	F NUM_IFABS,W	; NUMBER OF IFABS & IRABS CURRENTLY ALLOCATED
	F IFBTBLINK,L	; START OF IFAB TABLE (LINK TO NEXT SEGMENT)
	F ,L,15		; FIRST IFAB TABLE SEGMENT
	F IRBTBLINK,L	; START OF IRAB TABLE (LINK TO NEXT SEGMENT)
	E

;+
; I/O SPACE LAYOUT FOR 11/780 CPU
;-

	$STRUCT	IO780

	C< ,$AL_			;DEFINE CONSTANT ADDRESSES
	IOBASE,+^X20000000		;START OF I/O SPACE
	PERNEX,+^X2000			;# BYTES OR REGISTER SPACE/NEXUS
	NNEX,16				;# OF NEXUSES
	UB0SP,+^X20100000		;ADDR OF UB 0 SPACE
	>
	E
;+
; I/O SPACE LAYOUT FOR 11/750 CPU
;-

	$STRUCT	IO750

	C< ,$AL_			;DEFINE CONSTANT ADDRESSES
	IOBASE,+^XF20000		;START OF I/O SPACE FOR SLOT 16
	PERNEX,+^X2000			;# BYTES OF REGISTER SPACE/NEXUS
	UBBASE,+^XF30000		;START OF UB 0 SPACE
	MBBASE,+^XF28000		;START OF MB0 REGISTER SPACE
	NNEX,16				;# CONFIGURABLE NEXUSES
	UB0SP,+^XFC0000			;ADDR OF UB0 SPACE
	>				;
	C< ,$C_SL_			;FIXED ADAPTER ASSIGNMENTS FOR
					; SLOTS 0-9:
	MEM0,0				; MEMORY CONTROLLER
	MPM0,1				; MULTIPORT MEMORIES...
	MPM1,2				;
	MPM2,3				;
	MB0,4				; MASSBUS ADAPTERS...
	MB1,5				;
	MB2,6				;
	MB3,7				;
	UB0,8				; UNIBUS 0
	UB1,9				; UNIBUS 1
	>
	E
;++
; I/O SPACE LAYOUT FOR 11/730 CPU
;--

	$STRUCT	IO730

	C< ,$AL_
	IOBASE,+^XF20000		; START OF I/O SPACE
	PERNEX,+^X2000			; # BYTES OF REGISTER SPACE/NEXUS
	NNEX,16				; # OF NEXUSES
	UB0SP,+^XFC0000			; ADDR OF UB0 SPACE
	>
	E

;++
; I/O SPACE LAYOUT FOR 11/7VV CPU
;--

	$STRUCT	IO7VV

	C< ,$AL_
	IOA0,+^X20000000		;START OF I/O SPACE FOR ABUS ADAPTER 0
	IOA1,+^X22000000		;START OF I/O SPACE FOR ABUS ADAPTER 1
	IOA2,+^X24000000		;START OF I/O SPACE FOR ABUS ADAPTER 2
	IOA3,+^X26000000		;START OF I/O SPACE FOR ABUS ADAPTER 3
	PERNEX,+^X2000			;# OF BYTES OF REGISTER SPACE/NEXUS
	NNEX,16				;NUMBER OF NEXUS PER SBIA
	UB0SP,+^X20100000		;OFFSET OF UB 0 SPACE FROM BASE OF SBIA
	SBIACR,+^X20080000		;OFFSET OF SBIA CR FROM BASE OF SBIA
	>
	E

;++
; PAMM - Physical Address Memory Map bit and field definitions for 11/7VV
;--

	$STRUCT PAMM			;11/7VV Physical Address Memory Map
	V	<
		CONF,5,,M		;Configuration field
		,3			;MBZ
		BLOCK,5,,M		;Expander memory block number
		,7			;MBZ
		PAMADD,10,,M		;PAMM physical address field
		>
	C <PAMM,$C_			;Configuration field bit definitions
		IAS0,0			;Internal array slot 0
		IAS1,1			;internal array slot 1, etc.
		IAS2,2
		IAS3,3
		IAS4,4
		IAS5,5
		IAS6,6
		IAS7,7
		RPTR,8			;Memory bus repeater
		IOA0,25			;ABUS I/O Adapter 0
		IOA1,26			;ABUS I/O Adapter 1
		IOA2,27			;ABUS I/O Adapter 2
		IOA3,28			;ABUS I/O Adapter 3
		NEXM,31			;Non existant memory
		>
	E

;++
; 11/7VV Synchronous Backplane Interconnect Adapter register definitions
;--

	$STRUCT SBIA			;11/7VV SBI ADAPTER
	F	CR,L			;CONFIGURATION REGISTER
	V	<
		TYPE,8,,M		;ADAPTER TYPE FIELD
		,12
		MEMSEP,10,,M		;MEMORY SEPARATOR
		>
	F	CSR,L			;CONTROL/STATUS REGISTER
	V	<
		,24
		TRSEL1,,,M		;DMA TR SELECT 1
		TRSEL2,,,M		;DMA TR SELECT 2
		TRSEL4,,,M		;DMA TR SELECT 4
		TRSEL8,,,M		;DMA TR SELECT 8
		,2
		DSABL,,,M		;DISABLE SBI CYCLES
		IE,,,M			;MASTER INTERRUPT ENABLE
		>
	F	SUMRY,L			;ERROR SUMMARY REGISTER
	V	<
					;DMAI
		DMAI_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAI_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAI_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAI_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAA
		DMAA_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAA_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAA_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAA_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAB
		DMAB_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAB_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAB_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAB_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;DMAC
		DMAC_MB,,,M		;MBOX DETECTED ADDRESS OR PARITY ERROR
		DMAC_CTL,,,M		;SBIA DETECTED CONTROL PARITY ERROR
		DMAC_ADR,,,M		;SBIA DETECTED ADDRESS PARITY ERROR
		DMAC_ILK,,,M		;DMA INTERLOCK TIMEOUT
					;
		MULT_ERR,,,M		;MULTIPLE CPU ERROR
		,2
		CPU_ERR,,,M		;ERROR ON CPU CAMMAND/ADDRESS
		ADDRS,,,M		;ADDRESS ERROR ON CPU TRANSACTION
		CNTRL,,,M		;FILE CONTROL PARITY ERROR
		PARITY,,,M		;CPU A/D PARITY ERROR
		LOCK,,,M		;CPU BUFFER ERROR LOCK
		,2
		CMDLNG,2,,M		;ABUS COMMAND LENGTH
		CMND,4,,M		;ABUS COMMAND CODE
		>
	F	DIAGNOS,L		;DIAGNOSTIC CONTROL
	V	<
		CLKCTRL,2,,M		;CLOCK CONTROL
		LOOP,,,M		;LOOP BACK
		PARINV,,,M		;PARITY INVERT
		CTLDSB,,,M		;CONTROL PARITY DISABLE
		ADSDSB,,,M		;ADDRESS PARITY DISABLE
		,10
		DMAIBSY,,,M		;FORCE DMAI BUSY
		DMAABSY,,,M		;FORCE DMAA BUSY
		DMABBSY,,,M		;FORCE DMAB BUSY
		DMACBSY,,,M		;FORCE DMAC BUSY
		>
	F	DMAICA,L		;DMAI COMMAND ADDRESS REGISTER
	F	DMAIID,L		;DMAI ID REGISTER
	V	<
		IID,5,,M		;ID
		>
	F	DMAACA,L		;DMAA COMMAND ADDRESS REGISTER
	F	DMAAID,L		;DMAA ID REGISTER
	V	<
		AID,5,,M		;ID
		>
	F	DMABCA,L		;DMAB COMMAND ADDRESS REGISTER
	F	DMABID,L		;DMAB ID REGISTER
	V	<
		BID,5,,M		;ID
		>
	F	DMACCA,L		;DMAC COMMAND ADDRESS REGISTER
	F	DMACID,L		;DMAC ID REGISTER
	V	<
		CID,5,,M		;ID
		>
	F	SBISILO,L		;SBI SILO REGISTER
	F	SBIERR,L		;SBI ERROR REGISTER
	V	<
		,8
		ERRCONF,,,M		;ERROR CONFIRMATION
		,1
		TMOSTS,2,,M		;CPU TIMEOUT STATUS
		CPTMO,,,M		;CPU TIMEOUT
		>
	F	TMOADDRS,L		;SBI TIMEOUT ADDRESS
	V	<
		PHYADR,28,,M		;PHYSICAL ADDRESS
		>
	F	SBISTS,L		;SBI FAULT STATUS
	V	<
		,16
		SLOLCK,,,M		;SILO LOCK
		FAULT,,,M		;SBI FAULT SIGNAL
		FIE,,,M			;FAULT INTERRUPT ENABLE
		FLTLA,,,M		;FAULT LATCH
		,2
		P0PTY,,,M		;P0 PARITY ERROR
		P1PTY,,,M		;P1 PARITY ERROR
		,2
		XMTR,,,M		;XMITR DURING FAULT
		MLTPL,,,M		;MULTIPLE XMIT FAULT
		ISF,,,M			;INTLK SEQ FAULT
		RDF,,,M			;UNEXPECTED READ DATA FAULT
		WSF,,,M			;WRITE SEQUENCE FAULT
		PTYFLT,,,M		;PARITY FAULT
		>
	F	SILOCMP,L		;SBI SILO COMPARATOR
	F	MAINT,L			;SBI MAINTENANCE REG
	F	UNJAM,L			;SBI UNJAM REGISTER
	F	SBIQC,L			;SBI QUAD CLEAR
	F	SBIVEC,L		;SBI VECTOR
		E

;+
; TEMPORARY PROCESSOR PRIORITY LEVEL DEFINITIONS
;-
	$STRUCT	IPL

C <IPL,$_,				;
	 HWCLK,24   			;HARDWARE CLOCK LEVEL
	 IOPOST,4   			;I/O POST PROCESSING LEVEL
	 MAILBOX,11   			;WRITE MAILBOX INTERLOCK LEVEL
	 POWER,31   			;POWERFAIL INTERLOCK LEVEL
	 QUEUEAST,6   			;QUEUE AST LEVEL
	 SCHED,3   			;SCHEDULER LEVEL
	 SYNCH,7   			;SYSTEM DATA BASE SYNCHRONIZATION LEVEL
	 TIMER,7   			;TIME QUEUE PROCESSING LEVEL
	 ASTDEL,2			;AST DELIVERY INTERRUPT
	 SCS,8				;SCS SYNCHRONIZATION IPL
>
	E

;+
; IRP - I/O REQUEST PACKET
;
; I/O REQUEST PACKETS ARE CONSTRUCTED BY THE QUEUE I/O REQUEST SYSTEM 
; SERVICE. THE CONTENT OF AN I/O REQUEST PACKET DESCRIBES A FUNCTION TO
; BE PERFORMED ON A DEVICE UNIT.
;
; NOTE: SEVERAL FIELDS OF THE IRP MUST BE AT THE SAME OFFSETS AS THEIR
; CORRESPONDING FIELDS IN THE IRPE (SEE NEXT PAGE).
;
;-
 
	$STRUCT	IRP
 
	F	IOQFL,L			;I/O QUEUE FORWARD LINK
	F	IOQBL,L			;I/O QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF IRP IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR IRP
	F	RMOD,B			;ACCESS MODE OF REQUEST
		V<
		MODE,2			; MODE SUBFIELD
		>
	F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	F	ASTPRM,L		;AST PARAMETER
	F	WIND,L			;ADDRESS OF WINDOW BLOCK
	F	UCB,L			;ADDRESS OF DEVICE UCB
	F	FUNC,W			;I/O FUNCTION CODE AND MODIFIERS
		V<			; I/O FUNCTION CODE FIELD DEFINITIONS
		FCODE,6,,M		; FUNCTION CODE FIELD
		FMOD,10			; FUNCTION MODIFIER FIELD
	>
	F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	F	PRI,B			;BASE PRIORITY OF REQUESTING PROCESS
	F	IOSB,L			;ADDRESS OF I/O STATUS DOUBLE LONGWORD
	F	CHAN,W			;PROCESS I/O CHANNEL NUMBER
	F	STS,W			;REQUEST STATUS
		V <			; BIT DEFINITIONS
		BUFIO,,,M 		; BUFFERED I/O FLAG   ;THESE BITS
		FUNC,,,M		; 1=>READ FUNCTION    ;MUST BE ADJACENT
		PAGIO,,,M		; PAGING I/O FLAG     ;AND IN ORDER
		COMPLX,,,M		; COMPLEX BUFFERED I/O
		VIRTUAL,,,M		; VIRTUAL I/O FUNCTION
		CHAINED,,,M		; CHAINED BUFFERED I/O OPERATION
		SWAPIO,,,M		; SWAP I/O OPERATION
		DIAGBUF,,,M		; DIAGNOSTIC BUFFER ALLOCATED
		PHYSIO,,,M		; PHYSICAL I/O
		TERMIO,,,M		; TERMINAL I/O (FOR SELECTING PRIORITY INC)
		MBXIO,,,M		; MAILBOX BUFFERED READ
		EXTEND,,,M		; AN IRPE IS LINKED TO THIS IRP
		FILACP,,,M		; FILE ACP I/O (BOTH DIOCNT AND BIOCNT)
		MVIRP,,,M		; MOUNT VERIFICATION IRP
		>			; END OF BIT DEFINITIONS
	F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF FIRST PTE
	F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	F	BCNT,L			;BYTE COUNT OF TRANSFER
	S	BCNT,0,W		; OLD WORD DEFINITION FOR COMPATIBILITY
	F	,W			; ROUND UP TO NEXT LONGWORD
	F	IOST1			;FIRST I/O STATUS LONGWORD (FOR I/O POST)
	S	MEDIA,,L		;MEDIA ADDRESS
	F	IOST2			;SECOND I/O STATUS LONGWORD
	S	TT_TERM,0,L		;ADDRESS OF READ TERMINATORS MASK
	S	CARCON,0,B		;CARRIAGE CONTROL
	F	NT_PRVMSK,Q		; PRIVILEGE MASK FOR DECNET
	S	TT_STATE,0,Q		; TERMINAL STATE DEFINITIONS
	S	ABCNT,0,L		; ACCUMULATED BYTES TRANSFERED
	S	ABCNT,0,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	S	OBCNT,4,L		; ORIGINAL TRANSFER BYTE COUNT
	S	OBCNT,4,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	F	SEGVBN,L		;VIRTUAL BLOCK NUMBER OF CURRENT SEGMENT
	S	JNL_SEQNO,0,L		; SEQUENCE NUMBER IN JOURNAL
	F	DIAGBUF,L		; DIAGNOSTIC BUFFER ADDRESS
	S	TT_PRMPT,0,W		; PROMPT SIZE
	F	SEQNUM,L		; SEQUENCE NUMBER
	F	EXTEND,L		; ADDRESS OF IRPE
	F	ARB,L			; ACCESS RIGHTS BLOCK ADDRESS

; Standard IRP must contain space for Class Driver CDRP fields.
 
	L	CDRP			; Offset to the CDRP within the IRP
	F	FQFL,L			; Fork Queue FLINK
	F	FQBL,L			; Fork Queue Blink
	F	CDRPSIZE,W		; Size field for positive section only
	F	CD_TYPE,B		; Type, always of interest
	F	FIPL,B			; Fork IPL
	F	FPC,L			; Fork PC
	F	FR3,L			; Fork R3
	F	FR4,L			; Fork R4
	F	SAVD_RTN,L		; Saved return address from level 1 JSB
	F	MSG_BUF,L		; Address of allocated MSCP buffer
	F	RSPID,L			; Allocated Request ID
	F	CDT,L			; Address of Connection Descriptor Table
	F	RWCPTR,L		; RWAITCNT pointer
	M	1

; Block Transfer Extension

	P	1
	F	LBUFH_AD,L		; Local BUFfer Handle ADress
	M	2
	F	LBOFF,L			; Local Byte OFFset
	F	RBUFH_AD,L		; Remote BUFfer Handle ADress
	F	RBOFF,L			; Remote Byte OFFset
	F	XCT_LEN,L		; Transfer length in bytes
	L	BT_LEN

; Class Driver Extension

	P	2
	F	LBUFHNDL,T,12		; Local buffer handle
	F	UBARSRCE,L		; UNIBUS mapping resources allocated
	L	CD_LEN

	L	LENGTH			; LENGTH OF STANDARD IRP
	E

;+
; IRPE - I/O REQUEST PACKET EXTENSION
;
; I/O REQUEST PACKET EXTENSIONS ARE USED TO HOLD ADDITIONAL INFORMATION
; ABOUT I/O REQUESTS FOR DEVICES THAT REQUIRE MORE CONTEXT THAN CAN FIT INTO
; THE STANDARD IRP.  IRPE'S ARE BUILT AND LINKED ONTO IRP'S BY DEVICE 
; DRIVER FDT ROUTINES.  ANY FIELDS THAT ARE NOT DEFINED IN THIS STRUCTURE
; MAY BE USED TO HOLD DRIVER DEPENDENT DATA.
;
; THE CURRENTLY DEFINED FIELDS IN THE IRPE WERE POSITIONED SO THAT THE
; PACKET COULD BE USED AS A FORK BLOCK.  THIS SHOULD BE KEPT IN MIND IF
; AND WHEN NEW FIELDS ARE DEFINED.
;
; THE FIELDS DEFINED HERE MUST BE AT THE SAME OFFSETS AS THEIR CORRESPONDING
; FIELDS IN THE IRP (SEE PREVIOUS PAGE).
;
;-

	$STRUCT	IRPE

	F	,L			; SPARE LONGWORD
	F	,L			; SPARE LONGWORD
	F	SIZE,W			; SIZE OF IRPE IN BYTES
	F	TYPE,B			; STRUCTURE TYPE FOR IRPE
	F	,B			; SPARE BYTE
	F	,L,7			; 7 SPARE LONGWORDS
	F	,W			; SPARE WORD
	F	STS,W			; STATUS
		V <			;  BIT DEFINITIONS
		,11			;  SKIP OVER 11 BITS
		EXTEND,,,M		;  ANOTHER IRPE IS LINKED TO THIS ONE
		>			;  END OF BIT DEFINITIONS
	F	SVAPTE1,L		; SYSTEM VIR. ADDR. OF PTE FOR REGION 1
	F	BOFF1,W			; BYTE OFFSET FOR REGION 1
	F	,W			; SPARE WORD
	F	BCNT1,L			; BYTE COUNT FOR REGION 1
	F	SVAPTE2,L		; SYSTEM VIR. ADDR. OF PTE FOR REGION 2
	F	BOFF2,W			; BYTE OFFSET FOR REGION 2
	F	,W			; SPARE WORD
	F	BCNT2,L			; BYTE COUNT FOR REGION 2
	F	,L,4			; 4 SPARE LONGWORDS
	F	EXTEND,L		; ADDRESS OF NEXT IRPE
	L	LENGTH			; LENGTH OF IRPE
	E

;+
; IMAGE SECTION DESCRIPTOR DEFINITIONS
;-

	$STRUCT	ISD

	F	SIZE,W			;SIZE IN BYTES OF THIS ISD
	F	PAGCNT,W		;# OF PAGES DESCRIBED BY THIS ISD
	F	VPNPFC,L		;VPN & PFC VIELDS
		V <			; VIELDS IN VPNPFC
		VPN,21			; STARTING VIRTUAL PAGE NUMBER
		P1  			; P1 SPACE
		SYSTEM			; SYSTEM SPACE
		,1			; SPARE
		PFC,8			; PAGE FAULT CLUSTER
		>
		V <
		VPG,23			; VIRTUAL PAGE INCLUDING P1 & S
		>
	S	PFC,3,B			;PAGE FAULT CLUSTER
	F	FLAGS,L			;FLAGS AND ISD TYPE
		V <M			; FLAG BIT DEFINITIONS
		GBL			; GLOBAL
		CRF			; COPY ON REFERENCE
		DZRO			; DEMAND ZERO PAGE
		WRT			; WRITABLE
		MATCHCTL,3		; IDENT MATCH CONTROL FIELD
		LASTCLU			; ISD IS PART OF LAST P0 SPACE CLUSTER
		COPYALWAY		; COPY ALWAYS FROM USER IMAGE
		BASED			; ISECT IS BASED
		FIXUPVEC		; ISECT IS FIXUP SECTION
		,6			; UNUSED, RESERVED FOR FUTURE USE
		VECTOR			; VECTOR CONTAINED IN IMAGE SECTION
		PROTECT			; IMAGE SECTION IS PROTECTED
		,5			; UNUSED, RESERVED FOR FUTURE USE
	>
	C	<,$S_
		FLAGSIZ,24		; NUMBER OF FLAG BITS, ISD TYPE EXCLUDED
		>
	S	TYPE,3,B			;ISD TYPE CODE
	L	LENDZRO			;LENGTH OF DEMAND ZERO ISD
	F	VBN,L			;BASE VIRTUAL BLOCK NUMBER
	L	LENPRIV			;LENGTH OF PRIVATE ISD
	F	IDENT,L			;IDENT FOR GLOBAL SECTION
	F	GBLNAM,T,16		;GLOBAL NAME COUNTED STRING
	L	LENGLBL			;LENGTH OF GLOBAL ISD


;+
; MATCH CONTROL VIELD VALUES
;-
	K <,,0,1			;BASE OF ZERO , INCR 1
	MATALL  			;MATCH ALWAYS, USE GLOBAL SECTION
	MATEQU  			;MATCH IF ISD$L_IDENT EQU GBL ID
	MATLEQ				;MATCH IF ISD$L_IDENT LEQ GBL ID
	MATNEV				;MATCH NEVER, USE PRIVATE COPY
	>

;+
; ISD TYPE FIELD DEFINITIONS
;-

	K	NORMAL,0		;NORMAL PROGRAM IMAGE SECTION
					;NO SPECIAL ACTION REQUIRED
	K	SHRFXD, 1		;SHAREABLE FIXED SECTION
	K	PRVFXD, 2		;PRIVATE FIXED SECTION
	K	SHRPIC, 3		;SHAREABLE PIC SECTION
	K	PRVPIC, 4		;PRIVATE PIC SECTION
	K	USRSTACK,<256-3>	;USER STACK SECTION

	E

;+
; Job Information Block - Structure containing common context for a set
;			  of related processes.
;-
	$STRUCT	JIB
	F PRIV,Q			; Privilege mask
	S ARB,0,L			; Access rights block
	F SIZE,W			; Size of structure in bytes
	F TYPE,B			; Structure type code
	F DAYTYPES,B			; Set bits 0-6 flag non-prime days of week
	F UICLIST,L			; Address of UIC list
	S UIC,0,L			; UIC **** temp until UIC list ****
	F BYTCNT,L			; Buffered I/O byte count avail
	F BYTLM,L			; Original value for Byte count
	F PBYTCNT,L			; Paged pool byte count remaining
	F PBYTLIM,L			; Paged pool byte limit
	F FILCNT,W			; Open File count remaining
	F FILLM,W			; Open file limit
	F TQCNT,W			; Timer queue entry count remaining
	F TQLM,W			; Timer queue entry limit
	F PGFLQUOTA,L			; Paging file quota
	F PGFLCNT,L			; Paging file limit
	F CPULIM,L			; CPU time quota remaining
	F PRCCNT,W			; Count of subprocesses existing
	F PRCLIM,W			; Limit on number of subprocesses
	F SHRFCNT,W			; Shared file block count remaing
	F SHRFLIM,W			; Shared file count limit
	F ENQCNT,W			; Enqueue count avail
	F ENQLM,W			; Enqueue limit
	F MPID,L			; PID of master process
	F JLNAMFL,L			; Forward link for job-wide logical names
	F JLNAMBL,L			; Back link for job-wide logical names
	F USERNAME,T,12			; User name for easy access
	F ACCOUNT,T,8			; Account name for resident access
	F PDAYHOURS,L			; Field describing primary day access
					; Primary day hours, from 0:00 to 23:00
	S PDAYFLAGS,3,B			; Flags associated with primary days
		V <			; Bit definitions
		DISDIALUP		; Set disallows dial-in use of account
		DISNETWORK		; Set disallows network use of account
		,4
		TERMRTA			; Flags terminal as a remote terminal
		TERMDIAL		; Flags terminal as a dial up
		>
	F ODAYHOURS,L			; Field describing off day access
					; Off day access hours, 0:00 to 23:00
	S ODAYFLAGS,3,B			; Flags associated with off day usage
					; See pdayflags
	L LENGTH			; Structure length
	E

;
; KNOWN FILE IMAGE HEADER DEFINITIONS
;

	$STRUCT	KFH

	F	BUFEND,L		;ADDRESS OF END OF KNOWN FILE HEADER
	F	KFIADR,L		;ADDRESS OF ASSOCIATED KNOWN FILE ENTRY
	F	SIZE,W			;SIZE OF DYNAMIC STRUCTURE
	F	TYPE,B			;DYNAMIC STRUCTURE TYPE
	F	,B			;SPARE BYTE
	L	LENGTH			;LENGTH OF OVERHEAD AREA

;
; THE REMAINDER OF THIS STRUCTURE CONTAINS THE IMAGE HEADER OF THE
; SPECIFIED KNOWN FILE.  THE LOCATION KFI$L_IMGHDR IN THE KNOWN FILE
; ENTRY POINTS KFH$C_LENGTH INTO THIS STRUCTURE, I.E AT THE IMAGE HEADER
; ITSELF.
;
	E

;
; KNOWN FILE ENTRY DEFINITIONS
;
	$STRUCT	KFI

	F	KFIQFL,L		;KNOWN FILE QUEUE FORWARD LINK
	F	KFIQBL,L		;KNOWN FILE QUEUE BACK LINK
	F	SIZE,W			;SIZE OF BLOCK
	F	TYPE,B			;STRUCTURE TYPE
	F	KFICTL,B		;CONTROL BITS
		V <M			;CONTROL BIT DEFINITIONS
		KFIHD			;KNOWN FILE HEADER BLOCK
		FILIDOPEN		;OPEN BY FILE ID IF SET
		DONOTOPEN		;DO NOT OPEN THE FILE IF SET
		,3			;SPARE
		NOREPLACE		;DELETE AND DO NOT REPLACE ENTRY
		MARKDEL			;ENTRY IS TO BE DELETED
		>
	F	DEVUCB,B		;DEVICE UCB OFFSET
	S	DEVNAM,0,B		;NAME THE ABOVE CONSISTENTLY
	F	DIRNAM,B		;DIRECTORY NAME STRING OFFSET
	F	FILNAM,B		;FILE NAME STRING OFFSET
	F	TYPNAM,B		;FILE TYPE STRING OFFSET
	F	REFCNT,W		;REFERENCE COUNT
	F	KFIQNUM,B		;KFIQ NUMBER (INDEX INTO VECTOR OF KFIQ'S)
	F	KFISEQ,B		;KNOWN FILE ENTRY SEQUENCE NUMBER
		V <M
		KFISEQ,2		;SEQUENCE NUMBER FIELD
		>
	L	KFIHDLEN		;LENGTH OF KFI HEADER FIXED PORTION
	F	FLAGS,W			;FLAGS WORD
		V <M			;FLAG BIT DEFINITIONS
		KP_OPEN			;KEEP THE IMAGE FILE OPEN
		KP_RESHDR		;MAKE IMAGE HEADER RESIDENT
		KP_SHARED		;MAKE IMAGE SHARED
		PROTECT			;KNOWN FILE WAS INSTALLED PROTECTED
		,2			;SPARE BITS
		LIM			;LINKABLE IMAGE
		PROCPRIV		;USE PROCESS PRIVILEGE MASK
		IS_RESHDR		;IMAGE HEADER BLOCK IS RESIDENT
		IS_SHARED		;IMAGE IS SHARED
		,4			;SPARE BITS
		SHMIDENT		;SHARED MEMORY IDENT ALREADY SET
		COMPATMOD		;IMAGE IS COMPATABILITY MODE
		>
	F	GBLSECCNT,W		;GLOBAL SECTION COUNT IF SHARED
	F	USECNT,L		;USAGE COUNTER
	F	WINDOW,L		;WCB ADDRESS IF OPEN
	S	FID,0,W			;FILE ID
	S	FID_NUM,0,W		;FILE NUMBER FIELD OF FILE ID
	S	FID_SEQ,2,W		;FILE SEQUENCE NUMBER FIELD OF FILE ID
	F	IMGHDR,L		;IMAGE HEADER ADDRESS IF RESIDENT
	S	FID_RVN,0,W		;RELATIVE VOLUME NUMBER FIELD OF FILE ID
	F	PROCPRIV,Q		;PROCESS PRIVILEGE MASK
	F	MATCHCTL,B		;GLOBAL SECTION MATCH CONTROL
	F	,B			;SPARE BYTE
	F	AMECOD,W		;IMAGE HEADER CODE SPECIFYING AME
	F	IDENT,L			;GLOBAL SECTION IDENT VALUE
	L	LENGTH			;LENGTH OF FIXED AREA OF KFI ENTRY

	E

;
; KNOWN FILE POINTER BLOCK DEFINITIONS
;
	$STRUCT	KFP

	F	QUECOUNT,B		;INDEX OF LAST KNOWN FILE LIST IN USE
	F	,B			;SPARE BYTE
	F	,W			;SPARE WORD
	F	,L			;SPARE LONG WORD
	F	SIZE,W			;SIZE OF POINTER BLOCK IN BYTES
	F	TYPE,B			;POINTER BLOCK TYPE
	F	TYPE1,B			;TYPE OF STRUCTURE POINTED TO
	F	QUE0,L			;POINTER TO KNOWN FILE QUEUE 0

	E

;+
; LKB - LOCK BLOCK
;
; LOCK BLOCKS ARE USED TO REPRESENT LOCK REQUESTS (ONE BLOCK FOR EACH
; REQUEST).  LOCK BLOCKS HAVE AN ENTRY IN THE LOCK ID TABLE POINTING
; TO THEM AND ARE LINKED ONTO ONE OF THREE QUEUES IN A RESOURCE BLOCK (RSB)
;-

	$STRUCT	LKB

	F	ASTQFL,L		;AST QUEUE FORWARD LINK
	F	ASTQBL,L		;AST QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF LKB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE	
	F	RMOD,B			;ACCESS MODE OF REQUEST
		V<
		MODE,2			; MODE SUBFIELD
		,2			; SPARE
		PKAST,,,M		; PIGGY BACK SPECIAL KERNEL AST
		NODELETE,,,M		; DON'T DELETE ACB ON DELIVERY
		QUOTA,,,M		; ACCOUNT FOR QUOTA
		KAST,,,M		; SPECIAL KERNEL AST
		>
	F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	F	ASTPRM,L		;AST PARAMETER
	F	KAST,L			;SPECIAL KERNEL AST ADDRESS
	S	DUETIME,,L		;DUETIME FOR WAITING LOCKS
	F	CPLASTADR,L		;ADDRESS OF COMPLETION AST ROUTINE
	F	BLKASTADR,L		;ADDRESS OF BLOCKING AST ROUTINE
	F	LKSB,L			;ADDRESS OF LOCK STATUS BLOCK
	F	FLAGS,W			;USER SPECIFIED FLAGS
	F	STATUS,W		;INTERNAL STATUS
		V<
		DCPLAST,,,M		; DELIVER COMPLETION AST
		DBLKAST,,,M		; DELIVER BLOCKING AST
		ASYNC,,,M		; REQUEST COMPLETED ASYNCHRONOUSLY
		BLKASTQED,,,M		; BLOCKING AST HAS BEEN QUEUED
		TIMOUTQ,,,M		; LKB IS ON TIMEOUT QUEUE
		>
	F	LKST1,L			;FIRST LOCK STATUS LONGWORD
	F	LKST2,L			;SECOND LOCK STATUS LONGWORD
	S	LKID			;LOCK ID
	L	ACBLEN			;LENGTH OF ACB PORTION OF LKB
	F	RQMODE,B		;REQUEST MODE
	F	GRMODE,B		;GRANTED MODE
	F	STATE,B			;LOCK STATE
	K	GRANTED,1		; GRANTED STATE
	K	CONVERT,0		; CONVERSION STATE
	K	WAITING,-1		; WAITING STATE
	F	EFN,B			;EVENT FLAG NUMBER
	F	SQFL,L			;STATE QUEUE FORWARD LINK
	F	SQBL,L			;STATE QUEUE BACKWARD LINK
	F	OWNQFL,L		;OWNER QUEUE FORWARD LINK
	F	OWNQBL,L		;OWNER QUEUE BACKWARD LINK
	F	PARENT,L		;ADDRESS OF PARENT LKB
	F	REFCNT,L		;SUB LKB REFERENCE COUNT
	F	RSB,L			;ADDRESS OF OWNER RSB
	L	LENGTH			;LENGTH OF LKB
	E

;+
; LOG - LOGICAL NAME BLOCK
;
; THERE IS ONE LOGICAL NAME BLOCK FOR EACH LOGICAL NAME ASSIGNMENT IN A
; SYSTEM. LOGICAL NAME BLOCKS CAN BE LINKED INTO ONE OF THREE TABLES:
;	1. A PER PROCESS TABLE.
;	2. A GROUP WIDE TABLE.
;	3. THE SYSTEM WIDE TABLE.
;-
 
	$STRUCT	LOG
 
	F	LTFL,L			;LOGICAL TABLE FORWARD LINK
	F	LTBL,L			;LOGICAL TABLE BACKWARD LINK
	F	SIZE,W			;SIZE OF LOG IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR LOG
	F	TABLE,B			;LOGICAL NAME TABLE TYPE
	F	GROUP,W			;CREATOR GROUP NUMBER
	F	AMOD,B			;ACCESS MODE OF CREATOR
	F	,B			;SPARE BYTE
	F	MBXUCB,L		;MAILBOX UCB ADDRESS
	L	LENGTH			;LENGTH OF FIXED PART OF LOG
	F	NAME,T,0		;START OF LOGICAL NAME
 
;
; LOGICAL NAME TABLE NUMBERS
;
 
	C	SYSTEM,0		;SYSTEM NAME TABLE
	C	GROUP,1			;GROUP NAME TABLE
	C	PROCESS,2		;PROCESS NAME TABLE
 
;
; MAXIMUM LENGTH OF LOGICAL NAME STRING
;
 
	C	NAMLENGTH,64		;MAXIMUM LENGTH OF LOGICAL NAME STRING
 
	E
