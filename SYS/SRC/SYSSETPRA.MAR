	.TITLE	SYSSETPRA - SET POWER FAIL AST SYSTEM SERVICE
	.IDENT	'V03-000'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; Facility:  
;
; Abstract: SYSSETPRA IMPLEMENTS THE $SETPRA SYSTEM SERVICE WHICH ENABLES
;	    A PROCESS TO RECEIVE AN AST WHEN POWER IS RESTORED AFTER A
;	    SUCCESSFUL POWER RECOVERY.
;
; Environment:
;
; Author:  RICHARD I. HUSTVEDT, Creation date:  18-JUN-1978
;
; Modified by:
;
;  , Version  ,
; 01	- 
;--

;
; Include files:
;
	$ACBDEF				; DEFINE ACB OFFSETS
	$PCBDEF				; DEFINE PCB OFFSETS
	$SSDEF				; DEFINE SYSTEM SERVICE STATUS CODES

;
; MACROS:
;

;
; Equated Symbols:
;
	ASTADR = 4			; ARGUMENT LIST OFFSET TO AST ADDRESS
	ACMODE = 8			; ARGUMENT LIST OFFSET TO ACCESS MODE
;
 
;
; Own Storage:
;
	.PSECT	Y$EXEPAGED		; PAGED CODE
	.PAGE
	.SBTTL	EXE$SETPRA - SET POWER FAIL AST ROUTINE ADDRESS
;++
; Functional Description:
;	EXE$SETPRA IMPLEMENTS THE SYSTEM SERVICE $SETPRA WHICH ENABLES A
;	PROCESS TO REQUEST AN AST AFTER THE RESTORATION OF POWER FOLLOWING
;	A POWER FAILURE.  THE AST ROUTINE IS ENTERED WITH A PARAMETER
;	GIVING THE DURATION OF THE POWER OUTAGE IN .01 SECOND UNITS.
;	THIS IS A SINGLE SHOT AST AND MUST BE RE-ENABLED EACH TIME IT OCCURS.
;	IT IS AUTOMATICALLY CANCELED AT IMAGE RUNDOWN.
;
; Calling Sequence:
;	CALLG	ARGLIST,EXE$SETPRA
;
; Input Parameters:
;	ASTADR(AP) - ADDRESS OF AST ROUTINE
;	ACMODE(AP) - ACCESS MODE, MAXIMIZED WITH THAT OF CALLER
;
; Implicit Inputs:
;	PCB OF CURRENT PROCESS LOCATED VIA SCH$GL_CURPCB
;
; Output Parameters:
;	R0 - COMPLETION STATUS CODE
;
; Implicit Outputs:
;	NONE
;
; Side Effects:
;	NONE
;
; Status Codes:
;	SS$_NORMAL  - NORMAL, SUCCESSFUL COMPLETION
;	SS$_EXQUOTA - AST QUOTA EXCEEDED
;
;--
	.LIST	MEB			; Show macro expansions

	.ENTRY	EXE$SETPRA,^M<R2,R3,R4,R5>	;
	EXTZV	#0,#2,ACMODE(AP),R0	; GET ACCESS MODE ARGUMENT
	BSBW	EXE$MAXACMODE		; MAXIMIZE WITH THAT OF CALLER
	MOVAB	CTL$GL_POWERAST,R1	; GET ADDRESS OF POWER FAIL AST POINTER
	TSTL	(R1)			; IS THERE ONE CURRENTLY?
	BNEQ	10$			; YES, SKIP QUOTA BUSINESS
	TSTW	PCB$W_ASTCNT(R4)	; CHECK FOR AST QUOTA
	BLEQ	EXQUOTA			; ERROR EXIT IF NO QUOTA
	DECW	PCB$W_ASTCNT(R4)	; ONE LESS FOR AST QUOTA
10$:	MOVL	ASTADR(AP),(R1)		; SET ADDRESS OF AST ROUTINE
	MOVB	R0,<CTL$GB_PWRMODE-CTL$GL_POWERAST>(R1)	; AND ACCESS MODE FOR AST
	BBSS	#PCB$V_PWRAST,PCB$L_STS(R4),20$	; SET POWER AST FLAG FOR PROCESS
20$:	MOVZWL	#SS$_NORMAL,R0		; RETURN NORMAL SUCCESSFUL COMPLETION
	RET				;

EXQUOTA:				; EXCEEDED AST QUOTA
	MOVZWL	#SS$_EXQUOTA,R0		; SET STATUS CODE FOR QUOTA EXCEEDED
	RET				; AND RETURN

	.PAGE
	.SBTTL	EXE$POWERAST - INITIATE POWER FAIL AST FOR ALL INTERESTED PROCESSES
;++
; Functional Description:
;	EXE$POWERAST IS CALLED BY THE SWAPPER AFTER A POWER RECOVERY TO 
;	SEND A SPECIAL KERNEL MODE AST TO EACH PROCESS WHICH HAS ENABLED
;	POWER FAIL ASTS.
;
; Calling sequence:
;	JSB	EXE$POWERAST
;
;--
EXE$POWERAST::				;
	PUSHR	#^M<R4,R5,R6>		; SAVE NON-VOLATILE REGISTERS
	MOVL	SCH$GL_MAXPIX,R6	; SET STARTING PROCESS INDEX FOR SCAN
PCBLOOP:				;
	MOVL	@SCH$GL_PCBVEC[R6],R4	; GET A PCB ADDRESS
	BBC	#PCB$V_PWRAST,PCB$L_STS(R4),NEXTPCB ; BRANCH IF NO AST FOR THIS PROCESS
	JSB	EXE$ALLOCIRP		; ALLOCATE AN I/O PACKET
	BLBC	R0,NEXTPCB		; SKIP IF ERROR
	BBCC	#PCB$V_PWRAST,PCB$L_STS(R4),10$ ; CLEAR AST FLAG
10$:	MOVL	R2,R5			; MOVE BASE TO ACB BASE REGISTER
	MOVB	#<<1@ACB$V_QUOTA>!<1@ACB$V_KAST>>,ACB$B_RMOD(R5) ; SET AS SPECIAL AST
	MOVL	PCB$L_PID(R4),ACB$L_PID(R5)	; SET PID FOR AST
	MOVAB	B^PROCAST,ACB$L_KAST(R5); SET ADDRESS FO SPECIAL AST
	MOVL	EXE$GL_PFATIM,ACB$L_ASTPRM(R5)	; SET AST PARAMETER
	CLRL	R2			; NULL PRIORITY INCREMENT
	JSB	SCH$QAST		; ENQUEUE AST FOR PROCESS
NEXTPCB:				;
	SOBGEQ	R6,PCBLOOP		; CONTINUE FOR ALL PIX VALUES
	CLRL	EXE$GL_PFATIM		; CLEAR DURATION OF POWERFAIL
	POPR	#^M<R4,R5,R6>		; RESTORE REGISTERS
	RSB				; AND RETURN

	.PAGE	
	.SBTTL	PROCAST - SPECIAL KERNEL AST FOR POWERFAIL
;++
; Functional Description:
;	PROCAST RUNS AS A SPECIAL KERNEL AST IN THE CONTEXT OF THE PROCESS
;	WHERE IT CAN ACCESS THE ADDRESS OF THE POWER FAIL AST ROUTINE AND
;	REQUEUE THE AST AT THE PROPER ACCESS MODE.
;
;--
PROCAST:				; 
	MOVAB	CTL$GL_POWERAST,R1	; GET ADDRESS OF POWER FAIL AST POINTER
	MOVL	(R1),ACB$L_AST(R5)	; SET CORRECT AST ROUTINE ADDRESS
	BISB	<CTL$GB_PWRMODE-CTL$GL_POWERAST>(R1),ACB$B_RMOD(R5) ;
					; SET CORRECT ACCESS MODE
	CLRL	(R1)			; ZAP AST POINTER
	CLRL	R2			; SET NULL PRIORITY INCREMENT
	JMP	SCH$QAST		; QUEUE NORMAL AST

	.END				;
