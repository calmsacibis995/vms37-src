	.TITLE	MBAINTDSP - MASSBUS ADAPTER INTERRUPT DISPATCHER
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 30-JAN-77
;
; MASSBUS ADAPTER INTERRUPT DISPATCHER
;
; MODIFIED BY:
;
;	V02-006	ROW0036		Ralph O. Weber		26-OCT-1981
;		Alter MBA$INT to assume DDT$L_UNSOLINT is a system virtual
;		address.
;
;	V02-005	ROW0004		Ralph O. Weber		30-JUL-1981
;		Alter MBA$INT to get DDT address from UCB rather than DDB.
;
;	V02-004	CAS0206		C. A. Samuelson		14-Aug-1980
;		Added check for Massbus power down.  If asserted, jump
;		to adapter powerfail routine in SYSLOA7xx
;
;	V03	RLR0001		Robert L. Rappaport	15-NOV-1979
;		Changed attention summary bit clearing logic to allow
;		support of TM78 Tape Controller.  Specifically, for
;		all MASSBUS multi-device controllers (currently TM03
;		and TM78), the responsibility for clearing the attention
;		summary bit for the device has been removed from this
;		module and placed in the individual Device Drivers.
;		For MASSBUS single device controllers (DISKS) the
;		logic remains as it was.  That is the attention summary
;		bit is cleared here before dispatching to the specific Driver.
;
;
;	V02	NPK0001		N. KRONENBERG		4-NOV-1979
;		ADDED CHECK FOR CBHUNG ON MBA INTERRUPT
;
	.PAGE
;
; MACRO LIBRARY CALLS
;
 
	$ADPDEF				;DEFINE ADP OFFSETS
	$DDBDEF				;DEFINE DDB OFFSETS
	$DDTDEF				;DEFINE DDT OFFSETS
	$MBADEF				;DEFINE MBA REGISTER OFFSETS
	$IDBDEF				;DEFINE IDB OFFSETS
	$UCBDEF				;DEFINE UCB OFFSETS
	.PAGE
	.SBTTL	MASSBUS ADAPTER INTERRUPT DISPATCHER
;+
; MBA$INT - MASSBUS ADAPTER INTERRUPT DISPATCHER
;
; THIS ROUTINE IS ENTERED VIA A JSB INSTRUCTION WHEN AN INTERRUPT OCCURS
; ON A MASSBUS ADAPTER. THE STATE OF THE STACK ON ENTRY IS:
;
;	00(SP) = ADDRESS OF IDB ADDRESS.
;	04(SP) = SAVED R2.
;	08(SP) = SAVED R3.
;	12(SP) = SAVED R4.
;	16(SP) = SAVED R5.
;	20(SP) = INTERRUPT PC.
;	24(SP) = INTERRUPT PSL.
;
; INTERRUPT DISPATCHING OCCURS AS FOLLOWS:
;
;	IF THE INTERRUPTING ADAPTER IS CURRENTLY OWNED AND THE OWNER UNIT
;	IS EXPECTING AN INTERRUPT, THEN THAT UNIT IS DISPATCHED FIRST. ALL
;	OTHER UNITS ARE DISPATCHED BY READING THE ATTENTION SUMMARY REG-
;	ISTER AND SCANNING FOR UNITS THAT HAVE ATTENTION SET. AS EACH UNIT
;	IS FOUND, ITS ATTENTION SUMMARY BIT IS CLEARED AND THEN A TEST IS
;	MADE TO DETERMINE IF AN INTERRUPT IS EXPECTED ON THE UNIT. IF YES,
;	THEN THE DRIVER IS CALLED AT ITS INTERRUPT RETURN ADDRESS. ELSE
;	THE DRIVER IS CALLED AT ITS UNSOLICITED INTERRUPT ADDRESS. AS EACH
;	CALL TO THE DRIVER RETURNS, THE ATTENTION SUMMARY REGISTER IS RE-
;	READ AND AN ATTEMPT IS MADE TO FIND ANOTHER UNIT TO DISPATCH. WHEN
;	NO UNITS REQUESTING ATTENTION REMAIN, THE INTERRUPT IS DISMISSED.
;-
 
	.PSECT	$$$115_DRIVER
MBA$INT::				;MASSBUS ADAPTER INTERRUPT DISPATCHER
	MOVL	@(SP),R3		;GET ADDRESS OF IDB
	MOVL	IDB$L_CSR(R3),R4	;GET ADDRESS OF CONFIGURATION STATUS REGISTER
	BITL	#MBA$M_CSR_PD,MBA$L_CSR(R4)	;CHECK FOR MBA POWER DOWN
	BNEQ	45$				;BRANCH IF POWERFAIL
	BITL	#MBA$M_SR_CBHUNG,MBA$L_SR(R4)	;CHECK FOR MBA HUNG
	BNEQ	50$				;BRANCH IF HUNG
	MOVL	IDB$L_OWNER(R3),R5	;GET OWNER UNIT UCB ADDRESS
	BEQL	10$			;IF EQL NO OWNER
	MOVZBL	UCB$B_SLAVE(R5),R2	;GET OWNER SLAVE CONTROLLER NUMBER
	BBS	#UCB$V_INT,UCB$W_STS(R5),20$ ;IF SET, INTERRUPT EXPECTED
10$:	MOVL	@(SP),R3		;RETRIEVE ADDRESS OF IDB
	MOVL	IDB$L_CSR(R3),R4	;RETRIEVE MBA CONFIGURATION REGISTER ADDRESS
	MCOML	#0,MBA$L_SR(R4)		;CLEAR ALL MBA STATUS BITS
	MOVL	MBA$L_AS(R4),R2		;READ ATTENTION SUMMARY REGISTER
	FFS	#0,#8,R2,R2		;FIND FIRST UNIT REQUESTING ATTENTION
	BNEQ	20$			;IF NEQ UNIT FOUND
	ADDL	#4,SP			;REMOVE IDB ADDRESS FROM STACK
	MOVQ	(SP)+,R2		;RESTORE REGISTERS
	MOVQ	(SP)+,R4		;
	REI				;
20$:	MOVL	IDB$L_UCBLST(R3)[R2],R5	;GET ADDRESS OF UCB OR INTERRUPT DISPATCHER
	BLBS	R5,40$			;IF LBS INTERRUPT DISPATCHER FOR MULTI-
					; DEVICE CONTROLLER
	ASHL	R2,#1,MBA$L_AS(R4)	;CLEAR ATTENTION SUMMARY BIT
	TSTL	R5			;SEE IF UCB DEFINED
	BEQL	10$			;IF EQL NONE DEFINED
	BBCC	#UCB$V_INT,UCB$W_STS(R5),30$ ;IF CLR, INTERRUPT NOT EXPECTED
	MOVQ	UCB$L_FR3(R5),R3	;RESTORE DRIVER CONTEXT
	JSB	@UCB$L_FPC(R5)		;CALL DRIVER AT INTERRUPT RETURN ADDRESS
	BRB	10$			;
30$:	MOVL	UCB$L_DDT(R5),R3	;GET ADDRESS OF DDT
	JSB	@DDT$L_UNSOLINT(R3)	;CALL UNSOLICITED INTERRUPT ROUTINE
	BRB	10$			;
40$:	MOVPSL	-(SP)			;READ CURRENT PSL
	JSB	-(R5)			;CALL SLAVE CONTROLLER INTERRUPT DISPATCHER
	BRB	10$			;

;
; IN CASE OF ADAPTER POWER DOWN BIT ASSERTED, RETRIEVE ADP ADDRESS AND JUMP
; TO ADAPTER ERROR ROUTINE IN SYSLOA780.
;

45$:	MOVL	IDB$L_ADP(R3),R4		;GET ADP ADDRESS
	JMP	EXE$RH780_INT			;JUMP TO ERROR ROUTINE
;
; IN CASE OF CBHUNG SAVE MBA INFORMATIION FOR BUGCHECK LOG AND
; BUGCHECK.  CBHUNG IS IMPLEMENTED ONLY ON THE VAX 11/750 CPU.
; IT MEANS THAT AN ACCESS TO A REGISTER OF AN EXISTENT CONTROLLER
; FAILED TO COMPLETE IN 1.5 USEC.
;

50$:	MOVL	IDB$L_OWNER(R3),R5		;SAVE OWNER UCB IF ANY
	MOVL	MBA$L_SR(R4),R0			;SAVE MBA STATUS REGISTER,
	MOVL	MBA$L_CSR(R4),R1		; CONFIGURATION REGISTER,
	MOVL	MBA$L_DR(R4),R2			; DIAGNOSTIC REGISTER,
	MOVL	IDB$L_ADP(R3),R3		;GET ADP ADDRESS
	MOVZWL	ADP$W_TR(R3),R3			;SAVE NEXUS NUMBER TO IDENTIFY
						; OFFENDING MBA
	BUG_CHECK MBACBHUNG,FATAL		;FATAL ERROR
	.PAGE
	.SBTTL	MASSBUS ADAPTER INITIALIZATION
;+
; MBA$INITIAL - MASSBUS ADAPTER INITIALIZATION
;
; THIS ROUTINE IS CALLED VIA A JSB INSTRUCTION AT SYSTEM STARTUP AND AFTER
; A POWER RECOVERY RESTART TO ALLOW INITIALIZATION OF MASSBUS ADAPTERS.
; 
; INPUTS:
;
;	R4 = CSR ADDRESS OF MASSBUS ADAPTER.
;	R5 = ADDRESS OF ADAPTER IDB.
;
;	ALL INTERRUPTS ARE LOCKED OUT.
;
; OUTPUTS:
;
;	THE MASSBUS ADAPTER IS INITIALIZED AND INTERRUPTS ARE ENABLED.
;-
 
MBA$INITIAL::				;MASSBUS ADAPTER INITIALIZATION
	MOVL	#MBA$M_CR_INIT,MBA$L_CR(R4) ;INITIALIZE MASSBUS ADAPTER
	MOVL	#MBA$M_CR_IE,MBA$L_CR(R4) ;ENABLE INTERRUPTS
	RSB				;
 
	.END
