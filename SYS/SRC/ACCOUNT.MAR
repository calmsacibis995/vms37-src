	.TITLE	ACCOUNT	-- ACCOUNTING MESSAGE SUBROUTINES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: EXECUTIVE
;
; ABSTRACT:
;
; ENVIRONMENT:	KERNEL MODE, IPL 0 OR SPECIAL KERNEL AST (IPL 2)
;
;-
;
;	.PAGE
	.SBTTL	HISTORY			; DETAILED
;
; AUTHOR:	Steve Forgey	 CREATION DATE: 	01-Aug-1981
;
; MODIFIED BY:
;
;	V2-003	SPF0043		Steve Forgey		08-Dec-1981
;		Add remote node information.
;
;	V2-002	SPF0039		Steve Forgey		28-Sep-1981
;		Fix image accounting synchronization bug.
;

	.SBTTL	DECLARATIONS

	.PSECT	YF$LOWUSE

;
; EQUATED SYMBOLS:
;

	$ACMDEF				; DEFINE AST CONTROL BLOCK
	$IFDDEF				; IMAGE FILE DESCRIPTOR OFFSETS
	$IPLDEF				; PROCESSOR INTERRUPT LEVELS
	$MSGDEF				; DEFINE MAILBOX MESSAGE TYPES
	$PCBDEF				; DEFINE PCB OFFSETS
	$PHDDEF				; DEFINE PROCESS HEADER OFFSETS

	ASSUME	ACM$W_MAILBOX EQ ACM$W_TYPE+2
	ASSUME	ACM$Q_PRVMSK EQ ACM$W_MAILBOX+2
	ASSUME	ACM$L_UIC EQ ACM$Q_PRVMSK+8
	ASSUME	ACM$T_USERNAME EQ ACM$L_UIC+4
	ASSUME	ACM$T_ACCOUNT EQ ACM$T_USERNAME+12
	ASSUME	ACM$B_PROCPRI EQ ACM$T_ACCOUNT+8
	ASSUME	ACM$L_PID EQ ACM$B_PROCPRI+4
	ASSUME	ACM$L_STS EQ ACM$L_PID+4
	ASSUME	ACM$L_OWNER EQ ACM$L_STS+4
	ASSUME	ACM$T_TERMINAL EQ ACM$L_OWNER+4
	ASSUME	ACM$Q_SYSTIME EQ ACM$T_TERMINAL+8
	ASSUME	ACM$Q_LOGIN EQ ACM$Q_SYSTIME+8
	ASSUME	ACM$L_FINALSTS EQ ACM$Q_LOGIN+8
	ASSUME	ACM$L_IMGCNT EQ ACM$L_FINALSTS+4
	ASSUME	ACM$L_CPUTIME EQ ACM$L_IMGCNT+4
	ASSUME	ACM$L_PAGEFLTS EQ ACM$L_CPUTIME+4
	ASSUME	ACM$L_PGFLTIO EQ ACM$L_PAGEFLTS+4
	ASSUME	ACM$L_WSPEAK EQ ACM$L_PGFLTIO+4
	ASSUME	ACM$L_PGFLPEAK EQ ACM$L_WSPEAK+4
	ASSUME	ACM$L_DIOCNT EQ ACM$L_PGFLPEAK+4
	ASSUME	ACM$L_BIOCNT EQ ACM$L_DIOCNT+4
	ASSUME	ACM$L_VOLUMES EQ ACM$L_BIOCNT+4
	ASSUME	ACM$W_NODEADDR EQ ACM$L_VOLUMES+4
	ASSUME	ACM$W_NODENAME EQ ACM$W_NODEADDR+2
	ASSUME	ACM$W_REMOTEID EQ ACM$W_NODENAME+2
	ASSUME	ACM$W_IMAGENAME EQ ACM$W_REMOTEID+2
	ASSUME	ACM$K_PROCLEN EQ ACM$W_IMAGENAME+2
	.PAGE
	.SBTTL	IMAGE ACCOUNTING MESSAGE

;++
; FUNCTIONAL DESCRIPTION:
;
;
; INPUT PARAMETERS:
;	R4 = PCB ADDRESS
;	R5 = ACB ADDRESS (IF SPECIAL KERNEL AST ROUTINE)
;	   = 0		 (OTHERWISE)
;
; OUTPUT PARAMETERS:
;	R0 = RETURN STATUS
;
;--

	.ENABLE	LSB

EXE$IMGPURMSG::				; SEND IMAGE PURGE MESSAGE
	PUSHR	#^M<R1,R2,R3,R4,R5,R6,R7,R8,R9,R10>;SAVE R1-R10
	MOVZWL	#MSG$_PURIMAG,R6	; SET UP MESSAGE TYPE
	BRB	10$

EXE$IMGDELMSG::				; SEND IMAGE TERMINATION MESSAGE
	PUSHR	#^M<R1,R2,R3,R4,R5,R6,R7,R8,R9,R10>;SAVE R1-R10
	MOVZWL	#MSG$_DELIMAG,R6	; SET UP MESSAGE TYPE
10$:
	BBC	#ACM$V_IMAGE,EXE$GL_ACMFLAGS,20$; IF BC, IMAGE ACCOUNTING NOT ENABLED
	BBS	#PCB$V_NOACNT,PCB$L_STS(R4),20$; IF BS, NO ACCOUNTING FOR PROCESS
	SETIPL	#IPL$_ASTDEL		; LOCK OUT AST DELIVERY
	BISL3	@#CTL$GQ_ISTART,@#CTL$GQ_ISTART+4,R1; IMAGE ACCOUNTING ACTIVE ?
	BNEQ	30$			; IF NEQ, YES
20$:
	BRW	EXIT
30$:
	MOVL	SP,R7			; SAVE SP (END OF BUFFER)
;
; IMAGE NAME
;
	MOVL	@#MMG$IMGHDRBUF+4,R1	; IFD ADDRESS
	MOVQ	IFD$Q_CURPROG(R1),R1	; IMAGE NAME DESCRIPTOR
	SUBL2	R1,SP			; ALLOCATE BUFFER SPACE
	MOVB	R1,-(SP)		; STORE IMAGE NAME SIZE
	MOVL	SP,R10			; IMAGE NAME ADDRESS
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R1,(R2),5(SP)		; COPY IMAGE NAME
	POPL	R4			; RESTORE PCB ADDRESS
;
; REMOTE NODE INFORMATION
;
	MOVZBL	@#CTL$T_REMOTEID,R9	; GET REMOTE ID BYTE COUNT
	BEQL	40$			; IF EQL, NO REMOTE ID
	SUBL2	R9,SP			; ALLOCATE BUFFER SPACE
	MOVB	R9,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R9,@#CTL$T_REMOTEID+1,5(SP); COPY REMOTE ID
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R9			; REMOTE ID ADDRESS
40$:
	MOVZBL	@#CTL$T_NODENAME,R8	; GET NODE NAME BYTE COUNT
	BEQL	50$			; IF EQL, NO REMOTE NODE NAME
	SUBL2	R8,SP			; ALLOCATE BUFFER SPACE
	MOVB	R8,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R8,@#CTL$T_NODENAME+1,5(SP); COPY REMOTE NODE NAME
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R8			; REMOTE NODE NAME ADDRESS
50$:
	MOVZBL	@#CTL$T_NODEADDR,R1	; GET NODE ADDRESS BYTE COUNT
	BEQL	60$			; IF EQL, NO REMOTE NODE ADDRESS
	SUBL2	R1,SP			; ALLOCATE BUFFER SPACE
	MOVB	R1,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R1,@#CTL$T_NODEADDR+1,5(SP); COPY REMOTE NODE ADDRESS
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R1			; REMOTE NODE ADDRESS ADDRESS
60$:
	CLRQ	-(SP)			; NODE ADDRESS, NAME, REM. ID, IMAGE
;
; RESOURCE DATA
;
	SUBL3	@#CTL$GL_IVOLUMES,@#CTL$GL_VOLUMES,-(SP); IMAGE VOLUME MOUNTS
	MOVL	@#CTL$GL_PHD,R5		; PHD ADDRESS
	SUBL3	@#CTL$GL_IBIOCNT,PHD$L_BIOCNT(R5),-(SP); IMAGE BUFFERED I/O COUNT
	SUBL3	@#CTL$GL_IDIOCNT,PHD$L_DIOCNT(R5),-(SP); IMAGE DIRECT I/O COUNT
	MOVQ	@#CTL$GL_IWSPEAK,-(SP)	; IMAGE WORKING SET AND PAGE FILE PEAK
	SUBL3	@#CTL$GL_IFAULTIO,PHD$L_PGFLTIO(R5),-(SP); IMAGE PAGE FAULT I/O COUNT
	SUBL3	@#CTL$GL_IFAULTS,PHD$L_PAGEFLTS(R5),-(SP); IMAGE PAGE FAULT COUNT
	SUBL3	@#CTL$GL_ICPUTIM,PHD$L_CPUTIM(R5),-(SP); IMAGE CPU TIME
	PUSHL	PHD$L_IMGCNT(R5)	; IMAGE SEQUENCE NUMBER
	PUSHL	@#CTL$GL_FINALSTS	; IMAGE FINAL STATUS
	MOVQ	@#CTL$GQ_ISTART,-(SP)	; IMAGE START TIME
	BRW	IDENT			; JOIN COMMON CODE

	.DISABLE LSB
	.PAGE
	.SBTTL	PROCESS ACCOUNTING MESSAGE

;++
; FUNCTIONAL DESCRIPTION:
;
;
; INPUT PARAMETERS:
;	R4 = PCB ADDRESS
;	R5 = ACB ADDRESS (IF SPECIAL KERNEL AST ROUTINE)
;	   = 0		 (OTHERWISE)
;
; OUTPUT PARAMETERS:
;	R0 = RETURN STATUS
;
;--

	.ENABLE	LSB

EXE$PRCPURMSG::				; SEND PROCESS PURGE MESSAGE
	PUSHR	#^M<R1,R2,R3,R4,R5,R6,R7,R8,R9,R10>;SAVE R1-R10
	MOVZWL	#MSG$_PURPROC,R6	; SET UP MESSAGE TYPE
	BRB	10$

EXE$PRCDELMSG::				; SEND PROCESS TERMINATION MESSAGE
	PUSHR	#^M<R1,R2,R3,R4,R5,R6,R7,R8,R9,R10>;SAVE R1-R10
	MOVZWL	#MSG$_DELPROC,R6	; SET UP MESSAGE TYPE
10$:
	BBC	#ACM$V_PROCESS,EXE$GL_ACMFLAGS,20$; IF BC, PROCESS ACCOUNTING NOT ENABLED
	BBC	#PCB$V_NOACNT,PCB$L_STS(R4),30$; IF BS, NO ACCOUNTING FOR PROCESS
20$:
	BRW	EXIT
30$:
	MOVL	SP,R7			; SAVE SP (END OF BUFFER)
;
; IMAGE NAME
;
	CLRL	R10			; NO IMAGE NAME
;
; REMOTE NODE INFORMATION
;
	MOVZBL	@#CTL$T_REMOTEID,R9	; GET REMOTE ID BYTE COUNT
	BEQL	40$			; IF EQL, NO REMOTE ID
	SUBL2	R9,SP			; ALLOCATE BUFFER SPACE
	MOVB	R9,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R9,@#CTL$T_REMOTEID+1,5(SP); COPY REMOTE ID
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R9			; REMOTE ID ADDRESS
40$:
	MOVZBL	@#CTL$T_NODENAME,R8	; GET NODE NAME BYTE COUNT
	BEQL	50$			; IF EQL, NO REMOTE NODE NAME
	SUBL2	R8,SP			; ALLOCATE BUFFER SPACE
	MOVB	R8,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R8,@#CTL$T_NODENAME+1,5(SP); COPY REMOTE NODE NAME
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R8			; REMOTE NODE NAME ADDRESS
50$:
	MOVZBL	@#CTL$T_NODEADDR,R1	; GET NODE ADDRESS BYTE COUNT
	BEQL	60$			; IF EQL, NO REMOTE NODE ADDRESS
	SUBL2	R1,SP			; ALLOCATE BUFFER SPACE
	MOVB	R1,-(SP)		; BYTE COUNT
	PUSHL	R4			; SAVE PCB ADDRESS
	MOVC3	R1,@#CTL$T_NODEADDR+1,5(SP); COPY REMOTE NODE ADDRESS
	POPL	R4			; RESTORE PCB ADDRESS
	MOVL	SP,R1			; REMOTE NODE ADDRESS ADDRESS
60$:
	CLRQ	-(SP)			; NODE ADDRESS, NAME, REM. ID, IMAGE
;
; RESOURCE DATA
;
	PUSHL	@#CTL$GL_VOLUMES	; VOLUMES MOUNTED
	MOVL	@#CTL$GL_PHD,R5		; PHD ADDRESS
	MOVQ	PHD$L_DIOCNT(R5),-(SP)	; DIRECT AND BUFFERED IO COUNTS
	MOVQ	@#CTL$GL_WSPEAK,-(SP)	; WORKING SET AND PAGE FILE PEAK
	PUSHL	PHD$L_PGFLTIO(R5)	; PAGE FAULT I/O COUNT
	PUSHL	PHD$L_PAGEFLTS(R5)	; PAGE FAULT COUNT
	PUSHL	PHD$L_CPUTIM(R5)	; CPU TIME
	PUSHL	PHD$L_IMGCNT(R5)	; IMAGE EXECUTION COUNT
	PUSHL	@#CTL$GL_FINALSTS	; FINAL STATUS
	MOVQ	@#CTL$GQ_LOGIN,-(SP)	; LOGIN TIME

	.DISABLE LSB
	.PAGE
	.SBTTL	COMMON IDENTIFICATION DATA

IDENT:
	MOVQ	EXE$GQ_SYSTIME,-(SP)	; CURRENT TIME
	MOVQ	PCB$T_TERMINAL(R4),-(SP); INTERACTIVE PROCESS TERMINAL NAME
	PUSHL	PCB$L_OWNER(R4)		; PID OF SUBPROCESS OWNER (0 => NONE)
	PUSHL	PCB$L_STS(R4)		; PROCESS STATUS
	PUSHL	PCB$L_PID(R4)		; PROCESS ID
	CLRW	-(SP)			; 3 SPARE BYTES
	CLRB	-(SP)			;
	SUBB3	PCB$B_PRIB(R4),#31,-(SP); PROCESS BASE PRIORITY
	MOVQ	@#CTL$T_ACCOUNT,-(SP)	; ACCOUNT NAME
	MOVQ	@#CTL$T_USERNAME+4,-(SP); USERNAME
	PUSHL	@#CTL$T_USERNAME
	PUSHL	PCB$L_UIC(R4)		; PROCESS UIC
	MOVQ	PCB$Q_PRIV(R4),-(SP)	; PRIVILEGE MASK
	PUSHL	R6			; MESSAGE TYPE AND RESPONSE MAILBOX (0)
	TSTL	R1			; NODE ADDRESS PRESENT ?
	BEQL	10$			; IF EQL, NO
	SUBL2	SP,R1			; NODE NAME OFFSET
	CVTLW	R1,ACM$W_NODEADDR(SP)
10$:
	TSTL	R8			; NODE NAME PRESENT ?
	BEQL	20$			; IF EQL, NO
	SUBL2	SP,R8			; NODE NAME OFFSET
	CVTLW	R8,ACM$W_NODENAME(SP)
20$:
	TSTL	R9			; REMOTE ID PRESENT ?
	BEQL	30$			; IF EQL, NO
	SUBL2	SP,R9			; REMOTE ID OFFSET
	CVTLW	R9,ACM$W_REMOTEID(SP)
30$:
	TSTL	R10			; IMAGE NAME PRESENT ?
	BEQL	40$			; IF EQL, NO
	SUBL2	SP,R10			; IMAGE NAME OFFSET
	CVTLW	R10,ACM$W_IMAGENAME(SP)
40$:
	MOVAL	SYS$GL_JOBCTLMB,R5	; ACCOUNTING MANAGER MAILBOX UCB ADDR
	SUBL3	SP,R7,R3		; MESSAGE SIZE
	MOVL	SP,R4			; MESSAGE ADDRESS
	BSBW	EXE$SENDMSG		; SEND MESSAGE TO JOB CONTROLLER
	MOVL	R7,SP			; CLEAN UP STACK
EXIT:
	POPR	#^M<R1,R2,R3,R4,R5,R6,R7,R8,R9,R10>; RESTORE R1-R10
	TSTL	R5			; SPECIAL KERNEL AST ROUTINE ?
	BNEQ	10$			; IF NEQ, YES
	CLRQ	@#CTL$GQ_ISTART		; MARK IMAGE ACCOUNTING INACTIVE
	SETIPL	#0			; ENABLE AST DELIVERY
	RSB
10$:
	MOVL	R5,R0			; ADDRESS OF ACB TO DEALLOCATE
	JMP	EXE$DEANONPAGED		; DEALLOCATE ACB ON THE WAY OUT

	.END
