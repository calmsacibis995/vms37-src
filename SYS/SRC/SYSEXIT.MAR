	.TITLE	SYSEXIT IMAGE EXIT SYSTEM SERVICE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
; FACILITY: EXECUTIVE, SYSTEM SERVICES
;
; ABSTRACT:
;	SYSEXIT IMPLEMENTS THE EXIT SYSTEM SERVICE AND PERFORMS THE DISPATCHING
;	OF EXIT HANDLERS AND DELETES THE PROCESS IF NONE EXIST.
;
; ENVIRONMENT:
;	MODE=KERNEL, PAGED CODE
;--
;
;	.PAGE
	.SBTTL	HISTORY			; DETAILED
;
; AUTHOR:	R. HUSTVEDT	 CREATION DATE: 30-SEP-76
;
; MODIFIED BY:
;	, : VERSION
; 01	 -

	.PAGE
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;

	$PCBDEF				; DEFINE PROCESS CONTROL BLOCK
	$PSLDEF				; DEFINE PSL FIELDS AND BITS

;
; EQUATES:
;
CODE=4					; DISPLACEMENT TO EXIT CODE
;
; OWN STORAGE:
;

	.PSECT	YEXEPAGED,BYTE		; PAGED PSECT
	.PAGE
	.SBTTL	EXE$EXIT - IMAGE EXIT SYSTEM SERVICE

;++
; FUNCTIONAL DESCRIPTION:
;	EXE$EXIT IMPLEMENTS THE IMAGE EXIT SYSTEM SERVICE.  THE LIST
;	OF TERMINATION CONTROL BLOCKS FOR BOTH USER AND SUPER ACCESS
;	MODES ARE PROCESSED, CALLING THE SPECIFIED TERMINATION HANDLING
;	ROUTINES.
;
; CALLING SEQUENCE:
;	CALLG	ARGLIST,EXE$EXIT
;
; INPUT PARAMETERS:
;	CODE(AP) - TERMINATION REASON CODE
;
;	R4 = CURRENT PROCESS PCB ADDRESS.
;
;
; IMPLICIT INPUTS:
;	CTL$GL_THUSER - HEAD OF THE USER MODE TERMINATION CONTROL BLOCK LIST
;	CTL$GL_THSUPR - HEAD OF THE SUPER MODE TERMINATION CONTROL BLOCK LIST
;
; OUTPUT PARAMETERS:
;	NONE
;
; COMPLETION CODES:
;	NONE
;
; SIDE EFFECTS:
;	NONE
;
;--

	.ENTRY	EXE$EXIT,^M<R4>
	MOVL	CODE(AP),@#CTL$GL_FINALSTS	; SET FINAL EXIT STATUS
	BBCC	#PCB$V_FORCPEN,PCB$L_STS(R4),5$	; CLEAR FORCE EXIT PENDING
5$:	MOVPSL	R1			; GET CURRENT PSL
	EXTZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,R1,R1	; EXTRACT PREVIOUS MODE
	PUSHAL	@#CTL$GL_THSUPR-4	; GET ADDRESS OF TERMINATION CHAIN
10$:	SOBGEQ	R1,30$			; TRY SUPER MODE IF NONE FOR USER
20$:	$DELPRC_S			; DELETE SELF
	BLBC	R0,20$			; RETRY IF FAILURE
25$:	BRB	25$			; ****** FELL THROUGH DELPRC SOMEHOW
30$:	MOVL	@(SP)[R1],R0		; GET HEAD OF TERMINATION LIST
	BEQL	10$			; NONE FOR THIS MODE, TRY ANOTHER
	CLRL	@(SP)+[R1]		; ZAP TERMINATION LIST POINTER
	INCL	R1			; CORRECT MODE NUMBER
	MULL	#<1+<1@<PSL$V_CURMOD-PSL$V_PRVMOD>>>,R1	; MAKE PRV=CURRENT
	MOVL	12(FP),FP		; RESTORE CURRENT FRAME POINTER
	MOVL	5*4(FP),R4		; RESTORE CONTENTS OF R4
	ADDL	S^#<8+EXE$C_CMSTKSZ>,SP	; CLEAN KERNEL STACK
	ASHL	#PSL$V_PRVMOD,R1,-(SP)	; PUSH PSL
	MOVL	CODE(AP),R1		; SET CODE IN R1
	BSBB	DOREI			; PUSH PC AND DO REI

;
;	TERMINATION LIST PROCESSING	
;
;	R0 - POINTER TO TERMINATION CONTROL BLOCK LIST
;	R1 - TERMINATION CODE/REASON
;

40$:	PUSHL	R1			; SAVE CODE
	PUSHL	(R0)			; SAVE POINTER TO NEXT BLOCK
	CLRL	(R0)			; ZAP FLINK TO PREVENT CIRCULAR LIST
	MOVL	R1,@12(R0)		; SET TERMINATION CODE/REASON
	CALLG	8(R0),@4(R0)		; CALL TERMINATION HANDLER
	POPR	#^M<R0,R1>		; RESTORE CODE AND POINTER
	TSTL	R0			; MORE TERMINATION BLOCKS?
	BNEQ	40$			; YES, CONTINUE
	CLRL	FP			; TERMINATE CALL FRAME LIST
	$EXIT_S	R1			; OTHERWISE EXIT AGAIN


;
;	PERFORM REI TO ENTER USER OR SUPER MODE AS APPROPRIATE
;
DOREI:	REI				; ENTER PROPER MODE FOR TERMINATION


	.END
