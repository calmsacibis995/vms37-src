;
;	Version	'V03-004'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from A to E.  That is, all control blocks from AAA to EZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-004	RLRV3A3		Robert L. Rappaport	15-Apr-1982
;		Add EMB$C_ACPTH to log Attention messages.
;
;	V03-003	RLRV3A2		Robert L. Rappaport	6-Apr-1982
;		Add EMB$C_AVATN, EMB$C_DUPUN so as to log Attention
;		messages from MSCP controllers. Also add EMB$C_IVCMD.
;
;	V03-002	KTA0090		Kerbey T. Altmann	29-Mar-1982
;		Add new field to BOOT QIO vector for microcode address.
;
;	V03-001	RLRV3A1		Robert L. Rappaport	23-Mar-1982
;		Add two state bits to CDDB definition and add field
;		to EMBSPDEF (Error Log Software Parameter block).
;
;	V02-040	ADE0003		Alan D. Eldridge	2-Mar-1982
;		Extend CXB$C_DLL to 32 bytes.  Move CXB$L_ENDACTION into
;		the CXB$C_DLL area in order to keep start of the datalink
;		impure area quadword aligned.
;
;	V02-039	ADE0002		Alan D. Eldridge	9-Nov-1982
;		Quadword align the data are within a CXB by shortening
;		the datalink scratch area (CXB$C_DLL) to 28 bytes.
;
;	V02-038	RLRUEMB		Robert L. Rappaport	5-Feb-1982
;		Added fields to EMBDEF to support error logging on
;		UDA50.
;
;	V02-037	JLV0177		Jake VanNoy		2-Feb-1982
;		Change name of BRD$L_ANSDATA and BRD$W_ANSLENGTH
;		to BRD$L_SCRDATA and BRD$W_SCRLENGTH. Change name of
;		DPT$Q_LINKDATE to DPT$Q_LINKTIME to coincide with
;		$IHIDEF symbol.
;
;	V02-036	RLRUBARS	Robert L. Rappaport	25-Jan-1982
;		Added CDRP$L_UBARSRCE to end of Class Driver extension of
;		CDRP definition.
;
;	V02-035	RLRCDDBY	Robert L. Rappaport	13-Jan-1982
;		Corrected spelling of CDDB$L_CONNQBL.
;
;	V02-034	JLV0156		Jake VanNoy		13-Jan-1982
;		Add DPT$Q_LINKDATE and DPT$L_ECOLEVEL to allow 
;		verification of drivers received in dumps. Move
;		length definition of ACB to end.
;
;	V02-033	RLRCDDBX	Robert L. Rappaport	4-Jan-1982
;		Added CDDB$L_CONNQFL and CDDB$L_CONNQBL.
;
;	V02-032	SPF0051		Steve Forgey		02-Jan-1982
;		Add remote node fields to ACMDEF.
;
;	V02-031	KTA0058		Kerbey T. Altmann	29-Dec-1981
;		Add some new fields to CDT.  Add new DYN subcode.
;
;	V02-030	SPF0045		Steve Forgey		28-Dec-1981
;		Add FLAGS field to ERL structure.
;
;	V02-029	ROW0061		Ralph O. Weber		23-DEC-1981
;		Add ACF$L_DLVR_SCRH to autoconfigure control block.  Also move 
;		ACF$B_CNUMVEC so that longword control block entries are 
;		longword aligned (so that the map in the driver guide will 
;		look better).
;
;	V02-028	PHL0025		Peter H. Lipman		30-Nov-1981
;		Comment changes only!  Document in $AQBDEF the fact
;		that the ACPTYPE fields are replicated in $DVIDEF.
;
;	V02-027	RLREMB		Robert L. Rappaport	24-Nov-1981
;		Added two new types of errorlog message buffer: EMBSPDEF,
;		a buffer used by the disk class driver to store software
;		parameters after a device error, and EMBLMDEF, a buffer
;		used to log a device dependent message.
;
;	V02-026	RLRADPB		Robert L. Rappaport	23-Nov-1981
;		Make UNIBUS ADP length an integer multiple of longwords.
;
;	V02-025	ADE0001		Alan D. Eldridge	16-Nov-1981
;		Added CXB$W_UQUO, CXB$W_JQUO, CXB$B_ASTCNT, CXB$L_IRP, 	
;		CXB$L_ENDACTION, CXB$T_DLL, CXB$C_DLL, CXB$C_HEADER, 
;		CXB$C_TRAILER, and CXB$C_OVERHEAD.   Removed CXB$C_DDCCON, 
;		CXB$C_DDCDAT, CXB$C_DDCRCV, CXB$C_DDCERR, and CXB$C_NSPSTART.
;		Moved the position of CXB$L_IRP down 4 bytes.
;
;	V02-024	RLR0007		Robert L. Rappaport	12-Nov-1981
;		Eliminated ADP$W_MRBITMAP and shifted ADP$W_DPBITMAP
;		down to UBA extension of ADP.
;
;	V02-023	RLR0006		Robert L. Rappaport	2-Nov-1981
;		Added EMB$C_DA as an error log record type.
;
;	V02-022	RLR0005		Robert L. Rappaport	30-Oct-1981
;		Added fields to ADP for new UBA map register allocation
;		scheme.
;
;	V02-021	KTA0039		Kerbey T. Altmann	28-Oct-1981
;		Added new structure BQO for offsets into IO vector of the
;		boot QIO driver.
;
;	V02-020	RLR0004		Robert L. Rappaport	23-Oct-1981
;		1. DYNDEF changes:
;			a) Added CLASSDRV subtypable major code.  Under this
;			   coded added subtypes CDDB and BBRPG (Bad Block
;			   Replacement PaGe).  Also eliminated CDDB simple code.
;		2. CDDB changes:
;			a) Eliminated CDDB$x_CDRPTRCKL status bit.
;			b) Added CDDB$x_INITING and CDDB$x_RECONNECT status bits.
;			c) Eliminated CDDB$W_TOTCDRP field.
;			d) Changed CDDB$W_OLDCMDSTS back to CDDB$L_OLDCMDSTS.
;			e) Moved CDDB$B_RETRYCNT to make room for CDDB$B_SUBTYPE.
;
;	V02-019	JLV0090		Jake VanNoy		22-Oct-1981
;		Add DPT flag for SCS code needed. Increment DPT$C_VERSION
;		to 3 and add a spare longword to make mods easier.
;
;	V02-018	KTA0036		Kerbey T. Altmann	08-Oct-1981
;		Added DYN$C_BOOTCB for boot control block.
;
;	V017	SPF0041		Steve Forgey		28-Sep-1981
;		Added LOGFAIL enable/disable type to $ACMDEF.
;
;	V016	CAS0034		C. A. Samuelson		14-Sep-1981
;		Added field to $ACFDEF specifying number of units to configure.
;
;	V015	SPF0021		Steve Forgey		29-Aug-1981
;		Added fields to $ACMDEF.
;
;	V014	RLR0003		Robert L. Rappaport	28-Aug-1981
;		Changed CDDB$L_OLDCMDSTS to CDDB$W_OLDCMDSTS and moved
;		CDDB$B_CNTRLTYP.
;
;	V013	TMH0013		Tim Halvorsen		26-Aug-1981
;		Add $CANDEF
;
;	V02-012	SRB0031		Steve Beckhardt		20-Aug-1981
;		Added subtype code for process bitmap (DYN$C_PRCMAP).
;
;	V02-011	HRJ0026		Herb Jacobs		12-Aug-1981
;		Replaced DYN$C_SFT with DYN$C_UNUSED in DYN structure.
;
;	V02-010	JLV0066		Jake VanNoy		12-Aug-1981
;		Added mailbox prefix block to BRD block.
;
;	V02-009	NPK2008		N. Kronenberg		04-Aug-1981
;		Renamed CDT$L_AUXCDT to CDT$L_AUXSTRUC.  Removed
;		CDRP from CDT.  Added DGHDRSZ and MSGHDRSZ to CDT.
;
;	V02-008	KDM0063		Kathleen D. Morse	03-Aug-1981
;		Add process name and id to bugcheck and crash/restart
;		error log messages.
;
;	V02-007	KTA0028		Kerbey T. Altmann	31-Jul-1981
;		Add some new DYN$ values.
;
;	V02-006	SPF0014		Steven Forgey		30-Jul-1981
;		Moved $ACMDEF from job controller and added accounting message
;		offsets.
;
;	V02-005	RLR0002		Robert L. Rappaport	30-July-1981
;		Added CDDB$B_CNTRLTYP field.
;
;	V02-004	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Change all "7ZZ"s to "730"s.
;
;	V02-003	RLR0001		Robert L. Rappaport	29-July-1981
;		Added CDDB$L_SAVED_PC field and CDDB$V_IMPEND bit.
;
;	V02-002	KDM0062		Kathleen D. Morse	29-Jul-1981
;		Remove PCB from the crash-restart and bugcheck error
;		log messages.
;
;**

;+
; ACMDEF - ACCOUNTING MANAGER DEFINITIONS
;-

	$STRUCT	ACM

	V	<	; ACCOUNTING MANAGER FLAGS (EXE$GL_ACMFLAGS)
		PROCESS		; PROCESS ACCOUNTING ENABLED
		IMAGE		; IMAGE ACCOUNTING ENABLED
		INTERACTIVE	; INTERACTIVE ACCOUNTING ENABLED
		LOGFAIL		; LOGIN FAILURE ACCOUNTING ENABLED
		SUBPROCESS	; SUBPROCESS ACCOUNTING ENABLED
		DETACHED	; DETACHED PROCESS ACCOUNTING ENABLED
		BATCH		; BATCH ACCOUNTING ENABLED
		NETWORK		; NETWORK PROCESS ACCOUNTING ENABLED
		PRINT		; PRINT JOB ACCOUNTING ENABLED
		USER_DATA	; USER_DATA ACCOUNTING ENABLED
		ACM_FUNC	; ACM FUNCTION ACCOUNTING ENABLED
		SYS_FUNC	; SYSTEM FUNCTION ACCOUNTING ENABLED
		>

       -F	MSGSTS,W	; MSG STATUS IN MAILBOX IOSB (JOBCTL SPECIFIC)
       -F	MSGLEN,W	; MSG LENGTH IN MAILBOX IOSB (JOBCTL SPECIFIC)
       -F	PROCID,L	; PROCESS ID IN MAILBOX IOSB (JOBCTL SPECIFIC)
	F	TYPE,W		; MESSAGE TYPE
	F	MAILBOX,W	; MAILBOX UNIT NUMBER
	F	PRVMSK,Q	; PROCESS PRIV MASK
	F	UIC,L		; PROCESS UIC
	S	MEM,,W		; 	MEMBER UIC
	S	GRP,,W		;	GROUP UIC
	F	USERNAME,T,12	; USERNAME
	F	ACCOUNT,T,8	; ACCOUNT NAME
	F	PROCPRI,B	; PROCESS BASE PRIORITY
	F	,B,3		; SPARE BYTES (LONGWORD ALIGNMENT)
	F	PID,L		; PROCESS ID
	F	STS,L		; PROCESS STATUS
	F	OWNER,L		; OWNER PROCESS ID (0 => NONE)
	F	TERMINAL,T,8	; TERMINAL NAME (COUNTED ASCII STRING)
	F	SYSTIME,Q	; CURRENT SYSTEM TIME
	M	1
;
; SEND TO ACCOUNTING MANAGER FIELDS
;
	P	1
	F	USERREQ,W	; USER REQUEST TYPE
	F	DATA,T,256	; USER DATA
;
; PROCESS/IMAGE DELETE/PURGE FIELDS
;
	P	1
	F	LOGIN,Q		; PROCESS/IMAGE START TIME
	F	FINALSTS,L	; PROCESS FINAL STATUS
	F	IMGCNT,L	; IMAGE EXECUTION COUNT
	F	CPUTIME,L	; CPU USAGE
	F	PAGEFLTS,L	; PAGEFAULT COUNT
	F	PGFLTIO,L	; PAGEFAULT I/O
	F	WSPEAK,L	; WORKING SET PEAK
	F	PGFLPEAK,L	; PAGE FILE PEAK
	F	DIOCNT,L	; DIRECT I/O COUNT
	F	BIOCNT,L	; BUFFERED I/O COUNT
	F	VOLUMES,L	; VOLUME MOUNT COUNT
	F	NODEADDR,W	; MESSAGE OFFSET TO REMOTE NODE ADDRESS
	F	NODENAME,W	; MESSAGE OFFSET TO REMOTE NODE NAME
	F	REMOTEID,W	; MESSAGE OFFSET TO REMOTE ID
	F	IMAGENAME,W	; MESSAGE OFFSET TO IMAGE NAME
	L	PROCLEN		; MIN. PROCESS/IMAGE TERMINATION MESSAGE LENGTH
	E

;+
; AST CONTROL BLOCK DEFINITIONS
;
; AST CONTROL BLOCKS EXIST AS SEPARATE STRUCTURES AND AS SUBSTRUCTURES
; WITHIN LARGER CONTROL BLOCKS SUCH AS I/O REQUEST PACKETS AND TIMER
; QUEUE ENTRIES.
;
;-
 
	$STRUCT	ACB

	F	ASTQFL,L		;AST QUEUE FORWARD LINK
	F	ASTQBL,L		;AST QUEUE BACKWARD LINK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	RMOD,B			;REQUEST ACCESS MODE
		V<			;RMOD FLAG DEFINITIONS
		MODE,2			;MODE FOR FINAL DELIVERY
		  ,2			;SPARE
		PKAST,,,M		;PIGGY BACK SPECIAL KERNEL AST
		NODELETE,,,M		;DON'T DELETE ACB ON DELIVERY
		QUOTA,,,M		;ACCOUNT FOR QUOTA
		KAST,,,M		;SPECIAL KERNEL AST
		>
	F	PID,L			;PROCESS ID OF REQUEST
	F	AST,L			;AST ROUTINE ADDRESS
	F	ASTPRM,L		;AST PARAMETER
	F	KAST,L			;INTERNAL KERNEL MODE XFER ADDRESS
	L	LENGTH			; Length of block.

	E

;
; CONFIGURATION CONTROL BLOCK OFFSET DEFINITIONS
;
 
	$STRUCT	ACF
 
	F	ADAPTER,L		;ADDRESS OF ADAPTER CONTROL BLOCK
	F	CONFIGREG,L		;ADDRESS OF CONFIGURATION STATUS REGISTER
	F	AVECTOR,W		;OFFSET TO ADAPTER INTERRUPT VECTOR (SCB)
	F	AUNIT,B			;ADAPTER UNIT NUMBER
	F	AFLAG,B			;ADAPTER GENERATION CONTROL FLAGS
	V <M				;FLAG VALUES
		RELOAD			; RELOAD DRIVER
		CRBBLT			; CRB AND IDB ARE BUILT
		SCBVEC			; CVECTOR IS OFFSET INTO SCB
		NOLOAD_DB		; DON'T LOAD DATABASE, ONLY LOAD DRIVER
		SUPPORT			; DEVICE IS SUPPORTED
		>
	F	CONTRLREG,L		;ADDRESS OF CONTROL REGISTER
	F	CVECTOR,W		;OFFSET TO CONTROLLER INTERRUPT VECTOR (TABLE)
	F	CUNIT,B			;CONTROLLER UNIT NUMBER
	F	NUMUNIT,B		;NUMBER OF UNITS TO CONFIGURE
	F	DEVNAME,L		;ADDRESS OF DEVICE NAME COUNTED STRING
	F	DRVNAME,L		;ADDRESS OF DRIVER NAME COUNTED STRING
	F	MAXUNITS,W		;MAXIMUM UNITS THAT CAN BE CONNECTED
	F	CNUMVEC,B		;NUMBER OF CONTROLLER VECTORS
	F	,B			;(SPARE)
	F	DLVR_SCRH,L		;SCRATCH FOR DELIVER ROUTINES
	L	LENGTH			;LENGTH OF DEVICE DESCRIPTOR ARGUMENT LIST
 
	E
 

;+
; ADAPTER CONTROL BLOCK DEFINITIONS
;
; THERE IS ONE ADP FOR EACH SYSTEM INTERCONNECT ADAPTER THAT IS
; USED FOR ANY TYPE OF I/O.  FOR EXAMPLE: MASBUSS ADAPTER, UNIBUS
; ADAPTER.  THERE IS NO ADAPTER CONTROL BLOCK FOR MAIN MEMORY ADAPTERS.
;-
 
	$STRUCT	ADP
 
	F	CSR,L		 	;ADAPTER CONFIGURATION STATUS REGISTER ADDRESS
	F	LINK,L			;ADDRESS OF NEXT ADAPTER CONTROL BLOCK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE
	F	NUMBER,B		;ORDINAL ADAPTER NUMBER
	F	TR,W			;CONFIGURATION TR NUMBER
	F	ADPTYPE,W		;SOFTWARE ADAPTER TYPE
	F	VECTOR,L		;UBA - ADDRESS OF VECTOR JUMP TABLE
	S	CRB,0,L			;MBA OR DR32 - ADDRESS OF ADAPTER'S CRB
	F	DPQFL,L			;UBA - DATAPATH WAIT QUEUE FORWARD LINK
	S	PRQQFL,0,L		;MPM - INTER-PROCESSOR REQUEST WAIT QUEUE FLINK
	S	MBASCB,0,L		;MBA - SCB VECTOR VALUE FOR MBA NEXUS
	F	DPQBL,L			;UBA - DATAPATH WAIT QUEUE BACKWARD LINK
	S	PRQQBL,0,L		;MPM - INTER-PROCESSOR REQUEST WAIT QUEUE BLINK
	S	MBASPTE,0,L		;MBA - SPTE VALUE WHICH MAPS MBA ADDRESS SPACE
	L	MBAADPLEN		;LENGTH OF ADP FOR MASSBUS ADAPTER
	L	DRADPLEN		;LENGTH OF ADP FOR DR32
	L	CIADPLEN		;LENGTH OF ADP FOR CI
	F	MRQFL,L			;UBA - MAP REGISTER WAIT QUEUE FORWARD LINK
	S	SHB,0,L			;MPM - SHARED MEMORY CONTROL BLOCK ADDR
	F	MRQBL,L			;UBA - MAP REGISTER WAIT QUEUE BACKWARD LINK
	S	PORT,0,B		;MPM - PORT NUMBER
	F	INTD,L,3		;UBA - INTERRUPT TRANSFER VECTOR
	L	MPMADPLEN		;LENGTH OF ADP FOR MULTI-PORT MEMORY
	F	UBASCB,L,4		;UBA - SCB VECTOR VALUE FOR 4 UBA VECTORS
	F	UBASPTE,L,2		;UBA - SPTE VALUES FOR MAPPING UBA ADDRESSES
	F	MRACTMDRS,L		; UBA - # active map register descriptors
	F	DPBITMAP,W		; UBA - Datapath Allocation Bitmap
	F	MRNFENCE,W		; Fence preceeding array. Init'ed to -1
	F	MRNREGARY,W,124		; # map regs in an extent array
	F	MRFFENCE,W		; Fence precedding array. Init'ed to -1
	F	MRFREGARY,W,124		; 1st reg in extent array.
	F	UMR_DIS,W		; Num of Map Registers to disable
					; NOTE** - UNIBUS ADP must be integral
					;  number of longwords long so that 780
					;  interrupt vectors are longword aligned.
	L	UBAADPLEN		;LENGTH OF ADP FOR UNIBUS ADAPTER
	C	NUMDATAP,16		;UBA - NUMBER OF DATAPATHS
 
	E

;+
; FORMAT OF ACP I/O BUFFER PACKET. THIS PACKET CONTAINS ALL THE DATA
; TRANSMITTED FROM THE USER TO THE ACP AND BACK FOR AN ACP FUNCTION.
; NOTE THAT THE DESCRIPTORS IN THE PACKET ARE TREATED BY BLISS CODE
; AS A BLOCKVECTOR.
;-

	$STRUCT	AIB		; MAIN PACKET BODY
 
	F DESCRIPT		; ADDRESS OF START OF DESCRIPTORS
	F			; SPARE LONGWORD
	F SIZE,W		; SIZE OF PACKET
	F TYPE,B		; PACKET TYPE CODE
	F ,B			; SPARE
	L LENGTH		; LENGTH OF PACKET HEADER
 
	E


	$STRUCT	ABD		; DESCRIPTOR FORMAT
 
	F TEXT,W		; WORD OFFSET TO DATA TEXT
	F COUNT,W		; BYTE COUNT OF TEXT
	F USERVA		; USER VIRTUAL ADDRESS OF TEXT
	L LENGTH		; SIZE OF DESCRIPTOR
	C WINDOW,0		; DESCRIPTOR FOR WINDOW ADDRESS
	C FIB,1			; DESCRIPTOR FOR FIB
	C NAME,2		; DESCRIPTOR FOR NAME STRING
	C RESL,3		; DESCRIPTOR FOR RESULT LENGTH
	C RES,4			; DESCRIPTOR FOR RESULT STRING
	C ATTRIB,5		; FIRST ATTRIBUTE DESCRIPTOR
 
	E

;+
; DEFINITION OF ACP QUEUE HEADER
;-
 
	$STRUCT	AQB		; ACP QUEUE HEADER BLOCK
 
	F ACPQFL		; QUEUE FORWARD LINK
	F ACPQBL		; QUEUE BACK LINK
	F SIZE,W		; CONTROL BLOCK SIZE IN BYTES
	F TYPE,B		; BLOCK TYPE CODE
	F MNTCNT,B		; ACP MOUNT COUNT
	F ACPPID		; ACP PROCESS PID
	F LINK			; AQB LIST LINKAGE
	F STATUS,B		; STATUS BYTE
	V<M
	    UNIQUE		; ACP IS UNIQUE TO THIS DEVICE
	    DEFCLASS		; ACP IS DEFAULT FOR THIS CLASS
	    DEFSYS		; ACP IS DEFAULT FOR THE SYSTEM
	    CREATING		; ACP IS CURRENTLY BEING CREATED
	>
	F ACPTYPE,B		; ACP TYPE CODE
;
; ***** The following ACP type codes are now a user visible interface
; ***** and the values may not be changed.  There are parallel definitions
; ***** in the $DVIDEF macro that define symbols of the form:
; *****
; *****		DVI$C_ACP_F11V1
; *****		DVI$C_ACP_F11V2
; *****		DVI$C_ACP_MTA
; *****		...
; *****
; ***** All new ACP type values must be added at the end and the names
; ***** must be 5 characters or less to keep the DVI form of the name
; ***** 15 characters or less.  Any additions must also be made in $DVIDEF
; ***** and in the list of ASSUMES in the module SYSGETDEV in [SYS.SRC]
;
	K<,,0,1
	    UNDEFINED		; UNDEFINED ACP
	    F11V1		; FILES-11 STRUCTURE LEVEL 1
	    F11V2		; FILES-11 STRUCTURE LEVEL 2
	    MTA			; MAGTAPE
	    NET			; NETWORKS
	    REM			; REMOTE I/O
	    JNL			; JOURNAL

	>
	F CLASS,B		; ACP CLASS CODE
	F ,B			; RESERVED
	L LENGTH		; SIZE OF AQB
 
	E

;+
;
; Access Rights Block - structure defining process access rights and
;			privileges. Presently part of the PCB.
;
;-
	$STRUCT	ARB
	F PRIV,Q			; Privilege mask
	F ,L				; Spare to allow for JIB type,size
	F UIC,L				; User identification code.
	L LENGTH			; Structure length
	E				;

;+
;
; Structure of message from disk ACP to bad block scan utility.
;
;-

	$STRUCT	BBS

	F MSGTYPE,B			; message type code (MSG$C_SCANBAD)
	F ,B,3				; unused
	F SEQUENCE,W			; message sequence number
	F ,W				; unused
	F UCB				; UCB address of device
	F FID,W,3			; file ID of file
	L LENGTH

	E

;+
; BOO - Boot Control Block
;
; A boot control block is produced by SYSBOOT and placed in non-paged
; pool.  It is pointed to by the cell EXE$GL_BOOTCB and contains
; the mapping information for SYS.EXE, SYSDUMP.DMP, SYSPARAM portion
; of SYS.EXE, and non-resident BUGCHECK code.
;-
	$STRUCT	BOO
	F CHECKSUM,L		; Checksum
	F PARAM_MAP,L		; Address of map for SYSPARAM
	F SIZE,W		; Size of fixed portion of BOOTCB
	F TYPE,B		; Type of control block
	F SUBTYP,B		; Sub-type
	F SYS_VBN,L		; SYS.EXE starting VBN
	F SYS_SIZE,L		; SYS.EXE size in blocks
				; from starting VBN to end of executable image
	F SYS_MAP,L		; Adr of map for SYS.EXE
	F DMP_VBN,L		; Starting VBN for dump file
	F DMP_SIZE,L		; Size in blocks of dump file
				; from starting VBN to end of file
	F DMP_MAP,L		; Adr of map for SYSDUMP.DMP
	F BUG_MAP,L		; Adr of map for non-resident BUGCHECK code
	L LENGTH		
	E

;+
;
; Offsets into the IO vector of the BOOT driver.
;
;-

	$STRUCT	BQO

	F	QIO		; QIO entry
	F	MAP		; Mapping entry
	F	SELECT		; Selection entry
	F	DRIVRNAME	; Offset to driver name
	F	VERSION,W	; Version number of VMB
	F	VERCHECK,W	; Check field
	F	RESELECT	; Reselection entry
	F	MOVE		; Move driver entry
	F	UNIT_INIT	; Unit initialization entry
	F	AUXDRNAME	; Offset to auxiliary driver name
	F	UMR_DIS		; UNIBUS Map Registers to disable
	F	UCODE		; Absolute address of booting microcode
	E


;+
;
; Structure of broadcast message descriptor block.
;
;-

	$STRUCT	BRD

	F FLINK,L		; Broadcast queue forward link.
	F BLINK,L		; Broadcast queue backward link.
	F SIZE,W		; Size of block.
	F TYPE,B		; Type of block.
	F ,B			; Spare byte.
	F PCB,L			; PCB of requestor.
	F PID,L			; PID of requestor.
	F REFC,W		; Terminals outputting message now.
	F SCRLENGTH,W		; SCREEN message length.
	F SCRDATA,L		; SCREEN data pointer.
	F CARCON,L		; Carriage control parameter.
	F TRMMSG,W		; Terminal broadcast mail message
	F TRMUNIT,W		; Terminal unit number
	F TRMNAME,T,1		; Terminal name
	F ,B,15			; Space for name
	F MSGLENGTH,W		; Length of message in bytes.
	F DATA,L		; Data area.
	L LENGTH		; Length of descriptor block.

	E

;+
;
; Boot device codes
;
;-

	$STRUCT	BTD

	K< ,$K_				; "$K_" added, 8/30/79, CHP
	MB,0				; Massbus device
					; Types 1-31. reserved for unibus
					; devices
	DM,1				; RK06/7
	DL,2				; RL02
	DQ,3				; RB02/RB80
	UDA,17				; UDA
					; End of unibus devices
	HSCCI,32			; HSC on CI
	CONSOLE,64			; Console block storage device
	>
	E


;+
; CONDITIONAL ASSEMBLY PARAMETER DEFINITIONS
;
;	A NONZERO PARAMETER VALUE INDICATES PRESENCE OF THE FEATURE.
;	A ZERO PARAMETER VALUE INDICATES ABSENCE OF THE FEATURE
;
;	ALL PARAMETERS MUST BE DEFINED
;-

	$STRUCT	CA

	C <CA,$_
		SIMULATOR,1		;INCLUDE SIMULATOR SUPPORT CODE
		MEASURE,2		;INCLUDE PERFORMANCE MEASUREMENT HOOKS
		MEASURE_IOT,4		;INCLUDE I/O TRANSACTION DATA COLLECTION
	>
 
	E


;+
; CAN - DEFINE DRIVER CANCEL ROUTINE REASON CODES
;
; THESE CODES ARE PASSED TO THE CANCEL ROUTINE OF A DRIVER SO THAT
; THE ROUTINE CAN DISTINGUISH BETWEEN CALLS FROM $DASSGN AND $CANCEL.
;
;-

	$STRUCT	CAN

	C	<
		CANCEL		;CANCEL INVOKED DUE TO $CANCEL SERVICE
		DASSGN		;CANCEL INVOKED DUE TO $DASSGN SERVICE
		>
	E

;+
; CDRP - CLASS DRIVER I/O REQUEST PACKET
;
; This structure contains within it, at negative offsets, a full IRP.
; For this reason all IRP fields must be at the same relative offsets
; as the corresponding fields in the IRP.
;
;-
 
	$STRUCT	CDRP
 
	-F	IOQFL,L			;I/O QUEUE FORWARD LINK
	-F	IOQBL,L			;I/O QUEUE BACKWARD LINK
	-F	IRP_SIZE,W		;SIZE OF IRP IN BYTES
	-F	IRP_TYPE,B		;STRUCTURE TYPE FOR IRP
	-F	RMOD,B			;ACCESS MODE OF REQUEST
;		V<
;		MODE,2			; MODE SUBFIELD
;		>
	-F	PID,L			;PROCESS ID OF REQUESTING PROCESS
	-F	AST,L			;ADDRESS OF AST ROUTINE
	-F	ASTPRM,L		;AST PARAMETER
	-F	WIND,L			;ADDRESS OF WINDOW BLOCK
	-F	UCB,L			;ADDRESS OF DEVICE UCB
	-F	FUNC,W			;I/O FUNCTION CODE AND MODIFIERS
;		V<			; I/O FUNCTION CODE FIELD DEFINITIONS
;		FCODE,6,,M		; FUNCTION CODE FIELD
;		FMOD,10			; FUNCTION MODIFIER FIELD
;	>
	-F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	-F	PRI,B			;BASE PRIORITY OF REQUESTING PROCESS
	-F	IOSB,L			;ADDRESS OF I/O STATUS DOUBLE LONGWORD
	-F	CHAN,W			;PROCESS I/O CHANNEL NUMBER
	-F	STS,W			;REQUEST STATUS
;		V <			; BIT DEFINITIONS
;		BUFIO,,,M 		; BUFFERED I/O FLAG   ;THESE BITS
;		FUNC,,,M		; 1=>READ FUNCTION    ;MUST BE ADJACENT
;		PAGIO,,,M		; PAGING I/O FLAG     ;AND IN ORDER
;		COMPLX,,,M		; COMPLEX BUFFERED I/O
;		VIRTUAL,,,M		; VIRTUAL I/O FUNCTION
;		CHAINED,,,M		; CHAINED BUFFERED I/O OPERATION
;		SWAPIO,,,M		; SWAP I/O OPERATION
;		DIAGBUF,,,M		; DIAGNOSTIC BUFFER ALLOCATED
;		PHYSIO,,,M		; PHYSICAL I/O
;		TERMIO,,,M		; TERMINAL I/O (FOR SELECTING PRIORITY INC)
;		MBXIO,,,M		; MAILBOX BUFFERED READ
;		EXTEND,,,M		; AN IRPE IS LINKED TO THIS IRP
;		FILACP,,,M		; FILE ACP I/O (BOTH DIOCNT AND BIOCNT)
;		MVIRP,,,M		; MOUNT VERIFICATION IRP
;		>			; END OF BIT DEFINITIONS
	-F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF FIRST PTE
	-F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	-F	BCNT,L			;BYTE COUNT OF TRANSFER
	S	BCNT,0,W		; OLD WORD DEFINITION FOR COMPATIBILITY
	-F	,W			; ROUND UP TO NEXT LONGWORD
	-F	IOST1			;FIRST I/O STATUS LONGWORD (FOR I/O POST)
	S	MEDIA,,L		;MEDIA ADDRESS
	-F	IOST2			;SECOND I/O STATUS LONGWORD
	S	TT_TERM,0,L		;ADDRESS OF READ TERMINATORS MASK
	S	CARCON,0,B		;CARRIAGE CONTROL
	-F	NT_PRVMSK,Q		; PRIVILEGE MASK FOR DECNET
	S	ABCNT,0,L		; ACCUMULATED BYTES TRANSFERED
	S	ABCNT,0,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	S	TT_PRMPT,0,W		; PROMPT SIZE
	S	OBCNT,4,L		; ORIGINAL TRANSFER BYTE COUNT
	S	OBCNT,4,W		;  OLD WORD DEFINITION FOR COMPATIBILITY
	-F	SEGVBN,L		;VIRTUAL BLOCK NUMBER OF CURRENT SEGMENT
	S	JNL_SEQNO,0,L		; SEQUENCE NUMBER IN JOURNAL
	-F	DIAGBUF,L		; DIAGNOSTIC BUFFER ADDRESS
	-F	SEQNUM,L		; SEQUENCE NUMBER
	-F	EXTEND,L		; ADDRESS OF IRPE
	-F	ARB,L			; ACCESS RIGHTS BLOCK ADDRESS


	L	CDRPBASE
	F	FQFL,L			; Fork Queue FLINK
	F	FQBL,L			; Fork Queue Blink
	F	CDRPSIZE,W		; Size field for positive section only
	F	CD_TYPE,B		; Type, always of interest
	F	FIPL,B			; Fork IPL
	F	FPC,L			; Fork PC
	F	FR3,L			; Fork R3
	F	FR4,L			; Fork R4
	F	SAVD_RTN,L		; Saved return address from level 1 JSB
	F	MSG_BUF,L		; Address of allocated MSCP buffer
	F	RSPID,L			; Allocated Request ID
	F	CDT,L			; Address of Connection Descriptor Table
	F	RWCPTR,L		; RWAITCNT pointer
	L	LENGTH
	M	1

; Block Transfer Extension

	P	1
	F	LBUFH_AD,L		; Local BUFfer Handle ADress
	M	2
	F	LBOFF,L			; Local Byte OFFset
	F	RBUFH_AD,L		; Remote BUFfer Handle ADress
	F	RBOFF,L			; Remote Byte OFFset
	F	XCT_LEN,L		; Transfer length in bytes
	L	BT_LEN


; Class Driver Extension

	P	2
	F	LBUFHNDL,T,12		; Local buffer handle
	F	UBARSRCE,L		; UNIBUS mapping resources allocated
	L	CD_LEN
	E

;+
;
; Connect to interrupt definitions for QIO parameters
;
;-

	$STRUCT	CIN

	M	1

	F INIDEV			; Offset to device init routine.
	F START				; Offset to start device routine.
	F ISR				; Offset to interrupt service routine.
	F CANCEL			; Offset to cancel I/O routine.

	P	1

	F SPTCOUNT			; Number of SPTs allocated.
	F STARTVPN			; Starting VPN allocated.
	S STARTBIT			; Starting bit in bitmap.

	P	1

	V <				; Flag bits.
		EFN,,,M			; Set event flag on interrupt.
		USECAL,,,M		; Use CALL interface.
		REPEAT,,,M		; Do repeated interrupt service.
		AST,,,M			; Queue AST on interrupt.
		INIDEV,,,M		; Device initialization to do.
		START,,,M		; Start I/O routine.
		ISR,,,M			; ISR to execute.
		CANCEL,,,M		; Cancel I/O routine.
		,8			; Spare bits.
		EFNUM,16,,M		; Event flag number.
	>

	E



;+
; CCB - CHANNEL CONTROL BLOCK
;
; THERE IS ONE CHANNEL CONTROL BLOCK FOR EACH SOFTWARE CHANNEL THAT A
; PROCESS MAY INITIATE I/O REQUESTS ON. THE NUMBER OF SUCH I/O CHANNELS
; IS DETERMINED BY THE FIXED NUMBER ASSIGNED TO A PROCESS PLUS ANY
; ADDITIONAL CHANNELS REQUIRED BY THE IMAGE CURRENTLY BEING EXECUTED
; BY THE PROCESS.
;
; **** WARNING ****
;	THE CHANNEL CONTROL BLOCK IS ASSUMED TO BE FOUR LONG WORDS
; THROUGHOUT THE EXEC.  ITS SIZE MAY BE CHANGED BUT ONLY BY POWERS OF 2.
;-
 
	$STRUCT	CCB

	F	UCB,L		;ADDRESS OF ASSIGNED DEVICE UCB
	F	WIND,L		;ADDRESS OF WINDOW BLOCK
	F	STS,B		;CHANNEL STATUS
	V	<			; CHANNEL STATUS FLAGS
		AMB,,,M			;  MAILBOX ASSOCIATED WITH CHANNEL
		>			;
	F	AMOD,B		;ACCESS MODE THAT ASSIGNED CHANNEL
	F	IOC,W		;NUMBER OF OUTSTANDING I/O REQUESTS ON CHANNEL
	F	DIRP,L		;DEACCESS I/O REQUEST PACKET ADDRESS
	L	LENGTH		;LENGTH OF CCB
	E

;+
; CDDB - Class Driver Data Block
;
; Auxiliary data block pointed at by the CRB$L_AUXSTRUC of an MSCP speaking
; intelligent disk or tape controller.  There is one CDDB per such intelligent
; controller.
;
;-

	$STRUCT	CDDB

	F	CDRPQFL,L	;Active CDRP Q FLINK
	F	CDRPQBL,L	;Active CDRP Q BLINK
	F	SIZE,W		;Size of CDDB in bytes
	F	TYPE,B		;Major structure type for Class Driver
	F	SUBTYPE,B	; CDDB structure subtype field
	F	SYSTEMID,B,6	;48 bit system ID.
	F	STATUS,W	;Status word
		V <		; Bit definitions
		SNGLSTRM,,,M	; Single stream mode after VC crash
		IMPEND,,,M	; IMmediate command PENDing
		INITING,,,M	; Currently initializing CONNECTION
		RECONNECT,,,M	; Currently re-CONNECTING to MSCP server
		RESYNCH,,,M	; re_CONNECT initiated by Class Driver
		>
	F	PDT,L		;Port Descriptor Table address
	F	CRB,L		;CRB address
	F	DDB,L		;DDB address
	F	CNTRLID,Q	;Controller ID returned by MSCP END PACKET
	S	CNTRLMDL,6,B	; Controller model # (byte 6 of controller id)
	S	CNTRLCLS,7,B	; Controller class (byte 7 of controller id)
	F	CNTRLFLGS,W	;Controller flags also returned by END PACKET
	F	CNTRLTMO,W	;Controller timeout also returned by END PACKET
	F	OLDRSPID,L	;RSPID of oldest outstanding MSCP command
	F	OLDCMDSTS,L	;Latest MSCP command status for this command
	F	RSTRTCDRP,L	;Addr of only active CDRP after VC re-establish
	F	RETRYCNT,B	;# retries remaining for CDRP after VC reset
	F	,B,1		;Reserved byte
	F	RSTRTCNT,W	;# CDRP's on following Q awaiting VC re-establish
	F	RSTRTQFL,L	;Queue wherein we accumulate, sort and select
	F	RSTRTQBL,L	; for re-submission following VC re-establish
	F	CONNQFL		;Queue header used for permanent CDRP
	F	CONNQBL		;Queue tail used for permanent CDRP
	F	SAVED_PC,L	;Saved PC on internal subroutine calls
	L	LENGTH		;Standard length of CDDB
	F	PERMCDRP,L	;Beginning of a permanent CDRP allocated
				;  contiguous to CDDB

	E

;+
; CDL - SCS CONNECTION DESCRIPTOR LIST
;
; THERE IS A SYSTEM WIDE LIST OF CONNECTION DESCRIPTORS POINTED
; TO BY THE CDL.
;-

	$STRUCT	CDL

	-F	MAXCONIDX,W		;MAXIMUM # OF CDT'S
	-F	,W			;RESERVED WORD
	-F	FREECDT,L		;ADDR OF 1ST FREE CDT
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;SCS STRUCTURE TYPE
	-F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR CDL
	-F	,L,1			;RESERVED LONGWORD
	F	BASE,L			;BASE OF THE TABLE
	C	LENGTH,16		;LENGTH OF NEG PORTION OF STRUCTURE

	E

;+
; CDT - SCS CONNECTION DESCRIPTOR TABLE
;
; THESE DESCRIPTORS ARE POINTED TO BY THE SYSTEM WIDE CONNECTION
; DESCRIPTOR LIST (CDL).  ONE CDT IS USED PER SCS VIRTUAL CIRCUIT
; OR LISTENING CONNECTION.
;-

	$STRUCT	CDT

	F	MSGINPUT,L		;ADDR OF MSG INPUT DISPATCHER
	S	LINK,,L			; OR LINK TO NEXT FREE CDT
	F	DGINPUT,L		;ADDR TO CALL ON DG RECEIVED
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR CDT
	F	ERRADDR,L		;ADDR TO CALL FOR ERROR NOTIFICATION
	F	PDT,L			;ADDR OF ASSOC PORT DESC TABLE
	F	RCONID,L		;REMOTE CONNECTION ID
	F	LCONID,L		;LOCAL CONNECTION ID
	F	PB,L			;ADDR OF ASSOC PATH BLOCK
	F	RSTATION,B,6		;REMOTE STATION ADDR
	F	REASON,W		;REJECT/DISCONNECT REASON
	F	STATE,W			;CONNECTION STATE
					;STATE VALUES:
	C	<CDT,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1:
		CLOSED			; CLOSED
		LISTEN			; LISTENING FOR CONNX REQUESTS
		OPEN			; OPEN
		DISC_ACK		; DISCONNECT ACKNOWLEDGED
		DISC_REC		; DISCONNECT REQ RECEIVED
		DISC_SENT		; DISCONNECT SENT
		DISC_MTCH		; DISCONNECT MATCH
		CON_SENT		; CONNECT REQ SENT
		CON_ACK			; CONNECT REQ SENT AND ACK'ED
		CON_REC			; CONNECT REQ RECEIVED
		ACCP_SENT		; ACCEPT REQ SENT
		REJ_SENT		; REJECT SENT
		VC_FAIL			; VIRTUAL CIRCUIT FAILED
		>			;
	F	BLKSTATE,W		;SCS SEND BLOCKED STATE
					;STATE VALUES:
	C	<CDT,$C_,1,1		; 1 ORIGIN, INCREMENTS OF 1:
		CON_PEND		; WAITING TO SEND CONNECT REQ
		ACCP_PEND		; WAITING TO SEND ACCEPT REQ
		REJ_PEND		; WAITING TO SEND REJECT REQ
		DISC_PEND		; WAITING TO SEND DISCONNECT REQ
		CR_PEND			; WAITING TO SEND CREDIT
		DCR_PEND		; WAITING TO SEND CREDIT IN
					;  PREPARATION FOR DISCONNECT
		>			;
	F	SCSMSG,L		;ADDR OF SCS RECEIVE BUFFER
	F	WAITQFL,L		;SEND SCS MSG WAIT QUEUE FLINK
	F	WAITQBL,L		;SEND SCS MSG WAIT QUEUE BLINK
	F	CRWAITQFL,L		;SEND CREDIT WAIT QUEUE FLINK
	F	CRWAITQBL,L		;SEND CREDIT WAIT QUEUE BLINK
	F	SEND,W			;CURRENT SEND CREDIT
	F	REC,W			;RECEIVE CREDIT (SEND CREDIT
					; HELD BY REMOTE
	F	MINREC,W		;MINIMUM RECEIVE CREDIT (MIN
					; SEND REQUIRED BY REMOTE)
	F	PENDREC,W		;RECEIVE CREDIT NOT YET EXTENDED
					; TO REMOTE
	F	INITLREC,W		;INITIAL RECEIVE CREDIT
	F	MINSEND,W		;MINIMUM SEND CREDIT
	F	DGREC,W			;# DATAGRAMS QUEUED FOR RECEIVE
	F	PRIORITY,B		;BLOCK TRANSFER PRIORIY
	F	,B			;RESERVED
	F	RPROCNAM,L		;ADDR OF REMOTE PROCESS NAME
	F	LPROCNAM,L		;ADDR OF LOCAL PROCESS NAME
	F	CONDAT,L		;ADDR OF CONNECT DATA
	F	AUXSTRUC,L		;ADDR OF AUXILARY DATA STRUCTURE
	F	BADRSP,L		;ADDR IN SYSAP TO CALL WITH BAD RESPONSE
	F	FPC,L			;SAVED FORK PROCESS PC
	F	FR5,L			;SAVED FORK PROCESS R5
	F	CDTLST,L		;LINK FOR CDT LIST FROM PB
	L	LENGTH			;LENGTH OF CDT

	E

;+
; COMMON EVENT BLOCK
;-
	$STRUCT	CEB

	F	CEBFL,L			;POINTER TO NEXT COMMON EVENT BLOCK
	V	<			;SHARED MEMORY FLAGS IN CEBFL
		VALID,,,M		;SHMEM MASTER CEB, SET IF VALID ENTRY
		LOCKED,,,M		;SHMEM MASTER CEB, SET IF ENTRY LOCKED
		REFCNTLCK,,,M		;SHMEM MASTER CEB, LOCKED FOR REFCNT CHG
		>			;END OF SHARED MEMORY FLAGS
	F	CEBBL,L			;POINTER TO PREVIOUS COMMON EVENT BLOCK
	F	SIZE,W			;SIZE OF COMMON EVENT BLOCK IN BYTES
	F	TYPE,B			;STRUCTURE TYPE CODE FOR CEB
	F	STS,B			;STATUS FLAGS FOR CEB
		V <			;FLAG DEFINITIONS
		NOQUOTA			;NO QUOTA UPDATE
		PERM			;PERMANENT CLUSTER
		>			;
	F	PID,L			;PID OF CREATOR
	F	EFC,L			;EVENT FLAGS (32 BIT VECTOR)
	F	WQFL,L			;HEAD OF WAIT QUEUE
	F	WQBL,L			;TAIL OF WAIT QUEUE
	F	WQCNT,W			;WAIT QUEUE COUNT(LENGTH)
					;SHMEM FIELDS IN THIS WORD
	S	LOCK,0,B		;SHMEM MASTER CEB, # OF PORT OWNING LOCK
	S	PROCCNT,1,B		;SHMEM MASTER CEB, MAX # OF PROCESSORS
	F	STATE,W			;CEF WAIT STATE NUMBER
					;SHMEM FIELDS IN THIS WORD
	S	CREATPORT,0,B		;SHMEM MASTER CEB, # OF CREATOR PORT
	S	DELETPORT,1,B		;SHMEM MASTER CEB, # OF DELETER PORT
	F	UIC,L			;USER IDENT OF CEB CREATOR
	S	GRP,2,W			;GROUP NUMBER OF OWNER
	F	PROT,W			;PROTECTION MASK
	F	REFC,W			;REFERENCE COUNT FOR CEB
	F	EFCNAM,T,16		;EVENT CLUSTER TEXT NAME
	L	LENGTH			;LENGTH OF NORMAL COMMON EVENT BLOCK

;
; THE FOLLOWING FIELDS ARE DEFINED FOR SHARED MEMORY COMMON EVENT BLOCKS.
; CEB$L_SHB, CEB$W_INDX, AND CEB$L_MASTER ARE CONTAINED IN THE SLAVE CEB WHILE
; CEB$L_VASLAVE1 IS THE OFFSET IN THE MASTER CEB TO THE FIRST SLAVE CEB.
;
	F	SHB,L			;SHMEM SLAVE CEB, SHMEM CTL BLK ADR
	S	VASLAVE1,0,L		;SHMEM MASTER CEB, PTR TO 1ST SLAVE CEB
	F	INDX,W			;SHMEM SLAVE CEB, INDEX TO MASTER CEB
	F	,W			;SHMEM SLAVE CEB,
					;SHMEM MASTER CEB, FIELDS IN NEXT N
					; LONGWORDS ARE PROCESSOR REFCNTS
					; (ONE WORD FOR EACH PROCESSOR)
					; (OFFSET IS COMPUTED AT RUN-TIME)
	F	MASTER,L		;SHMEM SLAVE CEB, VA OF MASTER CEB
	L	SLAVLNG			;LENGTH OF SHMEM SLAVE COMMON EVENT BLK

	E

;+
; CIBDT - CI BUFFER DESCRIPTOR TABLE
;
; THIS TABLE IS SHARABLE AMONG ALL CI PORTS ON A SYSTEM.  BUFFER
; DESCRIPTORS (BD'S) ARE ALLOCATED FOR CI BLOCK TRANSFERS.
;-

	$STRUCT	CIBDT

	-F	WAITFL,L		;BD WAIT QUEUE FWD LINK
	-F	WAITBL,L		;BD WAIT QUEUE BACK LINK
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;CI STRUCTURE TYPE
	-F	SUBTYP,B		;CI STRUCT SUBTYPE FOR CI BDT
	-F	FREEBD,L		;ADDR OF FIRST FREE BD
	-F	MAXIDX,L		;MAX INDEX INTO BUFFER DESCRIPTORS
	-F	,L,1			;RESERVED LONGWORD
	L	BDLIST			;START OF BUFFER DESCRIPTORS
	C	LENGTH,24		;LENGTH OF NEGATIVE PORTION OF STRUCT

	E

;+
; BD - CI BUFFER DESCRIPTOR FORMAT
;-

	$STRUCT	CIBD

	F	FLAGS,W			;FLAGS WORD
		V <			;DEFINE FLAG BITS AND FIELDS:
		BOFF,9			; BYTE OFFSET OF START OF BUFFER
		,3			; 3 SPARE BITS
		AC,,,M			; ACCESS MODE CHECK ENABLED IF SET
		ACMOD,2			; ACCESS MODE REQ'D IN PTE'S
		V,,,M			; VALID BIT
		>
	F	KEY,W			;SEQUENCE NUMBER
	F	BLEN,L			;LENGTH OF MAPPED BUFFER
	F	SVAPTE,L		;SVA OF PTE MAPPING START OF BUFFER
	F	CDRP,L			;ADDR OF ASSOCIATED CDRP
	S	LINK,,L			; OR ADDR OF NEXT FREE DESCRIPTOR
	L	LENGTH			;LENGTH OF A BUFFER DESCRIPTOR

	E

;+
; CIBHAN - CI BUFFER HANDLE FORMAT
;-

	$STRUCT	CIBHAN

	F	BOFF,L			;BYTE OFFSET IN LOCAL BUFFER
	F	BNAME,L			;NAME OF LOCAL BUFFER
	F	RCONID,L		;REMOTE CONNECTION ID
	L	LENGTH			;LENGTH OF CI BUFFER HANDLE

	E

;+
; CIFQDT - CI FREE MESSAGE/DATAGRAM QUEUE DESCRIPTOR TABLE
;
; THIS DATA STRUCTURE AND THE QUEUES IT HAS HEADERS FOR MAY BE 
; SHARED AMONG ALL CI'S ON THE SYSTEM.
;-

	$STRUCT	CIFQDT

	F	DGSIZ,W			;DATAGRAM SIZE (INCL PORT HEADER)
	F	MSGSIZ,W		;MESSAGE SIZE (INCL PORT HEADER)
	F	,L,1			;RESERVED LONGWORD
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;CI STRUCTURE TYPE
	F	SUBTYP,B		;CI STRUCT SUBTYPE FOR CI FQDT
	F	DGCNT,W			;SUM OF INITL DG CREDITS FOR ALL CONNX
	F	MSGCNT,W		;SUM OF INITL MSG CREDITS FOR ALL CONNX
	F	DGFL,L			;DG FREE QUEUE FWD LINK
	F	DGBL,L			;DG FREE QUEUE BACK LINK
	F	MSGFL,L			;MSG FREE QUEUE FWD LINK
	F	MSGBL,L			;MSG FREE QUEUE BACK LINK
	L	LENGTH			;LENGTH OF CI FQDT

	E

;+
; CRB - CHANNEL REQUEST BLOCK
;
; THERE IS ONE CHANNEL REQUEST BLOCK FOR EACH SET OF DEVICES WHOSE
; ACCESS TO A SET OF CONTROLLERS MUST BE SYNCHRONIZED. EACH CHANNEL
; CONTROL BLOCK ALLOWS UP TO FOUR CONTROLLERS TO WHICH THE INDIVIDUAL
; DEVICES CAN BE ATTACHED.
;-
 
	$STRUCT	CRB

	F	WQFL,L			;WAIT QUEUE FORWARD LINK
	F	WQBL,L			;WAIT QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF CRB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR CRB
	F	,B			;UNUSED
	F	REFC,W			;REFERENCE COUNT OF UCB'S
	F	MASK,B			;CHANNEL ALLOCATION MASK
		V <			; MASK BIT DEFINITIONS
		BSY,,,M			; CHANNEL IS BUSY (1=YES)
	>				; END OF BIT DEFINITIONS
	F	,B			;SPARE UNUSED BYTE
	F	AUXSTRUC,L		;Auxiliary structure addr (CDDB for class driver)
	F	TIMELINK,L		;Thread of CRB's for periodic wakeup
	F	DUETIME,L		;Due time for periodic wakeup
	F	TOUTROUT,L		;Address of periodic wakeup routine
	F	LINK,L			;ADDRESS OF SECONDARY CRB
	F	INTD,L,9		;INTERRUPT TRANSFER VECTOR
	L	LENGTH			;LENGTH OF STANDARD CRB
	F	INTD2,L,9		;SECOND INTERRUPT VECTOR
	E

 
;+
; CRB INTERRUPT TRANSFER VECTOR STRUCTURE DEFINITIONS
;-
 
	$STRUCT	VEC
 
	F	DISPATCH,Q		;REGISTER SAVE AND DISPATCH INSTRUCTIONS
	F	IDB,L			;ADDRESS OF ASSOCIATED IDB
	F	INITIAL,L		;CONTROLLER INITIALIZATION ENTRY ADDRESS
	F	MAPREG,W		;STARTING MAP REGISTER ALLOCATED
		V <			; MAP REGISTER FIELD BIT DEFINITIONS
		MAPREG,15		; MAP REGISTER NUMBER
		MAPLOCK,,,M		; MAP REGISTER ALLOCATION PERMANENT
		>			;
	F	NUMREG,B		;NUMBER OF MAP REGISTERS ALLOCATED
	F	DATAPATH,B		;BUFFERED DATAPATH ALLOCATED
		V <			; DATAPATH FIELD BIT DEFINITIONS
		DATAPATH,5		; DATAPATH NUMBER
		LWAE,,,M		; LONGWORD ACCESS ENABLED
		,1			; SPARE BIT
		PATHLOCK,,,M		; DATAPATH PERMANENT
		>			;
	F	ADP,L			;ADDRESS OF ADP
	F	UNITINIT,L		;ADDRESS OF UNIT INITIALIZE
	F	START,L			;ADDRESS OF UNIT START
	F	UNITDISC,L		;ADDRESS OF UNIT DISCONNECT
	L	LENGTH			;LENGTH OF STANDARD DISPATCHER
	E

;+
; CXB - COMPLEX CHAINED BUFFER
;
; THESE OFFSETS ARE USED IN THE HEADER OF DISJOINT SEGMENTS
; WHICH ARE TO BE PRESENTED TO THE USER AS A UNIT.
;
;-

	$STRUCT	CXB
	;
	;
	;  The DECnet Datalink Functional Spec specifies that CXB$C_DLL is at
	;  least 32, CXB$C_HEADER is at least 56, CXB$C_TRAILER is at least 4,
	;  and CXB$C_OVERHEAD is 60.
	;
	;
	F	FL,L			;FORWARD QUEUE LINK
	F	BL,L			;BACKWARD QUEUE LINK
	S	UQUO,0,W		;PREALLOCATED UCB QUOATED TAKEN FOR I/O
	S	JQUO,2,W		;USER JIB BYTCNT QUOTA TAKEN FOR I/O
	F	SIZE,W			;BLOCK SIZE
	F	TYPE,B			;BLOCK TYPE
	F	CODE,B			;BUFFER CODE
	S	ASTCNT,0,B		;OUTSTANDING I/O COUNT
	F	LENGTH,W		;LENGTH OF DATA
	F	OFFSET,W		; OFFSET TO START OF NSP MESSAGE
	F	LINK,L			;LINK WORD FOR CHAINED DATA MESSAGE
	S	CHANNEL,0,W		; STORE CHANNEL NUMBER FOR AST
	F	IRP,L,,S		;IRP ADDRESS FOR TRANSMITS 
	S	SSB,0,L			;ADDR OF SSB FOR DECREMENTING TIPC
	L	LENGTH			;LENGTH OF A STANDARD CXB
	F	DLL,T,32		;SCRATCH AREA FOR DATALINK LAYER
	S	ENDACTION,0,L		;ADDR OF I/O COMPLETION ACTION ROUTINE
	C	DLL,32			;SIZE OF CXB$T_DLL
	;
	;
	;   The DECnet Datalink Functional Spec specifies that the message
	;   presented to the datalink layer (i.e., the message not including
	;   the datalink protocol envelope) must be quadword aligned.  Hence,
	;   CXB$C_HEADER must be a multiple of 8.
	;
	;
	L	HEADER			;CXB SIZE UP TO THIS POINT
	C	TRAILER,4		;SPACE AFTER CXB DATA FOR CRC CODE
	F	,L			;THIS REPRESENTS THE SPACE TAKEN FOR
					;THE CRC TRAILER
	L	OVERHEAD		;CXB$C_HEADER + CXB$C_TRAILER
	E

;+
; DDB - DEVICE DATA BLOCK
;
; THERE IS ONE DEVICE DATA BLOCK FOR EACH CONTROLLER IN A SYSTEM.
;+
 
	$STRUCT	DDB
 
	F	LINK,L			;ADDRESS OF NEXT DDB IN LIST (0=LAST)
	F	UCB,L			;ADDRESS OF FIRST UCB FOR THIS DDB
	F	SIZE,W			;SIZE OF DDB IN BYTES
	F	TYPE,B			;TYPE OF DATA STRUCTURE FOR DDB
	F	,B			;SPARE UNUSED BYTE
	F	DDT,L			;ADDRESS OF THE DRIVER DISPATCH TABLE
	F	ACPD,L			;NAME OF DEFAULT ACP FOR DEVICE UNITS
	    S	ACPCLASS,3,B		;CLASS CODE OF DEFAULT ACP
		K<,,1,1			;ACP CLASS CODE FOR DISKS
		PACK			;LARGE DISK PACKS
		CART			;DISK CARTRIDGES
		SLOW			;SLOW (CHEAP) DISKS (E.G., FLOPPY)
		TAPE			;BLOCK STRUCTURED TAPE (E.G., TU58)
		>
	F	NAME,T,1		;GENERIC PATHNAME OF DEVICE
	F	,B,15			;SPACE FOR NAME
	F	DRVNAME,T,1		;DRIVERNAME
	F	,B,15			;SPACE FOR DRIVER NAME
	L	LENGTH			;LENGTH OF STANDARD DDB
	E

;+
; DDT - DRIVER DISPATCH TABLE
;
; EACH DEVICE DRIVER HAS A DRIVER DISPATCH TABLE.
;-
 
	$STRUCT	DDT
 
	F	START,L			;ADDRESS OF DRIVER START I/O ROUTINE
	F	UNSOLINT,L		;ADDRESS OF UNSOLICITED INTERRUPT ROUTINE
	F	FDT,L			;ADDRESS OF FUNCTION DECISION TABLE
	F	CANCEL,L		;ADDRESS OF CANCEL I/O ENTRY POINT
	F	REGDUMP,L		;ADDRESS OF DEVICE REGISTER DUMP ROUTINE
	F	DIAGBUF,W		;SIZE OF DIAGNOSTIC BUFFER IN BYTES
	F	ERRORBUF,W		;SIZE OF ERROR LOG BUFFER IN BYTES
	F	UNITINIT,L		;UNIT INITIALIZATION ENTRY POINT
	F	ALTSTART,L		;ALTERNATE START I/O ENTRY POINT
 	F	MNTVER,L		;ADDRESS OF MOUNT VERIFICATION ROUTINE
	F	FDTSIZE,W		;SIZE OF FDT IN BYTES
	L	LENGTH			;LENGTH OF DDT

	E

;+
; DPT - DRIVER PROLOGUE TABLE
;
; EACH DEVICE DRIVER HAS A DRIVER PROLOGUE TABLE.
;-
 
	$STRUCT	DPT
 
	F	FLINK,L			;FORWARD LINK TO NEXT DPT
	F	BLINK,L			;BACKWARD LINK TO PREVIOUS DPT
	F	SIZE,W			;SIZE OF DRIVER
	F	TYPE,B			;STRUCTURE TYPE
	F	REFC,B			;COUNT OF DDB'S THAT REFERENCE DRIVER
	F	ADPTYPE,B		;ADAPTER TYPE CODE
	F	FLAGS,B			;DRIVER LOADER FLAGS
	V <M				;
		SUBCNTRL		;DEVICE IS A SUB-CONTROLLER
		SVP			;DEVICE REQUIRES A SYSTEM PAGE
		NOUNLOAD		;DRIVER IS NOT TO BE UNLOADED
		SCS			;SCS CODE MUST BE LOADER WITH DRIVER
		>
	F	UCBSIZE,W		;SIZE OF UCB
	F	INITTAB,W		;OFFSET TO INIT TABLE
	F	REINITTAB,W		;OFFSET TO RE-INIT TABLE
	F	UNLOAD,W		;OFFSET TO UNLOAD ACTION ROUTINE
	F	MAXUNITS,W		;MAXIMUM UNITS THAT CAN BE CONNECTED
	F	VERSION,W		;DRIVER PROLOGUE VERSION NUMBER
	C	VERSION,3		;CURRENT VERSION NUMBER
	F	DEFUNITS,W		;DEFAULT NUMBER OF UNITS
	F	DELIVER,W		;OFFSET TO DRIVER UNIT DELIVERY ROUTINE
	F	VECTOR,W		;OFFSET TO VECTOR TABLE (IN TTDRIVER)
	F	NAME,T,12		;DRIVER NAME (COUNTED STRING)
	F	LINKTIME,Q		;LINK DATE AND TIME FROM IMAGE HEADER
	F	ECOLEVEL,L		;ECO LEVEL FROM IMAGE HEADER
	L	LENGTH			;LENGTH OF PROLOGUE TABLE
 
	E


;+
; DATA STRUCTURE TYPE DEFINITIONS
;
; EACH DATA STRUCTURE THAT IS ALLOCATED FROM THE DYNAMIC MEMORY
; POOL SHOULD HAVE A VALID TYPE IN ITS 11TH BYTE.
;-
 
	$STRUCT	DYN

	C <,,1,1			;BASE AND OFFSET OF 1

	ADP				;UNIBUS ADAPTER CONTROL BLOCK
	ACB  				;AST CONTROL BLOCK
	AQB  				;ACP QUEUE BLOCK
	CEB  				;COMMON EVENT BLOCK
	CRB  				;CHANNEL REQUEST BLOCK
	DDB  				;DEVICE DESCRIPTOR BLOCK
	FCB  				;FILE CONTROL BLOCK
	FRK  				;FORK BLOCK
	IDB  				;INTERRUPT DISPATCH BLOCK
	IRP  				;I/O REQUEST PACKET
	LOG  				;LOGICAL NAME BLOCK
	PCB  				;PROCESS CONTROL BLOCK
	PQB  				;PROCESS QUOTA BLOCK
	RVT  				;RELATIVE VOLUME TABLE
	TQE  				;TIMER QUEUE ENTRY
	UCB  				;UNIT CONTROL BLOCK
	VCB  				;VOLUME CONTROL BLOCK
	WCB				;WINDOW CONTROL BLOCK
	BUFIO				;BUFFERED I/O BLOCK
	TYPAHD				;TERMINAL TYPEAHEAD BUFFER
	GSD				;GLOBAL SECTION DESCRIPTOR BLOCK
	MVL				;MAGNETIC TAPE VOLUME LIST
	NET				;NETWORK MESSAGE BLOCK
	KFI				;KNOWN FILE ENTRY
	MTL				;MOUNTED VOLUME LIST ENTRY
	BRDCST				;BROADCAST MESSAGE BLOCK
	CXB				;COMPLEX CHAINED BUFFER
	NDB				; NETWORK NODE DESCRIPTOR BLOCK
	SSB				; LOGICAL LINK SUBCHANNEL STATUS BLOCK
	DPT				; DRIVER PROLOGUE TABLE
	JPB				; JOB PARAMETER BLOCK
	PBH				; PERFORMANCE BUFFER HEADER
	PDB				; PERFORMANCE DATA BLOCK
	PIB				; PERFORMANCE INFORMATION BLOCK
	PFL				; PAGE FILE CONTROL BLOCK
	UNUSED				; UNUSED
	PTR				; POINTER CONTROL BLOCK
	KFH				; KNOWN FILE IMAGE HEADER
	RVX				; RELATIVE VOLUME TABLE EXTENSION
	EXTGSD				;EXTENDED GLOBAL SECTION DESCRIPTOR
	SHMGSD				;SHARED MEMORY GLOBAL SECTION DESCRIPTOR
	SHB				;SHARED MEMORY CONTROL BLOCK
	MBX				;MAILBOX CONTROL BLOCK
	IRPE				;I/O REQUEST PACKET EXTENSION
	SLAVCEB				;SLAVE COMMON EVENT BLOCK
	SHMCEB				;SHARED MEMORY MASTER COMMON EVENT BLOCK
	JIB				;JOB INFORMATION BLOCK
	TWP				; Terminal driver write packet
	RBM				; Realtime SPT bit map
	VCA				; Disk volume cache block
	BCB				;JOURNALING BUFFER CONTROL BLOCK
	CDB				;X25 LES CHANNEL DATA BLOCK
	LPD				;X25 LES PROCESS DESCRIPTOR
	JMT				;JOURNAL MERGE TABLE
	LKB				;LOCK BLOCK
	RSB				;RESOURCE BLOCK
	LKID				;LOCK ID TABLE
	RSHT				;RESOURCE HASH TABLE
	CDRP				;CLASS DRIVER REQUEST PACKET
	RUL				;RECOVERY UNIT LIST
	ERP				; ERRORLOG PACKET
	CIDG				;DATAGRAM BUFFER FOR CI PORT
	CIMSG				;MESSAGE BUFFER FOR CI PORT
	>
;
; THE FOLLOWING CODES ARE SUBTYPABLE, THAT IS EACH CODE REFERS TO A GENERIC
; FUNCTION AND WITHIN THAT FUNCTION THERE MAY BE MANY DIFFERENT SUB-TYPES
; OF BLOCKS.  THIS SCHEME WAS ADOPTED TO PRESERVE TYPES.  THE SUB-TYPE IS
; IN THE 12TH BYTE.
;
	C SUBTYPE,96			; START OF SUBTYPABLES
	C SCS,96			; SYSTEM COMMUNICATION SERVICES
	C <,,1,1
		SCS_CDL			; CONNECT DISPATCH LIST
		SCS_CDT			; CONNECT DISPATCH TABLE
		SCS_DIR			; DIRECTORY BLOCK
		SCS_PB			; PATH BLOCK
		SCS_PDT			; PORT DESCRIPTOR TABLE
		SCS_RDT			; REQUEST DESCRIPTOR TABLE
		SCS_SB			; SYSTEM BLOCK
	>
	C CI,97				; CI PORT SPECIFIC
	C <,,1,1
		CI_BDT			; BUFFER DESCRIPTOR TABLE
		CI_FQDT			; FREE QUE DESCRIPTOR TABLE
	>
	C LOADCODE,98			; LOADABLE CODE
	C <,,1,1
		LC_MP			; MULITPROCESSOR CODE
		LC_SCS			; SCS CODE
	>
	C INIT,99			; STRUCTURES SET UP BY INIT
	C <,,1,1
		PCBVEC			; PROCESS CONTROL BLOCK VECTOR
		PHVEC			; PROCESS HEADER VECTOR
		SWPMAP			; SWAPPER MAP
		MPWMAP			; MODIFIED PAGE WRITER MAP
		PRCMAP			; PROCESS BITMAP
		BOOTCB			; BOOT CONTROL BLOCK
		CONF			; CONFIGURATION ARRAYS
	>
	C CLASSDRV,100			; CLASS DRIVER MAJOR STRUCTURE TYPE CODE
	C <,,1,1
		CD_CDDB			;  CLASS DRIVER DATA BLOCK
		CD_BBRPG		;  BAD BLOCK REPLACEMENT PAGE
	>
;
; SPECIAL DYNAMIC MEMORY TYPES.  THESE ARE HANDLED SPECIALLY BY
; EXE$DALONONPAGED.
;
	C SPECIAL,128			; START OF SPECIAL TYPES
	C <,,128,1			; BASE OF 128 AND OFFSET OF 1

	SHRBUFIO			; SHARED MEMORY BUFFERED I/O
	>
	E


;
; ERROR MESSAGE BUFFER HEADER
;
;		******	CAUTION  ******
;
;	ALL OF THE EMBxxDEF STRUCTURES ASSUME THAT THE HEADER IS
;	EXACTLY ONE LONGWORD IN LENGTH.  IF THIS FIELD CHANGES,
;	IF EFFECTS ALL OF THE OTHER STRUCTURES.
;	ALL MESSAGES HAVE TYPE, TIME, SYSTEM ID, AND ERROR SEQUENCE IN THE
;	SAME RELATIVE LOCATIONS.
;
 
	$STRUCT	EMB,HDDEF
 
	-F	SIZE,W			;SIZE OF ERROR MESSAGE IN BYTES
	-F	BUFIND,B		;ALLOCATION BUFFER INDICATOR (0 OR 1)
	-F	VALID,B			;ERROR MESSAGE VALID INDICATOR
	K	LENGTH,4		;LENGTH OF FIXED PART OF MESSAGE HEADER
	F	HD_SID			;SYSTEM ID
	F	HD_ENTRY,W		;ERROR MESSAGE ENTRY TYPE
	S	DEVTYP,,B		;DEVICE TYPE
	S	DEVCLS,,B		;DEVICE CLASS
	F	HD_TIME,Q		;TIME OF MESSAGE ENTRY
	F	HD_ERRSEQ,W		;ERROR SEQUENCE FOR MESSAGE
	L	HD_LENGTH		;LENGTH OF PART COMMON TO ALL MESSAGES
	E
 
;
; BUGCHECK ERROR MESSAGE BUFFER FORMAT (SYSTEM AND USER)
;
 
	$STRUCT	EMB,BCDEF		;BUG CHECK ENTRY FORMAT
 
	F	BC_SID			;SYSTEM ID
	F	BC_ENTRY,W		;ENTRY TYPE
	F	BC_TIME,Q		;TIME IN 64 BITS
	F	BC_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	BC_KSP,L		;KERNEL STACK POINTER
	F	BC_ESP,L		;EXECUTIVE STACK POINTER
	F	BC_SSP,L		;SUPERVISOR STACK POINTER
	F	BC_USP,L		;USER STACK POINTER
	F	BC_ISP,L		;INTERRUPT STACK POINTER
	F	BC_R0,L			;REGISTER R0
	F	BC_R1,L			;REGISTER R1
	F	BC_R2,L			;REGISTER R2
	F	BC_R3,L			;REGISTER R3
	F	BC_R4,L			;REGISTER R4
	F	BC_R5,L			;REGISTER R5
	F	BC_R6,L			;REGISTER R6
	F	BC_R7,L			;REGISTER R7
	F	BC_R8,L			;REGISTER R8
	F	BC_R9,L			;REGISTER R9
	F	BC_R10,L		;REGISTER R10
	F	BC_R11,L		;REGISTER R11
	F	BC_AP,L			;ARGUMENT POINTER
	F	BC_FP,L			;FRAME POINTER
	F	BC_SP,L			;CURRENT STACK POINTER
	F	BC_PC,L			;PROGRAM COUNTER
	F	BC_PSL,L		;PROCESSOR STATUS
	F	BC_CODE,L		;BUGCHECK CODE
	F	BC_PID,L		;CURRENT PROCESS ID
	F	BC_LNAME,T,16		;CURRENT PROCESS NAME
	L	BC_LENGTH		;SIZE OF FIXED PART OF BUGCHECK MESSAGE
	E				;
 
;
; CRASH-RESTART ERROR MESSAGE BUFFER FORMAT
;
 
	$STRUCT	EMB,CRDEF		;CRASH RESTART RECORD FORMAT
 
	F	CR_SID			;SYSTEM ID
	F	CR_ENTRY,W		;ENTRY TYPE
	F	CR_TIME,Q		;TIME IN 64 BITS
	F	CR_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	CR_KSP,L		;KERNEL STACK POINTER
	F	CR_ESP,L		;EXECUTIVE STACK POINTER
	F	CR_SSP,L		;SUPERVISOR STACK POINTER
	F	CR_USP,L		;USER STACK POINTER
	F	CR_ISP,L		;INTERRUPT STACK POINTER
	F	CR_R0,L			;REGISTER R0
	F	CR_R1,L			;REGISTER R1
	F	CR_R2,L			;REGISTER R2
	F	CR_R3,L			;REGISTER R3
	F	CR_R4,L			;REGISTER R4
	F	CR_R5,L			;REGISTER R5
	F	CR_R6,L			;REGISTER R6
	F	CR_R7,L			;REGISTER R7
	F	CR_R8,L			;REGISTER R8
	F	CR_R9,L			;REGISTER R9
	F	CR_R10,L		;REGISTER R10
	F	CR_R11,L		;REGISTER R11
	F	CR_AP,L			;ARGUMENT POINTER
	F	CR_FP,L			;FRAME POINTER
	F	CR_SP,L			;CURRENT STACK POINTER
	F	CR_PC,L			;PROGRAM COUNTER
	F	CR_PSL,L		;PROCESSOR STATUS
	F	CR_P0BR,L		;PROGRAM REGION BASE REGISTER
	F	CR_P0LR,L		;PROGRAM REGION LIMIT REGISTER
	F	CR_P1BR,L		;CONTROL REGION BASE REGISTER
	F	CR_P1LR,L		;CONTROL REGION LIMIT REGISTER
	F	CR_SBR,L		;SYSTEM BASE REGISTER
	F	CR_SLR,L		;SYSTEM LIMIT REGISTER
	F	CR_PCBB,L		;PROCESS CONTROL BLOCK BASE REGISTER
	F	CR_SCBB,L		;SYSTEM CONTROL BLOCK BASE REGISTER
	F	CR_ASTLVL,L		;AST DELIVERY LEVEL REGISTER
	F	CR_SISR,L		;SOFTWARE INTERRUPT SUMMARY REGISTER
	F	CR_ICCS,L		;INTERVAL TIMER CONTROL STATUS REGISTER
	F	CR_ICR,L		;INTERVAL COUNT REGISTER
	F	CR_TODR,L		;TIME OF DAY REGISTER
	F	CR_ACCS,L		;ACCELERATOR CONTROL REGISTER
	M	1			;MARK OFFSET=START
	F	CR_CPUREG,L		;START OF CPU-SPECIFIC IPR'S
	P	1			; 11/780-SPECIFIC IPR'S
	F	CR_SBIFS,L		; SBI FAULT STATUS
	F	CR_SBISC,L		; SBI COMPARATOR REGISTER
	F	CR_SBIMT,L		; SBI MAINT REGISTER
	F	CR_SBIER,L		; SBI ERROR REGISTER
	F	CR_SBITA,L		; SBI TIMEOUT ADDR REGISTER
	F	CR_SBIS,L,16		; SBI SILO
	M	2			;MARK OFFSET=END
	P	1			; 11/750-SPECIFIC IPR'S:
	F	CR_TBDR,L		; TB DISABLE REGISTER
	F	CR_CADR,L		; CACHE DISABLE REGISTER
	F	CR_MCESR,L		; MACHINE CHECK ERROR SUMMARY
	F	CR_CAER,L		; CACHE ERROR REGISTER
	F	CR_CMIERR,L		; CMI ERROR SUMMARY REGISTER
					; 16 UNUSED LONGWDS IN EMB
	P	2			;END OF CPU-SPECIFIC IPR'S
	F	CR_CODE,L		;BUGCHECK/CRASH CODE
	F	CR_PID,L		;CURRENT PROCESS ID
	F	CR_LNAME,T,16		;CURRENT PROCESS NAME
	L	CR_LENGTH		;SIZE OF FIXED PART OF BUGCHECK MESSAGE
	E
 
;
; DEVICE ERROR MESSAGE BUFFER FORMAT (ERROR AND TIMEOUT)
;
 
	$STRUCT	EMB,DVDEF		;DEVICE ERROR RECORD FORMAT
 
	F	DV_SID			;SYSTEM ID
	F	DV_ENTRY,W		;ENTRY TYPE (1=ERROR, 96=TIMEOUT)
	F	DV_TIME,Q		;TIME OF ERROR
	F	DV_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	DV_ERTCNT,B		;REMAINING NUMBER OF ERROR RETRIES
	F	DV_ERTMAX,B		;MAXIMUM NUMBER OF ERROR RETRIES
	F	DV_IOSB,Q		;FINAL I/O STATUS
	F	DV_STS,W		;FINAL DEVICE STATUS
	F	DV_CLASS,B		;DEVICE CLASS
	F	DV_TYPE,B		;DEVICE TYPE
	F	DV_RQPID,L		;REQUESTER PROCESS ID
	F	DV_BOFF,W		;BYTE OFFSET IN PAGE
	F	DV_BCNT,W		;TRANSFER BYTE COUNT
	F	DV_MEDIA,L		;STARTING MEDIA ADDRESS
	F	DV_UNIT,W		;PHYSICAL UNIT NUMBER
	F	DV_ERRCNT,W		;UNIT ERROR COUNT
	F	DV_OPCNT,L		;UNIT OPERATION COUNT
	F	DV_OWNUIC,L		;VOLUME OWNER UIC
	F	DV_CHAR,L		;DEVICE CHARACTERISTICS
	F	DV_SLAVE,B		;SLAVE CONTROLLER NUMBER
	F	,B,1			;SPARE UNUSED BYTES
	F	DV_FUNC,W		;I/O FUNCTION VALUE
	F	DV_NAME,T,16		;DEVICE NAME
	F	DV_REGSAV,L		;START OF REGISTER SAVE AREA
	E
 
;
; TIME STAMP MSG FORMAT
;
 
	$STRUCT	EMB,TSDEF		;TIME STAMP RECORD FORMAT
 
	F	TS_SID			;SYSTEM ID
	F	TS_ENTRY,W 		;ENTRY TYPE 
	F	TS_TIME,Q 		;TIME IN 64 BITS 
	F	TS_ERRSEQ,W		;ERROR SEQ # 
	L	TS_LENGTH		;LENGTH OF TIME STAMP MSG
	E
 
;
; SYSTEM SERVICE MESSAGE
;
;	NOTE:	SYSTEM SERVICE MESSAGE COVERS:
;
;		1) THE MESSAGES FROM THE SERVICE
;		2) OPERATOR MESSAGES
;		3) NETWORK MESSAGES
;
;	ONLY THE TYPE FIELD IS DIFERENT
;
 
	$STRUCT	EMB,SSDEF		;SYSTEM SERVICE RECORD FORMAT
 
	F	SS_SID			;SYSTEM ID
	F	SS_ENTRY,W		;ENTRY TYPE
	F	SS_TIME,Q		;TIME IN 64 BITS
	F	SS_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SS_MSGSZ,W		;MESSAGE TEXT SIZE IN BYTES
	L	SS_LENGTH		;LENGTH OF CONSTANT PART
	F	SS_MSGTXT,B		;FIRST BYTE OF MESSAGE TEXT
	E

;
; VOLUME MOUNT/DISMOUNT MESSAGE TYPE
;
 
	$STRUCT	EMB,VMDEF		;VOLUME MOUNT RECORD FORMAT
 
	F	VM_SID			;SYSTEM ID
	F	VM_ENTRY,W		;ENTRY TYPE = EMB$K_VM OR EMB$K_VD
	F	VM_TIME,Q		;TIME IN 64 BIT FORMAT
	F	VM_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	VM_OWNUIC,L		;OWNER UIC OF THE VOLUME
	F	VM_ERRCNT,L		;UNIT ERROR COUNT FROM UCB
	F	VM_OPRCNT,L		;UNIT OPERATION COUNT FROM UCB
	F	VM_UNIT,W		;DEVICE UNIT NUMBER
	F	VM_NAMLNG,B		;LENGTH OF DEVICE GENERIC NAME
	F	VM_NAMTXT,T,15		;DEVICE GENERIC NAME
	F	VM_VOLNUM,W		;VOLUME NUMBER WITHIN SET
	F	VM_NUMSET,W		;NUMBER OF VOLUMES WITHIN SET
	F	VM_LABEL,T,12		;VOLUME LABEL
	L	VM_LENGTH		;LENGTH OF BUFFER
	E
;
; SYSTEM STARTUP MESSAGE
;
	$STRUCT	EMB,SUDEF		;SYSTEM UP MESSAGE BUFFER
 
	F	SU_SID			;SYSTEM ID
	F	SU_ENTRY,W		;ENTRY TYPE (IE: BOOT OR POWER RECOVERY)
	F	SU_TIME,Q		;CONTENTS OF SYSTEM TIME QUADWORD
	F	SU_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SU_DAYTIM,L		;CONTENTS OF TIME OF DAY CLOCK
	L	SU_LENGTH		;LENGTH OF MESSAGE
	E


;
; MACHINE CHECK LOG BUFFER FORMAT
;

	$STRUCT	EMB,MCDEF
 
	F	MC_SID			;SYSTEM ID
	F	MC_ENTRY,W		;ENTRY TYPE
	F	MC_TIME,Q		;TIME IN 64 BITS
	F	MC_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	MC_SUMCOD,B		;SUMMARY CODE
	F	MC_TOPF,B		;TIME OUT PENDING FLAG
	F	MC_OPCODE,B		;OPCODE OF INSTRUCTION CAUSING CHECK
	F	MC_CACHEF,B		;CACHE DISABLE FLAG, 1=GROUP 0, 2=G 1
	F	MC_CES,L		;CPU ERROR STATUS
	F	MC_UPC,L		;MICRO-PC AT FAULT TIME
	F	MC_VA,L			;VIRTUAL ADDRESS AT FAULT TIME
	F	MC_D,L			;CPU D REGISTER AT FAULT TIME
	F	MC_TBER0,L		;TRANSLATION BUFFER STATUS REG 0
	F	MC_TBER1,L		;TRANSLATION BUFFER STATUS REG 1
	F	MC_TIMOAD,L		;PHYSICAL ADDRESS CAUSING SBI TIMEOUT
	F	MC_PARITY,L		;CACHE STATUS REGISTER
	F	MC_SBIERR,L		;SBI ERROR REGISTER
	F	MC_PC,L			;PC OF INSTRUCTION CAUSING CHECK
	F	MC_PSL,L		;PSL OF MACHINE AT FAULT TIME
	L	MC_LENGTH		;LENGTH OF MACHINE CHECK FRAME
	E

;
; SOFT ECC DETECTED ERRORS AND SBI ALERT BUFFER FORMAT
;

	$STRUCT	EMB,SEDEF		;
 
	F	SE_SID			;SYSTEM ID
	F	SE_ENTRY,W		;ENTRY TYPE
	F	SE_TIME,Q		;TIME IN 64 BITS
	F	SE_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SE_NUMCON,L		;NUMBER OF MEMORY CONTROLLERS
	L	SE_LENGTH		;LENGTH OF FIXED PART OF MSG
	F	SE_TR,L			;ADAPTOR TR NUMBER
	F	SE_A,L			;MEMORY REGISTER A
	F	SE_B,L			;MEMORY REGISTER B
	F	SE_C,L			;MEMORY REGISTER C
	F	SE_PC,L			;PC OF INSTRUCTION AT FAULT TIME
	F	SE_PSL,L		;PSL OF MACHINE AT FAULT TIME
	E

;
; SBI FAULT BUFFER FORMAT AND ASYNCHRONOUS WRITE ERROR FORMAT
;

	$STRUCT	EMB,SBDEF		;SBI FAULT RECORD FORMAT
 
	F	SB_SID			;SYSTEM ID
	F	SB_ENTRY,W		;ENTRY TYPE
	F	SB_TIME,Q		;TIME IN 64 BITS
	F	SB_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	SB_FAULT,L		;SBI FAULT/STATUS REGISTER
	F	SB_SILCMP,L		;SBI SILO COMPARATOR
	F	SB_MAINT,L		;SBI MAINTENANCE
	F	SB_ERROR,L		;SBI ERROR REG
	F	SB_TIMOUT,L		;SBI TIMEOUT REG
	F	SB_SILO,L,16		;SBI SILO REG
	F	SB_SBIRGS,L,16		;REGISTER A'S ON BUS (OR 0)
	F	SB_PC,L			;PC OF INSTRUCTION AT FAULT TIME
	F	SB_PSL,L		;PSL OF MACHINE AT FAULT TIME
	L	SB_LENGTH		;LENGTH OF SBI ERROR BUFFER
	E				;

;
; UNDEFINED ADAPTER INTERRUPT BUFFER FORMAT
;
	$STRUCT	EMB,UIDEF

	F	UI_SID			;SYSTEM ID
	F	UI_ENTRY,W		;ENTRY TYPE
	F	UI_TIME,Q		;TIME IN 64 BITS
	F	UI_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	UI_TR,L			;ADAPTER TR NUMBER
	F	UI_CSR,L		;ADAPTER CONGIGURATION STATUS REGISTER
	L	UI_LENGTH		;LENGTH OF MESSAGE
	E				;


;
; ERROR BUFFER FORMAT FOR UNIBUS ERROR SUMMARY REGISTER
;	***** USED ONLY BY 11/730 ****
;
	$STRUCT	EMB,UEDEF

	F	UE_SID			;SYSTEM ID
	F	UE_ENTRY,W		;ENTRY TYPE
	F	UE_TIME,Q		;TIME IN 64 BITS
	F	UE_ERRSEQ,W		;ERROR SEQUENCE NUMBER
	F	UE_UBERR,L		;UNIBUS ERROR REGISTER
	L	UE_LENGTH		;LENGTH OF MESSAGE
	E


;
; ERROR BUFFER FORMAT FOR SAVING SOFTWARE PARAMETERS FOR CLASS DRIVER THAT
;	CORRESPOND TO A LOGGED MESSAGE (SEE EMBLMDEF BELOW) ORIGINATING
;	IN AN INTELLIGENT MASS STORAGE CONTROLLER.
;

	$STRUCT	EMB,SPDEF

	F	SP_SID			; System ID
	F	SP_ENTRY,W		; Entry type (of this errorlog buffer)
	F	SP_TIME,Q		; Time this entry created
	F	SP_ERRSEQ,W		; Error Sequence Number
	F	SP_CLASS,B		; Device Class
	F	SP_TYPE,B		; Device Type
	F	SP_BOFF,W		; Byte OFFset of data transfer
	F	SP_BCNT			; Byte Count of data transfer
	F	SP_MEDIA		; Media address (LBN) of data transfer
	F	SP_RQPID		; Requesting PID
	F	SP_IOSB,Q		; Final I/O status
	F	SP_FUNC,W		; I/O function code
	F	SP_UNIT,W		; Unit number of drive
	F	SP_OPCNT		; Cummulative operation count this unit
	F	SP_ERRCNT,W		; Cummulative error count for this unit
	F	SP_UCBSTS,W		; Copy of UCB$W_STS field
	F	SP_OWNUIC		; Unit's owner's UIC
	F	SP_CHAR			; Device Characteristics
	F	SP_CMDREF		; Command Reference number (RSPID)
	F	SP_DEVNAM,T,16		; Device name
	L	SP_LENGTH

	E

;
; LOGGED MESSAGE (DEVICE DEPENDENT CONTENTS).  DRIVER LOGS MESSAGE
;	WHICH MAY COME DIRECT FROM INTELLIGENT MASS STORAGE CONTROLLER.
;

	$STRUCT	EMB,LMDEF

	F	LM_SID			; System ID
	F	LM_ENTRY,W		; Entry type (i.e. Logged Message)
	F	LM_TIME,Q		; Time this entry created
	F	LM_ERRSEQ,W		; Error sequence number
	F	LM_CLASS,B		; Device Class
	F	LM_TYPE,B		; Device Type
	F	LM_UNIT,W		; Device unit number
	F	LM_DEVNAM,T,16		; Device name
	F	LM_MSGTYP,W		; Type of logged message
	L	LM_LENGTH

	E

;
; LOGGED MESSAGE MESSAGE TYPES
;

	$STRUCT	EMB,LTDEF

	C	DM,01			; Disk MSCP message
	K	DM,01			; Disk MSCP message
	C	TM,02			; Tape MSCP message
	K	TM,02			; Tape MSCP message
	C	PM,03			; Port (CI) message
	K	PM,03			; Port (CI) message
	C	UM,04			; Port (UDA) message
	K	UM,04			; Port (UDA) message
	C	AVATN,05		; Available Attention Message
	K	AVATN,05		; Available Attention Message
	C	DUPUN,06		; Duplicate Unit # Attention Message
	K	DUPUN,06		; Duplicate Unit # Attention Message
	C	IVCMD,07		; Invalid Command Log message.
	K	IVCMD,07		; Invalid Command Log message.
	C	ACPTH,08		; Access Path Attention Message
	K	ACPTH,08		; Access Path Attention Message

	E
;
; ERROR MESSAGE ENTRY TYPE DEFINITIONS
;
	$STRUCT	EMB,ETDEF		;ENTRY TYPE DEFINITIONS
 
	C	DE,01			;DEVICE ERROR 
	K	DE,01			;DEVICE ERROR 
	C	MC,02			;MACHINE CHECK
	K	MC,02			;MACHINE CHECK
	C	BE,04			;BUS ERROR 
	K	BE,04			;BUS ERROR 
	C	SA,05			;SBI ALERT
	K	SA,05			;SBI ALERT
	C	SE,06			;SOFT ECC ERROR
	K	SE,06			;SOFT ECC ERROR
	C	AW,07			;ASYNCHRONOUS WRITE ERROR
	K	AW,07			;ASYNCHRONOUS WRITE ERROR
	C	HE,08			;HARD ECC ERROR
	K	HE,08			;HARD ECC ERROR
	C	UBA,09			; 11/780 Unibus Adapter error
	K	UBA,09			; 11/780 Unibus Adapter error
	C	SI,10			; 11/750 Fault through SBI vector
	K	SI,10			; 11/750 Fault through SBI vector
	C	UE,11			; 11/730 Unibus Error
	K	UE,11			; 11/730 Unibus Error
	C	MBA,12			; 11/780 Massbus Adapter Error
	K	MBA,12			; 11/780 Massbus Adapter Error
	C	CS,32			;COLD START (IE: SYSTEM BOOT)
	K	CS,32			;COLD START (IE: SYSTEM BOOT)
	K	NF,35			;NEW FILE CREATED
	C	NF,35			;NEW FILE CREATED
	C	WS,36			;WARM START (IE: SYSTEM POWER RECOVERY)
	K	WS,36			;WARM START (IE: SYSTEM POWER RECOVERY)
	C	CR,37			;CRASH RE-START 
	K	CR,37			;CRASH RE-START 
	C	TS,38			;TIME STAMP ENTRY 
	K	TS,38			;TIME STAMP ENTRY 
	C	SS,39			;SYSTEM SERVICE MESSAGE
	K	SS,39			;SYSTEM SERVICE MESSAGE
	C	SBC,40			;SYSTEM BUGCHECK
	K	SBC,40			;SYSTEM BUGCHECK
	C	OM,41			;OPERATOR MESSAGE
	K	OM,41			;OPERATOR MESSAGE
	C	NM,42			;NETWORK MESSAGE
	K	NM,42			;NETWORK MESSAGE
	C	VM,64			;VOLUME MOUNT 
	K	VM,64			;VOLUME MOUNT 
	C	VD,65			;VOLUME DISMOUNT 
	K	VD,65			;VOLUME DISMOUNT 
	C	DT,96			;DEVICE TIMEOUT 
	K	DT,96			;DEVICE TIMEOUT 
	C	UI,97			;UNDEFINED INTERRUPT 
	K	UI,97			;UNDEFINED INTERRUPT 
	C	DA,98			; Asynchronous Device Attention
	K	DA,98			; Asynchronous Device Attention
	C	SP,99			; Software Parameters
	K	SP,99			; Software Parameters
	C	LM,100			; Logged Message
	K	LM,100			; Logged Message
	C	UBC,112			;USER BUGCHECK
	K	UBC,112			;USER BUGCHECK

	E

;+
; EOF1 ANSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST LABEL IN FILE TRAILER LABEL SET.  IT IS EQUIVALENT TO
; HDR1 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO1		;EOF1 LABEL FORMAT

	F	EO1LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF1'
	F	,T,50		;SAME AS HDR1
	F	BLOCKCNT,T,6	;BLOCK COUNT
	E


;+
; EOF2 ANSI MAGNETIC TAPE LABEL
; THIS IS THE SECOND LABEL IN THE FILE TRAILER LABEL SET.  IT IS EQUIVALENT
; TO HDR2 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO2		;EOF2 LABEL FORMAT
	
	F	EO2LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF2'
	E


;+
; EOF3 ANSI MAGNETIC TAPE LABEL
; THIS IS THE THIRD LABEL IN THE FILE TRAILER LABEL SET.  IT IS EQUIVALENT
; TO HDR3 EXCEPT FOR THE FOLLOWING FIELDS.
;-
	$STRUCT	EO3		;EOF3 LABEL FORMAT
	
	F	EO3LID,L	;LABEL IDENTIFIER AND NUMBER 'EOF3'
	E

;
; ERROR LOG ALLOCATION BUFFER HEADER
;
 
	$STRUCT	ERL
 
	F	BUSY,B			;NUMBER OF BUSY MESSAGES IN BUFFER
	F	MSGCNT,B		;NUMBER OF COMPLETED MESSAGES IN BUFFER
	F	BUFIND,B		;BUFFER INDICATOR OF RESPECTIVE BUFFER
	F	FLAGS,B			;BUFFER CONTROL FLAGS
	F	NEXT,L			;ADDRESS OF NEXT AVAILABLE SPACE IN BUFFER
	F	END,L			;ADDRESS OF END OF BUFFER + 1
	L	LENGTH			;LENGTH OF ALLOCATION BUFFER HEADER
 
	V	<			;BUFFER FLAGS
		LOCK,,,M		;BUFFER ALLOCATION INTERLOCK
		TIMER,,,M		;TIMER ACTIVE
		>			;
 
	E
