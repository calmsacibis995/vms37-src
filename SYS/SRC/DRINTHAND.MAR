	.TITLE	DRINTHAND - DR32 INTERRUPT HANDLER

	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY:	EXECUTIVE
;
; ABSTRACT:
; 	THIS IS A DUMMY DR32 INTERRUPT HANDLER WHICH IS USED UNTIL
;	THE REAL DR32 DRIVER IS LOADED.
;
; ENVIRONMENT:	KERNEL MODE, NON-PAGED
;
; AUTHOR:  STEVE BECKHARDT,	CREATION DATE:  7-MAR-1979
;
; MODIFIED BY:
;
;--

	.SBTTL	DECLARATIONS
;
; INCLUDE FILES:
;

;
; MACROS:
;

	$IDBDEF				; IDB OFFSETS

;
; EQUATED SYMBOLS:
;

	;
	; DR32 DCR REGISTER DEFINITIONS
	;

	$DEFINI	DR
$DEF	DR_DCR		.BLKL	1	; DR32 CONTROL REGISTER
	_VIELD	DR_DCR,0,<-
		<ADPTYP,8>,-		; ADAPTER TYPE
		<ID2ERR,,M>,-		; ID2 ERROR
		<ID2TOS,2>,-		; ID2 TIME-OUT STATUS
		<,1>,-			; RESERVED
		<ID1ERR,,M>,-		; ID1 ERROR
		<ID1TOS,2>,-		; ID1 TIME-OUT STATUS
		<RDS,,M>,-		; READ DATA SUBSTITUTE
		<CRD,,M>,-		; CORRECTED READ DATA
		<DCRHLT,,M>,-		; DCR HALT
		<DCRABT,,M>,-		; DCR ABORT INTERRUPT
		<PKTINT,,M>,-		; PACKET INTERRUPT
		<INTENB,,M>,-		; INTERRUPT ENABLE
		<,1>,-			; RESERVED
		<PWR_UP,,M>,-		; ADAPTER POWER UP
		<PWR_DN,,M>,-		; ADAPTER POWER DOWN
		<EXTABT,,M>,-		; EXTERNAL ABORT
		<,1>,-			; RESERVED
		<IMPDEP,6>,-		; IMPLEMENTATION DEPENDENT BITS
	>

; DCR CONTROL FIELD A CODES (USED WHEN WRITING TO DCR)

DCR_K_CLRPWRUP=^X100
DCR_K_CLRPWRDN=^X200			; CLEAR POWER DOWN
DCR_K_CLREXTABT=^X300			; CLEAR EXTERNAL ABORT
DCR_K_CLRABTINT=^X400			; CLEAR ABORT INTERRUPT
DCR_K_CLRINTENB=^X500			; CLEAR INTERRUPT ENABLE
DCR_K_SETINTENB=^X600			; SET INTERRUPT ENABLE
DCR_K_CLRHLT=^X700			; CLEAR HALT

; DCR CONTROL FIELD B CODES (USED WHEN WRITING TO DCR)

DCR_K_CLRCRD=^X1000			; CLEAR CRD
DCR_K_SETEXTABT=^X2000			; SET EXTERNAL ABORT
DCR_K_CLRPKTINT=^X3000			; CLEAR PACKET INTERRUPT
DCR_K_RESET=^X4000			; RESET
DCR_K_SETOSQTST=^X5000			; SET OSEQ TEST
DCR_K_CLROSQTST=^X6000			; CLEAR OSEQ TEST
	$DEFEND	DR

;
; OWN STORAGE:
;

	.PSECT	$$$115_DRIVER

	.SBTTL	DR$INT - DR32 INTERRUPT HANDLER
;++
; FUNCTIONAL DESCRIPTION:
;
;	THIS MODULE IS A DUMMY DR32 INTERRUPT HANDLER WHICH IS USED
;	UNTIL THE REAL DR32 DRIVER IS LOADED.
;	THIS ROUTINE ALSO CONTAINS A DUMMY DR32 CONTROLLER INITIALIZATION
;	ENTRY POINT.
;
; CALLING SEQUENCE:
;
;	JSB FROM INTERRUPT VECTOR IN CRB
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	THE STACK ON ENTRY IS AS FOLLOWS:
;
;		0(SP)		ADDRESS OF IDB ADDRESS
;      4(SP) - 16(SP)		SAVED R2 - R5
;	       20(SP)		INTERRUPT PC
;	       24(SP)		INTERRUPT PSL
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	INTERRUPTS ARE DISABLED ON THE DR32
;
;--

DR$INT::
	MOVL	@(SP)+,R3			; GET ADDRESS OF IDB
	MOVL	IDB$L_CSR(R3),R4		; GET ADDRESS OF FIRST CSR
	MOVZWL	#DCR_K_CLRPWRUP,DR_DCR(R4)	; CLEAR POWER UP 
	MOVZWL	#DCR_K_CLRPWRDN,DR_DCR(R4)	; CLEAR POWER DOWN
	MOVQ	(SP)+,R2			; RESTORE REGISTERS
	MOVQ	(SP)+,R4
	REI


DR$INITIAL::					; CONTROLLER INITIALIZATION
	

	MOVZWL	#DCR_K_RESET,(R4)		; RESET DR (R4 POINTS TO FIRST CSR)
	RSB



	.END
