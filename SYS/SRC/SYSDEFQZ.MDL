;
;	Version	'V03-001'
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************

;++
;
; FACILITY:  VAX/VMS System Macro Libraries
;
; ABSTRACT:
;
;	This file contains the MDL soucre for all operating system control
;	blocks, from Q to Z.  That is, all control blocks from QAA to ZZZ.
;
; ENVIRONMENT:
;
;	n/a
;
;--
;
;
; AUTHOR:  The VMS Group	 CREATION DATE:  1-Aug-1976
;
; MODIFIED BY:
;
;	V03-001	KDM0078		Kathleen D. Morse	15-Mar-1982
;		Add RPB$V_FINDMEM flag, for 11/782 installations.
;
;	V02-028	HRJ0052		Herb Jacobs		1-Feb-1982  3:44
;		Add RSN$_MPWBUSY.
;
;	V02-027	MLJ41905	Martin L. Jack,	31-Jan-1982  23:55
;		Add TQE$V_ABSOLUTE.
;
;	V02-026	NPK2012		N. Kronenberg		24-Jan-1982
;		Add $SCSDEF, offsets to system communications msgs.
;
;	V02-025	STJ0167		Steven T. Jeffreys	06-Jan-1982
;		- Defined VCB$V_MOUNTVER bit to mark a volume eligible
;		  for mount verification.
;		- Slightly reorder the RSN codes.
;
;	V02-024 DJD0003		Darrell Duffy		29-December-1981
;		Remove UCB$W_IRPSIZE
;
;	V02-023	JSV0002		Joost Verhofstad	28-Dec-1981
;		Add VCB$L_JNL_WCBFL and VCB$L_JNL_WCBBL.
;
;	V02-022	WMC0037		Wayne Cardoza		17-Dec-1981
;		Add RSN$_MPLIST_EMPTY for modified page list empty.
;
;	V02-021	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add disable announce message flag to UAF record.
;
;	V02-020	HRJ0039		Herb Jacobs		13-Dec-1981
;		Add disable interactive account flag to UAF record.
;
;	V02-019	ACG0237		Andrew C. Goldstein,	11-Dec-1981  21:54
;		Add WCB$V_CATHEDRAL and VCB$V_NOCACHE
;
;	V02-018	RKS0018		RICK SPITZ		11-DEC-1981
;		ADD TAST TERMINAL AST CONTROL BLOCK DEFINITIONS
;		FOR OUT OF BAND HANDLING.
;
;	V02-017	ACG0229		Andrew C. Goldstein,	1-Dec-1981  11:17
;		Add I/O counters to WCB, retention times to VCB.
;		Add extended fields to RVT.
;
;	V02-016	SRB0042		Steve Beckhardt		30-Nov-1981
;		Added RSB$B_DEPTH field to RSB.
;
;	V02-015	PHL0026		Peter H. Lipman		30-Nov-1981
;		Add PERMCTX cell to $SHLDEF
;
;	V02-014	RLRUBMD		Robert L. Rappaport	13-Nov-1981
;		Add UBMD, UNIBUS Map register and data path allocation
;		descriptor, structure definition.
;
;	V02-013	HRJ0032		Herb Jacobs		02-Nov-1981
;		Add new swapfile resource to RSN definitions.
;
;	V02-012 DJD0002		Darrell Duffy		30-Oct-1981
;		Update remote terminal structures for new features.
;
;	V02-011	SRB0039		Steve Beckhardt		30-Oct-1981
;		Added new resource (RSN$_LOCKID) to $RSNDEF.
;
;	V02-010	PHL0020		Peter H. Lipman		27-Oct-1981
;		Add UCB$L_DEVDEPND2 cell to fixed portion of UCB.
;		UCB$L_TT_DEVDP1 is a synonym.
;
;	V02-009	RLRRCT		Robert L. Rappaport	27-Oct-1981
;		Added RCT (Replacement and Caching Table) definition.
;
;	V02-008	JLV0091		Jake VanNoy		27-Oct-1981
;		Removed $TTYDEF, moved it to [ttdrvr.src]ttydef.mar.
;
;	V02-007	LJK0052		Lawrence J. Kenah	27-Aug-1981
;		The system service vector area is now four pages long.
;		Change $SGNDEF to reflect that point.
;
;	V02-006	LJK0044		Lawrence J. Kenah	27-Aug-1981
;		Eliminate SGN$C_SFTMAX symbol from $SGNDEF.
;
;	V02-005 ROW0025		Ralph O. Weber		26-AUG-1981
;		Change UAF references to off-days to secondary-days.
;		    UAF$L_ODAYHOURS  becomes  UAF$L_SDAYHOURS
;		    UAF$B_ODAYFLAGS  becomes  UAF$B_SDAYFLAGS
;		These changes make the name conform to the way the 
;		primary-secondary days function will be documented.
;
;	V02-004	HRJ0026		Herb Jacobs		12-Aug-1981
;		Removed SFT structure from system, as swap files are
;		now just page files.
;
;	V02-003 ROW0014		Ralph O. Weber		10-AUG-1981
;		Add definition of UAF$L_BYTLM.  UAF$L_BYTLM provides upward 
;		compatibility to the longword-size Byte I/O Byte Count 
;		Limit.  However, to prevent User Authorization File Format 
;		incompatibilities between version 2.x and version 3.0, 
;		UAF$L_BYTLM does not overlay the current field, UAF$W_BYTLM.
;		(NB: the difference between the word, old style, and 
;		longword, new style, names).  All programs which operate on 
;		the User Authorization File (eg: AUTHORIZE and LOGINOUT) 
;		will be modified to first check UAF$L_BYTLM and if it is 
;		zero use UAF$W_BYTLM.  AUTHORIZE will be modified to 
;		guarantee that all UAF records it writes contain a valid 
;		UAF$L_BYTLM.
;
;	V02-002	TCM0001		Trudy C. Matthews	29-Jul-1981
;		Changed all "7ZZ"s to "730"s.
;
;**

;+
; RBM	- realtime bit map of SPTs available for real time processes
;-

	$STRUCT	RBM

	F	STARTVPN		; Starting VPN of bit map.
	F	FREECOUNT		; Number of free SPTs.
	F	SIZE,W			; Size of control block.
	F	TYPE,B			; Type of control block.
	F	,B			; Spare byte.
	L	LENGTH			; Length of block so far.
	F	BITMAP			; Start of bit map.

	E

;
; REMOTE DEVICE PROTOCOL DEFINITIONS
;
	$STRUCT	RDP

	F	OPCODE,W		;OPERATION CODE
	F	MOD,W			;OPERATION CODE MODIFIERS
	F	REFID,L			;REFERENCE ID
	F	UNIT,W			;DEVICE UNIT NUMBER
	S	SIZE,0,W		;SIZE OF MESSAGE (ACP/DRIVER USE ONLY)
	L	HEADERLEN		;HEADER LENGTH
	M	1			;MARK START OF PARAMETERS
	F	PARAM1,L		;PARAMETER 1
	F	PARAM2,L		;PARAMETER 2
	F	PARAM3,L		;PARAMETER 3
	F	PARAM4,L		;PARAMETER 4
	F	PARAM5,L		;PARAMETER 5
	F	PARAM6,L		;PARAMETER 6
;
; RESPONSE FROM REMOTE PACKET DEFINITIONS
;
	C	<,,-1,-1		;RESPONSE PACKET OPCODES
		 ATTN			; ATTENTION
		 END			; I/O REQUEST COMPLETE
		 LOG			; ERROR LOG
		>
	P	1			;POINT TO PARAMETER 1
	F	STATUS,Q		;END PACKET I/O STATUS
;
; TERMINAL SPECIFIC PARAMETER DEFINITIONS
;
;  READ/WRITE REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_BCNT,L		;BYTE COUNT
	F	TT_CARCON,L		;WRITE CARRIAGE CONTROL
	S	TT_TIMOUT,0,L		;READ TIMEOUT
	F	TT_WDATA,T		;WRITE DATA
	S	TT_TERM,0,T		;BYTE OF SIZE + TERMINATOR MASK
					;WORD OF SIZE + PROMPT STRING
; SET MODE/CHARACTERISTICS REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_CHAR,Q		;CHARACTERISTICS
	S	TT_ASTPRM,0,L		;AST PARAMETER
	F	TT_SPEED,L		;LINE SPEED
	F	TT_FILL,L		;FILL SPECIFIER
	F	TT_PARITY,L		;PARITY FLAGS
	F	TT_CHAR2, L		; Remaining longword of characters
;  READ REQUEST END PACKET
	P	1			;POINT TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_RDATA,T		;WORD OF SIZE + READ DATA
;  SENSE MODE/CHARACTERISTICS END PACKET
	P	1			;POINTER TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_SCHAR,Q		;SENSED CHARACTERISTICS
	F	TT_SCHAR2, L		; Additional longword of characters

; Broadcast message attention packet
	P	1
	F	TT_BRDTOTSIZE, W	; Total size of data
	F	TT_BRDMSG, W		; Message code
	F	TT_BRDUNIT, W		; Unit number
	F	TT_BRDNAME, T, 16	; Device name as counted string
	C	TT_BRDNAME, 16		; Size of name field
	F	TT_BRDTXTSIZE, W	; Count for message text
	F	TT_BRDTEXT, T, 0	; Message text start

; Out of band attention packet

	P	1
	F	TT_OUTBAND, B		; Out of band character

	P	1
; ATTENTION PACKET MODIFIERS
	C	<
		TT_UNSOL		;UNSOLICITED DATA
		TT_HANGUP		;MODEM HANGUP
		TT_CTRLC		;CONTROL/C
		TT_CTRLY		;CONTROL/Y
		TT_STARTRCV		; Start a receive to the net
		TT_BRDCST		; Broadcast message for mailbox
		TT_OUTBAND		; Out of band AST
		>

	E

;
;	Remote buffer as stored in dynamic memory
;
;	This structure must be identical to the above structure except
;	for the header, which is the header for a buffered io buffer.
;

	$STRUCT	RBF

;
;	Buffered io buffer header
;

	F	MSGDAT, L		; Address of message data
	F	USRBFR, L		; User buffer address
	F	SIZE, W			; Size of structure
	F	TYPE, B			; Type of structure, DYN$C_BUFIO
	F	SPARE, B		; Alignment
	F	DATSIZE, W		; Data size

;
;	End of header
;

	F	OPCODE,W		;OPERATION CODE
	F	MOD,W			;OPERATION CODE MODIFIERS
	F	REFID,L			;REFERENCE ID
	F	UNIT,W			;DEVICE UNIT NUMBER
;	S	SIZE,0,W		;SIZE OF MESSAGE (ACP/DRIVER USE ONLY)
	L	HEADERLEN		;HEADER LENGTH
	M	1			;MARK START OF PARAMETERS
	F	PARAM1,L		;PARAMETER 1
	F	PARAM2,L		;PARAMETER 2
	F	PARAM3,L		;PARAMETER 3
	F	PARAM4,L		;PARAMETER 4
	F	PARAM5,L		;PARAMETER 5
	F	PARAM6,L		;PARAMETER 6
;
; RESPONSE FROM REMOTE PACKET DEFINITIONS
;
	C	<,,-1,-1		;RESPONSE PACKET OPCODES
		 ATTN			; ATTENTION
		 END			; I/O REQUEST COMPLETE
		 LOG			; ERROR LOG
		>
	P	1			;POINT TO PARAMETER 1
	F	STATUS,Q		;END PACKET I/O STATUS
;
; TERMINAL SPECIFIC PARAMETER DEFINITIONS
;
;  READ/WRITE REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_BCNT,L		;BYTE COUNT
	F	TT_CARCON,L		;WRITE CARRIAGE CONTROL
	S	TT_TIMOUT,0,L		;READ TIMEOUT
	F	TT_WDATA,T		;WRITE DATA
	S	TT_TERM,0,T		;BYTE OF SIZE + TERMINATOR MASK
					;WORD OF SIZE + PROMPT STRING
; SET MODE/CHARACTERISTICS REQUEST
	P	1			;POINT TO PARAMETER 1
	F	TT_CHAR,Q		;CHARACTERISTICS
	S	TT_ASTPRM,0,L		;AST PARAMETER
	F	TT_SPEED,L		;LINE SPEED
	F	TT_FILL,L		;FILL SPECIFIER
	F	TT_PARITY,L		;PARITY FLAGS
	F	TT_CHAR2, L		; Another longword of characters
;  READ REQUEST END PACKET
	P	1			;POINT TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_RDATA,T		;WORD OF SIZE + READ DATA
;  SENSE MODE/CHARACTERISTICS END PACKET
	P	1			;POINTER TO PARAMETER 1
	F	,Q			;I/O STATUS
	F	TT_SCHAR,Q		;SENSED CHARACTERISTICS
	F	TT_SCHAR2, L		; Another longword of characters

; Broadcast message attention packet
	P	1
	F	TT_BRDTOTSIZE, W	; Total size of data
	F	TT_BRDMSG, W		; Message code
	F	TT_BRDUNIT, W		; Unit number
	F	TT_BRDNAME, T, 16	; Device name as counted string
	C	TT_BRDNAME, 16		; Size of name field
	F	TT_BRDTXTSIZE, W	; Count for message text
	F	TT_BRDTEXT, T, 0	; Message text start

; Out of band attention packet

	P	1
	F	TT_OUTBAND, B		; Out of band character

	P	1
; ATTENTION PACKET MODIFIERS
	C	<
		TT_UNSOL		;UNSOLICITED DATA
		TT_HANGUP		;MODEM HANGUP
		TT_CTRLC		;CONTROL/C
		TT_CTRLY		;CONTROL/Y
		TT_STARTRCV		; Start a receive to the net
		TT_BRDCST		; Broadcast message for mailbox
		TT_OUTBAND		; Out of band AST
		>

	E

;+
; RCT - Replacement and Caching Table sector #0 layout.
;	The RCT is a structure residing on disks controlled by MSCP
;	speaking disk controllers.  The RCT is maintained by the intelligent
;	controllers and the disk class driver.  The disk class driver mainly
;	gets involved in RCT manipulations during host initiated bad
;	block replacement.

	$STRUCT	RCT

	F	VOLSER,Q		; Volume serial number
	F	FLAGS,W			; Flags word
		V<M
		WB			; Write back caching in use
		,6
		FE			; Forced Error flag for block being replaced
		,5
		BR			; Replacement caused by Bad RBN
		RP1			; Replacement in Progress phase 1
		RP2			; Replacement in Progress phase 2
		>
	F	,W			; Reserved word
	F	LBN,L			; LBN curently being replaced.
	F	RBN,L			; RBN allocated to replace LBN
	F	BAD_RBN,L		; If BR flag, RBN of bad replacement block
	F	WB_CTRL,Q		; Serial # of last controller doing Write back
	F	WB_INCAR,L		; Write back incarnation # 
	F	INCARTIME,Q		; Date-time of last update of incarnation no.
;
; Structure of a Replacement Block Descriptor
;
	V	<M			; Layout of a Replacement Block Descriptor
		LBN,28			;  Space for LBN replaced by this RBN
		CODE,4			;  Describes how this descriptor being used
		>

	V	<M			; Meanings of the bits in CODE
		,28			;  LBN
		NONPRIME		;  Set implies allocated, but not prime RBN
		ALLOCATED		;  This RBN allocated
		UNUSABLE		;  This RBN unusable
		NULL			;  This marks a NULL entry
		>
	K	<			; Values of CODE
		EMPTY,0			;  Unallocated (empty) replacement block
		ALOCPRIME,2		;  Allocated replace blk - primary RBN
		ALOCNONP,3		;  Allocated replace blk - non-primary RBN
		UNUSABLE,4		;  Unusable replacement block
		ALTUNUSE,5		;  Alternate unusable replacement block
		NULL,8			;  Null entry - no corresponding RBN sector
		>			; For codes 0,4,8 LBN field is always zero
	E
;+
; RDT - SCS RESPONSE DESCRIPTOR TABLE
;
; ONE RESPONSE DESCRIPTOR (RD) IS ALLOCATED FOR EACH SCS MESSAGE
; SENT FOR WHICH THE SENDER EXPECTS A MATCHING RESPONSE.
;-

	$STRUCT	RDT

	-F	WAITFL,L		;RD WAIT QUEUE FWD LINK
	-F	WAITBL,L		;RD WAIT QUEUE BACK LINK
	-F	SIZE,W			;STRUCTURE SIZE IN BYTES
	-F	TYPE,B			;SCS STURCTURE TYPE
	-F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR RDT
	-F	FREERD,L		;ADDR OF 1ST FREE RD
	-F	MAXRDIDX,L		;MAXIMUM # OF DESCRIPTORS
	-F	,L,1			;RESERVED FOR FUTURE USE
	C	LENGTH,24		;LENGTH OF NEG PORTION OF STRUCTURE

	E

;+
; RD - SCS RESPONSE DESCRIPTOR FORMAT
;-

	$STRUCT	RD

	F	CDRP,L			;ADDR OF ASSOC CDRP OR
					; OR OTHER CONTEXT BLOCK
	S	LINK,,L			; OR LINK TO NEXT FREE RD
	F	STATE,W			;RD STATE FLAGS
		V <			;STATE DEFINITIONS:
		BUSY			; ALLOCATED IF SET
		PERM			; PERMANENTLY ALLOCATED RD IF SET
		>			;
	F	SEQNUM,W		;SEQUENCE NUMBER OF RD
	L	LENGTH			;LENGTH OF RD

	E

;+
; RESTART PARAMETER BLOCK DEFINITIONS
;-
	$STRUCT	RPB
	F	BASE,L			;PHYSICAL BASE ADDRESS OF 64K BLOCK
	F	RESTART,L		;POINTER TO RESTART ROUTINE (PHYSICAL)
	F	CHKSUM,L		;CHECKSUM OF BYTES 0-7F OF RESTART ROUTINE
	F	RSTRTFLG,L		;RESTART IN PROGRESS FLAG
	F	HALTPC,L		;PC AT RESTART/HALT
	F	HALTPSL,L		;PSL AT RESTART/HALT
	F	HALTCODE,L		;CODE DESCRIBING RESTART REASON
	F	BOOTR0,L		;SAVED BOOT PARAMETER R0
	S	R0DEVTYP,,B		; DEVICE TYPE SUBFIELD
	S	,,B			; RESERVED
	S	R0UBVEC,,W		; UNIBUS INT VECTOR SUBFIELD
	F	BOOTR1,L		;SAVED BOOT PARAMETER R1
	V	<			;FIELDS WITHIN BOOT R1
		NEXUS,4			;NEXUS OF SYSTEM DEVICE ADAPTER
		ABUS,2			;ABUS ADAPTER NUMBER OF SBIA
		>
	F	BOOTR2,L		;SAVED BOTT PARAMETER R2
	F	BOOTR3,L		;SAVED BOOT PARAMETER R3
	F	BOOTR4,L		;SAVED BOOT PARAMETER R4
	F	BOOTR5,L		;SAVED BOOT PARAMETER R5
	V	<			;DEFINE BOOT OPTION BITS
		CONV			; CONVERSATIONAL BOOTSTRAP
		DEBUG			; KEEP DEBUGGER CODE
		INIBPT			; INITIAL BREAKPOINT
		BBLOCK			; TRANSFER TO BOOTBLOCK
		DIAG			; BOOT DIAGNOSTIC FILE
		BOOBPT			; BOOTSTRAP BREAKPOINT
		HEADER			; USE START ADDRESS FROM IMAGE HEADER
		NOTEST			; FLAG TO INHIBIT MEMORY TESTING
		SOLICT			; SOLICIT BOOT FILE NAME
		HALT			; HALT BEFORE TRANSFER
		NOPFND			; INHIBIT PFN DELETION
		MPM,,,M			; MULTI-PROCESSOR BOOT, USE MA780 ONLY
		USEMPM,,,M		; USE MA780 AS IF IT WERE LOCAL MEMORY
		MEMTEST,,,M		; USE STRICTER TEST TO VALIDATE MEMORY
		FINDMEM,,,M		; FIND SUFFICIENT MEMORY TO BOOT (>512K)
		,13
		TOPSYS,4,,M		;SYSTEM DIRECTORY NUMBER
		>			;
	F	IOVEC,L			;ADDRESS OF BOOTSTRAP QIO VECTOR
	F	IOVECSZ,L		;SIZE OF BOOT QIO ROUTINE 
	F	FILLBN,L		;LOGICAL BLOCK NUMBER OF BOOT FILE
	F	FILSIZ,L		;SIZE OF BOOT FILE
	F	PFNMAP,Q		;DESCRIPTOR FOR PFN BITMAP
	F	PFNCNT,L		;COUNT OF PHYSICAL PAGES
	F	SVASPT,L		;SYSTEM VIRTUAL ADDRESS OF SPT
	F	CSRPHY,L		;UBA DEVICE CSR ADDRESS (PHYSICAL)
	F	CSRVIR,L		;UBA DEVICE CSR ADDRESS (VIRTUAL)
	F	ADPPHY,L		;ADAPTER CONFIGURATION REGISTER (PHYSICAL)
	F	ADPVIR,L		;ADAPTER CONFIGURATION REGISTER (VIRTUAL)
	F	UNIT,W			;UNIT NUMBER
	F	DEVTYP,B		;DEVICE TYPE CODE
	F	SLAVE,B			;SLAVE UNIT NUMBER
	F	FILE,T,40		;BOOT FILE NAME (ASCIC)
	F	CONFREG,B,16		;ARRAY OF ADAPTER TYPES
	F	HDRPGCNT,B		;COUNT OF HEADER PAGES
	F	BOOTNDT,B		;NEXUS DEVICE TYPE OF BOOT ADAPTER
	F	,W			;SPARE
	F	ISP,L			;PWR FAIL INTERRUPT STACK POINTER
	F	PCBB,L			;PROCESS CONTROL BLOCK BASE
	F	SBR,L			;SYSTEM BASE REGISTER
	F	SCBB,L			;SYSTEM CONTROL BLOCK BASE
	F	SISR,L			;SOFTWARE INTERRUPT SUMMARY REGISTER
	F	SLR,L			;SYSTEM LENGTH REGISTER
	F	MEMDSC,L,16		;MEMORY DESCRIPT. - PAGCNT, TR, BASE PFN
	V	<			;FIELDS WITHIN ONE MEMORY DESCRIPTOR
		PAGCNT,24		; COUNT OF PAGES FOR THIS MEMORY
		TR,8			; TR NUMBER FOR THIS MEMORY
		BASEPFN,32		; BASE PFN FOR THIS MEMORY
		>			;END OF MEMORY DESCRIPTOR FIELDS
	C	MEMDSCSIZ,8		;NUMBER OF BYTES IN ONE MEM DESCRIPTOR
	C	NMEMDSC,8		;NUMBER OF MEMORY DESCRIPTORS IN RPB
	F	BUGCHK,L		;BUGCHECK LOOP ADDRESSS FOR MP SECONDARY
	F	WAIT,B,4		;BUGCHECK LOOP CODE FOR MP SECONDARY

	L	LENGTH			;LENGTH OF RPB
	E

;+
; RSB - RESOURCE BLOCK
;
; RESOURCE BLOCKS REPRESENT RESOURCES FOR WHICH THERE ARE LOCKS OUTSTANDING.
; EACH RESOURCE BLOCK MAY HAVE ONE OR MORE LOCK BLOCKS (LKB) QUEUED TO IT.
;-

	$STRUCT	RSB

	F	HSHCHN,L		;HASH CHAIN
	F	HSHCHNBK,L		;HASH CHAIN BACK POINTER
	F	SIZE,W			;SIZE OF RSB
	F	TYPE,B			;STRUCTURE TYPE
	F	DEPTH,B			;DEPTH IN TREE
	F	PARENT,L		;ADDRESS OF PARENT RSB
	F	REFCNT,L		;SUB RSB REFERENCE COUNT
	F	BLKASTCNT,L		;BLOCKING AST COUNT
	F	GRQFL,L			;GRANTED QUEUE FORWARD LINK
	F	GRQBL,L			;GRANTED QUEUE BACKWARD LINK
	F	CVTQFL,L		;CONVERSION QUEUE FORWARD LINK
	F	CVTQBL,L		;CONVERSION QUEUE BACKWARD LINK	
	F	WTQFL,L			;WAIT QUEUE FORWARD LINK
	F	WTQBL,L			;WAIT QUEUE BACKWARD LINK
	F	VALBLK,Q		;VALUE BLOCK
	F	,Q			;MORE VALUE BLOCK
	F	GGMODE,B		;GROUP GRANT MODE
	F	CGMODE,B		;CONVERSION GRANT MODE
	F	PROT,W			;PROTECTION
	F	GROUP,W			;GROUP NUMBER
	F	RMOD,B			;ACCESS MODE OF RESOURCE
		V<
		MODE,2			; ACCESS MODE
		,5			; SPARE
		SYSNAM,,,M		; SYSTEM NAME
		>
	F	RSNLEN,B		;RESOURCE NAME LENGTH
	L	LENGTH			;LENGTH OF FIXED PART OF RSB
	F	RESNAM,T,0		;START OF RESOURCE NAME
	K	MAXLEN,31		;MAXIMUM LENGTH OF RESOURCE NAME
	E

;+
; RESOURCE NAME DEFINITIONS
;-
	$STRUCT	RSN

	C <RSN,$_,1,1		;0 ORIGIN IN INCREMENTS OF 1
	ASTWAIT 		;WAIT FOR AST EVENT, CHANNEL INTERLOCK
	MAILBOX			;MAILBOX SPACE
	NPDYNMEM  		;NON-PAGED DYNAMIC MEMORY
	PGFILE			;PAGING FILE SPACE
	PGDYNMEM		;PAGED DYNAMIC MEMORY
	BRKTHRU			;TERMINAL BROADCAST
	IACLOCK			;IMAGE ACTIVATION INTERLOCK
	JQUOTA			;JOB POOLED QUOTA
	LOCKID			;LOCKIDS
	SWPFILE			;SWAPPING FILE SPACE
	MPLEMPTY		;MODIFIED PAGE LIST EMPTY
	MPWBUSY			;MODIFIED PAGE WRITER BUSY
	MAX			;MAXIMUM RESOURCE NUMBER
	>
	E

;+
; RVT - RELATIVE VOLUME TABLE
;
; A RELATIVE VOLUME MAPPING TABLE IS REQUIRED FOR EVERY MULTIVOLUME
; STRUCTURE THAT IS MOUNTED IN A SYSTEM.
;-
 
	$STRUCT	RVT
 
	F	RVX			; ADDRESS OF RVT EXTENSION
	F	REFC,W			; REFERENCE COUNT
	F	,W			; SPARE WORD
	F	SIZE,W			; SIZE OF RVT IN BYTES
	F	TYPE,B			; STRUCTURE TYPE OF RVT
	F	NVOLS,B			; NUMBER OF VOLUMES IN SET
	F	STRUCNAME,T,12		; STRUCTURE (VOLUME SET) NAME
	L	LENGTH			; LENGTH OF STANDARD RVT
	F	UCBLST,L		; ADDRESSES OF THE RESPECTIVE UCB'S
	C	MINSIZE,18		; MINIMUM NUMBER OF ENTRIES TO ALLOCATE

	E

;+
;
; RVX - RVT EXTENSION. THIS BLOCK CONTAINS ADDITIONAL DATA THAT SHOULD BE IN
; THE RVT BUT WAS ADDED FOR RELEASE 1.5. IT SHOULD BE MERGED INTO THE RVT
; IN RELEASE 2.
;
;-

	$STRUCT	RVX

	F	,L,2			; SPARE LONGWORDS
	F	SIZE,W			; CONTROL BLOCK SIZE
	F	TYPE,B			; CONTROL BLOCK TYPE
	F	,B			; SPARE BYTE
	F	STRUCNAME,T,12		; STRUCTURE (VOLUME SET) NAME
					; IN ASCII, BLANK FILLED
	L	LENGTH			; LENGTH OF RVX

	E

;+
; SB - SCS SYSTEM BLOCK
;
; THE SB HAS INFORMATION ABOUT KNOWN SYSTEMS IN A CPU CLUSTER.
;-

	$STRUCT	SB

	F	FLINK,L			;FWD LINK TO NEXT SB
	F	BLINK,L			;BACK LINK TO PREVIOUS SB
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCT SUBTYPE FOR SB
	F	PBFL,L			;LINK TO NEXT PATH BLOCK
	F	PBBL,L			;LINK TO PREVIOUS PATH BLOCK
	F	PBCONNX,L		;ADDR OF NEXT PB TO USE FOR
					; A CONNECTION
	F	SYSTEMID,B,6		;SYSTEM ID
	F	,W			;RESERVED WORD
	F	MAXDG,W			;MAXIMUM DATAGRAM SIZE
	F	MAXMSG,W		;MAXIMUM MESSAGE SIZE
	F	SWTYPE,T,4		;SOFTWARE TYPE, 1-4 CHAR
	F	SWVERS,T,4		;SOFTWARE VERSION, 1-4 CHAR
	F	SWINCARN,Q		;SOFTWARE INCARNATION #
	F	,L,1			;RESERVED LONGWORD
	L	LENGTH			;LENGTH OF SB

	E

;+
; SCS MESSAGE DEFINITIONS
;
; THIS STRUCTURE DEFINES OFFSETS AND FIELDS WITHIN THE SCS PORTION OF
; A CLUSTER MESSAGE.  OFFSETS ARE FDEFINED RELATIVE TO THE START OF THE 
; MESSAGE.  THE FULL MESSAGE FORMAT CONSISTS OF A PORT DRIVER LAYER
; HEADER (SEE STRUCTURE PPD) FOLLOWED BY THE SCS HEADER LAYER FOLLOWED
; BY THE APPLICATION DATA OR SCS CONTROL MESSAGE DATA.  THE SCS MESSAGE 
; OFFSETS AS DEFINED BELOW HAVE THE LENGTH OF THE PPD LAYER ADDED IN
; BUT ARE DEFINED SEPARATELY FROM THE PPD LAYER TO FACILITATE BREAKING
; THE TWO LAYERS APART SOMETIME IN THE FUTURE.
;-

	$STRUCT	SCS

	F	PPD,B,16		;16 BYTES OF PPD HEADER
	F	LENGTH,W		;MESSAGE LENGTH (INCLUDES ALL
					; BYTES FROM SCS$W_LENGTH ON,
					; NOT INCLUDING SCS$W_LENGTH)
					; (FIELD SHARED BY PPD)
	C	<SCS,$C_		;DEFINE LENGTHS OF SCS CONTROL MSGS:
		CON_REQL,66		; CONNECT_REQ LENGTH
		CON_RSPL,18		; CONNECT_RSP LENGTH
		ACCP_REQL,66		; ACCEPT_REQ LENGTH
		ACCP_RSPL,18		; ACCEPT_RSP LENGTH
		REJ_REQL,18		; REJECT_REQ LENGTH
		REJ_RSPL,14		; REJECT_RSP LENGTH
		DISC_REQL,18		; DISCONNECT_REQ LENGTH
		DISC_RSPL,14		; DISCONNECT_RSP LENGTH
		CR_REQL,18		; CREDIT_REQ LENGTH
		CR_RSPL,14		; CREDIT_RSP LENGHT
		>			;
	F	,W			;WORD RESERVED FOR PPD LAYER
	F	MTYPE,W			;SCS MESSAGE TYPE
					;SCS MESSAGE TYPE CODES:
	C	<SCS,$C_,0,1		; 0 ORIGIN, INCREMENTS OF 1
		CON_REQ			; CONNECT_REQ
		CON_RSP			; CONNECT_RSP
		ACCP_REQ		; ACCEPT_REQ
		ACCP_RSP		; ACCEPT_RSP
		REJ_REQ			; REJECT_REQ
		REJ_RSP			; REJECT_RSP
		DISC_REQ		; DISCONNECT_REQ
		DISC_RSP		; DISCONNECT_RSP
		CR_REQ			; CREDIT_REQ
		CR_RSP			; CREDIT_RSP
		APPL_MSG		; APPLICATION MESSAGE
		APPL_DG			; APPLICATION DATAGRAM
		>
	F	CREDIT,W		;CREDIT BEING EXTENDED
	F	DST_CONID,L		;DESTINATION (RECVING) CONNX ID
	F	SRC_CONID,L		;SOURCE (SENDING) CONNX ID
	L	APPL_BASE		;BASE OF APPLICTION MESSAGE DATA
	F	MIN_CR,W		;MINIMUM SEND CREDIT
	F	STATUS,W		;STATUS/REASON
					;DEFINE STATUS/REASON CODES:
	C	<SCS,$C_ST,0,1		; 0 ORIGIN, INCREMENTS OF 1
		NOMAT			; NO MATCHING LISTENER PROCESS
		NORMAL			; SUCCESS STATUS;  USED FOR:
					;  MATCHING LISTENER PROCESS 
		NORS			; NO LISTENER RESOURCES (BUSY)
		DISC			; CDT UNILATERALLY DISCONNECTED
		>			;
	L	CON_BASE		;BASE OF CONNECT/ACCEPT INFO TO
					; GIVE TO SYSAP'S
					;FORMAT OF CONNECT/ACCEPT_REQ MSGS:
	F	DST_PROC,T,16		; DESTINATION PROCESS NAME
	F	SRC_PROC,T,16		; SOURCE PROCESS NAME
	F	CON_DAT,B,16		; CONNECT DATA

	E

;+
; SCSCMG - SCS CONNECTION MANAGEMENT MESSAGE FORMAT
;
; THIS PORTION OF A CONNECT/ACCEPT MESSAGE IS SEEN BY A
; SYSTEM APPLICATION.
;-

	$STRUCT	SCSCMG

	F	RECNAM,T,16		;RECEIVE PROCESS NAME
	F	SNDNAM,T,16		;SENDER PROCESS NAME
	F	SNDDAT,B,16		;SENDER CONNECT DATA

	E

;+
; SDIR - SCS DIRECTORY ENTRY
;
; THIS DATA STRUCTURE IS ALLOCATED FOR EACH LOCAL PROCESS THAT WANTS
; TO BE KNOWN TO SCS.
;-

	$STRUCT	SDIR

	F	FLINK,L			;FWD LINK
	F	BLINK,L			;BCK LINK
	F	SIZE,W			;STRUCTURE SIZE IN BYTES
	F	TYPE,B			;SCS STRUCTURE TYPE
	F	SUBTYP,B		;SCS STRUCTURE SUBTYPE FOR SDIR
	F	PROCNAM,B,16		;ASCII STRING FOR PROCESS NAME
	F	PROCINF,B,16		;ASCII STRING FOR PROCESS INFO
	F	CONID,L			;CONNECTION ID
	L	LENGTH

	E


;+
; SYSGEN PARAMETER DEFINITIONS
;-

	$STRUCT	SGN

	C <SGN,$C_			;
		BALSETCNT,24		; NUMBER OF PROCESSES IN BALANCE SET
		DFWSCNT,100		; DEFAULT WORKING SET COUNT
		DFWSQUOTA,120		; DEFAULT WORKING SET QUOTA
		GBLSECCNT,40		; GLOBAL SECTION COUNT
		MAXGPGCNT,2*1024	; GLOBAL PAGE COUNT (GPT SIZE)
		MAXPAGCNT,128*32*4	; PHYSICAL MEMORY SIZE IN PAGES
		MAXPGFL,4096		; DEFAULT MAXIMUM PAGING FILE
		MAXPSTCNT,5		; MAX NUMBER OF PST ENTRIES
		MAXVPGCNT,8*8*128	; MAX PROCESS VIRTUAL SIZE (PAGES)
		MAXWSCNT,1024		; MAX WORKING SET SIZE (PAGES)
		MINWSCNT,10		; MIN WORKING SET SIZE (PAGES)
		NPAGEDYN,52*512		; NON-PAGED DYNAMIC POOL SIZE
		NPROCS,64		; MAX NUMBER OF PROCESSES
		PAGEDYN,2*16*512	; PAGED DYNAMIC POOL SIZE IN BYTES
		PHYPAGCNT,32*128	; ACTUAL PHYSICAL PAGE COUNT
		SYSDWSCNT,40		; DEFAULT SYSTEM WORKING SET COUNT
		SYSVECPGS,4		; NO. OF PAGES OF SYSTEM SERVICE VECTORS
		SYSWSCNT,96		; SYSTEM WORKING SET COUNT
	>
	E

;+
; SHARED MEMORY CONTROL BLOCK DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;

	$STRUCT	SHB

	F	LINK,L			;LINK TO NEXT SHB
	F	DATAPAGE,L		;VIRTUAL ADDRESS OF DATAPAGE
	F	SIZE,W			;SIZE OF SHB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR SHB
	F	FLAGS,B			;FLAGS
		V<			; FLAG DEFINITIONS
		CONNECT,,,M		;  MEMORY IS CONNECTED, USEABLE
		>
	F	REFCNT,L		;COUNT OF REFERENCES TO MEMORY
	F	BASGSPFN,L		;BASE PFN FOR GLOBAL SECTION PAGES
	F	NEXUS,B			;NEXUS OF PORT
	F	PORT,B			;PORT NUMBER
	F	,W			; UNUSED
	F	POOLEND,L		;ADDRESS PAST LAST BYTE OF POOL
	F	ADP,L			;ADAPTER CONTROL BLOCK ADDRESS
	L	LENGTH			;LENGTH OF CONTROL BLOCK
	
	E

;+
; SHARED MEMORY DATAPAGE DEFINITIONS
;-
;
; The UETP for the MA780 depends on some of the following definitions.  Please
; let someone in that group know if the definitions change substantially.
;

	$STRUCT	SHD

	C	MAXPORTS,16		;MAXIMUM NUMBER PORTS HANDLED BY THIS
					;DATA STRUCTURE
;*** START OF CONSTANT FIELDS:
	F	MBXPTR,L		;RELATIVE POINTER TO MAILBOX TABLE
	F	GSDPTR,L		;RELATIVE POINTER TO GSD TABLE
	F	CEFPTR,L		;RELATIVE POINTER TO CEF TABLE
	F	GSBITMAP,L		;RELATIVE POINTER TO BITMAP
	F	GSPAGCNT,L		;CNT OF PAGES ALLOTTED FOR GBL SECTIONS
	F	GSPFN,L			;RELATIVE PFN OF 1ST GBL SECTION PAGE
	F	GSDMAX,W		;MAX GSD'S (SIZE OF TABLE)
	F	MBXMAX,W		;MAX MAILBOXES (SIZE OF TABLE)
	F	CEFMAX,W		;MAX CEF CLUSTERS (SIZE OF TABLE)
	F	,W			;UNUSED
	F	NAME,T,16		;NAME OF MEMORY (COUNTED STRING)
	C	NAMLENGTH,16		;MAXIMUM LENGTH OF NAME OF MEMORY
	F	INITTIME,Q		;INITIALIZATION TIME
;*** END OF CONSTANT FIELDS.
	F	CRC,L			;CRC OF CONSTANT FIELDS
	F	GSDQUOTA,W,16		;COUNT OF GSD'S CREATED (ONE/PORT)
	F	MBXQUOTA,W,16		;COUNT OF MAILBOXES CREATED (ONE/PORT)
	F	CEFQUOTA,W,16		;COUNT OF CLUSTERS CREATED (ONE/PORT)
	F	PORTS,B			;NUMBER OF PORTS
	F	INITLCK,B		;OWNER OF INIT LOCK
	F	BITMAPLCK,B		;OWNER OF GS BITMAP LOCK
	F	FLAGS,B			;FLAGS FOR LOCKING DATA STRUCTURES
	V	<			;START OF COMMON DATA PAGE FLAGS
		INITLCK,,,M		;COMMON DATA PAGE BEING INITIALIZED
		BITMAPLCK,,,M		;BITMAP BEING MODIFIED
		GSDLCK,,,M		;GLOBAL SECTION DSC TABLE BEING SEARCHED
		MBXLCK,,,M		;MAILBOX TABLE BEING SEARCHED
		CEFLCK,,,M		;COMMON EVENT FLAG TABLE BEING SEARCHED
		>			;END OF COMMON DATA PAGE FLAGS
	F	GSDLOCK,B		;OWNER OF GSD TABLE LOCK
	F	MBXLOCK,B		;OWNER OF MBX TABLE LOCK
	F	CEFLOCK,B		;OWNER OF CEF TABLE LOCK
	F	,B			;UNUSED
	F	PRQWAIT,W		;PORTS WAITING FOR INTER-PROCESSOR REQUEST BLOCKS
					; (ONE BIT/PORT)
	F	POLL,W			;PORTS ACTIVELY USING THE MEMORY
					; (ONE BIT/PORT)
	F	RESWAIT,W,16		;PORTS WAITING FOR A RESOURCE
					; (ONE BIT/PORT, ONE MASK/RESOURCE)
	F	RESAVAIL,W,16		;PORTS NEEDING TO REPORT RESOURCE AVAILABLE
					; (ONE BIT/PORT, ONE MASK/RESOURCE)
	F	RESSUM,W		;PORTS WITH RESOURCES TO REPORT
					; (ONE BIT/PORT)
	F	,W			;UNUSED
	F	,L			;UNUSED
;*** NOTE: THE FOLLOWING FIELDS MUST BE QUADWORD ALIGNED:
	F	PRQ,Q			;FREE INTER-PROCESSOR REQUEST BLOCK LISTHEAD
	F	POOL,Q			;FREE POOL BLOCK LISTHEAD
	F	PRQWRK,Q,16		;INTER-PROCESSOR REQUEST WORK QUEUE LISTHEADS
					; (ONE LISTHEAD/PORT)
	L	LENGTH			;LENGTH OF DATAPAGE
	E

;+
; SHL - SHAREABLE IMAGE LIST
;
; THIS LIST IS CREATED IN THE IMAGE FIXUP SECTION BY THE LINKER AND
; USED BY THE IMAGE ACTIVATOR FOR DOING SHAREABLE IMAGE FIXUPS.
;-
	$STRUCT	SHL

	F	BASEVA, L		; Base address of this shareable image
	F	SHLPTR, L		; Pointer from SHL in shareable image
					;  to associated SHL in executable image
	F	IDENT, L		; GSMATCH
	F	PERMCTX, L		; Permanent sharable image context
	F	,L			; Spare for extensions
	F	,L			; Spare for extensions
	C	<
		MAXNAMLNG,31		; Maximum length of image name
		>
	F	IMGNAM,T,32		; Shareable image name (ASCIC string)
	S	NAMLNG,0,B		; Synonym for name count
	L	LENGTH			; Length of shareable image list element
	E


;+
; SCHEDULING STATES
;-
 
	$STRUCT	STATE

	C <SCH,$C_,1,1		; DEFINITIONS START AT 1
	COLPG  			;COLLIDED PAGE WAIT
	MWAIT  			;MUTEX AND MISCELLANEOUS RESOURCE WAIT
	CEF  			;COMMON EVENT FLAG WAIT STATE
	PFW  			;PAGE FAULT WAIT
	LEF  			;LOCAL EVENT FLAG WAIT
	LEFO  			;LOCAL EVENT FLAG WAIT OUT OF BALANCE SET
	HIB  			;HIBERNATE WAIT
	HIBO  			;HIBERNATE WAIT OUT OF BALANCE SET
	SUSP  			;SUSPENDED
	SUSPO			;SUSPENDED OUT OF THE BALANCE SET
	FPG  			;FREEPAGE WAIT
	COM  			;COMPUTE, IN BALANCE SET STATE
	COMO  			;COMPUTE, OUT OF BALANCE SET STATE
	CUR  			;CURRENT PROCESS STATE
>
	E

;
; TERMINAL AST PACKET. THIS STRUCTURE IS USED BY TERMINAL SERVICES TO
; DELIVER OUT OF BAND CHARACTER ASTS.
;

	$STRUCT	TAST
	F	,L,7		;RESERVE ACB REGION
	F	FLINK,L		;FORWARD LINK
	F	AST,L		;SAVED AST ADDRESS
	F	ASTPRM,L	;SAVED AST PARAMETER
	F	PID,L		;SAVED PID
	F	RMOD,B		;SAVED RMOD
	F	CTRL,B		;CONTROL FIELD
		V<
		MASK_DSBL,,,M	;DISABLE MASK PROCESSING
		INCLUDE,,,M	;INCLUDE CHARACTER
		ONE_SHOT,,,M	;ONE SHOT AST
		BUSY,,,M	;BLOCK BUSY
		LOST,,,M	;AST LOST
		>
	F	CHAN,W		;CHANNEL
	F	MASK,L		;OUT OF BAND MASK
	L	LENGTH
	
	E

;+
; TQE - TIME QUEUE ENTRY
;
; TIME QUEUE ENTRIES ARE UTILIZED TO SET TIMERS, WAKE UP PROCESSES, AND
; FOR INTERNAL SYSTEM SUBROUTINES.
;-
 
	$STRUCT	TQE
 
	F	TQFL,L			;TIME QUEUE FORWARD LINK
	F	TQBL,L			;TIME QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF TQE IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR TQE
	F	RQTYPE,B		;TIME QUEUE ENTRY TYPE
		V <			; TQE$B_RQTYPE BIT DEFINITIONS
		,2			; STARTING OFFSET
		REPEAT,,,M		; REPEAT REQUEST (1=YES)
		ABSOLUTE,,,M		; Absolute expiration time specified
		>			; END OF BIT DEFINITIONS
	F	PID,L			;TIMER OR WAKE REQUEST PROCESS ID
	S	FPC,,L			;TIMER SUBROUTINE ADDRESS
	F	AST,L			;ADDRESS OF AST ROUTINE
	S	FR3,,L			;TIMER SUBROUTINE SAVED R3
	F	ASTPRM,L		;AST PARAMETER
	S	FR4,,L			;TIMER SUBROUTINE SAVED R4
	F	TIME,Q			;ABSOLUTE EXPIRATION TIME
	F	DELTA,Q			;DELTA REPEAT TIME
	F	RMOD,B			;ACCESS MODE OF REQUEST
	F	EFN,B			;EVENT FLAG NUMBER AND EVENT GROUP
	F	,W			;SPARE WORD
	F	RQPID,L			;REQUESTER PROCESS ID
	L	LENGTH			;LENGTH OF STANDARD TQE
 
;
; TIME QUEUE ENTRY REQUEST TYPE DEFINITIONS
;
 
	C	TMSNGL,0		;TIMER ENTRY SINGLE SHOT REQUEST
	C	SSREPT,1+TQE$M_REPEAT	;SYSTEM SUBROUTINE REPEAT REQUEST
	C	SSSNGL,1		;SYSTEM SUBROUTINE SINGLE SHOT REQUEST
	C	WKREPT,2+TQE$M_REPEAT	;WAKE ENTRY REPEAT REQUEST
	C	WKSNGL,2		;WAKE ENTRY SINGLE SHOT REQUEST
 
	E

;++
; USER AUTHORIZATION FILE FORMAT
;--

	$STRUCT UAF
	F	USERNAME,T,12		; USERNAME
	F	PWD,Q			; HASHED PASSWORD
	S	PWD,,L			; 32 BIT SUBFIELD
	F	ACCOUNT,T,8		; ACCOUNT NAME
	F	UIC,L			; USER ID CODE
	S	MEM,,W			; MEMBER SUBFIELD
	S	GRP,,W			; GROUP SUBFIELD
	F	DEFDIR,T,32		; DEFAULT DIRECTORY (counted string)
	F	DEFDEV,T,16		; DEFAULT DEVICE (counted string)
	F	DEFCLI,T,9		; DEFAULT COMMAND INTERPRETER
	F	ENCRYPT,B		; ENCRYPTION ALGORITHM
		C <			;  ENCRYPTION CODES
		AD_II			; AUTODIN-II 32 BIT CRC CODE
		Purdy			; Purdy POLYNOMIAL OVER SALTED INPUT
		>
	F	CPUTIM,L		; CPU TIME QUOTA
	F	PRIV,Q			; PROCESS PRIVILEGE VECTOR
	F	BIOLM,W			; BUFFERED I/O LIMIT
	F	BYTLM,W			; BUFFERED I/O BYTE COUNT LIMIT
	F	DIOLM,W			; DIRECT I/O LIMIT
	F	FILLM,W			; OPEN FILE LIMIT
	F	TQCNT,W			; TIMER QUEUE ENTRY LIMIT
	F	PRCCNT,W		; SUBPROCESS CREATION LIMIT
	F	WSQUOTA,W		; WORKING SET SIZE QUOTA
	F	DFWSCNT,W		; DEFAULT WORKING SET SIZE
	F	ASTLM,W			; AST QUEUE LIMIT
	F	ENQLM,W			; ENQUEUE LIMIT
	F	PGFLQUOTA,L		; PAGE FILE QUOTA
	F	OWNER,T,32		; OWNER'S NAME
	F	FILPRT,W		; DEFAULT FILE PROTECTION
	F	PRI,B			; BASE PROCESS PRIORITY
	F	FLAGS,B			; USER FLAGS BYTE
		V <			;  BIT DEFINITIONS
		DISCTLY			; DON'T ALLOW USER CONTROL-Y
		DEFCLI			; ONLY ALLOW USER DEFAULT CLI
		LOCKPWD			; DISABLE SET PASSWORD COMMAND
		CAPTIVE			; NO OVERIDES ALLOWED ON LOGIN-EG /DISK
		DISACNT			; DON'T ALLOW INTERACTIVE LOGIN
		DISWELCOM		; FLAG TO ALLOW LOGIN TO SKIP WELCOME
		DISMAIL			; FLAG TO ALLOW LOGIN TO SKIP NEW MAIL
		>
	F	LEVEL,L			; FOR RECORD AND FILE LEVEL INFO
	F	LGICMD,T,32		; LOGIN COMMAND FILE (counted string)
	F	MAIL,W			; LOWEST VERSION OF NEW MAIL.TXT
	F	PBYTLM,L		; PAGED BUFFER I/O BYTE COUNT LIMIT
	F	SHRFILLM,W		; SHARED FILE LIMIT
	F	USRDATOFF,W		; OFFSET OF COUNTED STRING OF USER DATA
	F	SALT,W			; RANDOM PASSWORD SALT
	F	WSEXTENT,W		; WORKING SET SIZE LIMIT
	F	PDAYHOURS,L		; FIELD DESCRIBING PRIMARY DAY ACCESS
					; HOURS, FROM 0:00 TO 23:00
	S	PDAYFLAGS,3,B		; FLAGS ASSOCIATED WITH PRIMARY DAYS
		V <			; BIT DEFINITIONS
		DISDIALUP		; SET DISALLOWS DIAL-IN USE OF ACCOUNT
		DISNETWORK		; SET DISALLOWS NETWORK USE OF ACCOUNT
		>
	F	SDAYHOURS,L		; FIELD DESCRIBING SECONDARY DAY ACCESS
					; HOURS, 0:00 TO 23:00
	S	SDAYFLAGS,3,B		; FLAGS ASSOCIATED WITH SECONDARY DAY 
					; USAGE: SEE PDAYFLAGS
	F	MAXPROC,B		; MAXIMUM PROCESSES FOR UIC ALLOWED
					; 0 MEANS NO LIMIT
	F	MAXGRPROC,B		; MAXIMUM PROCESSES FOR GROUP ALLOWED
					; 0 MEANS NO LIMIT
	F	PRIMEDAYS,B		; BITS REPRESENTING PRIMARY DAYS
		V <			; BIT DEFINITIONS
		MONDAY			; BIT CLEAR MEANS THIS IS A PRIMARY DAY
		TUESDAY			; BIT SET MEANS THIS IS AN OFF DAY
		WEDNESDAY
		THURSDAY
		FRIDAY
		SATURDAY
		SUNDAY
		>
	F	,B,1			; UNUSED, 0
	F	BYTLM,L			; BUFFERED I/O BYTE COUNT LIMIT 
					;			(longword)
	F	,B,8			; fixed length field expansion
	F	,W,6
	F	,Q,3
	F	,L,3
	L	FIXED			; LENGTH OF FIXED PORTION
	F	,B,768			; variable length field region
	L	LENGTH
	E

;+
; UNIBUS ADAPTER REGISTER OFFSET DEFINITIONS
;-
 
	$STRUCT	UBA
 
	F	CSR,L			;CONFIGURATION STATUS REGISTER
		V <			; CONFIGURATION STATUS REGISTER FIELD DEFINITIONS
		CSR_ADCOD,8		; ADAPTER CODE FIELD
		,8			; RESERVED BITS
		CSR_UBIC,,,M		; UNIBUS INITIALIZATION COMPLETE
		CSR_UBPDN,,,M		; UNIBUS POWER DOWN
		CSR_UBIIP,,,M		; UNIBUS INITIALIZATION IN PROGRESS
		,2			; RESERVED BITS
		CSR_OT,,,M		; OVER TEMPERATURE
		CSR_PU,,,M		; ADAPTER POWER UP
		CSR_PD,,,M		; ADAPTER POWER DOWN
		,2			; RESERVED BITS
		CSR_XMFLT,,,M		; TRANSMITTER FAULT
		CSR_MT,,,M		; MULTIPLE TRANSMITTERS
		CSR_IS,,,M		; INTERLOCK SEQUENCE FAULT
		CSR_URD,,,M		; UNEXPECTED READ DATA
		CSR_WS,,,M		; WRITE SEQUENCE DATA
		CSR_PE,,,M		; SBI PARITY ERROR
		>			;
	F	CR,L			;CONTROL REGISTER
		V <			; CONTROL REGISTER FIELD DEFINITIONS
		CR_INIT,,,M		; ADAPTER INITIALIZATION
		CR_UBPF,,,M		; UNIBUS POWER FAIL
		CR_CNFIE,,,M		; CONFIGURATION INTERRUPT ENABLE
		CR_SUEFIE,,,M		; SBI TO UNIBUS ERROR FIELD INTERRUPT ENABLE
		CR_USEFIE,,,M		; UNIBUS TO SBI ERROR FIELD INTERRUPT ENABLE
		CR_BRIE,,,M		; BUS REQUEST INTERRUPT ENABLE
		CR_IFSIE,,,M		; INTERRUPT FIELD SWITCH INTERRUPT ENABLE
		CR_ARLVL,2,,M		; ADAPTER REQUEST LEVEL
		,17			; RESERVED BITS
		CR_MRDSB,5		; MAP REGISTER DISABLE
		>			;
	F	SR,L			;STATUS REGISTER
		V <			; STATUS REGISTER FIELD DEFINITIONS
		SR_SSYNC,,,M		; UNIBUS SLAVE SYNC TIMEOUT
		SR_UBSTO,,,M		; UNIBUS SELECT TIMEOUT
		SR_LER,,,M		; LOST ERROR
		SR_MRPE,,,M		; MAP REGISTER PARITY ERROR
		SR_IVMR,,,M		; INVALID MAP REGISTER
		SR_DPPE,,,M		; DATAPATH PARITY ERROR
		SR_CXTMO,,,M		; COMMAND TRANSMISSION TIMEOUT
		SR_CXTER,,,M		; COMMAND TRANSMISSION ERROR
		SR_CRD,,,M		; CORRECTED READ DATA
		SR_RDS,,,M		; READ DATA SUBSTITUTE
		SR_RDTO,,,M		; READ DATA TIMEOUT
		SR_BRID,,,M		; BUS REQUEST INTERRUPT DONE
		,12			; RESERVED BITS
		SR_BRRVF,4		; BUS REQUEST RECEIVE VECTOR FULL
		SR_BRSVF,,,M		; BUS REQUEST SEND VECTOR FULL
		SR_RIE,,,M		; REQUEST INTERRUPT ENABLED
		SR_UBIFS,,,M		; UNIBUS INTERRUPT FIELD SWITCH
		>			;
	F	DCR,L			;DIAGNOSTIC CONTROL REGISTER
	F	FMER,L			;FAILED MAP ENTRY REGISTER
		V <			; FAILED MAP ENTRY REGISTER FIELD DEFINITIONS
		FMER_MRN,9		; FAILED MAP REGISTER NUMBER
		>			;
	F	FUBAR,L			;FAILED UNIBUS ADDRESS REGISTER
		V <			; FAILED UNIBUS ADDRESS REGISTER FIELD DEFINITIONS
		FUBAR_ADR,18		; FAILED SBI TO UNIBUS ADDRESS
		>			;
	F	,L,2			;RESERVED REGISTERS
	F	BRSVR,L,4		;BUS REQUEST SEND VECTOR REGISTERS
	F	BRRVR,L,4		;BUS REQUEST RECEIVE VECTOR REGISTER
		V <			; BUS REQUEST RECEIVE VECTOR REGISTER FIELD DEFINITIONS
		BRRVR_IVA,16		; INTERRUPT VECTOR ADDRESS
		,15			; RESERVED BITS
		BRRVR_AIR,,,M		; ADAPTER INTERRUPT REQUEST PENDING
		>			;
	F	DPR,L,16		;DATAPATH REGISTERS
		V <			; DATAPATH REGISTER FIELD DEFINITIONS
		DPR_ADDR,16		; BUFFERED UNIBUS ADDRESS
		DPR_STATE,8		; BUFFER STATE FLAGS
		,5			; RESERVED BITS
		DPR_DPF,,,M		; DATAPATH FUNCTION
		DPR_XMTER,,,M		; BUFFER TRANSFER ERROR
		DPR_BNE,,,M		; BUFFER NOT EMPTY
		>			;
	F	,B,1920			; VALUE IS 2048-128
	F	MAP,L,496		;MAP REGISTERS
		V <			; MAP REGISTER FIELD DEFINITIONS
		MAP_ADDR,21		; SBI PAGE ADDRESS
		MAP_DPD,4		; DATAPATH DESIGNATOR
		MAP_BO,,,M		; BYTE OFFSET
		,5			; RESERVED BITS
		MAP_VALID,,,M		; MAP REGISTER VALID
		>			;
	C	MAXDP,15		;MAXIMUM DATAPATH #
 
	E

;+
; UNIBUS INTERCONNECT (VAX 11/750 & 11/730) REGISTER OFFSETS AND FIELDS
;-

	$STRUCT	UBI

	M	1			;MARK START OF ADAP REGISTER SPACE
	F	DPR,L,4			;DATAPATH REGISTERS
					; (DPR 0 NOT IMPLEMENTED)
		V<			; DPR FIELD DEFINITIONS
		DPR_PUR,,,M		; DATAPATH PURGE
		,28			; RESERVED BITS
		DPR_UCE,,,M		; UNCORRECTABLE ERROR
		DPR_NXM,,,M		; NON-EXISTENT MEMORY
		DPR_ERROR,,,M		; ERROR (UCE!NXM)
		>			;
	M	2			;MARK START OF CPU-SPECIFIC REGISTERS
	P	2			;VAX 11/750 REGISTERS:
	F	DSR,L,4			;DIAGNOSTIC STATUS REGISTERS
					; (DSR 0 NOT IMPLEMENTED)
		V<			; DSR FIELD DEFINITIONS
		,27			; RESERVED BITS
		DSR_CD,,,M		; ALL 4 BYTES IN BDP FULL
		DSR_BF,4		; BYTE 0,1,2,3 IN BDP HAS VALID DATA
		>			;
	P	2			;VAX 11/730 REGISTERS:
	F	SR,L,1			;UB STATUS REGISTER:
		V<			; SR FIELD DEFINITIONS:
		,14			; RESERVED BITS
		SR_UWE,,,M		; UNCORRECTED WRITE ERROR
		SR_MRPE,,,M		; MAP REGISTER PARITY ERROR
		SR_NXM,,,M		; NONEXISTENT MEMORY REF
		,14			; RESERVED BITS
		SR_UCE,,,M		; UNCORRECTED READ ERROR
		>			;
					;END OF CPU_SPECIFIC REGISTERS
	P	1			;BACK UP TO START OF REGISTERS
	F	,B,2048			;RESERVE ^X800 BYTES
	F	MAP,L,496		;MAP REGISTERS, SAME FORMAT AS UBA
	C	MAXDP,3			;MAXIMUM DATAPATH #
	C	PURCNT,10		;MAX # OF TESTS OF PURGE DONE
	E

;+
; UBMD - UNIBUS Map Descriptor used to record UNIBUS map registers
;	and datapaths allocated.
;-

	$STRUCT	UBMD

	F	MAPREG,W		; Starting map register
	F	NUMREG,B		; Number of registers in extent
	F	DATAPATH,B		; Associated Buffered datapath

	E

;+
; UCB - UNIT CONTROL BLOCK
;
; THERE IS ONE UCB FOR EACH DEVICE UNIT IN A SYSTEM.
;-
 
	$STRUCT	UCB
 
	M	3			;MARK 0 POSITION
	F	FQFL,L			;FORK QUEUE FORWARD LINK
	S	RQFL,,L			;NET RCV QUEUE FORWARD LINK
	F	FQBL,L			;FORK QUEUE BACKWARD LINK
	S	RQBL,,L			;NET RCV QUEUE BACKWARD LINK
	F	SIZE,W			;SIZE OF UCB IN BYTES
	F	TYPE,B			;STRUCTURE TYPE FOR UCB
	F	FIPL,B			;FORK INTERRUPT PRIORITY LEVEL
	F	ASTQFL,L		;MAILBOX AST QUEUE LISTHEAD FORWARD LINK
	S	FPC,,L			;FORK PC
	S	PARTNER,0,T		; NETWORK - PARTNER'S NODENAME
	F	ASTQBL,L		;MAILBOX AST QUEUE LISTHEAD BACKWARD LINK
	S	FR3,,L			;FORK R3
	F	FR4,L			;FORK R4
	S	FIRST,0,L		; ADDR OF 1ST SEG OF CHAINED NET MSG
	S	MSGMAX,0,W		;MAILBOX MAXIMUM MESSAGES ALLOWED
	S	MSGCNT,2,W		;MAILBOX CURRENT NUMBER OF MESSAGES
	F	BUFQUO,W		;MAILBOX BUFFERED I/O QUOTA
	S	DSTADDR,,W		; NETWORK - REMOTE CONNECT NO.
	F	VPROT,W			;VOLUME PROTECTION
	S	SRCADDR,,W		; NETWORK - LOCAL CONNECT NO.
	F	OWNUIC,L		;VOLUME OWNER UIC
	F	CRB,L			;ADDRESS OF PRIMARY CHANNEL REQUEST BLOCK
	F	DDB,L			;BACKPOINTER TO DEVICE DATA BLOCK
	F	PID,L			;PROCESS ID OF OWNER PROCESS
	F	LINK,L			;ADDRESS OF NEXT UCB FOR RESPECTIVE DDB
	F	VCB,L			;ADDRESS OF VOLUME CONTROL BLOCK
	F	DEVCHAR,L		;DEVICE CHARACTERISTIC BITS
	F	DEVCLASS,B		;DEVICE CLASS
	F	DEVTYPE,B		;DEVICE TYPE
	F	DEVBUFSIZ,W		;DEVICE DEFAULT BUFFER SIZE
	F	DEVDEPEND,L		;DEVICE DEPENDENT DATA
	S	JNL_SEQNO,0,L		; RUNNING JOURNAL SEQUENCE NUMBER
	S	SECTORS,0,B		;DISK - SECTORS PER TRACK
	S	LOCSRV,0,B		; NETWORK - LOCAL LINK SERVICES
	S	REMSRV,1,B		; NETWORK - REMOTE LINK SERVICES
	S	TRACKS,1,B		;DISK - TRACKS PER CYLINDER
	S	CYLINDERS,2,W		;DISK - TOTAL CYLINDERS
	S	BYTESTOGO,2,W		; NETWORK - NO. OF BYTES LEFT IN RCV BFR
	S	VERTSZ,3,B		;VERTICAL PAGE SIZE
	F	IOQFL,L			;I/O QUEUE LISTHEAD FORWARD LINK
	F	IOQBL,L			;I/O QUEUE LISTHEAD BACKWARD LINK
	F	UNIT,W			;PHYSICAL DEVICE UNIT NUMBER
	F	CHARGE,W		;MAILBOX BYTE COUNT QUOTA CHARGE
	S	RWAITCNT,0,W		;CLASS DRIVERS: # THREADS WAITING RESOURCES
	S	CM1,0,B			;LEVEL 1 CONTROLLER ALLOCATION MASK
	S	CM2,1,B			;LEVEL 2 CONTROLLER ALLOCATION MASK
	F	IRP,L			;CURRENT I/O REQUEST PACKET ADDRESS
	F	REFC,W			;REFERENCE COUNT OF PROCESSES
	F	DIPL,B			;DEVICE INTERRUPT PRIORITY LEVEL
	S	STATE,,B		; LINK STATE FOR NETWORK TRANSITIONS
	F	AMOD,B			;ALLOCATION ACCESS MODE
	F	AMB,L			;ASSOCIATED UNIT CONTROL BLOCK POINTER
	F	STS,W			;DEVICE UNIT STATUS
		V<			; UCB$W_STS BIT DEFINITIONS
		TIM,,,M			; TIME OUT ENABLED (1=YES)
		INT,,,M			; INTERRUPT EXPECTED (1=YES)
		ERLOGIP,,,M		; ERROR LOG IN PROGRESS ON UNIT (1=YES)
		CANCEL,,,M		; CANCEL I/O ON UNIT (1=YES)
		ONLINE,,,M		; UNIT ONLINE (1=YES)
		POWER,,,M		; POWER FAILED WHILE UNIT BUSY (1=YES)
		TIMOUT,,,M		; UNIT TIMED OUT (1=YES)
		INTTYPE,,,M		; RECEIVER INTERRUPT IF SET
		BSY,,,M			; UNIT IS BUSY (1=YES)
		MOUNTING,,,M		; DEVICE IS BEING MOUNTED
		DEADMO,,,M		; DEALLOCATE AT DISMOUNT
		VALID,,,M		; VOLUME IS SOFTWARE VALID
		UNLOAD,,,M		; UNLOAD VOLUME AT DISMOUNT
		TEMPLATE,,,M		; SET IF THIS IS THE TEMPLATE 
					; FROM WHICH OTHER UCB'S FOR
					; THIS DEVICE TYPE ARE MADE
		MNTVERIP,,,M		; MOUNT VERIFICATION IN PROGRESS
		WRONGVOL,,,M		; WRONG VOLUME DETECTED DURING MOUNT VERIFICATION
		>			; END OF BIT DEFINITIONS
	F	DEVSTS,W		;DEVICE DEPENDENT STATUS
		V<			; UCB$W_DEVSTS BIT DEFINITIONS
		JOB,,,M			; JOB CONTROLLER NOTIFIED
		TT_TIMO,,,M		; TERMINAL READ TIMEOUT IN PROGRESS
		TT_NOTIF,,,M		; TERMINAL USER NOTIFIED OF UNSOLICTED DATA
		TT_HANGUP,,,M		; PROCESS HANG UP
		PERM_JNL,,,M		; PERMANENT JOURNAL DEVICE
		TEMPL_BSY		; TEMPLATE UCB IS BUSY
		>			; END OF BIT DEFINITIONS
	F	CPID,L			;MAILBOX CREATOR PROCESS ID
	S	DUETIM,,L		;DUE TIME FOR I/O COMPLETION
	F	OPCNT,L			;COUNT OF OPERATIONS COMPLETED
	F	LOGADR,L		;MAILBOX LOGICAL NAME BLOCK ADDRESS
	S	SVPN,,L			;SYSTEM VIRTUAL PAGE/MAP REGISTER NUMBER
	F	SVAPTE,L		;SYSTEM VIRTUAL ADDRESS OF PTE
	F	BOFF,W			;BYTE OFFSET IN FIRST PAGE
	F	BCNT,W			;BYTE COUNT OF TRANSFER
	F	ERTCNT,B		;ERROR LOG DEVICE CURRENT ERROR RETRY COUNT
	F	ERTMAX,B		;ERROR LOG DEVICE MAXIMUM ERROR RETRY COUNT
	F	ERRCNT,W		;DEVICE ERROR COUNT
	F	PDT,L			;ADDR OF PORT DESCRIPTOR TABLE
	F	DDT,L			;ADDR OF DDT (OPTIONAL BUT PREFERRED)
	F	,L			; Reserved longword
	F	DEVDEPND2,L		;SECOND DEVICE DEPENDENT LONG WORD
	S	TT_DEVDP1,,L		;TERMINAL DEVICE DEPENDENT LONG WORD
	L	LENGTH			;LENGTH OF STANDARD UCB
	M	1			;MARK END OF STANDARD UCB
 
;
; DEVICE DEPENDENT UCB EXTENSIONS
;
; MAILBOX
;
 
	P	3
		V<			; UCB$W_DEVSTS BITS FOR MAILBOXES AND NETWORKS
		PRMMBX,,,M		; PERMANENT MAILBOX
		DELMBX,,,M		; MAILBOX MARKED FOR DELETE
		NT_BFROVF,,,M		; TOO MANY BYTES RCVD
		SHMMBX,,,M		; SHARED MEMORY MAILBOX
		NT_NAME,,,M		; LINK HAS DECLARED A CONNECT NAME
		NT_BREAK,,,M		; LINK IS BEING BROKEN
		>
	F	MB_SEED,W		;UNIT NUMBER SEED
	P	1
	F	MB_WAST,L		;WRITE ATTENTION AST BLOCK ADDR
	F	MB_RAST,L		;READ ATTENTION AST BLOCK ADDR
	F	MB_MBX,L		;MAILBOX CONTROL BLOCK ADDR
	F	MB_SHB,L		;SHARED MEM. CONTROL BLOCK ADDR
	F	MB_WIOQFL,L		;WRITE I/O QUEUE FORWARD LINK
	F	MB_WIOQBL,L		;WRITE I/O QUEUE BACKWARD LINK
	F	MB_PORT,L		;SHARED MEM. PORT NUMBER
	L	MB_LENGTH		;SIZE OF MAILBOX UCB
 
;
; ERROR LOG DEVICES (ALL)
;
 
	P	1			;
	F	SLAVE,B			;SLAVE CONTROLLER NUMBER
	F	SPR,B			;SPARE UNUSED BYTE
	F	FEX,B			;FUNCTION DISPATCH TABLE INDEX
	F	CEX,B			;CASE TABLE FUNCTION EXECUTION INDEX
	F	EMB,L			;ADDRESS OF ERROR MESSAGE BUFFER
	F	,W			;SPARE UNUSED WORD
	F	FUNC,W			;I/O FUNCTION MODIFIERS
	F	DPC,L			;SAVED DRIVER SUBROUTINE RETURN ADDRESS
	M	4			;MARK END OF ERROR LOG DEVICE PROLOGUE
 
;
; DISK (ALL)
;
 
	P	4			;
		V<			;UCB$W_DEVSTS BITS FOR DISKS
		ECC,,,M			;ECC CORRECTION MADE
		DIAGBUF,,,M		;DIAGNOSTIC BUFFER SPECIFIED
		NOCNVRT,,,M		;NO LBN TO MEDIA ADDRESS CONVERSION
		DX_WRITE,,,M		;FLOPPY WRITE OPERATION
		>
	F	MAXBLOCK,L		;RANDOM ACCESS DEVICE HIGHEST BLOCK
	F	DIRSEQ,W		;DIRECTORY SEQUENCE NUMBER
	F	OFFSET,W		;CURRENT OFFSET REGISTER CONTENTS
	F	MEDIA,L			;MEDIA ADDRESS LONGWORD
	S	DA,,W			;SAVED DESIRED SECTOR/TRACK ADDRESS REGISTER
	S	DC,,W			;SAVED DESIRED CYLINDER ADDRESS REGISTER
	F	EC1,W			;ECC POSITION REGISTER
	F	EC2,W			;ECC PATTERN REGISTER
	F	OFFNDX,B		;CURRENT OFFSET TABLE INDEX
	F	OFFRTC,B		;CURRENT OFFSET RETRY COUNT
	F	BCR,W			;BYTE COUNT REGISTER
	M	2
 
;
; FLOPPY DEPENDENT BIT DEFINITIONS
;
 
	P	2
	F	DX_BUF,L		;ADDRESS OF SECTOR BUFFER
	F	DX_BFPNT,L		;CURRENT SECTOR BUFFER POINTER
	F	DX_RXDB,L		;SAVED RECEIVER DATA BUFFER
	F	DX_BCR,W		;CURRENT FLOPPY BYTE COUNT
	F	DX_SCTCNT,B		;CURRENT SECTOR BYTE COUNT
	F	,B			;SPARE UNUSED BYTE
 
;
; NETWORK LOGICAL LINK (NETWORK MAILBOX) EXTENSION
;
	P	1
	F	NT_DATSSB,L		; ADDRESS OF DATA SUBCHANNEL STATUS BLOCK
	F	NT_INTSSB,L		; ADDRESS OF INT/LS SSB
	F	NT_CHAN,W		; DDCMP CHANNEL NO.
	F	,W			; DUMMY FIELD
	V<				; NETWORK - LINK SERVICE DEFS
		LTYPE,2			; LINK TYPE BITS
		SEGFLO			; SEGMENT REQUEST COUNTS
		MSGFLO			; MESSAGE REQUEST COUNTS
		MSGACK			; MESSAGE ACK/NAK
		BACKP,,,M		; BACKPRESSURE (1=> NO FLOW)
		LNKPRI,2		; LINK PRIORITY (IGNORED)
	>
	C<				; NETWORK CONSTANTS
		LOGLNK,1		; CONNECT IS FOR LOGICAL LINK (NOT SINGLE MSG)
	>
;
; JOURNAL DEVICE EXTENSION
;
	P	1
	F	JNL_BCB,L		; ADDRESS OF BUFFER CONTROL BLOCK
	F	JNL_RUL,L		; ADDRESS OF RUL (RU JOURNALS ONLY)
	F	JNL_WQFL,L		; WAIT QUEUE FORWARD LINK
	F	JNL_WQBL,L		; WAIT QUEUE BACKWARD LINK
	F	JNL_FQFL,L		; FORCE QUEUE FORWARD LINK
	F	JNL_FQBL,L		; FORCE QUEUE BACKWARD LINK
	F	JNL_NAM,B,12		; JOURNAL NAME
	F	JNL_QUOT,L		; QUOTA FOR RU JOURNALS
	F	JNL_ID,W		; JOURNAL ID (TAPES ONLY)
	L	JNL_LEN			; JOURNAL UCB LENGTH
	E


;+
; VIRTUAL ADDRESS VIELDS
;-
	$STRUCT	VA

	V <
		BYTE,9,,M		;BYTE VIELD
		VPN,21,,M		;VIRTUAL PAGE NUMBER
		P1,,,M			;P1 SPACE
		SYSTEM,,,M		;SYSTEM SPACE
	>
	V <
		,9
		VPG,23,,M		;VIRTUAL PAGE INCLUDING P1 & S
	>
	E

;+
;
; VCA - Volume Cache Block. This block contains the specialized caches for
; a disk volume; to wit, the file ID cache, the extent cache, and the quota
; file cache. The file ID cache and extent cache are together in one block;
; the quota cache is located separately in another block. Both are pointed to
; by the VCB.
;
;-

	$STRUCT	VCA

	M 1			; block header
	F FIDCACHE		; pointer to file ID cache
	F EXTCACHE		; pointer to extent cache
	F SIZE,W		; block size
	F TYPE,B		; block type code
	F ,B			; unused
	L LENGTH		; length of block header
;
; The file ID cache consists of the cache header, followed by a longword
; vector of file numbers, densely packed.
;
	P 1
	F FIDSIZE,W		; number of entries allocated
	F FIDCOUNT,W		; number of entries present
	F FIDLIST		; first entry in list
;
; The extent cache consists of the cache header, followed by a quadword
; vector of extents, desely packed. Each quadword contains block count
; and starting LBN.
;
	P 1
	F EXTSIZE,W		; number of entries allocated
	F EXTCOUNT,W		; number of entries present
	F EXTTOTAL		; total number of blocks contained in cache
	F EXTLIMIT,W		; limit of volume to be cached, in percent/10
	F ,W			; spare
	F EXTLIST,Q		; first entry in list
	P 1			; list entry
	F EXTBLOCKS		; number of blocks
	F EXTLBN		; starting LBN
;
; The quota cache consists of the cache header, followed by the cache entries.
; Each cache entry is a block as defined below.
;
	P 1
	F QUOSIZE,W		; number of entries allocated
	F QUOLRU,W		; current LRU counter
	F ,L,2			; 2nd longword & block size & type
	F QUOLIST		; start of entries

	P 1
	F QUORECNUM		; record number
	F QUOUIC		; UIC
	F USAGE			; current usage
	F PERMQUOTA		; permanent quota
	F OVERDRAFT		; overdraft limit
	F QUOLRUX,W		; LRU index for entry
	F QUOFLAGS,W		; flags word
	    V<
		QUODIRTY	; dirty flag
	    >
	L QUOLENGTH		; length of quota cache entry

	E

;+
; VCB - VOLUME CONTROL BLOCK
;
; THERE IS ONE VOLUME CONTROL BLOCK FOR EACH MOUNTED DEVICE UNIT IN A
; SYSTEM. IT CONTAINS INFORMATION NECESSARY TO CONTROL ACCESS TO AND
; VERIFY CERTAIN VOLUME PARAMETERS IN THE CASE A DEVICE UNIT SHOULD
; ERRONEOUSLY GO OFFLINE.
;-
 
	$STRUCT	VCB
	M 1			; MARK 1 POSITION
	F FCBFL			; FCB LISTHEAD FORWARD LINK
	F FCBBL			; FCB LISTHEAD BACKWARD LINK
	F SIZE,W		; SIZE OF VCB IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF VCB
	L MRKLEN		; MARK LENGTH 
	M 2			; MARK 2 POSITION
	F STATUS,B		; VOLUME STATUS
	V<
		WRITE_IF	; INDEX FILE IS WRITE ACCESSED
		WRITE_SM	; STORAGE MAP IS WRITE ACCESSED
		HOMBLKBAD	; PRIMARY HOME BLOCK IS BAD
		IDXHDRBAD	; PRIMARY INDEX FILE HEADER IS BAD
		NOALLOC		; ALLOCATION/DEALLOCATION INHIBITED (BAD BITMAPS)
		EXTFID		; VOLUME HAS 24 BIT FILE NUMBERS
		GROUP		; VOLUME IS MOUNTED /GROUP
		SYSTEM		; VOLUME IS MOUNTED /SYSTEM
	>
	F TRANS,W		; VOLUME TRANSACTION COUNT
	F RVN,W			; RELATIVE VOLUME NUMBER
	F AQB			; ADDRESS OF AQB
	F VOLNAME,T,12		; VOLUME LABEL BLANK FILLED
	F RVT			; ADDRESS OF UCB OR RELATIVE VOLUME TABLE
	L COMLEN		; LENGTH OF COMMON AREA
	M 3			; MARK 3 POSITION
	F HOMELBN		; LBN OF VOLUME HOME BLOCK
	F HOME2LBN		; LBN OF ALTERNATE VOLUME HOME BLOCK
	F IXHDR2LBN		; LBN OF ALTERNATE INDEX FILE HEADER
	F IBMAPLBN		; LBN OF INDEX FILE BITMAP
	F SBMAPLBN		; LBN OF STORAGE BITMAP
	F IBMAPSIZE,B		; SIZE OF INDEX FILE BITMAP
	F SBMAPSIZE,B		; SIZE OF STORAGE BITMAP
	F IBMAPVBN,B		; CURRENT VBN IN INDEX FILE BIT MAP
	F SBMAPVBN,B		; CURRENT VBN IN STORAGE MAP
	F CLUSTER,W		; VOLUME CLUSTER SIZE
	F EXTEND,W		; VOLUME DEFAULT FILE EXTENSION LENGTH
	F FREE			; NUMBER OF FREE BLOCKS ON VOLUME
	F MAXFILES		; MAXIMUM NUMBER OF FILES ALLOWED ON VOLUME
	F WINDOW,B		; VOLUME DEFAULT WINDOW SIZE
	F LRU_LIM,B,,S		; VOLUME DIRECTORY LRU SIZE LIMIT
	F FILEPROT,W		; VOLUME DEFAULT FILE PROTECTION
	F MCOUNT,W		; MOUNT COUNT
	F EOFDELTA,B		; INDEX FILE EOF UPDATE COUNT
	F RESFILES,B		; NUMBER OF RESERVED FILES ON VOLUME
	F RECORDSZ,W		; NUMBER OF BYTES IN A RECORD
	F BLOCKFACT,B		; VOLUME BLOCKING FACTOR
	F STATUS2,B		; SECOND STATUS BYTE
	V<
		WRITETHRU	; VOLUME IS TO BE WRITE-THROUGH CACHED
		NOCACHE		; ALL CACHEING IS DISABLED ON VOLUME
		MOUNTVER	; VOLUME CAN UNDERGO MOUNT VERIFICATION
	>
	F QUOTAFCB		; ADDRESS OF FCB OF DISK QUOTA FILE
	F CACHE			; ADDRESS OF VOLUME CACHE BLOCK
	F QUOCACHE		; ADDRESS OF VOLUME QUOTA CACHE
	F QUOSIZE,W		; LENGTH OF QUOTA CACHE TO ALLOCATE
	F PENDERR,W		; COUNT OF PENDING WRITE ERRORS
	F SERIALNUM		; VOLUME SERIAL NUMBER (DISKS ONLY)
	F RETAINMIN,Q		; MINIMUM FILE RETENTION PERIOD
	F RETAINMAX,Q		; MAXIMUM FILE RETENTION PERIOD
	L LENGTH		; LENGTH OF STANDARD VCB

;
; MTAACP VOLUME CONTROL BLOCK FIELDS
;
	P 1			; RESET POINTER TO  FCB LISTHEAD
	F BLOCKFL		; BLOCKED REQUEST LISTHEAD FORWARD LINK
	F BLOCKBL		; BLOCKED REQUEST LISTHEAD BACKWARD LINK
	P 2			; RESET POINTER TO STATUS
	V<	
		PARTFILE	; PARTIAL FILE EXISTS ON TAPE
		LOGICEOVS	; POSITIONED AT LOGICAL END OF VOLUME SET
		WAIMOUVOL,,,M	; WAIT FOR VOLUME MOUNT
		WAIREWIND,,,M	; WAIT FOR REWIND COMPLETION
		WAIUSRLBL,,,M	; WAIT FOR USER LABEL
		CANCELIO,,,M	; CANCEL IO
		MUSTCLOSE,,,M	; MUST CLOSE FILE
		NOWRITE,,,M	; DON'T WRITE TRAILERS
	 >

	P 3			; RESET POINTER TO END OF COMMON VCB
	F CUR_FID		; CURRENT FILE IDENTIFICATION 
	  S CUR_NUM,,W		; CURRENT FILE SECTION NUMBER
	  S CUR_SEQ,,W		; CURRENT FILE SEQUENCE NUMBER
	F START_FID		; FILE IDENTIFICATION AT START OF SEARCH
	  S START_NUM,,W	; FILE SECTION NUMBER AT START OF SEARCH
	  S START_SEQ,,W	; FILE SEQUENCE NUMBER AT START OF SEARCH
	F MODE,W		; MODE OF OPERATION
	V <
		OVREXP		; OVERRIDE EXPIRATION
		OVRACC		; OVERRIDE ACCESS
		OVRLBL		; OVERRIDE LABELS
		OVRSETID	; OVERRIDE SET IDENTIFIER
		INTCHG		; INTERCHANGE TAPE
		EBCDIC		; EBCDIC CODE SET
		,1		; SPARE
		NOHDR3		; DO NOT WRITE HDR3 LABELS
		STARFILE	; CURRENT FILE IS A STARLET PRODUCED FILE
	  >
	
	F TM,B			; NUMBER OF TM'S INTO FILE
	F CUR_RVN,B		; CURRENT RELATIVE VOLUME
	F ST_RECORD,L		; NUMBER OF RECORDS UP TO AND INCLUDING LAST TAPE MARK
	F MVL			; ADDRESS OF MAGNETIC TAPE VOLUME LIST
	F WCB			; ADDRESS OF WINDOW FOR THIS VOLUME
	F VPFL			; VIRTUAL PAGE LIST HEAD
	F VPBL			; VIRTUAL PAGE LIST TAIL
	F USRLBLAST,L		; ADDRESS OF USER LABEL AST CONTROL BLOCK

; NOTE THAT FCP AND MTAACP SHARE VCB$W_MCOUNT(DISPLACEMENT 76)

	P 2			; VCB FORMAT USED FOR SPOOLED DEVICE
	F QNAMECNT,B		; BYTE COUNT OF QUEUE NAME
	F QNAME,T,20		; ASCII NAME OF QUEUE FOR THIS DEVICE
;
; JOURNAL ACP VOLUME CONTROL BLOCK FIELDS
;
	P 3
	F JNL_CHAR,L			; journal media characteristics
	V <M				;    bit def's for characteristics
		JNL_DISK		;    journal is on disk
		JNL_TAPE		;    journal is on tape
		>
	F JNL_JFTA,L		; JOURNAL FILE TABLE ADDRESS (IN ACP)
	F JNL_IRPS,L,2		; PREALLOCATED FREE IRP QUEUE HEADER
	F JNL_JMT,L		; ADDRESS OF JMT (JOURNAL MERGE TABLE)
	F JNL_WCBFL,L		; WCB LISTHEAD FORWARD LINK
	F JNL_WCBBL,L		; WCB LISTHEAD BACKWARD LINK
	F JNL_MODE,B		; ACCESS MODE OF CREATOR
	L JNL_LEN		; LENGTH OF JOURNAL VCB
	E

;+
; VOL1 ANSI MAGNETIC TAPE LABEL
; THIS IS THE FIRST BLOCK ON EVERY ANSI LABELED MAGNETIC TAPE.
; IT IDENTIFIES THE VOLUME AND ITS PROTECTION.
;-
	$STRUCT	VL1		;VOL1 LABEL FORMAT

	F	VL1LID,L	;LABEL IDENTIFIER AND NUMBER 'VOL1'
	F 	VOLLBL,T,6	;VOLUME LABEL
	F	VOLACCESS,B	;VOLUME ACCESS
	F	,T,26		;SPACES
	F	VOLOWNER,T,13	;VOLUME OWNER IDENTIFICATION
	F	DECSTDVER,B	;DEC STANDARD VERSION
	F	,T,28		;SPACES
	F	LBLSTDVER,B	;LABEL STANDARD VERSION '3'
	E


;+
; WCB - WINDOW CONTROL BLOCK
;
; THERE IS A WINDOW CONTROL BLOCK FOR EACH FILE ACCESSED BY A PROCESS.
; IT CONTAINS MAPPING INFORMATION SUCH THAT A LARGE PERCENTAGE OF VIRTUAL
; FILE I/O CAN BE MAPPED FROM VIRTUAL TO LOGICAL BLOCK NUMBERS WITHOUT
; HAVING TO READ THE RESPECTIVE FILE HEADER.
;-
 
	$STRUCT	WCB
	M 1
	F WLFL			; WINDOW LIST FORWARD LINK
	F WLBL			; WINDOW LIST BACKWARD LINK
	F SIZE,W		; SIZE OF WINDOW BLOCK IN BYTES
	F TYPE,B		; STRUCTURE TYPE OF WCB
	F ACCESS,B		; ACCESS CONTROL BYTE
	V<M			; WCB$B_ACCESS DEFINITIONS
		READ		; READ ACCESS ALLOWED (1=YES)
		WRITE		; WRITE ACCESS ALLOWED (1=YES)
		NOTFCP		; FILE NOT ACCESSED BY FCP IF SET
		SHRWCB		; SHARED WINDOW
		OVERDRAWN	; FILE ACCESSOR HAS OVERDRAWN HIS QUOTA
		COMPLETE	; SET WINDOW MAPS ENTIRE FILE
		CATHEDRAL	; LARGE, COMPLEX WINDOW (SIC) TO MAP
				; FILE COMPLETELY
		EXPIRE		; FILE EXPIRATION DATE MAY NEED TO BE SET
	>			; END OF WCB$B_ACCESS DEFINITIONS
	F PID			; PROCESS ID OF ACCESSOR PROCESS
	S REFCNT,2,W		; REFERENCE COUNT FOR SHARED WINDOW
	F ORGUCB		; ADDRESS OF ORIGINAL UCB FROM CCB
	F ACON,W		; ACCESS CONTROL INFORMATION
				; NOTE - THESE BITS TRACK THE BITS
				; IN FIB$L_ACCTL
	V<
		NOWRITE		; NO OTHER WRITERS
		DLOCK		; ENABLE DEACCESS LOCK
		,2		; UNUSED
		SPOOL		; SPOOL FILE ON CLOSE
		WRITECK		; ENABLE WRITE CHECK
		SEQONLY		; SEQUENTIAL ONLY ACCESS
		,1		; SPARE
		WRITEAC		; WRITE ACCESS
		READCK		; ENABLE READ CHECK
		NOREAD		; NO OTHER READERS
		NOTRUNC		; NO TRUNCATES
	>
	F NMAP,W		; NUMBER OF MAPPING POINTERS
	F FCB			; ADDRESS OF FCB
	F RVT			; ADDRESS OF RELATIVE VOLUME TABLE
	F LINK			; LINK TO NEXT WINDOW SEGMENT
	F READS			; COUNT OF READS PERFORMED
	F WRITES		; COUNT OF WRITES PERFORMED
	F STVBN			; STARTING VBN MAPPED BY WINDOW
	L MAP			; MAP POINTERS START HERE
	L LENGTH		; LENGTH OF STANDARD WCB SANS POINTERS
	F P1_COUNT,W		; COUNT FIELD OF FIRST POINTER
	F P1_LBN		; LBN FIELD OF SECOND POINTER
	F P2_COUNT,W		; COUNT FIELD OF SECOND POINTER
	F P2_LBN		; LBN FIELD OF FIRST POINTER
	P 1
				; FORMAT OF RETRIEVAL POINTER
	F COUNT,W		; COUNT FIELD
	F LBN			; LBN FIELD
	P 1
	-F PREVCOUNT,W		; PREVIOUS RETRIEVAL POINTER
	-F PREVLBN
				; RETRIEVAL POINTER FORMAT
	E

;+
; WORKING SET LIST DEFINITIONS
;-

	$STRUCT	WSL

	V <M
					;THE FOLLOWING 5 BITS MUST BE IN ORDER
		VALID			;WSL ENTRY VALID
		PAGTYP,3		;PAGE TYPE (SEE PFNDEF FOR VALUES)
		PFNLOCK			;PAGE FRAME LOCK
					;THE PRECEDING 5 BITS MUST BE IN ORDER
		WSLOCK			;WORKING SET LOCK
		GOODPAGE		;THIS PAGE SHOULD REMAIN IN WS ONE MORE PASS
		,1			;SPARE BIT
		MODIFY			;SAVED MODIFY BIT
	>

	C	LENGTH,4		;SIZE OF WS LIST ENTRY
;
; PAGE TYPE VIELD DEFINITIONS
;
	C <
		PROCESS,0@WSL$V_PAGTYP	;PROCESS PAGE
		SYSTEM,1@WSL$V_PAGTYP	;SYSTEM PAGE
		GLOBAL,2@WSL$V_PAGTYP	;GLOBAL PAGE (READ ONLY)
		GBLWRT,3@WSL$V_PAGTYP	;GLOBAL WRITABLE PAGE
		PPGTBL,4@WSL$V_PAGTYP	;PROCESS PAGE TABLE
		GPGTBL,5@WSL$V_PAGTYP	;GLOBAL PAGE TABLE
	>
	E

;+
; WAIT QUEUE HEADER DEFINITIONS
;-
 
	$STRUCT	WQH
 
	F	WQFL,L		;HEAD OR FORWARD LINK
	F	WQBL,L		;TAIL OR BACKWARD LINK
	F	WQCNT,W		;WAIT QUEUE COUNT
	F	WQSTATE,W	;STATE NUMBER FOR WAIT
	L	LENGTH		;LENGTH OF WAIT QUEUE HEADER
 
	E

