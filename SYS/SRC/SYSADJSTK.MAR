	.TITLE	SYSADJSTK - SYSTEM SERVICE ADJUST OUTER MODE STACK POINTER
	.IDENT	'V03-000'
 
;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;
; D. N. CUTLER 9-JAN-77
;
;
; MODIFIED BY:
;	02	RIH0031		RICHARD I. HUSTVEDT		6-AUG-1979
;		ADD CALL TO EXE$EXPANDSTK TO IMPLEMENT AUTOMATIC STACK 
;		EXPANSION FOR USER MODE STACK.
;
; SYSTEM SERVICE ADJUST OUTER MODE STACK POINTER
;
; MACRO LIBRARY CALLS
;
 
	$PSLDEF				;DEFINE PROCESSOR STATUS FIELDS
	$SSDEF				;DEFINE SYSTEM STATUS VALUES
 
;
; LOCAL SYMBOLS
;
; ARGUMENT LIST OFFSET DEFINITIONS
;
 
ACMODE=4				;ACCESS MODE TO ADJUST STACK POINTER FOR
ADJUST=8				;16-BIT SIGNED ADJUSTMENT VALUE
NEWADR=12				;ADDRESS OF LONGWORD TO STORE UPDATED VALUE
	.PAGE
	.SBTTL	ADJUST OUTER MODE STACK POINTER
;+
; EXE$ADJSTK - ADJUST OUTER MODE STACK POINTER
;
; THIS SERVICE PROVIDES THE CAPABILITY TO ADJUST THE STACK POINTER FOR
; A MODE THAT IS LESS PRIVILEGED THAN THE CALLING ACCESS MODE. IT CAN BE
; USED TO LOAD AN INITIAL VALUE INTO THE SPECIFIED MODE'S STACK POINTER OR
; TO ADJUST ITS CURRENT VALUE.
;
; INPUTS:
;
;		ACMODE(AP) = ACCESS MODE TO ADJUST STACK POINTER FOR.
;		ADJUST(AP) = 16-BIT SIGNED ADJUSTMENT VALUE.
;		NEWADR(AP) = ADDRESS OF LONGWORD TO STORE UPDATED VALUE.
;			IF THE INITIAL CONTENTS OF @NEWADR(AP) ARE NONZERO,
;			THEN THE VALUE IS TAKEN AS THE CURRENT TOP OF STACK.
;			ELSE THE CURRENT STACK POINTER FOR THE SPECIFIED MODE
;			IS USED.
;
; OUTPUTS:
;
;	R0 LOW BIT CLEAR INDICATES FAILURE TO ADJUST STACK POINTER.
;
;		R0 = SS$_ACCVIO - LONGWORD TO STORE UPDATED STACK POINTER
;			OR PART OF NEW STACK SEGMENT CANNOT BE WRITTEN BY
;			CALLING ACCESS MODE.
;
;		R0 = SS$_NOPRIV - SPECIFED ACCESS MODE IS EQUAL OR MORE
;			PRIVILEGED THAN CALLING ACCESS MODE.
;
;	R0 LOW BIT SET INDICATES SUCCESSFUL COMPLETION.
;
;		R0 = SS$_NORMAL - NORMAL COMPLETION.
;-
 
	.PSECT	Y$EXEPAGED
	.ENTRY	EXE$ADJSTK,^M<R2,R3,R4,R5,R6>
	MOVL	NEWADR(AP),R5		;GET ADDRESS TO STORE NEW STACK VALUE
	EXTZV	#0,#2,ACMODE(AP),R3	;GET ACCESS MODE TO MODIFY STACK POINTER FOR
	MOVPSL	R2			;READ CURRENT PSL
	CMPZV	#PSL$V_PRVMOD,#PSL$S_PRVMOD,R2,R3 ;PREVIOUS MODE MORE PRIVILEGED?
	BGEQ	60$			;IF GEQ NO
	IFNOWRT	#4,(R5),40$		;CAN NEW STACK VALUE BE WRITTEN?
	MOVL	(R5),R6			;GET SPECIFIED STACK VALUE
	BNEQ	10$			;IF NEQ VALUE SPECIFIED
	MFPR	R3,R6			;
10$:	CVTWL	ADJUST(AP),R0		;GET ADJUSTMENT VALUE
	ADDL	R0,R6			;CALCULATE NEW TOP OF STACK
	MNEGL	R0,R0			;ALLOCATION OF STACK SPACE?
	BLEQ	30$			;IF LEQ NO
	MOVL	R6,R1			;COPY NEW STACK VALUE
	CVTWL	#-^X200,R2		;SET ADDITION CONSTANT
20$:	IFNOWRT	R0,(R1),40$,R3		;CAN ALLOCATED STACK SEGMENT BE WRITTEN?
	SUBL	R2,R1			;UPDATE ADDRESS IN STACK
	MOVAW	(R0)[R2],R0		;UPDATE REMAINING LENGTH
	BGEQ	20$			;IF GEQ MORE TO CHECK
30$:	MTPR	R6,R3			;
	MOVL	R6,(R5)			;STORE NEW STACK VALUE
	MOVZWL	#SS$_NORMAL,R0		;SET NORMAL COMPLETION
	RET				;
40$:	CMPL	#PSL$C_USER,R3		;IS THIS FOR USER MODE STACK?
	BNEQ	50$			;BR IF NOT
	PUSHR	#^M<R1,R2,R3,R4,R5>	;SAVE REGISTERS
	MOVL	R1,R2			;STACK BASE ADDRESS
	BSBW	EXE$EXPANDSTK		;AUGMENT STACK TO MAKE ACCESSIBLE
	POPR	#^M<R1,R2,R3,R4,R5>	;RESTORE REGISTERS
	BLBS	R0,10$			;REPEAT CHECKS
	RET				;RETURN ERROR CODE
50$:	MOVZWL	#SS$_ACCVIO,R0		;SET ACCESS VIOLATION
	RET				;
60$:	MOVZWL	#SS$_NOPRIV,R0		;SET NO PRIVILEGE
	RET				;
 
	.END
