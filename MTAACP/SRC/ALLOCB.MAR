	.TITLE	ALLOCB - ALLOCATE DYNAMIC MEMORY
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
;
; Facility:  mtaacp
;
; Abstract:
;
;	these routines allocate and deallocate system non-paged
;	dynamic memory for acp control blocks.
;
; Environment:
;
;	starlet operating system, including privileged system services
;	and internal exec routines. note that this routine must be
;	called in kernel mode.
;
; Author:  Andrew C. Goldstein, Creation Date:  14-DEC-1976  16:25
;
; Modified By:
;
;	V02-002	REFORMAT	R Schaefer	23-Jul-1980	15:53
;		Reformat the source.
;--
;

;
; Include Files:
;

;
; Equated Symbols:
;
; arg list offsets
;

	BYTES	= 4			; byte count desired
	ADDRESS	= 4			; address of block being deallocated

	$IPLDEF				; define system ipl names
	$PRDEF				; define processor register names
	$RSNDEF				; define resource names
	$WCBDEF				; define window block format
					; used only for tags to the block type
					; and size fields

	.PSECT	$LOCKEDC1$,NOWRT,LONG

;
; Own Storage:
;

	.ALIGN	2


;++
;
; ALLOCATE:	Allocates the requested block size from system
;		non-paged dynamic memory. the block is cleared, and
;		the standard size.
;
; Calling sequence:
;	CALL	ALLOCATE (ARG1)
;
; Input Parameters:
;	ARG1: number of bytes to allocate
;
; Implicit Inputs:
;	none
;
; Output Parameters:
;	none
;
; Implicit Outputs:
;	none
;
; Routine Value:
;	address of block
;
; Side Effects:
;	block allocated
;
;--

ALLOCATE::
	.WORD	^M<R2,R3,R4,R5>		; save the usual registers
10$:	MOVL	BYTES(AP),R1		; get size argument
	MOVPSL	-(SP)			; save the psl for wait call below
	DSBINT	#IPL$_SYNCH,R2		; raise ipl to synchronize
	JSB	@#EXE$ALONONPAGED	; get block from exec
	BLBC	R0,20$			; branch on failure
	ENBINT	#0			; restore ipl
					; clean psl off stack and
	MOVL	R1,(SP)			; save returned byte count
	PUSHL	R2			; and address
	MOVC5	#0,(R2),#0,R1,(R2)	; zero out the block

	MOVL	(SP)+,R0		; get block address
	CVTLW	(SP)+,WCB$W_SIZE(R0)	; put in size word
	RET				; and return

;
; we get here if memory is not available
;

20$:	MOVZWL	#RSN$_NPDYNMEM,R0	; get appropriate resource code
	MOVL	@#SCH$GL_CURPCB,R4	; and process pcb address
	JSB	@#SCH$RWAIT		; and wait for pool to appear
	BRB	10$			; try again


;++
;
; DEALLOCATE:	Deallocates the indicated block of memory back
;		to the system pool of non-paged dynamic memory.
;
; Calling sequence:
;	CALL	DEALLOCATE (ARG1)
;
; Input Parameters:
;	ARG1: address of block being deallocated
;
; Implicit Inputs:
;	none
;
; Output Parameters:
;	none
;
; Implicit Outputs:
;	none
;
; Routine Value:
;	none
;
; Side Effects:
;	block deallocated
;
;--

DEALLOCATE::
	.WORD	^M<R2,R3,R4,R5>		; save registers
	MOVL	ADDRESS(AP),R0		; get address of block
	MOVZWL	WCB$W_SIZE(R0),R1	; get block size
	DSBINT	#IPL$_SYNCH,R2		; raise ipl to synchronize
	JSB	@#EXE$DEANONPAGED	; and deallocate thru exec
	ENBINT	#0			; restore ipl
	RET


	.END
