MODULE CLOSFL (LANGUAGE (BLISS32) ,
		IDENT = 'V03-000'
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  MTAACP
!
! ABSTRACT:
!	Close out current file
!
! ENVIRONMENT:
!
!	Starlet operating system, including privileged system services
!	and internal exec routines.
!
!--

!
!
! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:	19-MAY-77 12:00
!
! MODIFIED BY:
!
!	V02-005	REFORMAT	Maria del C. Nasr	30-Jun-1980
!
!	V02-004	MCN0003		Maria del C. Nasr	10-Jun-1980
!		Add EOF3 label as part of HDR3 processing
!
!**

LIBRARY 'SYS$LIBRARY:LIB.L32';

REQUIRE 'SRC$:MTADEF.B32';

FORWARD ROUTINE
    CLOSE_FILE		: L$CLOSE_FILE NOVALUE,		! CLOSE A FILE
    UPDVCB_STATUS	: COMMON_CALL NOVALUE,		! UPDATE VCB STATUS BITS
    WRITE_TRAILERS	: L$WRITE_TRAILER NOVALUE;	! WRITE TRAILER LABEL SET

EXTERNAL
    CURRENT_UCB		: REF BBLOCK,			! ADDRESS OF CURRENT UNIT CONTROL BLOCK
    HDR1		: REF BBLOCK,			! ADDRESS OF HDR1(EOF1) LABEL
    HDR2		: REF BBLOCK,			! ADDRESS OF HDR2(EOF2) LABEL
    HDR3		: REF BBLOCK;			! ADDRESS OF HDR3(EOF3) LABEL

EXTERNAL ROUTINE
    SYS$FAO		: ADDRESSING_MODE (ABSOLUTE),	! FORMAT ASCII OUTPUT
    WRITE_TM		: L$WRITE_TM,			! WRITE ONE TM
    WRITE_BLOCK		: COMMON_CALL;			! WRITE BLOCK

EXTERNAL LITERAL
    !
    ! now a global displacement, not a structure definition
    !
    UCB$L_MT_RECORD;


GLOBAL ROUTINE CLOSE_FILE : L$CLOSE_FILE NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	this routine closes out current file
!
! CALLING SEQUENCE:
!	close_file()
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	current_ucb	- address of current ucb
!	current_vcb	- address of current vcb
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	none
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	file closed on magnetic tape, logical end_of_tape set
!	partial file cleared
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    ! if only the headers have been written without the tm before the data
    ! then write this tm first
    !

    IF .CURRENT_VCB[VCB$B_TM] EQL 0
    THEN
	WRITE_TM();

    IF .CURRENT_VCB[VCB$B_TM] EQL 1
    THEN
	WRITE_TRAILERS('F');

    WRITE_TM();
    WRITE_TM();
    KERNEL_CALL(UPDVCB_STATUS);
    END;


GLOBAL ROUTINE WRITE_TRAILERS (END_FLAG) : L$WRITE_TRAILER NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	this routine writes out eof(v)1 and eof(v)2 system labels
!
! CALLING SEQUENCE:
!	write_trailer(arg1)
!
! INPUT PARAMETERS:
!	arg1 - 'v' for end of volume
!	       'f' for end of file
!
! IMPLICIT INPUTS:
!	none
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	system trailer label written to tape
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	none
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    LOCAL
	BLCNT_DESC	: VECTOR [2];

    ! calculate block count by subtracting the block count after the tape mark
    ! at the start of the data area from the current block count
    !
    BLCNT_DESC[0] = EO1$S_BLOCKCNT;
    BLCNT_DESC[1] = HDR1[EO1$T_BLOCKCNT];
    SYS$FAO(DESCRIPTOR('!6ZL'),
		 0,
		 BLCNT_DESC,
		.(.CURRENT_UCB + UCB$L_MT_RECORD)<0, 32> -
		.CURRENT_VCB[VCB$L_ST_RECORD]);

    ! format eof1 trailer
    !
    HDR1[EO1$L_EO1LID] = 'EOF1';
    (.HDR1)<16, 8> = .END_FLAG<0, 8>;		! either f or v

    ! write tm plus eof1
    !
    WRITE_TM();
    WRITE_BLOCK(.HDR1, 80);

    ! format and write eof2
    !
    HDR2[EO2$L_EO2LID] = 'EOF2';
    (.HDR2)<16, 8> = .END_FLAG<0, 8>;
    WRITE_BLOCK(.HDR2, 80);

    ! format and write eof3, if mount switch allows it
    !

    IF NOT .CURRENT_VCB[VCB$V_NOHDR3]
    THEN
	BEGIN
	HDR3[EO3$L_EO3LID] = 'EOF3';
	(.HDR3)<16, 8> = .END_FLAG<0, 8>;
	WRITE_BLOCK(.HDR3, 80);
	END;

    END;					! END OF ROUTINE


ROUTINE UPDVCB_STATUS : COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	this routine updates the status bits in the current vcb
!
! CALLING SEQUENCE:
!	updvcb_status(), called in kernel mode
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	current_vcb - address of current volume control block
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	status set to at logical end of tape with no partial file
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	none
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    CURRENT_VCB[VCB$V_LOGICEOVS] = 1;
    CURRENT_VCB[VCB$V_MUSTCLOSE] = 0;
    CURRENT_VCB[VCB$V_PARTFILE] = 0;
    END;					! end of routine

END

ELUDOM
