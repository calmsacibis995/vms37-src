
MODULE RWVOL (LANGUAGE (BLISS32) ,
		IDENT = 'V03-000'
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  MTAACP
!
! ABSTRACT:
!	This modules rewinds a volume set
!
!
! ENVIRONMENT:
!
!	STARLET operating system, including privileged system services
!	and internal exec routines.
!
!--

!
! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:  16-JUL-1977
!
! MODIFIED BY:
!
!	V02-007 DMW00070	David Michael Walp	20-Jan-1981
!		Added Extra Set Valid in REWIND_AND_WAIT
!
!	V02-006 DMW00015	David Michael Walp	14-Mar-1981
!		Changed calculation of CCB address to GET_CCB
!
!	V02-005	REFORMAT	Maria del C. Nasr	30-Jun-1980
!
!**

LIBRARY 'SYS$LIBRARY:LIB.L32';

REQUIRE 'SRC$:MTADEF.B32';

FORWARD ROUTINE
    REWIND_AND_WAIT	: COMMON_CALL,		! rewind and wait for
						!   completion
    REQUEST_UNBLOCK	: COMMON_CALL NOVALUE,  ! AST to handles completion of
						!   rewind
    REWIND_VOL_SET	: COMMON_CALL NOVALUE,	! rewind volume set
    SET_AMB_POS		: COMMON_CALL NOVALUE,  ! set the position of vol set 
						!  to ambiguous
    SET_VALID		: COMMON_CALL NOVALUE;	! set valid bit

EXTERNAL
    CURRENT_UCB		: REF BBLOCK,		! address of current unit
						!  control block
    CURRENT_WCB		: REF BBLOCK,		! address of current window 
						!  control block
    IO_CHANNEL,					! ACP IO channel
    IO_PACKET,					! address of current IO packet
    USER_STATUS		: VECTOR [2];		! user IO status

EXTERNAL ROUTINE
    BLOCK,					! block current request
    CLOSE_FILE	: L$CLOSE_FILE,			! close a file
    DO_CANCEL	: COMMON_CALL,			! cancel all IO
    SYS$QIO	: ADDRESSING_MODE (ABSOLUTE),	! format ASCII output
    UNBLOCK;					! unblock a request


GLOBAL ROUTINE REWIND_VOL_SET : COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine rewinds the volumes in a volume set
!	waits for the completion of the rewind of volume one
!	and sets the current volume set position to ambiguous
!
! CALLING SEQUENCE:
!	REWIND_VOL_SET()
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	CURRENT_VCB - address of current volume control block
!	CURRENT_WCB - address of current window control block
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	volumes rewound
!	current relative volume number and channel set to first volume
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	SS$_FILALRACC - can not rewind volume set if a file is currently accessed
!	SS$_FCPREWNDERR - file control process rewind error
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    EXTERNAL ROUTINE
	GET_CCB;			! calculate the address of the CCB

    LOCAL
	MVL	: REF BBLOCK,		! address of MVL control block
	NVOLS,				! number of volumes in volume set
	VOLLIST	: REF BBLOCKVECTOR [, MVL$K_LENGTH],	! volume list in MVL
	CCB	: REF BBLOCK,		! channel control block
	UCBLIST	: REF VECTOR;		! UCB list

    ! first make sure that there are no files accessed
    !

    IF .CURRENT_WCB NEQU 0
    THEN
	ERR_EXIT(SS$_FILALRACC);

    IF .CURRENT_VCB[VCB$V_PARTFILE]
    THEN
	CLOSE_FILE();

    ! setup pointers to interesting structures
    !
    MVL = .CURRENT_VCB[VCB$L_MVL];
    NVOLS = .MVL[MVL$B_NVOLS] - 1;
    VOLLIST = .MVL + MVL$K_FIXLEN;
    UCBLIST = BBLOCK[.CURRENT_VCB[VCB$L_RVT], RVT$L_UCBLST];
    CCB = KERNEL_CALL (GET_CCB, .IO_CHANNEL );
    KERNEL_CALL(SET_AMB_POS);

    ! now issue rewinds
    !

    DECR I FROM .NVOLS TO 0 DO
	BEGIN

	IF .VOLLIST[.I, MVL$V_MOUNTED]
	THEN
	    BEGIN

	    ! assign channel
	    !
	    CCB[CCB$L_UCB] = .UCBLIST[.VOLLIST[.I, MVL$B_RVN]];

	    IF .I NEQU 0			! don't wait for all but first
	    THEN
		$QIOW(CHAN = .IO_CHANNEL,
		    FUNC = IO$_REWIND  OR  IO$M_NOWAIT)
	    ELSE
		REWIND_AND_WAIT();

	    END;

	END;

    END;


GLOBAL ROUTINE SET_AMB_POS : COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine set the position of the volume set to ambiguous
!
! CALLING SEQUENCE:
!	SET_AMB_POS()
!	call in kernel mode
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	CURRENT_VCB - address of current volume control block
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	none
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	none
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    CURRENT_VCB[VCB$B_TM] = 0;
    CURRENT_VCB[VCB$L_ST_RECORD] = 0;
    CURRENT_VCB[VCB$V_LOGICEOVS] = 0;
    CURRENT_VCB[VCB$B_CUR_RVN] = 0;
    CURRENT_VCB[VCB$L_CUR_FID] = 0;
    END;


GLOBAL ROUTINE REQUEST_UNBLOCK (VCB) : COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	Handles requests to unblock current volume operation
!
! CALLING SEQUENCE:
!	REWIND_DONE(ARG1)
!
! INPUT PARAMETERS:
!	ARG1 - address of VCB
!
! IMPLICIT INPUTS:
!	saved stack and impure area
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	none
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	never returns to PC where AST's were enabled
!	instead it resumes where the blocked request left off
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    CURRENT_VCB = .VCB;				! restore VCB

    IF .CURRENT_VCB[VCB$V_CANCELIO]
    THEN
	BEGIN
	ERROR(SS$_CANCEL);
	KERNEL_CALL(DO_CANCEL);			! cancel IO
	IO_PACKET = 0;				! no request packet to process
	RETURN;

	END;

    UNBLOCK();		! unblock and continue were request processing left off
    END;


GLOBAL ROUTINE REWIND_AND_WAIT : COMMON_CALL =

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine rewinds the unit assigned to IO_CHANNEL
!	and waits for completion of the rewind
!
! CALLING SEQUENCE:
!	REWIND_AND_WAIT()
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	CURRENT_VCB - address of current volume control block
!	IO_CHANNEL - ACP IO channel
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	none
!
! ROUTINE VALUE:
!	0 - unit off_line
!	1 - successful
!
! SIDE EFFECTS:
!	none
!
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    LOCAL
	STATUS;					! status of IO

    KERNEL_CALL(SET_VALID);
    SYS$QIO(0, .IO_CHANNEL, IO$_REWIND,
	    BBLOCK[.CURRENT_VCB[VCB$L_VPFL],
	    VVP$L_STATUS], REQUEST_UNBLOCK, .CURRENT_VCB, 0,0,0,0,0,0);
    BLOCK($FIELDMASK(VCB$V_WAIREWIND));
    STATUS = .BBLOCK[.CURRENT_VCB[VCB$L_VPFL], VVP$L_STATUS];

    IF  .STATUS<0, 16> EQL SS$_MEDOFL
	OR
	.STATUS<0, 16> EQL SS$_VOLINV
    THEN
	RETURN 0;

    IF NOT .STATUS
    THEN
	BEGIN
	USER_STATUS[0] = .STATUS;
	USER_STATUS[1] = SS$_FCPREWNDERR;
	ERR_EXIT();
	END;

    KERNEL_CALL(SET_VALID);
    RETURN 1;

    END;


ROUTINE SET_VALID : COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine sets the VALID bit in the UCB
!
! CALLING SEQUENCE:
!	SET_VALID()
!
! INPUT PARAMETERS:
!	none
!
! IMPLICIT INPUTS:
!	CURRENT_UCB - address of current unit control block
!
! OUTPUT PARAMETERS:
!	none
!
! IMPLICIT OUTPUTS:
!	VALID bit set
!
! ROUTINE VALUE:
!	none
!
! SIDE EFFECTS:
!	none
!
!--

    BEGIN
    CURRENT_UCB[UCB$V_VALID] = 1;
    END;
END

ELUDOM
