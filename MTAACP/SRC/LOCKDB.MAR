	.TITLE	LOCKDB - LOCK AND UNLOCK I/O DATA BASE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
;
; Facility:  F11ACP Structure Level 1
;
; Abstract:
;
;	These routines lock and unlock the I/O data base mutex.
;	needless to say, they must be called in kernel mode.
;
; Environment:
;
;	Starlet operating system, including privileged system services
;	and internal exec routine.
;
; Author:  Andrew C. Goldstein, Creation Date:  29-APR-1977  15:31
;
; Modified By:
;
;	V02-002	REFORMAT	K. E. Kinnear		31-Jul-1980	13:08
;
;--


	$PRDEF				; define procesor register numbers


;++
; LOCK_IODB -- Routine to lock the I/O date base Mutex.
;
; Calling Sequence:
;
;	CALL LOCK_IODB ()
;
; Input Parameters:
;
;	none
;
; Implicit Inputs:
;
;	none
;
; Output Parameters:
;
;	none
;
; Implicit Outputs:
;
;	none
;
; Routine Value:
;
;	none
;
; Side Effects:
;
;	I/O data base mutex locked.
;
;--

	.PSECT	$LOCKEDC1$,NOWRT

LOCK_IODB::
	.WORD	^M<R2,R3,R4,R5>		; save registers
	MOVAL	@#IOC$GL_MUTEX,R0	; get i/o data base mutex
	MOVL	@#SCH$GL_CURPCB,R4	; get own pcb address
	JSB	@#SCH$LOCKW		; and lock it
	RET


;++
; UNLOCK_IODB -- routine unlocks the i/o data base mutex.
;
; Calling sequence:
;
;	CALL UNLOCK_IODB ()
;
; Input Parameters:
;
;	none
;
; Implicit Inputs:
;
;	none
;
; Output Parameters:
;
;	none
;
; Implicit Outputs:
;
;	none
;
; Routine Value:
;
;	none
;
; Side Effects:
;
;	I/o data base mutex unlocked.
;	IPL lowered to 0
;
;--

	.PSECT	$LOCKEDC1$,NOWRT

UNLOCK_IODB::
	.WORD	^M<R2,R3,R4,R5>		; save registers
	MOVAL	@#IOC$GL_MUTEX,R0	; get i/o data base mutex
	MOVL	@#SCH$GL_CURPCB,R4	; and own pcb address
	JSB	@#SCH$UNLOCK		; and unlock it
	SETIPL	#0			; also lower ipl
	RET



	.END
