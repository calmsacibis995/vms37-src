MODULE POSFID ( LANGUAGE ( BLISS32 ) ,
		IDENT = 'V03-000'
		) =
BEGIN
!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  MTAACP
!
! ABSTRACT:
!	This module position the tape
!
! ENVIRONMENT:
!
!	VMS operating system, including privileged system services
!	and internal exec routines.
!
!--

!
!
! AUTHOR:  D. H. GILLESPIE,	 CREATION DATE:  31-MAY-77  11:30
!
! MODIFIED BY:
!
!	V02-005 DMW00079	David Michael Walp	 2-Mar-1982
!		Added check for RVN greater then byte size
!
!	V02-004	REFORMAT	Maria del C. Nasr	30-Jun-1980
!
!
!**

LIBRARY 'SYS$LIBRARY:LIB.L32';

REQUIRE 'SRC$:MTADEF.B32';

GLOBAL ROUTINE POSITION_BY_FID ( FID_WANTED, RVN_WANTED ) :
				 COMMON_CALL NOVALUE =

!++
!
! FUNCTIONAL DESCRIPTION:
!	This routine positions the tape just passed the headers of the file
!	specified by FID
!
! CALLING SEQUENCE:
!	POSITION_BY_FID ( ARG1, ARG2 )
!
! INPUT PARAMETERS:
!	ARG1 - file identifier
!	ARG2 - rvn on which file resides
!
! IMPLICIT INPUTS:
!	CURRENT_VCB - address of current vcb
!	CURRENT_UCB - address of current unit control block
!
! OUTPUT PARAMETERS:
!	NONE
!
! IMPLICIT OUTPUTS:
!	NONE
!
! ROUTINE VALUE:
!	NONE
!
! SIDE EFFECTS:
!	tape positioned passed HDR1 and HDR2 (if it exists)
!	these labels are read in
!	if file doesn't exist, error exit taken
!
! USER ERRORS:
!	SS$_NOSUCHFILE - no file exists that matches fid
!--

    BEGIN

    EXTERNAL REGISTER
	COMMON_REG;

    EXTERNAL LITERAL
	UCB$L_MT_RECORD;			! global displacement into UCB

    EXTERNAL
	CURRENT_UCB	: REF BBLOCK,		! address of current UCB
	HDR1		: REF BBLOCK;		! address of HDR1 (EOF1) label

    EXTERNAL ROUTINE
	READ_HDR,				! read headers
	MOUNT_VOL,				! mount relative volume
	SPACE_EOF;				! space to end of file

    BIND
	CUR_FID = CURRENT_VCB[VCB$W_CUR_NUM];

    LOCAL
	TM;					! number of tm's past in file

    ! if the file id is zero, then the user has input an invalid file id or
    ! the acp has a bug.
    !
    IF ( .FID_WANTED EQL 0 ) THEN ERR_EXIT ( SS$_BADPARAM );

    IF	   ( .CUR_FID EQLU .FID_WANTED )
       AND (	( .CURRENT_VCB[VCB$B_TM] EQLU 0 )
	     OR	(     ( .CURRENT_VCB [ VCB$B_TM ] EQLU 1 )
		  AND (( .CURRENT_VCB [ VCB$L_ST_RECORD ] -
			     .(.CURRENT_UCB + UCB$L_MT_RECORD)<0,32> ) EQLU 0 )
		  AND ( .HDR1[HD1$L_HD1LID] EQL 'HDR1' )
		)
	   )
    THEN RETURN;

    ! check if RVN is less then byte size
    !
    IF ( .RVN_WANTED GEQU 256 ) THEN ERR_EXIT ( SS$_BADPARAM );

    MOUNT_VOL (	IF ( .RVN_WANTED EQL 0 ) THEN 1 ELSE .RVN_WANTED,
		$FIELDMASK ( MOU$V_LBLCHECK ) OR $FIELDMASK ( MOU$V_REWIND )
	      );

    READ_HDR();

    WHILE TRUE DO
	BEGIN
	IF ( .CUR_FID EQLU .FID_WANTED ) THEN EXITLOOP;
	SPACE_EOF();
	IF NOT READ_HDR() THEN ERR_EXIT ( SS$_NOSUCHFILE );
	END;

    END;					! end of routine

END

ELUDOM
