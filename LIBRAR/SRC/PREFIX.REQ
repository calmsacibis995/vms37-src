!
! Require file for the Library command utility
!
!	Version 'V03-000'
!

!
!****************************************************************************
!*									    *
!*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
!*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
!*  ALL RIGHTS RESERVED.						    *
!* 									    *
!*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
!*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
!*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
!*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
!*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
!*  TRANSFERRED.							    *
!* 									    *
!*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
!*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
!*  CORPORATION.							    *
!* 									    *
!*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
!*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
!* 									    *
!*									    *
!****************************************************************************

!++
!
! FACILITY:  Library command utility
!
! ABSTRACT:
!
!	The VAX/VMS library command utilizes the librarian procedures
!	to perform operations on libraries.
!
! ENVIRONMENT:
!
!	VAX native, user mode.
!
!--
!
! AUTHOR:  Benn Schreiber
!
! CREATION DATE: June-1979
!
! MODIFIED BY:
!
!	V02-001	RPG0002		Bob Grosso		1-Oct-1981
!		Convert lib$_openin from error to warning severity
!
!	V02-001	BLS0029		Benn Schreiber		23-Dec-1980
!		Convert to message compiler
!--

!
! Define VMS block structures
!
STRUCTURE
	BBLOCK [O, P, S, E; N] =
		[N]
		(BBLOCK + O) <P, S, E>;
!
! Useful macros
!
MACRO
!
! Macro to generate a pointer to a counted string
!
    CSTRING (STRING) = UPLIT BYTE (%CHARCOUNT (STRING), STRING)%,
!
! Macro to describe a string
!
    STRINGDESC (STRING) = %CHARCOUNT (STRING), UPLIT (%ASCII STRING)%,
!
! Macro to generate a quadword string descriptor
!
    DESCRIPTOR (STRING) = BBLOCK [DSC$C_S_BLN] INITIAL (STRINGDESC (STRING))%,
!
! Macro to generate a counted string
!
    COUNTEDSTRING(STRING) = VECTOR [%CHARCOUNT (STRING)+1, BYTE] INITIAL (BYTE(%CHARCOUNT(STRING),%ASCII STRING ))%,
!
! Macro to execute a given sequence of commands and return if any error
!
    perform (command, errorcode) =
	BEGIN
	LOCAL
	    status;
	status = command;
	IF NOT .status			! If error detected,
	THEN
	    %IF %LENGTH GTR 1		! If errorcode arg is present
		%THEN SIGNAL (errorcode, %REMAINING, .status);
		%ELSE RETURN .status;		! Otherwise return with error
	    %FI
	END%,
!
! Macro to execute a command which may have and RMS error return
! involving both a status and STV value
!
    rms_perform (command, errorcode, rms_stv) =
	BEGIN
	LOCAL
	    status;
	status = command;
	IF NOT .status			! If error detected,
	THEN
	    %IF %LENGTH GTR 1		! If errorcode arg is present
		%THEN SIGNAL (errorcode, %REMAINING, .status, rms_stv); ! then signal the error
		%ELSE RETURN .status;		! Otherwise just return with error
	    %FI
	END%;

!
! $SHR_MESSAGES - a macro which defines facility-specific message codes
!	which are based on the system-wide shared message codes.
!
!	$SHR_MESSAGES ( name, code, (msg,severity), ... )
!
!	where:
!	    "name" is the name of the facility (e.g., LIBRAR)
!	    "code" is the corresponding facility code (e.g., 134)
!	    "msg" is the name of the shared message (e.g., BEGIN)
!	    "severity" is the desired message severity (either STS$K_severity
!					or severity)
!

MACRO
    $SHR_MESSAGES ( FACILITY_NAME, FACILITY_CODE ) =
	LITERAL
	SHR$MSG_IDS ( FACILITY_NAME, FACILITY_CODE, %REMAINING ); %,

    SHR$MSG_IDS ( FACILITY_NAME, FACILITY_CODE) [ VALUE ] =
	SHR$MSG_CALC ( FACILITY_NAME, FACILITY_CODE, %REMOVE (VALUE) ) %,

    SHR$MSG_CALC ( FACILITY_NAME, FACILITY_CODE, MSG_ID, SEVERITY ) =
	%NAME (FACILITY_NAME,'$_',MSG_ID) = %NAME ('SHR$_',MSG_ID) + 
			FACILITY_CODE*65536 +
	    		%IF %DECLARED (%NAME ('STS$K_',SEVERITY))
				%THEN %NAME ('STS$K_',SEVERITY)
				%ELSE SEVERITY %FI %;

!
! Librarian message codes from shared message definitions
!

$SHR_MESSAGES (LIB, 134,			!
		(openin, warning),	! error opening "x" as input
		(openout, severe),	! error opening "x" as output
		(closein, warning),	! error closing "x" as input
		(closeout, warning),	! error closing "x" as output
		(readerr, error),	! error reading "x"
		(writeerr, error),	! error writing "x" 
		(parsefail, severe),	! error parsing "x"
		(nowild, severe),	! no wild card allowed
		(novalue, severe),	! no value
		(badkey, severe));	! Bad key value

!
! Macros to ease typing
!
MACRO
    SHORT = UNSIGNED (6)%,		! Short attribute
    BYTLIT = UNSIGNED (8)%,		! Unsigned byte attribute
    WORDLIT = UNSIGNED (16)%;		! Unsigned word attribute
!
! Equated symbols
!
LITERAL
    SYM$C_MAXLNG = 31,			! Max length of symbols in object/macro libs
    SYM$C_SHORTSYM = 15,		! Max length of short symbols (help library)
    TRUE	=	1,		! Boolean TRUE
    FALSE	=	0;		! Boolean FALSE
