	.TITLE	HLDPRINT - HLD PRINT ROUTINES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: DECNET HOST LOADER (HLD)
;
; ABSTRACT:
;
;	THIS MODULE IS RESPONSIBLE FOR FORMATTING AND PRINTING
;	MESSAGES TO THE LOG FILE.
;
; ENVIRONMENT:
;
;	THE HLD IMAGE EXECUTES IN THE CONTEXT OF A PROCESS CREATED BY
;	NETACP. IT RUNS IN USER MODE AND REQUIRES NETWORK PRIVILEGE.
;
; AUTHOR: SCOTT G. DAVIS,	CREATION DATE: 02-JUL-79
;
; MODIFICATIONS:
;
;--
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
	.PSECT	HLD$PURE	NOSHR,NOEXE,RD,NOWRT,LONG

;
; FAO DESCRIPTOR
;
HLD_ANNOUNCE:	.ASCID	\!/!/!AC request from node !AS:: for task "!AC"!/!AC!AC!/!/\
;
; MESSAGES
;
FAILED:	.ASCIC	/***** FAILED - /
;
; TEXT RELATED TO REQUEST TYPE
;
HLD$GT_INVALID::	.ASCIC	/***** - Invalid/ ; CONNECT FROM SLD WAS GARBAGE
HLD$AT_REQ_TYPE::			; VECTOR OF ADDRESSES
	.ADDRESS	HLD_OVERLAY	; OVERLAY REQUEST
	.ADDRESS	HLD_LOAD	; INITIAL LOAD REQUEST
	.ADDRESS	HLD_CHKREAD	; CHECKPOINT READ REQUEST
	.ADDRESS	HLD_CHKWRT	; CHECKPOINT WRITE REQUEST

HLD_OVERLAY:	.ASCIC	/Overlay/
HLD_LOAD:	.ASCIC	/Initial load/
HLD_CHKREAD:	.ASCIC	/Checkpoint read/
HLD_CHKWRT:	.ASCIC	/Checkpoint write/
MSG_ARRAY:				; ARRAY TO BE INDEXED BY MSG NUMBER
	.ADDRESS	NULL		; IF 0 THEN NO ERROR MESSAGE
	.ADDRESS	FORMAT
	.ADDRESS	SYNTAX
	.ADDRESS	SEARCH
	.ADDRESS	NO_HEADER
	.ADDRESS	NOT_4K
	.ADDRESS	BAD_PART
	.ADDRESS	BIG_FILE
	.ADDRESS	BIG_PART

NULL:	.ASCIC	//			; NOTHING HERE
FORMAT:	.ASCIC	/format error in HLD.DAT/
SYNTAX:	.ASCIC	/syntax error in HLD.DAT/
SEARCH:	.ASCIC	/task name not found/
NO_HEADER:	.ASCIC	/no header in task file/
NOT_4K:	.ASCIC	/mapped task not on 4k boundary/
BAD_PART:	.ASCIC	/unmapped partition mismatch/
BIG_FILE:	.ASCIC	/file too big for partition/
BIG_PART:	.ASCIC	/partition too big for checkpoint space/
	.PAGE
	.PSECT	HLD$CODE	NOSHR,EXE,RD,NOWRT

;++
; FUNCTIONAL DESCRIPTION:
;
;	HLD$PRINT - FORMATS AND PRINTS A MESSAGE TO THE HLD LOG FILE.
;		THE MESSAGE INCLUDE A NODE NAME, A TASK NAME, A
;		REQUEST TYPE (POSSIBLY "INVALID"), AND AN ERROR
;		INDICATION, IF ANY.
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$PRINT
;
; INPUT PARAMETERS:
;
;	HLD$GT_OPER - ADDRESS OF OPERATION(REQUEST) TYPE MESSAGE COUNTED STRING
;	HLD$GB_ERRORFLG - ERROR MESSAGE NUMBER OR 0
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	FORMATTED MESSAGE TO LOG FILE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

HLD$PRINT::
	MOVAB	W^NULL,R7		; ASSUME NO EXTRA ERROR MESSAGE
	MOVZBL	W^HLD$GB_ERRORFLG,R6	; GET ERROR CODE, IF ANY
	BEQL	10$			; IF EQL NO MORE TEXT
	MOVAB	W^FAILED,R7		; ERROR INTRODUCTION
10$:
	MOVL	W^MSG_ARRAY[R6],R6	; GET ADDRESS OF ERROR MESSAGE
	$FAO_S	CTRSTR=	W^HLD_ANNOUNCE-	; FORMAT MESSAGE
		OUTLEN=W^HLD$GW_PRTLEN-	;
		OUTBUF=W^HLD$GQ_PRTBUF-	;
		P1=	W^HLD$GT_OPER-	; REQUEST TYPE
		P2=	#HLD$GQ_NODEDESC- ; NODENAME
		P3=	#HLD$AT_TSKBUF-	; TASKNAME
		P4=	R7-		; ERROR INTRODUCTION
		P5=	R6		; ERROR MESSAGE ADDRESS, IF ANY
	CHECK_SS			; CHECK STATUS CODE
;
; PRINT THE MESSAGE
;
	MOVW	W^HLD$GW_PRTLEN,-	; UPDATE BUFFER SIZE IN PRINT RAB
		W^HLD$PRTRAB+RAB$W_RSZ	;
	$PUT	RAB=W^HLD$PRTRAB	; OUTPUT THE RECORD
	CHECK_RMS			; CHECK COMPLETION CODE
	RSB				; DONE

	.END
