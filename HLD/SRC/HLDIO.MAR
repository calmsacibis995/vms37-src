	.TITLE	HLDIO - HLD I/O ROUTINES
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: DECNET HOST LOADER (HLD)
;
; ABSTRACT:
;
;	THIS MODULE IS RESPONSIBLE FOR RECEIVING AND TRANSMITTING
;	OVER THE LOGICAL LINK TO SLD AND FOR PERFORMING DISK BLOCK
;	READS AND WRITES.
;
; ENVIRONMENT:
;
;	THE HLD IMAGE EXECUTES IN THE CONTEXT OF A PROCESS CREATED BY
;	NETACP. IT RUNS IN USER MODE AND REQUIRES NETWORK PRIVILEGE.
;
; AUTHOR: SCOTT G. DAVIS,	CREATION DATE: 11-MAY-79
;
; MODIFICATIONS:
;
;--
	.SBTTL	DECLARATIONS

;
; INCLUDE FILES:
;
;
; MACROS:
;
;	NONE
;
; EQUATED SYMBOLS:
;
;	NONE
;
; OWN STORAGE:
;
;	NONE
	.PSECT	HLD$CODE	NOSHR,EXE,RD,NOWRT

;++
; FUNCTIONAL DESCRIPTION:
;
;	HLD$RECEIVE ISSUES A QIO READ REQUEST WITH AN AST ON THE
;	SPECIFIED LINK TO OBTAIN THE NEXT MESSAGE FROM THE OTHER NODE.
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$RECEIVE
;
; INPUT PARAMETERS:
;
;	HLD$GW_IOFUNC - I/O FUNCTION CODE
;	HLD$GL_IOPARAM1 - ADDRESS OF I/O P1
;	HLD$GL_IOPARAM2 - I/O P2
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	WHATEVER $QIO SAYS
;
; SIDE EFFECTS:
;
;	NONE
;
;--

HLD$NET_IO::
	$QIOW_S	-			; ISSUE THE RECEIVE REQUEST
		CHAN=	W^HLD$GW_LNKCHN- ;
		FUNC=	W^HLD$GW_IOFUNC- ;
		IOSB=	W^HLD$GQ_LNKIOSB-  ;
		P1=	@W^HLD$GL_IOPARAM1-
		P2=	W^HLD$GL_IOPARAM2
	BSBB	HLD$CHECK_SS		; CHECK THE SYSTEM SERVICE STATUS
	MOVZWL	W^HLD$GQ_LNKIOSB,R0	; NOW CHECK THE IOSB
					; FALL THROUGH TO CHECK IT


;++
; FUNCTIONAL DESCRIPTION:
;
;	HLD$CHECK_SS CHECKS THE STATUS CODE IN R0 FOLLOWING A CALL TO A
;	SYSTEM SERVICE. IF FAILURE IS INDICATED, THE IMAGE IS TERMINATED
;	WITH R0 AS THE EXIT COMPLETION CODE.
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$CHECK_SS
;
; INPUT PARAMETERS:
;
;	R0	SYSTEM SERVICE STATUS CODE
;
;
; SIDE EFFECTS:
;
;	IF THE SYSTEM SERVICE INDICATES FAILURE, THE IMAGE IS TERMINATED
;	WITH R0 AS THE EXIT COMPLETION CODE.
;
;--

HLD$CHECK_SS::				; CONTROL POINT
	BLBS	R0,10$			; IF LBS OK
	BRW	HLD$EXIT_TO_VMS		; ERROR
10$:
	RSB				; RETURN
	.PAGE
;++
; FUNCTIONAL DESCRIPTION:
;
; HLD$RMS_OPEN - OPEN A FILE
; HLD$RMS_CONNECT -  CONNECT TO A RECORD STREAM
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$RMS_OPEN/CONNECT
;
; INPUT PARAMETERS:
;
;	R0 - FAB ADDRESS (OPEN) OR RAB ADDRESS (CONNECT)
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

HLD$RMS_CONNECT::
	$CONNECT	RAB=R0		; CONNECT THE STREAM
	BRB	HLD$CHECK_RMS		; CHECK OPERATION AND RETURN

HLD$RMS_OPEN::
	$OPEN	FAB=R0			; OPEN THE FILE
	BRB	HLD$CHECK_RMS		; CHECK OPERATION AND RETURN
	.PAGE
;++
; FUNCTIONAL DESCRIPTION:
;
; HLD$DISK_READ - READ A BLOCK FROM THE TASK FILE
; HLD$DISK_WRITE - WRITE A BLOCK TO THE TASK FILE
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$DISK_READ/WRITE
;
; INPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	NONE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	NONE
;
; SIDE EFFECTS:
;
;	NONE
;
;--

HLD$DISK_WRITE::
	$WRITE	RAB=W^HLD$TSKRAB	; WRITE THE BLOCK
	BRB	HLD$CHECK_RMS		; CHECK OPERATION AND RETURN

HLD$DISK_READ::
	$READ	RAB=W^HLD$TSKRAB	; READ THE BLOCK
					; FALL THROUGH TO CHECK RMS OPERATION

;++
; FUNCTIONAL DESCRIPTION:
;
;	HLD$CHECK_RMS CHECKS THE COMPLETION CODE IN R0 FOLLOWING A CALL
;	TO RMS. IF FAILURE (EXCEPT END-OF-FILE) IS INDICATED, THE IMAGE
;	IS TERMINATED WITH R0 AS THE EXIT COMPLETION CODE.
;
; CALLING SEQUENCE:
;
;	BSB/JSB	HLD$CHECK_RMS
;
; INPUT PARAMETERS:
;
;	R0	RMS COMPLETION CODE
;
; IMPLICIT INPUTS:
;
;	NONE
;
; OUTPUT PARAMETERS:
;
;	R1	COMPLETION CODE
;
; IMPLICIT OUTPUTS:
;
;	NONE
;
; COMPLETION CODES:
;
;	R1	0 = RMS COMPLETION CODE IS END-OF-FILE (RMS$_EOF)
;		1 = SUCCESS
;
; SIDE EFFECTS:
;
;	IF THE RMS COMPLETION CODE INDICATES FAILURE (EXCEPT END-OF-FILE),
;	THE IMAGE IS TERMINATED WITH R0 AS THE EXIT COMPLETION CODE.
;
;--

HLD$CHECK_RMS::				; CONTROL POINT
	MOVL	#1,R1			; SET RETURN CODE TO SUCCESS
	BLBS	R0,20$			; WAS RMS FUNCTION SUCCESSFUL?
	CMPW	R0,#<RMS$_EOF&^XFFFF>	; NO, CHECK FOR END-OF-FILE
	BNEQU	30$			; IF NEQU ERROR
	CLRL	R1			; INDICATE END-OF-FILE CONDITION
20$:	RSB				; EXIT
30$:	BRW	HLD$EXIT_TO_VMS		; ERROR

	.END
