	.TITLE	HLDDATA - HLD DATA STORAGE
	.IDENT	'V03-000'

;
;****************************************************************************
;*									    *
;*  COPYRIGHT (c) 1978, 1980, 1982 BY					    *
;*  DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASSACHUSETTS.		    *
;*  ALL RIGHTS RESERVED.						    *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND COPIED   *
;*  ONLY IN  ACCORDANCE WITH  THE  TERMS  OF  SUCH  LICENSE  AND WITH THE   *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE. THIS SOFTWARE OR  ANY  OTHER   *
;*  COPIES THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY   *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE IS  HEREBY   *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS  SUBJECT TO CHANGE WITHOUT NOTICE   *
;*  AND  SHOULD  NOT  BE  CONSTRUED AS  A COMMITMENT BY DIGITAL EQUIPMENT   *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY OF ITS   *
;*  SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.		    *
;* 									    *
;*									    *
;****************************************************************************
;

;++
; FACILITY: DECNET HOST LOADER (HLD)
;
; ABSTRACT:
;
;	HLD IS A COMPONENT OF DECNET-VAX. IT PROVIDES ACCESS TO
;	RSX11S TASK IMAGES STORED ON A VAX/VMS SYSTEM.
;
; ENVIRONMENT:
;
;	THE HLD IMAGE EXECUTES IN THE CONTEXT OF A PROCESS CREATED BY
;	NETACP. IT RUNS IN USER MODE AND REQUIRES NETWORK PRIVILEGE.
;
; AUTHOR: SCOTT G. DAVIS,	CREATION DATE: 11-MAY-79
;
; MODIFICATIONS:
;
;--

;
; INCLUDE FILES:
;
;
; MACROS:
;
;	NONE
;
	.PSECT	HLD$PURE	NOSHR,NOEXE,RD,NOWRT,LONG
;
; EQUATED SYMBOLS:
;
HLD_DISK_SIZE = 512			;

HLD$T_TASK == 0				; OPDATA offset to task name
HLD$W_XFR_SIZE == 0			; OPTDATA offset to transfer size
HLD$B_NLUNS == 2			; OPTDATA offset to number of luns to fix
HLD$W_PART_ADDR == 4			; OPDATA OFFSET TO PARTITION ADDRESS
HLD$W_PART_SIZE == 6			; OPDATA OFFSET TO PARTITION SIZE
HLD$B_LUN_FLAG == 8			; OPDATA OFFSET TO LUN-FIXING FLAG
HLD$B_REQUEST == 9			; OPDATA OFFSET TO REQUEST TYPE
HLD$L_OVL_VBN == 10			; OVERLAY REQUEST VBN
;
; GLOBAL STORAGE:
;
; DEVICE NAME AND LOGICAL NAME DESCRIPTOR BLOCKS WITH TEXT
;

HLD$GQ_LNKNAM::				; DEVICE NAME DESCRIPTOR BLOCK
	.ASCID	/_NET:/			;  FOR THE LINK
HLD$GQ_SYSNAM::				; LOGICAL NAME DESCRIPTOR BLOCK
	.ASCID	/SYS$NET/		;  FOR SYS$NET

	.PSECT	HLD$IMPURE	NOSHR,NOEXE,RD,WRT,LONG

HLD$GQ_NCBDESC::	.BLKQ	1	; NCB DESCRIPTOR
HLD$GT_NCBBUF::	.BLKB	64		; NCB BUFFER
HLD$GQ_NODEDESC::	.BLKL	1	; NODE NAME DESCRIPTOR
		.ADDRESS	HLD$GT_NCBBUF ; NODE IS IN BUFFER
HLD$GQ_LNKIOSB::	.BLKQ	1	; LOGICAL LINK IOSB
HLD$GQ_PRTBUF::	.LONG	200		; PRINT BUFFER DESCRIPTOR
	.ADDRESS	HLD_AB_PRTBUF
HLD$GW_LNKCHN::	.BLKW	1		; LOGICAL LINK CHANNEL
HLD$GW_IOFUNC::	.WORD	IO$_ACCESS	; HOLDS I/O FUNCTION - START WITH CONFIRM
HLD$GW_SAVEFUNC::	.WORD	IO$_WRITEVBLK ; HOLD NETWORK READ/WRITE FUNCTION
HLD$GL_IOROUT_1::
	.ADDRESS	HLD$DISK_READ	; ADDRESS OF I/O ROUTINE 1
HLD$GL_IOROUT_2::
	.ADDRESS	HLD$NET_IO	; ADDRESS OF I/O ROUTINE 2
HLD$GL_IOPARAM1::	.LONG	0	; HOLDS I/O P1
HLD$GL_IOPARAM2::	.BLKL	1	; HOLDS I/O P2
HLD$GT_OPER::	.BLKA	1		; HOLDS ADDRESS OF REQUEST TYPE
HLD$GW_PRTLEN::	.BLKW	1		; LENGTH OF PRINT BUFFER
HLD$GW_IOLEN::	.WORD	512		; Length of non-overlay block transfer
HLD$GB_ERRORFLG::	.BYTE	0	; NUMBER OF ERROR MESSAGE, IF ANY
HLD$GB_MAPFLAG::	.BYTE	0	; TASK FLAG -	0=>MAP (DEFAULT)
					;		1=>UNM
HLD$GB_GPFLAG::	.BYTE	1		; General purpose task flag - 1=>GP
HLD$GB_LUNFLAG::	.BYTE	0	; Lun-fixing flag
HLD$AT_TSKBUF::	.BYTE	6		; FIXED LENGTH OF TASK NAME
		.BLKB	6		; FOR HOLDING COUNTED DECODED TASK NAME


	.ALIGN	LONG			; REQUIRED FOR FABS AND RABS

HLD$TSKFAB::				; FAB FOR TASK FILE
	$FAB	DNM=<.TSK> -		; DEFAULT FILE TYPE
		FAC=<BIO,GET,PUT>	; BLOCK I/O, READ, WRITE

HLD$TSKRAB::				; RAB FOR TASK FILE
	$RAB	FAB=HLD$TSKFAB -	;
		BKT=1 -			; START WITH LABEL BLOCK
		ROP=BIO -		; BLOCK I/O
		UBF=HLD$AB_BUFFER -	; BUFFER
		USZ=HLD_DISK_SIZE	; BLOCK SIZE

HLD$GL_TSKFNA == HLD$TSKFAB+FAB$L_FNA	; FOR STUFFING FILESPEC ADDRESS
HLD$GB_TSKFNS == HLD$TSKFAB+FAB$B_FNS	; FOR STUFFING FILESPEC SIZE
HLD$GL_TSKBKT == HLD$TSKRAB+RAB$L_BKT	; FOR STUFFING BLOCK NUMBER

	.ALIGN	LONG

HLD$PRTFAB::				; FILE ACCESS BLOCK
	$FAB	FAC=PUT-		;
		RAT=CR-			;
		FNM=<SYS$OUTPUT>	;
HLD$PRTRAB::				; RECORD ACCESS BLOCK
	$RAB	FAB=HLD$PRTFAB-		;
		RBF=HLD_AB_PRTBUF-	;
		RSZ=0			; T.B.S. DYNAMICALLY

	.ALIGN	LONG

HLD$DATFAB::				; FAB FOR TASK HLD.DAT TASK FILE
	$FAB	FAC=GET -		;
		FNM=<SYS$SYSTEM:HLD.DAT> - ;
		FOP=SQO			;

HLD$DATRAB::				; RAB FOR HLD.DAT
	$RAB	FAB=HLD$DATFAB -	;
		UBF=HLD_AB_NAMEBUF -	;
		USZ=200			;

HLD$GW_DATRSZ == HLD$DATRAB+RAB$W_RSZ	; ADDRESS OF RECORD LENGTH
HLD$GL_DATRBF == HLD$DATRAB+RAB$L_RBF	; ADDRESS OF RECORD POINTER
HLD$GL_RECEND::	.BLKL	1		; POINTER BEYOND END OF RECORD

HLD_AB_NAMEBUF:	.BLKB	132		; FOR MATCHING TASK NAME, ETC.
HLD_AB_PRTBUF:				; PRINT BUFFER
	.BLKB	200			; SAVE SOME SPACE
HLD$AB_BUFFER::	.BLKB	HLD_DISK_SIZE	; I/O BUFFER

	.END
